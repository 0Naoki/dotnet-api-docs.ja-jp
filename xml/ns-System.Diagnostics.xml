<Namespace Name="System.Diagnostics">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ef6aeaebe2981ce7e1b191a089dab9ae242e488a" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70646284" /></Metadata><Docs>
    <summary><see cref="N:System.Diagnostics" /> 名前空間には、システム プロセス、イベント ログ、およびパフォーマンス カウンターと対話するためのクラスが用意されています。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
-   <xref:System.Diagnostics.EventLog>コンポーネントには、イベントログへの書き込み、イベントログエントリの読み取り、およびネットワーク上のイベントログとイベントソースの作成と削除を行う機能が用意されています。 は<xref:System.Diagnostics.EntryWrittenEventHandler> 、イベントログと非同期でやり取りする手段を提供します。 サポートクラスを使用すると、アクセス許可の制限、イベントログの種類を指定する機能 (イベントログエントリで記述された既定のデータの種類を制御する)、イベントログのコレクションの反復処理など、より詳細な制御が可能になります。entries. これらのタスクの詳細については<xref:System.Diagnostics.EventLogPermission>、 <xref:System.Diagnostics.EventLogEntryType>「」 <xref:System.Diagnostics.EventLogEntryCollection> 、「」、および「」を参照してください。  
  
-   クラス<xref:System.Diagnostics.Process>は、ネットワーク上のシステムプロセスを監視し、ローカルシステムプロセスを開始および停止する機能を提供します。 実行中のプロセスの一覧 (コンピューター、プロセス名、またはプロセス id を指定することによって) を取得したり、現在プロセッサにアクセスできるプロセスに関する情報を表示したりするだけでなく、プロセススレッドの詳細な知識を得ることができます。モジュールは、 <xref:System.Diagnostics.Process>クラス自体を通じて、および<xref:System.Diagnostics.ProcessModule>クラスと<xref:System.Diagnostics.ProcessThread>対話することによって実行されます。 <xref:System.Diagnostics.ProcessStartInfo>クラスを使用すると、入力、出力、エラーストリーム、作業ディレクトリ、コマンドライン動詞、引数など、新しいプロセスを開始するためのさまざまな要素を指定できます。 これらを使用すると、プロセスの動作を細かく制御できます。 他の関連クラスを使用すると、ウィンドウスタイル、プロセスとスレッドの優先順位を指定し、スレッドとモジュールのコレクションを操作できます。  
  
-   クラスを使用すると、システムのパフォーマンスを監視<xref:System.Diagnostics.PerformanceCounterCategory>することができ、クラスは新しいカスタムカウンターおよびカテゴリを作成する方法を提供します。 <xref:System.Diagnostics.PerformanceCounter> ローカルのカスタムカウンターに書き込み、ローカルとリモートの両方のカウンターから読み取ることができます (システムおよびカスタム)。 クラスを使用してカウンター <xref:System.Diagnostics.PerformanceCounter>をサンプリングし、 <xref:System.Diagnostics.CounterSample>クラスを使用して、パフォーマンスカウンターのサンプルの結果を継続的に計算することができます。 <xref:System.Diagnostics.CounterCreationData>クラスを使用すると、1つのカテゴリに複数のカウンターを作成し、その型を指定することができます。 パフォーマンスカウンターコンポーネントに関連付けられている他のクラスは、カウンター、カウンターのアクセス許可、およびカウンターの種類のコレクションへのアクセスを提供します。  
  
 名前<xref:System.Diagnostics>空間には、アプリケーションをデバッグしたり、コードの実行をトレースしたりするためのクラスも用意されています。 詳細については、<xref:System.Diagnostics.Trace> クラスおよび <xref:System.Diagnostics.Debug> クラスを参照してください。  
  
 ]]></format>
    </remarks>
  </Docs>
</Namespace>