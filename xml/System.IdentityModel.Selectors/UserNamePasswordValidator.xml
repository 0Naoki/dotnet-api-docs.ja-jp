<Type Name="UserNamePasswordValidator" FullName="System.IdentityModel.Selectors.UserNamePasswordValidator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="56f3a7d7a2356e9fe1028fc33233bbb8bff2057d" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30416356" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class UserNamePasswordValidator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit UserNamePasswordValidator extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Selectors.UserNamePasswordValidator" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class UserNamePasswordValidator" />
  <TypeSignature Language="C++ CLI" Value="public ref class UserNamePasswordValidator abstract" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="9acc2-101">ユーザー名とパスワードを検証します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="9acc2-101">Validates a username and password.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9acc2-102"><xref:System.IdentityModel.Selectors.UserNamePasswordValidator> クラスを使用して、ユーザー名とパスワードの検証方法を指定します。</span><span class="sxs-lookup"><span data-stu-id="9acc2-102">Use the <xref:System.IdentityModel.Selectors.UserNamePasswordValidator> class to specify how a username and password is validated.</span></span> <span data-ttu-id="9acc2-103">これを行うには、<xref:System.IdentityModel.Selectors.UserNamePasswordValidator> の派生クラスを作成し、<xref:System.IdentityModel.Selectors.UserNamePasswordValidator.Validate%2A> メソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="9acc2-103">This can be done by deriving a class from <xref:System.IdentityModel.Selectors.UserNamePasswordValidator> and override the <xref:System.IdentityModel.Selectors.UserNamePasswordValidator.Validate%2A> method.</span></span> <span data-ttu-id="9acc2-104">カスタムのユーザー名とパスワード検証コントロールの作成の詳細については、次を参照してください。[する方法: カスタムのユーザー名およびパスワード検証を使用して](~/docs/framework/wcf/feature-details/how-to-use-a-custom-user-name-and-password-validator.md)です。</span><span class="sxs-lookup"><span data-stu-id="9acc2-104">For more information about creating a custom user name and password validator, see [How to: Use a Custom User Name and Password Validator](~/docs/framework/wcf/feature-details/how-to-use-a-custom-user-name-and-password-validator.md).</span></span>  
  
   
  
## Examples  
 [!code-csharp[c_UsernameValidator#1](~/samples/snippets/csharp/VS_Snippets_CFX/c_usernamevalidator/cs/service.cs#1)]
 [!code-vb[c_UsernameValidator#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_usernamevalidator/vb/service.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected UserNamePasswordValidator ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.UserNamePasswordValidator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; UserNamePasswordValidator();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9acc2-105">
            <see cref="T:System.IdentityModel.Selectors.UserNamePasswordValidator" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9acc2-105">Initializes a new instance of the <see cref="T:System.IdentityModel.Selectors.UserNamePasswordValidator" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMembershipProviderValidator">
      <MemberSignature Language="C#" Value="public static System.IdentityModel.Selectors.UserNamePasswordValidator CreateMembershipProviderValidator (System.Web.Security.MembershipProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IdentityModel.Selectors.UserNamePasswordValidator CreateMembershipProviderValidator(class System.Web.Security.MembershipProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.UserNamePasswordValidator.CreateMembershipProviderValidator(System.Web.Security.MembershipProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateMembershipProviderValidator (provider As MembershipProvider) As UserNamePasswordValidator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IdentityModel::Selectors::UserNamePasswordValidator ^ CreateMembershipProviderValidator(System::Web::Security::MembershipProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Selectors.UserNamePasswordValidator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.Web.Security.MembershipProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="9acc2-106">ユーザー名とパスワードを検証する <see cref="T:System.Web.Security.MembershipProvider" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9acc2-106">A <see cref="T:System.Web.Security.MembershipProvider" /> to validate the username and password.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9acc2-107">メンバーシップ プロバイダーを指定してユーザー名とパスワードを検証する <see cref="T:System.IdentityModel.Selectors.UserNamePasswordValidator" /> のインスタンスを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9acc2-107">Gets an instance of a <see cref="T:System.IdentityModel.Selectors.UserNamePasswordValidator" /> that validates a username and password using the specified membership provider.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9acc2-108">
            <see cref="T:System.IdentityModel.Selectors.UserNamePasswordValidator" /> を使用しているユーザー名とパスワードを検証する <paramref name="provider" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9acc2-108">An <see cref="T:System.IdentityModel.Selectors.UserNamePasswordValidator" /> that validates a username and password using <paramref name="provider" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9acc2-109">この静的プロパティの値は、<xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator> クラスのコンストラクターへのパラメーターとして指定できます。</span><span class="sxs-lookup"><span data-stu-id="9acc2-109">The value of this static property can be supplied as a parameter to one of the constructors for the <xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="None">
      <MemberSignature Language="C#" Value="public static System.IdentityModel.Selectors.UserNamePasswordValidator None { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.IdentityModel.Selectors.UserNamePasswordValidator None" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Selectors.UserNamePasswordValidator.None" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property None As UserNamePasswordValidator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::IdentityModel::Selectors::UserNamePasswordValidator ^ None { System::IdentityModel::Selectors::UserNamePasswordValidator ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Selectors.UserNamePasswordValidator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9acc2-110">ユーザー名とパスワードに基づいて検証を実行しないバリデーターを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9acc2-110">Gets a validator that performs no validation on the username and password.</span>
          </span>
          <span data-ttu-id="9acc2-111">そのため、ユーザー名とパスワードは常に有効と見なされます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9acc2-111">As a result, the username and password are always deemed valid.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9acc2-112">ユーザー名とパスワードに基づいて検証を実行しない <see cref="T:System.IdentityModel.Selectors.UserNamePasswordValidator" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9acc2-112">An <see cref="T:System.IdentityModel.Selectors.UserNamePasswordValidator" /> that performs no validation on the username and password.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9acc2-113">この静的プロパティの値は、<xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator> クラスのコンストラクターへのパラメーターとして指定できます。</span><span class="sxs-lookup"><span data-stu-id="9acc2-113">The value of this static property can be supplied as a parameter to one of the constructors for the <xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public abstract void Validate (string userName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Validate(string userName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.UserNamePasswordValidator.Validate(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Validate (userName As String, password As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Validate(System::String ^ userName, System::String ^ password);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="userName">
          <span data-ttu-id="9acc2-114">検証するユーザー名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9acc2-114">The username to validate.</span>
          </span>
        </param>
        <param name="password">
          <span data-ttu-id="9acc2-115">検証するパスワード。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9acc2-115">The password to validate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9acc2-116">派生クラスでオーバーライドされる場合、指定されたユーザー名とパスワードを検証します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9acc2-116">When overridden in a derived class, validates the specified username and password.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9acc2-117"><xref:System.IdentityModel.Selectors.UserNamePasswordValidator.Validate%2A> メソッドをオーバーライドして、ユーザー名とパスワードの検証方法を指定します。</span><span class="sxs-lookup"><span data-stu-id="9acc2-117">Override the <xref:System.IdentityModel.Selectors.UserNamePasswordValidator.Validate%2A> method to specify how the username and password is validated.</span></span> <span data-ttu-id="9acc2-118">ユーザー名とパスワードによる検証に失敗した場合、<xref:System.IdentityModel.Tokens.SecurityTokenValidationException> をスローします。</span><span class="sxs-lookup"><span data-stu-id="9acc2-118">If the username and password do not pass validation, then throw a <xref:System.IdentityModel.Tokens.SecurityTokenValidationException>.</span></span>  
  
   
  
## Examples  
 [!code-csharp[c_UsernameValidator#2](~/samples/snippets/csharp/VS_Snippets_CFX/c_usernamevalidator/cs/service.cs#2)]
 [!code-vb[c_UsernameValidator#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_usernamevalidator/vb/service.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>