<Type Name="AssemblyName" FullName="System.Reflection.AssemblyName">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="63046c4a5e2fa477549ff1c772a38af5e9e6aaea" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36543666" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class AssemblyName : ICloneable, System.Runtime.InteropServices._AssemblyName, System.Runtime.Serialization.IDeserializationCallback, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit AssemblyName extends System.Object implements class System.ICloneable, class System.Runtime.InteropServices._AssemblyName, class System.Runtime.Serialization.IDeserializationCallback, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.AssemblyName" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AssemblyName&#xA;Implements _AssemblyName, ICloneable, IDeserializationCallback, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class AssemblyName sealed : ICloneable, System::Runtime::InteropServices::_AssemblyName, System::Runtime::Serialization::IDeserializationCallback, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type AssemblyName = class&#xA;    interface ICloneable&#xA;    interface ISerializable&#xA;    interface IDeserializationCallback&#xA;    interface _AssemblyName" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices._AssemblyName</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IDeserializationCallback</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._AssemblyName))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="8b76c-101">Describes an assembly's unique identity in full.</span>
      <span class="sxs-lookup">
        <span data-stu-id="8b76c-101">Describes an assembly's unique identity in full.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b76c-102"><xref:System.Reflection.AssemblyName>オブジェクトには、そのアセンブリへのバインドを使用することができます、アセンブリに関する情報が含まれています。</span><span class="sxs-lookup"><span data-stu-id="8b76c-102">The <xref:System.Reflection.AssemblyName> object contains information about an assembly, which you can use to bind to that assembly.</span></span> <span data-ttu-id="8b76c-103">次のアセンブリの id で構成されます。</span><span class="sxs-lookup"><span data-stu-id="8b76c-103">An assembly's identity consists of the following:</span></span>  
  
-   <span data-ttu-id="8b76c-104">簡易名です。</span><span class="sxs-lookup"><span data-stu-id="8b76c-104">Simple name.</span></span>  
  
-   <span data-ttu-id="8b76c-105">バージョン番号です。</span><span class="sxs-lookup"><span data-stu-id="8b76c-105">Version number.</span></span>  
  
-   <span data-ttu-id="8b76c-106">暗号化キーのペア。</span><span class="sxs-lookup"><span data-stu-id="8b76c-106">Cryptographic key pair.</span></span>  
  
-   <span data-ttu-id="8b76c-107">サポートされるカルチャ。</span><span class="sxs-lookup"><span data-stu-id="8b76c-107">Supported culture.</span></span>  
  
 <span data-ttu-id="8b76c-108">単純な名前は、通常、その拡張子を除いたマニフェスト ファイルのファイル名です。</span><span class="sxs-lookup"><span data-stu-id="8b76c-108">The simple name is typically the file name for the manifest file without its extension.</span></span> <span data-ttu-id="8b76c-109">キーのペアには、パブリックおよびプライベートのキーが含まれています。 アセンブリの厳密な名前の署名を作成するために使用します。</span><span class="sxs-lookup"><span data-stu-id="8b76c-109">The key pair includes a public and private key, used to create strong-name signatures for assemblies.</span></span>  
  
 <span data-ttu-id="8b76c-110">共通言語ランタイムをサポートするすべてのコンパイラでは、入れ子になったクラスの簡易名を出力し、リフレクションは、次の規則に従って、照会されたときに、完全修飾名を構築します。</span><span class="sxs-lookup"><span data-stu-id="8b76c-110">All compilers that support the common language runtime will emit the simple name of a nested class, and reflection constructs a mangled name when queried, in accordance with the following conventions.</span></span>  
  
|<span data-ttu-id="8b76c-111">区切り記号</span><span class="sxs-lookup"><span data-stu-id="8b76c-111">Delimiter</span></span>|<span data-ttu-id="8b76c-112">説明</span><span class="sxs-lookup"><span data-stu-id="8b76c-112">Meaning</span></span>|  
|---------------|-------------|  
|<span data-ttu-id="8b76c-113">円記号 (\\)</span><span class="sxs-lookup"><span data-stu-id="8b76c-113">Backslash (\\)</span></span>|<span data-ttu-id="8b76c-114">文字をエスケープします。</span><span class="sxs-lookup"><span data-stu-id="8b76c-114">Escape character.</span></span>|  
|<span data-ttu-id="8b76c-115">コンマ (,)</span><span class="sxs-lookup"><span data-stu-id="8b76c-115">Comma (,)</span></span>|<span data-ttu-id="8b76c-116">アセンブリ名の前にします。</span><span class="sxs-lookup"><span data-stu-id="8b76c-116">Precedes the assembly name.</span></span>|  
|<span data-ttu-id="8b76c-117">プラス記号 (+)</span><span class="sxs-lookup"><span data-stu-id="8b76c-117">Plus sign (+)</span></span>|<span data-ttu-id="8b76c-118">入れ子になったクラスが前に付きます。</span><span class="sxs-lookup"><span data-stu-id="8b76c-118">Precedes a nested class.</span></span>|  
  
 <span data-ttu-id="8b76c-119">たとえば、クラスの完全修飾名は、次のようになります。</span><span class="sxs-lookup"><span data-stu-id="8b76c-119">For example, the fully qualified name for a class might look like this:</span></span>  
  
 <span data-ttu-id="8b76c-120">ContainingClass + NestedClass、MyAssembly</span><span class="sxs-lookup"><span data-stu-id="8b76c-120">ContainingClass+NestedClass,MyAssembly</span></span>  
  
 <span data-ttu-id="8b76c-121">A"では"になります"\\+\\+"、および"\\「が」\\\\"です。</span><span class="sxs-lookup"><span data-stu-id="8b76c-121">A "++" becomes "\\+\\+", and a "\\" becomes "\\\\".</span></span>  
  
 <span data-ttu-id="8b76c-122">この修飾名を永続化し、読み込みに使用された後で、<xref:System.Type>です。</span><span class="sxs-lookup"><span data-stu-id="8b76c-122">This qualified name can be persisted and later used to load the <xref:System.Type>.</span></span> <span data-ttu-id="8b76c-123">検索して読み込む、<xref:System.Type>を使用して<xref:System.Type.GetType%2A>のみまたはアセンブリ修飾型名を持つという名前を型のいずれか。</span><span class="sxs-lookup"><span data-stu-id="8b76c-123">To search for and load a <xref:System.Type>, use <xref:System.Type.GetType%2A> either with the type name only or with the assembly qualified type name.</span></span> <span data-ttu-id="8b76c-124"><xref:System.Type.GetType%2A> 型と名前のみが検索、<xref:System.Type>呼び出し元のアセンブリにし、システム アセンブリです。</span><span class="sxs-lookup"><span data-stu-id="8b76c-124"><xref:System.Type.GetType%2A> with the type name only will look for the <xref:System.Type> in the caller's assembly and then in the System assembly.</span></span> <span data-ttu-id="8b76c-125"><xref:System.Type.GetType%2A> アセンブリ修飾型名は探します、<xref:System.Type>任意のアセンブリにします。</span><span class="sxs-lookup"><span data-stu-id="8b76c-125"><xref:System.Type.GetType%2A> with the assembly qualified type name will look for the <xref:System.Type> in any assembly.</span></span>  
  
 <span data-ttu-id="8b76c-126">完全に指定された<xref:System.Reflection.AssemblyName>メジャー バージョン、マイナー、ビルド番号、およびリビジョン番号パラメーターの名前、カルチャ、公開キーまたは公開キー トークン、必要があります。</span><span class="sxs-lookup"><span data-stu-id="8b76c-126">A fully specified <xref:System.Reflection.AssemblyName> must have the name, culture, public key or public key token, major version, minor version, build number, and revision number parameters.</span></span> <span data-ttu-id="8b76c-127">最後の 4 つにパッケージ化、<xref:System.Version>型です。</span><span class="sxs-lookup"><span data-stu-id="8b76c-127">The last four are packaged in the <xref:System.Version> type.</span></span>  
  
 <span data-ttu-id="8b76c-128">単純な名前を作成するには、作成、<xref:System.Reflection.AssemblyName>オブジェクトの既定のコンス トラクターを使用して、設定、<xref:System.Reflection.AssemblyName.Name%2A>です。</span><span class="sxs-lookup"><span data-stu-id="8b76c-128">To create a simple name, create an <xref:System.Reflection.AssemblyName> object using the default constructor and set the <xref:System.Reflection.AssemblyName.Name%2A>.</span></span> <span data-ttu-id="8b76c-129">その他のプロパティはオプションです。</span><span class="sxs-lookup"><span data-stu-id="8b76c-129">The other properties are optional.</span></span>  
  
 <span data-ttu-id="8b76c-130">完全な厳密な名前を作成するには、作成、<xref:System.Reflection.AssemblyName>オブジェクトの既定のコンス トラクターを使用して、設定、<xref:System.Reflection.AssemblyName.Name%2A>と<xref:System.Reflection.AssemblyName.KeyPair%2A>です。</span><span class="sxs-lookup"><span data-stu-id="8b76c-130">To create a full strong name, create an <xref:System.Reflection.AssemblyName> object using the default constructor and set the <xref:System.Reflection.AssemblyName.Name%2A> and <xref:System.Reflection.AssemblyName.KeyPair%2A>.</span></span> <span data-ttu-id="8b76c-131">その他のプロパティはオプションです。</span><span class="sxs-lookup"><span data-stu-id="8b76c-131">The other properties are optional.</span></span> <span data-ttu-id="8b76c-132">使用して<xref:System.Reflection.AssemblyName.SetPublicKey%2A>と<xref:System.Reflection.AssemblyName.SetPublicKeyToken%2A>公開キーと厳密な名前を設定します。</span><span class="sxs-lookup"><span data-stu-id="8b76c-132">Use <xref:System.Reflection.AssemblyName.SetPublicKey%2A> and <xref:System.Reflection.AssemblyName.SetPublicKeyToken%2A> to set the public key and the strong name.</span></span> <span data-ttu-id="8b76c-133">厳密な名前の署名はでは常に、<xref:System.Security.Cryptography.SHA1>ハッシュ アルゴリズム。</span><span class="sxs-lookup"><span data-stu-id="8b76c-133">The strong name signing always uses the <xref:System.Security.Cryptography.SHA1> hash algorithm.</span></span>  
  
 <span data-ttu-id="8b76c-134">名前が正しく構築されていることを確認するには、するには、次のプロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="8b76c-134">To ensure that the names are constructed correctly, use the following properties:</span></span>  
  
-   <xref:System.Reflection.Assembly.FullName%2A?displayProperty=nameWithType>  
  
-   <xref:System.Reflection.AssemblyName.FullName%2A?displayProperty=nameWithType>  
  
-   <xref:System.Type.AssemblyQualifiedName%2A?displayProperty=nameWithType>  
  
 <span data-ttu-id="8b76c-135">使用して名前を取得することもできます、`/l`オプションは、 [Gacutil.exe (グローバル アセンブリ キャッシュ ツール)](~/docs/framework/tools/gacutil-exe-gac-tool.md)</span><span class="sxs-lookup"><span data-stu-id="8b76c-135">You can also get the name by using the `/l` option with the [Gacutil.exe (Global Assembly Cache Tool)](~/docs/framework/tools/gacutil-exe-gac-tool.md)</span></span>  
  
 <span data-ttu-id="8b76c-136">部分的に指定した厳密な名前では、作成、<xref:System.Reflection.AssemblyName>オブジェクトの既定のコンス トラクターを使用して、名前と公開キーを設定します。</span><span class="sxs-lookup"><span data-stu-id="8b76c-136">For a partially specified strong name, create an <xref:System.Reflection.AssemblyName> object using the default constructor and set the name and public key.</span></span> <span data-ttu-id="8b76c-137">このようなを使用して作成されたアセンブリ、<xref:System.Reflection.AssemblyName>アセンブリ リンカー (Al.exe) を使用して後で署名することができます。</span><span class="sxs-lookup"><span data-stu-id="8b76c-137">An assembly created using such an <xref:System.Reflection.AssemblyName> can be signed later using the Assembly Linker (Al.exe).</span></span>  
  
 <span data-ttu-id="8b76c-138">公開キーを指定することはおよび<xref:System.Reflection.AssemblyName.KeyPair%2A>一貫性のない値を使用します。</span><span class="sxs-lookup"><span data-stu-id="8b76c-138">It is possible to specify a public key and a <xref:System.Reflection.AssemblyName.KeyPair%2A> with inconsistent values.</span></span> <span data-ttu-id="8b76c-139">これは、開発者のシナリオで役立ちます。</span><span class="sxs-lookup"><span data-stu-id="8b76c-139">This can be useful in developer scenarios.</span></span> <span data-ttu-id="8b76c-140">公開キーを使用して取得ここでは、<xref:System.Reflection.AssemblyName.GetPublicKey%2A>正しい公開キー、実行中の指定、<xref:System.Reflection.AssemblyName.KeyPair%2A>開発時に使用されるパブリックおよびプライベートのキーを指定します。</span><span class="sxs-lookup"><span data-stu-id="8b76c-140">In this case, the public key retrieved with <xref:System.Reflection.AssemblyName.GetPublicKey%2A> specifies the correct public key, while the <xref:System.Reflection.AssemblyName.KeyPair%2A> specifies the public and private keys used during development.</span></span> <span data-ttu-id="8b76c-141">ランタイムに不一致が検出された場合、<xref:System.Reflection.AssemblyName.KeyPair%2A>検出して、公開キー レジストリに公開キーに一致する正しいキー。</span><span class="sxs-lookup"><span data-stu-id="8b76c-141">When the runtime detects a mismatch between the <xref:System.Reflection.AssemblyName.KeyPair%2A> and the public key, it looks up in the registry the correct key that matches the public key.</span></span>  
  
 <span data-ttu-id="8b76c-142">表示名の形式、<xref:System.Reflection.AssemblyName>カンマ区切りの Unicode 文字列で始まる名前は、次のようにします。</span><span class="sxs-lookup"><span data-stu-id="8b76c-142">The format of the display name of an <xref:System.Reflection.AssemblyName> is a comma-delimited Unicode string that begins with the name, as follows:</span></span>  
  
 `Name <,Culture = CultureInfo> <,Version = Major.Minor.Build.Revision> <, StrongName> <,PublicKeyToken> '\0'`  
  
 <span data-ttu-id="8b76c-143">`Name` アセンブリのテキスト形式の名前です。</span><span class="sxs-lookup"><span data-stu-id="8b76c-143">`Name` is the textual name of the assembly.</span></span> <span data-ttu-id="8b76c-144">`CultureInfo` RFC1766 形式で定義されているカルチャです。</span><span class="sxs-lookup"><span data-stu-id="8b76c-144">`CultureInfo` is the RFC1766-format-defined culture.</span></span> <span data-ttu-id="8b76c-145">`Major`、 `Minor`、 `Build`、および`Revision`はメジャー バージョン、マイナー バージョン、ビルド番号、およびアセンブリのリビジョン番号。</span><span class="sxs-lookup"><span data-stu-id="8b76c-145">`Major`, `Minor`, `Build`, and `Revision` are the major version, minor version, build number, and revision number of the assembly.</span></span> <span data-ttu-id="8b76c-146">`StrongName` 16 進でエンコードされた低位の 64 ビットの sha-1 ハッシュ アルゴリズムを使用して生成された公開キーと公開キーで指定されたハッシュ値<xref:System.Reflection.AssemblyName.SetPublicKey%2A>です。</span><span class="sxs-lookup"><span data-stu-id="8b76c-146">`StrongName` is the hexadecimal-encoded low-order 64 bits of the hash value of the public key generated using the SHA-1 hashing algorithm and the public key specified by <xref:System.Reflection.AssemblyName.SetPublicKey%2A>.</span></span> <span data-ttu-id="8b76c-147">`PublicKeyToken` 指定された 16 進でエンコードされた公開キーは、<xref:System.Reflection.AssemblyName.SetPublicKey%2A>です。</span><span class="sxs-lookup"><span data-stu-id="8b76c-147">`PublicKeyToken` is the hexadecimal-encoded public key specified by <xref:System.Reflection.AssemblyName.SetPublicKey%2A>.</span></span>  
  
 <span data-ttu-id="8b76c-148">バイナリ オブジェクトの各バイトの最小から 2 つの 16 進文字への変換としてでは、16 進エンコードが定義されている最上位バイトにします。</span><span class="sxs-lookup"><span data-stu-id="8b76c-148">Hexadecimal encoding is defined as the conversion of each byte of a binary object to two hexadecimal characters, progressing from least to most significant byte.</span></span> <span data-ttu-id="8b76c-149">必要に応じて、他の表示値が追加されます。</span><span class="sxs-lookup"><span data-stu-id="8b76c-149">Additional display values will be added as deemed necessary.</span></span>  
  
 <span data-ttu-id="8b76c-150">完全な公開キーがわかっている場合は、厳密な名前の公開鍵を置き換えられる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="8b76c-150">If the full public key is known, then PublicKey may be substituted for StrongName.</span></span>  
  
 <span data-ttu-id="8b76c-151">除くもなお`Name`、最初に発生する必要があります、パラメーターの構文上の順序は重要ではありません。</span><span class="sxs-lookup"><span data-stu-id="8b76c-151">Also note that except for `Name`, which must come first, the lexical order of parameters is unimportant.</span></span> <span data-ttu-id="8b76c-152">ただし、任意のパラメーター (`Version`、 `Culture`、`StrongName`または`PublicKey`) 以外に設定を省略すると見なされます、<xref:System.Reflection.AssemblyName>部分そのと見なされます。</span><span class="sxs-lookup"><span data-stu-id="8b76c-152">However, any parameter (`Version`, `Culture`, `StrongName` or `PublicKey`) not specifically set is considered to be omitted, and the <xref:System.Reflection.AssemblyName> is then considered partial.</span></span> <span data-ttu-id="8b76c-153">情報の一部を指定する場合は、上記で説明した順序でパラメーターの名前を指定してください。</span><span class="sxs-lookup"><span data-stu-id="8b76c-153">When specifying partial information, Name parameters must be specified in the order described above.</span></span>  
  
 <span data-ttu-id="8b76c-154">表示名を規則を指定するとき`StrongName =null`または`PublicKey= null`バインドと、単に名前付きアセンブリに対して一致が必要であることを示します。</span><span class="sxs-lookup"><span data-stu-id="8b76c-154">When supplying a display name, the convention `StrongName =null` or `PublicKey= null` indicates that binding and matching against a simply named assembly is required.</span></span> <span data-ttu-id="8b76c-155">また、 `Culture= ""` (空の文字列を表す二重引用符) では、既定のカルチャと一致することを示します。</span><span class="sxs-lookup"><span data-stu-id="8b76c-155">Additionally, the convention `Culture= ""` (double quote representing an empty string) indicates matching against the default culture.</span></span>  
  
 <span data-ttu-id="8b76c-156">次の例は、<xref:System.Reflection.AssemblyName>の既定のカルチャで単に名前付きアセンブリのです。</span><span class="sxs-lookup"><span data-stu-id="8b76c-156">The following example shows an <xref:System.Reflection.AssemblyName> for a simply named assembly with default culture.</span></span>  
  
```  
ExampleAssembly, Culture=""  
```  
  
 <span data-ttu-id="8b76c-157">次に、カルチャが "en" の厳密な名前のアセンブリに対する完全に指定された参照の例を示します。</span><span class="sxs-lookup"><span data-stu-id="8b76c-157">The following example shows a fully specified reference for a strongly named assembly with culture "en".</span></span>  
  
```  
ExampleAssembly, Version=1.0.0.0, Culture=en, PublicKeyToken=a5d015c7d5a0b012  
```  
  
   
  
## Examples  
 <span data-ttu-id="8b76c-158">この例では、さまざまなリフレクション クラスを使用してアセンブリに含まれるメタデータを分析する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="8b76c-158">This example shows how to use various reflection classes to analyze the metadata contained in an assembly.</span></span>  
  
 [!code-cpp[Reflection#1](~/samples/snippets/cpp/VS_Snippets_CLR/Reflection/CPP/reflection.cpp#1)]
 [!code-csharp[Reflection#1](~/samples/snippets/csharp/VS_Snippets_CLR/Reflection/CS/Reflection.cs#1)]
 [!code-vb[Reflection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Reflection/VB/Reflection.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Version" />
    <altmember cref="M:System.Reflection.AssemblyName.GetPublicKey" />
    <altmember cref="M:System.Reflection.AssemblyName.GetPublicKeyToken" />
    <altmember cref="M:System.Reflection.AssemblyName.SetPublicKey(System.Byte[])" />
    <altmember cref="M:System.Reflection.AssemblyName.SetPublicKeyToken(System.Byte[])" />
    <altmember cref="P:System.Type.FullName" />
    <altmember cref="M:System.Type.GetType" />
    <altmember cref="P:System.Type.AssemblyQualifiedName" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8b76c-159">Initializes a new instance of the <see cref="T:System.Reflection.AssemblyName" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-159">Initializes a new instance of the <see cref="T:System.Reflection.AssemblyName" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssemblyName ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AssemblyName();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8b76c-160">Initializes a new instance of the <see cref="T:System.Reflection.AssemblyName" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-160">Initializes a new instance of the <see cref="T:System.Reflection.AssemblyName" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8b76c-161">次の例では、という名前の動的アセンブリ`MyAssembly.exe`し、ハード_ディスクに保存します。</span><span class="sxs-lookup"><span data-stu-id="8b76c-161">The following example creates a dynamic assembly named `MyAssembly.exe` and saves it to your hard disk.</span></span> <span data-ttu-id="8b76c-162">例を実行すると、使用することができます、 [Ildasm.exe (IL 逆アセンブラー)](~/docs/framework/tools/ildasm-exe-il-disassembler.md)をアセンブリのメタデータを確認します。</span><span class="sxs-lookup"><span data-stu-id="8b76c-162">After running the example, you can use the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to examine the assembly metadata.</span></span>  
  
 [!code-cpp[AssemblyName_Constructor#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_Constructor/CPP/assemblyname_constructor.cpp#1)]
 [!code-csharp[AssemblyName_Constructor#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_Constructor/CS/assemblyname_constructor.cs#1)]
 [!code-vb[AssemblyName_Constructor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_Constructor/VB/assemblyname_constructor.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssemblyName (string assemblyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string assemblyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (assemblyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AssemblyName(System::String ^ assemblyName);" />
      <MemberSignature Language="F#" Value="new System.Reflection.AssemblyName : string -&gt; System.Reflection.AssemblyName" Usage="new System.Reflection.AssemblyName assemblyName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyName">
          <span data-ttu-id="8b76c-163">The display name of the assembly, as returned by the <see cref="P:System.Reflection.AssemblyName.FullName" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-163">The display name of the assembly, as returned by the <see cref="P:System.Reflection.AssemblyName.FullName" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b76c-164">Initializes a new instance of the <see cref="T:System.Reflection.AssemblyName" /> class with the specified display name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-164">Initializes a new instance of the <see cref="T:System.Reflection.AssemblyName" /> class with the specified display name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b76c-165">指定された`assemblyName`が解析されると新しいの適切なフィールド<xref:System.Reflection.AssemblyName>の表示名の値で初期化します。</span><span class="sxs-lookup"><span data-stu-id="8b76c-165">The supplied `assemblyName` is parsed, and the appropriate fields of the new <xref:System.Reflection.AssemblyName> are initialized with values from the display name.</span></span> <span data-ttu-id="8b76c-166">これは、表示名を解析のことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="8b76c-166">This is the recommended way of parsing display names.</span></span> <span data-ttu-id="8b76c-167">表示名を解析するコードを記述することは推奨されません。</span><span class="sxs-lookup"><span data-stu-id="8b76c-167">Writing your own code to parse display names is not recommended.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8b76c-168">次の例のインスタンスを作成する<xref:System.Reflection.AssemblyName>の表示名。</span><span class="sxs-lookup"><span data-stu-id="8b76c-168">The following example creates an instance of <xref:System.Reflection.AssemblyName> from a display name.</span></span> <span data-ttu-id="8b76c-169">表示名の個々 の要素では、コンソールに出力のプロパティとして、<xref:System.Reflection.AssemblyName>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8b76c-169">The individual elements of the display name are output to the console as properties of the <xref:System.Reflection.AssemblyName> object.</span></span>  
  
 [!code-cpp[AssemblyName_Constructor_2#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_Constructor_2/CPP/source.cpp#1)]
 [!code-csharp[AssemblyName_Constructor_2#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_Constructor_2/CS/source.cs#1)]
 [!code-vb[AssemblyName_Constructor_2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_Constructor_2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8b76c-170">
            <paramref name="assemblyName" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-170">
              <paramref name="assemblyName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8b76c-171">
            <paramref name="assemblyName" /> is a zero length string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-171">
              <paramref name="assemblyName" /> is a zero length string.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="8b76c-172">
            <block subset="none" type="note">
              <para> In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <see cref="T:System.IO.IOException" />, instead.  </para>
            </block>  The referenced assembly could not be found, or could not be loaded.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-172">
              <block subset="none" type="note">
                <para> In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <see cref="T:System.IO.IOException" />, instead.  </para>
              </block>  The referenced assembly could not be found, or could not be loaded.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="assemblyName.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8b76c-173">Makes a copy of this <see cref="T:System.Reflection.AssemblyName" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-173">Makes a copy of this <see cref="T:System.Reflection.AssemblyName" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b76c-174">An object that is a copy of this <see cref="T:System.Reflection.AssemblyName" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-174">An object that is a copy of this <see cref="T:System.Reflection.AssemblyName" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b76c-175">新しいオブジェクトが、作成元と同じです。</span><span class="sxs-lookup"><span data-stu-id="8b76c-175">A new object is created, identical to the original.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CodeBase">
      <MemberSignature Language="C#" Value="public string CodeBase { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CodeBase" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.AssemblyName.CodeBase" />
      <MemberSignature Language="VB.NET" Value="Public Property CodeBase As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CodeBase { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CodeBase : string with get, set" Usage="System.Reflection.AssemblyName.CodeBase" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8b76c-176">Gets or sets the location of the assembly as a URL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-176">Gets or sets the location of the assembly as a URL.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8b76c-177">アセンブリの場所を表す文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-177">A string that is the URL location of the assembly.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b76c-178">アセンブリが読み込まれると、この値も取得できますを使用して、<xref:System.Reflection.Assembly.CodeBase%2A?displayProperty=nameWithType>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="8b76c-178">When an assembly is loaded, this value can also be obtained using the <xref:System.Reflection.Assembly.CodeBase%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="8b76c-179">アセンブリがバイト配列として読み込まれた、このプロパティはの呼び出し元の場所を返します、<xref:System.Reflection.Assembly.Load%28System.Byte%5B%5D%29>メソッドのオーバー ロード、読み込まれたアセンブリの場所ではありません。</span><span class="sxs-lookup"><span data-stu-id="8b76c-179">If the assembly was loaded as a byte array, this property returns the location of the caller of the <xref:System.Reflection.Assembly.Load%28System.Byte%5B%5D%29> method overload, not the location of the loaded assembly.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8b76c-180">使用しないで、<xref:System.Reflection.AssemblyName>のみを持つ、<xref:System.Reflection.AssemblyName.CodeBase%2A>プロパティ セットです。</span><span class="sxs-lookup"><span data-stu-id="8b76c-180">Do not use an <xref:System.Reflection.AssemblyName> with only the <xref:System.Reflection.AssemblyName.CodeBase%2A> property set.</span></span> <span data-ttu-id="8b76c-181"><xref:System.Reflection.AssemblyName.CodeBase%2A>プロパティがすべての要素を指定しないアセンブリの id (名前、バージョンなど) のための読み込みは発生しません - id によって負荷の規則に従ってから想定されるよう、<xref:System.Reflection.Assembly.Load%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="8b76c-181">The <xref:System.Reflection.AssemblyName.CodeBase%2A> property does not supply any elements of the assembly identity (such as name or version), so loading does not occur according to load-by-identity rules, as you would expect from the <xref:System.Reflection.Assembly.Load%2A> method.</span></span> <span data-ttu-id="8b76c-182">代わりに、アセンブリでは、読み込み元の規則を使用してが読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="8b76c-182">Instead, the assembly is loaded using load-from rules.</span></span> <span data-ttu-id="8b76c-183">読み込み元コンテキストを使用して、短所については、次を参照してください。、<xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType>メソッドのオーバー ロードまたは[アセンブリの読み込みのベスト プラクティス](~/docs/framework/deployment/best-practices-for-assembly-loading.md)です。</span><span class="sxs-lookup"><span data-stu-id="8b76c-183">For information about the disadvantages of using the load-from context, see the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> method overload or [Best Practices for Assembly Loading](~/docs/framework/deployment/best-practices-for-assembly-loading.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8b76c-184">次の例では、動的アセンブリを生成し、現在のディレクトリに保存します。</span><span class="sxs-lookup"><span data-stu-id="8b76c-184">The following example emits a dynamic assembly and saves it to the current directory.</span></span> <span data-ttu-id="8b76c-185">アセンブリの作成時に、<xref:System.Reflection.AssemblyName.CodeBase%2A>アセンブリが保存されているディレクトリを指定するプロパティが使用されます。</span><span class="sxs-lookup"><span data-stu-id="8b76c-185">When the assembly is created, the <xref:System.Reflection.AssemblyName.CodeBase%2A> property is used to specify the directory where the assembly is saved.</span></span>  
  
 [!code-cpp[AssemblyName_CodeBase#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_CodeBase/CPP/assemblyname_codebase.cpp#1)]
 [!code-csharp[AssemblyName_CodeBase#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_CodeBase/CS/assemblyname_codebase.cs#1)]
 [!code-vb[AssemblyName_CodeBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_CodeBase/VB/assemblyname_codebase.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public System.Reflection.AssemblyContentType ContentType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.AssemblyContentType ContentType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.AssemblyName.ContentType" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentType As AssemblyContentType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::AssemblyContentType ContentType { System::Reflection::AssemblyContentType get(); void set(System::Reflection::AssemblyContentType value); };" />
      <MemberSignature Language="F#" Value="member this.ContentType : System.Reflection.AssemblyContentType with get, set" Usage="System.Reflection.AssemblyName.ContentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.AssemblyContentType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8b76c-186">Gets or sets a value that indicates what type of content the assembly contains.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-186">Gets or sets a value that indicates what type of content the assembly contains.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8b76c-187">アセンブリのコンテンツの種類を示す値が含まれています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-187">A value that indicates what type of content the assembly contains.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CultureInfo">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo CultureInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo CultureInfo" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.AssemblyName.CultureInfo" />
      <MemberSignature Language="VB.NET" Value="Public Property CultureInfo As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ CultureInfo { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CultureInfo : System.Globalization.CultureInfo with get, set" Usage="System.Reflection.AssemblyName.CultureInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8b76c-188">Gets or sets the culture supported by the assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-188">Gets or sets the culture supported by the assembly.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8b76c-189">アセンブリがサポートするカルチャを表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-189">An object that represents the culture supported by the assembly.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8b76c-190">次の例では、動的アセンブリを生成し、現在のディレクトリに保存します。</span><span class="sxs-lookup"><span data-stu-id="8b76c-190">The following example emits a dynamic assembly and saves it to the current directory.</span></span> <span data-ttu-id="8b76c-191">アセンブリの作成時に、<xref:System.Reflection.AssemblyName.CultureInfo%2A>プロパティの使用をアセンブリの表示名の一部では、カルチャを指定します。</span><span class="sxs-lookup"><span data-stu-id="8b76c-191">When the assembly is created, the <xref:System.Reflection.AssemblyName.CultureInfo%2A> property is used to specify the culture, which is part of the assembly's display name.</span></span>  
  
 [!code-cpp[AssemblyName_CodeBase#2](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_CodeBase/CPP/assemblyname_codebase.cpp#2)]
 [!code-csharp[AssemblyName_CodeBase#2](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_CodeBase/CS/assemblyname_codebase.cs#2)]
 [!code-vb[AssemblyName_CodeBase#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_CodeBase/VB/assemblyname_codebase.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CultureName">
      <MemberSignature Language="C#" Value="public string CultureName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CultureName" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.AssemblyName.CultureName" />
      <MemberSignature Language="VB.NET" Value="Public Property CultureName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CultureName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CultureName : string with get, set" Usage="System.Reflection.AssemblyName.CultureName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8b76c-192">Gets or sets the name of the culture associated with the assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-192">Gets or sets the name of the culture associated with the assembly.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8b76c-193">カルチャ名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-193">The culture name.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EscapedCodeBase">
      <MemberSignature Language="C#" Value="public string EscapedCodeBase { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EscapedCodeBase" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.AssemblyName.EscapedCodeBase" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EscapedCodeBase As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EscapedCodeBase { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EscapedCodeBase : string" Usage="System.Reflection.AssemblyName.EscapedCodeBase" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8b76c-194">Gets the URI, including escape characters, that represents the codebase.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-194">Gets the URI, including escape characters, that represents the codebase.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8b76c-195">エスケープ文字を含んだ URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-195">A URI with escape characters.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Flags">
      <MemberSignature Language="C#" Value="public System.Reflection.AssemblyNameFlags Flags { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.AssemblyNameFlags Flags" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.AssemblyName.Flags" />
      <MemberSignature Language="VB.NET" Value="Public Property Flags As AssemblyNameFlags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::AssemblyNameFlags Flags { System::Reflection::AssemblyNameFlags get(); void set(System::Reflection::AssemblyNameFlags value); };" />
      <MemberSignature Language="F#" Value="member this.Flags : System.Reflection.AssemblyNameFlags with get, set" Usage="System.Reflection.AssemblyName.Flags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.AssemblyNameFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8b76c-196">Gets or sets the attributes of the assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-196">Gets or sets the attributes of the assembly.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8b76c-197">アセンブリの属性を表す値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-197">A value that represents the attributes of the assembly.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8b76c-198">次の例では、動的アセンブリを生成し、現在のディレクトリに保存します。</span><span class="sxs-lookup"><span data-stu-id="8b76c-198">The following example emits a dynamic assembly and saves it to the current directory.</span></span> <span data-ttu-id="8b76c-199">アセンブリの作成時に、<xref:System.Reflection.AssemblyName.Flags%2A>プロパティを使用して、アセンブリに公開キーがあることを指定します。</span><span class="sxs-lookup"><span data-stu-id="8b76c-199">When the assembly is created, the <xref:System.Reflection.AssemblyName.Flags%2A> property is used to specify that the assembly has a public key.</span></span>  
  
 [!code-cpp[AssemblyName_KeyPair#4](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_KeyPair/CPP/assemblyname_keypair.cpp#4)]
 [!code-csharp[AssemblyName_KeyPair#4](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_KeyPair/CS/assemblyname_keypair.cs#4)]
 [!code-vb[AssemblyName_KeyPair#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_KeyPair/VB/assemblyname_keypair.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FullName">
      <MemberSignature Language="C#" Value="public string FullName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullName" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.AssemblyName.FullName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FullName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FullName : string" Usage="System.Reflection.AssemblyName.FullName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8b76c-200">Gets the full name of the assembly, also known as the display name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-200">Gets the full name of the assembly, also known as the display name.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8b76c-201">表示名とも呼ばれる、アセンブリの完全名を表す文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-201">A string that is the full name of the assembly, also known as the display name.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b76c-202">表示名は通常、簡易名、バージョン番号、サポートされるカルチャ、および公開キーで構成されます。</span><span class="sxs-lookup"><span data-stu-id="8b76c-202">The display name typically consists of the simple name, version number, supported culture, and public key.</span></span> <span data-ttu-id="8b76c-203">例えば:</span><span class="sxs-lookup"><span data-stu-id="8b76c-203">For example:</span></span>  
  
```  
mylib, Version=1.2.1900.0, Culture=neutral, PublicKeyToken=a14f3033def15840  
```  
  
 <span data-ttu-id="8b76c-204">表示名を解析するコードを記述することは推奨されません。</span><span class="sxs-lookup"><span data-stu-id="8b76c-204">Writing your own code to parse display names is not recommended.</span></span> <span data-ttu-id="8b76c-205">代わりに、表示名を渡す、<xref:System.Reflection.AssemblyName.%23ctor%2A>コンス トラクターがそれを解析し、新しいの適切なフィールドを設定します、<xref:System.Reflection.AssemblyName>です。</span><span class="sxs-lookup"><span data-stu-id="8b76c-205">Instead, pass the display name to the <xref:System.Reflection.AssemblyName.%23ctor%2A> constructor, which parses it and populates the appropriate fields of the new <xref:System.Reflection.AssemblyName>.</span></span>  
  
 <span data-ttu-id="8b76c-206">アセンブリが読み込まれると、この値も取得できますを使用して、<xref:System.Reflection.Assembly.FullName%2A?displayProperty=nameWithType>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="8b76c-206">When an assembly is loaded, this value can also be obtained using the <xref:System.Reflection.Assembly.FullName%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8b76c-207">次の例では、動的アセンブリを生成し、現在のディレクトリに保存します。</span><span class="sxs-lookup"><span data-stu-id="8b76c-207">The following example emits a dynamic assembly and saves it to the current directory.</span></span> <span data-ttu-id="8b76c-208">アセンブリの作成時に、設定するコード例、 <xref:System.Reflection.AssemblyName.Name%2A>、 <xref:System.Reflection.AssemblyName.Version%2A>、 <xref:System.Reflection.AssemblyName.CultureInfo%2A>、および<xref:System.Reflection.AssemblyName.KeyPair%2A>プロパティでは、同時に構成するアセンブリの完全名、または表示名。</span><span class="sxs-lookup"><span data-stu-id="8b76c-208">When the assembly is created, the code example sets the <xref:System.Reflection.AssemblyName.Name%2A>, <xref:System.Reflection.AssemblyName.Version%2A>, <xref:System.Reflection.AssemblyName.CultureInfo%2A>, and <xref:System.Reflection.AssemblyName.KeyPair%2A> properties, which together comprise an assembly's full name, or display name.</span></span> <span data-ttu-id="8b76c-209"><xref:System.Reflection.AssemblyName.FullName%2A>プロパティを表示名を取得し、使用できます。</span><span class="sxs-lookup"><span data-stu-id="8b76c-209">The <xref:System.Reflection.AssemblyName.FullName%2A> property is then used to retrieve the display name.</span></span>  
  
 [!code-cpp[AssemblyName_CodeBase#4](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_CodeBase/CPP/assemblyname_codebase.cpp#4)]
 [!code-csharp[AssemblyName_CodeBase#4](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_CodeBase/CS/assemblyname_codebase.cs#4)]
 [!code-vb[AssemblyName_CodeBase#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_CodeBase/VB/assemblyname_codebase.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAssemblyName">
      <MemberSignature Language="C#" Value="public static System.Reflection.AssemblyName GetAssemblyName (string assemblyFile);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.AssemblyName GetAssemblyName(string assemblyFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.GetAssemblyName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAssemblyName (assemblyFile As String) As AssemblyName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::AssemblyName ^ GetAssemblyName(System::String ^ assemblyFile);" />
      <MemberSignature Language="F#" Value="static member GetAssemblyName : string -&gt; System.Reflection.AssemblyName" Usage="System.Reflection.AssemblyName.GetAssemblyName assemblyFile" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.AssemblyName</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyFile">
          <span data-ttu-id="8b76c-210">The path for the assembly whose <see cref="T:System.Reflection.AssemblyName" /> is to be returned.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-210">The path for the assembly whose <see cref="T:System.Reflection.AssemblyName" /> is to be returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b76c-211">Gets the <see cref="T:System.Reflection.AssemblyName" /> for a given file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-211">Gets the <see cref="T:System.Reflection.AssemblyName" /> for a given file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b76c-212">An object that represents the given assembly file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-212">An object that represents the given assembly file.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b76c-213">これは、ファイルには、アセンブリ マニフェストが含まれている場合のみ機能します。</span><span class="sxs-lookup"><span data-stu-id="8b76c-213">This will only work if the file contains an assembly manifest.</span></span> <span data-ttu-id="8b76c-214">このメソッドにより、ファイルを開いたり、閉じたりが、アセンブリがこのドメインに追加されません。</span><span class="sxs-lookup"><span data-stu-id="8b76c-214">This method causes the file to be opened and closed, but the assembly is not added to this domain.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8b76c-215">次の例の取得、<xref:System.Reflection.AssemblyName>ディスク上のアセンブリ。</span><span class="sxs-lookup"><span data-stu-id="8b76c-215">The following example gets the <xref:System.Reflection.AssemblyName> for an assembly on disk.</span></span> <span data-ttu-id="8b76c-216">これは実行されません"MyAssembly.exe"の文字列を置換する場合を除き、(必要に応じて、パスを含む) アセンブリのファイル名を持つ、ハード_ディスク。</span><span class="sxs-lookup"><span data-stu-id="8b76c-216">It will not run unless you replace the string "MyAssembly.exe" with the file name of an assembly (including the path, if necessary) on your hard disk.</span></span> <span data-ttu-id="8b76c-217">代わりに、"MyAssembly.exe"として次の例をコンパイルすることができます。</span><span class="sxs-lookup"><span data-stu-id="8b76c-217">Alternatively, you can compile this example as "MyAssembly.exe".</span></span>  
  
 [!code-cpp[AssemblyName_GetAssemblyName#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_GetAssemblyName/CPP/assemblyname_getassemblyname.cpp#1)]
 [!code-csharp[AssemblyName_GetAssemblyName#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_GetAssemblyName/CS/assemblyname_getassemblyname.cs#1)]
 [!code-vb[AssemblyName_GetAssemblyName#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_GetAssemblyName/VB/assemblyname_getassemblyname.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8b76c-218">
            <paramref name="assemblyFile" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-218">
              <paramref name="assemblyFile" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8b76c-219">
            <paramref name="assemblyFile" /> is invalid, such as an assembly with an invalid culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-219">
              <paramref name="assemblyFile" /> is invalid, such as an assembly with an invalid culture.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="8b76c-220">
            <paramref name="assemblyFile" /> is not found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-220">
              <paramref name="assemblyFile" /> is not found.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="8b76c-221">The caller does not have path discovery permission.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-221">The caller does not have path discovery permission.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="8b76c-222">
            <paramref name="assemblyFile" /> is not a valid assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-222">
              <paramref name="assemblyFile" /> is not a valid assembly.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="8b76c-223">An assembly or module was loaded twice with two different sets of evidence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-223">An assembly or module was loaded twice with two different sets of evidence.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="8b76c-224">パスの情報にアクセスします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-224">for access to information in the path.</span>
          </span>
          <span data-ttu-id="8b76c-225">関連する列挙値:<see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-225">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="assemblyName.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="8b76c-226">The object to be populated with serialization information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-226">The object to be populated with serialization information.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="8b76c-227">The destination context of the serialization.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-227">The destination context of the serialization.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b76c-228">Gets serialization information with all the data needed to recreate an instance of this <see langword="AssemblyName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-228">Gets serialization information with all the data needed to recreate an instance of this <see langword="AssemblyName" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8b76c-229">
            <paramref name="info" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-229">
              <paramref name="info" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="8b76c-230">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-230">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="8b76c-231">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-231">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetPublicKey">
      <MemberSignature Language="C#" Value="public byte[] GetPublicKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] GetPublicKey() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.GetPublicKey" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPublicKey () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ GetPublicKey();" />
      <MemberSignature Language="F#" Value="member this.GetPublicKey : unit -&gt; byte[]" Usage="assemblyName.GetPublicKey " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8b76c-232">Gets the public key of the assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-232">Gets the public key of the assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b76c-233">A byte array that contains the public key of the assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-233">A byte array that contains the public key of the assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8b76c-234">次の例では、動的アセンブリを生成し、現在のディレクトリに保存します。</span><span class="sxs-lookup"><span data-stu-id="8b76c-234">The following example emits a dynamic assembly and saves it to the current directory.</span></span> <span data-ttu-id="8b76c-235">アセンブリの作成時に、<xref:System.Reflection.AssemblyName.SetPublicKey%2A>メソッドを使用して、アセンブリに公開キーを指定します。</span><span class="sxs-lookup"><span data-stu-id="8b76c-235">When the assembly is created, the <xref:System.Reflection.AssemblyName.SetPublicKey%2A> method is used to give the assembly a public key.</span></span> <span data-ttu-id="8b76c-236"><xref:System.Reflection.AssemblyName.GetPublicKey%2A>コンソールに表示される、公開キーを取得するメソッドを使用しています。</span><span class="sxs-lookup"><span data-stu-id="8b76c-236">The <xref:System.Reflection.AssemblyName.GetPublicKey%2A> method is then used to retrieve the public key, which is displayed to the console.</span></span>  
  
 [!code-cpp[AssemblyName_KeyPair#2](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_KeyPair/CPP/assemblyname_keypair.cpp#2)]
 [!code-csharp[AssemblyName_KeyPair#2](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_KeyPair/CS/assemblyname_keypair.cs#2)]
 [!code-vb[AssemblyName_KeyPair#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_KeyPair/VB/assemblyname_keypair.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="8b76c-237">A public key was provided (for example, by using the <see cref="M:System.Reflection.AssemblyName.SetPublicKey(System.Byte[])" /> method), but no public key token was provided.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-237">A public key was provided (for example, by using the <see cref="M:System.Reflection.AssemblyName.SetPublicKey(System.Byte[])" /> method), but no public key token was provided.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPublicKeyToken">
      <MemberSignature Language="C#" Value="public byte[] GetPublicKeyToken ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] GetPublicKeyToken() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.GetPublicKeyToken" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPublicKeyToken () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ GetPublicKeyToken();" />
      <MemberSignature Language="F#" Value="member this.GetPublicKeyToken : unit -&gt; byte[]" Usage="assemblyName.GetPublicKeyToken " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8b76c-238">Gets the public key token, which is the last 8 bytes of the SHA-1 hash of the public key under which the application or assembly is signed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-238">Gets the public key token, which is the last 8 bytes of the SHA-1 hash of the public key under which the application or assembly is signed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b76c-239">A byte array that contains the public key token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-239">A byte array that contains the public key token.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8b76c-240">次の例では、動的アセンブリを生成し、現在のディレクトリに保存します。</span><span class="sxs-lookup"><span data-stu-id="8b76c-240">The following example emits a dynamic assembly and saves it to the current directory.</span></span> <span data-ttu-id="8b76c-241">アセンブリの作成時に、<xref:System.Reflection.AssemblyName.SetPublicKeyToken%2A>メソッドを使用して、アセンブリの公開キー トークンを設定します。</span><span class="sxs-lookup"><span data-stu-id="8b76c-241">When the assembly is created, the <xref:System.Reflection.AssemblyName.SetPublicKeyToken%2A> method is used to set the assembly's public key token.</span></span> <span data-ttu-id="8b76c-242"><xref:System.Reflection.AssemblyName.GetPublicKeyToken%2A>コンソールに表示される公開キー トークンを取得するメソッドを使用しています。</span><span class="sxs-lookup"><span data-stu-id="8b76c-242">The <xref:System.Reflection.AssemblyName.GetPublicKeyToken%2A> method is then used to retrieve the public key token, which is displayed to the console.</span></span>  
  
 [!code-cpp[AssemblyName_KeyPair#3](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_KeyPair/CPP/assemblyname_keypair.cpp#3)]
 [!code-csharp[AssemblyName_KeyPair#3](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_KeyPair/CS/assemblyname_keypair.cs#3)]
 [!code-vb[AssemblyName_KeyPair#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_KeyPair/VB/assemblyname_keypair.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HashAlgorithm">
      <MemberSignature Language="C#" Value="public System.Configuration.Assemblies.AssemblyHashAlgorithm HashAlgorithm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Configuration.Assemblies.AssemblyHashAlgorithm HashAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.AssemblyName.HashAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Property HashAlgorithm As AssemblyHashAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::Assemblies::AssemblyHashAlgorithm HashAlgorithm { System::Configuration::Assemblies::AssemblyHashAlgorithm get(); void set(System::Configuration::Assemblies::AssemblyHashAlgorithm value); };" />
      <MemberSignature Language="F#" Value="member this.HashAlgorithm : System.Configuration.Assemblies.AssemblyHashAlgorithm with get, set" Usage="System.Reflection.AssemblyName.HashAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Assemblies.AssemblyHashAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8b76c-243">Gets or sets the hash algorithm used by the assembly manifest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-243">Gets or sets the hash algorithm used by the assembly manifest.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8b76c-244">アセンブリ マニフェストで使用されるハッシュ アルゴリズム。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-244">The hash algorithm used by the assembly manifest.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="8b76c-245">以降で、 [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]、<xref:System.Reflection.AssemblyName.HashAlgorithm%2A>のプロパティ、<xref:System.Reflection.AssemblyName>によって返されるオブジェクト、<xref:System.Reflection.Assembly.GetReferencedAssemblies%2A?displayProperty=nameWithType>メソッドは<xref:System.Configuration.Assemblies.AssemblyHashAlgorithm.None?displayProperty=nameWithType>、参照先アセンブリのハッシュ アルゴリズムがない場合、または場合、参照先のハッシュ アルゴリズムアセンブリがによって識別されない、<xref:System.Configuration.Assemblies.AssemblyHashAlgorithm?displayProperty=nameWithType>列挙します。</span><span class="sxs-lookup"><span data-stu-id="8b76c-245">Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the <xref:System.Reflection.AssemblyName.HashAlgorithm%2A> property of an <xref:System.Reflection.AssemblyName> object that is returned by the <xref:System.Reflection.Assembly.GetReferencedAssemblies%2A?displayProperty=nameWithType> method is <xref:System.Configuration.Assemblies.AssemblyHashAlgorithm.None?displayProperty=nameWithType> if there is no hash algorithm for the referenced assembly, or if the hash algorithm of the referenced assembly is not identified by the <xref:System.Configuration.Assemblies.AssemblyHashAlgorithm?displayProperty=nameWithType> enumeration.</span></span> <span data-ttu-id="8b76c-246">.NET Framework の以前のバージョンで、<xref:System.Reflection.AssemblyName.HashAlgorithm%2A>プロパティによって返される<xref:System.Configuration.Assemblies.AssemblyHashAlgorithm.SHA1?displayProperty=nameWithType>このような場合です。</span><span class="sxs-lookup"><span data-stu-id="8b76c-246">In previous versions of the .NET Framework, the <xref:System.Reflection.AssemblyName.HashAlgorithm%2A> property returned <xref:System.Configuration.Assemblies.AssemblyHashAlgorithm.SHA1?displayProperty=nameWithType> in this situation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8b76c-247">次の例では、動的アセンブリを生成し、現在のディレクトリに保存します。</span><span class="sxs-lookup"><span data-stu-id="8b76c-247">The following example emits a dynamic assembly and saves it to the current directory.</span></span> <span data-ttu-id="8b76c-248">アセンブリの作成時に、<xref:System.Reflection.AssemblyName.HashAlgorithm%2A>アセンブリ マニフェストのハッシュ アルゴリズムを設定するプロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="8b76c-248">When the assembly is created, the <xref:System.Reflection.AssemblyName.HashAlgorithm%2A> property is used to set the hash algorithm for the assembly manifest.</span></span>  
  
 [!code-cpp[AssemblyName_CodeBase#3](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_CodeBase/CPP/assemblyname_codebase.cpp#3)]
 [!code-csharp[AssemblyName_CodeBase#3](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_CodeBase/CS/assemblyname_codebase.cs#3)]
 [!code-vb[AssemblyName_CodeBase#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_CodeBase/VB/assemblyname_codebase.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyPair">
      <MemberSignature Language="C#" Value="public System.Reflection.StrongNameKeyPair KeyPair { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.StrongNameKeyPair KeyPair" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.AssemblyName.KeyPair" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyPair As StrongNameKeyPair" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::StrongNameKeyPair ^ KeyPair { System::Reflection::StrongNameKeyPair ^ get(); void set(System::Reflection::StrongNameKeyPair ^ value); };" />
      <MemberSignature Language="F#" Value="member this.KeyPair : System.Reflection.StrongNameKeyPair with get, set" Usage="System.Reflection.AssemblyName.KeyPair" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.StrongNameKeyPair</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8b76c-249">Gets or sets the public and private cryptographic key pair that is used to create a strong name signature for the assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-249">Gets or sets the public and private cryptographic key pair that is used to create a strong name signature for the assembly.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8b76c-250">パブリックおよびプライベート暗号化キー ペアを使用して、アセンブリの厳密な名前を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-250">The public and private cryptographic key pair to be used to create a strong name for the assembly.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b76c-251">ランタイムがアセンブリを読み込むときに設定しません、<xref:System.Reflection.AssemblyName.KeyPair%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="8b76c-251">When the runtime loads an assembly, it does not set the <xref:System.Reflection.AssemblyName.KeyPair%2A> property.</span></span> <span data-ttu-id="8b76c-252">プロパティの get アクセス操作子は、ユーザーが使用する前に、プロパティを設定する場合に便利です、のみ、<xref:System.Reflection.AssemblyName>動的アセンブリを作成するオブジェクトし、が、その後、キーのペアを取得します。</span><span class="sxs-lookup"><span data-stu-id="8b76c-252">The getter for the property is only useful if the user set the property before using the <xref:System.Reflection.AssemblyName> object to create a dynamic assembly, and subsequently wants to retrieve the key pair.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8b76c-253">次の例では、動的アセンブリを生成し、現在のディレクトリに保存します。</span><span class="sxs-lookup"><span data-stu-id="8b76c-253">The following example emits a dynamic assembly and saves it to the current directory.</span></span> <span data-ttu-id="8b76c-254">アセンブリの作成時に、<xref:System.Reflection.AssemblyName.KeyPair%2A>アセンブリの公開キーと秘密暗号化キーを設定するプロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="8b76c-254">When the assembly is created, the <xref:System.Reflection.AssemblyName.KeyPair%2A> property is used to set the assembly's public and private cryptographic keys.</span></span> <span data-ttu-id="8b76c-255">.</span><span class="sxs-lookup"><span data-stu-id="8b76c-255">.</span></span>  
  
 [!code-cpp[AssemblyName_KeyPair#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_KeyPair/CPP/assemblyname_keypair.cpp#1)]
 [!code-csharp[AssemblyName_KeyPair#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_KeyPair/CS/assemblyname_keypair.cs#1)]
 [!code-vb[AssemblyName_KeyPair#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_KeyPair/VB/assemblyname_keypair.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.AssemblyName.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Reflection.AssemblyName.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8b76c-256">Gets or sets the simple name of the assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-256">Gets or sets the simple name of the assembly.</span>
          </span>
          <span data-ttu-id="8b76c-257">This is usually, but not necessarily, the file name of the manifest file of the assembly, minus its extension.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-257">This is usually, but not necessarily, the file name of the manifest file of the assembly, minus its extension.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8b76c-258">アセンブリの簡易名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-258">The simple name of the assembly.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b76c-259">マニフェスト ファイルは、アセンブリ マニフェストを含むファイルです。</span><span class="sxs-lookup"><span data-stu-id="8b76c-259">The manifest file is the file that contains the assembly manifest.</span></span>  
  
 <span data-ttu-id="8b76c-260">たとえば、"MyAssembly.dll"をという名前の単一ファイル アセンブリの簡易名は、"MyAssembly"です。</span><span class="sxs-lookup"><span data-stu-id="8b76c-260">For example, the simple name of a single-file assembly named "MyAssembly.dll" is "MyAssembly".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8b76c-261">次の例では、動的アセンブリを生成し、現在のディレクトリに保存します。</span><span class="sxs-lookup"><span data-stu-id="8b76c-261">The following example emits a dynamic assembly and saves it to the current directory.</span></span> <span data-ttu-id="8b76c-262">アセンブリの作成時に、<xref:System.Reflection.AssemblyName.Name%2A>動的アセンブリの簡易名を設定するプロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="8b76c-262">When the assembly is created, the <xref:System.Reflection.AssemblyName.Name%2A> property is used to set the simple name of the dynamic assembly.</span></span>  
  
 [!code-cpp[AssemblyName_Constructor#2](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_Constructor/CPP/assemblyname_constructor.cpp#2)]
 [!code-csharp[AssemblyName_Constructor#2](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_Constructor/CS/assemblyname_constructor.cs#2)]
 [!code-vb[AssemblyName_Constructor#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_Constructor/VB/assemblyname_constructor.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDeserialization">
      <MemberSignature Language="C#" Value="public void OnDeserialization (object sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnDeserialization(object sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.OnDeserialization(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnDeserialization (sender As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnDeserialization(System::Object ^ sender);" />
      <MemberSignature Language="F#" Value="abstract member OnDeserialization : obj -&gt; unit&#xA;override this.OnDeserialization : obj -&gt; unit" Usage="assemblyName.OnDeserialization sender" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="sender">
          <span data-ttu-id="8b76c-263">The source of the deserialization event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-263">The source of the deserialization event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b76c-264">Implements the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface and is called back by the deserialization event when deserialization is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-264">Implements the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface and is called back by the deserialization event when deserialization is complete.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Runtime.Serialization.ISerializable" />
        <altmember cref="M:System.Reflection.AssemblyName.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </Docs>
    </Member>
    <Member MemberName="ProcessorArchitecture">
      <MemberSignature Language="C#" Value="public System.Reflection.ProcessorArchitecture ProcessorArchitecture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.ProcessorArchitecture ProcessorArchitecture" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.AssemblyName.ProcessorArchitecture" />
      <MemberSignature Language="VB.NET" Value="Public Property ProcessorArchitecture As ProcessorArchitecture" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::ProcessorArchitecture ProcessorArchitecture { System::Reflection::ProcessorArchitecture get(); void set(System::Reflection::ProcessorArchitecture value); };" />
      <MemberSignature Language="F#" Value="member this.ProcessorArchitecture : System.Reflection.ProcessorArchitecture with get, set" Usage="System.Reflection.AssemblyName.ProcessorArchitecture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ProcessorArchitecture</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8b76c-265">Gets or sets a value that identifies the processor and bits-per-word of the platform targeted by an executable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-265">Gets or sets a value that identifies the processor and bits-per-word of the platform targeted by an executable.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8b76c-266">プロセッサとビットごとのワードを実行可能ファイルを対象とするプラットフォームを識別する列挙値の 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-266">One of the enumeration values that identifies the processor and bits-per-word of the platform targeted by an executable.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b76c-267">以降で、 [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]、このプロパティは常に返します<xref:System.Reflection.ProcessorArchitecture.None?displayProperty=nameWithType>参照アセンブリ。</span><span class="sxs-lookup"><span data-stu-id="8b76c-267">Beginning with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], this property always returns <xref:System.Reflection.ProcessorArchitecture.None?displayProperty=nameWithType> for reference assemblies.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Module.GetPEKind(System.Reflection.PortableExecutableKinds@,System.Reflection.ImageFileMachine@)" />
      </Docs>
    </Member>
    <Member MemberName="ReferenceMatchesDefinition">
      <MemberSignature Language="C#" Value="public static bool ReferenceMatchesDefinition (System.Reflection.AssemblyName reference, System.Reflection.AssemblyName definition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ReferenceMatchesDefinition(class System.Reflection.AssemblyName reference, class System.Reflection.AssemblyName definition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.ReferenceMatchesDefinition(System.Reflection.AssemblyName,System.Reflection.AssemblyName)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReferenceMatchesDefinition (reference As AssemblyName, definition As AssemblyName) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ReferenceMatchesDefinition(System::Reflection::AssemblyName ^ reference, System::Reflection::AssemblyName ^ definition);" />
      <MemberSignature Language="F#" Value="static member ReferenceMatchesDefinition : System.Reflection.AssemblyName * System.Reflection.AssemblyName -&gt; bool" Usage="System.Reflection.AssemblyName.ReferenceMatchesDefinition (reference, definition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reference" Type="System.Reflection.AssemblyName" />
        <Parameter Name="definition" Type="System.Reflection.AssemblyName" />
      </Parameters>
      <Docs>
        <param name="reference">
          <span data-ttu-id="8b76c-268">The reference assembly name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-268">The reference assembly name.</span>
          </span>
        </param>
        <param name="definition">
          <span data-ttu-id="8b76c-269">The assembly name that is compared to the reference assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-269">The assembly name that is compared to the reference assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b76c-270">Returns a value indicating whether two assembly names are the same.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-270">Returns a value indicating whether two assembly names are the same.</span>
          </span>
          <span data-ttu-id="8b76c-271">The comparison is based on the simple assembly names.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-271">The comparison is based on the simple assembly names.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b76c-272">
            <see langword="true" /> if the simple assembly names are the same; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-272">
              <see langword="true" /> if the simple assembly names are the same; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b76c-273">比較は、単純なアセンブリ名にのみ依存します。</span><span class="sxs-lookup"><span data-stu-id="8b76c-273">The comparison depends only on the simple assembly name.</span></span> <span data-ttu-id="8b76c-274">これには、バージョン、カルチャ、および公開キー トークンが無視されます。</span><span class="sxs-lookup"><span data-stu-id="8b76c-274">It ignores version, culture, and public key token.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPublicKey">
      <MemberSignature Language="C#" Value="public void SetPublicKey (byte[] publicKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPublicKey(unsigned int8[] publicKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.SetPublicKey(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetPublicKey (publicKey As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetPublicKey(cli::array &lt;System::Byte&gt; ^ publicKey);" />
      <MemberSignature Language="F#" Value="member this.SetPublicKey : byte[] -&gt; unit" Usage="assemblyName.SetPublicKey publicKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="publicKey" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="publicKey">
          <span data-ttu-id="8b76c-275">A byte array containing the public key of the assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-275">A byte array containing the public key of the assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b76c-276">Sets the public key identifying the assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-276">Sets the public key identifying the assembly.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b76c-277">使用することも必要があります、<xref:System.Reflection.AssemblyName.SetPublicKeyToken%2A>公開キー トークンを提供するメソッド。</span><span class="sxs-lookup"><span data-stu-id="8b76c-277">You must also use the <xref:System.Reflection.AssemblyName.SetPublicKeyToken%2A> method to provide a public key token.</span></span> <span data-ttu-id="8b76c-278">それ以外の場合、<xref:System.Security.SecurityException>場合にスローされますが、<xref:System.Reflection.AssemblyName.GetPublicKey%2A>メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="8b76c-278">Otherwise, a <xref:System.Security.SecurityException> is thrown when the <xref:System.Reflection.AssemblyName.GetPublicKey%2A> method is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8b76c-279">次の例では、動的アセンブリを生成し、現在のディレクトリに保存します。</span><span class="sxs-lookup"><span data-stu-id="8b76c-279">The following example emits a dynamic assembly and saves it to the current directory.</span></span> <span data-ttu-id="8b76c-280">アセンブリの作成時に、<xref:System.Reflection.AssemblyName.SetPublicKey%2A>メソッドを使用して、アセンブリに公開キーを指定します。</span><span class="sxs-lookup"><span data-stu-id="8b76c-280">When the assembly is created, the <xref:System.Reflection.AssemblyName.SetPublicKey%2A> method is used to give the assembly a public key.</span></span> <span data-ttu-id="8b76c-281"><xref:System.Reflection.AssemblyName.GetPublicKey%2A>コンソールに表示される、公開キーを取得するメソッドを使用しています。</span><span class="sxs-lookup"><span data-stu-id="8b76c-281">The <xref:System.Reflection.AssemblyName.GetPublicKey%2A> method is then used to retrieve the public key, which is displayed to the console.</span></span>  
  
 [!code-cpp[AssemblyName_SetPublicKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_SetPublicKey/CPP/assemblyname_setpublickey.cpp#1)]
 [!code-csharp[AssemblyName_SetPublicKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_SetPublicKey/CS/assemblyname_setpublickey.cs#1)]
 [!code-vb[AssemblyName_SetPublicKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_SetPublicKey/VB/assemblyname_setpublickey.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPublicKeyToken">
      <MemberSignature Language="C#" Value="public void SetPublicKeyToken (byte[] publicKeyToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPublicKeyToken(unsigned int8[] publicKeyToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.SetPublicKeyToken(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetPublicKeyToken (publicKeyToken As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetPublicKeyToken(cli::array &lt;System::Byte&gt; ^ publicKeyToken);" />
      <MemberSignature Language="F#" Value="member this.SetPublicKeyToken : byte[] -&gt; unit" Usage="assemblyName.SetPublicKeyToken publicKeyToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="publicKeyToken" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="publicKeyToken">
          <span data-ttu-id="8b76c-282">A byte array containing the public key token of the assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-282">A byte array containing the public key token of the assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b76c-283">Sets the public key token, which is the last 8 bytes of the SHA-1 hash of the public key under which the application or assembly is signed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-283">Sets the public key token, which is the last 8 bytes of the SHA-1 hash of the public key under which the application or assembly is signed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b76c-284">呼び出すことによって、公開キーを設定すると、<xref:System.Reflection.AssemblyName.SetPublicKey%2A>メソッドを使用する必要ありますも、<xref:System.Reflection.AssemblyName.SetPublicKeyToken%2A>公開キー トークンを提供するメソッド。</span><span class="sxs-lookup"><span data-stu-id="8b76c-284">When you set the public key by calling the <xref:System.Reflection.AssemblyName.SetPublicKey%2A> method, you must also use the <xref:System.Reflection.AssemblyName.SetPublicKeyToken%2A> method to provide a public key token.</span></span> <span data-ttu-id="8b76c-285">それ以外の場合、<xref:System.Security.SecurityException>場合にスローされますが、<xref:System.Reflection.AssemblyName.GetPublicKey%2A>メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="8b76c-285">Otherwise, a <xref:System.Security.SecurityException> is thrown when the <xref:System.Reflection.AssemblyName.GetPublicKey%2A> method is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8b76c-286">次の例では、動的アセンブリを生成し、現在のディレクトリに保存します。</span><span class="sxs-lookup"><span data-stu-id="8b76c-286">The following example emits a dynamic assembly and saves it to the current directory.</span></span> <span data-ttu-id="8b76c-287">アセンブリの作成時に、<xref:System.Reflection.AssemblyName.SetPublicKeyToken%2A>メソッドを使用して、アセンブリの公開キー トークンを設定します。</span><span class="sxs-lookup"><span data-stu-id="8b76c-287">When the assembly is created, the <xref:System.Reflection.AssemblyName.SetPublicKeyToken%2A> method is used to set the assembly's public key token.</span></span> <span data-ttu-id="8b76c-288"><xref:System.Reflection.AssemblyName.GetPublicKeyToken%2A>コンソールに表示される公開キー トークンを取得するメソッドを使用しています。</span><span class="sxs-lookup"><span data-stu-id="8b76c-288">The <xref:System.Reflection.AssemblyName.GetPublicKeyToken%2A> method is then used to retrieve the public key token, which is displayed to the console.</span></span>  
  
 [!code-cpp[AssemblyName_SetPublicKey#2](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_SetPublicKey/CPP/assemblyname_setpublickey.cpp#2)]
 [!code-csharp[AssemblyName_SetPublicKey#2](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_SetPublicKey/CS/assemblyname_setpublickey.cs#2)]
 [!code-vb[AssemblyName_SetPublicKey#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_SetPublicKey/VB/assemblyname_setpublickey.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._AssemblyName.GetIDsOfNames">
      <MemberSignature Language="C#" Value="void _AssemblyName.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._AssemblyName.GetIDsOfNames([in]valuetype System.Guid&amp; riid, native int rgszNames, unsigned int32 cNames, unsigned int32 lcid, native int rgDispId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.System#Runtime#InteropServices#_AssemblyName#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetIDsOfNames (ByRef riid As Guid, rgszNames As IntPtr, cNames As UInteger, lcid As UInteger, rgDispId As IntPtr) Implements _AssemblyName.GetIDsOfNames" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._AssemblyName.GetIDsOfNames(Guid % riid, IntPtr rgszNames, System::UInt32 cNames, System::UInt32 lcid, IntPtr rgDispId) = System::Runtime::InteropServices::_AssemblyName::GetIDsOfNames;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._AssemblyName.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="riid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="rgszNames" Type="System.IntPtr" />
        <Parameter Name="cNames" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="rgDispId" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="riid">
          <span data-ttu-id="8b76c-289">Reserved for future use.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-289">Reserved for future use.</span>
          </span>
          <span data-ttu-id="8b76c-290">Must be IID_NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-290">Must be IID_NULL.</span>
          </span>
        </param>
        <param name="rgszNames">
          <span data-ttu-id="8b76c-291">Passed-in array of names to be mapped.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-291">Passed-in array of names to be mapped.</span>
          </span>
        </param>
        <param name="cNames">
          <span data-ttu-id="8b76c-292">Count of the names to be mapped.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-292">Count of the names to be mapped.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="8b76c-293">The locale context in which to interpret the names.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-293">The locale context in which to interpret the names.</span>
          </span>
        </param>
        <param name="rgDispId">
          <span data-ttu-id="8b76c-294">Caller-allocated array that receives the IDs corresponding to the names.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-294">Caller-allocated array that receives the IDs corresponding to the names.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b76c-295">Maps a set of names to a corresponding set of dispatch identifiers.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-295">Maps a set of names to a corresponding set of dispatch identifiers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b76c-296">このメソッドは、アンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出すことはできません。</span><span class="sxs-lookup"><span data-stu-id="8b76c-296">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="8b76c-297">詳細については`IDispatch::GetIDsOfNames`、MSDN ライブラリを参照してください。</span><span class="sxs-lookup"><span data-stu-id="8b76c-297">For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="8b76c-298">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-298">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._AssemblyName.GetTypeInfo">
      <MemberSignature Language="C#" Value="void _AssemblyName.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._AssemblyName.GetTypeInfo(unsigned int32 iTInfo, unsigned int32 lcid, native int ppTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.System#Runtime#InteropServices#_AssemblyName#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfo (iTInfo As UInteger, lcid As UInteger, ppTInfo As IntPtr) Implements _AssemblyName.GetTypeInfo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._AssemblyName.GetTypeInfo(System::UInt32 iTInfo, System::UInt32 lcid, IntPtr ppTInfo) = System::Runtime::InteropServices::_AssemblyName::GetTypeInfo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._AssemblyName.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iTInfo" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="ppTInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="iTInfo">
          <span data-ttu-id="8b76c-299">The type information to return.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-299">The type information to return.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="8b76c-300">The locale identifier for the type information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-300">The locale identifier for the type information.</span>
          </span>
        </param>
        <param name="ppTInfo">
          <span data-ttu-id="8b76c-301">Receives a pointer to the requested type information object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-301">Receives a pointer to the requested type information object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b76c-302">Retrieves the type information for an object, which can then be used to get the type information for an interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-302">Retrieves the type information for an object, which can then be used to get the type information for an interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b76c-303">このメソッドは、アンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出すことはできません。</span><span class="sxs-lookup"><span data-stu-id="8b76c-303">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="8b76c-304">詳細については`IDispatch::GetTypeInfo`、MSDN ライブラリを参照してください。</span><span class="sxs-lookup"><span data-stu-id="8b76c-304">For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="8b76c-305">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-305">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._AssemblyName.GetTypeInfoCount">
      <MemberSignature Language="C#" Value="void _AssemblyName.GetTypeInfoCount (out uint pcTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._AssemblyName.GetTypeInfoCount([out] unsigned int32&amp; pcTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.System#Runtime#InteropServices#_AssemblyName#GetTypeInfoCount(System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfoCount (ByRef pcTInfo As UInteger) Implements _AssemblyName.GetTypeInfoCount" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._AssemblyName.GetTypeInfoCount([Runtime::InteropServices::Out] System::UInt32 % pcTInfo) = System::Runtime::InteropServices::_AssemblyName::GetTypeInfoCount;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._AssemblyName.GetTypeInfoCount(System.UInt32@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcTInfo" Type="System.UInt32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pcTInfo">
          <span data-ttu-id="8b76c-306">Points to a location that receives the number of type information interfaces provided by the object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-306">Points to a location that receives the number of type information interfaces provided by the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b76c-307">Retrieves the number of type information interfaces that an object provides (either 0 or 1).</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-307">Retrieves the number of type information interfaces that an object provides (either 0 or 1).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b76c-308">このメソッドは、アンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出すことはできません。</span><span class="sxs-lookup"><span data-stu-id="8b76c-308">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="8b76c-309">詳細については`IDispatch::GetTypeInfoCount`、MSDN ライブラリを参照してください。</span><span class="sxs-lookup"><span data-stu-id="8b76c-309">For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="8b76c-310">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-310">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._AssemblyName.Invoke">
      <MemberSignature Language="C#" Value="void _AssemblyName.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._AssemblyName.Invoke(unsigned int32 dispIdMember, [in]valuetype System.Guid&amp; riid, unsigned int32 lcid, int16 wFlags, native int pDispParams, native int pVarResult, native int pExcepInfo, native int puArgErr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.System#Runtime#InteropServices#_AssemblyName#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub Invoke (dispIdMember As UInteger, ByRef riid As Guid, lcid As UInteger, wFlags As Short, pDispParams As IntPtr, pVarResult As IntPtr, pExcepInfo As IntPtr, puArgErr As IntPtr) Implements _AssemblyName.Invoke" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._AssemblyName.Invoke(System::UInt32 dispIdMember, Guid % riid, System::UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr) = System::Runtime::InteropServices::_AssemblyName::Invoke;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._AssemblyName.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispIdMember" Type="System.UInt32" />
        <Parameter Name="riid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="wFlags" Type="System.Int16" />
        <Parameter Name="pDispParams" Type="System.IntPtr" />
        <Parameter Name="pVarResult" Type="System.IntPtr" />
        <Parameter Name="pExcepInfo" Type="System.IntPtr" />
        <Parameter Name="puArgErr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="dispIdMember">
          <span data-ttu-id="8b76c-311">Identifies the member.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-311">Identifies the member.</span>
          </span>
        </param>
        <param name="riid">
          <span data-ttu-id="8b76c-312">Reserved for future use.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-312">Reserved for future use.</span>
          </span>
          <span data-ttu-id="8b76c-313">Must be IID_NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-313">Must be IID_NULL.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="8b76c-314">The locale context in which to interpret arguments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-314">The locale context in which to interpret arguments.</span>
          </span>
        </param>
        <param name="wFlags">
          <span data-ttu-id="8b76c-315">Flags describing the context of the call.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-315">Flags describing the context of the call.</span>
          </span>
        </param>
        <param name="pDispParams">
          <span data-ttu-id="8b76c-316">Pointer to a structure containing an array of arguments, an array of argument DispIDs for named arguments, and counts for the number of elements in the arrays.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-316">Pointer to a structure containing an array of arguments, an array of argument DispIDs for named arguments, and counts for the number of elements in the arrays.</span>
          </span>
        </param>
        <param name="pVarResult">
          <span data-ttu-id="8b76c-317">Pointer to the location where the result is to be stored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-317">Pointer to the location where the result is to be stored.</span>
          </span>
        </param>
        <param name="pExcepInfo">
          <span data-ttu-id="8b76c-318">Pointer to a structure that contains exception information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-318">Pointer to a structure that contains exception information.</span>
          </span>
        </param>
        <param name="puArgErr">
          <span data-ttu-id="8b76c-319">The index of the first argument that has an error.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-319">The index of the first argument that has an error.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b76c-320">Provides access to properties and methods exposed by an object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-320">Provides access to properties and methods exposed by an object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b76c-321">このメソッドは、アンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出すことはできません。</span><span class="sxs-lookup"><span data-stu-id="8b76c-321">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="8b76c-322">詳細については`IDispatch::Invoke`、MSDN ライブラリを参照してください。</span><span class="sxs-lookup"><span data-stu-id="8b76c-322">For more information about `IDispatch::Invoke`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="8b76c-323">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-323">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="assemblyName.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8b76c-324">Returns the full name of the assembly, also known as the display name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-324">Returns the full name of the assembly, also known as the display name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b76c-325">The full name of the assembly, or the class name if the full name cannot be determined.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-325">The full name of the assembly, or the class name if the full name cannot be determined.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b76c-326">説明を参照して<xref:System.Reflection.AssemblyName>返される文字列の形式にします。</span><span class="sxs-lookup"><span data-stu-id="8b76c-326">See the description of <xref:System.Reflection.AssemblyName> for the format of the returned string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8b76c-327">次の例の取得、<xref:System.Reflection.AssemblyName>仮定のオブジェクト`MyAssembly.exe`アセンブリ、および、使用、<xref:System.Reflection.AssemblyName.ToString%2A>メソッドをアセンブリの完全名を取得または表示名。</span><span class="sxs-lookup"><span data-stu-id="8b76c-327">The following example gets an <xref:System.Reflection.AssemblyName> object for a hypothetical `MyAssembly.exe` assembly, and then uses the <xref:System.Reflection.AssemblyName.ToString%2A> method to retrieve the full assembly name, or display name.</span></span>  
  
 [!code-cpp[AssemblyName_GetAssemblyName#2](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_GetAssemblyName/CPP/assemblyname_getassemblyname.cpp#2)]
 [!code-csharp[AssemblyName_GetAssemblyName#2](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_GetAssemblyName/CS/assemblyname_getassemblyname.cs#2)]
 [!code-vb[AssemblyName_GetAssemblyName#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_GetAssemblyName/VB/assemblyname_getassemblyname.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public Version Version { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version Version" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.AssemblyName.Version" />
      <MemberSignature Language="VB.NET" Value="Public Property Version As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ Version { Version ^ get(); void set(Version ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Version : Version with get, set" Usage="System.Reflection.AssemblyName.Version" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8b76c-328">Gets or sets the major, minor, build, and revision numbers of the assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-328">Gets or sets the major, minor, build, and revision numbers of the assembly.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8b76c-329">オブジェクトを表すメジャー、マイナー、ビルド、およびアセンブリのリビジョン番号、します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-329">An object that represents the major, minor, build, and revision numbers of the assembly.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b76c-330">バージョンのすべてのコンポーネントは、0 以上の整数である必要があります。</span><span class="sxs-lookup"><span data-stu-id="8b76c-330">All components of the version must be integers greater than or equal to zero.</span></span> <span data-ttu-id="8b76c-331">メタデータによって、メジャー、マイナー、ビルド、および最大値はアセンブリのリビジョン コンポーネント<xref:System.UInt16.MaxValue?displayProperty=nameWithType>- 1。</span><span class="sxs-lookup"><span data-stu-id="8b76c-331">Metadata restricts the major, minor, build, and revision components for an assembly to a maximum value of <xref:System.UInt16.MaxValue?displayProperty=nameWithType> - 1.</span></span> <span data-ttu-id="8b76c-332">コンポーネントは、この値を超えている場合、エラーはスローされません。ただし、動的アセンブリでそのコンポーネントは 0 です。</span><span class="sxs-lookup"><span data-stu-id="8b76c-332">If a component exceeds this value, no error is thrown; however, in a dynamic assembly, that component is zero.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8b76c-333">このセクションには、2 つの例が含まれています。</span><span class="sxs-lookup"><span data-stu-id="8b76c-333">This section contains two examples.</span></span> <span data-ttu-id="8b76c-334">最初の例では、現在実行中のアセンブリのバージョンを取得する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="8b76c-334">The first example shows how to retrieve the version of the currently executing assembly.</span></span> <span data-ttu-id="8b76c-335">2 番目の例を使用する方法を示しています、<xref:System.Reflection.AssemblyName.Version%2A>プロパティを動的アセンブリを生成するときに、アセンブリのバージョンを指定します。</span><span class="sxs-lookup"><span data-stu-id="8b76c-335">The second example shows how to use the <xref:System.Reflection.AssemblyName.Version%2A> property to specify the assembly version when you emit a dynamic assembly.</span></span>  
  
 <span data-ttu-id="8b76c-336">**例 1**</span><span class="sxs-lookup"><span data-stu-id="8b76c-336">**Example 1**</span></span>  
  
 <span data-ttu-id="8b76c-337">次の例を取得し、実行中のアセンブリとを含むアセンブリのバージョン番号を表示、<xref:System.String>クラスです。</span><span class="sxs-lookup"><span data-stu-id="8b76c-337">The following example retrieves and displays the version numbers of the currently executing assembly and the assembly that contains the <xref:System.String> class.</span></span>  
  
 [!code-cpp[AssemblyName.Version#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName.Version/cpp/Example.cpp#1)]
 [!code-csharp[AssemblyName.Version#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName.Version/cs/Example.cs#1)]
 [!code-vb[AssemblyName.Version#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName.Version/vb/Example.vb#1)]  
  
 <span data-ttu-id="8b76c-338">**例 2**</span><span class="sxs-lookup"><span data-stu-id="8b76c-338">**Example 2**</span></span>  
  
 <span data-ttu-id="8b76c-339">次の例では、動的アセンブリを生成し、現在のディレクトリに保存します。</span><span class="sxs-lookup"><span data-stu-id="8b76c-339">The following example emits a dynamic assembly and saves it to the current directory.</span></span> <span data-ttu-id="8b76c-340">アセンブリの作成時に、<xref:System.Reflection.AssemblyName.Version%2A>プロパティの使用をアセンブリのバージョン情報を指定します。</span><span class="sxs-lookup"><span data-stu-id="8b76c-340">When the assembly is created, the <xref:System.Reflection.AssemblyName.Version%2A> property is used to specify version information for the assembly.</span></span>  
  
 [!code-cpp[AssemblyName_Constructor#3](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_Constructor/CPP/assemblyname_constructor.cpp#3)]
 [!code-csharp[AssemblyName_Constructor#3](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_Constructor/CS/assemblyname_constructor.cs#3)]
 [!code-vb[AssemblyName_Constructor#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_Constructor/VB/assemblyname_constructor.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VersionCompatibility">
      <MemberSignature Language="C#" Value="public System.Configuration.Assemblies.AssemblyVersionCompatibility VersionCompatibility { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Configuration.Assemblies.AssemblyVersionCompatibility VersionCompatibility" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.AssemblyName.VersionCompatibility" />
      <MemberSignature Language="VB.NET" Value="Public Property VersionCompatibility As AssemblyVersionCompatibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::Assemblies::AssemblyVersionCompatibility VersionCompatibility { System::Configuration::Assemblies::AssemblyVersionCompatibility get(); void set(System::Configuration::Assemblies::AssemblyVersionCompatibility value); };" />
      <MemberSignature Language="F#" Value="member this.VersionCompatibility : System.Configuration.Assemblies.AssemblyVersionCompatibility with get, set" Usage="System.Reflection.AssemblyName.VersionCompatibility" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Assemblies.AssemblyVersionCompatibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8b76c-341">Gets or sets the information related to the assembly's compatibility with other assemblies.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-341">Gets or sets the information related to the assembly's compatibility with other assemblies.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8b76c-342">その他のアセンブリとの互換性に関する情報を表す値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b76c-342">A value that represents information about the assembly's compatibility with other assemblies.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b76c-343"><xref:System.Reflection.AssemblyName.VersionCompatibility%2A> 情報を示します、たとえば、アセンブリが、デバイス ドライバーをサイド バイ サイドの競合が原因には、他のバージョンとを実行できません。</span><span class="sxs-lookup"><span data-stu-id="8b76c-343"><xref:System.Reflection.AssemblyName.VersionCompatibility%2A> information indicates, for example, that the assembly cannot execute side-by-side with other versions due to conflicts over a device driver.</span></span>  
  
 <span data-ttu-id="8b76c-344">現在、<xref:System.Reflection.AssemblyName.VersionCompatibility%2A>は常に返します<xref:System.Configuration.Assemblies.AssemblyVersionCompatibility.SameMachine?displayProperty=nameWithType>、ローダーによって使用されていません。</span><span class="sxs-lookup"><span data-stu-id="8b76c-344">Currently, <xref:System.Reflection.AssemblyName.VersionCompatibility%2A> always returns <xref:System.Configuration.Assemblies.AssemblyVersionCompatibility.SameMachine?displayProperty=nameWithType>, and is not used by the loader.</span></span> <span data-ttu-id="8b76c-345">このプロパティは、将来の機能用に予約されています。</span><span class="sxs-lookup"><span data-stu-id="8b76c-345">This property is reserved for a future feature.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>