<Type Name="CustomAttributeData" FullName="System.Reflection.CustomAttributeData">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ec6a319f71ff453bcbc8ccde88ae4c1671d48a5e" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58715621" /></Metadata><TypeSignature Language="C#" Value="public class CustomAttributeData" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit CustomAttributeData extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.CustomAttributeData" />
  <TypeSignature Language="VB.NET" Value="Public Class CustomAttributeData" />
  <TypeSignature Language="C++ CLI" Value="public ref class CustomAttributeData" />
  <TypeSignature Language="F#" Value="type CustomAttributeData = class" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="e308c-101">リフレクションのみのコンテキストに読み込まれるアセンブリ、モジュール、型、メンバー、およびパラメーターのカスタム属性データにアクセスできるようにします。</span><span class="sxs-lookup"><span data-stu-id="e308c-101">Provides access to custom attribute data for assemblies, modules, types, members and parameters that are loaded into the reflection-only context.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e308c-102">常にカスタム属性を確認し、そのプロパティを調べてなどのメソッドを使用してそれらのインスタンスを作成することはできませんので、リフレクションのみのコンテキストで検査されているコードを実行できない<xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType>、<xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=nameWithType>など.</span><span class="sxs-lookup"><span data-stu-id="e308c-102">Code that is being examined in the reflection-only context cannot be executed, so it is not always possible to examine custom attributes by creating instances of them and then examining their properties, using methods like <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType>, <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=nameWithType>, and so on.</span></span> <span data-ttu-id="e308c-103">属性の型自体のコードは、リフレクション専用コンテキストに読み込まれるは実行できません。</span><span class="sxs-lookup"><span data-stu-id="e308c-103">If the code for the attribute type itself is loaded into the reflection-only context, it cannot be executed.</span></span>  
  
 <span data-ttu-id="e308c-104"><xref:System.Reflection.CustomAttributeData>クラスは、属性の抽象化を提供することで、リフレクションのみのコンテキストでカスタム属性の検証を使用できます。</span><span class="sxs-lookup"><span data-stu-id="e308c-104">The <xref:System.Reflection.CustomAttributeData> class allows examination of custom attributes in the reflection-only context by providing an abstraction for attributes.</span></span> <span data-ttu-id="e308c-105">このクラスのメンバーを位置指定引数を取得するために使用し、名前付き属性の引数。</span><span class="sxs-lookup"><span data-stu-id="e308c-105">The members of this class can be used to obtain the positional arguments and named arguments of the attribute.</span></span> <span data-ttu-id="e308c-106">使用して、<xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A>プロパティの一覧を取得する<xref:System.Reflection.CustomAttributeTypedArgument>構造体を使用して、位置指定引数を表す、<xref:System.Reflection.CustomAttributeData.NamedArguments%2A>プロパティの一覧を取得する<xref:System.Reflection.CustomAttributeNamedArgument>名前付き引数を表す構造体。</span><span class="sxs-lookup"><span data-stu-id="e308c-106">Use the <xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A> property to get a list of <xref:System.Reflection.CustomAttributeTypedArgument> structures that represent the positional arguments, and use the <xref:System.Reflection.CustomAttributeData.NamedArguments%2A> property to get a list of <xref:System.Reflection.CustomAttributeNamedArgument> structures that represent the named arguments.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e308c-107"><xref:System.Reflection.CustomAttributeNamedArgument>構造がのみを取得し、引数の値を設定するために使用する属性のプロパティに関する情報を提供します。</span><span class="sxs-lookup"><span data-stu-id="e308c-107">The <xref:System.Reflection.CustomAttributeNamedArgument> structure only provides information about the attribute property used to get and set the argument value.</span></span> <span data-ttu-id="e308c-108">型と引数の値を取得するには、使用、<xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A?displayProperty=nameWithType>プロパティを取得する、<xref:System.Reflection.CustomAttributeTypedArgument>構造体。</span><span class="sxs-lookup"><span data-stu-id="e308c-108">To obtain the type and value of the argument, use the <xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A?displayProperty=nameWithType> property to obtain a <xref:System.Reflection.CustomAttributeTypedArgument> structure.</span></span>  
  
 <span data-ttu-id="e308c-109">ある場合、<xref:System.Reflection.CustomAttributeTypedArgument>名前付きまたは位置指定、かどうか、引数の構造体を使用して、<xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A?displayProperty=nameWithType>型を取得するプロパティと<xref:System.Reflection.CustomAttributeTypedArgument.Value%2A?displayProperty=nameWithType>プロパティ値を取得します。</span><span class="sxs-lookup"><span data-stu-id="e308c-109">When you have a <xref:System.Reflection.CustomAttributeTypedArgument> structure for an argument, whether named or positional, use the <xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A?displayProperty=nameWithType> property to get the type and the <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A?displayProperty=nameWithType> property to get the value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e308c-110">配列引数に対して、<xref:System.Reflection.CustomAttributeTypedArgument.Value%2A?displayProperty=nameWithType>プロパティがジェネリック型を返します<xref:System.Collections.ObjectModel.ReadOnlyCollection%601>の<xref:System.Reflection.CustomAttributeTypedArgument>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e308c-110">For an array argument, the <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A?displayProperty=nameWithType> property returns a generic <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> of <xref:System.Reflection.CustomAttributeTypedArgument> objects.</span></span> <span data-ttu-id="e308c-111">各<xref:System.Reflection.CustomAttributeTypedArgument>コレクション内のオブジェクトが配列の対応する要素を表します。</span><span class="sxs-lookup"><span data-stu-id="e308c-111">Each <xref:System.Reflection.CustomAttributeTypedArgument> object in the collection represents the corresponding element of the array.</span></span>  
  
 <span data-ttu-id="e308c-112"><xref:System.Reflection.CustomAttributeData> 実行コンテキストにも、リフレクションのみのコンテキストで使用できます。</span><span class="sxs-lookup"><span data-stu-id="e308c-112"><xref:System.Reflection.CustomAttributeData> can be used in the execution context as well as in the reflection-only context.</span></span> <span data-ttu-id="e308c-113">たとえば、カスタム属性のコードを含むアセンブリの読み込みを回避します。</span><span class="sxs-lookup"><span data-stu-id="e308c-113">For example, you might want to avoid loading the assembly that contains the code for a custom attribute.</span></span> <span data-ttu-id="e308c-114">使用して、<xref:System.Reflection.CustomAttributeData>クラスはなどのメソッドを使用して異なる<xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType>:</span><span class="sxs-lookup"><span data-stu-id="e308c-114">Using the <xref:System.Reflection.CustomAttributeData> class is different from using methods like <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType>:</span></span>  
  
-   <span data-ttu-id="e308c-115">プロパティとメソッドの<xref:System.Reflection.CustomAttributeData>のみ、属性のインスタンス コンス トラクターのセマンティクスではないに関する指定された値を提供します。</span><span class="sxs-lookup"><span data-stu-id="e308c-115">The properties and methods of <xref:System.Reflection.CustomAttributeData> only provide you with the values that were specified for the attribute instance, not the semantics of the constructor.</span></span> <span data-ttu-id="e308c-116">たとえば、属性の文字列引数を他の形式に内部的に変換され、正規の形式で返される可能性があります。または、プロパティ、実際の属性のコードが実行されたときに副作用がある可能性があります。</span><span class="sxs-lookup"><span data-stu-id="e308c-116">For example, a string argument of an attribute might be converted internally to some other representation, and returned in a canonical form; or a property might have side effects when the actual attribute code is executed.</span></span>  
  
-   <span data-ttu-id="e308c-117">プロパティとメソッドの<xref:System.Reflection.CustomAttributeData>基底クラスから継承されたカスタム属性を取得することはできません。</span><span class="sxs-lookup"><span data-stu-id="e308c-117">The properties and methods of <xref:System.Reflection.CustomAttributeData> do not allow you to retrieve the custom attributes inherited from base classes.</span></span>  
  
 <span data-ttu-id="e308c-118">インスタンスを作成する、<xref:System.Reflection.CustomAttributeData>クラスを使用して、 `static` (`Shared` Visual Basic で)<xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A>ファクトリ メソッド。</span><span class="sxs-lookup"><span data-stu-id="e308c-118">To create instances of the <xref:System.Reflection.CustomAttributeData> class, use the `static` (`Shared` in Visual Basic) <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> factory methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e308c-119">次の例では、次の 4 つのコンス トラクターと 4 つのプロパティを持つカスタム属性を定義します。</span><span class="sxs-lookup"><span data-stu-id="e308c-119">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="e308c-120">2 つのプロパティは読み取り専用と、コンス トラクターの位置指定パラメーターを使用して設定されます。</span><span class="sxs-lookup"><span data-stu-id="e308c-120">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="e308c-121">その他の 2 つのプロパティは読み取り/書き込み、および名前付き引数を使用して設定できます。</span><span class="sxs-lookup"><span data-stu-id="e308c-121">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="e308c-122">1 つの位置指定のプロパティは、文字列の配列と、1 つの名前付きプロパティは整数の配列です。</span><span class="sxs-lookup"><span data-stu-id="e308c-122">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="e308c-123">この属性は、アセンブリ、アセンブリで宣言された型、型のメソッド、メソッドのパラメーターに適用されます。</span><span class="sxs-lookup"><span data-stu-id="e308c-123">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="e308c-124">さまざまなコンス トラクターは、このような場合に使用されます。</span><span class="sxs-lookup"><span data-stu-id="e308c-124">Different constructors are used for these cases.</span></span> <span data-ttu-id="e308c-125">実行するとアセンブリ自体をリフレクションのみのコンテキストに読み込みますと型およびメンバーが含まれていることに適用されたカスタム属性に関する情報が表示されます。</span><span class="sxs-lookup"><span data-stu-id="e308c-125">When executed, the assembly loads itself into the reflection-only context and displays information about the custom attributes that were applied to it and to the type and members it contains.</span></span>  
  
 <span data-ttu-id="e308c-126">型に適用される属性では、位置指定引数と名前付きの両方の引数の配列プロパティを示します。</span><span class="sxs-lookup"><span data-stu-id="e308c-126">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
    <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CustomAttributeData ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CustomAttributeData();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e308c-127"><see cref="T:System.Reflection.CustomAttributeData" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="e308c-127">Initializes a new instance of the <see cref="T:System.Reflection.CustomAttributeData" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e308c-128">このコンス トラクターは、構築する際に派生クラスによって呼び出される<xref:System.Reflection.CustomAttributeData>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e308c-128">This constructor is invoked by derived classes during the construction of <xref:System.Reflection.CustomAttributeData> objects.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="e308c-129">直前の呼び出し元に対する完全な信頼が必要です。</span><span class="sxs-lookup"><span data-stu-id="e308c-129">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="e308c-130">このメンバーは、部分的に信頼されたまたは透過的なコードで使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="e308c-130">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="AttributeType">
      <MemberSignature Language="C#" Value="public Type AttributeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AttributeType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeData.AttributeType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AttributeType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ AttributeType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AttributeType : Type" Usage="System.Reflection.CustomAttributeData.AttributeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e308c-131">属性の型を取得します。</span><span class="sxs-lookup"><span data-stu-id="e308c-131">Gets the type of the attribute.</span></span></summary>
        <value><span data-ttu-id="e308c-132">属性の型。</span><span class="sxs-lookup"><span data-stu-id="e308c-132">The type of the attribute.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Constructor">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.ConstructorInfo Constructor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.ConstructorInfo Constructor" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeData.Constructor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Constructor As ConstructorInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::ConstructorInfo ^ Constructor { System::Reflection::ConstructorInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Constructor : System.Reflection.ConstructorInfo" Usage="System.Reflection.CustomAttributeData.Constructor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.ConstructorInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e308c-133">カスタム属性を初期化したはずのコンストラクターを表す <see cref="T:System.Reflection.ConstructorInfo" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="e308c-133">Gets a <see cref="T:System.Reflection.ConstructorInfo" /> object that represents the constructor that would have initialized the custom attribute.</span></span></summary>
        <value><span data-ttu-id="e308c-134"><see cref="T:System.Reflection.CustomAttributeData" /> クラスの現在のインスタンスで表されるカスタム属性を初期化したであろうコンストラクターを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e308c-134">An object that represents the constructor that would have initialized the custom attribute represented by the current instance of the <see cref="T:System.Reflection.CustomAttributeData" /> class.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e308c-135">属性の種類に複数のコンス トラクターがある場合は、このプロパティは、現在によって表される属性のインスタンスを初期化する特定のコンス トラクターのみを返します<xref:System.Reflection.CustomAttributeData>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e308c-135">If an attribute type has multiple constructors, this property returns only the particular constructor that would have initialized the attribute instance represented by the current <xref:System.Reflection.CustomAttributeData> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e308c-136">次の例では、次の 4 つのコンス トラクターと 4 つのプロパティを持つカスタム属性を定義します。</span><span class="sxs-lookup"><span data-stu-id="e308c-136">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="e308c-137">2 つのプロパティは読み取り専用と、コンス トラクターの位置指定パラメーターを使用して設定されます。</span><span class="sxs-lookup"><span data-stu-id="e308c-137">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="e308c-138">その他の 2 つのプロパティは読み取り/書き込み、および名前付き引数を使用して設定できます。</span><span class="sxs-lookup"><span data-stu-id="e308c-138">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="e308c-139">1 つの位置指定のプロパティは、文字列の配列と、1 つの名前付きプロパティは整数の配列です。</span><span class="sxs-lookup"><span data-stu-id="e308c-139">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="e308c-140">この属性は、アセンブリ、アセンブリで宣言された型、型のメソッド、メソッドのパラメーターに適用されます。</span><span class="sxs-lookup"><span data-stu-id="e308c-140">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="e308c-141">さまざまなコンス トラクターは、このような場合に使用されます。</span><span class="sxs-lookup"><span data-stu-id="e308c-141">Different constructors are used for these cases.</span></span> <span data-ttu-id="e308c-142">実行すると、アセンブリはリフレクションのみのコンテキストに読み込まし、カスタム属性を表示します。</span><span class="sxs-lookup"><span data-stu-id="e308c-142">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="e308c-143">型に適用される属性では、位置指定引数と名前付きの両方の引数の配列プロパティを示します。</span><span class="sxs-lookup"><span data-stu-id="e308c-143">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="e308c-144"><xref:System.Reflection.CustomAttributeData.Constructor%2A>でプロパティが使用される、`ShowAttributeData`メソッドをカスタム属性データが表示されます。</span><span class="sxs-lookup"><span data-stu-id="e308c-144">The <xref:System.Reflection.CustomAttributeData.Constructor%2A> property is used in the `ShowAttributeData` method that displays custom attribute data.</span></span> <span data-ttu-id="e308c-145">このコード例では、<xref:System.Reflection.ConstructorInfo>これによって返されるプロパティには、属性を初期化するコンス トラクターを返すことを示す、コンス トラクターを記述するテキスト文字列を表示するプロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="e308c-145">In this code example, the <xref:System.Reflection.ConstructorInfo> returned by this property is used to display a text string that describes the constructor, demonstrating that the property returns the constructor that would initialize the attribute.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="ConstructorArguments">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeTypedArgument&gt; ConstructorArguments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;valuetype System.Reflection.CustomAttributeTypedArgument&gt; ConstructorArguments" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeData.ConstructorArguments" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ConstructorArguments As IList(Of CustomAttributeTypedArgument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeTypedArgument&gt; ^ ConstructorArguments { System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeTypedArgument&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ConstructorArguments : System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeTypedArgument&gt;" Usage="System.Reflection.CustomAttributeData.ConstructorArguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeTypedArgument&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e308c-146"><see cref="T:System.Reflection.CustomAttributeData" /> オブジェクトが表す属性インスタンスに対して指定された位置指定引数のリストを取得します。</span><span class="sxs-lookup"><span data-stu-id="e308c-146">Gets the list of positional arguments specified for the attribute instance represented by the <see cref="T:System.Reflection.CustomAttributeData" /> object.</span></span></summary>
        <value><span data-ttu-id="e308c-147">カスタム属性インスタンスに対して指定された位置指定引数を表す構造体のコレクション。</span><span class="sxs-lookup"><span data-stu-id="e308c-147">A collection of structures that represent the positional arguments specified for the custom attribute instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e308c-148">このメソッドは、任意のカスタム属性のコードを実行することがなく、カスタム属性インスタンスに対して指定されている位置指定引数を取得します。</span><span class="sxs-lookup"><span data-stu-id="e308c-148">This method gets the positional arguments that were specified for the custom attribute instance without executing any of the custom attribute code.</span></span> <span data-ttu-id="e308c-149">そのため、リフレクションのみのコンテキストで使用できます。</span><span class="sxs-lookup"><span data-stu-id="e308c-149">Thus, it can be used in the reflection-only context.</span></span>  
  
 <span data-ttu-id="e308c-150">使用して、<xref:System.Reflection.CustomAttributeData.NamedArguments%2A>属性インスタンスに対して指定された名前付き引数を取得します。</span><span class="sxs-lookup"><span data-stu-id="e308c-150">Use the <xref:System.Reflection.CustomAttributeData.NamedArguments%2A> method to get the named arguments specified for the attribute instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e308c-151">次の例では、次の 4 つのコンス トラクターと 4 つのプロパティを持つカスタム属性を定義します。</span><span class="sxs-lookup"><span data-stu-id="e308c-151">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="e308c-152">2 つのプロパティは読み取り専用と、コンス トラクターの位置指定パラメーターを使用して設定されます。</span><span class="sxs-lookup"><span data-stu-id="e308c-152">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="e308c-153">その他の 2 つのプロパティは読み取り/書き込み、および名前付き引数を使用して設定できます。</span><span class="sxs-lookup"><span data-stu-id="e308c-153">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="e308c-154">1 つの位置指定のプロパティは、文字列の配列と、1 つの名前付きプロパティは整数の配列です。</span><span class="sxs-lookup"><span data-stu-id="e308c-154">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="e308c-155">この属性は、アセンブリ、アセンブリで宣言された型、型のメソッド、メソッドのパラメーターに適用されます。</span><span class="sxs-lookup"><span data-stu-id="e308c-155">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="e308c-156">さまざまなコンス トラクターは、このような場合に使用されます。</span><span class="sxs-lookup"><span data-stu-id="e308c-156">Different constructors are used for these cases.</span></span> <span data-ttu-id="e308c-157">実行すると、アセンブリはリフレクションのみのコンテキストに読み込まし、カスタム属性を表示します。</span><span class="sxs-lookup"><span data-stu-id="e308c-157">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="e308c-158">型に適用される属性では、位置指定引数と名前付きの両方の引数の配列プロパティを示します。</span><span class="sxs-lookup"><span data-stu-id="e308c-158">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="e308c-159"><xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A>でプロパティが使用される、`ShowAttributeData`メソッドをカスタム属性データが表示されます。</span><span class="sxs-lookup"><span data-stu-id="e308c-159">The <xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A> property is used in the `ShowAttributeData` method that displays custom attribute data.</span></span> <span data-ttu-id="e308c-160">このコード例はこのプロパティを使用して属性を初期化するコンス トラクターに渡される引数の一覧を表示します。</span><span class="sxs-lookup"><span data-stu-id="e308c-160">In this code example, this property is used to display the list of arguments passed to the constructor that initialized the attribute.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.CustomAttributeData.NamedArguments" />
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="customAttributeData.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="e308c-161">対象のインスタンスと比較する対象のオブジェクト、または <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e308c-161">An object to compare with this instance, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="e308c-162">このインスタンスが、指定されたオブジェクトと等価であるかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="e308c-162">Returns a value that indicates whether this instance is equal to a specified object.</span></span></summary>
        <returns><span data-ttu-id="e308c-163"><paramref name="obj" /> が現在のインスタンスと等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e308c-163"><see langword="true" /> if <paramref name="obj" /> is equal to the current instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e308c-164">対象に適用されている属性に関するデータを表す <see cref="T:System.Reflection.CustomAttributeData" /> オブジェクトのリストを返します。</span><span class="sxs-lookup"><span data-stu-id="e308c-164">Returns a list of <see cref="T:System.Reflection.CustomAttributeData" /> objects representing data about the attributes that have been applied to the target.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt; GetCustomAttributes (System.Reflection.Assembly target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;class System.Reflection.CustomAttributeData&gt; GetCustomAttributes(class System.Reflection.Assembly target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.Assembly)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (target As Assembly) As IList(Of CustomAttributeData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeData ^&gt; ^ GetCustomAttributes(System::Reflection::Assembly ^ target);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.Assembly -&gt; System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;" Usage="System.Reflection.CustomAttributeData.GetCustomAttributes target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Reflection.Assembly" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="e308c-165">取得するカスタム属性データが含まれるアセンブリ。</span><span class="sxs-lookup"><span data-stu-id="e308c-165">The assembly whose custom attribute data is to be retrieved.</span></span></param>
        <summary><span data-ttu-id="e308c-166">ターゲット アセンブリに適用されている属性に関するデータを表す <see cref="T:System.Reflection.CustomAttributeData" /> オブジェクトのリストを返します。</span><span class="sxs-lookup"><span data-stu-id="e308c-166">Returns a list of <see cref="T:System.Reflection.CustomAttributeData" /> objects representing data about the attributes that have been applied to the target assembly.</span></span></summary>
        <returns><span data-ttu-id="e308c-167">対象のアセンブリに適用されている属性に関するデータを表すオブジェクトのリスト。</span><span class="sxs-lookup"><span data-stu-id="e308c-167">A list of objects that represent data about the attributes that have been applied to the target assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e308c-168">このメソッドの代替を提供する、<xref:System.Reflection.Assembly.GetCustomAttributes%2A>リフレクションのみのコンテキストで常に使用できるメソッド。</span><span class="sxs-lookup"><span data-stu-id="e308c-168">This method provides an alternative to the <xref:System.Reflection.Assembly.GetCustomAttributes%2A> method that can always be used in the Reflection-only context.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e308c-169">次の例では、次の 4 つのコンス トラクターと 4 つのプロパティを持つカスタム属性を定義します。</span><span class="sxs-lookup"><span data-stu-id="e308c-169">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="e308c-170">2 つのプロパティは読み取り専用と、コンス トラクターの位置指定パラメーターを使用して設定されます。</span><span class="sxs-lookup"><span data-stu-id="e308c-170">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="e308c-171">その他の 2 つのプロパティは読み取り/書き込み、および名前付き引数を使用して設定できます。</span><span class="sxs-lookup"><span data-stu-id="e308c-171">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="e308c-172">1 つの位置指定のプロパティは、文字列の配列と、1 つの名前付きプロパティは整数の配列です。</span><span class="sxs-lookup"><span data-stu-id="e308c-172">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="e308c-173">この属性は、アセンブリ、アセンブリで宣言された型、型のメソッド、メソッドのパラメーターに適用されます。</span><span class="sxs-lookup"><span data-stu-id="e308c-173">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="e308c-174">さまざまなコンス トラクターは、このような場合に使用されます。</span><span class="sxs-lookup"><span data-stu-id="e308c-174">Different constructors are used for these cases.</span></span> <span data-ttu-id="e308c-175">実行すると、アセンブリはリフレクションのみのコンテキストに読み込まし、カスタム属性を表示します。</span><span class="sxs-lookup"><span data-stu-id="e308c-175">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="e308c-176">型に適用される属性では、位置指定引数と名前付きの両方の引数の配列プロパティを示します。</span><span class="sxs-lookup"><span data-stu-id="e308c-176">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="e308c-177"><xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A>でメソッドが使用される`Main()`をアセンブリに適用されるカスタム属性を取得します。</span><span class="sxs-lookup"><span data-stu-id="e308c-177">The <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> method is used in `Main()` to get the custom attributes applied to the assembly.</span></span> <span data-ttu-id="e308c-178">メソッドの戻り値が渡される、`ShowAttributeData`メソッド。</span><span class="sxs-lookup"><span data-stu-id="e308c-178">The return value of the method is passed to the `ShowAttributeData` method.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e308c-179"><paramref name="target" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="e308c-179"><paramref name="target" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt; GetCustomAttributes (System.Reflection.MemberInfo target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;class System.Reflection.CustomAttributeData&gt; GetCustomAttributes(class System.Reflection.MemberInfo target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.MemberInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (target As MemberInfo) As IList(Of CustomAttributeData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeData ^&gt; ^ GetCustomAttributes(System::Reflection::MemberInfo ^ target);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.MemberInfo -&gt; System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;" Usage="System.Reflection.CustomAttributeData.GetCustomAttributes target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Reflection.MemberInfo" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="e308c-180">取得する属性データが含まれるメンバー。</span><span class="sxs-lookup"><span data-stu-id="e308c-180">The member whose attribute data is to be retrieved.</span></span></param>
        <summary><span data-ttu-id="e308c-181">ターゲット メンバーに適用されている属性に関するデータを表す <see cref="T:System.Reflection.CustomAttributeData" /> オブジェクトのリストを返します。</span><span class="sxs-lookup"><span data-stu-id="e308c-181">Returns a list of <see cref="T:System.Reflection.CustomAttributeData" /> objects representing data about the attributes that have been applied to the target member.</span></span></summary>
        <returns><span data-ttu-id="e308c-182">対象のメンバーに適用されている属性に関するデータを表すオブジェクトのリスト。</span><span class="sxs-lookup"><span data-stu-id="e308c-182">A list of objects that represent data about the attributes that have been applied to the target member.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e308c-183">このメソッドのオーバー ロードは、ため、型、入れ子にされた型、および型のメンバー、カスタム属性データを取得、<xref:System.Type>クラスとクラス、<xref:System.Reflection>名前空間からすべての派生型のメンバーを表す<xref:System.Reflection.MemberInfo>。</span><span class="sxs-lookup"><span data-stu-id="e308c-183">This method overload gets custom attribute data for types, nested types, and type members, because the <xref:System.Type> class and the classes in the <xref:System.Reflection> namespace that represent type members all derive from <xref:System.Reflection.MemberInfo>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e308c-184">次の例では、次の 4 つのコンス トラクターと 4 つのプロパティを持つカスタム属性を定義します。</span><span class="sxs-lookup"><span data-stu-id="e308c-184">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="e308c-185">2 つのプロパティは読み取り専用と、コンス トラクターの位置指定パラメーターを使用して設定されます。</span><span class="sxs-lookup"><span data-stu-id="e308c-185">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="e308c-186">その他の 2 つのプロパティは読み取り/書き込み、および名前付き引数を使用して設定できます。</span><span class="sxs-lookup"><span data-stu-id="e308c-186">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="e308c-187">1 つの位置指定のプロパティは、文字列の配列と、1 つの名前付きプロパティは整数の配列です。</span><span class="sxs-lookup"><span data-stu-id="e308c-187">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="e308c-188">この属性は、アセンブリ、アセンブリで宣言された型、型のメソッド、メソッドのパラメーターに適用されます。</span><span class="sxs-lookup"><span data-stu-id="e308c-188">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="e308c-189">さまざまなコンス トラクターは、このような場合に使用されます。</span><span class="sxs-lookup"><span data-stu-id="e308c-189">Different constructors are used for these cases.</span></span> <span data-ttu-id="e308c-190">実行すると、アセンブリはリフレクションのみのコンテキストに読み込まし、カスタム属性を表示します。</span><span class="sxs-lookup"><span data-stu-id="e308c-190">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="e308c-191">型に適用される属性では、位置指定引数と名前付きの両方の引数の配列プロパティを示します。</span><span class="sxs-lookup"><span data-stu-id="e308c-191">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="e308c-192"><xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A>でメソッドが使用される`Main()`型にし、テスト メソッドに適用されたカスタム属性を取得する (<xref:System.Type>から派生した<xref:System.Reflection.MemberInfo>)。</span><span class="sxs-lookup"><span data-stu-id="e308c-192">The <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> method is used in `Main()` to get the custom attributes that were applied to a type and to a test method (<xref:System.Type> derives from <xref:System.Reflection.MemberInfo>).</span></span> <span data-ttu-id="e308c-193">戻り値<xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A>に渡される、`ShowAttributeData`メソッド。</span><span class="sxs-lookup"><span data-stu-id="e308c-193">The return value of <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> is passed to the `ShowAttributeData` method.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="Overload:System.Reflection.MemberInfo.GetCustomAttributes" />
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e308c-194"><paramref name="target" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="e308c-194"><paramref name="target" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt; GetCustomAttributes (System.Reflection.Module target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;class System.Reflection.CustomAttributeData&gt; GetCustomAttributes(class System.Reflection.Module target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.Module)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (target As Module) As IList(Of CustomAttributeData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeData ^&gt; ^ GetCustomAttributes(System::Reflection::Module ^ target);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.Module -&gt; System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;" Usage="System.Reflection.CustomAttributeData.GetCustomAttributes target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Reflection.Module" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="e308c-195">カスタム属性データを取得する対象のモジュール。</span><span class="sxs-lookup"><span data-stu-id="e308c-195">The module whose custom attribute data is to be retrieved.</span></span></param>
        <summary><span data-ttu-id="e308c-196">ターゲット モジュールに適用されている属性に関するデータを表す <see cref="T:System.Reflection.CustomAttributeData" /> オブジェクトのリストを戻します。</span><span class="sxs-lookup"><span data-stu-id="e308c-196">Returns a list of <see cref="T:System.Reflection.CustomAttributeData" /> objects representing data about the attributes that have been applied to the target module.</span></span></summary>
        <returns><span data-ttu-id="e308c-197">対象のモジュールに適用されている属性に関するデータを表すオブジェクトのリスト。</span><span class="sxs-lookup"><span data-stu-id="e308c-197">A list of objects that represent data about the attributes that have been applied to the target module.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e308c-198"><paramref name="target" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="e308c-198"><paramref name="target" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt; GetCustomAttributes (System.Reflection.ParameterInfo target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;class System.Reflection.CustomAttributeData&gt; GetCustomAttributes(class System.Reflection.ParameterInfo target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.ParameterInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (target As ParameterInfo) As IList(Of CustomAttributeData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeData ^&gt; ^ GetCustomAttributes(System::Reflection::ParameterInfo ^ target);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.ParameterInfo -&gt; System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;" Usage="System.Reflection.CustomAttributeData.GetCustomAttributes target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Reflection.ParameterInfo" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="e308c-199">取得する属性データが含まれるパラメーター。</span><span class="sxs-lookup"><span data-stu-id="e308c-199">The parameter whose attribute data is to be retrieved.</span></span></param>
        <summary><span data-ttu-id="e308c-200">ターゲット パラメーターに適用されている属性に関するデータを表す <see cref="T:System.Reflection.CustomAttributeData" /> オブジェクトのリストを戻します。</span><span class="sxs-lookup"><span data-stu-id="e308c-200">Returns a list of <see cref="T:System.Reflection.CustomAttributeData" /> objects representing data about the attributes that have been applied to the target parameter.</span></span></summary>
        <returns><span data-ttu-id="e308c-201">対象のパラメーターに適用されている属性に関するデータを表すオブジェクトのリスト。</span><span class="sxs-lookup"><span data-stu-id="e308c-201">A list of objects that represent data about the attributes that have been applied to the target parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e308c-202">このメソッドの代替を提供する、<xref:System.Reflection.ParameterInfo.GetCustomAttributes%2A>リフレクションのみのコンテキストで常に使用できるメソッド。</span><span class="sxs-lookup"><span data-stu-id="e308c-202">This method provides an alternative to the <xref:System.Reflection.ParameterInfo.GetCustomAttributes%2A> method that can always be used in the Reflection-only context.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e308c-203">次の例では、次の 4 つのコンス トラクターと 4 つのプロパティを持つカスタム属性を定義します。</span><span class="sxs-lookup"><span data-stu-id="e308c-203">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="e308c-204">2 つのプロパティは読み取り専用と、コンス トラクターの位置指定パラメーターを使用して設定されます。</span><span class="sxs-lookup"><span data-stu-id="e308c-204">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="e308c-205">その他の 2 つのプロパティは読み取り/書き込み、および名前付き引数を使用して設定できます。</span><span class="sxs-lookup"><span data-stu-id="e308c-205">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="e308c-206">1 つの位置指定のプロパティは、文字列の配列と、1 つの名前付きプロパティは整数の配列です。</span><span class="sxs-lookup"><span data-stu-id="e308c-206">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="e308c-207">この属性は、アセンブリ、アセンブリで宣言された型、型のメソッド、メソッドのパラメーターに適用されます。</span><span class="sxs-lookup"><span data-stu-id="e308c-207">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="e308c-208">さまざまなコンス トラクターは、このような場合に使用されます。</span><span class="sxs-lookup"><span data-stu-id="e308c-208">Different constructors are used for these cases.</span></span> <span data-ttu-id="e308c-209">実行すると、アセンブリはリフレクションのみのコンテキストに読み込まし、カスタム属性を表示します。</span><span class="sxs-lookup"><span data-stu-id="e308c-209">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="e308c-210">型に適用される属性では、位置指定引数と名前付きの両方の引数の配列プロパティを示します。</span><span class="sxs-lookup"><span data-stu-id="e308c-210">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="e308c-211"><xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A>でメソッドが使用される`Main()`テスト メソッドのパラメーターに適用されるカスタム属性を取得します。</span><span class="sxs-lookup"><span data-stu-id="e308c-211">The <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> method is used in `Main()` to retrieve the custom attributes applied to a parameter of a test method.</span></span> <span data-ttu-id="e308c-212">戻り値<xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A>に渡される、`ShowAttributeData`メソッド。</span><span class="sxs-lookup"><span data-stu-id="e308c-212">The return value of <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> is passed to the `ShowAttributeData` method.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e308c-213"><paramref name="target" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="e308c-213"><paramref name="target" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="customAttributeData.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e308c-214">特定の型のハッシュ関数として機能します。</span><span class="sxs-lookup"><span data-stu-id="e308c-214">Serves as a hash function for a particular type.</span></span></summary>
        <returns><span data-ttu-id="e308c-215">現在の <see cref="T:System.Object" /> のハッシュ コード。</span><span class="sxs-lookup"><span data-stu-id="e308c-215">A hash code for the current <see cref="T:System.Object" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="NamedArguments">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeNamedArgument&gt; NamedArguments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;valuetype System.Reflection.CustomAttributeNamedArgument&gt; NamedArguments" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeData.NamedArguments" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NamedArguments As IList(Of CustomAttributeNamedArgument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeNamedArgument&gt; ^ NamedArguments { System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeNamedArgument&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NamedArguments : System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeNamedArgument&gt;" Usage="System.Reflection.CustomAttributeData.NamedArguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeNamedArgument&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e308c-216"><see cref="T:System.Reflection.CustomAttributeData" /> オブジェクトが表す属性インスタンスに対して指定された名前付き引数のリストを取得します。</span><span class="sxs-lookup"><span data-stu-id="e308c-216">Gets the list of named arguments specified for the attribute instance represented by the <see cref="T:System.Reflection.CustomAttributeData" /> object.</span></span></summary>
        <value><span data-ttu-id="e308c-217">カスタム属性インスタンスに対して指定された名前付き引数を表す構造体のコレクション。</span><span class="sxs-lookup"><span data-stu-id="e308c-217">A collection of structures that represent the named arguments specified for the custom attribute instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e308c-218">このメソッドは、任意のカスタム属性のコードを実行することがなく、カスタム属性インスタンスに対して指定された名前付き引数を取得します。</span><span class="sxs-lookup"><span data-stu-id="e308c-218">This method gets the named arguments that were specified for the custom attribute instance without executing any of the custom attribute code.</span></span> <span data-ttu-id="e308c-219">そのため、リフレクションのみのコンテキストで使用できます。</span><span class="sxs-lookup"><span data-stu-id="e308c-219">Thus, it can be used in the Reflection-only context.</span></span>  
  
 <span data-ttu-id="e308c-220">返された一覧には、属性インスタンスに対して指定された名前付き引数のみが含まれています。</span><span class="sxs-lookup"><span data-stu-id="e308c-220">The list that is returned contains only the named arguments that were specified for the attribute instance.</span></span>  
  
 <span data-ttu-id="e308c-221">使用して、<xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A>属性インスタンスに対して指定されている位置指定引数を取得します。</span><span class="sxs-lookup"><span data-stu-id="e308c-221">Use the <xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A> method to get the positional arguments that were specified for the attribute instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e308c-222">次の例では、次の 4 つのコンス トラクターと 4 つのプロパティを持つカスタム属性を定義します。</span><span class="sxs-lookup"><span data-stu-id="e308c-222">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="e308c-223">2 つのプロパティは読み取り専用と、コンス トラクターの位置指定パラメーターを使用して設定されます。</span><span class="sxs-lookup"><span data-stu-id="e308c-223">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="e308c-224">その他の 2 つのプロパティは読み取り/書き込み、および名前付き引数を使用して設定できます。</span><span class="sxs-lookup"><span data-stu-id="e308c-224">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="e308c-225">1 つの位置指定のプロパティは、文字列の配列と、1 つの名前付きプロパティは整数の配列です。</span><span class="sxs-lookup"><span data-stu-id="e308c-225">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="e308c-226">この属性は、アセンブリ、アセンブリで宣言された型、型のメソッド、メソッドのパラメーターに適用されます。</span><span class="sxs-lookup"><span data-stu-id="e308c-226">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="e308c-227">さまざまなコンス トラクターは、このような場合に使用されます。</span><span class="sxs-lookup"><span data-stu-id="e308c-227">Different constructors are used for these cases.</span></span> <span data-ttu-id="e308c-228">実行すると、アセンブリはリフレクションのみのコンテキストに読み込まし、カスタム属性を表示します。</span><span class="sxs-lookup"><span data-stu-id="e308c-228">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="e308c-229">型に適用される属性では、位置指定引数と名前付きの両方の引数の配列プロパティを示します。</span><span class="sxs-lookup"><span data-stu-id="e308c-229">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="e308c-230"><xref:System.Reflection.CustomAttributeData.NamedArguments%2A>でプロパティが使用される、`ShowAttributeData`メソッドをカスタム属性データが表示されます。</span><span class="sxs-lookup"><span data-stu-id="e308c-230">The <xref:System.Reflection.CustomAttributeData.NamedArguments%2A> property is used in the `ShowAttributeData` method that displays custom attribute data.</span></span> <span data-ttu-id="e308c-231">このコード例では、このプロパティは属性の指定された名前付き引数の一覧を表示する使用されます。</span><span class="sxs-lookup"><span data-stu-id="e308c-231">In this code example, this property is used to display the list of named arguments specified for the attribute.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.CustomAttributeData.ConstructorArguments" />
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="customAttributeData.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e308c-232">カスタム属性の文字列形式を返します。</span><span class="sxs-lookup"><span data-stu-id="e308c-232">Returns a string representation of the custom attribute.</span></span></summary>
        <returns><span data-ttu-id="e308c-233">カスタム属性を表す文字列値。</span><span class="sxs-lookup"><span data-stu-id="e308c-233">A string value that represents the custom attribute.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e308c-234">文字列値には、属性の型、属性のパラメーター、および名前付きパラメーターが含まれています。</span><span class="sxs-lookup"><span data-stu-id="e308c-234">The string value includes the attribute type, the attribute parameters, and the named parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e308c-235">次の例では、次の 4 つのコンス トラクターと 4 つのプロパティを持つカスタム属性を定義します。</span><span class="sxs-lookup"><span data-stu-id="e308c-235">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="e308c-236">2 つのプロパティは読み取り専用と、コンス トラクターの位置指定パラメーターを使用して設定されます。</span><span class="sxs-lookup"><span data-stu-id="e308c-236">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="e308c-237">その他の 2 つのプロパティは読み取り/書き込み、および名前付き引数を使用して設定できます。</span><span class="sxs-lookup"><span data-stu-id="e308c-237">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="e308c-238">1 つの位置指定のプロパティは、文字列の配列と、1 つの名前付きプロパティは整数の配列です。</span><span class="sxs-lookup"><span data-stu-id="e308c-238">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="e308c-239">この属性は、アセンブリ、アセンブリで宣言された型、型のメソッド、メソッドのパラメーターに適用されます。</span><span class="sxs-lookup"><span data-stu-id="e308c-239">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="e308c-240">さまざまなコンス トラクターは、このような場合に使用されます。</span><span class="sxs-lookup"><span data-stu-id="e308c-240">Different constructors are used for these cases.</span></span> <span data-ttu-id="e308c-241">実行すると、アセンブリはリフレクションのみのコンテキストに読み込まし、カスタム属性を表示します。</span><span class="sxs-lookup"><span data-stu-id="e308c-241">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="e308c-242">型に適用される属性では、位置指定引数と名前付きの両方の引数の配列プロパティを示します。</span><span class="sxs-lookup"><span data-stu-id="e308c-242">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="e308c-243">この例で、<xref:System.Reflection.CustomAttributeData.ToString%2A>でメソッドが使用される、`ShowAttributeData`メソッドは、データが表示されている属性を識別します。</span><span class="sxs-lookup"><span data-stu-id="e308c-243">In this example, the <xref:System.Reflection.CustomAttributeData.ToString%2A> method is used in the `ShowAttributeData` method, to identify the attribute whose data is being displayed.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>