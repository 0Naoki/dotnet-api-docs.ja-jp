<Type Name="CustomAttributeData" FullName="System.Reflection.CustomAttributeData">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b81fc715a47a4fd76280f78c4364218e82b0390c" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CustomAttributeData" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit CustomAttributeData extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.CustomAttributeData" />
  <TypeSignature Language="VB.NET" Value="Public Class CustomAttributeData" />
  <TypeSignature Language="C++ CLI" Value="public ref class CustomAttributeData" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="ed2cc-101">リフレクションのみのコンテキストに読み込まれているアセンブリ、モジュール、型、メンバー、およびパラメーターのカスタム属性データへのアクセスを提供します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="ed2cc-101">Provides access to custom attribute data for assemblies, modules, types, members and parameters that are loaded into the reflection-only context.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed2cc-102">常とそのプロパティを調べてなどのメソッドを使用してそれらのインスタンスを作成することでカスタム属性を確認することはできませんので、リフレクションのみのコンテキストで検査されているコードを実行できません<xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType>、<xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=nameWithType>のようにします。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-102">Code that is being examined in the reflection-only context cannot be executed, so it is not always possible to examine custom attributes by creating instances of them and then examining their properties, using methods like <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType>, <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=nameWithType>, and so on.</span></span> <span data-ttu-id="ed2cc-103">属性型自体のコードがリフレクションのみのコンテキストに読み込まれている場合は実行できません。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-103">If the code for the attribute type itself is loaded into the reflection-only context, it cannot be executed.</span></span>  
  
 <span data-ttu-id="ed2cc-104"><xref:System.Reflection.CustomAttributeData>クラスにより、リフレクションのみのコンテキストで調査できるようにカスタム属性の属性の抽象化を提供します。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-104">The <xref:System.Reflection.CustomAttributeData> class allows examination of custom attributes in the reflection-only context by providing an abstraction for attributes.</span></span> <span data-ttu-id="ed2cc-105">このクラスのメンバーを位置指定引数を取得するために使用し、名前付き属性の引数。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-105">The members of this class can be used to obtain the positional arguments and named arguments of the attribute.</span></span> <span data-ttu-id="ed2cc-106">使用して、<xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A>の一覧を取得するプロパティ<xref:System.Reflection.CustomAttributeTypedArgument>構造体を使用して、位置指定引数を表す、<xref:System.Reflection.CustomAttributeData.NamedArguments%2A>の一覧を取得するプロパティ<xref:System.Reflection.CustomAttributeNamedArgument>名前付き引数を表す構造体。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-106">Use the <xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A> property to get a list of <xref:System.Reflection.CustomAttributeTypedArgument> structures that represent the positional arguments, and use the <xref:System.Reflection.CustomAttributeData.NamedArguments%2A> property to get a list of <xref:System.Reflection.CustomAttributeNamedArgument> structures that represent the named arguments.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ed2cc-107"><xref:System.Reflection.CustomAttributeNamedArgument>構造のみを取得し、引数の値を設定するために使用する属性のプロパティに関する情報を提供します。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-107">The <xref:System.Reflection.CustomAttributeNamedArgument> structure only provides information about the attribute property used to get and set the argument value.</span></span> <span data-ttu-id="ed2cc-108">型と引数の値を取得するを使用して、<xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A?displayProperty=nameWithType>を取得するプロパティ、<xref:System.Reflection.CustomAttributeTypedArgument>構造体。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-108">To obtain the type and value of the argument, use the <xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A?displayProperty=nameWithType> property to obtain a <xref:System.Reflection.CustomAttributeTypedArgument> structure.</span></span>  
  
 <span data-ttu-id="ed2cc-109">ある場合、<xref:System.Reflection.CustomAttributeTypedArgument>名前付きまたは位置指定、かどうか、引数の構造体を使用して、<xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A?displayProperty=nameWithType>型を取得するプロパティと<xref:System.Reflection.CustomAttributeTypedArgument.Value%2A?displayProperty=nameWithType>プロパティ値を取得します。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-109">When you have a <xref:System.Reflection.CustomAttributeTypedArgument> structure for an argument, whether named or positional, use the <xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A?displayProperty=nameWithType> property to get the type and the <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A?displayProperty=nameWithType> property to get the value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ed2cc-110">配列引数に対して、<xref:System.Reflection.CustomAttributeTypedArgument.Value%2A?displayProperty=nameWithType>プロパティは、ジェネリック型を返します<xref:System.Collections.ObjectModel.ReadOnlyCollection%601>の<xref:System.Reflection.CustomAttributeTypedArgument>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-110">For an array argument, the <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A?displayProperty=nameWithType> property returns a generic <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> of <xref:System.Reflection.CustomAttributeTypedArgument> objects.</span></span> <span data-ttu-id="ed2cc-111">各<xref:System.Reflection.CustomAttributeTypedArgument>コレクション内のオブジェクトが配列の対応する要素を表します。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-111">Each <xref:System.Reflection.CustomAttributeTypedArgument> object in the collection represents the corresponding element of the array.</span></span>  
  
 <span data-ttu-id="ed2cc-112"><xref:System.Reflection.CustomAttributeData> 実行コンテキストにもリフレクションのみのコンテキストで使用できます。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-112"><xref:System.Reflection.CustomAttributeData> can be used in the execution context as well as in the reflection-only context.</span></span> <span data-ttu-id="ed2cc-113">たとえば、カスタム属性のコードを含むアセンブリが読み込まれないようにすることができます。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-113">For example, you might want to avoid loading the assembly that contains the code for a custom attribute.</span></span> <span data-ttu-id="ed2cc-114">使用して、<xref:System.Reflection.CustomAttributeData>クラスとは異なるなどのメソッドを使用して<xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType>:</span><span class="sxs-lookup"><span data-stu-id="ed2cc-114">Using the <xref:System.Reflection.CustomAttributeData> class is different from using methods like <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType>:</span></span>  
  
-   <span data-ttu-id="ed2cc-115">プロパティとメソッドの<xref:System.Reflection.CustomAttributeData>のみを提供する指定された値を持つ属性インスタンスの場合、コンス トラクターのセマンティクスではありません。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-115">The properties and methods of <xref:System.Reflection.CustomAttributeData> only provide you with the values that were specified for the attribute instance, not the semantics of the constructor.</span></span> <span data-ttu-id="ed2cc-116">たとえば、属性の文字列引数可能性内部的には、その他の表現に変換があり; 正規の形式で返されるまたは、実際の属性のコードを実行すると、プロパティに副作用がある可能性があります。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-116">For example, a string argument of an attribute might be converted internally to some other representation, and returned in a canonical form; or a property might have side effects when the actual attribute code is executed.</span></span>  
  
-   <span data-ttu-id="ed2cc-117">プロパティとメソッドの<xref:System.Reflection.CustomAttributeData>基底クラスから継承されたカスタム属性を取得することはできません。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-117">The properties and methods of <xref:System.Reflection.CustomAttributeData> do not allow you to retrieve the custom attributes inherited from base classes.</span></span>  
  
 <span data-ttu-id="ed2cc-118">インスタンスを作成する、<xref:System.Reflection.CustomAttributeData>クラスを使用して、 `static` (`Shared` Visual Basic で)<xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A>ファクトリ メソッド。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-118">To create instances of the <xref:System.Reflection.CustomAttributeData> class, use the `static` (`Shared` in Visual Basic) <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> factory methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ed2cc-119">次の例では、次の 4 つのコンス トラクターと 4 つのプロパティを持つカスタム属性を定義します。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-119">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="ed2cc-120">2 つのプロパティは読み取り専用され、コンス トラクターの位置指定パラメーターを使用して設定されます。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-120">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="ed2cc-121">その他の 2 つのプロパティは読み取り/書き込み、および名前付き引数を使用して設定できます。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-121">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="ed2cc-122">1 つの位置指定プロパティは、文字列の配列および 1 つの名前付きプロパティは、整数の配列。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-122">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="ed2cc-123">この属性は、アセンブリ、アセンブリで宣言された型、型のメソッド、メソッドのパラメーターに適用されます。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-123">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="ed2cc-124">別のコンス トラクターは、このような場合に使用されます。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-124">Different constructors are used for these cases.</span></span> <span data-ttu-id="ed2cc-125">実行すると、アセンブリは自体をリフレクションのみのコンテキストに読み込まれとが含まれているメンバーと型に適用されたカスタム属性に関する情報が表示されます。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-125">When executed, the assembly loads itself into the reflection-only context and displays information about the custom attributes that were applied to it and to the type and members it contains.</span></span>  
  
 <span data-ttu-id="ed2cc-126">型に適用される属性では、位置指定および名前付きの両方の引数を指定して、配列のプロパティを示します。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-126">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
    <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CustomAttributeData ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CustomAttributeData();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ed2cc-127">
            <see cref="T:System.Reflection.CustomAttributeData" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed2cc-127">Initializes a new instance of the <see cref="T:System.Reflection.CustomAttributeData" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed2cc-128">構築中にこのコンス トラクターが派生クラスによって呼び出された<xref:System.Reflection.CustomAttributeData>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-128">This constructor is invoked by derived classes during the construction of <xref:System.Reflection.CustomAttributeData> objects.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="ed2cc-129">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed2cc-129">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="ed2cc-130">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed2cc-130">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AttributeType">
      <MemberSignature Language="C#" Value="public Type AttributeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AttributeType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeData.AttributeType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AttributeType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ AttributeType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ed2cc-131">属性の型を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed2cc-131">Gets the type of the attribute.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ed2cc-132">属性の型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed2cc-132">The type of the attribute.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Constructor">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.ConstructorInfo Constructor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.ConstructorInfo Constructor" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeData.Constructor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Constructor As ConstructorInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::ConstructorInfo ^ Constructor { System::Reflection::ConstructorInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.ConstructorInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ed2cc-133">カスタム属性を初期化したはずのコンストラクターを表す <see cref="T:System.Reflection.ConstructorInfo" /> オブジェクトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed2cc-133">Gets a <see cref="T:System.Reflection.ConstructorInfo" /> object that represents the constructor that would have initialized the custom attribute.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ed2cc-134">
            <see cref="T:System.Reflection.CustomAttributeData" /> クラスの現在のインスタンスで表されるカスタム属性を初期化したであろうコンストラクターを表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed2cc-134">An object that represents the constructor that would have initialized the custom attribute represented by the current instance of the <see cref="T:System.Reflection.CustomAttributeData" /> class.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed2cc-135">このプロパティが現在によって表される属性のインスタンスを初期化するを特定のコンス トラクターのみを返します属性の種類に複数のコンス トラクターがある場合は、<xref:System.Reflection.CustomAttributeData>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-135">If an attribute type has multiple constructors, this property returns only the particular constructor that would have initialized the attribute instance represented by the current <xref:System.Reflection.CustomAttributeData> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ed2cc-136">次の例では、次の 4 つのコンス トラクターと 4 つのプロパティを持つカスタム属性を定義します。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-136">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="ed2cc-137">2 つのプロパティは読み取り専用され、コンス トラクターの位置指定パラメーターを使用して設定されます。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-137">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="ed2cc-138">その他の 2 つのプロパティは読み取り/書き込み、および名前付き引数を使用して設定できます。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-138">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="ed2cc-139">1 つの位置指定プロパティは、文字列の配列および 1 つの名前付きプロパティは、整数の配列。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-139">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="ed2cc-140">この属性は、アセンブリ、アセンブリで宣言された型、型のメソッド、メソッドのパラメーターに適用されます。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-140">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="ed2cc-141">別のコンス トラクターは、このような場合に使用されます。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-141">Different constructors are used for these cases.</span></span> <span data-ttu-id="ed2cc-142">実行すると、アセンブリはリフレクション専用コンテキストに読み込みます自体し、カスタム属性を表示します。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-142">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="ed2cc-143">型に適用される属性では、位置指定および名前付きの両方の引数を指定して、配列のプロパティを示します。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-143">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="ed2cc-144"><xref:System.Reflection.CustomAttributeData.Constructor%2A>でプロパティが使用される、`ShowAttributeData`をカスタム属性データを表示するメソッド。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-144">The <xref:System.Reflection.CustomAttributeData.Constructor%2A> property is used in the `ShowAttributeData` method that displays custom attribute data.</span></span> <span data-ttu-id="ed2cc-145">このコード例では、<xref:System.Reflection.ConstructorInfo>これによって返されるプロパティの使用にプロパティには、属性を初期化するコンス トラクターを返すことを示す、コンス トラクターを表すテキスト文字列を表示します。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-145">In this code example, the <xref:System.Reflection.ConstructorInfo> returned by this property is used to display a text string that describes the constructor, demonstrating that the property returns the constructor that would initialize the attribute.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="ConstructorArguments">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeTypedArgument&gt; ConstructorArguments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;valuetype System.Reflection.CustomAttributeTypedArgument&gt; ConstructorArguments" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeData.ConstructorArguments" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ConstructorArguments As IList(Of CustomAttributeTypedArgument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeTypedArgument&gt; ^ ConstructorArguments { System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeTypedArgument&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeTypedArgument&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ed2cc-146">
            <see cref="T:System.Reflection.CustomAttributeData" /> オブジェクトが表す属性インスタンスに対して指定された位置指定引数のリストを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed2cc-146">Gets the list of positional arguments specified for the attribute instance represented by the <see cref="T:System.Reflection.CustomAttributeData" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ed2cc-147">カスタム属性インスタンスに対して指定された位置指定引数を表す構造体のコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed2cc-147">A collection of structures that represent the positional arguments specified for the custom attribute instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed2cc-148">このメソッドは、カスタム属性のコードを実行せず、カスタム属性のインスタンスに対して指定された位置指定引数を取得します。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-148">This method gets the positional arguments that were specified for the custom attribute instance without executing any of the custom attribute code.</span></span> <span data-ttu-id="ed2cc-149">このため、リフレクションのみのコンテキストで使用できます。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-149">Thus, it can be used in the reflection-only context.</span></span>  
  
 <span data-ttu-id="ed2cc-150">使用して、<xref:System.Reflection.CustomAttributeData.NamedArguments%2A>属性のインスタンスに対して指定された名前付き引数を取得します。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-150">Use the <xref:System.Reflection.CustomAttributeData.NamedArguments%2A> method to get the named arguments specified for the attribute instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ed2cc-151">次の例では、次の 4 つのコンス トラクターと 4 つのプロパティを持つカスタム属性を定義します。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-151">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="ed2cc-152">2 つのプロパティは読み取り専用され、コンス トラクターの位置指定パラメーターを使用して設定されます。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-152">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="ed2cc-153">その他の 2 つのプロパティは読み取り/書き込み、および名前付き引数を使用して設定できます。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-153">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="ed2cc-154">1 つの位置指定プロパティは、文字列の配列および 1 つの名前付きプロパティは、整数の配列。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-154">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="ed2cc-155">この属性は、アセンブリ、アセンブリで宣言された型、型のメソッド、メソッドのパラメーターに適用されます。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-155">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="ed2cc-156">別のコンス トラクターは、このような場合に使用されます。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-156">Different constructors are used for these cases.</span></span> <span data-ttu-id="ed2cc-157">実行すると、アセンブリはリフレクション専用コンテキストに読み込みます自体し、カスタム属性を表示します。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-157">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="ed2cc-158">型に適用される属性では、位置指定および名前付きの両方の引数を指定して、配列のプロパティを示します。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-158">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="ed2cc-159"><xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A>でプロパティが使用される、`ShowAttributeData`をカスタム属性データを表示するメソッド。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-159">The <xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A> property is used in the `ShowAttributeData` method that displays custom attribute data.</span></span> <span data-ttu-id="ed2cc-160">このコード例はこのプロパティを使用して属性を初期化するコンス トラクターに渡された引数の一覧を表示します。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-160">In this code example, this property is used to display the list of arguments passed to the constructor that initialized the attribute.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.CustomAttributeData.NamedArguments" />
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="ed2cc-161">対象のインスタンスと比較する対象のオブジェクト、または <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed2cc-161">An object to compare with this instance, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ed2cc-162">このインスタンスが、指定されたオブジェクトと等価であるかどうかを示す値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed2cc-162">Returns a value that indicates whether this instance is equal to a specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ed2cc-163">
            <paramref name="obj" /> が現在のインスタンスと等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed2cc-163">
              <see langword="true" /> if <paramref name="obj" /> is equal to the current instance; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ed2cc-164">対象に適用されている属性に関するデータを表す <see cref="T:System.Reflection.CustomAttributeData" /> オブジェクトのリストを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed2cc-164">Returns a list of <see cref="T:System.Reflection.CustomAttributeData" /> objects representing data about the attributes that have been applied to the target.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt; GetCustomAttributes (System.Reflection.Assembly target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;class System.Reflection.CustomAttributeData&gt; GetCustomAttributes(class System.Reflection.Assembly target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.Assembly)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (target As Assembly) As IList(Of CustomAttributeData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeData ^&gt; ^ GetCustomAttributes(System::Reflection::Assembly ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="ed2cc-165">取得するカスタム属性データが含まれるアセンブリ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed2cc-165">The assembly whose custom attribute data is to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ed2cc-166">ターゲット アセンブリに適用されている属性に関するデータを表す <see cref="T:System.Reflection.CustomAttributeData" /> オブジェクトのリストを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed2cc-166">Returns a list of <see cref="T:System.Reflection.CustomAttributeData" /> objects representing data about the attributes that have been applied to the target assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ed2cc-167">対象のアセンブリに適用されている属性に関するデータを表すオブジェクトのリスト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed2cc-167">A list of objects that represent data about the attributes that have been applied to the target assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed2cc-168">このメソッドを提供する代わりに、<xref:System.Reflection.Assembly.GetCustomAttributes%2A>リフレクションのみのコンテキストで常に使用できるメソッドです。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-168">This method provides an alternative to the <xref:System.Reflection.Assembly.GetCustomAttributes%2A> method that can always be used in the Reflection-only context.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ed2cc-169">次の例では、次の 4 つのコンス トラクターと 4 つのプロパティを持つカスタム属性を定義します。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-169">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="ed2cc-170">2 つのプロパティは読み取り専用され、コンス トラクターの位置指定パラメーターを使用して設定されます。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-170">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="ed2cc-171">その他の 2 つのプロパティは読み取り/書き込み、および名前付き引数を使用して設定できます。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-171">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="ed2cc-172">1 つの位置指定プロパティは、文字列の配列および 1 つの名前付きプロパティは、整数の配列。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-172">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="ed2cc-173">この属性は、アセンブリ、アセンブリで宣言された型、型のメソッド、メソッドのパラメーターに適用されます。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-173">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="ed2cc-174">別のコンス トラクターは、このような場合に使用されます。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-174">Different constructors are used for these cases.</span></span> <span data-ttu-id="ed2cc-175">実行すると、アセンブリはリフレクション専用コンテキストに読み込みます自体し、カスタム属性を表示します。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-175">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="ed2cc-176">型に適用される属性では、位置指定および名前付きの両方の引数を指定して、配列のプロパティを示します。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-176">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="ed2cc-177"><xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A>でメソッドが使用される`Main()`をアセンブリに適用されるカスタム属性を取得します。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-177">The <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> method is used in `Main()` to get the custom attributes applied to the assembly.</span></span> <span data-ttu-id="ed2cc-178">メソッドの戻り値が渡される、`ShowAttributeData`メソッドです。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-178">The return value of the method is passed to the `ShowAttributeData` method.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ed2cc-179">
            <paramref name="target" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed2cc-179">
              <paramref name="target" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt; GetCustomAttributes (System.Reflection.MemberInfo target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;class System.Reflection.CustomAttributeData&gt; GetCustomAttributes(class System.Reflection.MemberInfo target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.MemberInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (target As MemberInfo) As IList(Of CustomAttributeData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeData ^&gt; ^ GetCustomAttributes(System::Reflection::MemberInfo ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Reflection.MemberInfo" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="ed2cc-180">取得する属性データが含まれるメンバー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed2cc-180">The member whose attribute data is to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ed2cc-181">ターゲット メンバーに適用されている属性に関するデータを表す <see cref="T:System.Reflection.CustomAttributeData" /> オブジェクトのリストを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed2cc-181">Returns a list of <see cref="T:System.Reflection.CustomAttributeData" /> objects representing data about the attributes that have been applied to the target member.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ed2cc-182">対象のメンバーに適用されている属性に関するデータを表すオブジェクトのリスト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed2cc-182">A list of objects that represent data about the attributes that have been applied to the target member.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed2cc-183">このメソッドのオーバー ロードでの型や入れ子にされた型は、型のメンバー、カスタム属性データが取得、<xref:System.Type>クラスと、クラス、<xref:System.Reflection>型からメンバーを表す名前空間<xref:System.Reflection.MemberInfo>です。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-183">This method overload gets custom attribute data for types, nested types, and type members, because the <xref:System.Type> class and the classes in the <xref:System.Reflection> namespace that represent type members all derive from <xref:System.Reflection.MemberInfo>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ed2cc-184">次の例では、次の 4 つのコンス トラクターと 4 つのプロパティを持つカスタム属性を定義します。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-184">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="ed2cc-185">2 つのプロパティは読み取り専用され、コンス トラクターの位置指定パラメーターを使用して設定されます。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-185">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="ed2cc-186">その他の 2 つのプロパティは読み取り/書き込み、および名前付き引数を使用して設定できます。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-186">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="ed2cc-187">1 つの位置指定プロパティは、文字列の配列および 1 つの名前付きプロパティは、整数の配列。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-187">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="ed2cc-188">この属性は、アセンブリ、アセンブリで宣言された型、型のメソッド、メソッドのパラメーターに適用されます。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-188">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="ed2cc-189">別のコンス トラクターは、このような場合に使用されます。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-189">Different constructors are used for these cases.</span></span> <span data-ttu-id="ed2cc-190">実行すると、アセンブリはリフレクション専用コンテキストに読み込みます自体し、カスタム属性を表示します。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-190">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="ed2cc-191">型に適用される属性では、位置指定および名前付きの両方の引数を指定して、配列のプロパティを示します。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-191">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="ed2cc-192"><xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A>でメソッドが使用される`Main()`型にし、テスト メソッドに適用されたカスタム属性を取得する (<xref:System.Type>から派生した<xref:System.Reflection.MemberInfo>)。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-192">The <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> method is used in `Main()` to get the custom attributes that were applied to a type and to a test method (<xref:System.Type> derives from <xref:System.Reflection.MemberInfo>).</span></span> <span data-ttu-id="ed2cc-193">戻り値<xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A>に渡される、`ShowAttributeData`メソッドです。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-193">The return value of <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> is passed to the `ShowAttributeData` method.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="Overload:System.Reflection.MemberInfo.GetCustomAttributes" />
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ed2cc-194">
            <paramref name="target" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed2cc-194">
              <paramref name="target" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt; GetCustomAttributes (System.Reflection.Module target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;class System.Reflection.CustomAttributeData&gt; GetCustomAttributes(class System.Reflection.Module target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.Module)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (target As Module) As IList(Of CustomAttributeData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeData ^&gt; ^ GetCustomAttributes(System::Reflection::Module ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Reflection.Module" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="ed2cc-195">カスタム属性データを取得する対象のモジュール。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed2cc-195">The module whose custom attribute data is to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ed2cc-196">ターゲット モジュールに適用されている属性に関するデータを表す <see cref="T:System.Reflection.CustomAttributeData" /> オブジェクトのリストを戻します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed2cc-196">Returns a list of <see cref="T:System.Reflection.CustomAttributeData" /> objects representing data about the attributes that have been applied to the target module.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ed2cc-197">対象のモジュールに適用されている属性に関するデータを表すオブジェクトのリスト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed2cc-197">A list of objects that represent data about the attributes that have been applied to the target module.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ed2cc-198">
            <paramref name="target" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed2cc-198">
              <paramref name="target" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt; GetCustomAttributes (System.Reflection.ParameterInfo target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;class System.Reflection.CustomAttributeData&gt; GetCustomAttributes(class System.Reflection.ParameterInfo target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.ParameterInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (target As ParameterInfo) As IList(Of CustomAttributeData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeData ^&gt; ^ GetCustomAttributes(System::Reflection::ParameterInfo ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Reflection.ParameterInfo" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="ed2cc-199">取得する属性データが含まれるパラメーター。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed2cc-199">The parameter whose attribute data is to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ed2cc-200">ターゲット パラメーターに適用されている属性に関するデータを表す <see cref="T:System.Reflection.CustomAttributeData" /> オブジェクトのリストを戻します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed2cc-200">Returns a list of <see cref="T:System.Reflection.CustomAttributeData" /> objects representing data about the attributes that have been applied to the target parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ed2cc-201">対象のパラメーターに適用されている属性に関するデータを表すオブジェクトのリスト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed2cc-201">A list of objects that represent data about the attributes that have been applied to the target parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed2cc-202">このメソッドを提供する代わりに、<xref:System.Reflection.ParameterInfo.GetCustomAttributes%2A>リフレクションのみのコンテキストで常に使用できるメソッドです。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-202">This method provides an alternative to the <xref:System.Reflection.ParameterInfo.GetCustomAttributes%2A> method that can always be used in the Reflection-only context.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ed2cc-203">次の例では、次の 4 つのコンス トラクターと 4 つのプロパティを持つカスタム属性を定義します。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-203">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="ed2cc-204">2 つのプロパティは読み取り専用され、コンス トラクターの位置指定パラメーターを使用して設定されます。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-204">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="ed2cc-205">その他の 2 つのプロパティは読み取り/書き込み、および名前付き引数を使用して設定できます。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-205">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="ed2cc-206">1 つの位置指定プロパティは、文字列の配列および 1 つの名前付きプロパティは、整数の配列。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-206">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="ed2cc-207">この属性は、アセンブリ、アセンブリで宣言された型、型のメソッド、メソッドのパラメーターに適用されます。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-207">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="ed2cc-208">別のコンス トラクターは、このような場合に使用されます。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-208">Different constructors are used for these cases.</span></span> <span data-ttu-id="ed2cc-209">実行すると、アセンブリはリフレクション専用コンテキストに読み込みます自体し、カスタム属性を表示します。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-209">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="ed2cc-210">型に適用される属性では、位置指定および名前付きの両方の引数を指定して、配列のプロパティを示します。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-210">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="ed2cc-211"><xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A>でメソッドが使用される`Main()`テスト メソッドのパラメーターに適用されたカスタム属性を取得します。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-211">The <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> method is used in `Main()` to retrieve the custom attributes applied to a parameter of a test method.</span></span> <span data-ttu-id="ed2cc-212">戻り値<xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A>に渡される、`ShowAttributeData`メソッドです。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-212">The return value of <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> is passed to the `ShowAttributeData` method.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ed2cc-213">
            <paramref name="target" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed2cc-213">
              <paramref name="target" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ed2cc-214">特定の型のハッシュ関数として機能します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed2cc-214">Serves as a hash function for a particular type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ed2cc-215">現在の <see cref="T:System.Object" /> のハッシュ コード。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed2cc-215">A hash code for the current <see cref="T:System.Object" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="NamedArguments">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeNamedArgument&gt; NamedArguments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;valuetype System.Reflection.CustomAttributeNamedArgument&gt; NamedArguments" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeData.NamedArguments" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NamedArguments As IList(Of CustomAttributeNamedArgument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeNamedArgument&gt; ^ NamedArguments { System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeNamedArgument&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeNamedArgument&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ed2cc-216">
            <see cref="T:System.Reflection.CustomAttributeData" /> オブジェクトが表す属性インスタンスに対して指定された名前付き引数のリストを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed2cc-216">Gets the list of named arguments specified for the attribute instance represented by the <see cref="T:System.Reflection.CustomAttributeData" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ed2cc-217">カスタム属性インスタンスに対して指定された名前付き引数を表す構造体のコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed2cc-217">A collection of structures that represent the named arguments specified for the custom attribute instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed2cc-218">このメソッドは、カスタム属性のコードを実行せず、カスタム属性のインスタンスに対して指定された名前付き引数を取得します。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-218">This method gets the named arguments that were specified for the custom attribute instance without executing any of the custom attribute code.</span></span> <span data-ttu-id="ed2cc-219">このため、リフレクションのみのコンテキストで使用できます。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-219">Thus, it can be used in the Reflection-only context.</span></span>  
  
 <span data-ttu-id="ed2cc-220">返される一覧には、属性のインスタンスに対して指定された名前付き引数のみが含まれています。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-220">The list that is returned contains only the named arguments that were specified for the attribute instance.</span></span>  
  
 <span data-ttu-id="ed2cc-221">使用して、<xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A>属性のインスタンスの指定された位置指定引数を取得します。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-221">Use the <xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A> method to get the positional arguments that were specified for the attribute instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ed2cc-222">次の例では、次の 4 つのコンス トラクターと 4 つのプロパティを持つカスタム属性を定義します。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-222">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="ed2cc-223">2 つのプロパティは読み取り専用され、コンス トラクターの位置指定パラメーターを使用して設定されます。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-223">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="ed2cc-224">その他の 2 つのプロパティは読み取り/書き込み、および名前付き引数を使用して設定できます。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-224">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="ed2cc-225">1 つの位置指定プロパティは、文字列の配列および 1 つの名前付きプロパティは、整数の配列。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-225">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="ed2cc-226">この属性は、アセンブリ、アセンブリで宣言された型、型のメソッド、メソッドのパラメーターに適用されます。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-226">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="ed2cc-227">別のコンス トラクターは、このような場合に使用されます。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-227">Different constructors are used for these cases.</span></span> <span data-ttu-id="ed2cc-228">実行すると、アセンブリはリフレクション専用コンテキストに読み込みます自体し、カスタム属性を表示します。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-228">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="ed2cc-229">型に適用される属性では、位置指定および名前付きの両方の引数を指定して、配列のプロパティを示します。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-229">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="ed2cc-230"><xref:System.Reflection.CustomAttributeData.NamedArguments%2A>でプロパティが使用される、`ShowAttributeData`をカスタム属性データを表示するメソッド。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-230">The <xref:System.Reflection.CustomAttributeData.NamedArguments%2A> property is used in the `ShowAttributeData` method that displays custom attribute data.</span></span> <span data-ttu-id="ed2cc-231">このコード例はこのプロパティを使用して属性に指定された名前付き引数の一覧を表示します。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-231">In this code example, this property is used to display the list of named arguments specified for the attribute.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.CustomAttributeData.ConstructorArguments" />
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ed2cc-232">カスタム属性の文字列形式を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed2cc-232">Returns a string representation of the custom attribute.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ed2cc-233">カスタム属性を表す文字列値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed2cc-233">A string value that represents the custom attribute.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed2cc-234">文字列値には、属性の型、属性のパラメーター、および名前付きパラメーターが含まれています。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-234">The string value includes the attribute type, the attribute parameters, and the named parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ed2cc-235">次の例では、次の 4 つのコンス トラクターと 4 つのプロパティを持つカスタム属性を定義します。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-235">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="ed2cc-236">2 つのプロパティは読み取り専用され、コンス トラクターの位置指定パラメーターを使用して設定されます。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-236">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="ed2cc-237">その他の 2 つのプロパティは読み取り/書き込み、および名前付き引数を使用して設定できます。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-237">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="ed2cc-238">1 つの位置指定プロパティは、文字列の配列および 1 つの名前付きプロパティは、整数の配列。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-238">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="ed2cc-239">この属性は、アセンブリ、アセンブリで宣言された型、型のメソッド、メソッドのパラメーターに適用されます。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-239">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="ed2cc-240">別のコンス トラクターは、このような場合に使用されます。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-240">Different constructors are used for these cases.</span></span> <span data-ttu-id="ed2cc-241">実行すると、アセンブリはリフレクション専用コンテキストに読み込みます自体し、カスタム属性を表示します。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-241">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="ed2cc-242">型に適用される属性では、位置指定および名前付きの両方の引数を指定して、配列のプロパティを示します。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-242">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="ed2cc-243">この例では、<xref:System.Reflection.CustomAttributeData.ToString%2A>でメソッドが使用される、`ShowAttributeData`メソッドを持つデータが表示されている属性を識別します。</span><span class="sxs-lookup"><span data-stu-id="ed2cc-243">In this example, the <xref:System.Reflection.CustomAttributeData.ToString%2A> method is used in the `ShowAttributeData` method, to identify the attribute whose data is being displayed.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>