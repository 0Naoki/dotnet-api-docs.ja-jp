<Type Name="CustomAttributeTypedArgument" FullName="System.Reflection.CustomAttributeTypedArgument">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b5d1ec529757045ee60974de7538e486877eb0ff" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30479826" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct CustomAttributeTypedArgument" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit CustomAttributeTypedArgument extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.CustomAttributeTypedArgument" />
  <TypeSignature Language="VB.NET" Value="Public Structure CustomAttributeTypedArgument" />
  <TypeSignature Language="C++ CLI" Value="public value class CustomAttributeTypedArgument" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="edd58-101">リフレクションのみのコンテキスト内でのカスタム属性の引数、つまり配列引数の要素を表します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="edd58-101">Represents an argument of a custom attribute in the reflection-only context, or an element of an array argument.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edd58-102">常とそのプロパティを調べてなどのメソッドを使用してそれらのインスタンスを作成することでカスタム属性を確認することはできませんので、リフレクションのみのコンテキストで検査されているコードを実行できません<xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType>、<xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=nameWithType>のようにします。</span><span class="sxs-lookup"><span data-stu-id="edd58-102">Code that is being examined in the reflection-only context cannot be executed, so it is not always possible to examine custom attributes by creating instances of them and then examining their properties, using methods like <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType>, <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=nameWithType>, and so on.</span></span> <span data-ttu-id="edd58-103">属性型自体のコードがリフレクションのみのコンテキストに読み込まれている場合は実行できません。</span><span class="sxs-lookup"><span data-stu-id="edd58-103">If the code for the attribute type itself is loaded into the reflection-only context, it cannot be executed.</span></span>  
  
 <span data-ttu-id="edd58-104"><xref:System.Reflection.CustomAttributeNamedArgument>構造体を使用して、<xref:System.Reflection.CustomAttributeData>属性コンス トラクターを実行することがなく、カスタム属性のインスタンスに指定された位置指定引数の値と型にアクセスできるようにするクラス。</span><span class="sxs-lookup"><span data-stu-id="edd58-104">The <xref:System.Reflection.CustomAttributeNamedArgument> structure is used by the <xref:System.Reflection.CustomAttributeData> class to provide access to the type and value of a positional argument specified for a custom attribute instance, without executing the attribute constructor.</span></span> <span data-ttu-id="edd58-105">カスタム属性の型の対応するプロパティのコードを実行することがなく名前付き引数の値と型へアクセスを提供します。</span><span class="sxs-lookup"><span data-stu-id="edd58-105">It also provides access to the type and value of a named argument without executing the code of the corresponding property of the custom attribute type.</span></span>  
  
 <span data-ttu-id="edd58-106">型と属性のインスタンスのすべての位置と名前付き引数の値がによって提供される<xref:System.Reflection.CustomAttributeTypedArgument>構造体。</span><span class="sxs-lookup"><span data-stu-id="edd58-106">The types and values of all the positional and named arguments of an attribute instance are provided by <xref:System.Reflection.CustomAttributeTypedArgument> structures.</span></span> <span data-ttu-id="edd58-107">によって返される位置指定の属性、<xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A?displayProperty=nameWithType>プロパティがによって表される直接<xref:System.Reflection.CustomAttributeTypedArgument>構造体がによって返される、名前付き引数、<xref:System.Reflection.CustomAttributeData.NamedArguments%2A?displayProperty=nameWithType>プロパティがによって表される<xref:System.Reflection.CustomAttributeNamedArgument>構造を取得する、<xref:System.Reflection.CustomAttributeTypedArgument>構造の名前付き引数、使用、<xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A?displayProperty=nameWithType>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="edd58-107">The positional attributes returned by the <xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A?displayProperty=nameWithType> property are directly represented by <xref:System.Reflection.CustomAttributeTypedArgument> structures, but the named arguments returned by the <xref:System.Reflection.CustomAttributeData.NamedArguments%2A?displayProperty=nameWithType> property are represented by <xref:System.Reflection.CustomAttributeNamedArgument> structures; to get the <xref:System.Reflection.CustomAttributeTypedArgument> structure for a named argument, use the <xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="edd58-108">引数が、値の配列である場合、<xref:System.Reflection.CustomAttributeTypedArgument.Value%2A>のプロパティ、<xref:System.Reflection.CustomAttributeTypedArgument>表します引数を返すことジェネリック<xref:System.Collections.ObjectModel.ReadOnlyCollection%601>の<xref:System.Reflection.CustomAttributeTypedArgument>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="edd58-108">If an argument is an array of values, the <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A> property of the <xref:System.Reflection.CustomAttributeTypedArgument> that represents the argument returns a generic <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> of <xref:System.Reflection.CustomAttributeTypedArgument> objects.</span></span> <span data-ttu-id="edd58-109">各<xref:System.Reflection.CustomAttributeTypedArgument>コレクション内のオブジェクトが配列の対応する要素を表します。</span><span class="sxs-lookup"><span data-stu-id="edd58-109">Each <xref:System.Reflection.CustomAttributeTypedArgument> object in the collection represents the corresponding element of the array.</span></span>  
  
 <span data-ttu-id="edd58-110">インスタンスを作成する、<xref:System.Reflection.CustomAttributeData>クラスを使用して、 `static` <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A>ファクトリ メソッド。</span><span class="sxs-lookup"><span data-stu-id="edd58-110">To create instances of the <xref:System.Reflection.CustomAttributeData> class, use the `static`<xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> factory method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="edd58-111">次の例では、次の 4 つのコンス トラクターと 4 つのプロパティを持つカスタム属性を定義します。</span><span class="sxs-lookup"><span data-stu-id="edd58-111">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="edd58-112">2 つのプロパティは読み取り専用され、コンス トラクターの位置指定パラメーターを使用して設定されます。</span><span class="sxs-lookup"><span data-stu-id="edd58-112">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="edd58-113">その他の 2 つのプロパティは読み取り/書き込み、および名前付き引数を使用して設定できます。</span><span class="sxs-lookup"><span data-stu-id="edd58-113">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="edd58-114">1 つの位置指定プロパティは、文字列の配列および 1 つの名前付きプロパティは、整数の配列。</span><span class="sxs-lookup"><span data-stu-id="edd58-114">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="edd58-115">この属性は、アセンブリ、アセンブリで宣言された型、型のメソッド、メソッドのパラメーターに適用されます。</span><span class="sxs-lookup"><span data-stu-id="edd58-115">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="edd58-116">別のコンス トラクターは、このような場合に使用されます。</span><span class="sxs-lookup"><span data-stu-id="edd58-116">Different constructors are used for these cases.</span></span> <span data-ttu-id="edd58-117">実行すると、アセンブリはリフレクション専用コンテキストに読み込みます自体し、カスタム属性を表示します。</span><span class="sxs-lookup"><span data-stu-id="edd58-117">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="edd58-118">型に適用される属性では、位置指定および名前付きの両方の引数を指定して、配列のプロパティを示します。</span><span class="sxs-lookup"><span data-stu-id="edd58-118">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Reflection.CustomAttributeData" />
    <altmember cref="T:System.Reflection.CustomAttributeNamedArgument" />
    <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="edd58-119">
            <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd58-119">Initializes a new instance of the <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CustomAttributeTypedArgument (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeTypedArgument.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CustomAttributeTypedArgument(System::Object ^ value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="edd58-120">カスタム属性の引数の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd58-120">The value of the custom attribute argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="edd58-121">指定した値を使用して、<see cref="T:System.Reflection.CustomAttributeTypedArgument" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd58-121">Initializes a new instance of the <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> class with the specified value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edd58-122">`value`パラメーターを指定できません`null`このコンス トラクターの引数の型がの型から推論されるので`value`です。</span><span class="sxs-lookup"><span data-stu-id="edd58-122">The `value` parameter cannot be `null` for this constructor, because the argument type is inferred from the type of `value`.</span></span> <span data-ttu-id="edd58-123">指定する、`null`値を使用して、<xref:System.Reflection.CustomAttributeTypedArgument.%23ctor%28System.Type%2CSystem.Object%29>コンス トラクターです。</span><span class="sxs-lookup"><span data-stu-id="edd58-123">To specify a `null` value, use the <xref:System.Reflection.CustomAttributeTypedArgument.%23ctor%28System.Type%2CSystem.Object%29> constructor.</span></span>  
  
 <span data-ttu-id="edd58-124">このコンス トラクターの継承クラスによって使用されます、<xref:System.Reflection.CustomAttributeTypedArgument>クラスです。</span><span class="sxs-lookup"><span data-stu-id="edd58-124">This constructor is for use by inheritors of the <xref:System.Reflection.CustomAttributeTypedArgument> class.</span></span> <span data-ttu-id="edd58-125">アプリケーション コードで使用することはありません。</span><span class="sxs-lookup"><span data-stu-id="edd58-125">It is not intended for use in application code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="edd58-126">
            <paramref name="value" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd58-126">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CustomAttributeTypedArgument (Type argumentType, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type argumentType, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeTypedArgument.#ctor(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (argumentType As Type, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CustomAttributeTypedArgument(Type ^ argumentType, System::Object ^ value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="argumentType" Type="System.Type" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="argumentType">
          <span data-ttu-id="edd58-127">カスタム属性の引数の型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd58-127">The type of the custom attribute argument.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="edd58-128">カスタム属性の引数の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd58-128">The value of the custom attribute argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="edd58-129">型および値を指定して、<see cref="T:System.Reflection.CustomAttributeTypedArgument" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd58-129">Initializes a new instance of the <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> class with the specified type and value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edd58-130">このコンス トラクターの継承クラスによって使用されます、<xref:System.Reflection.CustomAttributeTypedArgument>クラスです。</span><span class="sxs-lookup"><span data-stu-id="edd58-130">This constructor is for use by inheritors of the <xref:System.Reflection.CustomAttributeTypedArgument> class.</span></span> <span data-ttu-id="edd58-131">アプリケーション コードで使用することはありません。</span><span class="sxs-lookup"><span data-stu-id="edd58-131">It is not intended for use in application code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="edd58-132">
            <paramref name="argumentType" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd58-132">
              <paramref name="argumentType" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ArgumentType">
      <MemberSignature Language="C#" Value="public Type ArgumentType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ArgumentType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeTypedArgument.ArgumentType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ArgumentType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ArgumentType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="edd58-133">引数の型または配列引数要素の型を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd58-133">Gets the type of the argument or of the array argument element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="edd58-134">引数の型または配列要素の型を表す <see cref="T:System.Type" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd58-134">A <see cref="T:System.Type" /> object representing the type of the argument or of the array element.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edd58-135">このプロパティがによって返される値の実際の型を識別する単純な引数や配列引数の要素を<xref:System.Reflection.CustomAttributeTypedArgument.Value%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="edd58-135">For simple arguments or for elements of array arguments, this property identifies the actual type of the value returned by the <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A> property.</span></span> <span data-ttu-id="edd58-136">配列引数のこのプロパティが配列型を返しますが、<xref:System.Reflection.CustomAttributeTypedArgument.Value%2A>プロパティから返される、 `ReadOnlyCollection<CustomAttributeTypedArgument>` (`ReadOnlyCollection(Of CustomAttributeTypedArgument)` Visual Basic で) コレクションの各要素には、配列引数の対応する要素を表します。</span><span class="sxs-lookup"><span data-stu-id="edd58-136">For array arguments, this property returns the array type, but the <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A> property returns a `ReadOnlyCollection<CustomAttributeTypedArgument>` (`ReadOnlyCollection(Of CustomAttributeTypedArgument)` in Visual Basic) in which each element of the collection represents the corresponding element of the array argument.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="edd58-137">次の例では、次の 4 つのコンス トラクターと 4 つのプロパティを持つカスタム属性を定義します。</span><span class="sxs-lookup"><span data-stu-id="edd58-137">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="edd58-138">2 つのプロパティは読み取り専用され、コンス トラクターの位置指定パラメーターを使用して設定されます。</span><span class="sxs-lookup"><span data-stu-id="edd58-138">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="edd58-139">その他の 2 つのプロパティは読み取り/書き込み、および名前付き引数を使用して設定できます。</span><span class="sxs-lookup"><span data-stu-id="edd58-139">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="edd58-140">1 つの位置指定プロパティは、文字列の配列および 1 つの名前付きプロパティは、整数の配列。</span><span class="sxs-lookup"><span data-stu-id="edd58-140">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="edd58-141">この属性は、アセンブリ、アセンブリで宣言された型、型のメソッド、メソッドのパラメーターに適用されます。</span><span class="sxs-lookup"><span data-stu-id="edd58-141">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="edd58-142">別のコンス トラクターは、このような場合に使用されます。</span><span class="sxs-lookup"><span data-stu-id="edd58-142">Different constructors are used for these cases.</span></span> <span data-ttu-id="edd58-143">実行すると、アセンブリはリフレクション専用コンテキストに読み込みます自体し、カスタム属性を表示します。</span><span class="sxs-lookup"><span data-stu-id="edd58-143">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="edd58-144">型に適用される属性では、位置指定および名前付きの両方の引数を指定して、配列のプロパティを示します。</span><span class="sxs-lookup"><span data-stu-id="edd58-144">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="edd58-145"><xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A>でプロパティが使用される、`ShowValueOrArray`を属性の種類を表示する、カスタム属性のデータを表示するメソッド。</span><span class="sxs-lookup"><span data-stu-id="edd58-145">The <xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A> property is used in the `ShowValueOrArray` method that displays custom attribute data, to display the types of attributes.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.CustomAttributeTypedArgument.Value" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeTypedArgument.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="edd58-146">比較対象のもう 1 つのオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd58-146">Another object to compare to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="edd58-147">このインスタンスと指定したオブジェクトが等しいかどうかを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd58-147">Indicates whether this instance and a specified object are equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="edd58-148">
            <see langword="true" /> とこのインスタンスが同じ型で、同じ値を表している場合は <paramref name="obj" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd58-148">
              <see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.ValueType.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeTypedArgument.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="edd58-149">このインスタンスのハッシュ コードを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd58-149">Returns the hash code for this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="edd58-150">このインスタンスのハッシュ コードである 32 ビット符号付き整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd58-150">A 32-bit signed integer that is the hash code for this instance.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.ValueType.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Reflection.CustomAttributeTypedArgument left, System.Reflection.CustomAttributeTypedArgument right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Reflection.CustomAttributeTypedArgument left, valuetype System.Reflection.CustomAttributeTypedArgument right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeTypedArgument.op_Equality(System.Reflection.CustomAttributeTypedArgument,System.Reflection.CustomAttributeTypedArgument)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As CustomAttributeTypedArgument, right As CustomAttributeTypedArgument) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Reflection::CustomAttributeTypedArgument left, System::Reflection::CustomAttributeTypedArgument right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Reflection.CustomAttributeTypedArgument" />
        <Parameter Name="right" Type="System.Reflection.CustomAttributeTypedArgument" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="edd58-151">等値演算子の左側に表示される <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> 構造体。</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd58-151">The <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> structure to the left of the equality operator.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="edd58-152">等値演算子の右辺にある <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> 構造体。</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd58-152">The <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> structure to the right of the equality operator.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="edd58-153">2 つの <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> 構造体が等しいかどうかテストします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd58-153">Tests whether two <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> structures are equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="edd58-154">2 つの <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> 構造体が等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd58-154">
              <see langword="true" /> if the two <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> structures are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="edd58-155">この演算子を同等の方法は<xref:System.Reflection.CustomAttributeTypedArgument.Equals%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="edd58-155">The equivalent method for this operator is <xref:System.Reflection.CustomAttributeTypedArgument.Equals%2A?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Reflection.CustomAttributeTypedArgument left, System.Reflection.CustomAttributeTypedArgument right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Reflection.CustomAttributeTypedArgument left, valuetype System.Reflection.CustomAttributeTypedArgument right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeTypedArgument.op_Inequality(System.Reflection.CustomAttributeTypedArgument,System.Reflection.CustomAttributeTypedArgument)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As CustomAttributeTypedArgument, right As CustomAttributeTypedArgument) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Reflection::CustomAttributeTypedArgument left, System::Reflection::CustomAttributeTypedArgument right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Reflection.CustomAttributeTypedArgument" />
        <Parameter Name="right" Type="System.Reflection.CustomAttributeTypedArgument" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="edd58-156">非等値演算子の左側に表示される <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> 構造体。</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd58-156">The <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> structure to the left of the inequality operator.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="edd58-157">非等値演算子の右辺にある <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> 構造体。</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd58-157">The <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> structure to the right of the inequality operator.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="edd58-158">2 つの <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> 構造体が異なるかどうかテストします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd58-158">Tests whether two <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> structures are different.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="edd58-159">2 つの <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> 構造体が異なる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd58-159">
              <see langword="true" /> if the two <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> structures are different; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="edd58-160">この演算子を同等の方法は<xref:System.Reflection.CustomAttributeTypedArgument.Equals%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="edd58-160">The equivalent method for this operator is <xref:System.Reflection.CustomAttributeTypedArgument.Equals%2A?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeTypedArgument.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="edd58-161">引数名、等号 (=) および引数値の文字列表現から成る文字列を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd58-161">Returns a string consisting of the argument name, the equal sign, and a string representation of the argument value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="edd58-162">引数名、等号 (=) および引数値の文字列表現から成る文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd58-162">A string consisting of the argument name, the equal sign, and a string representation of the argument value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeTypedArgument.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="edd58-163">単純な引数または配列引数の要素に対しては、引数の値を取得します。配列引数に対しては値のコレクションを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd58-163">Gets the value of the argument for a simple argument or for an element of an array argument; gets a collection of values for an array argument.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="edd58-164">引数または要素の値を表すオブジェクト、または配列型引数の値を表す <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> オブジェクトの汎用 <see cref="T:System.Reflection.CustomAttributeTypedArgument" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd58-164">An object that represents the value of the argument or element, or a generic <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> objects that represent the values of an array-type argument.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edd58-165">場合、<xref:System.Reflection.CustomAttributeTypedArgument>このプロパティを返しますでは、配列引数を表す、 `ReadOnlyCollection<CustomAttributeTypedArgument>` (`ReadOnlyCollection(Of CustomAttributeTypedArgument)` Visual Basic で)。</span><span class="sxs-lookup"><span data-stu-id="edd58-165">If the <xref:System.Reflection.CustomAttributeTypedArgument> represents an array argument, this property returns a `ReadOnlyCollection<CustomAttributeTypedArgument>` (`ReadOnlyCollection(Of CustomAttributeTypedArgument)` in Visual Basic).</span></span> <span data-ttu-id="edd58-166">コレクションの各要素は、配列の引数の対応する要素を表します。</span><span class="sxs-lookup"><span data-stu-id="edd58-166">Each element of the collection represents the corresponding element of the array argument.</span></span>  
  
 <span data-ttu-id="edd58-167">使用して、値の型を取得できる、<xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="edd58-167">The type of the value can be obtained by using the <xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A> property.</span></span> <span data-ttu-id="edd58-168"><xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A> によって返される値の実際の型を取得、<xref:System.Reflection.CustomAttributeTypedArgument.Value%2A>単純引数または配列の要素のプロパティです。</span><span class="sxs-lookup"><span data-stu-id="edd58-168"><xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A> gets the actual type of the value returned by the <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A> property for simple arguments or for elements of array arguments.</span></span> <span data-ttu-id="edd58-169">配列引数の配列の型を返します。</span><span class="sxs-lookup"><span data-stu-id="edd58-169">It returns the array type for array arguments.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="edd58-170">次の例では、次の 4 つのコンス トラクターと 4 つのプロパティを持つカスタム属性を定義します。</span><span class="sxs-lookup"><span data-stu-id="edd58-170">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="edd58-171">2 つのプロパティは読み取り専用され、コンス トラクターの位置指定パラメーターを使用して設定されます。</span><span class="sxs-lookup"><span data-stu-id="edd58-171">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="edd58-172">その他の 2 つのプロパティは読み取り/書き込み、および名前付き引数を使用して設定できます。</span><span class="sxs-lookup"><span data-stu-id="edd58-172">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="edd58-173">1 つの位置指定プロパティは、文字列の配列および 1 つの名前付きプロパティは、整数の配列。</span><span class="sxs-lookup"><span data-stu-id="edd58-173">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="edd58-174">この属性は、アセンブリ、アセンブリで宣言された型、型のメソッド、メソッドのパラメーターに適用されます。</span><span class="sxs-lookup"><span data-stu-id="edd58-174">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="edd58-175">別のコンス トラクターは、このような場合に使用されます。</span><span class="sxs-lookup"><span data-stu-id="edd58-175">Different constructors are used for these cases.</span></span> <span data-ttu-id="edd58-176">実行すると、アセンブリはリフレクション専用コンテキストに読み込みます自体し、カスタム属性を表示します。</span><span class="sxs-lookup"><span data-stu-id="edd58-176">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="edd58-177">型に適用される属性では、位置指定および名前付きの両方の引数を指定して、配列のプロパティを示します。</span><span class="sxs-lookup"><span data-stu-id="edd58-177">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="edd58-178"><xref:System.Reflection.CustomAttributeTypedArgument.Value%2A>でプロパティが使用される、`ShowValueOrArray`を属性の値を表示する、カスタム属性のデータを表示するメソッド。</span><span class="sxs-lookup"><span data-stu-id="edd58-178">The <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A> property is used in the `ShowValueOrArray` method that displays custom attribute data, to display the values of attributes.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 <span data-ttu-id="edd58-179"><xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A> &#124; <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A></span><span class="sxs-lookup"><span data-stu-id="edd58-179"><xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A> &#124; <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A></span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>