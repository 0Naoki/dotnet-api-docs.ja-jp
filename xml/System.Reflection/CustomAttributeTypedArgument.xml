<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CustomAttributeTypedArgument.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5b5d1ec529757045ee60974de7538e486877eb0ff.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b5d1ec529757045ee60974de7538e486877eb0ff</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Reflection.CustomAttributeTypedArgument">
          <source>Represents an argument of a custom attribute in the reflection-only context, or an element of an array argument.</source>
          <target state="translated">リフレクションのみのコンテキスト内でのカスタム属性の引数、つまり配列引数の要素を表します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeTypedArgument">
          <source>Code that is being examined in the reflection-only context cannot be executed, so it is not always possible to examine custom attributes by creating instances of them and then examining their properties, using methods like <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=nameWithType&gt;</ph>, and so on.</source>
          <target state="translated">常とそのプロパティを調べてなどのメソッドを使用してそれらのインスタンスを作成することでカスタム属性を確認することはできませんので、リフレクションのみのコンテキストで検査されているコードを実行できません<ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType&gt;</ph>、<ph id="ph2">&lt;xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=nameWithType&gt;</ph>のようにします。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeTypedArgument">
          <source>If the code for the attribute type itself is loaded into the reflection-only context, it cannot be executed.</source>
          <target state="translated">属性型自体のコードがリフレクションのみのコンテキストに読み込まれている場合は実行できません。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeTypedArgument">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeNamedArgument&gt;</ph> structure is used by the <ph id="ph2">&lt;xref:System.Reflection.CustomAttributeData&gt;</ph> class to provide access to the type and value of a positional argument specified for a custom attribute instance, without executing the attribute constructor.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.CustomAttributeNamedArgument&gt;</ph>構造体を使用して、<ph id="ph2">&lt;xref:System.Reflection.CustomAttributeData&gt;</ph>属性コンス トラクターを実行することがなく、カスタム属性のインスタンスに指定された位置指定引数の値と型にアクセスできるようにするクラス。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeTypedArgument">
          <source>It also provides access to the type and value of a named argument without executing the code of the corresponding property of the custom attribute type.</source>
          <target state="translated">カスタム属性の型の対応するプロパティのコードを実行することがなく名前付き引数の値と型へアクセスを提供します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeTypedArgument">
          <source>The types and values of all the positional and named arguments of an attribute instance are provided by <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument&gt;</ph> structures.</source>
          <target state="translated">型と属性のインスタンスのすべての位置と名前付き引数の値がによって提供される<ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument&gt;</ph>構造体。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeTypedArgument">
          <source>The positional attributes returned by the <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A?displayProperty=nameWithType&gt;</ph> property are directly represented by <ph id="ph2">&lt;xref:System.Reflection.CustomAttributeTypedArgument&gt;</ph> structures, but the named arguments returned by the <ph id="ph3">&lt;xref:System.Reflection.CustomAttributeData.NamedArguments%2A?displayProperty=nameWithType&gt;</ph> property are represented by <ph id="ph4">&lt;xref:System.Reflection.CustomAttributeNamedArgument&gt;</ph> structures; to get the <ph id="ph5">&lt;xref:System.Reflection.CustomAttributeTypedArgument&gt;</ph> structure for a named argument, use the <ph id="ph6">&lt;xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">によって返される位置指定の属性、<ph id="ph1">&lt;xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A?displayProperty=nameWithType&gt;</ph>プロパティがによって表される直接<ph id="ph2">&lt;xref:System.Reflection.CustomAttributeTypedArgument&gt;</ph>構造体がによって返される、名前付き引数、<ph id="ph3">&lt;xref:System.Reflection.CustomAttributeData.NamedArguments%2A?displayProperty=nameWithType&gt;</ph>プロパティがによって表される<ph id="ph4">&lt;xref:System.Reflection.CustomAttributeNamedArgument&gt;</ph>構造を取得する、<ph id="ph5">&lt;xref:System.Reflection.CustomAttributeTypedArgument&gt;</ph>構造の名前付き引数、使用、<ph id="ph6">&lt;xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A?displayProperty=nameWithType&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeTypedArgument">
          <source>If an argument is an array of values, the <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument.Value%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Reflection.CustomAttributeTypedArgument&gt;</ph> that represents the argument returns a generic <ph id="ph3">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> of <ph id="ph4">&lt;xref:System.Reflection.CustomAttributeTypedArgument&gt;</ph> objects.</source>
          <target state="translated">引数が、値の配列である場合、<ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument.Value%2A&gt;</ph>のプロパティ、<ph id="ph2">&lt;xref:System.Reflection.CustomAttributeTypedArgument&gt;</ph>表します引数を返すことジェネリック<ph id="ph3">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph>の<ph id="ph4">&lt;xref:System.Reflection.CustomAttributeTypedArgument&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeTypedArgument">
          <source>Each <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument&gt;</ph> object in the collection represents the corresponding element of the array.</source>
          <target state="translated">各<ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument&gt;</ph>コレクション内のオブジェクトが配列の対応する要素を表します。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeTypedArgument">
          <source>To create instances of the <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeData&gt;</ph> class, use the <ph id="ph2">`static`</ph><ph id="ph3">&lt;xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A&gt;</ph> factory method.</source>
          <target state="translated">インスタンスを作成する、<ph id="ph1">&lt;xref:System.Reflection.CustomAttributeData&gt;</ph>クラスを使用して、 <ph id="ph2">`static`</ph> <ph id="ph3">&lt;xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A&gt;</ph>ファクトリ メソッド。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeTypedArgument">
          <source>The following example defines a custom attribute with four constructors and four properties.</source>
          <target state="translated">次の例では、次の 4 つのコンス トラクターと 4 つのプロパティを持つカスタム属性を定義します。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeTypedArgument">
          <source>Two of the properties are read-only, and are set by using the positional parameters of the constructors.</source>
          <target state="translated">2 つのプロパティは読み取り専用され、コンス トラクターの位置指定パラメーターを使用して設定されます。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeTypedArgument">
          <source>The other two properties are read/write, and can be set only by using named arguments.</source>
          <target state="translated">その他の 2 つのプロパティは読み取り/書き込み、および名前付き引数を使用して設定できます。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeTypedArgument">
          <source>One positional property is an array of strings, and one named property is an array of integers.</source>
          <target state="translated">1 つの位置指定プロパティは、文字列の配列および 1 つの名前付きプロパティは、整数の配列。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeTypedArgument">
          <source>The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</source>
          <target state="translated">この属性は、アセンブリ、アセンブリで宣言された型、型のメソッド、メソッドのパラメーターに適用されます。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeTypedArgument">
          <source>Different constructors are used for these cases.</source>
          <target state="translated">別のコンス トラクターは、このような場合に使用されます。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeTypedArgument">
          <source>When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</source>
          <target state="translated">実行すると、アセンブリはリフレクション専用コンテキストに読み込みます自体し、カスタム属性を表示します。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeTypedArgument">
          <source>The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</source>
          <target state="translated">型に適用される属性では、位置指定および名前付きの両方の引数を指定して、配列のプロパティを示します。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="T:System.Reflection.CustomAttributeTypedArgument">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeTypedArgument" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeTypedArgument" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeTypedArgument.#ctor(System.Object)">
          <source>The value of the custom attribute argument.</source>
          <target state="translated">カスタム属性の引数の値。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeTypedArgument.#ctor(System.Object)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeTypedArgument" /&gt;</ph> class with the specified value.</source>
          <target state="translated">指定した値を使用して、<ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeTypedArgument" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeTypedArgument.#ctor(System.Object)">
          <source>The <ph id="ph1">`value`</ph> parameter cannot be <ph id="ph2">`null`</ph> for this constructor, because the argument type is inferred from the type of <ph id="ph3">`value`</ph>.</source>
          <target state="translated"><ph id="ph1">`value`</ph>パラメーターを指定できません<ph id="ph2">`null`</ph>このコンス トラクターの引数の型がの型から推論されるので<ph id="ph3">`value`</ph>です。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeTypedArgument.#ctor(System.Object)">
          <source>To specify a <ph id="ph1">`null`</ph> value, use the <ph id="ph2">&lt;xref:System.Reflection.CustomAttributeTypedArgument.%23ctor%28System.Type%2CSystem.Object%29&gt;</ph> constructor.</source>
          <target state="translated">指定する、<ph id="ph1">`null`</ph>値を使用して、<ph id="ph2">&lt;xref:System.Reflection.CustomAttributeTypedArgument.%23ctor%28System.Type%2CSystem.Object%29&gt;</ph>コンス トラクターです。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeTypedArgument.#ctor(System.Object)">
          <source>This constructor is for use by inheritors of the <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument&gt;</ph> class.</source>
          <target state="translated">このコンス トラクターの継承クラスによって使用されます、<ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeTypedArgument.#ctor(System.Object)">
          <source>It is not intended for use in application code.</source>
          <target state="translated">アプリケーション コードで使用することはありません。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeTypedArgument.#ctor(System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeTypedArgument.#ctor(System.Type,System.Object)">
          <source>The type of the custom attribute argument.</source>
          <target state="translated">カスタム属性の引数の型。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeTypedArgument.#ctor(System.Type,System.Object)">
          <source>The value of the custom attribute argument.</source>
          <target state="translated">カスタム属性の引数の値。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeTypedArgument.#ctor(System.Type,System.Object)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeTypedArgument" /&gt;</ph> class with the specified type and value.</source>
          <target state="translated">型および値を指定して、<ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeTypedArgument" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeTypedArgument.#ctor(System.Type,System.Object)">
          <source>This constructor is for use by inheritors of the <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument&gt;</ph> class.</source>
          <target state="translated">このコンス トラクターの継承クラスによって使用されます、<ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeTypedArgument.#ctor(System.Type,System.Object)">
          <source>It is not intended for use in application code.</source>
          <target state="translated">アプリケーション コードで使用することはありません。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeTypedArgument.#ctor(System.Type,System.Object)">
          <source><ph id="ph1">&lt;paramref name="argumentType" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="argumentType" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="P:System.Reflection.CustomAttributeTypedArgument.ArgumentType">
          <source>Gets the type of the argument or of the array argument element.</source>
          <target state="translated">引数の型または配列引数要素の型を取得します。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeTypedArgument.ArgumentType">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> object representing the type of the argument or of the array element.</source>
          <target state="translated">引数の型または配列要素の型を表す <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeTypedArgument.ArgumentType">
          <source>For simple arguments or for elements of array arguments, this property identifies the actual type of the value returned by the <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument.Value%2A&gt;</ph> property.</source>
          <target state="translated">このプロパティがによって返される値の実際の型を識別する単純な引数や配列引数の要素を<ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument.Value%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeTypedArgument.ArgumentType">
          <source>For array arguments, this property returns the array type, but the <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument.Value%2A&gt;</ph> property returns a <ph id="ph2">`ReadOnlyCollection&lt;CustomAttributeTypedArgument&gt;`</ph> (<ph id="ph3">`ReadOnlyCollection(Of CustomAttributeTypedArgument)`</ph> in Visual Basic) in which each element of the collection represents the corresponding element of the array argument.</source>
          <target state="translated">配列引数のこのプロパティが配列型を返しますが、<ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument.Value%2A&gt;</ph>プロパティから返される、 <ph id="ph2">`ReadOnlyCollection&lt;CustomAttributeTypedArgument&gt;`</ph> (<ph id="ph3">`ReadOnlyCollection(Of CustomAttributeTypedArgument)`</ph> Visual Basic で) コレクションの各要素には、配列引数の対応する要素を表します。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeTypedArgument.ArgumentType">
          <source>The following example defines a custom attribute with four constructors and four properties.</source>
          <target state="translated">次の例では、次の 4 つのコンス トラクターと 4 つのプロパティを持つカスタム属性を定義します。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeTypedArgument.ArgumentType">
          <source>Two of the properties are read-only, and are set by using the positional parameters of the constructors.</source>
          <target state="translated">2 つのプロパティは読み取り専用され、コンス トラクターの位置指定パラメーターを使用して設定されます。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeTypedArgument.ArgumentType">
          <source>The other two properties are read/write, and can be set only by using named arguments.</source>
          <target state="translated">その他の 2 つのプロパティは読み取り/書き込み、および名前付き引数を使用して設定できます。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeTypedArgument.ArgumentType">
          <source>One positional property is an array of strings, and one named property is an array of integers.</source>
          <target state="translated">1 つの位置指定プロパティは、文字列の配列および 1 つの名前付きプロパティは、整数の配列。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeTypedArgument.ArgumentType">
          <source>The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</source>
          <target state="translated">この属性は、アセンブリ、アセンブリで宣言された型、型のメソッド、メソッドのパラメーターに適用されます。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeTypedArgument.ArgumentType">
          <source>Different constructors are used for these cases.</source>
          <target state="translated">別のコンス トラクターは、このような場合に使用されます。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeTypedArgument.ArgumentType">
          <source>When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</source>
          <target state="translated">実行すると、アセンブリはリフレクション専用コンテキストに読み込みます自体し、カスタム属性を表示します。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeTypedArgument.ArgumentType">
          <source>The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</source>
          <target state="translated">型に適用される属性では、位置指定および名前付きの両方の引数を指定して、配列のプロパティを示します。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeTypedArgument.ArgumentType">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A&gt;</ph> property is used in the <ph id="ph2">`ShowValueOrArray`</ph> method that displays custom attribute data, to display the types of attributes.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A&gt;</ph>でプロパティが使用される、<ph id="ph2">`ShowValueOrArray`</ph>を属性の種類を表示する、カスタム属性のデータを表示するメソッド。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeTypedArgument.Equals(System.Object)">
          <source>Another object to compare to.</source>
          <target state="translated">比較対象のもう 1 つのオブジェクト。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeTypedArgument.Equals(System.Object)">
          <source>Indicates whether this instance and a specified object are equal.</source>
          <target state="translated">このインスタンスと指定したオブジェクトが等しいかどうかを示します。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeTypedArgument.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> and this instance are the same type and represent the same value; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> とこのインスタンスが同じ型で、同じ値を表している場合は <ph id="ph2">&lt;paramref name="obj" /&gt;</ph>。それ以外の場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeTypedArgument.GetHashCode">
          <source>Returns the hash code for this instance.</source>
          <target state="translated">このインスタンスのハッシュ コードを返します。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeTypedArgument.GetHashCode">
          <source>A 32-bit signed integer that is the hash code for this instance.</source>
          <target state="translated">このインスタンスのハッシュ コードである 32 ビット符号付き整数。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeTypedArgument.op_Equality(System.Reflection.CustomAttributeTypedArgument,System.Reflection.CustomAttributeTypedArgument)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeTypedArgument" /&gt;</ph> structure to the left of the equality operator.</source>
          <target state="translated">等値演算子の左側に表示される <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeTypedArgument" /&gt;</ph> 構造体。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeTypedArgument.op_Equality(System.Reflection.CustomAttributeTypedArgument,System.Reflection.CustomAttributeTypedArgument)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeTypedArgument" /&gt;</ph> structure to the right of the equality operator.</source>
          <target state="translated">等値演算子の右辺にある <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeTypedArgument" /&gt;</ph> 構造体。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeTypedArgument.op_Equality(System.Reflection.CustomAttributeTypedArgument,System.Reflection.CustomAttributeTypedArgument)">
          <source>Tests whether two <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeTypedArgument" /&gt;</ph> structures are equivalent.</source>
          <target state="translated">2 つの <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeTypedArgument" /&gt;</ph> 構造体が等しいかどうかテストします。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeTypedArgument.op_Equality(System.Reflection.CustomAttributeTypedArgument,System.Reflection.CustomAttributeTypedArgument)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the two <ph id="ph2">&lt;see cref="T:System.Reflection.CustomAttributeTypedArgument" /&gt;</ph> structures are equal; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">2 つの <ph id="ph2">&lt;see cref="T:System.Reflection.CustomAttributeTypedArgument" /&gt;</ph> 構造体が等しい場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeTypedArgument.op_Equality(System.Reflection.CustomAttributeTypedArgument,System.Reflection.CustomAttributeTypedArgument)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument.Equals%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">この演算子を同等の方法は<ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument.Equals%2A?displayProperty=nameWithType&gt;</ph>します。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeTypedArgument.op_Inequality(System.Reflection.CustomAttributeTypedArgument,System.Reflection.CustomAttributeTypedArgument)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeTypedArgument" /&gt;</ph> structure to the left of the inequality operator.</source>
          <target state="translated">非等値演算子の左側に表示される <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeTypedArgument" /&gt;</ph> 構造体。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeTypedArgument.op_Inequality(System.Reflection.CustomAttributeTypedArgument,System.Reflection.CustomAttributeTypedArgument)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeTypedArgument" /&gt;</ph> structure to the right of the inequality operator.</source>
          <target state="translated">非等値演算子の右辺にある <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeTypedArgument" /&gt;</ph> 構造体。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeTypedArgument.op_Inequality(System.Reflection.CustomAttributeTypedArgument,System.Reflection.CustomAttributeTypedArgument)">
          <source>Tests whether two <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeTypedArgument" /&gt;</ph> structures are different.</source>
          <target state="translated">2 つの <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeTypedArgument" /&gt;</ph> 構造体が異なるかどうかテストします。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeTypedArgument.op_Inequality(System.Reflection.CustomAttributeTypedArgument,System.Reflection.CustomAttributeTypedArgument)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the two <ph id="ph2">&lt;see cref="T:System.Reflection.CustomAttributeTypedArgument" /&gt;</ph> structures are different; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">2 つの <ph id="ph2">&lt;see cref="T:System.Reflection.CustomAttributeTypedArgument" /&gt;</ph> 構造体が異なる場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeTypedArgument.op_Inequality(System.Reflection.CustomAttributeTypedArgument,System.Reflection.CustomAttributeTypedArgument)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument.Equals%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">この演算子を同等の方法は<ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument.Equals%2A?displayProperty=nameWithType&gt;</ph>します。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeTypedArgument.ToString">
          <source>Returns a string consisting of the argument name, the equal sign, and a string representation of the argument value.</source>
          <target state="translated">引数名、等号 (=) および引数値の文字列表現から成る文字列を返します。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeTypedArgument.ToString">
          <source>A string consisting of the argument name, the equal sign, and a string representation of the argument value.</source>
          <target state="translated">引数名、等号 (=) および引数値の文字列表現から成る文字列。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="P:System.Reflection.CustomAttributeTypedArgument.Value">
          <source>Gets the value of the argument for a simple argument or for an element of an array argument; gets a collection of values for an array argument.</source>
          <target state="translated">単純な引数または配列引数の要素に対しては、引数の値を取得します。配列引数に対しては値のコレクションを取得します。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeTypedArgument.Value">
          <source>An object that represents the value of the argument or element, or a generic <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Reflection.CustomAttributeTypedArgument" /&gt;</ph> objects that represent the values of an array-type argument.</source>
          <target state="translated">引数または要素の値を表すオブジェクト、または配列型引数の値を表す <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> オブジェクトの汎用 <ph id="ph2">&lt;see cref="T:System.Reflection.CustomAttributeTypedArgument" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeTypedArgument.Value">
          <source>If the <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument&gt;</ph> represents an array argument, this property returns a <ph id="ph2">`ReadOnlyCollection&lt;CustomAttributeTypedArgument&gt;`</ph> (<ph id="ph3">`ReadOnlyCollection(Of CustomAttributeTypedArgument)`</ph> in Visual Basic).</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument&gt;</ph>このプロパティを返しますでは、配列引数を表す、 <ph id="ph2">`ReadOnlyCollection&lt;CustomAttributeTypedArgument&gt;`</ph> (<ph id="ph3">`ReadOnlyCollection(Of CustomAttributeTypedArgument)`</ph> Visual Basic で)。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeTypedArgument.Value">
          <source>Each element of the collection represents the corresponding element of the array argument.</source>
          <target state="translated">コレクションの各要素は、配列の引数の対応する要素を表します。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeTypedArgument.Value">
          <source>The type of the value can be obtained by using the <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A&gt;</ph> property.</source>
          <target state="translated">使用して、値の型を取得できる、<ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeTypedArgument.Value">
          <source><ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A&gt;</ph> gets the actual type of the value returned by the <ph id="ph2">&lt;xref:System.Reflection.CustomAttributeTypedArgument.Value%2A&gt;</ph> property for simple arguments or for elements of array arguments.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A&gt;</ph> によって返される値の実際の型を取得、<ph id="ph2">&lt;xref:System.Reflection.CustomAttributeTypedArgument.Value%2A&gt;</ph>単純引数または配列の要素のプロパティです。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeTypedArgument.Value">
          <source>It returns the array type for array arguments.</source>
          <target state="translated">配列引数の配列の型を返します。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeTypedArgument.Value">
          <source>The following example defines a custom attribute with four constructors and four properties.</source>
          <target state="translated">次の例では、次の 4 つのコンス トラクターと 4 つのプロパティを持つカスタム属性を定義します。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeTypedArgument.Value">
          <source>Two of the properties are read-only, and are set by using the positional parameters of the constructors.</source>
          <target state="translated">2 つのプロパティは読み取り専用され、コンス トラクターの位置指定パラメーターを使用して設定されます。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeTypedArgument.Value">
          <source>The other two properties are read/write, and can be set only by using named arguments.</source>
          <target state="translated">その他の 2 つのプロパティは読み取り/書き込み、および名前付き引数を使用して設定できます。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeTypedArgument.Value">
          <source>One positional property is an array of strings, and one named property is an array of integers.</source>
          <target state="translated">1 つの位置指定プロパティは、文字列の配列および 1 つの名前付きプロパティは、整数の配列。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeTypedArgument.Value">
          <source>The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</source>
          <target state="translated">この属性は、アセンブリ、アセンブリで宣言された型、型のメソッド、メソッドのパラメーターに適用されます。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeTypedArgument.Value">
          <source>Different constructors are used for these cases.</source>
          <target state="translated">別のコンス トラクターは、このような場合に使用されます。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeTypedArgument.Value">
          <source>When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</source>
          <target state="translated">実行すると、アセンブリはリフレクション専用コンテキストに読み込みます自体し、カスタム属性を表示します。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeTypedArgument.Value">
          <source>The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</source>
          <target state="translated">型に適用される属性では、位置指定および名前付きの両方の引数を指定して、配列のプロパティを示します。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeTypedArgument.Value">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument.Value%2A&gt;</ph> property is used in the <ph id="ph2">`ShowValueOrArray`</ph> method that displays custom attribute data, to display the values of attributes.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument.Value%2A&gt;</ph>でプロパティが使用される、<ph id="ph2">`ShowValueOrArray`</ph>を属性の値を表示する、カスタム属性のデータを表示するメソッド。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeTypedArgument.Value">
          <source><ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A&gt;</ph> &amp;#124; <ph id="ph2">&lt;xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A&gt;</ph> &amp;#124; <ph id="ph2">&lt;xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A&gt;</ph></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>