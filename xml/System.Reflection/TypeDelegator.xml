<Type Name="TypeDelegator" FullName="System.Reflection.TypeDelegator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9e90cf203b6e98554c17a81ba51e794e058714a3" />
    <Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="11/27/2018" />
    <Meta Name="ms.locfileid" Value="52370705" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TypeDelegator : System.Reflection.TypeInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit TypeDelegator extends System.Reflection.TypeInfo" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.TypeDelegator" />
  <TypeSignature Language="VB.NET" Value="Public Class TypeDelegator&#xA;Inherits TypeInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeDelegator : System::Reflection::TypeInfo" />
  <TypeSignature Language="F#" Value="type TypeDelegator = class&#xA;    inherit TypeInfo" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Reflection.TypeInfo</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-1.1">System.Type</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="533fd-101">
        <see cref="T:System.Type" /> オブジェクトをラップし、メソッドをこの <see langword="Type" /> にデリゲートします。</span>
      <span class="sxs-lookup">
        <span data-stu-id="533fd-101">Wraps a <see cref="T:System.Type" /> object and delegates methods to that <see langword="Type" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="533fd-102">この型から派生し、カスタマイズを提供する必要があるメンバーのみと、プログラムで必須であり、によって実装されていないすべてのメンバーをオーバーライド<xref:System.Reflection.TypeDelegator>します。</span><span class="sxs-lookup"><span data-stu-id="533fd-102">Derive from this type and override only those members you have to provide customization in, plus any members that are required by your program and not already implemented by <xref:System.Reflection.TypeDelegator>.</span></span>  
  
 <span data-ttu-id="533fd-103"><xref:System.Reflection.TypeDelegator> 派生した<xref:System.Type?displayProperty=nameWithType>はほとんどのプロパティとメソッドの実装と<xref:System.Type>します。</span><span class="sxs-lookup"><span data-stu-id="533fd-103"><xref:System.Reflection.TypeDelegator> derives from <xref:System.Type?displayProperty=nameWithType> and implements most of the properties and methods of <xref:System.Type>.</span></span> <span data-ttu-id="533fd-104">それを実装する各メンバーの<xref:System.Reflection.TypeDelegator>内部の対応するメンバーに自動的にデリゲート<xref:System.Type>オブジェクトは、コンス トラクターに引数として渡されます。</span><span class="sxs-lookup"><span data-stu-id="533fd-104">For each member it implements, <xref:System.Reflection.TypeDelegator> automatically delegates to the corresponding member of an internal <xref:System.Type> object, which is supplied as an argument to the constructor.</span></span> <span data-ttu-id="533fd-105">この内部<xref:System.Type>オブジェクトを公開するクラスを派生する、 `protected` <xref:System.Reflection.TypeDelegator.typeImpl>フィールド。</span><span class="sxs-lookup"><span data-stu-id="533fd-105">This internal <xref:System.Type> object is exposed to deriving classes by the `protected`<xref:System.Reflection.TypeDelegator.typeImpl> field.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="533fd-106">一部のメンバーの<xref:System.Reflection.TypeDelegator>場合でも、メンバー自体は単に継承の実装を持つ<xref:System.Type>します。</span><span class="sxs-lookup"><span data-stu-id="533fd-106">Some members of <xref:System.Reflection.TypeDelegator> have implementations even though the members themselves are simply inherited from <xref:System.Type>.</span></span> <span data-ttu-id="533fd-107">このような場合は、実装が提供されるによってオーバーライドされた`protected`「実装」で終わる名前を持つメソッド。</span><span class="sxs-lookup"><span data-stu-id="533fd-107">In these cases, the implementation is provided by an overridden `protected` method that has a name that ends in "Impl".</span></span> <span data-ttu-id="533fd-108">すべてのオーバー ロードの実装など、<xref:System.Reflection.TypeDelegator.GetMethods%2A>メソッドが提供されて、オーバーライドされたによって<xref:System.Reflection.TypeDelegator.GetMethodImpl%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="533fd-108">For example, the implementation for all overloads of the <xref:System.Reflection.TypeDelegator.GetMethods%2A> method is supplied by the overridden <xref:System.Reflection.TypeDelegator.GetMethodImpl%2A> method.</span></span> <span data-ttu-id="533fd-109">実装などのプロパティを継承<xref:System.Type.IsPublic%2A>と<xref:System.Type.IsNestedAssembly%2A>提供されますが、オーバーライドされた<xref:System.Reflection.TypeDelegator.GetAttributeFlagsImpl%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="533fd-109">The implementation for inherited properties such as <xref:System.Type.IsPublic%2A> and <xref:System.Type.IsNestedAssembly%2A> is provided by the overridden <xref:System.Reflection.TypeDelegator.GetAttributeFlagsImpl%2A> method.</span></span>  
  
 <span data-ttu-id="533fd-110">受け取るパブリック コンス トラクターを提供できるクラスを派生させる、<xref:System.Type>オブジェクトとそのパラメーターおよびそのオブジェクトを渡すだけです、<xref:System.Reflection.TypeDelegator.%23ctor%28System.Type%29>コンス トラクター、または、内部で設定できます<xref:System.Type>他の方法でオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="533fd-110">Deriving classes can provide a public constructor that takes a <xref:System.Type> object as its parameter and simply passes that object to the <xref:System.Reflection.TypeDelegator.%23ctor%28System.Type%29> constructor, or can set the internal <xref:System.Type> object in some other way.</span></span>  
  
 <span data-ttu-id="533fd-111">派生クラスで実装されていないメンバーを使用してかどうか<xref:System.Reflection.TypeDelegator>、そのメンバーをオーバーライドし、実装を提供する必要がありますに。</span><span class="sxs-lookup"><span data-stu-id="533fd-111">If a deriving class uses a member that is not implemented by <xref:System.Reflection.TypeDelegator>, it must override that member and provide an implementation.</span></span> <span data-ttu-id="533fd-112">最も単純な実装は、内部で、対応するメンバーを呼び出す<xref:System.Type>オブジェクトによって公開されている、<xref:System.Reflection.TypeDelegator.typeImpl>がフィールドに、アプリケーションに必要なすべての実装を提供できます。</span><span class="sxs-lookup"><span data-stu-id="533fd-112">The simplest implementation is to call the corresponding member on the internal <xref:System.Type> object exposed by the <xref:System.Reflection.TypeDelegator.typeImpl> field, but you can provide any implementation your application requires.</span></span> <span data-ttu-id="533fd-113">アプリケーションでは使用されませんが、ライブラリによって、アプリケーション呼び出しを関数または場合に、これらのメンバーをオーバーライドする必要はありません (たとえば、<xref:System.CodeDom.CodeTypeReference.%23ctor%28System.Type%29?displayProperty=nameWithType>コンス トラクター)。</span><span class="sxs-lookup"><span data-stu-id="533fd-113">It is not necessary to override these members if they are not used by your application or by library functions your application calls (for example, by the <xref:System.CodeDom.CodeTypeReference.%23ctor%28System.Type%29?displayProperty=nameWithType> constructor).</span></span>  
  
 <span data-ttu-id="533fd-114">次の仮想メソッド (`Overridable` Visual Basic でのメソッド) の<xref:System.Type>で実装されていない<xref:System.Reflection.TypeDelegator>: <xref:System.Type.MakeGenericType%2A>、 <xref:System.Type.GetGenericTypeDefinition%2A>、 <xref:System.Type.GetGenericArguments%2A>、 <xref:System.Type.GetGenericParameterConstraints%2A>、 <xref:System.Type.MakeArrayType%2A>、 <xref:System.Type.MakeByRefType%2A>、 <xref:System.Type.MakePointerType%2A>, <xref:System.Type.GetEnumNames%2A>, <xref:System.Type.GetEnumValues%2A>, <xref:System.Type.GetEnumUnderlyingType%2A>, <xref:System.Type.GetTypeCodeImpl%2A>, <xref:System.Type.IsEnumDefined%2A>, <xref:System.Type.IsEquivalentTo%2A>.</span><span class="sxs-lookup"><span data-stu-id="533fd-114">The following virtual methods (`Overridable` methods in Visual Basic) of <xref:System.Type> are not implemented by <xref:System.Reflection.TypeDelegator>: <xref:System.Type.MakeGenericType%2A>, <xref:System.Type.GetGenericTypeDefinition%2A>, <xref:System.Type.GetGenericArguments%2A>, <xref:System.Type.GetGenericParameterConstraints%2A>, <xref:System.Type.MakeArrayType%2A>, <xref:System.Type.MakeByRefType%2A>, <xref:System.Type.MakePointerType%2A>, <xref:System.Type.GetEnumNames%2A>, <xref:System.Type.GetEnumValues%2A>, <xref:System.Type.GetEnumUnderlyingType%2A>, <xref:System.Type.GetTypeCodeImpl%2A>, <xref:System.Type.IsEnumDefined%2A>, <xref:System.Type.IsEquivalentTo%2A>.</span></span>  
  
 <span data-ttu-id="533fd-115">次の仮想プロパティ (`Overridable` Visual Basic でのプロパティ) の<xref:System.Type>で実装されていない<xref:System.Reflection.TypeDelegator>: <xref:System.Type.IsGenericType%2A>、 <xref:System.Type.IsGenericTypeDefinition%2A>、 <xref:System.Type.IsGenericParameter%2A>、 <xref:System.Type.ContainsGenericParameters%2A>、 <xref:System.Type.DeclaringMethod%2A>、 <xref:System.Type.GenericParameterAttributes%2A>、 <xref:System.Type.GenericParameterPosition%2A>, <xref:System.Type.IsSecurityCritical%2A>, <xref:System.Type.IsSecuritySafeCritical%2A>, <xref:System.Type.IsSecurityTransparent%2A>.</span><span class="sxs-lookup"><span data-stu-id="533fd-115">The following virtual properties (`Overridable` properties in Visual Basic) of <xref:System.Type> are not implemented by <xref:System.Reflection.TypeDelegator>: <xref:System.Type.IsGenericType%2A>, <xref:System.Type.IsGenericTypeDefinition%2A>, <xref:System.Type.IsGenericParameter%2A>, <xref:System.Type.ContainsGenericParameters%2A>, <xref:System.Type.DeclaringMethod%2A>, <xref:System.Type.GenericParameterAttributes%2A>, <xref:System.Type.GenericParameterPosition%2A>, <xref:System.Type.IsSecurityCritical%2A>, <xref:System.Type.IsSecuritySafeCritical%2A>, <xref:System.Type.IsSecurityTransparent%2A>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="533fd-116">
            <see cref="T:System.Reflection.TypeDelegator" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-116">Initializes a new instance of the <see cref="T:System.Reflection.TypeDelegator" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TypeDelegator ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TypeDelegator();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="533fd-117">
            <see cref="T:System.Reflection.TypeDelegator" /> クラスの新しいインスタンスを、既定のプロパティを使用して初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-117">Initializes a new instance of the <see cref="T:System.Reflection.TypeDelegator" /> class with default properties.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeDelegator (Type delegatingType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type delegatingType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.#ctor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (delegatingType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeDelegator(Type ^ delegatingType);" />
      <MemberSignature Language="F#" Value="new System.Reflection.TypeDelegator : Type -&gt; System.Reflection.TypeDelegator" Usage="new System.Reflection.TypeDelegator delegatingType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="delegatingType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="delegatingType">
          <span data-ttu-id="533fd-118">オブジェクトのメソッドの呼び出しをカプセル化する <see cref="T:System.Type" /> クラスのインスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-118">The instance of the class <see cref="T:System.Type" /> that encapsulates the call to the method of an object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="533fd-119">カプセル化するインスタンスを指定して、<see cref="T:System.Reflection.TypeDelegator" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-119">Initializes a new instance of the <see cref="T:System.Reflection.TypeDelegator" /> class specifying the encapsulating instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="533fd-120">このコンス トラクターが基にデリゲートを生成するクラスから呼び出す、`Type`メソッドを定義するクラスのオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="533fd-120">This constructor is called from a class to generate a delegate based upon the `Type` object for the class defining the method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="533fd-121">
            <paramref name="delegatingType" /> は <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-121">
              <paramref name="delegatingType" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Assembly">
      <MemberSignature Language="C#" Value="public override System.Reflection.Assembly Assembly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Assembly Assembly" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.TypeDelegator.Assembly" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Assembly As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::Assembly ^ Assembly { System::Reflection::Assembly ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Assembly : System.Reflection.Assembly" Usage="System.Reflection.TypeDelegator.Assembly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="533fd-122">実装されている型のアセンブリを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-122">Gets the assembly of the implemented type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="533fd-123">実装されている型のアセンブリを表す <see cref="T:System.Reflection.Assembly" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-123">An <see cref="T:System.Reflection.Assembly" /> object representing the assembly of the implemented type.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="533fd-124">アセンブリは、共通言語ランタイムでの配置単位です。</span><span class="sxs-lookup"><span data-stu-id="533fd-124">Assemblies are the deployment units in the common language runtime.</span></span> <span data-ttu-id="533fd-125">アセンブリは、要求を解決する名前空間を確立し、対象のリソースを外部に公開し、アセンブリ内からアクセスできるを決定します。</span><span class="sxs-lookup"><span data-stu-id="533fd-125">Assemblies establish the namespace for resolving requests and determine which resources are exposed externally and which are accessible from within the assembly.</span></span> <span data-ttu-id="533fd-126">共通言語ランタイムでは、判断でき、任意の実行中のオブジェクトのアセンブリを検索することができます。</span><span class="sxs-lookup"><span data-stu-id="533fd-126">The common language runtime can determine and locate the assembly for any running object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AssemblyQualifiedName">
      <MemberSignature Language="C#" Value="public override string AssemblyQualifiedName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AssemblyQualifiedName" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.TypeDelegator.AssemblyQualifiedName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AssemblyQualifiedName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ AssemblyQualifiedName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AssemblyQualifiedName : string" Usage="System.Reflection.TypeDelegator.AssemblyQualifiedName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="533fd-127">アセンブリの完全修飾名を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-127">Gets the assembly's fully qualified name.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="533fd-128">アセンブリの完全限定名を格納している文字列。<see langword="String" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-128">A <see langword="String" /> containing the assembly's fully qualified name.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseType">
      <MemberSignature Language="C#" Value="public override Type BaseType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type BaseType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.TypeDelegator.BaseType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property BaseType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ BaseType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseType : Type" Usage="System.Reflection.TypeDelegator.BaseType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="533fd-129">現在の型の基本型を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-129">Gets the base type for the current type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="533fd-130">型の基本型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-130">The base type for a type.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="533fd-131">基本型は、この型の直接の継承元となる型です。</span><span class="sxs-lookup"><span data-stu-id="533fd-131">The base type is the type from which this type directly inherits.</span></span> <span data-ttu-id="533fd-132">以降、<xref:System.Object>クラス型では、その他のすべての型の基本クラス、基本データ型がない唯一の種類。</span><span class="sxs-lookup"><span data-stu-id="533fd-132">Since the <xref:System.Object> class type is the ultimate base class of all the other types, it is the only type that does not have a base type.</span></span> <span data-ttu-id="533fd-133">この場合、`null`の基本型として返される、`Object`型。</span><span class="sxs-lookup"><span data-stu-id="533fd-133">In this case, `null` is returned as the base type of the `Object` type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FullName">
      <MemberSignature Language="C#" Value="public override string FullName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullName" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.TypeDelegator.FullName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property FullName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ FullName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FullName : string" Usage="System.Reflection.TypeDelegator.FullName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="533fd-134">実装されている型の完全修飾名を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-134">Gets the fully qualified name of the implemented type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="533fd-135">型の完全限定名を格納している文字列。<see langword="String" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-135">A <see langword="String" /> containing the type's fully qualified name.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="533fd-136">現在の完全修飾名を含む文字列`TypeDelegator`します。</span><span class="sxs-lookup"><span data-stu-id="533fd-136">A string containing the fully qualified name of the current `TypeDelegator`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAttributeFlagsImpl">
      <MemberSignature Language="C#" Value="protected override System.Reflection.TypeAttributes GetAttributeFlagsImpl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Reflection.TypeAttributes GetAttributeFlagsImpl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.GetAttributeFlagsImpl" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetAttributeFlagsImpl () As TypeAttributes" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Reflection::TypeAttributes GetAttributeFlagsImpl();" />
      <MemberSignature Language="F#" Value="override this.GetAttributeFlagsImpl : unit -&gt; System.Reflection.TypeAttributes" Usage="typeDelegator.GetAttributeFlagsImpl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.TypeAttributes</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="533fd-137">
            <see langword="TypeDelegator" /> に割り当てられている属性を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-137">Gets the attributes assigned to the <see langword="TypeDelegator" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="533fd-138">実装属性フラグを表す <see langword="TypeAttributes" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-138">A <see langword="TypeAttributes" /> object representing the implementation attribute flags.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="533fd-139">このメソッドはあるかどうかを使用できます、`TypeDelegator`は抽象でありでパブリックにします。</span><span class="sxs-lookup"><span data-stu-id="533fd-139">This method can be used to determine if the `TypeDelegator` is abstract, public, and so on.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.TypeAttributes" />
      </Docs>
    </Member>
    <Member MemberName="GetConstructorImpl">
      <MemberSignature Language="C#" Value="protected override System.Reflection.ConstructorInfo GetConstructorImpl (System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, System.Reflection.CallingConventions callConvention, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Reflection.ConstructorInfo GetConstructorImpl(valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, valuetype System.Reflection.CallingConventions callConvention, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Reflection::ConstructorInfo ^ GetConstructorImpl(System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, System::Reflection::CallingConventions callConvention, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers);" />
      <MemberSignature Language="F#" Value="override this.GetConstructorImpl : System.Reflection.BindingFlags * System.Reflection.Binder * System.Reflection.CallingConventions * Type[] * System.Reflection.ParameterModifier[] -&gt; System.Reflection.ConstructorInfo" Usage="typeDelegator.GetConstructorImpl (bindingAttr, binder, callConvention, types, modifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ConstructorInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="callConvention" Type="System.Reflection.CallingConventions" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">
          <span data-ttu-id="533fd-140">検索の実行方法に影響を与えるビットマスク。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-140">A bitmask that affects the way in which the search is conducted.</span>
          </span>
          <span data-ttu-id="533fd-141">この値は、<see cref="T:System.Reflection.BindingFlags" /> の 0 個以上のビット フラグの組み合わせです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-141">The value is a combination of zero or more bit flags from <see cref="T:System.Reflection.BindingFlags" />.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="533fd-142">バインディング、引数型の強制変換、メンバーの呼び出し、および、リフレクションを使用した <see langword="MemberInfo" /> オブジェクトの取得を有効にするオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-142">An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <see langword="MemberInfo" /> objects using reflection.</span>
          </span>
          <span data-ttu-id="533fd-143">
            <paramref name="binder" /> が <see langword="null" /> の場合は、既定のバインダーが使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-143">If <paramref name="binder" /> is <see langword="null" />, the default binder is used.</span>
          </span>
        </param>
        <param name="callConvention">
          <span data-ttu-id="533fd-144">呼び出し規約。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-144">The calling conventions.</span>
          </span>
        </param>
        <param name="types">
          <span data-ttu-id="533fd-145">パラメーターの数、順序、および型のリストを格納している <see langword="Type" /> 型の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-145">An array of type <see langword="Type" /> containing a list of the parameter number, order, and types.</span>
          </span>
          <span data-ttu-id="533fd-146">types は <see langword="null" /> にできません。適切な <see langword="GetMethod" /> メソッドまたは空の配列を使用して、パラメーターなしのメソッドを検索します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-146">Types cannot be <see langword="null" />; use an appropriate <see langword="GetMethod" /> method or an empty array to search for a method without parameters.</span>
          </span>
        </param>
        <param name="modifiers">
          <span data-ttu-id="533fd-147">
            <paramref name="types" /> 配列と同じ長さで、要素が取得するメソッドのパラメーターに関連付けられた属性を表す <see langword="ParameterModifier" /> 型の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-147">An array of type <see langword="ParameterModifier" /> having the same length as the <paramref name="types" /> array, whose elements represent the attributes associated with the parameters of the method to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="533fd-148">
            <see langword="TypeDelegator" /> を実装したコンストラクターを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-148">Gets the constructor that implemented the <see langword="TypeDelegator" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="533fd-149">指定した基準と一致するメソッドの <see langword="ConstructorInfo" /> オブジェクト。見つからなかった場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-149">A <see langword="ConstructorInfo" /> object for the method that matches the specified criteria, or <see langword="null" /> if a match cannot be found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="533fd-150">`callConvention`パラメーターはエントリ ポイントの呼び出し規約を示します。</span><span class="sxs-lookup"><span data-stu-id="533fd-150">The `callConvention` parameter indicates the calling convention for the entry point.</span></span> <span data-ttu-id="533fd-151">呼び出し規則が指定されていない場合、既定値<xref:System.Reflection.CallingConventions>の値`Standard`使用されます。</span><span class="sxs-lookup"><span data-stu-id="533fd-151">If no calling convention is specified, a default <xref:System.Reflection.CallingConventions> value of `Standard` is used.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.CallingConventions" />
        <altmember cref="T:System.Reflection.BindingFlags" />
        <altmember cref="T:System.Reflection.Binder" />
      </Docs>
    </Member>
    <Member MemberName="GetConstructors">
      <MemberSignature Language="C#" Value="public override System.Reflection.ConstructorInfo[] GetConstructors (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.ConstructorInfo[] GetConstructors(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.GetConstructors(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetConstructors (bindingAttr As BindingFlags) As ConstructorInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::ConstructorInfo ^&gt; ^ GetConstructors(System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="override this.GetConstructors : System.Reflection.BindingFlags -&gt; System.Reflection.ConstructorInfo[]" Usage="typeDelegator.GetConstructors bindingAttr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.ConstructorInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">
          <span data-ttu-id="533fd-152">検索の実行方法に影響を与えるビットマスク。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-152">A bitmask that affects the way in which the search is conducted.</span>
          </span>
          <span data-ttu-id="533fd-153">この値は、<see cref="T:System.Reflection.BindingFlags" /> の 0 個以上のビット フラグの組み合わせです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-153">The value is a combination of zero or more bit flags from <see cref="T:System.Reflection.BindingFlags" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="533fd-154">現在の <see cref="T:System.Reflection.TypeDelegator" /> によってラップされている型に定義されたコンストラクターを表す <see cref="T:System.Reflection.ConstructorInfo" /> オブジェクトの配列を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-154">Returns an array of <see cref="T:System.Reflection.ConstructorInfo" /> objects representing constructors defined for the type wrapped by the current <see cref="T:System.Reflection.TypeDelegator" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="533fd-155">このクラスに定義されている指定したコンストラクターを格納している <see langword="ConstructorInfo" /> 型の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-155">An array of type <see langword="ConstructorInfo" /> containing the specified constructors defined for this class.</span>
          </span>
          <span data-ttu-id="533fd-156">コンストラクターが定義されていない場合は、空の配列が返されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-156">If no constructors are defined, an empty array is returned.</span>
          </span>
          <span data-ttu-id="533fd-157">指定したパラメーターの値によって、パブリック コンストラクターだけが返されるか、パブリック コンストラクターと非パブリック コンストラクターの両方が返されるかが決まります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-157">Depending on the value of a specified parameter, only public constructors or both public and non-public constructors will be returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="533fd-158">クラス初期化子はを通じてしか利用できません`GetMember`、 `GetMembers`、 `FindMembers`、および`GetConstructors`します。</span><span class="sxs-lookup"><span data-stu-id="533fd-158">Class initializers are available only through `GetMember`, `GetMembers`, `FindMembers`, and `GetConstructors`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="533fd-159">この型の定義済みのカスタム属性をすべて返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-159">Returns all the custom attributes defined for this type.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public override object[] GetCustomAttributes (bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object[] GetCustomAttributes(bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.GetCustomAttributes(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCustomAttributes (inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(bool inherit);" />
      <MemberSignature Language="F#" Value="override this.GetCustomAttributes : bool -&gt; obj[]" Usage="typeDelegator.GetCustomAttributes inherit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="inherit">
          <span data-ttu-id="533fd-160">この型の継承チェーンを検索して属性を見つけるかどうかを指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-160">Specifies whether to search this type's inheritance chain to find the attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="533fd-161">型の継承チェーンを検索するかどうかを指定して、この型に定義されているすべてのカスタム属性を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-161">Returns all the custom attributes defined for this type, specifying whether to search the type's inheritance chain.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="533fd-162">この型に定義されているすべてのカスタム属性を格納しているオブジェクトの配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-162">An array of objects containing all the custom attributes defined for this type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="533fd-163">カスタム属性の型を読み込むことはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-163">A custom attribute type cannot be loaded.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public override object[] GetCustomAttributes (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object[] GetCustomAttributes(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.GetCustomAttributes(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCustomAttributes (attributeType As Type, inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="override this.GetCustomAttributes : Type * bool -&gt; obj[]" Usage="typeDelegator.GetCustomAttributes (attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType">
          <span data-ttu-id="533fd-164">型により識別されるカスタム属性の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-164">An array of custom attributes identified by type.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="533fd-165">この型の継承チェーンを検索して属性を見つけるかどうかを指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-165">Specifies whether to search this type's inheritance chain to find the attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="533fd-166">型によって識別されるカスタム属性の配列を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-166">Returns an array of custom attributes identified by type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="533fd-167">型の継承チェーンを検索するかどうかを指定して検索した結果、<paramref name="attributeType" /> パラメーターと一致したこの型で定義されているカスタム属性を格納しているオブジェクトの配列。この型でカスタム属性が定義されていない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-167">An array of objects containing the custom attributes defined in this type that match the <paramref name="attributeType" /> parameter, specifying whether to search the type's inheritance chain, or <see langword="null" /> if no custom attributes are defined on this type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="533fd-168">
            <paramref name="attributeType" /> は <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-168">
              <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="533fd-169">カスタム属性の型を読み込むことはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-169">A custom attribute type cannot be loaded.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetElementType">
      <MemberSignature Language="C#" Value="public override Type GetElementType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetElementType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.GetElementType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetElementType () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ GetElementType();" />
      <MemberSignature Language="F#" Value="override this.GetElementType : unit -&gt; Type" Usage="typeDelegator.GetElementType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="533fd-170">現在の配列、ポインター、または ByRef によって包含または参照されるオブジェクトの <see cref="T:System.Type" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-170">Returns the <see cref="T:System.Type" /> of the object encompassed or referred to by the current array, pointer or ByRef.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="533fd-171">現在の配列、ポインター、または <see langword="ByRef" /> によって包含または参照されるオブジェクトの <see cref="T:System.Type" />。現在の <see cref="T:System.Type" /> が配列、ポインター、または <see langword="ByRef" /> でない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-171">The <see cref="T:System.Type" /> of the object encompassed or referred to by the current array, pointer or <see langword="ByRef" />, or <see langword="null" /> if the current <see cref="T:System.Type" /> is not an array, a pointer or a <see langword="ByRef" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEvent">
      <MemberSignature Language="C#" Value="public override System.Reflection.EventInfo GetEvent (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.EventInfo GetEvent(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.GetEvent(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEvent (name As String, bindingAttr As BindingFlags) As EventInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::EventInfo ^ GetEvent(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="override this.GetEvent : string * System.Reflection.BindingFlags -&gt; System.Reflection.EventInfo" Usage="typeDelegator.GetEvent (name, bindingAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.EventInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="533fd-172">取得するイベントの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-172">The name of the event to get.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="533fd-173">検索の実行方法に影響を与えるビットマスク。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-173">A bitmask that affects the way in which the search is conducted.</span>
          </span>
          <span data-ttu-id="533fd-174">この値は、<see cref="T:System.Reflection.BindingFlags" /> の 0 個以上のビット フラグの組み合わせです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-174">The value is a combination of zero or more bit flags from <see cref="T:System.Reflection.BindingFlags" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="533fd-175">指定したイベントを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-175">Returns the specified event.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="533fd-176">指定した名前によってこの型で宣言または継承されているイベントを表す <see cref="T:System.Reflection.EventInfo" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-176">An <see cref="T:System.Reflection.EventInfo" /> object representing the event declared or inherited by this type with the specified name.</span>
          </span>
          <span data-ttu-id="533fd-177">このメソッドは、イベントが見つからない場合に <see langword="null" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-177">This method returns <see langword="null" /> if no such event is found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="533fd-178">場合`bindingAttr`は<xref:System.Reflection.BindingFlags>.`IgnoreCase`の大文字と小文字、`name`パラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="533fd-178">If `bindingAttr` is <xref:System.Reflection.BindingFlags>.`IgnoreCase`, the case of the `name` parameter is ignored.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="533fd-179">
            <paramref name="name" /> パラメーターが <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-179">The <paramref name="name" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEvents">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="533fd-180">現在の <see langword="TypeDelegator" /> で宣言または継承されているすべてのパブリック イベントを表す <see cref="T:System.Reflection.EventInfo" /> オブジェクトの配列を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-180">Returns an array of <see cref="T:System.Reflection.EventInfo" /> objects representing all the public events declared or inherited by the current <see langword="TypeDelegator" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="public override System.Reflection.EventInfo[] GetEvents ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.EventInfo[] GetEvents() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.GetEvents" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEvents () As EventInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::EventInfo ^&gt; ^ GetEvents();" />
      <MemberSignature Language="F#" Value="override this.GetEvents : unit -&gt; System.Reflection.EventInfo[]" Usage="typeDelegator.GetEvents " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.EventInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="533fd-181">現在の <see langword="TypeDelegator" /> で宣言または継承されているすべてのパブリック イベントを表す <see cref="T:System.Reflection.EventInfo" /> オブジェクトの配列を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-181">Returns an array of <see cref="T:System.Reflection.EventInfo" /> objects representing all the public events declared or inherited by the current <see langword="TypeDelegator" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="533fd-182">現在の型で宣言または継承されているすべてのイベントを格納している <see langword="EventInfo" /> 型の配列を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-182">Returns an array of type <see langword="EventInfo" /> containing all the events declared or inherited by the current type.</span>
          </span>
          <span data-ttu-id="533fd-183">イベントがない場合は、空の配列が返されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-183">If there are no events, an empty array is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="public override System.Reflection.EventInfo[] GetEvents (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.EventInfo[] GetEvents(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.GetEvents(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEvents (bindingAttr As BindingFlags) As EventInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::EventInfo ^&gt; ^ GetEvents(System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="override this.GetEvents : System.Reflection.BindingFlags -&gt; System.Reflection.EventInfo[]" Usage="typeDelegator.GetEvents bindingAttr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.EventInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">
          <span data-ttu-id="533fd-184">検索の実行方法に影響を与えるビットマスク。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-184">A bitmask that affects the way in which the search is conducted.</span>
          </span>
          <span data-ttu-id="533fd-185">この値は、<see cref="T:System.Reflection.BindingFlags" /> の 0 個以上のビット フラグの組み合わせです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-185">The value is a combination of zero or more bit flags from <see cref="T:System.Reflection.BindingFlags" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="533fd-186">現在の <see langword="TypeDelegator" /> で宣言または継承されている <paramref name="bindingAttr" /> で指定されたイベントを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-186">Returns the events specified in <paramref name="bindingAttr" /> that are declared or inherited by the current <see langword="TypeDelegator" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="533fd-187">
            <paramref name="bindingAttr" /> で指定されたイベントを格納している <see langword="EventInfo" /> 型の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-187">An array of type <see langword="EventInfo" /> containing the events specified in <paramref name="bindingAttr" />.</span>
          </span>
          <span data-ttu-id="533fd-188">イベントがない場合は、空の配列が返されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-188">If there are no events, an empty array is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetField">
      <MemberSignature Language="C#" Value="public override System.Reflection.FieldInfo GetField (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.FieldInfo GetField(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.GetField(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetField (name As String, bindingAttr As BindingFlags) As FieldInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::FieldInfo ^ GetField(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="override this.GetField : string * System.Reflection.BindingFlags -&gt; System.Reflection.FieldInfo" Usage="typeDelegator.GetField (name, bindingAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="533fd-189">検索するフィールドの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-189">The name of the field to find.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="533fd-190">検索の実行方法に影響を与えるビットマスク。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-190">A bitmask that affects the way in which the search is conducted.</span>
          </span>
          <span data-ttu-id="533fd-191">この値は、<see cref="T:System.Reflection.BindingFlags" /> の 0 個以上のビット フラグの組み合わせです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-191">The value is a combination of zero or more bit flags from <see cref="T:System.Reflection.BindingFlags" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="533fd-192">指定した名前のフィールドを表す <see cref="T:System.Reflection.FieldInfo" /> オブジェクトを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-192">Returns a <see cref="T:System.Reflection.FieldInfo" /> object representing the field with the specified name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="533fd-193">指定した名前によってこの <see langword="TypeDelegator" /> で宣言または継承されているフィールドを表す <see langword="FieldInfo" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-193">A <see langword="FieldInfo" /> object representing the field declared or inherited by this <see langword="TypeDelegator" /> with the specified name.</span>
          </span>
          <span data-ttu-id="533fd-194">フィールドが見つからない場合は <see langword="null" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-194">Returns <see langword="null" /> if no such field is found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="533fd-195">使用して、`bindingAttr`の<xref:System.Reflection.BindingFlags>します。すべてのパブリックおよび非パブリック フィールドを返す非パブリック。</span><span class="sxs-lookup"><span data-stu-id="533fd-195">Use a `bindingAttr` of <xref:System.Reflection.BindingFlags>.NonPublic to return all public and nonpublic fields.</span></span> <span data-ttu-id="533fd-196">使用`BindingFlags.IgnoreCase`検索では、既定では大文字小文字を区別するように、フィールドの大文字小文字を区別します。</span><span class="sxs-lookup"><span data-stu-id="533fd-196">Use `BindingFlags.IgnoreCase` to ignore the case of the fields, as the search is case-sensitive by default.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="533fd-197">
            <paramref name="name" /> パラメーターが <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-197">The <paramref name="name" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetFields">
      <MemberSignature Language="C#" Value="public override System.Reflection.FieldInfo[] GetFields (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.FieldInfo[] GetFields(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.GetFields(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFields (bindingAttr As BindingFlags) As FieldInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::FieldInfo ^&gt; ^ GetFields(System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="override this.GetFields : System.Reflection.BindingFlags -&gt; System.Reflection.FieldInfo[]" Usage="typeDelegator.GetFields bindingAttr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">
          <span data-ttu-id="533fd-198">検索の実行方法に影響を与えるビットマスク。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-198">A bitmask that affects the way in which the search is conducted.</span>
          </span>
          <span data-ttu-id="533fd-199">この値は、<see cref="T:System.Reflection.BindingFlags" /> の 0 個以上のビット フラグの組み合わせです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-199">The value is a combination of zero or more bit flags from <see cref="T:System.Reflection.BindingFlags" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="533fd-200">現在の <see cref="T:System.Reflection.TypeDelegator" /> によってラップされている型に定義されたデータ フィールドを表す <see cref="T:System.Reflection.FieldInfo" /> オブジェクトの配列を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-200">Returns an array of <see cref="T:System.Reflection.FieldInfo" /> objects representing the data fields defined for the type wrapped by the current <see cref="T:System.Reflection.TypeDelegator" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="533fd-201">現在の <see langword="TypeDelegator" /> で宣言または継承されているフィールドを格納している <see langword="FieldInfo" /> 型の配列を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-201">An array of type <see langword="FieldInfo" /> containing the fields declared or inherited by the current <see langword="TypeDelegator" />.</span>
          </span>
          <span data-ttu-id="533fd-202">一致するフィールドがない場合は、空の配列が返されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-202">An empty array is returned if there are no matched fields.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="533fd-203"><xref:System.Reflection.TypeDelegator.GetFields%2A>メソッドが返さないフィールドで特定の順序など、アルファベット順または宣言の順序。</span><span class="sxs-lookup"><span data-stu-id="533fd-203">The <xref:System.Reflection.TypeDelegator.GetFields%2A> method does not return fields in a particular order, such as alphabetical or declaration order.</span></span> <span data-ttu-id="533fd-204">この順序が異なるので、コードは、フィールドが返される順序に依存しない必要があります。</span><span class="sxs-lookup"><span data-stu-id="533fd-204">Your code must not depend on the order in which fields are returned, because that order can vary.</span></span>  
  
 <span data-ttu-id="533fd-205">使用して、`bindingAttr`の<xref:System.Reflection.BindingFlags>します。すべてのパブリックおよび非パブリック フィールドを返す非パブリック。</span><span class="sxs-lookup"><span data-stu-id="533fd-205">Use a `bindingAttr` of <xref:System.Reflection.BindingFlags>.NonPublic to return all public and nonpublic fields.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInterface">
      <MemberSignature Language="C#" Value="public override Type GetInterface (string name, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetInterface(string name, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.GetInterface(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInterface (name As String, ignoreCase As Boolean) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ GetInterface(System::String ^ name, bool ignoreCase);" />
      <MemberSignature Language="F#" Value="override this.GetInterface : string * bool -&gt; Type" Usage="typeDelegator.GetInterface (name, ignoreCase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="533fd-206">現在のクラスで実装されているインターフェイスの完全修飾名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-206">The fully qualified name of the interface implemented by the current class.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="533fd-207">大文字小文字の区別を無視する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-207">
              <see langword="true" /> if the case is to be ignored; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="533fd-208">現在の <see cref="T:System.Reflection.TypeDelegator" /> によってラップされている型で実装されている指定したインターフェイスを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-208">Returns the specified interface implemented by the type wrapped by the current <see cref="T:System.Reflection.TypeDelegator" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="533fd-209">現在のクラスで (直接または間接的に) 実装されていて、完全限定名が指定した名前と一致するインターフェイスを表す <see langword="Type" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-209">A <see langword="Type" /> object representing the interface implemented (directly or indirectly) by the current class with the fully qualified name matching the specified name.</span>
          </span>
          <span data-ttu-id="533fd-210">名前が一致するインターフェイスが見つからない場合は、null が返されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-210">If no interface that matches name is found, null is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="533fd-211">
            <paramref name="name" /> パラメーターが <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-211">The <paramref name="name" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetInterfaceMap">
      <MemberSignature Language="C#" Value="public override System.Reflection.InterfaceMapping GetInterfaceMap (Type interfaceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Reflection.InterfaceMapping GetInterfaceMap(class System.Type interfaceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.GetInterfaceMap(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInterfaceMap (interfaceType As Type) As InterfaceMapping" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::InterfaceMapping GetInterfaceMap(Type ^ interfaceType);" />
      <MemberSignature Language="F#" Value="override this.GetInterfaceMap : Type -&gt; System.Reflection.InterfaceMapping" Usage="typeDelegator.GetInterfaceMap interfaceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.InterfaceMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="interfaceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="interfaceType">
          <span data-ttu-id="533fd-212">割り当ての取得対象であるインターフェイスの <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-212">The <see cref="T:System.Type" /> of the interface to retrieve a mapping of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="533fd-213">指定したインターフェイス型に対するインターフェイスの割り当てを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-213">Returns an interface mapping for the specified interface type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="533fd-214">
            <paramref name="interfaceType" /> に対するインターフェイスのマッピングを表す <see cref="T:System.Reflection.InterfaceMapping" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-214">An <see cref="T:System.Reflection.InterfaceMapping" /> object representing the interface mapping for <paramref name="interfaceType" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="533fd-215">インターフェイス マップは、インターフェイスをそのインターフェイスを実装するクラスの実際のメソッドにマップする方法を示します。</span><span class="sxs-lookup"><span data-stu-id="533fd-215">The interface map denotes how an interface is mapped into the actual methods on a class that implements that interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.InterfaceMapping" />
      </Docs>
    </Member>
    <Member MemberName="GetInterfaces">
      <MemberSignature Language="C#" Value="public override Type[] GetInterfaces ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type[] GetInterfaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.GetInterfaces" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInterfaces () As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;Type ^&gt; ^ GetInterfaces();" />
      <MemberSignature Language="F#" Value="override this.GetInterfaces : unit -&gt; Type[]" Usage="typeDelegator.GetInterfaces " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="533fd-216">現在のクラスとその基本クラスで実装されているすべてのインターフェイスを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-216">Returns all the interfaces implemented on the current class and its base classes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="533fd-217">現在のクラスとその基本クラスで実装されているすべてのインターフェイスを格納している <see langword="Type" /> 型の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-217">An array of type <see langword="Type" /> containing all the interfaces implemented on the current class and its base classes.</span>
          </span>
          <span data-ttu-id="533fd-218">何も定義されていない場合は、空の配列が返されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-218">If none are defined, an empty array is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMember">
      <MemberSignature Language="C#" Value="public override System.Reflection.MemberInfo[] GetMember (string name, System.Reflection.MemberTypes type, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.MemberInfo[] GetMember(string name, valuetype System.Reflection.MemberTypes type, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMember (name As String, type As MemberTypes, bindingAttr As BindingFlags) As MemberInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ GetMember(System::String ^ name, System::Reflection::MemberTypes type, System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="override this.GetMember : string * System.Reflection.MemberTypes * System.Reflection.BindingFlags -&gt; System.Reflection.MemberInfo[]" Usage="typeDelegator.GetMember (name, type, bindingAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.Reflection.MemberTypes" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="533fd-219">取得するメンバーの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-219">The name of the member to get.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="533fd-220">検索の実行方法に影響を与えるビットマスク。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-220">A bitmask that affects the way in which the search is conducted.</span>
          </span>
          <span data-ttu-id="533fd-221">この値は、<see cref="T:System.Reflection.BindingFlags" /> の 0 個以上のビット フラグの組み合わせです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-221">The value is a combination of zero or more bit flags from <see cref="T:System.Reflection.BindingFlags" />.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="533fd-222">取得するメンバーの型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-222">The type of members to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="533fd-223">
            <paramref name="name" />、<paramref name="type" />、および <paramref name="bindingAttr" /> で指定されたメンバー (プロパティ、メソッド、コンストラクター、フィールド、イベント、入れ子にされた型) を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-223">Returns members (properties, methods, constructors, fields, events, and nested types) specified by the given <paramref name="name" />, <paramref name="type" />, and <paramref name="bindingAttr" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="533fd-224">指定した基準に一致する現在のクラスとその基本クラスのすべてのメンバーを格納している <see langword="MemberInfo" /> 型の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-224">An array of type <see langword="MemberInfo" /> containing all the members of the current class and its base class meeting the specified criteria.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="533fd-225">場合`bindingAttr`は<xref:System.Reflection.BindingFlags>します。非パブリックでは、すべてのメンバーが考慮されます。</span><span class="sxs-lookup"><span data-stu-id="533fd-225">If `bindingAttr` is <xref:System.Reflection.BindingFlags>.NonPublic, all the members will be considered.</span></span> <span data-ttu-id="533fd-226">一致がない場合は、空の配列が返されます。</span><span class="sxs-lookup"><span data-stu-id="533fd-226">If there are no matches, an empty array is returned.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="533fd-227">
            <paramref name="name" /> パラメーターが <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-227">The <paramref name="name" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMembers">
      <MemberSignature Language="C#" Value="public override System.Reflection.MemberInfo[] GetMembers (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.MemberInfo[] GetMembers(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.GetMembers(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMembers (bindingAttr As BindingFlags) As MemberInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ GetMembers(System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="override this.GetMembers : System.Reflection.BindingFlags -&gt; System.Reflection.MemberInfo[]" Usage="typeDelegator.GetMembers bindingAttr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">
          <span data-ttu-id="533fd-228">検索の実行方法に影響を与えるビットマスク。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-228">A bitmask that affects the way in which the search is conducted.</span>
          </span>
          <span data-ttu-id="533fd-229">この値は、<see cref="T:System.Reflection.BindingFlags" /> の 0 個以上のビット フラグの組み合わせです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-229">The value is a combination of zero or more bit flags from <see cref="T:System.Reflection.BindingFlags" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="533fd-230">
            <paramref name="bindingAttr" /> で指定されたメンバーを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-230">Returns members specified by <paramref name="bindingAttr" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="533fd-231">
            <paramref name="bindingAttr" /> フィルターに一致する現在のクラスとその基本クラスのすべてのメンバーを格納している <see langword="MemberInfo" /> 型の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-231">An array of type <see langword="MemberInfo" /> containing all the members of the current class and its base classes that meet the <paramref name="bindingAttr" /> filter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="533fd-232">場合`bindingAttr`は<xref:System.Reflection.BindingFlags>します。非パブリックでは、すべてのメンバーが考慮されます。</span><span class="sxs-lookup"><span data-stu-id="533fd-232">If `bindingAttr` is <xref:System.Reflection.BindingFlags>.NonPublic, all the members will be considered.</span></span> <span data-ttu-id="533fd-233">一致がない場合は、空の配列が返されます。</span><span class="sxs-lookup"><span data-stu-id="533fd-233">If there are no matches, an empty array is returned.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMethodImpl">
      <MemberSignature Language="C#" Value="protected override System.Reflection.MethodInfo GetMethodImpl (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, System.Reflection.CallingConventions callConvention, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Reflection.MethodInfo GetMethodImpl(string name, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, valuetype System.Reflection.CallingConventions callConvention, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Reflection::MethodInfo ^ GetMethodImpl(System::String ^ name, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, System::Reflection::CallingConventions callConvention, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers);" />
      <MemberSignature Language="F#" Value="override this.GetMethodImpl : string * System.Reflection.BindingFlags * System.Reflection.Binder * System.Reflection.CallingConventions * Type[] * System.Reflection.ParameterModifier[] -&gt; System.Reflection.MethodInfo" Usage="typeDelegator.GetMethodImpl (name, bindingAttr, binder, callConvention, types, modifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="callConvention" Type="System.Reflection.CallingConventions" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="533fd-234">メソッド名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-234">The method name.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="533fd-235">検索の実行方法に影響を与えるビットマスク。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-235">A bitmask that affects the way in which the search is conducted.</span>
          </span>
          <span data-ttu-id="533fd-236">この値は、<see cref="T:System.Reflection.BindingFlags" /> の 0 個以上のビット フラグの組み合わせです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-236">The value is a combination of zero or more bit flags from <see cref="T:System.Reflection.BindingFlags" />.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="533fd-237">バインディング、引数型の強制変換、メンバーの呼び出し、および、リフレクションを使用した <see langword="MemberInfo" /> オブジェクトの取得を有効にするオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-237">An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <see langword="MemberInfo" /> objects using reflection.</span>
          </span>
          <span data-ttu-id="533fd-238">
            <paramref name="binder" /> が <see langword="null" /> の場合は、既定のバインダーが使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-238">If <paramref name="binder" /> is <see langword="null" />, the default binder is used.</span>
          </span>
        </param>
        <param name="callConvention">
          <span data-ttu-id="533fd-239">呼び出し規約。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-239">The calling conventions.</span>
          </span>
        </param>
        <param name="types">
          <span data-ttu-id="533fd-240">パラメーターの数、順序、および型のリストを格納している <see langword="Type" /> 型の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-240">An array of type <see langword="Type" /> containing a list of the parameter number, order, and types.</span>
          </span>
          <span data-ttu-id="533fd-241">types は <see langword="null" /> にできません。適切な <see langword="GetMethod" /> メソッドまたは空の配列を使用して、パラメーターなしのメソッドを検索します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-241">Types cannot be <see langword="null" />; use an appropriate <see langword="GetMethod" /> method or an empty array to search for a method without parameters.</span>
          </span>
        </param>
        <param name="modifiers">
          <span data-ttu-id="533fd-242">
            <paramref name="types" /> 配列と同じ長さで、要素が取得するメソッドのパラメーターに関連付けられた属性を表す <see langword="ParameterModifier" /> 型の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-242">An array of type <see langword="ParameterModifier" /> having the same length as the <paramref name="types" /> array, whose elements represent the attributes associated with the parameters of the method to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="533fd-243">指定したバインディング制約および指定した呼び出し規則を使用して、指定したメソッドのうち、指定した引数の型および修飾子と一致するパラメーターが設定されているものを検索します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-243">Searches for the specified method whose parameters match the specified argument types and modifiers, using the specified binding constraints and the specified calling convention.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="533fd-244">指定した基準と一致する実装メソッドの <see langword="MethodInfoInfo" /> オブジェクト。見つからなかった場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-244">A <see langword="MethodInfoInfo" /> object for the implementation method that matches the specified criteria, or <see langword="null" /> if a match cannot be found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="533fd-245">`callConvention`パラメーターはエントリ ポイントの呼び出し規約を示します。</span><span class="sxs-lookup"><span data-stu-id="533fd-245">The `callConvention` parameter indicates the calling convention for the entry point.</span></span> <span data-ttu-id="533fd-246">ない場合は<xref:System.Reflection.CallingConventions>が指定されている、既定値`CallingConventions`の値`Standard`使用されます。</span><span class="sxs-lookup"><span data-stu-id="533fd-246">If no <xref:System.Reflection.CallingConventions> is specified, a default `CallingConventions` value of `Standard` is used.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.CallingConventions" />
        <altmember cref="T:System.Reflection.BindingFlags" />
        <altmember cref="T:System.Reflection.Binder" />
      </Docs>
    </Member>
    <Member MemberName="GetMethods">
      <MemberSignature Language="C#" Value="public override System.Reflection.MethodInfo[] GetMethods (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.MethodInfo[] GetMethods(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.GetMethods(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMethods (bindingAttr As BindingFlags) As MethodInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::MethodInfo ^&gt; ^ GetMethods(System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="override this.GetMethods : System.Reflection.BindingFlags -&gt; System.Reflection.MethodInfo[]" Usage="typeDelegator.GetMethods bindingAttr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">
          <span data-ttu-id="533fd-247">検索の実行方法に影響を与えるビットマスク。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-247">A bitmask that affects the way in which the search is conducted.</span>
          </span>
          <span data-ttu-id="533fd-248">この値は、<see cref="T:System.Reflection.BindingFlags" /> の 0 個以上のビット フラグの組み合わせです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-248">The value is a combination of zero or more bit flags from <see cref="T:System.Reflection.BindingFlags" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="533fd-249">現在の <see cref="T:System.Reflection.TypeDelegator" /> によってラップされている型の指定されたメソッドを表す <see cref="T:System.Reflection.MethodInfo" /> オブジェクトの配列を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-249">Returns an array of <see cref="T:System.Reflection.MethodInfo" /> objects representing specified methods of the type wrapped by the current <see cref="T:System.Reflection.TypeDelegator" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="533fd-250">この <see langword="TypeDelegator" /> で定義されているメソッドを表す <see langword="MethodInfo" /> オブジェクトの配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-250">An array of <see langword="MethodInfo" /> objects representing the methods defined on this <see langword="TypeDelegator" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNestedType">
      <MemberSignature Language="C#" Value="public override Type GetNestedType (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetNestedType(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.GetNestedType(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetNestedType (name As String, bindingAttr As BindingFlags) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ GetNestedType(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="override this.GetNestedType : string * System.Reflection.BindingFlags -&gt; Type" Usage="typeDelegator.GetNestedType (name, bindingAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="533fd-251">入れ子にされた型の名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-251">The nested type's name.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="533fd-252">検索の実行方法に影響を与えるビットマスク。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-252">A bitmask that affects the way in which the search is conducted.</span>
          </span>
          <span data-ttu-id="533fd-253">この値は、<see cref="T:System.Reflection.BindingFlags" /> の 0 個以上のビット フラグの組み合わせです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-253">The value is a combination of zero or more bit flags from <see cref="T:System.Reflection.BindingFlags" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="533fd-254">現在の <see cref="T:System.Reflection.TypeDelegator" /> によって表される型で宣言または継承されている <paramref name="name" /> および <paramref name="bindingAttr" /> で指定されている、入れ子にされた型を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-254">Returns a nested type specified by <paramref name="name" /> and in <paramref name="bindingAttr" /> that are declared or inherited by the type represented by the current <see cref="T:System.Reflection.TypeDelegator" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="533fd-255">入れ子にされた型を表す <see langword="Type" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-255">A <see langword="Type" /> object representing the nested type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="533fd-256">
            <paramref name="name" /> パラメーターが <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-256">The <paramref name="name" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetNestedTypes">
      <MemberSignature Language="C#" Value="public override Type[] GetNestedTypes (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type[] GetNestedTypes(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.GetNestedTypes(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetNestedTypes (bindingAttr As BindingFlags) As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;Type ^&gt; ^ GetNestedTypes(System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="override this.GetNestedTypes : System.Reflection.BindingFlags -&gt; Type[]" Usage="typeDelegator.GetNestedTypes bindingAttr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">
          <span data-ttu-id="533fd-257">検索の実行方法に影響を与えるビットマスク。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-257">A bitmask that affects the way in which the search is conducted.</span>
          </span>
          <span data-ttu-id="533fd-258">この値は、<see cref="T:System.Reflection.BindingFlags" /> の 0 個以上のビット フラグの組み合わせです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-258">The value is a combination of zero or more bit flags from <see cref="T:System.Reflection.BindingFlags" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="533fd-259">現在の <see cref="T:System.Reflection.TypeDelegator" /> によってラップされている型で宣言または継承されている <paramref name="bindingAttr" /> で指定されている、入れ子にされた型を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-259">Returns the nested types specified in <paramref name="bindingAttr" /> that are declared or inherited by the type wrapped by the current <see cref="T:System.Reflection.TypeDelegator" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="533fd-260">入れ子にされた型を格納している <see langword="Type" /> 型の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-260">An array of type <see langword="Type" /> containing the nested types.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public override System.Reflection.PropertyInfo[] GetProperties (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.PropertyInfo[] GetProperties(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.GetProperties(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProperties (bindingAttr As BindingFlags) As PropertyInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::PropertyInfo ^&gt; ^ GetProperties(System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="override this.GetProperties : System.Reflection.BindingFlags -&gt; System.Reflection.PropertyInfo[]" Usage="typeDelegator.GetProperties bindingAttr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">
          <span data-ttu-id="533fd-261">検索の実行方法に影響を与えるビットマスク。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-261">A bitmask that affects the way in which the search is conducted.</span>
          </span>
          <span data-ttu-id="533fd-262">この値は、<see cref="T:System.Reflection.BindingFlags" /> の 0 個以上のビット フラグの組み合わせです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-262">The value is a combination of zero or more bit flags from <see cref="T:System.Reflection.BindingFlags" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="533fd-263">現在の <see cref="T:System.Reflection.TypeDelegator" /> によってラップされている型のプロパティを表す <see cref="T:System.Reflection.PropertyInfo" /> オブジェクトの配列を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-263">Returns an array of <see cref="T:System.Reflection.PropertyInfo" /> objects representing properties of the type wrapped by the current <see cref="T:System.Reflection.TypeDelegator" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="533fd-264">この <see langword="TypeDelegator" /> で定義されているプロパティを表す <see langword="PropertyInfo" /> オブジェクトの配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-264">An array of <see langword="PropertyInfo" /> objects representing properties defined on this <see langword="TypeDelegator" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyImpl">
      <MemberSignature Language="C#" Value="protected override System.Reflection.PropertyInfo GetPropertyImpl (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type returnType, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Reflection.PropertyInfo GetPropertyImpl(string name, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, class System.Type returnType, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Reflection::PropertyInfo ^ GetPropertyImpl(System::String ^ name, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, Type ^ returnType, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers);" />
      <MemberSignature Language="F#" Value="override this.GetPropertyImpl : string * System.Reflection.BindingFlags * System.Reflection.Binder * Type * Type[] * System.Reflection.ParameterModifier[] -&gt; System.Reflection.PropertyInfo" Usage="typeDelegator.GetPropertyImpl (name, bindingAttr, binder, returnType, types, modifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="533fd-265">取得するプロパティ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-265">The property to get.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="533fd-266">検索の実行方法に影響を与えるビットマスク。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-266">A bitmask that affects the way in which the search is conducted.</span>
          </span>
          <span data-ttu-id="533fd-267">この値は、<see cref="T:System.Reflection.BindingFlags" /> の 0 個以上のビット フラグの組み合わせです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-267">The value is a combination of zero or more bit flags from <see cref="T:System.Reflection.BindingFlags" />.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="533fd-268">バインディング、引数型の強制変換、メンバーの呼び出し、および、リフレクションによる <see langword="MemberInfo" /> オブジェクトの取得を有効にするオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-268">An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <see langword="MemberInfo" /> objects via reflection.</span>
          </span>
          <span data-ttu-id="533fd-269">
            <paramref name="binder" /> が <see langword="null" /> の場合は、既定のバインダーが使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-269">If <paramref name="binder" /> is <see langword="null" />, the default binder is used.</span>
          </span>
          <span data-ttu-id="533fd-270">以下を参照してください。<see cref="T:System.Reflection.Binder" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-270">See <see cref="T:System.Reflection.Binder" />.</span>
          </span>
        </param>
        <param name="returnType">
          <span data-ttu-id="533fd-271">プロパティの戻り値の型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-271">The return type of the property.</span>
          </span>
        </param>
        <param name="types">
          <span data-ttu-id="533fd-272">パラメーター型のリスト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-272">A list of parameter types.</span>
          </span>
          <span data-ttu-id="533fd-273">このリストは、パラメーターの数、順序、および型を表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-273">The list represents the number, order, and types of the parameters.</span>
          </span>
          <span data-ttu-id="533fd-274">types は null にできません。適切な <see langword="GetMethod" /> メソッドまたは空の配列を使用して、パラメーターなしのメソッドを検索します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-274">Types cannot be null; use an appropriate <see langword="GetMethod" /> method or an empty array to search for a method without parameters.</span>
          </span>
        </param>
        <param name="modifiers">
          <span data-ttu-id="533fd-275">取得するメソッドのパラメーターに関連付けられた属性を表す要素を持ち、長さが types と同じ配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-275">An array of the same length as types with elements that represent the attributes associated with the parameters of the method to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="533fd-276">派生クラス内でオーバーライドされるときに、指定のバインディング制約を使用して、指定した引数の型および修飾子と一致するパラメーターが設定されたプロパティを検索します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-276">When overridden in a derived class, searches for the specified property whose parameters match the specified argument types and modifiers, using the specified binding constraints.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="533fd-277">指定した基準と一致するプロパティの <see cref="T:System.Reflection.PropertyInfo" /> オブジェクト。見つからなかった場合は null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-277">A <see cref="T:System.Reflection.PropertyInfo" /> object for the property that matches the specified criteria, or null if a match cannot be found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GUID">
      <MemberSignature Language="C#" Value="public override Guid GUID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid GUID" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.TypeDelegator.GUID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property GUID As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Guid GUID { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.GUID : Guid" Usage="System.Reflection.TypeDelegator.GUID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="533fd-278">実装されている型のグローバル一意識別子 (GUID) を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-278">Gets the GUID (globally unique identifier) of the implemented type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="533fd-279">GUID。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-279">A GUID.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="533fd-280">GUID (グローバル一意識別子) は、クラスまたはインターフェイスを識別するために使用される 128 ビットの一意な識別文字列です。</span><span class="sxs-lookup"><span data-stu-id="533fd-280">The GUID (globally unique identifier) is a 128-bit unique identification string used to identify a class or an interface.</span></span> <span data-ttu-id="533fd-281">Microsoft .NET Framework および COM の相互運用性と主に便利です。</span><span class="sxs-lookup"><span data-stu-id="533fd-281">It is primarily useful for interoperability between the Microsoft .NET Framework and COM.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Guid" />
      </Docs>
    </Member>
    <Member MemberName="HasElementTypeImpl">
      <MemberSignature Language="C#" Value="protected override bool HasElementTypeImpl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool HasElementTypeImpl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.HasElementTypeImpl" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HasElementTypeImpl () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool HasElementTypeImpl();" />
      <MemberSignature Language="F#" Value="override this.HasElementTypeImpl : unit -&gt; bool" Usage="typeDelegator.HasElementTypeImpl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="533fd-282">現在の <see cref="T:System.Type" /> が別の型を包含または参照しているかどうか、つまり現在の <see cref="T:System.Type" /> が配列、ポインター、または ByRef かどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-282">Gets a value indicating whether the current <see cref="T:System.Type" /> encompasses or refers to another type; that is, whether the current <see cref="T:System.Type" /> is an array, a pointer or a ByRef.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="533fd-283">
            <see cref="T:System.Type" /> が配列、ポインター、または ByRef である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-283">
              <see langword="true" /> if the <see cref="T:System.Type" /> is an array, a pointer or a ByRef; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeMember">
      <MemberSignature Language="C#" Value="public override object InvokeMember (string name, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object target, object[] args, System.Reflection.ParameterModifier[] modifiers, System.Globalization.CultureInfo culture, string[] namedParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object InvokeMember(string name, valuetype System.Reflection.BindingFlags invokeAttr, class System.Reflection.Binder binder, object target, object[] args, valuetype System.Reflection.ParameterModifier[] modifiers, class System.Globalization.CultureInfo culture, string[] namedParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ InvokeMember(System::String ^ name, System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder ^ binder, System::Object ^ target, cli::array &lt;System::Object ^&gt; ^ args, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::String ^&gt; ^ namedParameters);" />
      <MemberSignature Language="F#" Value="override this.InvokeMember : string * System.Reflection.BindingFlags * System.Reflection.Binder * obj * obj[] * System.Reflection.ParameterModifier[] * System.Globalization.CultureInfo * string[] -&gt; obj" Usage="typeDelegator.InvokeMember (name, invokeAttr, binder, target, args, modifiers, culture, namedParameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="namedParameters" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="533fd-284">呼び出すメンバーの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-284">The name of the member to invoke.</span>
          </span>
          <span data-ttu-id="533fd-285">コンストラクター、メソッド、プロパティ、フィールドなどを指定できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-285">This may be a constructor, method, property, or field.</span>
          </span>
          <span data-ttu-id="533fd-286">空の文字列 ("") を渡すと、既定メンバーが呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-286">If an empty string ("") is passed, the default member is invoked.</span>
          </span>
        </param>
        <param name="invokeAttr">
          <span data-ttu-id="533fd-287">呼び出し属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-287">The invocation attribute.</span>
          </span>
          <span data-ttu-id="533fd-288">
            <see cref="T:System.Reflection.BindingFlags" /> の <see langword="InvokeMethod" />、<see langword="CreateInstance" />、<see langword="Static" />、<see langword="GetField" />、<see langword="SetField" />、<see langword="GetProperty" />、または <see langword="SetProperty" /> のいずれかにする必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-288">This must be one of the following <see cref="T:System.Reflection.BindingFlags" /> : <see langword="InvokeMethod" />, <see langword="CreateInstance" />, <see langword="Static" />, <see langword="GetField" />, <see langword="SetField" />, <see langword="GetProperty" />, or <see langword="SetProperty" />.</span>
          </span>
          <span data-ttu-id="533fd-289">適切な呼び出し属性を指定する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-289">A suitable invocation attribute must be specified.</span>
          </span>
          <span data-ttu-id="533fd-290">静的メンバーを呼び出す場合は、<see langword="Static" /> フラグを設定する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-290">If a static member is to be invoked, the <see langword="Static" /> flag must be set.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="533fd-291">バインディング、引数型の強制変換、メンバーの呼び出し、および、リフレクションによる <see langword="MemberInfo" /> オブジェクトの取得を有効にするオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-291">An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <see langword="MemberInfo" /> objects via reflection.</span>
          </span>
          <span data-ttu-id="533fd-292">
            <paramref name="binder" /> が <see langword="null" /> の場合は、既定のバインダーが使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-292">If <paramref name="binder" /> is <see langword="null" />, the default binder is used.</span>
          </span>
          <span data-ttu-id="533fd-293">以下を参照してください。<see cref="T:System.Reflection.Binder" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-293">See <see cref="T:System.Reflection.Binder" />.</span>
          </span>
        </param>
        <param name="target">
          <span data-ttu-id="533fd-294">指定したメンバーを呼び出す対象となるオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-294">The object on which to invoke the specified member.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="533fd-295">呼び出すメンバーのパラメーターの数、順序、および型を格納している <see langword="Object" /> 型の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-295">An array of type <see langword="Object" /> that contains the number, order, and type of the parameters of the member to be invoked.</span>
          </span>
          <span data-ttu-id="533fd-296">初期化されていないオブジェクトが <paramref name="args" /> に格納されている場合は、既定のバインダーを使用して 0、0.0、または文字列に拡張できる空オブジェクトとして処理されます。<see langword="Object" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-296">If <paramref name="args" /> contains an uninitialized <see langword="Object" />, it is treated as empty, which, with the default binder, can be widened to 0, 0.0 or a string.</span>
          </span>
        </param>
        <param name="modifiers">
          <span data-ttu-id="533fd-297">
            <paramref name="args" /> と同じ長さで、要素が呼び出されるメンバーの引数に関連付けられた属性を表す <see langword="ParameterModifer" /> 型の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-297">An array of type <see langword="ParameterModifer" /> that is the same length as <paramref name="args" />, with elements that represent the attributes associated with the arguments of the member to be invoked.</span>
          </span>
          <span data-ttu-id="533fd-298">パラメーターにはメンバーのシグネチャに関連付けられた属性があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-298">A parameter has attributes associated with it in the member's signature.</span>
          </span>
          <span data-ttu-id="533fd-299">ByRef の場合は <see langword="ParameterModifer.ByRef" /> を使用します。ない場合は <see langword="ParameterModifer.None" /> を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-299">For ByRef, use <see langword="ParameterModifer.ByRef" />, and for none, use <see langword="ParameterModifer.None" />.</span>
          </span>
          <span data-ttu-id="533fd-300">既定のバインダーはこれらを厳密に一致させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-300">The default binder does exact matching on these.</span>
          </span>
          <span data-ttu-id="533fd-301">
            <see langword="In" /> や <see langword="InOut" /> などの属性は、バインディングでは使用しませんが、<see langword="ParameterInfo" /> を使用して表示できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-301">Attributes such as <see langword="In" /> and <see langword="InOut" /> are not used in binding, and can be viewed using <see langword="ParameterInfo" />.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="533fd-302">型の強制変換を制御するために使用する <see langword="CultureInfo" /> のインスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-302">An instance of <see langword="CultureInfo" /> used to govern the coercion of types.</span>
          </span>
          <span data-ttu-id="533fd-303">このインスタンスは、たとえば、1000 を表す文字列を <see langword="Double" /> 値に変換する場合に必要です。これは、カルチャによって 1000 の表記が異なるためです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-303">This is necessary, for example, to convert a string that represents 1000 to a <see langword="Double" /> value, since 1000 is represented differently by different cultures.</span>
          </span>
          <span data-ttu-id="533fd-304">
            <paramref name="culture" /> が <see langword="null" /> の場合は、現在のスレッドの <see langword="CultureInfo" /> の <see langword="CultureInfo" /> が使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-304">If <paramref name="culture" /> is <see langword="null" />, the <see langword="CultureInfo" /> for the current thread's <see langword="CultureInfo" /> is used.</span>
          </span>
        </param>
        <param name="namedParameters">
          <span data-ttu-id="533fd-305">要素ゼロから <paramref name="args" /> 配列と一致させるパラメーター名を格納している文字列型の配列。<see langword="String" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-305">An array of type <see langword="String" /> containing parameter names that match up, starting at element zero, with the <paramref name="args" /> array.</span>
          </span>
          <span data-ttu-id="533fd-306">配列の要素はすべて揃っている必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-306">There must be no holes in the array.</span>
          </span>
          <span data-ttu-id="533fd-307">
            <paramref name="args" />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-307">If <paramref name="args" />.</span>
          </span>
          <span data-ttu-id="533fd-308">
            <see langword="Length" /> が <paramref name="namedParameters" /> より大きくなっています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-308">
              <see langword="Length" /> is greater than <paramref name="namedParameters" />.</span>
          </span>
          <span data-ttu-id="533fd-309">
            <see langword="Length" /> より大きい場合、残りのパラメーターが順に設定されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-309">
              <see langword="Length" />, the remaining parameters are filled in order.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="533fd-310">指定したメンバーを呼び出します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-310">Invokes the specified member.</span>
          </span>
          <span data-ttu-id="533fd-311">呼び出すメソッドはアクセス可能でなければならず、指定したバインダーと呼び出し属性の制約の下で、指定された引数リストに対する一致の特定性が最高のものでなければなりません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-311">The method that is to be invoked must be accessible and provide the most specific match with the specified argument list, under the constraints of the specified binder and invocation attributes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="533fd-312">呼び出されたメンバーの戻り値を表す <see langword="Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-312">An <see langword="Object" /> representing the return value of the invoked member.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="533fd-313">次の両方の条件に該当する場合、メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="533fd-313">A method will be invoked if both the following conditions are true:</span></span>  
  
-   <span data-ttu-id="533fd-314">メソッド宣言パラメーターの数は、指定した引数リスト内の引数の数を (メンバーには、既定の引数が定義されている) 場合を除きになります。</span><span class="sxs-lookup"><span data-stu-id="533fd-314">The number of parameters in the method declaration equals the number of arguments in the specified argument list (unless default arguments are defined on the member).</span></span>  
  
-   <span data-ttu-id="533fd-315">各引数の型は、バインダーによってパラメーターの型に変換できます。</span><span class="sxs-lookup"><span data-stu-id="533fd-315">The type of each arguments can be converted by the binder to the type of the parameter.</span></span>  
  
 <span data-ttu-id="533fd-316">バインダーでは、一致するすべてのメソッドを紹介します。</span><span class="sxs-lookup"><span data-stu-id="533fd-316">The binder will find all the matching methods.</span></span> <span data-ttu-id="533fd-317">要求されたバインドの種類に基づいてこれらのメソッドが検出された (`BindingFlags.MethodInvoke`、`BindingFlags.GetProperties`など)。</span><span class="sxs-lookup"><span data-stu-id="533fd-317">These methods are found based upon the type of binding requested (`BindingFlags.MethodInvoke`, `BindingFlags.GetProperties`, and so on).</span></span> <span data-ttu-id="533fd-318">メソッドのセットは、名前、引数の数とバインダーで定義されている検索修飾子のセットによってフィルター処理されます。</span><span class="sxs-lookup"><span data-stu-id="533fd-318">The set of methods is filtered by the name, number of arguments, and a set of search modifiers defined in the binder.</span></span>  
  
 <span data-ttu-id="533fd-319">メソッドを選択すると、後に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="533fd-319">After the method is selected, it will be invoked.</span></span> <span data-ttu-id="533fd-320">ユーザー補助機能は、その時点でチェックされます。</span><span class="sxs-lookup"><span data-stu-id="533fd-320">Accessibility is checked at that point.</span></span> <span data-ttu-id="533fd-321">検索では、メソッドに関連付けられているユーザー補助属性に基づいて、メソッドのセットを検索するかを制御できます。</span><span class="sxs-lookup"><span data-stu-id="533fd-321">The search may control which set of methods are searched based upon the accessibility attribute associated with the method.</span></span> <span data-ttu-id="533fd-322"><xref:System.Reflection.Binder.BindToMethod%2A?displayProperty=nameWithType>メソッドが呼び出されるメソッドを選択する責任を負います。</span><span class="sxs-lookup"><span data-stu-id="533fd-322">The <xref:System.Reflection.Binder.BindToMethod%2A?displayProperty=nameWithType> method is responsible for selecting the method to be invoked.</span></span> <span data-ttu-id="533fd-323">既定のバインダーでは、最も具体的な一致を選択します。</span><span class="sxs-lookup"><span data-stu-id="533fd-323">The default binder selects the most specific match.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="533fd-324">アクセスの制限には、完全に信頼されたコードは無視されます。</span><span class="sxs-lookup"><span data-stu-id="533fd-324">Access restrictions are ignored for fully trusted code.</span></span> <span data-ttu-id="533fd-325">つまり、プライベート コンス トラクター、メソッド、フィールド、およびプロパティにアクセスできる、リフレクションを使用してコードが完全に信頼されているときに呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="533fd-325">That is, private constructors, methods, fields, and properties can be accessed and invoked using reflection whenever the code is fully trusted.</span></span>  
  
 <span data-ttu-id="533fd-326">現時点では、`InvokeMember`オブジェクトの種類ごとに Microsoft .NET Framework のリフレクションのセマンティクスを実行します。</span><span class="sxs-lookup"><span data-stu-id="533fd-326">Currently, `InvokeMember` performs the Microsoft .NET Framework reflection semantics for every type of object.</span></span>  
  
 <span data-ttu-id="533fd-327">名前で指定されたメンバーが配列である場合、`BindingFlags.GetField`にフラグが設定`invokeAttr`、`args`配列をその値が返される要素を指定します。</span><span class="sxs-lookup"><span data-stu-id="533fd-327">If the member specified by name is an array and the `BindingFlags.GetField` flag is set on `invokeAttr`, the `args` array specifies the elements whose values are to be returned.</span></span> <span data-ttu-id="533fd-328">次の呼び出しなど`Type`オブジェクト`t`MyArray、呼び出し元のオブジェクトのメンバーである文字列の配列の最初の要素の値を返します。</span><span class="sxs-lookup"><span data-stu-id="533fd-328">For example, the following call through `Type` object `t` returns the value of the first element of the string array MyArray, which is a member of the calling object:</span></span>  
  
 `String ret = (String) t.InvokeMember ("MyArray", BindingFlags.GetField, null, this, new Variant[]{0});`  
  
 <span data-ttu-id="533fd-329">使用することができます`InvokeMember`メンバー配列の 1 つまたは複数の要素を設定します。</span><span class="sxs-lookup"><span data-stu-id="533fd-329">You can use `InvokeMember` to set one or more elements of a member array.</span></span> <span data-ttu-id="533fd-330">すべての要素は、同じ値に設定されます。</span><span class="sxs-lookup"><span data-stu-id="533fd-330">All elements are set to the same value.</span></span> <span data-ttu-id="533fd-331">`args`配列は次のように書式設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="533fd-331">The `args` array must be formatted as follows:</span></span>  
  
```  
{index1,  
    index2,, value}  
```  
  
 <span data-ttu-id="533fd-332">たとえば、前の例から MyArray の最初のメンバーを設定する構文とおりです。</span><span class="sxs-lookup"><span data-stu-id="533fd-332">For example, to set the first member of MyArray from the previous example, the syntax is as follows:</span></span>  
  
```csharp  
t.InvokeMember ("MyArray", BindingFlags.SetField, null, this, new  
    Variant[]{0,"Updated"});  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="IsArrayImpl">
      <MemberSignature Language="C#" Value="protected override bool IsArrayImpl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsArrayImpl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.IsArrayImpl" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsArrayImpl () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsArrayImpl();" />
      <MemberSignature Language="F#" Value="override this.IsArrayImpl : unit -&gt; bool" Usage="typeDelegator.IsArrayImpl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="533fd-333">
            <see cref="T:System.Type" /> が配列かどうかを示す値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-333">Returns a value that indicates whether the <see cref="T:System.Type" /> is an array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="533fd-334">
            <see langword="true" /> が配列である場合は <see cref="T:System.Type" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-334">
              <see langword="true" /> if the <see cref="T:System.Type" /> is an array; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAssignableFrom">
      <MemberSignature Language="C#" Value="public override bool IsAssignableFrom (System.Reflection.TypeInfo typeInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsAssignableFrom(class System.Reflection.TypeInfo typeInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.IsAssignableFrom(System.Reflection.TypeInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsAssignableFrom(System::Reflection::TypeInfo ^ typeInfo);" />
      <MemberSignature Language="F#" Value="override this.IsAssignableFrom : System.Reflection.TypeInfo -&gt; bool" Usage="typeDelegator.IsAssignableFrom typeInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeInfo" Type="System.Reflection.TypeInfo" />
      </Parameters>
      <Docs>
        <param name="typeInfo">
          <span data-ttu-id="533fd-335">確認する型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-335">The type to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="533fd-336">指定した型がこの型に割り当て可能かどうかを示す値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-336">Returns a value that indicates whether the specified type can be assigned to this type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="533fd-337">指定した型をこの型に割り当てることができる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-337">
              <see langword="true" /> if the specified type can be assigned to this type; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsByRefImpl">
      <MemberSignature Language="C#" Value="protected override bool IsByRefImpl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsByRefImpl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.IsByRefImpl" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsByRefImpl () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsByRefImpl();" />
      <MemberSignature Language="F#" Value="override this.IsByRefImpl : unit -&gt; bool" Usage="typeDelegator.IsByRefImpl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="533fd-338">
            <see cref="T:System.Type" /> が参照渡しかどうかを示す値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-338">Returns a value that indicates whether the <see cref="T:System.Type" /> is passed by reference.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="533fd-339">
            <see langword="true" /> が参照渡しである場合は <see cref="T:System.Type" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-339">
              <see langword="true" /> if the <see cref="T:System.Type" /> is passed by reference; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsByRefLike">
      <MemberSignature Language="C#" Value="public override bool IsByRefLike { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsByRefLike" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.TypeDelegator.IsByRefLike" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsByRefLike As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsByRefLike { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsByRefLike : bool" Usage="System.Reflection.TypeDelegator.IsByRefLike" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCOMObjectImpl">
      <MemberSignature Language="C#" Value="protected override bool IsCOMObjectImpl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsCOMObjectImpl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.IsCOMObjectImpl" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsCOMObjectImpl () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsCOMObjectImpl();" />
      <MemberSignature Language="F#" Value="override this.IsCOMObjectImpl : unit -&gt; bool" Usage="typeDelegator.IsCOMObjectImpl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="533fd-340">
            <see cref="T:System.Type" /> が COM オブジェクトかどうかを示す値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-340">Returns a value that indicates whether the <see cref="T:System.Type" /> is a COM object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="533fd-341">
            <see langword="true" /> が COM オブジェクトである場合は <see cref="T:System.Type" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-341">
              <see langword="true" /> if the <see cref="T:System.Type" /> is a COM object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsConstructedGenericType">
      <MemberSignature Language="C#" Value="public override bool IsConstructedGenericType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsConstructedGenericType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.TypeDelegator.IsConstructedGenericType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsConstructedGenericType As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsConstructedGenericType { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsConstructedGenericType : bool" Usage="System.Reflection.TypeDelegator.IsConstructedGenericType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="533fd-342">このオブジェクトが構築ジェネリック型かどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-342">Gets a value that indicates whether this object represents a constructed generic type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="533fd-343">このオブジェクトが構築ジェネリック型を表している場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-343">
              <see langword="true" /> if this object represents a constructed generic type; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public override bool IsDefined (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsDefined(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.IsDefined(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsDefined (attributeType As Type, inherit As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsDefined(Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="override this.IsDefined : Type * bool -&gt; bool" Usage="typeDelegator.IsDefined (attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType">
          <span data-ttu-id="533fd-344">この型の継承チェーンを検索して属性を見つけるかどうかを指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-344">Specifies whether to search this type's inheritance chain to find the attributes.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="533fd-345">型により識別されるカスタム属性の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-345">An array of custom attributes identified by type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="533fd-346">
            <paramref name="attributeType" /> で識別されるカスタム属性が定義されているかどうかを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-346">Indicates whether a custom attribute identified by <paramref name="attributeType" /> is defined.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="533fd-347">
            <paramref name="attributeType" /> で識別されるカスタム属性が定義されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-347">
              <see langword="true" /> if a custom attribute identified by <paramref name="attributeType" /> is defined; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="533fd-348">
            <paramref name="attributeType" /> は <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-348">
              <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.ReflectionTypeLoadException">
          <span data-ttu-id="533fd-349">カスタム属性の型を読み込むことはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-349">The custom attribute type cannot be loaded.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsGenericMethodParameter">
      <MemberSignature Language="C#" Value="public override bool IsGenericMethodParameter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsGenericMethodParameter" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.TypeDelegator.IsGenericMethodParameter" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsGenericMethodParameter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsGenericMethodParameter { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsGenericMethodParameter : bool" Usage="System.Reflection.TypeDelegator.IsGenericMethodParameter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsGenericTypeParameter">
      <MemberSignature Language="C#" Value="public override bool IsGenericTypeParameter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsGenericTypeParameter" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.TypeDelegator.IsGenericTypeParameter" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsGenericTypeParameter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsGenericTypeParameter { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsGenericTypeParameter : bool" Usage="System.Reflection.TypeDelegator.IsGenericTypeParameter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPointerImpl">
      <MemberSignature Language="C#" Value="protected override bool IsPointerImpl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsPointerImpl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.IsPointerImpl" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsPointerImpl () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsPointerImpl();" />
      <MemberSignature Language="F#" Value="override this.IsPointerImpl : unit -&gt; bool" Usage="typeDelegator.IsPointerImpl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="533fd-350">
            <see cref="T:System.Type" /> がポインターかどうかを示す値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-350">Returns a value that indicates whether the <see cref="T:System.Type" /> is a pointer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="533fd-351">
            <see langword="true" /> がポインターである場合は <see cref="T:System.Type" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-351">
              <see langword="true" /> if the <see cref="T:System.Type" /> is a pointer; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPrimitiveImpl">
      <MemberSignature Language="C#" Value="protected override bool IsPrimitiveImpl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsPrimitiveImpl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.IsPrimitiveImpl" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsPrimitiveImpl () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsPrimitiveImpl();" />
      <MemberSignature Language="F#" Value="override this.IsPrimitiveImpl : unit -&gt; bool" Usage="typeDelegator.IsPrimitiveImpl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="533fd-352">
            <see cref="T:System.Type" /> がプリミティブ型の 1 つかどうかを示す値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-352">Returns a value that indicates whether the <see cref="T:System.Type" /> is one of the primitive types.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="533fd-353">
            <see langword="true" /> がプリミティブ型の 1 つである場合は <see cref="T:System.Type" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-353">
              <see langword="true" /> if the <see cref="T:System.Type" /> is one of the primitive types; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSZArray">
      <MemberSignature Language="C#" Value="public override bool IsSZArray { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSZArray" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.TypeDelegator.IsSZArray" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsSZArray As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSZArray { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSZArray : bool" Usage="System.Reflection.TypeDelegator.IsSZArray" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTypeDefinition">
      <MemberSignature Language="C#" Value="public override bool IsTypeDefinition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTypeDefinition" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.TypeDelegator.IsTypeDefinition" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsTypeDefinition As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsTypeDefinition { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsTypeDefinition : bool" Usage="System.Reflection.TypeDelegator.IsTypeDefinition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValueTypeImpl">
      <MemberSignature Language="C#" Value="protected override bool IsValueTypeImpl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsValueTypeImpl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.TypeDelegator.IsValueTypeImpl" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsValueTypeImpl () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsValueTypeImpl();" />
      <MemberSignature Language="F#" Value="override this.IsValueTypeImpl : unit -&gt; bool" Usage="typeDelegator.IsValueTypeImpl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="533fd-354">型が値型であり、クラスやインターフェイスでないかどうかを示す値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-354">Returns a value that indicates whether the type is a value type; that is, not a class or an interface.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="533fd-355">型が値型である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-355">
              <see langword="true" /> if the type is a value type; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVariableBoundArray">
      <MemberSignature Language="C#" Value="public override bool IsVariableBoundArray { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsVariableBoundArray" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.TypeDelegator.IsVariableBoundArray" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsVariableBoundArray As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsVariableBoundArray { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsVariableBoundArray : bool" Usage="System.Reflection.TypeDelegator.IsVariableBoundArray" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MetadataToken">
      <MemberSignature Language="C#" Value="public override int MetadataToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MetadataToken" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.TypeDelegator.MetadataToken" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MetadataToken As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MetadataToken { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MetadataToken : int" Usage="System.Reflection.TypeDelegator.MetadataToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="533fd-356">メタデータ内のこのエンティティを識別する値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-356">Gets a value that identifies this entity in metadata.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="533fd-357">モジュールと組み合わせることにより、メタデータ内のこのエンティティを一意に識別する値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-357">A value which, in combination with the module, uniquely identifies this entity in metadata.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="533fd-358">アンマネージ リフレクション API には、このプロパティを使用して取得したトークンを渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="533fd-358">The tokens obtained using this property can be passed to the unmanaged reflection API.</span></span> <span data-ttu-id="533fd-359">詳細については、次を参照してください。[アンマネージ リフレクション API](https://msdn.microsoft.com/library/0c5bb9de-0cf6-438d-ba47-134e6c775fb8)します。</span><span class="sxs-lookup"><span data-stu-id="533fd-359">For more information, see [Unmanaged Reflection API](https://msdn.microsoft.com/library/0c5bb9de-0cf6-438d-ba47-134e6c775fb8).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Module">
      <MemberSignature Language="C#" Value="public override System.Reflection.Module Module { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Module Module" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.TypeDelegator.Module" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Module As Module" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::Module ^ Module { System::Reflection::Module ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Module : System.Reflection.Module" Usage="System.Reflection.TypeDelegator.Module" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="533fd-360">実装されている型を含むモジュールを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-360">Gets the module that contains the implemented type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="533fd-361">実装されている型のモジュールを表す <see cref="T:System.Reflection.Module" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-361">A <see cref="T:System.Reflection.Module" /> object representing the module of the implemented type.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="533fd-362">モジュールは、型の宣言と実装を格納できる読み込み可能な単位です。</span><span class="sxs-lookup"><span data-stu-id="533fd-362">A module is a loadable unit that can contain type declarations and implementations.</span></span> <span data-ttu-id="533fd-363">モジュールには、モジュールが読み込まれるときに、すべての実装ビットを検索する共通言語ランタイムを有効にするには、十分な情報が含まれます。</span><span class="sxs-lookup"><span data-stu-id="533fd-363">Modules contain enough information to enable the common language runtime to locate all implementation bits when the module is loaded.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.TypeDelegator.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Reflection.TypeDelegator.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="533fd-364">実装されている型の名前をパスを削除した状態で取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-364">Gets the name of the implemented type, with the path removed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="533fd-365">型の非限定名を格納している文字列。<see langword="String" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-365">A <see langword="String" /> containing the type's non-qualified name.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="533fd-366">現在の `TypeDelegator` の名前を格納している文字列。</span><span class="sxs-lookup"><span data-stu-id="533fd-366">A string containing the name of the current `TypeDelegator`.</span></span> <span data-ttu-id="533fd-367">簡易名、のみであり、完全修飾名ではなくが返されます。</span><span class="sxs-lookup"><span data-stu-id="533fd-367">Only the simple name, not the fully qualified name, is returned.</span></span> <span data-ttu-id="533fd-368">名前とパスを取得する<xref:System.Reflection.TypeDelegator.FullName%2A>します。</span><span class="sxs-lookup"><span data-stu-id="533fd-368">To get the name and the path, use <xref:System.Reflection.TypeDelegator.FullName%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public override string Namespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.TypeDelegator.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Namespace { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string" Usage="System.Reflection.TypeDelegator.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="533fd-369">実装されている型の名前空間を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-369">Gets the namespace of the implemented type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="533fd-370">型の名前空間を格納している文字列。<see langword="String" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-370">A <see langword="String" /> containing the type's namespace.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="533fd-371">このプロパティは、現在の名前空間を含む文字列を取得します。`TypeDelegator`します。</span><span class="sxs-lookup"><span data-stu-id="533fd-371">This property gets a string containing the namespace of the current `TypeDelegator`.</span></span> <span data-ttu-id="533fd-372">たとえば場合、`TypeDelegator`は<xref:System.Reflection.TypeFilter>、返される名前空間は<xref:System.Reflection>します。</span><span class="sxs-lookup"><span data-stu-id="533fd-372">For example, if the `TypeDelegator` is <xref:System.Reflection.TypeFilter>, the returned namespace is <xref:System.Reflection>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeHandle">
      <MemberSignature Language="C#" Value="public override RuntimeTypeHandle TypeHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.RuntimeTypeHandle TypeHandle" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.TypeDelegator.TypeHandle" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property TypeHandle As RuntimeTypeHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property RuntimeTypeHandle TypeHandle { RuntimeTypeHandle get(); };" />
      <MemberSignature Language="F#" Value="member this.TypeHandle : RuntimeTypeHandle" Usage="System.Reflection.TypeDelegator.TypeHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.RuntimeTypeHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="533fd-373">実装されている型の内部メタデータ表現を識別するハンドルを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-373">Gets a handle to the internal metadata representation of an implemented type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="533fd-374">
            <see langword="RuntimeTypeHandle" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-374">A <see langword="RuntimeTypeHandle" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="533fd-375">型ハンドルは、各種類に関連付けられた一意の整数値です。</span><span class="sxs-lookup"><span data-stu-id="533fd-375">A type handle is a unique integer value associated with each type.</span></span> <span data-ttu-id="533fd-376">ハンドルは、ランタイム時に一意です。</span><span class="sxs-lookup"><span data-stu-id="533fd-376">The handle is unique during the runtime.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.RuntimeTypeHandle" />
      </Docs>
    </Member>
    <Member MemberName="typeImpl">
      <MemberSignature Language="C#" Value="protected Type typeImpl;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.Type typeImpl" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.TypeDelegator.typeImpl" />
      <MemberSignature Language="VB.NET" Value="Protected typeImpl As Type " />
      <MemberSignature Language="C++ CLI" Value="protected: Type ^ typeImpl;" />
      <MemberSignature Language="F#" Value="val mutable typeImpl : Type" Usage="System.Reflection.TypeDelegator.typeImpl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="533fd-377">型情報を示す値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-377">A value indicating type information.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnderlyingSystemType">
      <MemberSignature Language="C#" Value="public override Type UnderlyingSystemType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type UnderlyingSystemType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.TypeDelegator.UnderlyingSystemType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property UnderlyingSystemType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ UnderlyingSystemType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UnderlyingSystemType : Type" Usage="System.Reflection.TypeDelegator.UnderlyingSystemType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="533fd-378">実装されている型を表す基になる <see cref="T:System.Type" /> を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-378">Gets the underlying <see cref="T:System.Type" /> that represents the implemented type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="533fd-379">基になる型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="533fd-379">The underlying type.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>