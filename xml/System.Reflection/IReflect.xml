<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IReflect.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5e4e9ce35ae51db5215ec0931c6460ac8367f47a6.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e4e9ce35ae51db5215ec0931c6460ac8367f47a6</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Reflection.IReflect">
          <source>Interoperates with the <bpt id="p1">[</bpt>IDispatch interface<ept id="p1">](http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5)</ept>.</source>
          <target state="translated"><bpt id="p1">[</bpt>IDispatch インターフェイス<ept id="p1">](http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5)</ept>と相互運用されます。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.IReflect">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.IReflect&gt;</ph> interface is used to interoperate with the <bpt id="p1">[</bpt>IDispatch interface<ept id="p1">](http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5)</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.IReflect&gt;</ph>と相互運用するインターフェイスを使用、 <bpt id="p1">[</bpt>IDispatch インターフェイス<ept id="p1">](http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5)</ept>です。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.IReflect">
          <source><ph id="ph1">&lt;xref:System.Reflection.IReflect&gt;</ph> defines a subset of the <ph id="ph2">&lt;xref:System.Type&gt;</ph> reflection methods.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.IReflect&gt;</ph> サブセットを定義、<ph id="ph2">&lt;xref:System.Type&gt;</ph>リフレクション メソッドです。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.IReflect">
          <source>Implementing this interface enables a type to customize its behavior when the object is being accessed from COM as an <ph id="ph1">`IDispatch`</ph> object.</source>
          <target state="translated">オブジェクトとして COM からアクセスしているときの動作をカスタマイズする型をこのインターフェイスを実装することにより、<ph id="ph1">`IDispatch`</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.IReflect">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.InteropServices.CustomMarshalers.ExpandoToDispatchExMarshaler&gt;</ph> class can be used to marshal an object that implements <ph id="ph2">&lt;xref:System.Reflection.IReflect&gt;</ph> or <ph id="ph3">&lt;xref:System.Runtime.InteropServices.Expando.IExpando&gt;</ph> as a COM <ph id="ph4">`IDispatch`</ph> object, and vice versa.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.CustomMarshalers.ExpandoToDispatchExMarshaler&gt;</ph>クラスを実装するオブジェクトをマーシャ リングするために使用できます<ph id="ph2">&lt;xref:System.Reflection.IReflect&gt;</ph>または<ph id="ph3">&lt;xref:System.Runtime.InteropServices.Expando.IExpando&gt;</ph>COM として<ph id="ph4">`IDispatch`</ph>オブジェクト、およびその逆です。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetField(System.String,System.Reflection.BindingFlags)">
          <source>The name of the field to find.</source>
          <target state="translated">検索するフィールドの名前。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetField(System.String,System.Reflection.BindingFlags)">
          <source>The binding attributes used to control the search.</source>
          <target state="translated">検索を制御するために使用されるバインディング属性。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetField(System.String,System.Reflection.BindingFlags)">
          <source>Returns the <ph id="ph1">&lt;see cref="T:System.Reflection.FieldInfo" /&gt;</ph> object that corresponds to the specified field and binding flag.</source>
          <target state="translated">指定したフィールドとバインディング フラグに対応する <ph id="ph1">&lt;see cref="T:System.Reflection.FieldInfo" /&gt;</ph> オブジェクトを返します。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetField(System.String,System.Reflection.BindingFlags)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Reflection.FieldInfo" /&gt;</ph> object containing the field information for the named object that meets the search constraints specified in <ph id="ph2">&lt;paramref name="bindingAttr" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="bindingAttr" /&gt;</ph> で指定した検索制約と一致する名前付きオブジェクトのフィールド情報を格納する <ph id="ph1">&lt;see cref="T:System.Reflection.FieldInfo" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetField(System.String,System.Reflection.BindingFlags)">
          <source>The object implements multiple fields with the same name.</source>
          <target state="translated">オブジェクトに複数のフィールドが同じ名前で実装されています。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetFields(System.Reflection.BindingFlags)">
          <source>The binding attributes used to control the search.</source>
          <target state="translated">検索を制御するために使用されるバインディング属性。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetFields(System.Reflection.BindingFlags)">
          <source>Returns an array of <ph id="ph1">&lt;see cref="T:System.Reflection.FieldInfo" /&gt;</ph> objects that correspond to all fields of the current class.</source>
          <target state="translated">現在のクラスのすべてのフィールドに対応する <ph id="ph1">&lt;see cref="T:System.Reflection.FieldInfo" /&gt;</ph> オブジェクトの配列を返します。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetFields(System.Reflection.BindingFlags)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Reflection.FieldInfo" /&gt;</ph> objects containing all the field information for this reflection object that meets the search constraints specified in <ph id="ph2">&lt;paramref name="bindingAttr" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="bindingAttr" /&gt;</ph> で指定した検索制約と一致するこのリフレクション オブジェクトのすべてのフィールド情報を格納する <ph id="ph1">&lt;see cref="T:System.Reflection.FieldInfo" /&gt;</ph> オブジェクトの配列。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.GetFields(System.Reflection.BindingFlags)">
          <source>The match is based upon a name.</source>
          <target state="translated">一致は、名前に基づいています。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.GetFields(System.Reflection.BindingFlags)">
          <source>Each field must have a unique name.</source>
          <target state="translated">各フィールドは、一意の名前でなければなりません。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.GetFields(System.Reflection.BindingFlags)">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.BindingFlags.NonPublic?displayProperty=nameWithType&gt;</ph> flag specifies that non-public methods are included in the search.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.BindingFlags.NonPublic?displayProperty=nameWithType&gt;</ph>フラグは、検索に非パブリック メソッドが含まれることを指定します。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.GetFields(System.Reflection.BindingFlags)">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.BindingFlags.Public?displayProperty=nameWithType&gt;</ph> flag specifies that public methods are included in the search.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.BindingFlags.Public?displayProperty=nameWithType&gt;</ph>フラグは、検索にパブリック メソッドが含まれることを指定します。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetMember(System.String,System.Reflection.BindingFlags)">
          <source>The name of the member to find.</source>
          <target state="translated">検索対象のメンバーの名前。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetMember(System.String,System.Reflection.BindingFlags)">
          <source>The binding attributes used to control the search.</source>
          <target state="translated">検索を制御するために使用されるバインディング属性。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetMember(System.String,System.Reflection.BindingFlags)">
          <source>Retrieves an array of <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> objects corresponding to all public members or to all members that match a specified name.</source>
          <target state="translated">すべてのパブリック メンバーまたは指定した名前と一致するすべてのメンバーに対応する <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> オブジェクトの配列を取得します。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetMember(System.String,System.Reflection.BindingFlags)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> objects matching the <ph id="ph2">&lt;paramref name="name" /&gt;</ph> parameter.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="name" /&gt;</ph> パラメーターと一致する <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> オブジェクトの配列。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.GetMember(System.String,System.Reflection.BindingFlags)">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.IReflect.GetMember%2A&gt;</ph> method retrieves an array of <ph id="ph2">&lt;xref:System.Reflection.MemberInfo&gt;</ph> objects by using the name and binding attribute that correspond to all public members or to all members that match a specified name.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.IReflect.GetMember%2A&gt;</ph>メソッドの配列を取得する<ph id="ph2">&lt;xref:System.Reflection.MemberInfo&gt;</ph>バインディング属性と名前を使用して、すべてのパブリック メンバーまたは指定した名前に一致するすべてのメンバーに対応するオブジェクト。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.GetMember(System.String,System.Reflection.BindingFlags)">
          <source>The case of the specified name is observed or ignored, as specified by <ph id="ph1">&lt;xref:System.Reflection.BindingFlags.IgnoreCase?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">または、指定した名前の大文字と小文字が計測されるか、無視して指定されたとおり<ph id="ph1">&lt;xref:System.Reflection.BindingFlags.IgnoreCase?displayProperty=nameWithType&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetMembers(System.Reflection.BindingFlags)">
          <source>The binding attributes used to control the search.</source>
          <target state="translated">検索を制御するために使用されるバインディング属性。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetMembers(System.Reflection.BindingFlags)">
          <source>Retrieves an array of <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> objects that correspond either to all public members or to all members of the current class.</source>
          <target state="translated">すべてのパブリック メンバーまたは現在のクラスのすべてのメンバーに対応する <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> オブジェクトの配列を取得します。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetMembers(System.Reflection.BindingFlags)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> objects containing all the member information for this reflection object.</source>
          <target state="translated">このリフレクション オブジェクトのすべてのメンバー情報が格納されている <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> オブジェクトの配列。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.GetMembers(System.Reflection.BindingFlags)">
          <source>This method retrieves an array of <ph id="ph1">&lt;xref:System.Reflection.MemberInfo&gt;</ph> objects by using the binding attribute that corresponds either to all public members or to all members of the current class.</source>
          <target state="translated">このメソッドの配列を取得する<ph id="ph1">&lt;xref:System.Reflection.MemberInfo&gt;</ph>すべてのパブリック メンバー、または現在のクラスのすべてのメンバーに対応するバインド属性を使用してオブジェクト。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.GetMembers(System.Reflection.BindingFlags)">
          <source>It returns an array of all of the members defined for this object.</source>
          <target state="translated">このオブジェクトに対して定義されているメンバーのすべての配列を返します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="T:System.Reflection.IReflect">
          <source>Retrieves a <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> object that corresponds to a specified method.</source>
          <target state="translated">指定したメソッドに対応する <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> オブジェクトを取得します。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags)">
          <source>The name of the member to find.</source>
          <target state="translated">検索対象のメンバーの名前。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags)">
          <source>The binding attributes used to control the search.</source>
          <target state="translated">検索を制御するために使用されるバインディング属性。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags)">
          <source>Retrieves a <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> object that corresponds to a specified method under specified search constraints.</source>
          <target state="translated">指定した検索制約の下で、指定したメソッドに対応する <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> オブジェクトを取得します。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> object containing the method information, with the match being based on the method name and search constraints specified in <ph id="ph2">&lt;paramref name="bindingAttr" /&gt;</ph>.</source>
          <target state="translated">メソッド名、および <ph id="ph2">&lt;paramref name="bindingAttr" /&gt;</ph> で指定した検索制約と一致するメソッド情報を格納する <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags)">
          <source>The object implements multiple methods with the same name.</source>
          <target state="translated">オブジェクトに複数のメソッドが同じ名前で実装されています。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>The name of the member to find.</source>
          <target state="translated">検索対象のメンバーの名前。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>The binding attributes used to control the search.</source>
          <target state="translated">検索を制御するために使用されるバインディング属性。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>An object that implements <ph id="ph1">&lt;see cref="T:System.Reflection.Binder" /&gt;</ph>, containing properties related to this method.</source>
          <target state="translated">このメソッドに関連するプロパティが含まれ、<ph id="ph1">&lt;see cref="T:System.Reflection.Binder" /&gt;</ph> を実装するオブジェクト。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>An array used to choose among overloaded methods.</source>
          <target state="translated">オーバーロードされたメソッドからの選択に使用する配列。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>An array of parameter modifiers used to make binding work with parameter signatures in which the types have been modified.</source>
          <target state="translated">型が変更されているパラメーター シグネチャでバインドを機能させるために使われるパラメーター修飾子の配列。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>Retrieves a <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> object corresponding to a specified method, using a <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> array to choose from among overloaded methods.</source>
          <target state="translated">オーバーロードされたメソッドの中から選択する <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> 配列を使用して、指定したメソッドに対応する <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> オブジェクトを取得します。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>The requested method that matches all the specified parameters.</source>
          <target state="translated">指定したすべてのパラメーターが一致する要求されたメソッド。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>The return value is a match based on the method name, <ph id="ph1">&lt;xref:System.Reflection.BindingFlags&gt;</ph> enum member, the kind of type conversion specified by the <ph id="ph2">`binder`</ph> parameter, the overload, and the <ph id="ph3">&lt;xref:System.Reflection.ParameterInfo&gt;</ph> that describes the signature of the method.</source>
          <target state="translated">戻り値は、メソッド名を基に一致する<ph id="ph1">&lt;xref:System.Reflection.BindingFlags&gt;</ph>列挙型のメンバーで指定された型変換の種類、<ph id="ph2">`binder`</ph>パラメーターでは、オーバー ロードは、および<ph id="ph3">&lt;xref:System.Reflection.ParameterInfo&gt;</ph>メソッドのシグネチャを記述します。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>The object implements multiple methods with the same name.</source>
          <target state="translated">オブジェクトに複数のメソッドが同じ名前で実装されています。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetMethods(System.Reflection.BindingFlags)">
          <source>The binding attributes used to control the search.</source>
          <target state="translated">検索を制御するために使用されるバインディング属性。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetMethods(System.Reflection.BindingFlags)">
          <source>Retrieves an array of <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> objects with all public methods or all methods of the current class.</source>
          <target state="translated">すべてのパブリック メソッドまたは現在のクラスのすべてのメソッドの <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> オブジェクトの配列を取得します。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetMethods(System.Reflection.BindingFlags)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> objects containing all the methods defined for this reflection object that meet the search constraints specified in <ph id="ph2">&lt;paramref name="bindingAttr" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="bindingAttr" /&gt;</ph> で指定した検索制約と一致するこのリフレクション オブジェクトに対して定義されているすべてのメソッドを格納する <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> オブジェクトの配列。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.GetMethods(System.Reflection.BindingFlags)">
          <source>The non-public attribute of <ph id="ph1">`bindingAttr`</ph> is indicated only if public methods are returned.</source>
          <target state="translated">パブリックでない属性<ph id="ph1">`bindingAttr`</ph>パブリック メソッドが返されるかどうかにのみ示されます。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetProperties(System.Reflection.BindingFlags)">
          <source>The binding attribute used to control the search.</source>
          <target state="translated">検索の制御に使用されるバインディング属性。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetProperties(System.Reflection.BindingFlags)">
          <source>Retrieves an array of <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph> objects corresponding to all public properties or to all properties of the current class.</source>
          <target state="translated">すべてのパブリック プロパティまたは現在のクラスのすべてのプロパティに対応する <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph> オブジェクトの配列を取得します。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetProperties(System.Reflection.BindingFlags)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph> objects for all the properties defined on the reflection object.</source>
          <target state="translated">リフレクション オブジェクトで定義されているすべてのプロパティの <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph> オブジェクトの配列。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="T:System.Reflection.IReflect">
          <source>Retrieves a <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph> object corresponding to a specified property.</source>
          <target state="translated">指定したプロパティに対応する <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph> オブジェクトを取得します。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags)">
          <source>The name of the property to find.</source>
          <target state="translated">検索するプロパティの名前。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags)">
          <source>The binding attributes used to control the search.</source>
          <target state="translated">検索を制御するために使用されるバインディング属性。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags)">
          <source>Retrieves a <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph> object corresponding to a specified property under specified search constraints.</source>
          <target state="translated">指定した検索制約の下で、指定したプロパティに対応する <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph> オブジェクトを取得します。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph> object for the located property that meets the search constraints specified in <ph id="ph2">&lt;paramref name="bindingAttr" /&gt;</ph>, or <ph id="ph3">&lt;see langword="null" /&gt;</ph> if the property was not located.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="bindingAttr" /&gt;</ph> で指定された検索制約に一致する見つかったプロパティの <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph> オブジェクト。プロパティが見つからなかった場合は <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags)">
          <source>The object implements multiple fields with the same name.</source>
          <target state="translated">オブジェクトに複数のフィールドが同じ名前で実装されています。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>The name of the member to find.</source>
          <target state="translated">検索対象のメンバーの名前。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>The binding attribute used to control the search.</source>
          <target state="translated">検索の制御に使用されるバインディング属性。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>An object that implements <ph id="ph1">&lt;see cref="T:System.Reflection.Binder" /&gt;</ph>, containing properties related to this method.</source>
          <target state="translated">このメソッドに関連するプロパティが含まれ、<ph id="ph1">&lt;see cref="T:System.Reflection.Binder" /&gt;</ph> を実装するオブジェクト。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>The type of the property.</source>
          <target state="translated">プロパティの型。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>An array used to choose among overloaded methods with the same name.</source>
          <target state="translated">同じ名前のオーバーロードされたメソッドからの選択に使用する配列。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>An array used to choose the parameter modifiers.</source>
          <target state="translated">パラメーター修飾子の選択に使用する配列。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>Retrieves a <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph> object that corresponds to a specified property with specified search constraints.</source>
          <target state="translated">指定した検索制約で、指定したプロパティに対応する <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph> オブジェクトを取得します。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph> object for the located property, if a property with the specified name was located in this reflection object, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if the property was not located.</source>
          <target state="translated">指定した名前のプロパティがこのリフレクション オブジェクトで見つかった場合は、見つかったプロパティの <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph> オブジェクト。プロパティが見つからなかった場合は <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>This method retrieves a <ph id="ph1">&lt;xref:System.Reflection.PropertyInfo&gt;</ph> object corresponding to a specified property under specified search constraints.</source>
          <target state="translated">このメソッドは、取得、<ph id="ph1">&lt;xref:System.Reflection.PropertyInfo&gt;</ph>下で、指定したプロパティに対応するオブジェクトが検索制約を指定します。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>A type array is used to choose from among overloaded methods.</source>
          <target state="translated">型の配列を使用して、オーバー ロードされたメソッドの中から選択します。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>The name of the member to find.</source>
          <target state="translated">検索対象のメンバーの名前。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> invocation attributes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> 呼び出し属性の 1 つ。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>The <bpt id="p1">&lt;c&gt;</bpt>invokeAttr<ept id="p1">&lt;/c&gt;</ept> parameter may be a constructor, method, property, or field.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>invokeAttr<ept id="p1">&lt;/c&gt;</ept> パラメーターには、コンストラクター、メソッド、プロパティ、フィールドなどを指定できます。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>A suitable invocation attribute must be specified.</source>
          <target state="translated">適切な呼び出し属性を指定する必要があります。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>Invoke the default member of a class by passing the empty string ("") as the name of the member.</source>
          <target state="translated">メンバーの名前として空の文字列 ("") を渡すことによって、クラスの既定のメンバーを呼び出します。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> bit flags.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> ビット フラグの 1 つ。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>Implements <ph id="ph1">&lt;see cref="T:System.Reflection.Binder" /&gt;</ph>, containing properties related to this method.</source>
          <target state="translated">このメソッドに関連するプロパティを格納する <ph id="ph1">&lt;see cref="T:System.Reflection.Binder" /&gt;</ph> を実装します。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>The object on which to invoke the specified member.</source>
          <target state="translated">指定したメンバーを呼び出す対象となるオブジェクト。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>This parameter is ignored for static members.</source>
          <target state="translated">静的メンバーの場合、このパラメーターは無視されます。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>An array of objects that contains the number, order, and type of the parameters of the member to be invoked.</source>
          <target state="translated">呼び出すメンバーのパラメーターの数、順序、および型を格納するオブジェクトの配列。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>This is an empty array if there are no parameters.</source>
          <target state="translated">パラメーターがない場合は、空の配列です。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Reflection.ParameterModifier" /&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Reflection.ParameterModifier" /&gt;</ph> オブジェクトの配列。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>This array has the same length as the <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> parameter, representing the invoked member's argument attributes in the metadata.</source>
          <target state="translated">この配列は、メタデータにある呼び出されたメンバーの引数属性を表す <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> パラメーターと同じ長さです。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>A parameter can have the following attributes: <ph id="ph1">&lt;see langword="pdIn" /&gt;</ph>, <ph id="ph2">&lt;see langword="pdOut" /&gt;</ph>, <ph id="ph3">&lt;see langword="pdRetval" /&gt;</ph>, <ph id="ph4">&lt;see langword="pdOptional" /&gt;</ph>, and <ph id="ph5">&lt;see langword="pdHasDefault" /&gt;</ph>.</source>
          <target state="translated">パラメーターには、属性 <ph id="ph1">&lt;see langword="pdIn" /&gt;</ph>、<ph id="ph2">&lt;see langword="pdOut" /&gt;</ph>、<ph id="ph3">&lt;see langword="pdRetval" /&gt;</ph>、<ph id="ph4">&lt;see langword="pdOptional" /&gt;</ph>、および <ph id="ph5">&lt;see langword="pdHasDefault" /&gt;</ph> を使用できます。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>These represent [In], [Out], [retval], [optional], and a default parameter, respectively.</source>
          <target state="translated">これらはそれぞれ、[In]、[Out]、[retval]、[optional]、および既定のパラメーターを表します。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>These attributes are used by various interoperability services.</source>
          <target state="translated">これらの属性は、さまざまな相互運用性サービスで使用されます。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>An instance of <ph id="ph1">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph> used to govern the coercion of types.</source>
          <target state="translated">型の強制変換を制御するために使用する <ph id="ph1">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph> のインスタンス。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>For example, <bpt id="p1">&lt;c&gt;</bpt>culture<ept id="p1">&lt;/c&gt;</ept> converts a <ph id="ph1">&lt;see langword="String" /&gt;</ph> that represents 1000 to a <ph id="ph2">&lt;see langword="Double" /&gt;</ph> value, since 1000 is represented differently by different cultures.</source>
          <target state="translated">たとえば、<bpt id="p1">&lt;c&gt;</bpt>culture<ept id="p1">&lt;/c&gt;</ept> は 1000 を表す <ph id="ph1">&lt;see langword="String" /&gt;</ph> を <ph id="ph2">&lt;see langword="Double" /&gt;</ph> 値に変換します。これは、カルチャによって 1000 の表記が異なるためです。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>If this parameter is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the <ph id="ph2">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph> for the current thread is used.</source>
          <target state="translated">このパラメーターが <ph id="ph1">&lt;see langword="null" /&gt;</ph> の場合は、現在のスレッドの <ph id="ph2">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph> が使用されます。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>A <ph id="ph1">&lt;see langword="String" /&gt;</ph> array of parameters.</source>
          <target state="translated">パラメーターの文字列配列。<ph id="ph1">&lt;see langword="String" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>Invokes a specified member.</source>
          <target state="translated">指定されたメンバーを呼び出します。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>The specified member.</source>
          <target state="translated">指定されたメンバー。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>The method that is to be invoked must be accessible and provide the most specific match with the specified argument list, under the constraints of the specified binder and invocation attributes.</source>
          <target state="translated">呼び出すメソッドはアクセス可能でなければならず、指定したバインダーと呼び出し属性の制約の下で、指定された引数リストに対する一致の特定性が最高のものでなければなりません。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>A method is invoked if the number of parameters in the method declaration equals the number of arguments in the specified argument list, and the type of each argument can be converted by the binder to the type of the parameter.</source>
          <target state="translated">指定した引数リスト内の引数の数に等しければ、メソッドの宣言のパラメーターの数と各引数の型は、バインダーによってパラメーターの型に変換できる場合は、メソッドが呼び出されます。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>The array of parameter modifiers passed to the <ph id="ph1">&lt;xref:System.Reflection.IReflect.InvokeMember%2A&gt;</ph> method must contain a single parameter modifier.</source>
          <target state="translated">渡されるパラメーター修飾子の配列、<ph id="ph1">&lt;xref:System.Reflection.IReflect.InvokeMember%2A&gt;</ph>メソッドは、1 つのパラメーター修飾子を含める必要があります。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>Only the first parameter modifier is considered when determining which argument needs to be passed by reference when exposed to COM.</source>
          <target state="translated">最初のパラメーター修飾子は COM に公開されたときに参照によって渡される引数を決定する必要がある場合と見なされます</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>The binder finds all matching methods, in accordance with the type of binding requested (<ph id="ph1">&lt;xref:System.Reflection.BindingFlags.InvokeMethod?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Reflection.IReflect.GetProperties%2A&gt;</ph>, and so on).</source>
          <target state="translated">バインダーが要求されたバインディングの種類に従って、すべての一致するメソッドを検索 (<ph id="ph1">&lt;xref:System.Reflection.BindingFlags.InvokeMethod?displayProperty=nameWithType&gt;</ph>、<ph id="ph2">&lt;xref:System.Reflection.IReflect.GetProperties%2A&gt;</ph>など)。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>The set of methods is filtered by the name, number of arguments, and a set of search modifiers defined in the binder.</source>
          <target state="translated">メソッドのセットは、名前、引数の数と、バインダーで定義されている検索修飾子のセットによってフィルターされています。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>After the method is selected, it is invoked, and accessibility is checked at that point.</source>
          <target state="translated">メソッドを選択すると、メソッドが呼び出された場合、され、ユーザー補助機能がその時点でチェックします。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>The search may control which set of methods is searched based upon the accessibility attribute associated with the method.</source>
          <target state="translated">検索は、メソッドのセットが、メソッドに関連付けられているユーザー補助属性に基づいて検索を制御できます。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source><ph id="ph1">&lt;xref:System.Reflection.Binder.BindToMethod%2A&gt;</ph> selects the method to be invoked.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.Binder.BindToMethod%2A&gt;</ph> 呼び出されるメソッドを選択します。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>The default binder selects the most specific match.</source>
          <target state="translated">既定のバインダーは、最も具体的な一致を選択します。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>Access restrictions are ignored for fully trusted code.</source>
          <target state="translated">アクセスの制限には、完全に信頼されたコードは無視されます。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>That is, private constructors, methods, fields, and properties can be accessed and invoked through reflection whenever the code is fully trusted.</source>
          <target state="translated">つまり、private のコンス トラクター、メソッド、フィールド、およびプロパティにアクセスして、コードが完全に信頼されるリフレクションを通じて呼び出されました。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>The following example obtains the value of the <ph id="ph1">&lt;xref:System.DateTime.Now%2A&gt;</ph> property.</source>
          <target state="translated">次の例の値を取得する、<ph id="ph1">&lt;xref:System.DateTime.Now%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>More than one argument is specified for a field <ph id="ph1">&lt;see langword="set" /&gt;</ph>.</source>
          <target state="translated">フィールド <ph id="ph1">&lt;see langword="set" /&gt;</ph> に複数の引数が指定されています。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>The field or property cannot be found.</source>
          <target state="translated">フィールドまたはプロパティが見つかりません。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>The method cannot be found.</source>
          <target state="translated">メソッドが見つかりません。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>A private member is invoked without the necessary <ph id="ph1">&lt;see cref="T:System.Security.Permissions.ReflectionPermission" /&gt;</ph>.</source>
          <target state="translated">必要な <ph id="ph1">&lt;see cref="T:System.Security.Permissions.ReflectionPermission" /&gt;</ph> がない状態でプライベート メンバーが呼び出されました。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="P:System.Reflection.IReflect.UnderlyingSystemType">
          <source>Gets the underlying type that represents the <ph id="ph1">&lt;see cref="T:System.Reflection.IReflect" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Reflection.IReflect" /&gt;</ph> オブジェクトを表す基になる型を取得します。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.IReflect.UnderlyingSystemType">
          <source>The underlying type that represents the <ph id="ph1">&lt;see cref="T:System.Reflection.IReflect" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Reflection.IReflect" /&gt;</ph> オブジェクトを表す基になる型。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>