<Type Name="IReflect" FullName="System.Reflection.IReflect">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0ee28236ed05b5e16c8562811a785e42e58bbe86" />
    <Meta Name="ms.sourcegitcommit" Value="fbb23bed4669409528ea7027eeaf88a8663d0851" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="10/11/2018" />
    <Meta Name="ms.locfileid" Value="49088644" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IReflect" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IReflect" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.IReflect" />
  <TypeSignature Language="VB.NET" Value="Public Interface IReflect" />
  <TypeSignature Language="C++ CLI" Value="public interface class IReflect" />
  <TypeSignature Language="F#" Value="type IReflect = interface" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.Guid("AFBF15E5-C37C-11d2-B88E-00A0C9B471B8")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="7073c-101">
        <see href="http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5">IDispatch インターフェイス</see>と相互運用されます。</span>
      <span class="sxs-lookup">
        <span data-stu-id="7073c-101">Interoperates with the <see href="http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5">IDispatch interface</see>.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7073c-102"><xref:System.Reflection.IReflect>インターフェイスとの相互運用に使用されます、 [IDispatch インターフェイス](http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5)します。</span><span class="sxs-lookup"><span data-stu-id="7073c-102">The <xref:System.Reflection.IReflect> interface is used to interoperate with the [IDispatch interface](http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5).</span></span> <span data-ttu-id="7073c-103"><xref:System.Reflection.IReflect> サブセットを定義、<xref:System.Type>リフレクション メソッド。</span><span class="sxs-lookup"><span data-stu-id="7073c-103"><xref:System.Reflection.IReflect> defines a subset of the <xref:System.Type> reflection methods.</span></span> <span data-ttu-id="7073c-104">オブジェクトとして COM からアクセスされているときに、その動作をカスタマイズするこのインターフェイスを実装することにより、`IDispatch`オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7073c-104">Implementing this interface enables a type to customize its behavior when the object is being accessed from COM as an `IDispatch` object.</span></span> <span data-ttu-id="7073c-105"><xref:System.Runtime.InteropServices.CustomMarshalers.ExpandoToDispatchExMarshaler>を実装するオブジェクトをマーシャ リングするクラスを使用できます<xref:System.Reflection.IReflect>または<xref:System.Runtime.InteropServices.Expando.IExpando>COM として`IDispatch`オブジェクト、またはその逆です。</span><span class="sxs-lookup"><span data-stu-id="7073c-105">The <xref:System.Runtime.InteropServices.CustomMarshalers.ExpandoToDispatchExMarshaler> class can be used to marshal an object that implements <xref:System.Reflection.IReflect> or <xref:System.Runtime.InteropServices.Expando.IExpando> as a COM `IDispatch` object, and vice versa.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.InteropServices.CustomMarshalers.ExpandoToDispatchExMarshaler" />
  </Docs>
  <Members>
    <Member MemberName="GetField">
      <MemberSignature Language="C#" Value="public System.Reflection.FieldInfo GetField (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.FieldInfo GetField(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.GetField(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetField (name As String, bindingAttr As BindingFlags) As FieldInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::FieldInfo ^ GetField(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetField : string * System.Reflection.BindingFlags -&gt; System.Reflection.FieldInfo" Usage="iReflect.GetField (name, bindingAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="7073c-106">検索するフィールドの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7073c-106">The name of the field to find.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="7073c-107">検索を制御するために使用されるバインディング属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7073c-107">The binding attributes used to control the search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7073c-108">指定したフィールドとバインディング フラグに対応する <see cref="T:System.Reflection.FieldInfo" /> オブジェクトを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7073c-108">Returns the <see cref="T:System.Reflection.FieldInfo" /> object that corresponds to the specified field and binding flag.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7073c-109">
            <paramref name="bindingAttr" /> で指定した検索制約と一致する名前付きオブジェクトのフィールド情報を格納する <see cref="T:System.Reflection.FieldInfo" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7073c-109">A <see cref="T:System.Reflection.FieldInfo" /> object containing the field information for the named object that meets the search constraints specified in <paramref name="bindingAttr" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException">
          <span data-ttu-id="7073c-110">オブジェクトに複数のフィールドが同じ名前で実装されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7073c-110">The object implements multiple fields with the same name.</span>
          </span>
        </exception>
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <Member MemberName="GetFields">
      <MemberSignature Language="C#" Value="public System.Reflection.FieldInfo[] GetFields (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.FieldInfo[] GetFields(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.GetFields(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFields (bindingAttr As BindingFlags) As FieldInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::FieldInfo ^&gt; ^ GetFields(System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetFields : System.Reflection.BindingFlags -&gt; System.Reflection.FieldInfo[]" Usage="iReflect.GetFields bindingAttr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">
          <span data-ttu-id="7073c-111">検索を制御するために使用されるバインディング属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7073c-111">The binding attributes used to control the search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7073c-112">現在のクラスのすべてのフィールドに対応する <see cref="T:System.Reflection.FieldInfo" /> オブジェクトの配列を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7073c-112">Returns an array of <see cref="T:System.Reflection.FieldInfo" /> objects that correspond to all fields of the current class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7073c-113">
            <paramref name="bindingAttr" /> で指定した検索制約と一致するこのリフレクション オブジェクトのすべてのフィールド情報を格納する <see cref="T:System.Reflection.FieldInfo" /> オブジェクトの配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7073c-113">An array of <see cref="T:System.Reflection.FieldInfo" /> objects containing all the field information for this reflection object that meets the search constraints specified in <paramref name="bindingAttr" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7073c-114">一致は、名前に基づいています。</span><span class="sxs-lookup"><span data-stu-id="7073c-114">The match is based upon a name.</span></span> <span data-ttu-id="7073c-115">各フィールドには、一意の名前をいる必要があります。</span><span class="sxs-lookup"><span data-stu-id="7073c-115">Each field must have a unique name.</span></span> <span data-ttu-id="7073c-116"><xref:System.Reflection.BindingFlags.NonPublic?displayProperty=nameWithType>フラグは、検索で非パブリック メソッドが含まれることを指定します。</span><span class="sxs-lookup"><span data-stu-id="7073c-116">The <xref:System.Reflection.BindingFlags.NonPublic?displayProperty=nameWithType> flag specifies that non-public methods are included in the search.</span></span> <span data-ttu-id="7073c-117"><xref:System.Reflection.BindingFlags.Public?displayProperty=nameWithType>フラグは、パブリック メソッドが、検索に含まれることを指定します。</span><span class="sxs-lookup"><span data-stu-id="7073c-117">The <xref:System.Reflection.BindingFlags.Public?displayProperty=nameWithType> flag specifies that public methods are included in the search.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <Member MemberName="GetMember">
      <MemberSignature Language="C#" Value="public System.Reflection.MemberInfo[] GetMember (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MemberInfo[] GetMember(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.GetMember(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMember (name As String, bindingAttr As BindingFlags) As MemberInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ GetMember(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetMember : string * System.Reflection.BindingFlags -&gt; System.Reflection.MemberInfo[]" Usage="iReflect.GetMember (name, bindingAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="7073c-118">検索対象のメンバーの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7073c-118">The name of the member to find.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="7073c-119">検索を制御するために使用されるバインディング属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7073c-119">The binding attributes used to control the search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7073c-120">すべてのパブリック メンバーまたは指定した名前と一致するすべてのメンバーに対応する <see cref="T:System.Reflection.MemberInfo" /> オブジェクトの配列を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7073c-120">Retrieves an array of <see cref="T:System.Reflection.MemberInfo" /> objects corresponding to all public members or to all members that match a specified name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7073c-121">
            <paramref name="name" /> パラメーターと一致する <see cref="T:System.Reflection.MemberInfo" /> オブジェクトの配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7073c-121">An array of <see cref="T:System.Reflection.MemberInfo" /> objects matching the <paramref name="name" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7073c-122"><xref:System.Reflection.IReflect.GetMember%2A>メソッドの配列を取得する<xref:System.Reflection.MemberInfo>名およびバインド属性を使用してすべてのパブリック メンバーまたは指定した名前と一致するすべてのメンバーに対応するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7073c-122">The <xref:System.Reflection.IReflect.GetMember%2A> method retrieves an array of <xref:System.Reflection.MemberInfo> objects by using the name and binding attribute that correspond to all public members or to all members that match a specified name.</span></span> <span data-ttu-id="7073c-123">または、指定した名前の大文字と小文字が計測されるか無視するには、指定に従って変換された<xref:System.Reflection.BindingFlags.IgnoreCase?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="7073c-123">The case of the specified name is observed or ignored, as specified by <xref:System.Reflection.BindingFlags.IgnoreCase?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <Member MemberName="GetMembers">
      <MemberSignature Language="C#" Value="public System.Reflection.MemberInfo[] GetMembers (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MemberInfo[] GetMembers(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.GetMembers(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMembers (bindingAttr As BindingFlags) As MemberInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ GetMembers(System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetMembers : System.Reflection.BindingFlags -&gt; System.Reflection.MemberInfo[]" Usage="iReflect.GetMembers bindingAttr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">
          <span data-ttu-id="7073c-124">検索を制御するために使用されるバインディング属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7073c-124">The binding attributes used to control the search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7073c-125">すべてのパブリック メンバーまたは現在のクラスのすべてのメンバーに対応する <see cref="T:System.Reflection.MemberInfo" /> オブジェクトの配列を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7073c-125">Retrieves an array of <see cref="T:System.Reflection.MemberInfo" /> objects that correspond either to all public members or to all members of the current class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7073c-126">このリフレクション オブジェクトのすべてのメンバー情報が格納されている <see cref="T:System.Reflection.MemberInfo" /> オブジェクトの配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7073c-126">An array of <see cref="T:System.Reflection.MemberInfo" /> objects containing all the member information for this reflection object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7073c-127">このメソッドの配列を取得する<xref:System.Reflection.MemberInfo>すべてのパブリック メンバーまたは現在のクラスのすべてのメンバーのいずれかに対応するバインド属性を使用してオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7073c-127">This method retrieves an array of <xref:System.Reflection.MemberInfo> objects by using the binding attribute that corresponds either to all public members or to all members of the current class.</span></span> <span data-ttu-id="7073c-128">このオブジェクトに対して定義されているメンバーのすべての配列を返します。</span><span class="sxs-lookup"><span data-stu-id="7073c-128">It returns an array of all of the members defined for this object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMethod">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7073c-129">指定したメソッドに対応する <see cref="T:System.Reflection.MethodInfo" /> オブジェクトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7073c-129">Retrieves a <see cref="T:System.Reflection.MethodInfo" /> object that corresponds to a specified method.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo GetMethod (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetMethod(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMethod (name As String, bindingAttr As BindingFlags) As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::MethodInfo ^ GetMethod(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetMethod : string * System.Reflection.BindingFlags -&gt; System.Reflection.MethodInfo" Usage="iReflect.GetMethod (name, bindingAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="7073c-130">検索対象のメンバーの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7073c-130">The name of the member to find.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="7073c-131">検索を制御するために使用されるバインディング属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7073c-131">The binding attributes used to control the search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7073c-132">指定した検索制約の下で、指定したメソッドに対応する <see cref="T:System.Reflection.MethodInfo" /> オブジェクトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7073c-132">Retrieves a <see cref="T:System.Reflection.MethodInfo" /> object that corresponds to a specified method under specified search constraints.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7073c-133">メソッド名、および <paramref name="bindingAttr" /> で指定した検索制約と一致するメソッド情報を格納する <see cref="T:System.Reflection.MethodInfo" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7073c-133">A <see cref="T:System.Reflection.MethodInfo" /> object containing the method information, with the match being based on the method name and search constraints specified in <paramref name="bindingAttr" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException">
          <span data-ttu-id="7073c-134">オブジェクトに複数のメソッドが同じ名前で実装されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7073c-134">The object implements multiple methods with the same name.</span>
          </span>
        </exception>
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <Member MemberName="GetMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo GetMethod (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetMethod(string name, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::MethodInfo ^ GetMethod(System::String ^ name, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers);" />
      <MemberSignature Language="F#" Value="abstract member GetMethod : string * System.Reflection.BindingFlags * System.Reflection.Binder * Type[] * System.Reflection.ParameterModifier[] -&gt; System.Reflection.MethodInfo" Usage="iReflect.GetMethod (name, bindingAttr, binder, types, modifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="7073c-135">検索対象のメンバーの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7073c-135">The name of the member to find.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="7073c-136">検索を制御するために使用されるバインディング属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7073c-136">The binding attributes used to control the search.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="7073c-137">このメソッドに関連するプロパティが含まれ、<see cref="T:System.Reflection.Binder" /> を実装するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7073c-137">An object that implements <see cref="T:System.Reflection.Binder" />, containing properties related to this method.</span>
          </span>
        </param>
        <param name="types">
          <span data-ttu-id="7073c-138">オーバーロードされたメソッドからの選択に使用する配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7073c-138">An array used to choose among overloaded methods.</span>
          </span>
        </param>
        <param name="modifiers">
          <span data-ttu-id="7073c-139">型が変更されているパラメーター シグネチャでバインドを機能させるために使われるパラメーター修飾子の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7073c-139">An array of parameter modifiers used to make binding work with parameter signatures in which the types have been modified.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7073c-140">オーバーロードされたメソッドの中から選択する <see cref="T:System.Reflection.MethodInfo" /> 配列を使用して、指定したメソッドに対応する <see cref="T:System.Type" /> オブジェクトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7073c-140">Retrieves a <see cref="T:System.Reflection.MethodInfo" /> object corresponding to a specified method, using a <see cref="T:System.Type" /> array to choose from among overloaded methods.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7073c-141">指定したすべてのパラメーターが一致する要求されたメソッド。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7073c-141">The requested method that matches all the specified parameters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7073c-142">戻り値は、メソッド名に基づいて一致<xref:System.Reflection.BindingFlags>列挙型のメンバーで指定された型の変換の種類、`binder`パラメーターでオーバー ロードでは、および<xref:System.Reflection.ParameterInfo>メソッドのシグネチャをについて説明します。</span><span class="sxs-lookup"><span data-stu-id="7073c-142">The return value is a match based on the method name, <xref:System.Reflection.BindingFlags> enum member, the kind of type conversion specified by the `binder` parameter, the overload, and the <xref:System.Reflection.ParameterInfo> that describes the signature of the method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException">
          <span data-ttu-id="7073c-143">オブジェクトに複数のメソッドが同じ名前で実装されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7073c-143">The object implements multiple methods with the same name.</span>
          </span>
        </exception>
        <altmember cref="T:System.Reflection.BindingFlags" />
        <altmember cref="T:System.Reflection.Binder" />
        <altmember cref="T:System.Type" />
        <altmember cref="T:System.Reflection.ParameterModifier" />
      </Docs>
    </Member>
    <Member MemberName="GetMethods">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo[] GetMethods (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo[] GetMethods(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.GetMethods(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMethods (bindingAttr As BindingFlags) As MethodInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::MethodInfo ^&gt; ^ GetMethods(System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetMethods : System.Reflection.BindingFlags -&gt; System.Reflection.MethodInfo[]" Usage="iReflect.GetMethods bindingAttr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">
          <span data-ttu-id="7073c-144">検索を制御するために使用されるバインディング属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7073c-144">The binding attributes used to control the search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7073c-145">すべてのパブリック メソッドまたは現在のクラスのすべてのメソッドの <see cref="T:System.Reflection.MethodInfo" /> オブジェクトの配列を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7073c-145">Retrieves an array of <see cref="T:System.Reflection.MethodInfo" /> objects with all public methods or all methods of the current class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7073c-146">
            <paramref name="bindingAttr" /> で指定した検索制約と一致するこのリフレクション オブジェクトに対して定義されているすべてのメソッドを格納する <see cref="T:System.Reflection.MethodInfo" /> オブジェクトの配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7073c-146">An array of <see cref="T:System.Reflection.MethodInfo" /> objects containing all the methods defined for this reflection object that meet the search constraints specified in <paramref name="bindingAttr" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7073c-147">パブリックでない属性`bindingAttr`パブリック メソッドが返されるかどうかにのみ示されます。</span><span class="sxs-lookup"><span data-stu-id="7073c-147">The non-public attribute of `bindingAttr` is indicated only if public methods are returned.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public System.Reflection.PropertyInfo[] GetProperties (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.PropertyInfo[] GetProperties(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.GetProperties(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperties (bindingAttr As BindingFlags) As PropertyInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::PropertyInfo ^&gt; ^ GetProperties(System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetProperties : System.Reflection.BindingFlags -&gt; System.Reflection.PropertyInfo[]" Usage="iReflect.GetProperties bindingAttr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">
          <span data-ttu-id="7073c-148">検索の制御に使用されるバインディング属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7073c-148">The binding attribute used to control the search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7073c-149">すべてのパブリック プロパティまたは現在のクラスのすべてのプロパティに対応する <see cref="T:System.Reflection.PropertyInfo" /> オブジェクトの配列を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7073c-149">Retrieves an array of <see cref="T:System.Reflection.PropertyInfo" /> objects corresponding to all public properties or to all properties of the current class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7073c-150">リフレクション オブジェクトで定義されているすべてのプロパティの <see cref="T:System.Reflection.PropertyInfo" /> オブジェクトの配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7073c-150">An array of <see cref="T:System.Reflection.PropertyInfo" /> objects for all the properties defined on the reflection object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetProperty">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7073c-151">指定したプロパティに対応する <see cref="T:System.Reflection.PropertyInfo" /> オブジェクトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7073c-151">Retrieves a <see cref="T:System.Reflection.PropertyInfo" /> object corresponding to a specified property.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public System.Reflection.PropertyInfo GetProperty (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.PropertyInfo GetProperty(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperty (name As String, bindingAttr As BindingFlags) As PropertyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::PropertyInfo ^ GetProperty(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetProperty : string * System.Reflection.BindingFlags -&gt; System.Reflection.PropertyInfo" Usage="iReflect.GetProperty (name, bindingAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="7073c-152">検索するプロパティの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7073c-152">The name of the property to find.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="7073c-153">検索を制御するために使用されるバインディング属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7073c-153">The binding attributes used to control the search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7073c-154">指定した検索制約の下で、指定したプロパティに対応する <see cref="T:System.Reflection.PropertyInfo" /> オブジェクトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7073c-154">Retrieves a <see cref="T:System.Reflection.PropertyInfo" /> object corresponding to a specified property under specified search constraints.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7073c-155">
            <paramref name="bindingAttr" /> で指定された検索制約に一致する見つかったプロパティの <see cref="T:System.Reflection.PropertyInfo" /> オブジェクト。プロパティが見つからなかった場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7073c-155">A <see cref="T:System.Reflection.PropertyInfo" /> object for the located property that meets the search constraints specified in <paramref name="bindingAttr" />, or <see langword="null" /> if the property was not located.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException">
          <span data-ttu-id="7073c-156">オブジェクトに複数のフィールドが同じ名前で実装されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7073c-156">The object implements multiple fields with the same name.</span>
          </span>
        </exception>
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public System.Reflection.PropertyInfo GetProperty (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type returnType, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.PropertyInfo GetProperty(string name, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, class System.Type returnType, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::PropertyInfo ^ GetProperty(System::String ^ name, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, Type ^ returnType, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers);" />
      <MemberSignature Language="F#" Value="abstract member GetProperty : string * System.Reflection.BindingFlags * System.Reflection.Binder * Type * Type[] * System.Reflection.ParameterModifier[] -&gt; System.Reflection.PropertyInfo" Usage="iReflect.GetProperty (name, bindingAttr, binder, returnType, types, modifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="7073c-157">検索対象のメンバーの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7073c-157">The name of the member to find.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="7073c-158">検索の制御に使用されるバインディング属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7073c-158">The binding attribute used to control the search.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="7073c-159">このメソッドに関連するプロパティが含まれ、<see cref="T:System.Reflection.Binder" /> を実装するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7073c-159">An object that implements <see cref="T:System.Reflection.Binder" />, containing properties related to this method.</span>
          </span>
        </param>
        <param name="returnType">
          <span data-ttu-id="7073c-160">プロパティの型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7073c-160">The type of the property.</span>
          </span>
        </param>
        <param name="types">
          <span data-ttu-id="7073c-161">同じ名前のオーバーロードされたメソッドからの選択に使用する配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7073c-161">An array used to choose among overloaded methods with the same name.</span>
          </span>
        </param>
        <param name="modifiers">
          <span data-ttu-id="7073c-162">パラメーター修飾子の選択に使用する配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7073c-162">An array used to choose the parameter modifiers.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7073c-163">指定した検索制約で、指定したプロパティに対応する <see cref="T:System.Reflection.PropertyInfo" /> オブジェクトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7073c-163">Retrieves a <see cref="T:System.Reflection.PropertyInfo" /> object that corresponds to a specified property with specified search constraints.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7073c-164">指定した名前のプロパティがこのリフレクション オブジェクトで見つかった場合は、見つかったプロパティの <see cref="T:System.Reflection.PropertyInfo" /> オブジェクト。プロパティが見つからなかった場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7073c-164">A <see cref="T:System.Reflection.PropertyInfo" /> object for the located property, if a property with the specified name was located in this reflection object, or <see langword="null" /> if the property was not located.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7073c-165">このメソッドは、取得、<xref:System.Reflection.PropertyInfo>指定した検索制約の下で、指定したプロパティに対応するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7073c-165">This method retrieves a <xref:System.Reflection.PropertyInfo> object corresponding to a specified property under specified search constraints.</span></span> <span data-ttu-id="7073c-166">型の配列を使用して、オーバー ロードされたメソッドの中から選択します。</span><span class="sxs-lookup"><span data-stu-id="7073c-166">A type array is used to choose from among overloaded methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.ParameterModifier" />
        <altmember cref="T:System.Type" />
        <altmember cref="T:System.Reflection.Binder" />
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <Member MemberName="InvokeMember">
      <MemberSignature Language="C#" Value="public object InvokeMember (string name, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object target, object[] args, System.Reflection.ParameterModifier[] modifiers, System.Globalization.CultureInfo culture, string[] namedParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object InvokeMember(string name, valuetype System.Reflection.BindingFlags invokeAttr, class System.Reflection.Binder binder, object target, object[] args, valuetype System.Reflection.ParameterModifier[] modifiers, class System.Globalization.CultureInfo culture, string[] namedParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ InvokeMember(System::String ^ name, System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder ^ binder, System::Object ^ target, cli::array &lt;System::Object ^&gt; ^ args, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::String ^&gt; ^ namedParameters);" />
      <MemberSignature Language="F#" Value="abstract member InvokeMember : string * System.Reflection.BindingFlags * System.Reflection.Binder * obj * obj[] * System.Reflection.ParameterModifier[] * System.Globalization.CultureInfo * string[] -&gt; obj" Usage="iReflect.InvokeMember (name, invokeAttr, binder, target, args, modifiers, culture, namedParameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="namedParameters" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="7073c-167">検索対象のメンバーの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7073c-167">The name of the member to find.</span>
          </span>
        </param>
        <param name="invokeAttr">
          <span data-ttu-id="7073c-168">
            <see cref="T:System.Reflection.BindingFlags" /> 呼び出し属性の 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7073c-168">One of the <see cref="T:System.Reflection.BindingFlags" /> invocation attributes.</span>
          </span>
          <span data-ttu-id="7073c-169">
            <c>invokeAttr</c> パラメーターには、コンストラクター、メソッド、プロパティ、フィールドなどを指定できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7073c-169">The <c>invokeAttr</c> parameter may be a constructor, method, property, or field.</span>
          </span>
          <span data-ttu-id="7073c-170">適切な呼び出し属性を指定する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7073c-170">A suitable invocation attribute must be specified.</span>
          </span>
          <span data-ttu-id="7073c-171">メンバーの名前として空の文字列 ("") を渡すことによって、クラスの既定のメンバーを呼び出します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7073c-171">Invoke the default member of a class by passing the empty string ("") as the name of the member.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="7073c-172">
            <see cref="T:System.Reflection.BindingFlags" /> ビット フラグの 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7073c-172">One of the <see cref="T:System.Reflection.BindingFlags" /> bit flags.</span>
          </span>
          <span data-ttu-id="7073c-173">このメソッドに関連するプロパティを格納する <see cref="T:System.Reflection.Binder" /> を実装します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7073c-173">Implements <see cref="T:System.Reflection.Binder" />, containing properties related to this method.</span>
          </span>
        </param>
        <param name="target">
          <span data-ttu-id="7073c-174">指定したメンバーを呼び出す対象となるオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7073c-174">The object on which to invoke the specified member.</span>
          </span>
          <span data-ttu-id="7073c-175">静的メンバーの場合、このパラメーターは無視されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7073c-175">This parameter is ignored for static members.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="7073c-176">呼び出すメンバーのパラメーターの数、順序、および型を格納するオブジェクトの配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7073c-176">An array of objects that contains the number, order, and type of the parameters of the member to be invoked.</span>
          </span>
          <span data-ttu-id="7073c-177">パラメーターがない場合は、空の配列です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7073c-177">This is an empty array if there are no parameters.</span>
          </span>
        </param>
        <param name="modifiers">
          <span data-ttu-id="7073c-178">
            <see cref="T:System.Reflection.ParameterModifier" /> オブジェクトの配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7073c-178">An array of <see cref="T:System.Reflection.ParameterModifier" /> objects.</span>
          </span>
          <span data-ttu-id="7073c-179">この配列は、メタデータにある呼び出されたメンバーの引数属性を表す <c>args</c> パラメーターと同じ長さです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7073c-179">This array has the same length as the <c>args</c> parameter, representing the invoked member's argument attributes in the metadata.</span>
          </span>
          <span data-ttu-id="7073c-180">パラメーターには、属性 <see langword="pdIn" />、<see langword="pdOut" />、<see langword="pdRetval" />、<see langword="pdOptional" />、および <see langword="pdHasDefault" /> を使用できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7073c-180">A parameter can have the following attributes: <see langword="pdIn" />, <see langword="pdOut" />, <see langword="pdRetval" />, <see langword="pdOptional" />, and <see langword="pdHasDefault" />.</span>
          </span>
          <span data-ttu-id="7073c-181">これらはそれぞれ、[In]、[Out]、[retval]、[optional]、および既定のパラメーターを表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7073c-181">These represent [In], [Out], [retval], [optional], and a default parameter, respectively.</span>
          </span>
          <span data-ttu-id="7073c-182">これらの属性は、さまざまな相互運用性サービスで使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7073c-182">These attributes are used by various interoperability services.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="7073c-183">型の強制変換を制御するために使用する <see cref="T:System.Globalization.CultureInfo" /> のインスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7073c-183">An instance of <see cref="T:System.Globalization.CultureInfo" /> used to govern the coercion of types.</span>
          </span>
          <span data-ttu-id="7073c-184">たとえば、<c>culture</c> は 1000 を表す <see langword="String" /> を <see langword="Double" /> 値に変換します。これは、カルチャによって 1000 の表記が異なるためです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7073c-184">For example, <c>culture</c> converts a <see langword="String" /> that represents 1000 to a <see langword="Double" /> value, since 1000 is represented differently by different cultures.</span>
          </span>
          <span data-ttu-id="7073c-185">このパラメーターが <see langword="null" /> の場合は、現在のスレッドの <see cref="T:System.Globalization.CultureInfo" /> が使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7073c-185">If this parameter is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span>
          </span>
        </param>
        <param name="namedParameters">
          <span data-ttu-id="7073c-186">パラメーターの文字列配列。<see langword="String" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="7073c-186">A <see langword="String" /> array of parameters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7073c-187">指定されたメンバーを呼び出します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7073c-187">Invokes a specified member.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7073c-188">指定されたメンバー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7073c-188">The specified member.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7073c-189">呼び出すメソッドはアクセス可能でなければならず、指定したバインダーと呼び出し属性の制約の下で、指定された引数リストに対する一致の特定性が最高のものでなければなりません。</span><span class="sxs-lookup"><span data-stu-id="7073c-189">The method that is to be invoked must be accessible and provide the most specific match with the specified argument list, under the constraints of the specified binder and invocation attributes.</span></span>  
  
 <span data-ttu-id="7073c-190">メソッド宣言パラメーターの数に等しい、指定した引数リストの引数の数と各引数の型は、バインダーによってパラメーターの型に変換できる場合は、メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="7073c-190">A method is invoked if the number of parameters in the method declaration equals the number of arguments in the specified argument list, and the type of each argument can be converted by the binder to the type of the parameter.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7073c-191">渡されるパラメーター修飾子の配列、<xref:System.Reflection.IReflect.InvokeMember%2A>メソッドは、1 つのパラメーター修飾子を含める必要があります。</span><span class="sxs-lookup"><span data-stu-id="7073c-191">The array of parameter modifiers passed to the <xref:System.Reflection.IReflect.InvokeMember%2A> method must contain a single parameter modifier.</span></span> <span data-ttu-id="7073c-192">最初のパラメーター修飾子は COM に公開されたときに参照渡しの引数を決定する必要がある場合と見なされます</span><span class="sxs-lookup"><span data-stu-id="7073c-192">Only the first parameter modifier is considered when determining which argument needs to be passed by reference when exposed to COM.</span></span>  
  
 <span data-ttu-id="7073c-193">バインダーが要求されたバインドの種類に従って、すべての一致するメソッドを検索します (<xref:System.Reflection.BindingFlags.InvokeMethod?displayProperty=nameWithType>、<xref:System.Reflection.IReflect.GetProperties%2A>など)。</span><span class="sxs-lookup"><span data-stu-id="7073c-193">The binder finds all matching methods, in accordance with the type of binding requested (<xref:System.Reflection.BindingFlags.InvokeMethod?displayProperty=nameWithType>, <xref:System.Reflection.IReflect.GetProperties%2A>, and so on).</span></span> <span data-ttu-id="7073c-194">メソッドのセットは、名前、引数の数とバインダーで定義されている検索修飾子のセットによってフィルター処理されます。</span><span class="sxs-lookup"><span data-stu-id="7073c-194">The set of methods is filtered by the name, number of arguments, and a set of search modifiers defined in the binder.</span></span> <span data-ttu-id="7073c-195">メソッドを選択するが呼び出され、アクセシビリティがその時点でチェックされます。</span><span class="sxs-lookup"><span data-stu-id="7073c-195">After the method is selected, it is invoked, and accessibility is checked at that point.</span></span> <span data-ttu-id="7073c-196">検索では、メソッドのセットが、メソッドに関連付けられているユーザー補助属性に基づいて検索を制御できます。</span><span class="sxs-lookup"><span data-stu-id="7073c-196">The search may control which set of methods is searched based upon the accessibility attribute associated with the method.</span></span> <span data-ttu-id="7073c-197"><xref:System.Reflection.Binder.BindToMethod%2A> 呼び出されるメソッドを選択します。</span><span class="sxs-lookup"><span data-stu-id="7073c-197"><xref:System.Reflection.Binder.BindToMethod%2A> selects the method to be invoked.</span></span> <span data-ttu-id="7073c-198">既定のバインダーでは、最も具体的な一致を選択します。</span><span class="sxs-lookup"><span data-stu-id="7073c-198">The default binder selects the most specific match.</span></span>  
  
 <span data-ttu-id="7073c-199">アクセスの制限には、完全に信頼されたコードは無視されます。</span><span class="sxs-lookup"><span data-stu-id="7073c-199">Access restrictions are ignored for fully trusted code.</span></span> <span data-ttu-id="7073c-200">つまり、プライベート コンス トラクター、メソッド、フィールド、およびプロパティにアクセスでき、コードが完全に信頼されたリフレクションを通じて起動します。</span><span class="sxs-lookup"><span data-stu-id="7073c-200">That is, private constructors, methods, fields, and properties can be accessed and invoked through reflection whenever the code is fully trusted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7073c-201">次の例の値を取得する、<xref:System.DateTime.Now%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="7073c-201">The following example obtains the value of the <xref:System.DateTime.Now%2A> property.</span></span>  
  
 [!code-cpp[Classic IReflect.InvokeMember Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic IReflect.InvokeMember Example/CPP/source.cpp#1)]
 [!code-csharp[Classic IReflect.InvokeMember Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic IReflect.InvokeMember Example/CS/source.cs#1)]
 [!code-vb[Classic IReflect.InvokeMember Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic IReflect.InvokeMember Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7073c-202">フィールド <see langword="set" /> に複数の引数が指定されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7073c-202">More than one argument is specified for a field <see langword="set" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingFieldException">
          <span data-ttu-id="7073c-203">フィールドまたはプロパティが見つかりません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7073c-203">The field or property cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="7073c-204">メソッドが見つかりません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7073c-204">The method cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="7073c-205">必要な <see cref="T:System.Security.Permissions.ReflectionPermission" /> がない状態でプライベート メンバーが呼び出されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7073c-205">A private member is invoked without the necessary <see cref="T:System.Security.Permissions.ReflectionPermission" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.Reflection.Binder" />
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <Member MemberName="UnderlyingSystemType">
      <MemberSignature Language="C#" Value="public Type UnderlyingSystemType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type UnderlyingSystemType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.IReflect.UnderlyingSystemType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UnderlyingSystemType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ UnderlyingSystemType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UnderlyingSystemType : Type" Usage="System.Reflection.IReflect.UnderlyingSystemType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7073c-206">
            <see cref="T:System.Reflection.IReflect" /> オブジェクトを表す基になる型を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7073c-206">Gets the underlying type that represents the <see cref="T:System.Reflection.IReflect" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7073c-207">
            <see cref="T:System.Reflection.IReflect" /> オブジェクトを表す基になる型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7073c-207">The underlying type that represents the <see cref="T:System.Reflection.IReflect" /> object.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
  </Members>
</Type>