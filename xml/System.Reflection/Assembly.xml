<Type Name="Assembly" FullName="System.Reflection.Assembly">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c5e3a1b3ca599f0f0d91e2339c100250a9fdfcb4" /><Meta Name="ms.sourcegitcommit" Value="9a6da88bd5455e8274257ca7ad259b42f1de114f" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/22/2019" /><Meta Name="ms.locfileid" Value="66007210" /></Metadata><TypeSignature Language="C#" Value="public abstract class Assembly : System.Reflection.ICustomAttributeProvider, System.Runtime.InteropServices._Assembly, System.Runtime.Serialization.ISerializable, System.Security.IEvidenceFactory" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi abstract serializable beforefieldinit Assembly extends System.Object implements class System.Reflection.ICustomAttributeProvider, class System.Runtime.InteropServices._Assembly, class System.Runtime.Serialization.ISerializable, class System.Security.IEvidenceFactory" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Assembly" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Assembly&#xA;Implements _Assembly, ICustomAttributeProvider, IEvidenceFactory, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Assembly abstract : System::Reflection::ICustomAttributeProvider, System::Runtime::InteropServices::_Assembly, System::Runtime::Serialization::ISerializable, System::Security::IEvidenceFactory" />
  <TypeSignature Language="F#" Value="type Assembly = class&#xA;    interface ICustomAttributeProvider&#xA;    interface _Assembly&#xA;    interface IEvidenceFactory&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Reflection.ICustomAttributeProvider</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices._Assembly</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Security.IEvidenceFactory</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._Assembly))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="663dc-101">再利用でき、バージョン管理可能で自己記述型の共通言語ランタイム アプリケーションのビルド ブロックであるアセンブリを表します。</span><span class="sxs-lookup"><span data-stu-id="663dc-101">Represents an assembly, which is a reusable, versionable, and self-describing building block of a common language runtime application.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663dc-102">使用して、<xref:System.Reflection.Assembly>をアセンブリに含まれる型を検出し、それらの型のインスタンスを作成するときに、アセンブリのメタデータと構成要素の部分を調べることに、アセンブリをロードするクラス。</span><span class="sxs-lookup"><span data-stu-id="663dc-102">Use the <xref:System.Reflection.Assembly> class to load assemblies, to explore the metadata and constituent parts of assemblies, to discover the types contained in assemblies, and to create instances of those types.</span></span>  
  
 <span data-ttu-id="663dc-103">配列を取得する<xref:System.Reflection.Assembly>オブジェクトを使用して (たとえば、既定のアプリケーション ドメインの単純なプロジェクト)、アプリケーション ドメインに読み込まれる現在のアセンブリを表す、<xref:System.AppDomain.GetAssemblies%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="663dc-103">To get an array of <xref:System.Reflection.Assembly> objects representing the assemblies currently loaded into an application domain (for example, the default application domain of a simple project), use the <xref:System.AppDomain.GetAssemblies%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="663dc-104">アセンブリを動的に読み込む、<xref:System.Reflection.Assembly>クラスは、次の静的メソッドを提供します。 (`Shared` Visual Basic でのメソッド)。</span><span class="sxs-lookup"><span data-stu-id="663dc-104">To load assemblies dynamically, the <xref:System.Reflection.Assembly> class provides the following static methods (`Shared` methods in Visual Basic).</span></span> <span data-ttu-id="663dc-105">アセンブリは、読み込み操作が発生するアプリケーション ドメインに読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="663dc-105">Assemblies are loaded into the application domain where the load operation occurs.</span></span>  
  
-   <span data-ttu-id="663dc-106">アセンブリを読み込むことをお勧めの方法は使用する、<xref:System.AppDomain.Load%2A>メソッドで、その表示名によって読み込まれるアセンブリを識別します (たとえば、"System.Windows.Forms、バージョン 2.0.0.0、カルチャを = = neutral, PublicKeyToken = b77a5c561934e089")。</span><span class="sxs-lookup"><span data-stu-id="663dc-106">The recommended way to load assemblies is to use the <xref:System.AppDomain.Load%2A> method, which identifies the assembly to be loaded by its display name (for example, "System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089").</span></span> <span data-ttu-id="663dc-107">アセンブリの検索で説明されている規則に従った[ランタイムがアセンブリを検索する方法](~/docs/framework/deployment/how-the-runtime-locates-assemblies.md)します。</span><span class="sxs-lookup"><span data-stu-id="663dc-107">The search for the assembly follows the rules described in [How the Runtime Locates Assemblies](~/docs/framework/deployment/how-the-runtime-locates-assemblies.md).</span></span>  
  
-   <span data-ttu-id="663dc-108"><xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A>と<xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A>メソッドを実行ではなく、リフレクションのアセンブリを読み込むことができます。</span><span class="sxs-lookup"><span data-stu-id="663dc-108">The <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A> and <xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A> methods enable you to load an assembly for reflection, but not for execution.</span></span> <span data-ttu-id="663dc-109">たとえば、32 ビット プラットフォームで実行されているコードによって、64 ビット プラットフォームを対象とするアセンブリを検証できます。</span><span class="sxs-lookup"><span data-stu-id="663dc-109">For example, an assembly that targets a 64-bit platform can be examined by code that is running on a 32-bit platform.</span></span>  
  
-   <span data-ttu-id="663dc-110"><xref:System.Reflection.Assembly.LoadFile%2A>と<xref:System.Reflection.Assembly.LoadFrom%2A>パスでアセンブリを識別する必要があります、まれなシナリオのメソッドが用意されています。</span><span class="sxs-lookup"><span data-stu-id="663dc-110">The <xref:System.Reflection.Assembly.LoadFile%2A> and <xref:System.Reflection.Assembly.LoadFrom%2A> methods are provided for rare scenarios in which an assembly must be identified by path.</span></span>  
  
 <span data-ttu-id="663dc-111">取得する、<xref:System.Reflection.Assembly>使用して、現在実行中のアセンブリのオブジェクト、<xref:System.Reflection.Assembly.GetExecutingAssembly%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="663dc-111">To get an <xref:System.Reflection.Assembly> object for the currently executing assembly, use the <xref:System.Reflection.Assembly.GetExecutingAssembly%2A> method.</span></span>  
  
 <span data-ttu-id="663dc-112">多くのメンバー、<xref:System.Reflection.Assembly>クラスは、アセンブリに関する情報を提供します。</span><span class="sxs-lookup"><span data-stu-id="663dc-112">Many members of the <xref:System.Reflection.Assembly> class provide information about an assembly.</span></span> <span data-ttu-id="663dc-113">次に例を示します。</span><span class="sxs-lookup"><span data-stu-id="663dc-113">For example:</span></span>  
  
-   <span data-ttu-id="663dc-114"><xref:System.Reflection.Assembly.GetName%2A>メソッドが返す、<xref:System.Reflection.AssemblyName>アセンブリの表示名の部分へのアクセスを提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="663dc-114">The <xref:System.Reflection.Assembly.GetName%2A> method returns an <xref:System.Reflection.AssemblyName> object that provides access to the parts of the assembly display name.</span></span>  
  
-   <span data-ttu-id="663dc-115"><xref:System.Reflection.Assembly.GetCustomAttributes%2A>メソッドは、アセンブリに適用される属性を一覧表示されます。</span><span class="sxs-lookup"><span data-stu-id="663dc-115">The <xref:System.Reflection.Assembly.GetCustomAttributes%2A> method lists the attributes applied to the assembly.</span></span>  
  
-   <span data-ttu-id="663dc-116"><xref:System.Reflection.Assembly.GetFiles%2A>メソッドは、アセンブリ マニフェスト内のファイルへのアクセスを提供します。</span><span class="sxs-lookup"><span data-stu-id="663dc-116">The <xref:System.Reflection.Assembly.GetFiles%2A> method provides access to the files in the assembly manifest.</span></span>  
  
-   <span data-ttu-id="663dc-117"><xref:System.Reflection.Assembly.GetManifestResourceNames%2A>メソッドは、アセンブリ マニフェストにリソースの名前を提供します。</span><span class="sxs-lookup"><span data-stu-id="663dc-117">The <xref:System.Reflection.Assembly.GetManifestResourceNames%2A> method provides the names of the resources in the assembly manifest.</span></span>  
  
 <span data-ttu-id="663dc-118"><xref:System.Reflection.Assembly.GetTypes%2A>メソッドは、アセンブリ内のすべての型を一覧表示されます。</span><span class="sxs-lookup"><span data-stu-id="663dc-118">The <xref:System.Reflection.Assembly.GetTypes%2A> method lists all the types in the assembly.</span></span> <span data-ttu-id="663dc-119"><xref:System.Reflection.Assembly.GetExportedTypes%2A>メソッドが呼び出し元アセンブリの外側に表示される種類を一覧表示されます。</span><span class="sxs-lookup"><span data-stu-id="663dc-119">The <xref:System.Reflection.Assembly.GetExportedTypes%2A> method lists the types that are visible to callers outside the assembly.</span></span> <span data-ttu-id="663dc-120"><xref:System.Reflection.Assembly.GetType%2A>メソッドは、アセンブリ内の特定の型を検索するために使用できます。</span><span class="sxs-lookup"><span data-stu-id="663dc-120">The <xref:System.Reflection.Assembly.GetType%2A> method can be used to search for a particular type in the assembly.</span></span> <span data-ttu-id="663dc-121"><xref:System.Reflection.Assembly.CreateInstance%2A>を検索し、アセンブリで型のインスタンスを作成するメソッドを使用できます。</span><span class="sxs-lookup"><span data-stu-id="663dc-121">The <xref:System.Reflection.Assembly.CreateInstance%2A> method can be used to search for and create instances of types in the assembly.</span></span>  
  
 <span data-ttu-id="663dc-122">アセンブリの詳細については、「アプリケーション ドメインとアセンブリ」のセクションを参照してください、[アプリケーション ドメイン](~/docs/framework/app-domains/application-domains.md)トピック。</span><span class="sxs-lookup"><span data-stu-id="663dc-122">For more information on assemblies, see the "Application Domains and Assemblies" section in the [Application Domains](~/docs/framework/app-domains/application-domains.md) topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="663dc-123">次のコード例では、現在実行中のアセンブリを取得し、そのアセンブリに含まれる型のインスタンスを作成し、遅延バインディングの型のメソッドのいずれかを呼び出す方法を示します。</span><span class="sxs-lookup"><span data-stu-id="663dc-123">The following code example shows how to obtain the currently executing assembly, create an instance of a type contained in that assembly, and invoke one of the type's methods with late binding.</span></span> <span data-ttu-id="663dc-124">コード例をこの目的のためには、という名前のクラスを定義します`Example`、という名前のメソッドで`SampleMethod`します。</span><span class="sxs-lookup"><span data-stu-id="663dc-124">For this purpose, the code example defines a class named `Example`, with a method named `SampleMethod`.</span></span> <span data-ttu-id="663dc-125">クラスのコンス トラクターは、メソッドの戻り値の計算に使用される整数値を受け入れます。</span><span class="sxs-lookup"><span data-stu-id="663dc-125">The constructor of the class accepts an integer, which is used to compute the return value of the method.</span></span>  
  
 <span data-ttu-id="663dc-126">コード例の使用にも示します、<xref:System.Reflection.Assembly.GetName%2A>メソッドを取得する、<xref:System.Reflection.AssemblyName>アセンブリの完全名を解析するために使用できるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="663dc-126">The code example also demonstrates the use of the <xref:System.Reflection.Assembly.GetName%2A> method to obtain an <xref:System.Reflection.AssemblyName> object that can be used to parse the full name of the assembly.</span></span> <span data-ttu-id="663dc-127">例では、アセンブリのバージョン番号が表示されます、<xref:System.Reflection.Assembly.CodeBase%2A>プロパティ、および<xref:System.Reflection.Assembly.EntryPoint%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="663dc-127">The example displays the version number of the assembly, the <xref:System.Reflection.Assembly.CodeBase%2A> property, and the <xref:System.Reflection.Assembly.EntryPoint%2A> property.</span></span>  
  
 [!code-cpp[AssemblyClass#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyClass/cpp/source.cpp#1)]
 [!code-csharp[AssemblyClass#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyClass/cs/source.cs#1)]
 [!code-vb[AssemblyClass#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyClass/vb/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="663dc-128">継承クラスの完全な信頼。</span><span class="sxs-lookup"><span data-stu-id="663dc-128">for full trust for inheritors.</span></span> <span data-ttu-id="663dc-129">部分的に信頼されたコードでは、このクラスを継承できません。</span><span class="sxs-lookup"><span data-stu-id="663dc-129">This class cannot be inherited by partially trusted code.</span></span></permission>
    <threadsafe><span data-ttu-id="663dc-130">この型はスレッド セーフです。</span><span class="sxs-lookup"><span data-stu-id="663dc-130">This type is thread safe.</span></span></threadsafe>
    <altmember cref="T:System.AppDomain" />
    <altmember cref="T:System.Reflection.AssemblyName" />
    <related type="Article" href="~/docs/framework/app-domains/application-domains.md"><span data-ttu-id="663dc-131">アプリケーション ドメイン</span><span class="sxs-lookup"><span data-stu-id="663dc-131">Application Domains</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Assembly ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Assembly();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="663dc-132"><see cref="T:System.Reflection.Assembly" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="663dc-132">Initializes a new instance of the <see cref="T:System.Reflection.Assembly" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663dc-133">このコンス トラクターは、構築する際に派生クラスによって呼び出される<xref:System.Reflection.Assembly>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="663dc-133">This constructor is invoked by derived classes during the construction of <xref:System.Reflection.Assembly> objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CodeBase">
      <MemberSignature Language="C#" Value="public virtual string CodeBase { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CodeBase" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.CodeBase" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CodeBase As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CodeBase { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CodeBase : string" Usage="System.Reflection.Assembly.CodeBase" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Assembly.CodeBase</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="663dc-134">たとえば <see cref="T:System.Reflection.AssemblyName" /> オブジェクトで、初めに指定されたアセンブリの場所を取得します。</span><span class="sxs-lookup"><span data-stu-id="663dc-134">Gets the location of the assembly as specified originally, for example, in an <see cref="T:System.Reflection.AssemblyName" /> object.</span></span></summary>
        <value><span data-ttu-id="663dc-135">初めに指定されたとおりのアセンブリの場所。</span><span class="sxs-lookup"><span data-stu-id="663dc-135">The location of the assembly as specified originally.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663dc-136">読み込み済みのマニフェストを含むファイルへの絶対パスを取得する、<xref:System.Reflection.Assembly.Location%2A?displayProperty=nameWithType>プロパティ代わりにします。</span><span class="sxs-lookup"><span data-stu-id="663dc-136">To get the absolute path to the loaded manifest-containing file, use the <xref:System.Reflection.Assembly.Location%2A?displayProperty=nameWithType> property instead.</span></span>  
  
 <span data-ttu-id="663dc-137">アセンブリがバイト配列として読み込まれた場合のオーバー ロードを使用して、<xref:System.Reflection.Assembly.Load%2A>バイトの配列を受け取るメソッドでは、このプロパティは、読み込まれたアセンブリの場所ではなく、メソッドの呼び出し元の場所を返します。</span><span class="sxs-lookup"><span data-stu-id="663dc-137">If the assembly was loaded as a byte array, using an overload of the <xref:System.Reflection.Assembly.Load%2A> method that takes an array of bytes, this property returns the location of the caller of the method, not the location of the loaded assembly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="663dc-138">次の例では、<xref:System.Reflection.Assembly.CodeBase%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="663dc-138">The following example uses the <xref:System.Reflection.Assembly.CodeBase%2A> property.</span></span>  
  
 [!code-cpp[System.Reflection.Assembly#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Assembly/CPP/codebase1.cpp#1)]
 [!code-csharp[System.Reflection.Assembly#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Assembly/CS/codebase1.cs#1)]
 [!code-vb[System.Reflection.Assembly#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Assembly/VB/codebase1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="663dc-139">パスにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="663dc-139">for access to the path.</span></span> <span data-ttu-id="663dc-140">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span><span class="sxs-lookup"><span data-stu-id="663dc-140">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateInstance">
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="663dc-141">このアセンブリから型を検索し、システム アクティベーターを使用してこの型のインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="663dc-141">Locates a type from this assembly and creates an instance of it using the system activator.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public object CreateInstance (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateInstance(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.CreateInstance(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateInstance (typeName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ CreateInstance(System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="abstract member CreateInstance : string -&gt; obj&#xA;override this.CreateInstance : string -&gt; obj" Usage="assembly.CreateInstance typeName" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.CreateInstance(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="typeName"><span data-ttu-id="663dc-142">検索対象の型の <see cref="P:System.Type.FullName" />。</span><span class="sxs-lookup"><span data-stu-id="663dc-142">The <see cref="P:System.Type.FullName" /> of the type to locate.</span></span></param>
        <summary><span data-ttu-id="663dc-143">大文字小文字を区別する検索を使用してこのアセンブリから指定された型を検索し、システム アクティベーターを使用してこの型のインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="663dc-143">Locates the specified type from this assembly and creates an instance of it using the system activator, using case-sensitive search.</span></span></summary>
        <returns><span data-ttu-id="663dc-144">既定のコンストラクターを使用して作成された指定した型のインスタンス。<see langword="null" /> が見つからない場合は、<paramref name="typeName" />。</span><span class="sxs-lookup"><span data-stu-id="663dc-144">An instance of the specified type created with the default constructor; or <see langword="null" /> if <paramref name="typeName" /> is not found.</span></span> <span data-ttu-id="663dc-145">型は、既定のバインダーを使用して解決されます。カルチャまたはアクティベーション属性は指定せず、<see cref="T:System.Reflection.BindingFlags" /> を <see langword="Public" /> または <see langword="Instance" /> に設定します。</span><span class="sxs-lookup"><span data-stu-id="663dc-145">The type is resolved using the default binder, without specifying culture or activation attributes, and with <see cref="T:System.Reflection.BindingFlags" /> set to <see langword="Public" /> or <see langword="Instance" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663dc-146">ランタイムが検索できない場合`typeName`で、<xref:System.Reflection.Assembly>インスタンスが返されます`null`例外をスローする代わりにします。</span><span class="sxs-lookup"><span data-stu-id="663dc-146">If the runtime is unable to find `typeName` in the <xref:System.Reflection.Assembly> instance, it returns `null` instead of throwing an exception.</span></span> <span data-ttu-id="663dc-147">これは、ために発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="663dc-147">This might happen because:</span></span>  
  
-   <span data-ttu-id="663dc-148">型の完全修飾名を指定していません。</span><span class="sxs-lookup"><span data-stu-id="663dc-148">You haven't specified the fully qualified name of the type.</span></span>  
  
-   <span data-ttu-id="663dc-149">完全修飾型名を指定したが、そのケースは、型の場合と一致しません<xref:System.Type.FullName%2A?displayProperty=nameWithType>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="663dc-149">You've specified the fully qualified type name, but its case doesn't match the case of the type's <xref:System.Type.FullName%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="663dc-150">大文字と小文字の`typeName`型の完全な名前を使用して呼び出す、<xref:System.Reflection.Assembly.CreateInstance%28System.String%2CSystem.Boolean%29>オーバー ロードし、指定`true`の`ignoreCase`引数。</span><span class="sxs-lookup"><span data-stu-id="663dc-150">For a case-insensitive comparison of `typeName` with the type's full name, call the <xref:System.Reflection.Assembly.CreateInstance%28System.String%2CSystem.Boolean%29> overload and specify `true` for the `ignoreCase` argument.</span></span>  
  
-   <span data-ttu-id="663dc-151">現在の型が存在しない<xref:System.Reflection.Assembly>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="663dc-151">The type doesn't exist in the current <xref:System.Reflection.Assembly> instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="663dc-152">次の例では、定義、`Person`クラスと呼び出し、<xref:System.Reflection.Assembly.CreateInstance%28System.String%29>インスタンス化するメソッド。</span><span class="sxs-lookup"><span data-stu-id="663dc-152">The following example defines a `Person` class and calls the <xref:System.Reflection.Assembly.CreateInstance%28System.String%29> method to instantiate it.</span></span>  
  
 [!code-csharp[System.Reflection.Assembly.CreateInstance#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflection.assembly.createinstance/cs/createinstance1.cs#1)]
 [!code-vb[System.Reflection.Assembly.CreateInstance#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.reflection.assembly.createinstance/vb/createinstance1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="663dc-153"><paramref name="typeName" /> は空の文字列 ("") または null 文字で始まる文字列です。</span><span class="sxs-lookup"><span data-stu-id="663dc-153"><paramref name="typeName" /> is an empty string ("") or a string beginning with a null character.</span></span>  
  
<span data-ttu-id="663dc-154">または</span><span class="sxs-lookup"><span data-stu-id="663dc-154">-or-</span></span> 
<span data-ttu-id="663dc-155">現在のアセンブリは、リフレクションのみのコンテキストに読み込まれました。</span><span class="sxs-lookup"><span data-stu-id="663dc-155">The current assembly was loaded into the reflection-only context.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="663dc-156"><paramref name="typeName" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="663dc-156"><paramref name="typeName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="663dc-157">一致するコンストラクターが見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="663dc-157">No matching constructor was found.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="663dc-158"><paramref name="typeName" /> には見つからなかった依存アセンブリが必要です。</span><span class="sxs-lookup"><span data-stu-id="663dc-158"><paramref name="typeName" /> requires a dependent assembly that could not be found.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="663dc-159"><paramref name="typeName" /> には、見つかったものの読み込めなかった依存アセンブリが必要です。</span><span class="sxs-lookup"><span data-stu-id="663dc-159"><paramref name="typeName" /> requires a dependent assembly that was found but could not be loaded.</span></span>  
  
<span data-ttu-id="663dc-160">または</span><span class="sxs-lookup"><span data-stu-id="663dc-160">-or-</span></span> 
<span data-ttu-id="663dc-161">現在のアセンブリはリフレクションのみのコンテキストに読み込まれましたが、<paramref name="typeName" /> には事前に読み込まれていない依存アセンブリが必要です。</span><span class="sxs-lookup"><span data-stu-id="663dc-161">The current assembly was loaded into the reflection-only context, and <paramref name="typeName" /> requires a dependent assembly that was not preloaded.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="663dc-162"><paramref name="typeName" /> には依存アセンブリが必要ですが、ファイルは有効なアセンブリではありません。</span><span class="sxs-lookup"><span data-stu-id="663dc-162"><paramref name="typeName" /> requires a dependent assembly, but the file is not a valid assembly.</span></span>  
  
<span data-ttu-id="663dc-163">または</span><span class="sxs-lookup"><span data-stu-id="663dc-163">-or-</span></span> 
 <span data-ttu-id="663dc-164"><paramref name="typeName" /> には、現在読み込まれているバージョンより新しいバージョンのランタイム用にコンパイルされた依存アセンブリが必要です。</span><span class="sxs-lookup"><span data-stu-id="663dc-164"><paramref name="typeName" /> requires a dependent assembly that was compiled for a version of the runtime that is later than the currently loaded version.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="663dc-165">呼び出されたときに遅延バインディング メカニズムを通じてなど<see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />します。</span><span class="sxs-lookup"><span data-stu-id="663dc-165">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="663dc-166">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="663dc-166">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public object CreateInstance (string typeName, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateInstance(string typeName, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.CreateInstance(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateInstance (typeName As String, ignoreCase As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ CreateInstance(System::String ^ typeName, bool ignoreCase);" />
      <MemberSignature Language="F#" Value="abstract member CreateInstance : string * bool -&gt; obj&#xA;override this.CreateInstance : string * bool -&gt; obj" Usage="assembly.CreateInstance (typeName, ignoreCase)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.CreateInstance(System.String,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="ignoreCase" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="typeName"><span data-ttu-id="663dc-167">検索対象の型の <see cref="P:System.Type.FullName" />。</span><span class="sxs-lookup"><span data-stu-id="663dc-167">The <see cref="P:System.Type.FullName" /> of the type to locate.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="663dc-168">型名の大文字と小文字の違いを無視する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="663dc-168"><see langword="true" /> to ignore the case of the type name; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="663dc-169">オプションの大文字小文字を区別する検索を使用してこのアセンブリから指定された型を検索し、システム アクティベーターを使用してこの型のインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="663dc-169">Locates the specified type from this assembly and creates an instance of it using the system activator, with optional case-sensitive search.</span></span></summary>
        <returns><span data-ttu-id="663dc-170">既定のコンストラクターを使用して作成された指定した型のインスタンス。<see langword="null" /> が見つからない場合は、<paramref name="typeName" />。</span><span class="sxs-lookup"><span data-stu-id="663dc-170">An instance of the specified type created with the default constructor; or <see langword="null" /> if <paramref name="typeName" /> is not found.</span></span> <span data-ttu-id="663dc-171">型は、既定のバインダーを使用して解決されます。カルチャまたはアクティベーション属性は指定せず、<see cref="T:System.Reflection.BindingFlags" /> を <see langword="Public" /> または <see langword="Instance" /> に設定します。</span><span class="sxs-lookup"><span data-stu-id="663dc-171">The type is resolved using the default binder, without specifying culture or activation attributes, and with <see cref="T:System.Reflection.BindingFlags" /> set to <see langword="Public" /> or <see langword="Instance" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663dc-172">ランタイムが検索できない場合`typeName`で、<xref:System.Reflection.Assembly>インスタンスが返されます`null`例外をスローする代わりにします。</span><span class="sxs-lookup"><span data-stu-id="663dc-172">If the runtime is unable to find `typeName` in the <xref:System.Reflection.Assembly> instance, it returns `null` instead of throwing an exception.</span></span> <span data-ttu-id="663dc-173">これは、ために発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="663dc-173">This might happen because:</span></span>  
  
-   <span data-ttu-id="663dc-174">型の完全修飾名を指定していません。</span><span class="sxs-lookup"><span data-stu-id="663dc-174">You haven't specified the fully qualified name of the type.</span></span>  
  
-   <span data-ttu-id="663dc-175">現在の型が存在しない<xref:System.Reflection.Assembly>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="663dc-175">The type doesn't exist in the current <xref:System.Reflection.Assembly> instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="663dc-176">次の例では、定義、`Person`クラス。</span><span class="sxs-lookup"><span data-stu-id="663dc-176">The following example defines a `Person` class.</span></span> <span data-ttu-id="663dc-177">呼び出して、 <xref:System.Reflection.Assembly.CreateInstance%28System.String%29> 、インスタンス化するメソッドが、大文字と小文字の`typeName`の型の引数と一致しません<xref:System.Type.FullName%2A>プロパティ、メソッドを返します`null`します。</span><span class="sxs-lookup"><span data-stu-id="663dc-177">It then calls the <xref:System.Reflection.Assembly.CreateInstance%28System.String%29> method to instantiate it, but because the casing of the `typeName` argument doesn't match that of the type's <xref:System.Type.FullName%2A> property, the method returns `null`.</span></span> <span data-ttu-id="663dc-178">例での同じ文字列のパスと、<xref:System.Reflection.Assembly.CreateInstance%28System.String%2CSystem.Boolean%29>オーバー ロードし、比較は、大文字と小文字があることを指定します、`Person`クラスが見つかると`Person`オブジェクトが正常にインスタンス化します。</span><span class="sxs-lookup"><span data-stu-id="663dc-178">When the example passes the same string to the <xref:System.Reflection.Assembly.CreateInstance%28System.String%2CSystem.Boolean%29> overload and specifies that the comparison should be case-insensitive, the `Person` class is found, and a `Person` object is successfully instantiated.</span></span>  
  
 [!code-csharp[System.Reflection.Assembly.CreateInstance#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflection.assembly.createinstance/cs/createinstance2.cs#2)]
 [!code-vb[System.Reflection.Assembly.CreateInstance#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.reflection.assembly.createinstance/vb/createinstance2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="663dc-179"><paramref name="typeName" /> は空の文字列 ("") または null 文字で始まる文字列です。</span><span class="sxs-lookup"><span data-stu-id="663dc-179"><paramref name="typeName" /> is an empty string ("") or a string beginning with a null character.</span></span>  
  
<span data-ttu-id="663dc-180">または</span><span class="sxs-lookup"><span data-stu-id="663dc-180">-or-</span></span> 
<span data-ttu-id="663dc-181">現在のアセンブリは、リフレクションのみのコンテキストに読み込まれました。</span><span class="sxs-lookup"><span data-stu-id="663dc-181">The current assembly was loaded into the reflection-only context.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="663dc-182">一致するコンストラクターが見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="663dc-182">No matching constructor was found.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="663dc-183"><paramref name="typeName" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="663dc-183"><paramref name="typeName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="663dc-184"><paramref name="typeName" /> には見つからなかった依存アセンブリが必要です。</span><span class="sxs-lookup"><span data-stu-id="663dc-184"><paramref name="typeName" /> requires a dependent assembly that could not be found.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="663dc-185"><paramref name="typeName" /> には、見つかったものの読み込めなかった依存アセンブリが必要です。</span><span class="sxs-lookup"><span data-stu-id="663dc-185"><paramref name="typeName" /> requires a dependent assembly that was found but could not be loaded.</span></span>  
  
<span data-ttu-id="663dc-186">または</span><span class="sxs-lookup"><span data-stu-id="663dc-186">-or-</span></span> 
<span data-ttu-id="663dc-187">現在のアセンブリはリフレクションのみのコンテキストに読み込まれましたが、<paramref name="typeName" /> には事前に読み込まれていない依存アセンブリが必要です。</span><span class="sxs-lookup"><span data-stu-id="663dc-187">The current assembly was loaded into the reflection-only context, and <paramref name="typeName" /> requires a dependent assembly that was not preloaded.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="663dc-188"><paramref name="typeName" /> には依存アセンブリが必要ですが、ファイルは有効なアセンブリではありません。</span><span class="sxs-lookup"><span data-stu-id="663dc-188"><paramref name="typeName" /> requires a dependent assembly, but the file is not a valid assembly.</span></span>  
  
<span data-ttu-id="663dc-189">または</span><span class="sxs-lookup"><span data-stu-id="663dc-189">-or-</span></span> 
 <span data-ttu-id="663dc-190"><paramref name="typeName" /> には、現在読み込まれているバージョンより新しいバージョンのランタイム用にコンパイルされた依存アセンブリが必要です。</span><span class="sxs-lookup"><span data-stu-id="663dc-190"><paramref name="typeName" /> requires a dependent assembly that was compiled for a version of the runtime that is later than the currently loaded version.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="663dc-191">呼び出されたときに遅延バインディング メカニズムを通じてなど<see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />します。</span><span class="sxs-lookup"><span data-stu-id="663dc-191">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="663dc-192">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="663dc-192">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public virtual object CreateInstance (string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateInstance(string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ CreateInstance(System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberSignature Language="F#" Value="abstract member CreateInstance : string * bool * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo * obj[] -&gt; obj&#xA;override this.CreateInstance : string * bool * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo * obj[] -&gt; obj" Usage="assembly.CreateInstance (typeName, ignoreCase, bindingAttr, binder, args, culture, activationAttributes)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="ignoreCase" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="binder" Type="System.Reflection.Binder" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="args" Type="System.Object[]" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="5" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="activationAttributes" Type="System.Object[]" Index="6" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="typeName"><span data-ttu-id="663dc-193">検索対象の型の <see cref="P:System.Type.FullName" />。</span><span class="sxs-lookup"><span data-stu-id="663dc-193">The <see cref="P:System.Type.FullName" /> of the type to locate.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="663dc-194">型名の大文字と小文字の違いを無視する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="663dc-194"><see langword="true" /> to ignore the case of the type name; otherwise, <see langword="false" />.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="663dc-195">検索の実行方法に影響を与えるビットマスク。</span><span class="sxs-lookup"><span data-stu-id="663dc-195">A bitmask that affects the way in which the search is conducted.</span></span> <span data-ttu-id="663dc-196">値は、<see cref="T:System.Reflection.BindingFlags" /> のビット フラグの組み合わせです。</span><span class="sxs-lookup"><span data-stu-id="663dc-196">The value is a combination of bit flags from <see cref="T:System.Reflection.BindingFlags" />.</span></span></param>
        <param name="binder"><span data-ttu-id="663dc-197">バインディング、引数型の強制変換、メンバーの呼び出し、および、リフレクションによる <see langword="MemberInfo" /> オブジェクトの取得を有効にするオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="663dc-197">An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <see langword="MemberInfo" /> objects via reflection.</span></span> <span data-ttu-id="663dc-198"><paramref name="binder" /> が <see langword="null" /> の場合は、既定のバインダーが使用されます。</span><span class="sxs-lookup"><span data-stu-id="663dc-198">If <paramref name="binder" /> is <see langword="null" />, the default binder is used.</span></span></param>
        <param name="args"><span data-ttu-id="663dc-199">コンストラクターに渡す引数を格納する配列。</span><span class="sxs-lookup"><span data-stu-id="663dc-199">An array that contains the arguments to be passed to the constructor.</span></span> <span data-ttu-id="663dc-200">この引数の配列は、呼び出すコンストラクターのパラメーターと、数、順序、および型が同じでなければなりません。</span><span class="sxs-lookup"><span data-stu-id="663dc-200">This array of arguments must match in number, order, and type the parameters of the constructor to be invoked.</span></span> <span data-ttu-id="663dc-201">既定のコンストラクターを使用する場合は、<paramref name="args" /> を空の配列または <see langword="null" /> にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="663dc-201">If the default constructor is desired, <paramref name="args" /> must be an empty array or <see langword="null" />.</span></span></param>
        <param name="culture"><span data-ttu-id="663dc-202">型の強制変換を制御するために使用する <see langword="CultureInfo" /> のインスタンス。</span><span class="sxs-lookup"><span data-stu-id="663dc-202">An instance of <see langword="CultureInfo" /> used to govern the coercion of types.</span></span> <span data-ttu-id="663dc-203"><see langword="null" /> の場合は、現在のスレッドの <see langword="CultureInfo" /> が使用されます。</span><span class="sxs-lookup"><span data-stu-id="663dc-203">If this is <see langword="null" />, the <see langword="CultureInfo" /> for the current thread is used.</span></span> <span data-ttu-id="663dc-204">(これは、たとえば、1000 を表す <see langword="String" /> を <see langword="Double" /> 値に変換する場合に必要です。これは、カルチャによって 1000 の表記が異なるためです。)</span><span class="sxs-lookup"><span data-stu-id="663dc-204">(This is necessary to convert a <see langword="String" /> that represents 1000 to a <see langword="Double" /> value, for example, since 1000 is represented differently by different cultures.)</span></span></param>
        <param name="activationAttributes"><span data-ttu-id="663dc-205">アクティべーションに参加できる 1 つ以上の属性の配列。</span><span class="sxs-lookup"><span data-stu-id="663dc-205">An array of one or more attributes that can participate in activation.</span></span> <span data-ttu-id="663dc-206">通常、リモート オブジェクトをアクティブ化するために必要な URL を指定する 1 つの <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> オブジェクトを含む配列。</span><span class="sxs-lookup"><span data-stu-id="663dc-206">Typically, an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span></span>  <span data-ttu-id="663dc-207">このパラメーターは、クライアント側でアクティブ化されるオブジェクトに関連しています。</span><span class="sxs-lookup"><span data-stu-id="663dc-207">This parameter is related to client-activated objects.</span></span> <span data-ttu-id="663dc-208">クライアント アクティベーションは、下位互換性のために残されているレガシ テクノロジです。新規の開発には使用しないでください。</span><span class="sxs-lookup"><span data-stu-id="663dc-208">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span></span> <span data-ttu-id="663dc-209">分散アプリケーションは、代わりに Windows Communication Foundation (WCF) を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="663dc-209">Distributed applications should instead use Windows Communication Foundation.</span></span></param>
        <summary><span data-ttu-id="663dc-210">オプションの大文字小文字を区別する検索を使用して、このアセンブリから指定された型を検索し、システム アクティベーターを使用してこの型のインスタンスを作成し、指定されたカルチャ設定、引数、バインディング属性、およびアクティベーション属性を設定します。</span><span class="sxs-lookup"><span data-stu-id="663dc-210">Locates the specified type from this assembly and creates an instance of it using the system activator, with optional case-sensitive search and having the specified culture, arguments, and binding and activation attributes.</span></span></summary>
        <returns><span data-ttu-id="663dc-211">指定した型のインスタンス。<paramref name="typeName" /> が見つからない場合は、<see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="663dc-211">An instance of the specified type, or <see langword="null" /> if <paramref name="typeName" /> is not found.</span></span> <span data-ttu-id="663dc-212">指定された引数は、型を解決するため、およびインスタンスの作成に使用されるコンストラクターをバインドするために使用されます。</span><span class="sxs-lookup"><span data-stu-id="663dc-212">The supplied arguments are used to resolve the type, and to bind the constructor that is used to create the instance.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="663dc-213"><paramref name="typeName" /> は空の文字列 ("") または null 文字で始まる文字列です。</span><span class="sxs-lookup"><span data-stu-id="663dc-213"><paramref name="typeName" /> is an empty string ("") or a string beginning with a null character.</span></span>  
  
<span data-ttu-id="663dc-214">または</span><span class="sxs-lookup"><span data-stu-id="663dc-214">-or-</span></span> 
<span data-ttu-id="663dc-215">現在のアセンブリは、リフレクションのみのコンテキストに読み込まれました。</span><span class="sxs-lookup"><span data-stu-id="663dc-215">The current assembly was loaded into the reflection-only context.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="663dc-216"><paramref name="typeName" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="663dc-216"><paramref name="typeName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="663dc-217">一致するコンストラクターが見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="663dc-217">No matching constructor was found.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="663dc-218">空でないアクティベーション属性の配列は、<see cref="T:System.MarshalByRefObject" /> から継承されていない型に渡されます。</span><span class="sxs-lookup"><span data-stu-id="663dc-218">A non-empty activation attributes array is passed to a type that does not inherit from <see cref="T:System.MarshalByRefObject" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="663dc-219"><paramref name="typeName" /> には見つからなかった依存アセンブリが必要です。</span><span class="sxs-lookup"><span data-stu-id="663dc-219"><paramref name="typeName" /> requires a dependent assembly that could not be found.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="663dc-220"><paramref name="typeName" /> には、見つかったものの読み込めなかった依存アセンブリが必要です。</span><span class="sxs-lookup"><span data-stu-id="663dc-220"><paramref name="typeName" /> requires a dependent assembly that was found but could not be loaded.</span></span>  
  
<span data-ttu-id="663dc-221">または</span><span class="sxs-lookup"><span data-stu-id="663dc-221">-or-</span></span> 
<span data-ttu-id="663dc-222">現在のアセンブリはリフレクションのみのコンテキストに読み込まれましたが、<paramref name="typeName" /> には事前に読み込まれていない依存アセンブリが必要です。</span><span class="sxs-lookup"><span data-stu-id="663dc-222">The current assembly was loaded into the reflection-only context, and <paramref name="typeName" /> requires a dependent assembly that was not preloaded.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="663dc-223"><paramref name="typeName" /> には依存アセンブリが必要ですが、ファイルは有効なアセンブリではありません。</span><span class="sxs-lookup"><span data-stu-id="663dc-223"><paramref name="typeName" /> requires a dependent assembly, but the file is not a valid assembly.</span></span>  
  
<span data-ttu-id="663dc-224">または</span><span class="sxs-lookup"><span data-stu-id="663dc-224">-or-</span></span> 
 <span data-ttu-id="663dc-225"><paramref name="typeName" /> には、現在読み込まれているバージョンより新しいバージョンのランタイム用にコンパイルされた依存アセンブリが必要です。</span><span class="sxs-lookup"><span data-stu-id="663dc-225"><paramref name="typeName" /> requires a dependent assembly which that was compiled for a version of the runtime that is later than the currently loaded version.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="663dc-226">呼び出されたときに遅延バインディング メカニズムを通じてなど<see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />します。</span><span class="sxs-lookup"><span data-stu-id="663dc-226">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="663dc-227">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="663dc-227">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="663dc-228">デリゲートのインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="663dc-228">to create an instance of a delegate.</span></span> <span data-ttu-id="663dc-229">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="663dc-229">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateQualifiedName">
      <MemberSignature Language="C#" Value="public static string CreateQualifiedName (string assemblyName, string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string CreateQualifiedName(string assemblyName, string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.CreateQualifiedName(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateQualifiedName (assemblyName As String, typeName As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ CreateQualifiedName(System::String ^ assemblyName, System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="static member CreateQualifiedName : string * string -&gt; string" Usage="System.Reflection.Assembly.CreateQualifiedName (assemblyName, typeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="typeName" Type="System.String" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="assemblyName"><span data-ttu-id="663dc-230">アセンブリの表示名。</span><span class="sxs-lookup"><span data-stu-id="663dc-230">The display name of an assembly.</span></span></param>
        <param name="typeName"><span data-ttu-id="663dc-231">型の完全名。</span><span class="sxs-lookup"><span data-stu-id="663dc-231">The full name of a type.</span></span></param>
        <summary><span data-ttu-id="663dc-232">アセンブリの表示名で修飾された型名を作成します。</span><span class="sxs-lookup"><span data-stu-id="663dc-232">Creates the name of a type qualified by the display name of its assembly.</span></span></summary>
        <returns><span data-ttu-id="663dc-233">アセンブリの表示名で修飾された型の完全名。</span><span class="sxs-lookup"><span data-stu-id="663dc-233">The full name of the type qualified by the display name of the assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663dc-234">返される文字列の形式です。</span><span class="sxs-lookup"><span data-stu-id="663dc-234">The format of the returned string is:</span></span>  
  
 <span data-ttu-id="663dc-235">\<FullTypeName>, \<AssemblyDisplayName></span><span class="sxs-lookup"><span data-stu-id="663dc-235">\<FullTypeName>, \<AssemblyDisplayName></span></span>  
  
 <span data-ttu-id="663dc-236">参照してください<xref:System.Reflection.AssemblyName>アセンブリの表示名の形式の説明についてはします。</span><span class="sxs-lookup"><span data-stu-id="663dc-236">See <xref:System.Reflection.AssemblyName> for a description of the format of the display name of an assembly.</span></span>  
  
 <span data-ttu-id="663dc-237">共通言語ランタイムのバージョンの変更に合わせて、自分で修飾名を構築するのではなく、このメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="663dc-237">To accommodate changes in versions of the common language runtime, use this method rather than constructing the qualified name yourself.</span></span>  <span data-ttu-id="663dc-238">修飾アセンブリ名については、次を参照してください。<xref:System.Type.AssemblyQualifiedName%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="663dc-238">For information about qualified assembly names, see <xref:System.Type.AssemblyQualifiedName%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomAttributes">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Reflection.CustomAttributeData&gt; CustomAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.CustomAttributeData&gt; CustomAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.CustomAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CustomAttributes As IEnumerable(Of CustomAttributeData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;System::Reflection::CustomAttributeData ^&gt; ^ CustomAttributes { System::Collections::Generic::IEnumerable&lt;System::Reflection::CustomAttributeData ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CustomAttributes : seq&lt;System.Reflection.CustomAttributeData&gt;" Usage="System.Reflection.Assembly.CustomAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Reflection.CustomAttributeData&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="663dc-239">このアセンブリのカスタム属性を含むコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="663dc-239">Gets a collection that contains this assembly's custom attributes.</span></span></summary>
        <value><span data-ttu-id="663dc-240">このアセンブリのカスタム属性を含むコレクション。</span><span class="sxs-lookup"><span data-stu-id="663dc-240">A collection that contains this assembly's custom attributes.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefinedTypes">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Reflection.TypeInfo&gt; DefinedTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.TypeInfo&gt; DefinedTypes" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.DefinedTypes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DefinedTypes As IEnumerable(Of TypeInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;System::Reflection::TypeInfo ^&gt; ^ DefinedTypes { System::Collections::Generic::IEnumerable&lt;System::Reflection::TypeInfo ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefinedTypes : seq&lt;System.Reflection.TypeInfo&gt;" Usage="System.Reflection.Assembly.DefinedTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Reflection.TypeInfo&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="663dc-241">このアセンブリで定義されている型のコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="663dc-241">Gets a collection of the types defined in this assembly.</span></span></summary>
        <value><span data-ttu-id="663dc-242">このアセンブリで定義されている型のコレクション。</span><span class="sxs-lookup"><span data-stu-id="663dc-242">A collection of the types defined in this assembly.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663dc-243"><xref:System.Reflection.Assembly.DefinedTypes%2A>プロパティに相当する、<xref:System.Reflection.Assembly.GetTypes%2A?displayProperty=nameWithType>点を除いて、メソッド、<xref:System.Reflection.Assembly.DefinedTypes%2A>プロパティのコレクションを返します<xref:System.Reflection.TypeInfo>オブジェクト、および<xref:System.Reflection.Assembly.GetTypes%2A?displayProperty=nameWithType>メソッドの配列を返します<xref:System.Type>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="663dc-243">The <xref:System.Reflection.Assembly.DefinedTypes%2A> property is comparable to the <xref:System.Reflection.Assembly.GetTypes%2A?displayProperty=nameWithType> method, except that the <xref:System.Reflection.Assembly.DefinedTypes%2A> property returns a collection of <xref:System.Reflection.TypeInfo> objects, and the <xref:System.Reflection.Assembly.GetTypes%2A?displayProperty=nameWithType> method returns an array of <xref:System.Type> objects.</span></span>  
  
 <span data-ttu-id="663dc-244">返される配列には、入れ子にされた型が含まれています。</span><span class="sxs-lookup"><span data-stu-id="663dc-244">The returned array includes nested types.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetTypes" />
      </Docs>
    </Member>
    <Member MemberName="EntryPoint">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.MethodInfo EntryPoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodInfo EntryPoint" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.EntryPoint" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property EntryPoint As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::MethodInfo ^ EntryPoint { System::Reflection::MethodInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EntryPoint : System.Reflection.MethodInfo" Usage="System.Reflection.Assembly.EntryPoint" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Assembly.EntryPoint</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="663dc-245">このアセンブリのエントリ ポイントを取得します。</span><span class="sxs-lookup"><span data-stu-id="663dc-245">Gets the entry point of this assembly.</span></span></summary>
        <value><span data-ttu-id="663dc-246">このアセンブリのエントリ ポイントを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="663dc-246">An object that represents the entry point of this assembly.</span></span> <span data-ttu-id="663dc-247">エントリ ポイントが見つからない場合 (アセンブリが DLL の場合など) は、<see langword="null" /> が返されます。</span><span class="sxs-lookup"><span data-stu-id="663dc-247">If no entry point is found (for example, the assembly is a DLL), <see langword="null" /> is returned.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="assembly.Equals o" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.Equals(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="663dc-248">このインスタンスと比較するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="663dc-248">The object to compare with this instance.</span></span></param>
        <summary><span data-ttu-id="663dc-249">このアセンブリと指定したオブジェクトが等しいかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="663dc-249">Determines whether this assembly and the specified object are equal.</span></span></summary>
        <returns><span data-ttu-id="663dc-250"><see langword="true" /> がこのインスタンスと等しい場合は <paramref name="o" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="663dc-250"><see langword="true" /> if <paramref name="o" /> is equal to this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663dc-251"><xref:System.Reflection.Assembly.Equals%2A>メソッドは参照の等価性を判断するためのテストを実行するかどうか、現在のインスタンスと`o`が等しい。</span><span class="sxs-lookup"><span data-stu-id="663dc-251">The <xref:System.Reflection.Assembly.Equals%2A> method performs a test for reference equality to determine whether the current instance and `o` are equal.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EscapedCodeBase">
      <MemberSignature Language="C#" Value="public virtual string EscapedCodeBase { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EscapedCodeBase" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.EscapedCodeBase" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property EscapedCodeBase As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ EscapedCodeBase { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EscapedCodeBase : string" Usage="System.Reflection.Assembly.EscapedCodeBase" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Assembly.EscapedCodeBase</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="663dc-252">コードベースを表す URI を、エスケープ文字も含めて取得します。</span><span class="sxs-lookup"><span data-stu-id="663dc-252">Gets the URI, including escape characters, that represents the codebase.</span></span></summary>
        <value><span data-ttu-id="663dc-253">エスケープ文字を含んだ URI。</span><span class="sxs-lookup"><span data-stu-id="663dc-253">A URI with escape characters.</span></span></value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="663dc-254">パスにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="663dc-254">for access to the path.</span></span> <span data-ttu-id="663dc-255">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span><span class="sxs-lookup"><span data-stu-id="663dc-255">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Evidence">
      <MemberSignature Language="C#" Value="public virtual System.Security.Policy.Evidence Evidence { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Policy.Evidence Evidence" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.Evidence" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Evidence As Evidence" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Policy::Evidence ^ Evidence { System::Security::Policy::Evidence ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Evidence : System.Security.Policy.Evidence" Usage="System.Reflection.Assembly.Evidence" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Assembly.Evidence</InterfaceMember>
        <InterfaceMember>P:System.Security.IEvidenceFactory.Evidence</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.Evidence</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="663dc-256">このアセンブリの証拠を取得します。</span><span class="sxs-lookup"><span data-stu-id="663dc-256">Gets the evidence for this assembly.</span></span></summary>
        <value><span data-ttu-id="663dc-257">このアセンブリの証拠。</span><span class="sxs-lookup"><span data-stu-id="663dc-257">The evidence for this assembly.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663dc-258">証拠とは、セキュリティ ポリシーがアクセス許可を決定するときに使用する一連の情報 (コードにどのようなアクセス許可を付与できるかなど) のことです。</span><span class="sxs-lookup"><span data-stu-id="663dc-258">Evidence is the set of information that constitutes input to security policy decisions, such as what permissions can be granted to code.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="663dc-259">証拠とアセンブリの読み込み。</span><span class="sxs-lookup"><span data-stu-id="663dc-259">to load an assembly with evidence.</span></span> <span data-ttu-id="663dc-260">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span><span class="sxs-lookup"><span data-stu-id="663dc-260">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span></span></permission>
        <altmember cref="T:System.Security.Policy.Evidence" />
      </Docs>
    </Member>
    <Member MemberName="ExportedTypes">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;Type&gt; ExportedTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; ExportedTypes" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.ExportedTypes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ExportedTypes As IEnumerable(Of Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ ExportedTypes { System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ExportedTypes : seq&lt;Type&gt;" Usage="System.Reflection.Assembly.ExportedTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Type&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="663dc-261">アセンブリの外側で参照できる、このアセンブリ内で定義されているパブリック型のコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="663dc-261">Gets a collection of the public types defined in this assembly that are visible outside the assembly.</span></span></summary>
        <value><span data-ttu-id="663dc-262">アセンブリの外側で参照できる、このアセンブリ内で定義されているパブリック型のコレクション。</span><span class="sxs-lookup"><span data-stu-id="663dc-262">A collection of the public types defined in this assembly that are visible outside the assembly.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FullName">
      <MemberSignature Language="C#" Value="public virtual string FullName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullName" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.FullName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property FullName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ FullName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FullName : string" Usage="System.Reflection.Assembly.FullName" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Assembly.FullName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="663dc-263">アセンブリの表示名を取得します。</span><span class="sxs-lookup"><span data-stu-id="663dc-263">Gets the display name of the assembly.</span></span></summary>
        <value><span data-ttu-id="663dc-264">アセンブリの表示名。</span><span class="sxs-lookup"><span data-stu-id="663dc-264">The display name of the assembly.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663dc-265">参照してください<xref:System.Reflection.AssemblyName>アセンブリの表示名の形式の説明についてはします。</span><span class="sxs-lookup"><span data-stu-id="663dc-265">See <xref:System.Reflection.AssemblyName> for a description of the format of the display name of an assembly.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="663dc-266">表示名を解析するコードを記述することは推奨されません。</span><span class="sxs-lookup"><span data-stu-id="663dc-266">Writing your own code to parse display names is not recommended.</span></span> <span data-ttu-id="663dc-267">代わりに、表示名を渡す、<xref:System.Reflection.AssemblyName.%23ctor%2A>コンス トラクターは、解析し、新しいの適切なフィールドを設定します。<xref:System.Reflection.AssemblyName>します。</span><span class="sxs-lookup"><span data-stu-id="663dc-267">Instead, pass the display name to the <xref:System.Reflection.AssemblyName.%23ctor%2A> constructor, which parses it and populates the appropriate fields of the new <xref:System.Reflection.AssemblyName>.</span></span>  
  
 <span data-ttu-id="663dc-268">.NET Framework version 2.0 では、プロセッサ アーキテクチャは、アセンブリの id に追加され、アセンブリ名の文字列の一部として指定できます。</span><span class="sxs-lookup"><span data-stu-id="663dc-268">In the .NET Framework version 2.0, processor architecture is added to assembly identity, and can be specified as part of assembly name strings.</span></span> <span data-ttu-id="663dc-269">ただし、これが含まれていませんによって返される文字列で、<xref:System.Reflection.Assembly.FullName%2A>互換性のためのプロパティ。</span><span class="sxs-lookup"><span data-stu-id="663dc-269">However, it is not included in the string returned by the <xref:System.Reflection.Assembly.FullName%2A> property, for compatibility reasons.</span></span> <span data-ttu-id="663dc-270">以下を参照してください。<xref:System.Reflection.AssemblyName.ProcessorArchitecture%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="663dc-270">See <xref:System.Reflection.AssemblyName.ProcessorArchitecture%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="663dc-271">次の例は、現在実行中のアセンブリの表示名とを含むアセンブリの表示名を取得します。、<xref:System.Int32>型 (`int` c# で`Integer`Visual Basic で)。</span><span class="sxs-lookup"><span data-stu-id="663dc-271">The following example retrieves the display name of the currently executing assembly, and the display name of the assembly that contains the <xref:System.Int32> type (`int` in C#, `Integer` in Visual Basic).</span></span>  
  
 [!code-cpp[Assembly.FullName#1](~/samples/snippets/cpp/VS_Snippets_CLR/Assembly.FullName/CPP/Example.cpp#1)]
 [!code-csharp[Assembly.FullName#1](~/samples/snippets/csharp/VS_Snippets_CLR/Assembly.FullName/CS/Example.cs#1)]
 [!code-vb[Assembly.FullName#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Assembly.FullName/VB/Example.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/reflection-and-codedom/specifying-fully-qualified-type-names.md"><span data-ttu-id="663dc-272">完全修飾型名の指定</span><span class="sxs-lookup"><span data-stu-id="663dc-272">Specifying Fully Qualified Type Names</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetAssembly">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly GetAssembly (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly GetAssembly(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetAssembly(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ GetAssembly(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GetAssembly : Type -&gt; System.Reflection.Assembly" Usage="System.Reflection.Assembly.GetAssembly type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="663dc-273">返されるアセンブリ内の型を表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="663dc-273">An object representing a type in the assembly that will be returned.</span></span></param>
        <summary><span data-ttu-id="663dc-274">指定した型が定義されている、現在読み込み済みのアセンブリを取得します。</span><span class="sxs-lookup"><span data-stu-id="663dc-274">Gets the currently loaded assembly in which the specified type is defined.</span></span></summary>
        <returns><span data-ttu-id="663dc-275">指定された型が定義されているアセンブリ。</span><span class="sxs-lookup"><span data-stu-id="663dc-275">The assembly in which the specified type is defined.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663dc-276">値を取得するのにはこのメソッドを呼び出す、<xref:System.Type.Assembly?displayProperty=nameWithType>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="663dc-276">Calling this method is equivalent to retrieving the value of the  <xref:System.Type.Assembly?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="663dc-277">ただし、<xref:System.Type.Assembly?displayProperty=nameWithType>プロパティが通常よりも優れたパフォーマンスを提供します。</span><span class="sxs-lookup"><span data-stu-id="663dc-277">However, the <xref:System.Type.Assembly?displayProperty=nameWithType> property typically offers superior performance.</span></span>  
  
 <span data-ttu-id="663dc-278">このメソッドを呼び出すために必要な<xref:System.Type>オブジェクトで、クラスが定義されているアセンブリが読み込む既に必要があることを意味します。</span><span class="sxs-lookup"><span data-stu-id="663dc-278">In order to call this method, you must have a <xref:System.Type> object, which means that the assembly in which the class is defined must already be loaded.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="663dc-279">次の例を含むアセンブリの取得、<xref:System.Int32>を入力し、その名前とファイルの場所が表示されます。</span><span class="sxs-lookup"><span data-stu-id="663dc-279">The following example retrieves the assembly that contains the <xref:System.Int32> type and displays its name and file location.</span></span>  
  
 [!code-cpp[System.Reflection.Assembly#12](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Assembly/CPP/GetAssembly1.cpp#12)]
 [!code-csharp[System.Reflection.Assembly#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Assembly/CS/GetAssembly1.cs#12)]
 [!code-vb[System.Reflection.Assembly#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Assembly/VB/GetAssembly1.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="663dc-280"><paramref name="type" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="663dc-280"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="663dc-281">呼び出されたときに遅延バインディング メカニズムを通じてなど<see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />します。</span><span class="sxs-lookup"><span data-stu-id="663dc-281">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="663dc-282">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="663dc-282">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetCallingAssembly">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly GetCallingAssembly ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly GetCallingAssembly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetCallingAssembly" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCallingAssembly () As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ GetCallingAssembly();" />
      <MemberSignature Language="F#" Value="static member GetCallingAssembly : unit -&gt; System.Reflection.Assembly" Usage="System.Reflection.Assembly.GetCallingAssembly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="663dc-283">現在実行中のメソッドを呼び出したメソッドの <see cref="T:System.Reflection.Assembly" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="663dc-283">Returns the <see cref="T:System.Reflection.Assembly" /> of the method that invoked the currently executing method.</span></span></summary>
        <returns><span data-ttu-id="663dc-284">現在実行中のメソッドを呼び出したメソッドの <see langword="Assembly" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="663dc-284">The <see langword="Assembly" /> object of the method that invoked the currently executing method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663dc-285">かどうか、メソッドを呼び出す、<xref:System.Reflection.Assembly.GetCallingAssembly%2A>メソッドは、- イン タイム (JIT) コンパイラによってインラインで展開されるか、呼び出し元がインライン展開の場合は、アセンブリであるによって返される<xref:System.Reflection.Assembly.GetCallingAssembly%2A>が予期せずに異なる場合があります。</span><span class="sxs-lookup"><span data-stu-id="663dc-285">If the method that calls the <xref:System.Reflection.Assembly.GetCallingAssembly%2A> method is expanded inline by the just-in-time (JIT) compiler, or if its caller is expanded inline, the assembly that is returned by <xref:System.Reflection.Assembly.GetCallingAssembly%2A> may differ unexpectedly.</span></span> <span data-ttu-id="663dc-286">たとえば、次のメソッドおよびアセンブリがあるとします。</span><span class="sxs-lookup"><span data-stu-id="663dc-286">For example, consider the following methods and assemblies:</span></span>  
  
-   <span data-ttu-id="663dc-287">メソッド`M1`アセンブリで`A1`呼び出し<xref:System.Reflection.Assembly.GetCallingAssembly%2A>します。</span><span class="sxs-lookup"><span data-stu-id="663dc-287">Method `M1` in assembly `A1` calls <xref:System.Reflection.Assembly.GetCallingAssembly%2A>.</span></span>  
  
-   <span data-ttu-id="663dc-288">メソッド`M2`アセンブリで`A2`呼び出し`M1`します。</span><span class="sxs-lookup"><span data-stu-id="663dc-288">Method `M2` in assembly `A2` calls `M1`.</span></span>  
  
-   <span data-ttu-id="663dc-289">メソッド`M3`アセンブリで`A3`呼び出し`M2`します。</span><span class="sxs-lookup"><span data-stu-id="663dc-289">Method `M3` in assembly `A3` calls `M2`.</span></span>  
  
 <span data-ttu-id="663dc-290">ときに`M1`、インラインでない<xref:System.Reflection.Assembly.GetCallingAssembly%2A>返します`A2`します。</span><span class="sxs-lookup"><span data-stu-id="663dc-290">When `M1` is not inlined, <xref:System.Reflection.Assembly.GetCallingAssembly%2A> returns `A2`.</span></span> <span data-ttu-id="663dc-291">ときに`M1`インライン化される、<xref:System.Reflection.Assembly.GetCallingAssembly%2A>返します`A3`します。</span><span class="sxs-lookup"><span data-stu-id="663dc-291">When `M1` is inlined, <xref:System.Reflection.Assembly.GetCallingAssembly%2A> returns `A3`.</span></span> <span data-ttu-id="663dc-292">同様に、 `M2` 、インラインでない<xref:System.Reflection.Assembly.GetCallingAssembly%2A>返します`A2`します。</span><span class="sxs-lookup"><span data-stu-id="663dc-292">Similarly, when `M2` is not inlined, <xref:System.Reflection.Assembly.GetCallingAssembly%2A> returns `A2`.</span></span> <span data-ttu-id="663dc-293">ときに`M2`インライン化される、<xref:System.Reflection.Assembly.GetCallingAssembly%2A>返します`A3`します。</span><span class="sxs-lookup"><span data-stu-id="663dc-293">When `M2` is inlined, <xref:System.Reflection.Assembly.GetCallingAssembly%2A> returns `A3`.</span></span>  
  
 <span data-ttu-id="663dc-294">この効果にも発生するとき`M1`から末尾呼び出しとして実行します。 `M2`、または`M2`から末尾呼び出しとして実行します。 `M3`。</span><span class="sxs-lookup"><span data-stu-id="663dc-294">This effect also occurs when `M1` executes as a tail call from `M2`, or when `M2` executes as a tail call from `M3`.</span></span> <span data-ttu-id="663dc-295">JIT コンパイラを防ぐことができますインライン化メソッドを呼び出す<xref:System.Reflection.Assembly.GetCallingAssembly%2A>、適用することで、<xref:System.Runtime.CompilerServices.MethodImplAttribute>属性、<xref:System.Runtime.CompilerServices.MethodImplOptions.NoInlining?displayProperty=nameWithType>フラグ、末尾呼び出しを回避するための同様のメカニズムはありません。</span><span class="sxs-lookup"><span data-stu-id="663dc-295">You can prevent the JIT compiler from inlining the method that calls <xref:System.Reflection.Assembly.GetCallingAssembly%2A>, by applying the <xref:System.Runtime.CompilerServices.MethodImplAttribute> attribute with the <xref:System.Runtime.CompilerServices.MethodImplOptions.NoInlining?displayProperty=nameWithType> flag, but there is no similar mechanism for preventing tail calls.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="663dc-296">次の例では、現在のメソッドの呼び出し元のアセンブリを取得します。</span><span class="sxs-lookup"><span data-stu-id="663dc-296">The following example gets the calling assembly of the current method.</span></span>  
  
 [!code-cpp[System.Reflection.Assembly#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Assembly/CPP/getcallingassembly1.cpp#4)]
 [!code-csharp[System.Reflection.Assembly#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Assembly/CS/getcallingassembly1.cs#4)]
 [!code-vb[System.Reflection.Assembly#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Assembly/VB/getcallingassembly1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="663dc-297">このアセンブリのカスタム属性を取得します。</span><span class="sxs-lookup"><span data-stu-id="663dc-297">Gets the custom attributes for this assembly.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public virtual object[] GetCustomAttributes (bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] GetCustomAttributes(bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetCustomAttributes(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCustomAttributes (inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(bool inherit);" />
      <MemberSignature Language="F#" Value="abstract member GetCustomAttributes : bool -&gt; obj[]&#xA;override this.GetCustomAttributes : bool -&gt; obj[]" Usage="assembly.GetCustomAttributes inherit" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.ICustomAttributeProvider.GetCustomAttributes(System.Boolean)</InterfaceMember>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetCustomAttributes(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inherit" Type="System.Boolean" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="inherit"><span data-ttu-id="663dc-298"><see cref="T:System.Reflection.Assembly" /> 型のオブジェクトでは、この引数は無視されます。</span><span class="sxs-lookup"><span data-stu-id="663dc-298">This argument is ignored for objects of type <see cref="T:System.Reflection.Assembly" />.</span></span></param>
        <summary><span data-ttu-id="663dc-299">このアセンブリのすべてのカスタム属性を取得します。</span><span class="sxs-lookup"><span data-stu-id="663dc-299">Gets all the custom attributes for this assembly.</span></span></summary>
        <returns><span data-ttu-id="663dc-300">このアセンブリのカスタム属性を格納する配列。</span><span class="sxs-lookup"><span data-stu-id="663dc-300">An array that contains the custom attributes for this assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663dc-301">このメソッドは、対応する<xref:System.Reflection.ICustomAttributeProvider>インターフェイス メソッド。</span><span class="sxs-lookup"><span data-stu-id="663dc-301">This method implements the corresponding <xref:System.Reflection.ICustomAttributeProvider> interface method.</span></span> <span data-ttu-id="663dc-302">そのため、`inherit`は無視されますは、パラメーターを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="663dc-302">Therefore, the `inherit` parameter must be specified even though it is ignored.</span></span>  
  
 <span data-ttu-id="663dc-303">擬似属性では、属性が存在する場合に設定する必要があるコア メタデータのビットを示します。</span><span class="sxs-lookup"><span data-stu-id="663dc-303">A pseudo-attribute indicates bits of the core metadata that must be set when the attribute is present.</span></span> <span data-ttu-id="663dc-304">型のメタデータを拡張し、種類と共に保存はカスタム属性とは異なり擬似属性は型のメタデータを変更し、破棄されます。</span><span class="sxs-lookup"><span data-stu-id="663dc-304">Unlike a custom attribute that extends the metadata for a type and is saved along with the type, a pseudo-attribute modifies the metadata for the type and then is discarded.</span></span> <span data-ttu-id="663dc-305">一部の結果のビットは、既存のリフレクション Api を使用してアクセスできません。</span><span class="sxs-lookup"><span data-stu-id="663dc-305">Some of the resulting bits cannot be accessed using existing reflection APIs.</span></span>  
  
 <span data-ttu-id="663dc-306">次の表に、擬似属性とリフレクションで使用できる bits のアクセサーを示します。</span><span class="sxs-lookup"><span data-stu-id="663dc-306">The following table summarizes the different pseudo-attributes and the accessors for the bits that are available in reflection.</span></span>  
  
|<span data-ttu-id="663dc-307">擬似属性</span><span class="sxs-lookup"><span data-stu-id="663dc-307">Pseudo-Attribute</span></span>|<span data-ttu-id="663dc-308">メタデータのビット</span><span class="sxs-lookup"><span data-stu-id="663dc-308">Metadata Bits</span></span>|<span data-ttu-id="663dc-309">リフレクションのアクセサー</span><span class="sxs-lookup"><span data-stu-id="663dc-309">Reflection Accessor</span></span>|  
|-----------------------|-------------------|-------------------------|  
|<span data-ttu-id="663dc-310">DllImportAttribute</span><span class="sxs-lookup"><span data-stu-id="663dc-310">DllImportAttribute</span></span>|<span data-ttu-id="663dc-311">CorPInvokeMap</span><span class="sxs-lookup"><span data-stu-id="663dc-311">CorPInvokeMap</span></span><br /><br /> <span data-ttu-id="663dc-312">DLL 名</span><span class="sxs-lookup"><span data-stu-id="663dc-312">DLL name</span></span>|<span data-ttu-id="663dc-313">アクセサーはありません PInvokeMap に対する通常メソッド/グローバル メソッドの属性について。</span><span class="sxs-lookup"><span data-stu-id="663dc-313">No accessor for PInvokeMap for ordinary method/global method attributes.</span></span><br /><br /> <span data-ttu-id="663dc-314">DLL 名のアクセサーはありません。</span><span class="sxs-lookup"><span data-stu-id="663dc-314">No accessor for DLL name.</span></span>|  
|<span data-ttu-id="663dc-315">GuidAttribute</span><span class="sxs-lookup"><span data-stu-id="663dc-315">GuidAttribute</span></span>|<span data-ttu-id="663dc-316">実際のカスタム属性として保存されます。</span><span class="sxs-lookup"><span data-stu-id="663dc-316">Stored as a real custom attribute.</span></span>|<span data-ttu-id="663dc-317">実際のカスタム属性としてアクセスします。</span><span class="sxs-lookup"><span data-stu-id="663dc-317">Accessed as a real custom attribute.</span></span>|  
|<span data-ttu-id="663dc-318">ComImportAttribute</span><span class="sxs-lookup"><span data-stu-id="663dc-318">ComImportAttribute</span></span>|<span data-ttu-id="663dc-319">CorTypeAttr.tdImport</span><span class="sxs-lookup"><span data-stu-id="663dc-319">CorTypeAttr.tdImport</span></span>|<span data-ttu-id="663dc-320">Type.Attributes.Import</span><span class="sxs-lookup"><span data-stu-id="663dc-320">Type.Attributes.Import</span></span>|  
|<span data-ttu-id="663dc-321">Serializableattribute に設定します</span><span class="sxs-lookup"><span data-stu-id="663dc-321">SerializableAttribute</span></span>|<span data-ttu-id="663dc-322">CorTypeAttr.tdSerializable</span><span class="sxs-lookup"><span data-stu-id="663dc-322">CorTypeAttr.tdSerializable</span></span>|<span data-ttu-id="663dc-323">Type.Attributes.Serializable</span><span class="sxs-lookup"><span data-stu-id="663dc-323">Type.Attributes.Serializable</span></span>|  
|<span data-ttu-id="663dc-324">NonSerializedAttribute</span><span class="sxs-lookup"><span data-stu-id="663dc-324">NonSerializedAttribute</span></span>|<span data-ttu-id="663dc-325">CorFieldAttr.fdNotSerialized</span><span class="sxs-lookup"><span data-stu-id="663dc-325">CorFieldAttr.fdNotSerialized</span></span>|<span data-ttu-id="663dc-326">FieldInfo.Attributes.NotSerialized</span><span class="sxs-lookup"><span data-stu-id="663dc-326">FieldInfo.Attributes.NotSerialized</span></span>|  
|<span data-ttu-id="663dc-327">MethodImplAttribute</span><span class="sxs-lookup"><span data-stu-id="663dc-327">MethodImplAttribute</span></span>|<span data-ttu-id="663dc-328">CorMethodImpl</span><span class="sxs-lookup"><span data-stu-id="663dc-328">CorMethodImpl</span></span>|<span data-ttu-id="663dc-329">MethodInfo.GetMethodImplementationFlags()</span><span class="sxs-lookup"><span data-stu-id="663dc-329">MethodInfo.GetMethodImplementationFlags()</span></span><br /><br /> <span data-ttu-id="663dc-330">ConstructorInfo.GetMethodImplementationFlags()</span><span class="sxs-lookup"><span data-stu-id="663dc-330">ConstructorInfo.GetMethodImplementationFlags()</span></span>|  
|<span data-ttu-id="663dc-331">MarshalAsAttribute</span><span class="sxs-lookup"><span data-stu-id="663dc-331">MarshalAsAttribute</span></span>|<span data-ttu-id="663dc-332">さまざまな部分です。</span><span class="sxs-lookup"><span data-stu-id="663dc-332">Various bits.</span></span>|<span data-ttu-id="663dc-333">アクセサーはありません。</span><span class="sxs-lookup"><span data-stu-id="663dc-333">No accessor.</span></span>|  
|<span data-ttu-id="663dc-334">PreserveSigAttribute</span><span class="sxs-lookup"><span data-stu-id="663dc-334">PreserveSigAttribute</span></span>|<span data-ttu-id="663dc-335">CorMethodImpl.miOLE</span><span class="sxs-lookup"><span data-stu-id="663dc-335">CorMethodImpl.miOLE</span></span>|<span data-ttu-id="663dc-336">MethodInfo.GetMethodImplementationFlags() します。OLE</span><span class="sxs-lookup"><span data-stu-id="663dc-336">MethodInfo.GetMethodImplementationFlags().OLE</span></span><br /><br /> <span data-ttu-id="663dc-337">ConstructorInfo.GetMethodImplementationFlags() します。OLE</span><span class="sxs-lookup"><span data-stu-id="663dc-337">ConstructorInfo.GetMethodImplementationFlags().OLE</span></span>|  
|<span data-ttu-id="663dc-338">InAttribute</span><span class="sxs-lookup"><span data-stu-id="663dc-338">InAttribute</span></span>|<span data-ttu-id="663dc-339">CorParamAttr.pdIn</span><span class="sxs-lookup"><span data-stu-id="663dc-339">CorParamAttr.pdIn</span></span>|<span data-ttu-id="663dc-340">ParameterInfo.Attributes.In</span><span class="sxs-lookup"><span data-stu-id="663dc-340">ParameterInfo.Attributes.In</span></span>|  
|<span data-ttu-id="663dc-341">OutAttribute</span><span class="sxs-lookup"><span data-stu-id="663dc-341">OutAttribute</span></span>|<span data-ttu-id="663dc-342">CorParamAttr.pdOut</span><span class="sxs-lookup"><span data-stu-id="663dc-342">CorParamAttr.pdOut</span></span>|<span data-ttu-id="663dc-343">ParameterInfo.Attributes.Out</span><span class="sxs-lookup"><span data-stu-id="663dc-343">ParameterInfo.Attributes.Out</span></span>|  
|<span data-ttu-id="663dc-344">StructLayoutAttribute</span><span class="sxs-lookup"><span data-stu-id="663dc-344">StructLayoutAttribute</span></span>|<span data-ttu-id="663dc-345">CorTypeAttr.tdLayoutSequential</span><span class="sxs-lookup"><span data-stu-id="663dc-345">CorTypeAttr.tdLayoutSequential</span></span><br /><br /> <span data-ttu-id="663dc-346">CorTypeAttr.tdExplicitLayout</span><span class="sxs-lookup"><span data-stu-id="663dc-346">CorTypeAttr.tdExplicitLayout</span></span><br /><br /> <span data-ttu-id="663dc-347">CorTypeAttr.tdAnsiClass</span><span class="sxs-lookup"><span data-stu-id="663dc-347">CorTypeAttr.tdAnsiClass</span></span><br /><br /> <span data-ttu-id="663dc-348">CorTypeAttr.tdUnicodeClass</span><span class="sxs-lookup"><span data-stu-id="663dc-348">CorTypeAttr.tdUnicodeClass</span></span><br /><br /> <span data-ttu-id="663dc-349">CorTypeAttr.tdAutoClass</span><span class="sxs-lookup"><span data-stu-id="663dc-349">CorTypeAttr.tdAutoClass</span></span><br /><br /> <span data-ttu-id="663dc-350">パッキングのクラス。</span><span class="sxs-lookup"><span data-stu-id="663dc-350">Class packing.</span></span>|<span data-ttu-id="663dc-351">Type.Attributes.LayoutSequential</span><span class="sxs-lookup"><span data-stu-id="663dc-351">Type.Attributes.LayoutSequential</span></span><br /><br /> <span data-ttu-id="663dc-352">Type.Attributes.ExplicitLayout</span><span class="sxs-lookup"><span data-stu-id="663dc-352">Type.Attributes.ExplicitLayout</span></span><br /><br /> <span data-ttu-id="663dc-353">Type.Attributes.AnsiClass</span><span class="sxs-lookup"><span data-stu-id="663dc-353">Type.Attributes.AnsiClass</span></span><br /><br /> <span data-ttu-id="663dc-354">Type.Attributes.UnicodeClass</span><span class="sxs-lookup"><span data-stu-id="663dc-354">Type.Attributes.UnicodeClass</span></span><br /><br /> <span data-ttu-id="663dc-355">Type.Attributes.AutoClass</span><span class="sxs-lookup"><span data-stu-id="663dc-355">Type.Attributes.AutoClass</span></span><br /><br /> <span data-ttu-id="663dc-356">アクセサーはありません。</span><span class="sxs-lookup"><span data-stu-id="663dc-356">No accessor.</span></span>|  
|<span data-ttu-id="663dc-357">FieldOffsetAttribute</span><span class="sxs-lookup"><span data-stu-id="663dc-357">FieldOffsetAttribute</span></span>|<span data-ttu-id="663dc-358">フィールドのオフセット。</span><span class="sxs-lookup"><span data-stu-id="663dc-358">Field offset.</span></span>|<span data-ttu-id="663dc-359">アクセサーはありません。</span><span class="sxs-lookup"><span data-stu-id="663dc-359">No accessor.</span></span>|  
|<span data-ttu-id="663dc-360">AssemblyLoadAttribute</span><span class="sxs-lookup"><span data-stu-id="663dc-360">AssemblyLoadAttribute</span></span>|<span data-ttu-id="663dc-361">CorAssemblyFlags</span><span class="sxs-lookup"><span data-stu-id="663dc-361">CorAssemblyFlags</span></span>|<span data-ttu-id="663dc-362">アクセサーがないか、列挙子。</span><span class="sxs-lookup"><span data-stu-id="663dc-362">No accessor or enumerator.</span></span>|  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="663dc-363">呼び出されたときに遅延バインディング メカニズムを通じてなど<see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />します。</span><span class="sxs-lookup"><span data-stu-id="663dc-363">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="663dc-364">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="663dc-364">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public virtual object[] GetCustomAttributes (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] GetCustomAttributes(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetCustomAttributes(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCustomAttributes (attributeType As Type, inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="abstract member GetCustomAttributes : Type * bool -&gt; obj[]&#xA;override this.GetCustomAttributes : Type * bool -&gt; obj[]" Usage="assembly.GetCustomAttributes (attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.ICustomAttributeProvider.GetCustomAttributes(System.Type,System.Boolean)</InterfaceMember>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetCustomAttributes(System.Type,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="inherit" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="attributeType"><span data-ttu-id="663dc-365">カスタム属性を返す対象の型。</span><span class="sxs-lookup"><span data-stu-id="663dc-365">The type for which the custom attributes are to be returned.</span></span></param>
        <param name="inherit"><span data-ttu-id="663dc-366"><see cref="T:System.Reflection.Assembly" /> 型のオブジェクトでは、この引数は無視されます。</span><span class="sxs-lookup"><span data-stu-id="663dc-366">This argument is ignored for objects of type <see cref="T:System.Reflection.Assembly" />.</span></span></param>
        <summary><span data-ttu-id="663dc-367">型を指定して、このアセンブリのカスタム属性を取得します。</span><span class="sxs-lookup"><span data-stu-id="663dc-367">Gets the custom attributes for this assembly as specified by type.</span></span></summary>
        <returns><span data-ttu-id="663dc-368">このアセンブリの、<paramref name="attributeType" /> で指定されたカスタム属性を格納している配列。</span><span class="sxs-lookup"><span data-stu-id="663dc-368">An array that contains the custom attributes for this assembly as specified by <paramref name="attributeType" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663dc-369">このメソッドは、対応する<xref:System.Reflection.ICustomAttributeProvider>インターフェイス メソッド。</span><span class="sxs-lookup"><span data-stu-id="663dc-369">This method implements the corresponding <xref:System.Reflection.ICustomAttributeProvider> interface method.</span></span> <span data-ttu-id="663dc-370">そのため、`inherit`は無視されますは、パラメーターを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="663dc-370">Therefore, the `inherit` parameter must be specified even though it is ignored.</span></span>  
  
 <span data-ttu-id="663dc-371">擬似属性では、属性が存在する場合に設定する必要があるコア メタデータのビットを示します。</span><span class="sxs-lookup"><span data-stu-id="663dc-371">A pseudo-attribute indicates bits of the core metadata that must be set when the attribute is present.</span></span> <span data-ttu-id="663dc-372">型のメタデータを拡張し、種類と共に保存はカスタム属性とは異なり擬似属性は型のメタデータを変更し、破棄されます。</span><span class="sxs-lookup"><span data-stu-id="663dc-372">Unlike a custom attribute that extends the metadata for a type and is saved along with the type, a pseudo-attribute modifies the metadata for the type and then is discarded.</span></span> <span data-ttu-id="663dc-373">一部の結果のビットは、既存のリフレクション Api を使用してアクセスできません。</span><span class="sxs-lookup"><span data-stu-id="663dc-373">Some of the resulting bits cannot be accessed using existing reflection APIs.</span></span>  
  
 <span data-ttu-id="663dc-374">次の表に、擬似属性とリフレクションで使用できる bits のアクセサーを示します。</span><span class="sxs-lookup"><span data-stu-id="663dc-374">The following table summarizes the different pseudo-attributes and the accessors for the bits that are available in reflection.</span></span>  
  
|<span data-ttu-id="663dc-375">擬似属性</span><span class="sxs-lookup"><span data-stu-id="663dc-375">Pseudo-Attribute</span></span>|<span data-ttu-id="663dc-376">メタデータのビット</span><span class="sxs-lookup"><span data-stu-id="663dc-376">Metadata Bits</span></span>|<span data-ttu-id="663dc-377">リフレクションのアクセサー</span><span class="sxs-lookup"><span data-stu-id="663dc-377">Reflection Accessor</span></span>|  
|-----------------------|-------------------|-------------------------|  
|<span data-ttu-id="663dc-378">DllImportAttribute</span><span class="sxs-lookup"><span data-stu-id="663dc-378">DllImportAttribute</span></span>|<span data-ttu-id="663dc-379">CorPInvokeMap</span><span class="sxs-lookup"><span data-stu-id="663dc-379">CorPInvokeMap</span></span><br /><br /> <span data-ttu-id="663dc-380">DLL 名</span><span class="sxs-lookup"><span data-stu-id="663dc-380">DLL name</span></span>|<span data-ttu-id="663dc-381">アクセサーはありません PInvokeMap に対する通常メソッド/グローバル メソッドの属性について。</span><span class="sxs-lookup"><span data-stu-id="663dc-381">No accessor for PInvokeMap for ordinary method/global method attributes.</span></span><br /><br /> <span data-ttu-id="663dc-382">DLL 名のアクセサーはありません。</span><span class="sxs-lookup"><span data-stu-id="663dc-382">No accessor for DLL name.</span></span>|  
|<span data-ttu-id="663dc-383">GuidAttribute</span><span class="sxs-lookup"><span data-stu-id="663dc-383">GuidAttribute</span></span>|<span data-ttu-id="663dc-384">実際のカスタム属性として保存されます。</span><span class="sxs-lookup"><span data-stu-id="663dc-384">Stored as a real custom attribute.</span></span>|<span data-ttu-id="663dc-385">実際のカスタム属性としてアクセスします。</span><span class="sxs-lookup"><span data-stu-id="663dc-385">Accessed as a real custom attribute.</span></span>|  
|<span data-ttu-id="663dc-386">ComImportAttribute</span><span class="sxs-lookup"><span data-stu-id="663dc-386">ComImportAttribute</span></span>|<span data-ttu-id="663dc-387">CorTypeAttr.tdImport</span><span class="sxs-lookup"><span data-stu-id="663dc-387">CorTypeAttr.tdImport</span></span>|<span data-ttu-id="663dc-388">Type.Attributes.Import</span><span class="sxs-lookup"><span data-stu-id="663dc-388">Type.Attributes.Import</span></span>|  
|<span data-ttu-id="663dc-389">Serializableattribute に設定します</span><span class="sxs-lookup"><span data-stu-id="663dc-389">SerializableAttribute</span></span>|<span data-ttu-id="663dc-390">CorTypeAttr.tdSerializable</span><span class="sxs-lookup"><span data-stu-id="663dc-390">CorTypeAttr.tdSerializable</span></span>|<span data-ttu-id="663dc-391">Type.Attributes.Serializable</span><span class="sxs-lookup"><span data-stu-id="663dc-391">Type.Attributes.Serializable</span></span>|  
|<span data-ttu-id="663dc-392">NonSerializedAttribute</span><span class="sxs-lookup"><span data-stu-id="663dc-392">NonSerializedAttribute</span></span>|<span data-ttu-id="663dc-393">CorFieldAttr.fdNotSerialized</span><span class="sxs-lookup"><span data-stu-id="663dc-393">CorFieldAttr.fdNotSerialized</span></span>|<span data-ttu-id="663dc-394">FieldInfo.Attributes.NotSerialized</span><span class="sxs-lookup"><span data-stu-id="663dc-394">FieldInfo.Attributes.NotSerialized</span></span>|  
|<span data-ttu-id="663dc-395">MethodImplAttribute</span><span class="sxs-lookup"><span data-stu-id="663dc-395">MethodImplAttribute</span></span>|<span data-ttu-id="663dc-396">CorMethodImpl</span><span class="sxs-lookup"><span data-stu-id="663dc-396">CorMethodImpl</span></span>|<span data-ttu-id="663dc-397">MethodInfo.GetMethodImplementationFlags()</span><span class="sxs-lookup"><span data-stu-id="663dc-397">MethodInfo.GetMethodImplementationFlags()</span></span><br /><br /> <span data-ttu-id="663dc-398">ConstructorInfo.GetMethodImplementationFlags()</span><span class="sxs-lookup"><span data-stu-id="663dc-398">ConstructorInfo.GetMethodImplementationFlags()</span></span>|  
|<span data-ttu-id="663dc-399">MarshalAsAttribute</span><span class="sxs-lookup"><span data-stu-id="663dc-399">MarshalAsAttribute</span></span>|<span data-ttu-id="663dc-400">さまざまな部分です。</span><span class="sxs-lookup"><span data-stu-id="663dc-400">Various bits.</span></span>|<span data-ttu-id="663dc-401">アクセサーはありません。</span><span class="sxs-lookup"><span data-stu-id="663dc-401">No accessor.</span></span>|  
|<span data-ttu-id="663dc-402">PreserveSigAttribute</span><span class="sxs-lookup"><span data-stu-id="663dc-402">PreserveSigAttribute</span></span>|<span data-ttu-id="663dc-403">CorMethodImpl.miOLE</span><span class="sxs-lookup"><span data-stu-id="663dc-403">CorMethodImpl.miOLE</span></span>|<span data-ttu-id="663dc-404">MethodInfo.GetMethodImplementationFlags() します。OLE</span><span class="sxs-lookup"><span data-stu-id="663dc-404">MethodInfo.GetMethodImplementationFlags().OLE</span></span><br /><br /> <span data-ttu-id="663dc-405">ConstructorInfo.GetMethodImplementationFlags() します。OLE</span><span class="sxs-lookup"><span data-stu-id="663dc-405">ConstructorInfo.GetMethodImplementationFlags().OLE</span></span>|  
|<span data-ttu-id="663dc-406">InAttribute</span><span class="sxs-lookup"><span data-stu-id="663dc-406">InAttribute</span></span>|<span data-ttu-id="663dc-407">CorParamAttr.pdIn</span><span class="sxs-lookup"><span data-stu-id="663dc-407">CorParamAttr.pdIn</span></span>|<span data-ttu-id="663dc-408">ParameterInfo.Attributes.In</span><span class="sxs-lookup"><span data-stu-id="663dc-408">ParameterInfo.Attributes.In</span></span>|  
|<span data-ttu-id="663dc-409">OutAttribute</span><span class="sxs-lookup"><span data-stu-id="663dc-409">OutAttribute</span></span>|<span data-ttu-id="663dc-410">CorParamAttr.pdOut</span><span class="sxs-lookup"><span data-stu-id="663dc-410">CorParamAttr.pdOut</span></span>|<span data-ttu-id="663dc-411">ParameterInfo.Attributes.Out</span><span class="sxs-lookup"><span data-stu-id="663dc-411">ParameterInfo.Attributes.Out</span></span>|  
|<span data-ttu-id="663dc-412">StructLayoutAttribute</span><span class="sxs-lookup"><span data-stu-id="663dc-412">StructLayoutAttribute</span></span>|<span data-ttu-id="663dc-413">CorTypeAttr.tdLayoutSequential</span><span class="sxs-lookup"><span data-stu-id="663dc-413">CorTypeAttr.tdLayoutSequential</span></span><br /><br /> <span data-ttu-id="663dc-414">CorTypeAttr.tdExplicitLayout</span><span class="sxs-lookup"><span data-stu-id="663dc-414">CorTypeAttr.tdExplicitLayout</span></span><br /><br /> <span data-ttu-id="663dc-415">CorTypeAttr.tdAnsiClass</span><span class="sxs-lookup"><span data-stu-id="663dc-415">CorTypeAttr.tdAnsiClass</span></span><br /><br /> <span data-ttu-id="663dc-416">CorTypeAttr.tdUnicodeClass</span><span class="sxs-lookup"><span data-stu-id="663dc-416">CorTypeAttr.tdUnicodeClass</span></span><br /><br /> <span data-ttu-id="663dc-417">CorTypeAttr.tdAutoClass</span><span class="sxs-lookup"><span data-stu-id="663dc-417">CorTypeAttr.tdAutoClass</span></span><br /><br /> <span data-ttu-id="663dc-418">パッキングのクラス。</span><span class="sxs-lookup"><span data-stu-id="663dc-418">Class packing.</span></span>|<span data-ttu-id="663dc-419">Type.Attributes.LayoutSequential</span><span class="sxs-lookup"><span data-stu-id="663dc-419">Type.Attributes.LayoutSequential</span></span><br /><br /> <span data-ttu-id="663dc-420">Type.Attributes.ExplicitLayout</span><span class="sxs-lookup"><span data-stu-id="663dc-420">Type.Attributes.ExplicitLayout</span></span><br /><br /> <span data-ttu-id="663dc-421">Type.Attributes.AnsiClass</span><span class="sxs-lookup"><span data-stu-id="663dc-421">Type.Attributes.AnsiClass</span></span><br /><br /> <span data-ttu-id="663dc-422">Type.Attributes.UnicodeClass</span><span class="sxs-lookup"><span data-stu-id="663dc-422">Type.Attributes.UnicodeClass</span></span><br /><br /> <span data-ttu-id="663dc-423">Type.Attributes.AutoClass</span><span class="sxs-lookup"><span data-stu-id="663dc-423">Type.Attributes.AutoClass</span></span><br /><br /> <span data-ttu-id="663dc-424">アクセサーはありません。</span><span class="sxs-lookup"><span data-stu-id="663dc-424">No accessor.</span></span>|  
|<span data-ttu-id="663dc-425">FieldOffsetAttribute</span><span class="sxs-lookup"><span data-stu-id="663dc-425">FieldOffsetAttribute</span></span>|<span data-ttu-id="663dc-426">フィールドのオフセット。</span><span class="sxs-lookup"><span data-stu-id="663dc-426">Field offset.</span></span>|<span data-ttu-id="663dc-427">アクセサーはありません。</span><span class="sxs-lookup"><span data-stu-id="663dc-427">No accessor.</span></span>|  
|<span data-ttu-id="663dc-428">AssemblyLoadAttribute</span><span class="sxs-lookup"><span data-stu-id="663dc-428">AssemblyLoadAttribute</span></span>|<span data-ttu-id="663dc-429">CorAssemblyFlags</span><span class="sxs-lookup"><span data-stu-id="663dc-429">CorAssemblyFlags</span></span>|<span data-ttu-id="663dc-430">アクセサーがないか、列挙子。</span><span class="sxs-lookup"><span data-stu-id="663dc-430">No accessor or enumerator.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="663dc-431"><paramref name="attributeType" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="663dc-431"><paramref name="attributeType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="663dc-432"><paramref name="attributeType" /> はランタイム型ではありません。</span><span class="sxs-lookup"><span data-stu-id="663dc-432"><paramref name="attributeType" /> is not a runtime type.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="663dc-433">呼び出されたときに遅延バインディング メカニズムを通じてなど<see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />します。</span><span class="sxs-lookup"><span data-stu-id="663dc-433">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="663dc-434">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="663dc-434">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributesData">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt; GetCustomAttributesData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Reflection.CustomAttributeData&gt; GetCustomAttributesData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetCustomAttributesData" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCustomAttributesData () As IList(Of CustomAttributeData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeData ^&gt; ^ GetCustomAttributesData();" />
      <MemberSignature Language="F#" Value="abstract member GetCustomAttributesData : unit -&gt; System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;&#xA;override this.GetCustomAttributesData : unit -&gt; System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;" Usage="assembly.GetCustomAttributesData " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="663dc-435">現在の <see cref="T:System.Reflection.Assembly" /> に適用されている属性に関する情報を、<see cref="T:System.Reflection.CustomAttributeData" /> オブジェクトとして返します。</span><span class="sxs-lookup"><span data-stu-id="663dc-435">Returns information about the attributes that have been applied to the current <see cref="T:System.Reflection.Assembly" />, expressed as <see cref="T:System.Reflection.CustomAttributeData" /> objects.</span></span></summary>
        <returns><span data-ttu-id="663dc-436">現在のアセンブリに適用されている属性に関するデータを表す <see cref="T:System.Reflection.CustomAttributeData" /> オブジェクトのジェネリック リスト。</span><span class="sxs-lookup"><span data-stu-id="663dc-436">A generic list of <see cref="T:System.Reflection.CustomAttributeData" /> objects representing data about the attributes that have been applied to the current assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663dc-437">リフレクションのみのコンテキストに読み込まれるコードでカスタム属性そのものが定義されている場合、リフレクションのみのコンテキスト内のコードのカスタム属性を調べるには、このメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="663dc-437">Use this method to examine the custom attributes of code in the reflection-only context, in cases where the custom attributes themselves are defined in code that is loaded into the reflection-only context.</span></span> <span data-ttu-id="663dc-438">などのメソッド<xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType>と<xref:System.Reflection.Assembly.GetCustomAttributes%2A?displayProperty=nameWithType>属性のインスタンスを作成するため、このような場合では使用できません。</span><span class="sxs-lookup"><span data-stu-id="663dc-438">Methods like <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType> and <xref:System.Reflection.Assembly.GetCustomAttributes%2A?displayProperty=nameWithType> cannot be used in such cases, because they create instances of the attributes.</span></span> <span data-ttu-id="663dc-439">リフレクションのみのコンテキストでコードを実行できません。</span><span class="sxs-lookup"><span data-stu-id="663dc-439">Code in the reflection-only context cannot be executed.</span></span> <span data-ttu-id="663dc-440">詳細と例のコードについて、次を参照してください。、<xref:System.Reflection.CustomAttributeData>クラス。</span><span class="sxs-lookup"><span data-stu-id="663dc-440">For more information and for example code, see the <xref:System.Reflection.CustomAttributeData> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEntryAssembly">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly GetEntryAssembly ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly GetEntryAssembly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetEntryAssembly" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEntryAssembly () As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ GetEntryAssembly();" />
      <MemberSignature Language="F#" Value="static member GetEntryAssembly : unit -&gt; System.Reflection.Assembly" Usage="System.Reflection.Assembly.GetEntryAssembly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="663dc-441">既定のアプリケーション ドメインで実行できるプロセスを取得します。</span><span class="sxs-lookup"><span data-stu-id="663dc-441">Gets the process executable in the default application domain.</span></span> <span data-ttu-id="663dc-442">他のアプリケーション ドメインでは、<see cref="M:System.AppDomain.ExecuteAssembly(System.String)" /> で実行された最初の実行可能ファイルです。</span><span class="sxs-lookup"><span data-stu-id="663dc-442">In other application domains, this is the first executable that was executed by <see cref="M:System.AppDomain.ExecuteAssembly(System.String)" />.</span></span></summary>
        <returns><span data-ttu-id="663dc-443">既定のアプリケーション ドメインで実行できるプロセスであるアセンブリ。または、<see cref="M:System.AppDomain.ExecuteAssembly(System.String)" /> で実行された最初の実行可能ファイル。</span><span class="sxs-lookup"><span data-stu-id="663dc-443">The assembly that is the process executable in the default application domain, or the first executable that was executed by <see cref="M:System.AppDomain.ExecuteAssembly(System.String)" />.</span></span> <span data-ttu-id="663dc-444">アンマネージ コードから呼び出された場合は、<see langword="null" /> を返すことができます。</span><span class="sxs-lookup"><span data-stu-id="663dc-444">Can return <see langword="null" /> when called from unmanaged code.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663dc-445"><xref:System.Reflection.Assembly.GetEntryAssembly%2A>メソッドが返す`null`マネージ アセンブリが、アンマネージ アプリケーションから読み込まれたとき。</span><span class="sxs-lookup"><span data-stu-id="663dc-445">The <xref:System.Reflection.Assembly.GetEntryAssembly%2A> method can return `null` when a managed assembly has been loaded from an unmanaged application.</span></span> <span data-ttu-id="663dc-446">たとえば、アンマネージ アプリケーションは、c# への呼び出しで記述された COM コンポーネントのインスタンスを作成する場合、<xref:System.Reflection.Assembly.GetEntryAssembly%2A>のため、プロセスのエントリ ポイント マネージ アセンブリではなく、アンマネージ コードは c# コンポーネントからのメソッドが null を返します。</span><span class="sxs-lookup"><span data-stu-id="663dc-446">For example, if an unmanaged application creates an instance of a COM component written in C#, a call to the <xref:System.Reflection.Assembly.GetEntryAssembly%2A> method from the C# component returns null, because the entry point for the process was unmanaged code rather than a managed assembly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExecutingAssembly">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly GetExecutingAssembly ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly GetExecutingAssembly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetExecutingAssembly" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetExecutingAssembly () As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ GetExecutingAssembly();" />
      <MemberSignature Language="F#" Value="static member GetExecutingAssembly : unit -&gt; System.Reflection.Assembly" Usage="System.Reflection.Assembly.GetExecutingAssembly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="663dc-447">現在実行中のコードを格納しているアセンブリを取得します。</span><span class="sxs-lookup"><span data-stu-id="663dc-447">Gets the assembly that contains the code that is currently executing.</span></span></summary>
        <returns><span data-ttu-id="663dc-448">現在実行中のコードを格納しているアセンブリ。</span><span class="sxs-lookup"><span data-stu-id="663dc-448">The assembly that contains the code that is currently executing.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663dc-449">パフォーマンス上の理由は不明なデザイン時にどのようなアセンブリが現在実行している場合にのみ、このメソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="663dc-449">For performance reasons, you should call this method only when you do not know at design time what assembly is currently executing.</span></span> <span data-ttu-id="663dc-450">取得することをお勧めの方法、 <xref:System.Reflection.Assembly> 、現在のアセンブリを表すオブジェクトを使用することです、<xref:System.Type.Assembly%2A?displayProperty=nameWithType>次の例に示すように、アセンブリで型のプロパティが見つかりました。</span><span class="sxs-lookup"><span data-stu-id="663dc-450">The recommended way to retrieve an <xref:System.Reflection.Assembly> object that represents the current assembly is to use the <xref:System.Type.Assembly%2A?displayProperty=nameWithType> property of a type found in the assembly, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Reflection.Assembly.GetExecutingAssembly#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflection.assembly.getexecutingassembly/cs/assembly1.cs#1)]
 [!code-vb[System.Reflection.Assembly.GetExecutingAssembly#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.reflection.assembly.getexecutingassembly/vb/assembly1.vb#1)]  
  
 <span data-ttu-id="663dc-451">現在実行中のコードと呼ばれるメソッドを含むアセンブリを取得する<xref:System.Reflection.Assembly.GetCallingAssembly%2A>します。</span><span class="sxs-lookup"><span data-stu-id="663dc-451">To get the assembly that contains the method that called the currently executing code, use <xref:System.Reflection.Assembly.GetCallingAssembly%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="663dc-452">次の例では、<xref:System.Type.Assembly%2A?displayProperty=nameWithType>そのアセンブリに含まれる型に基づいて、現在実行中のアセンブリを取得するプロパティ。</span><span class="sxs-lookup"><span data-stu-id="663dc-452">The following example uses the <xref:System.Type.Assembly%2A?displayProperty=nameWithType> property to get the currently executing assembly based on a type contained in that assembly.</span></span> <span data-ttu-id="663dc-453">呼び出しも、<xref:System.Reflection.Assembly.GetExecutingAssembly%2A>を返すことを表示するメソッド、<xref:System.Reflection.Assembly>同じアセンブリを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="663dc-453">It also calls the <xref:System.Reflection.Assembly.GetExecutingAssembly%2A> method to show that it returns an <xref:System.Reflection.Assembly> object that represents the same assembly.</span></span>  
  
 [!code-cpp[System.Reflection.Assembly.GetExecutingAssembly#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.reflection.assembly.getexecutingassembly/cpp/getexecutingassembly1.cpp#5)]
 [!code-csharp[System.Reflection.Assembly.GetExecutingAssembly#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflection.assembly.getexecutingassembly/cs/getexecutingassembly1.cs#5)]
 [!code-vb[System.Reflection.Assembly.GetExecutingAssembly#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.reflection.assembly.getexecutingassembly/vb/getexecutingassembly1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExportedTypes">
      <MemberSignature Language="C#" Value="public virtual Type[] GetExportedTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type[] GetExportedTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetExportedTypes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExportedTypes () As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;Type ^&gt; ^ GetExportedTypes();" />
      <MemberSignature Language="F#" Value="abstract member GetExportedTypes : unit -&gt; Type[]&#xA;override this.GetExportedTypes : unit -&gt; Type[]" Usage="assembly.GetExportedTypes " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetExportedTypes</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="663dc-454">アセンブリの外側で参照できる、このアセンブリ内で定義されているパブリック型を取得します。</span><span class="sxs-lookup"><span data-stu-id="663dc-454">Gets the public types defined in this assembly that are visible outside the assembly.</span></span></summary>
        <returns><span data-ttu-id="663dc-455">アセンブリの外部で参照できる、このアセンブリ内で定義されている型を表す配列。</span><span class="sxs-lookup"><span data-stu-id="663dc-455">An array that represents the types defined in this assembly that are visible outside the assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663dc-456">外部アセンブリから参照できる専用の型は、パブリック型と他のパブリック型内で入れ子になったパブリック型です。</span><span class="sxs-lookup"><span data-stu-id="663dc-456">The only types visible outside an assembly are public types and public types nested within other public types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="663dc-457">次のコード サンプルは、多数のさまざまなアクセス レベル、および呼び出しとクラスを定義します。<xref:System.Reflection.Assembly.GetExportedTypes%2A>アセンブリの外部から表示されているものを表示します。</span><span class="sxs-lookup"><span data-stu-id="663dc-457">The following code sample defines a number of classes with various access levels, and calls <xref:System.Reflection.Assembly.GetExportedTypes%2A> to display the ones that are visible from outside the assembly.</span></span>  
  
 [!code-cpp[Assembly.GetExportedTypes#1](~/samples/snippets/cpp/VS_Snippets_CLR/Assembly.GetExportedTypes/CPP/source.cpp#1)]
 [!code-csharp[Assembly.GetExportedTypes#1](~/samples/snippets/csharp/VS_Snippets_CLR/Assembly.GetExportedTypes/CS/source.cs#1)]
 [!code-vb[Assembly.GetExportedTypes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Assembly.GetExportedTypes/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="663dc-458">このアセンブリは、動的アセンブリです。</span><span class="sxs-lookup"><span data-stu-id="663dc-458">The assembly is a dynamic assembly.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="663dc-459">依存するアセンブリを読み込めません。</span><span class="sxs-lookup"><span data-stu-id="663dc-459">Unable to load a dependent assembly.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetFile">
      <MemberSignature Language="C#" Value="public virtual System.IO.FileStream GetFile (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.FileStream GetFile(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFile (name As String) As FileStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::FileStream ^ GetFile(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetFile : string -&gt; System.IO.FileStream&#xA;override this.GetFile : string -&gt; System.IO.FileStream" Usage="assembly.GetFile name" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetFile(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileStream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="663dc-460">指定されたファイルの名前。</span><span class="sxs-lookup"><span data-stu-id="663dc-460">The name of the specified file.</span></span> <span data-ttu-id="663dc-461">ファイルへのパスを含めないでください。</span><span class="sxs-lookup"><span data-stu-id="663dc-461">Do not include the path to the file.</span></span></param>
        <summary><span data-ttu-id="663dc-462">このアセンブリのマニフェストのファイル テーブル内の指定されたファイルの <see cref="T:System.IO.FileStream" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="663dc-462">Gets a <see cref="T:System.IO.FileStream" /> for the specified file in the file table of the manifest of this assembly.</span></span></summary>
        <returns><span data-ttu-id="663dc-463">指定したファイルを格納するストリーム。ファイルが見つからない場合は、<see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="663dc-463">A stream that contains the specified file, or <see langword="null" /> if the file is not found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663dc-464">このメソッドは、両方のパブリックおよびプライベートのリソース ファイルで機能します。</span><span class="sxs-lookup"><span data-stu-id="663dc-464">This method works on both public and private resource files.</span></span>  
  
 <span data-ttu-id="663dc-465">`name`ファイルへのパスを含めることはできません。</span><span class="sxs-lookup"><span data-stu-id="663dc-465">The `name` should not include the path to the file.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="663dc-466">検出されたファイルを読み込めませんでした。</span><span class="sxs-lookup"><span data-stu-id="663dc-466">A file that was found could not be loaded.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="663dc-467"><paramref name="name" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="663dc-467">The <paramref name="name" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="663dc-468"><paramref name="name" /> パラメーターが空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="663dc-468">The <paramref name="name" /> parameter is an empty string ("").</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="663dc-469"><paramref name="name" /> が見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="663dc-469"><paramref name="name" /> was not found.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="663dc-470"><paramref name="name" /> は正しいアセンブリではありません。</span><span class="sxs-lookup"><span data-stu-id="663dc-470"><paramref name="name" /> is not a valid assembly.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="663dc-471">パスにし、指定したファイルを読み取るためにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="663dc-471">for access to the path and for reading the specified file.</span></span> <span data-ttu-id="663dc-472">列挙体に関連付けられている:<see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />と <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="663dc-472">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFiles">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="663dc-473">アセンブリ マニフェストのファイル テーブルのファイルを取得します。</span><span class="sxs-lookup"><span data-stu-id="663dc-473">Gets the files in the file table of an assembly manifest.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public virtual System.IO.FileStream[] GetFiles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.FileStream[] GetFiles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetFiles" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFiles () As FileStream()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::IO::FileStream ^&gt; ^ GetFiles();" />
      <MemberSignature Language="F#" Value="abstract member GetFiles : unit -&gt; System.IO.FileStream[]&#xA;override this.GetFiles : unit -&gt; System.IO.FileStream[]" Usage="assembly.GetFiles " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetFiles</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileStream[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="663dc-474">アセンブリ マニフェストのファイル テーブルのファイルを取得します。</span><span class="sxs-lookup"><span data-stu-id="663dc-474">Gets the files in the file table of an assembly manifest.</span></span></summary>
        <returns><span data-ttu-id="663dc-475">ファイルを格納するストリームの配列。</span><span class="sxs-lookup"><span data-stu-id="663dc-475">An array of streams that contain the files.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663dc-476">このメソッドは、パブリックおよびプライベートのリソース ファイルで機能します。</span><span class="sxs-lookup"><span data-stu-id="663dc-476">This method works on public and private resource files.</span></span>  
  
 <span data-ttu-id="663dc-477">このオーバー ロードの呼び出しと同じですが、<xref:System.Reflection.Assembly.GetFiles%28System.Boolean%29>オーバー ロードを指定して`false`します。</span><span class="sxs-lookup"><span data-stu-id="663dc-477">This overload is equivalent to calling the <xref:System.Reflection.Assembly.GetFiles%28System.Boolean%29> overload and specifying `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="663dc-478">検出されたファイルを読み込めませんでした。</span><span class="sxs-lookup"><span data-stu-id="663dc-478">A file that was found could not be loaded.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="663dc-479">ファイルが見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="663dc-479">A file was not found.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="663dc-480">ファイルが有効なアセンブリではありません。</span><span class="sxs-lookup"><span data-stu-id="663dc-480">A file was not a valid assembly.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public virtual System.IO.FileStream[] GetFiles (bool getResourceModules);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.FileStream[] GetFiles(bool getResourceModules) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetFiles(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFiles (getResourceModules As Boolean) As FileStream()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::IO::FileStream ^&gt; ^ GetFiles(bool getResourceModules);" />
      <MemberSignature Language="F#" Value="abstract member GetFiles : bool -&gt; System.IO.FileStream[]&#xA;override this.GetFiles : bool -&gt; System.IO.FileStream[]" Usage="assembly.GetFiles getResourceModules" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetFiles(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileStream[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="getResourceModules" Type="System.Boolean" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="getResourceModules"><span data-ttu-id="663dc-481">リソース モジュールを含める場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="663dc-481"><see langword="true" /> to include resource modules; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="663dc-482">リソース モジュールを含めるかどうかを指定して、アセンブリ マニフェストのファイル テーブルのファイルを取得します。</span><span class="sxs-lookup"><span data-stu-id="663dc-482">Gets the files in the file table of an assembly manifest, specifying whether to include resource modules.</span></span></summary>
        <returns><span data-ttu-id="663dc-483">ファイルを格納するストリームの配列。</span><span class="sxs-lookup"><span data-stu-id="663dc-483">An array of streams that contain the files.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663dc-484">このメソッドは、パブリックおよびプライベートのリソース ファイルで機能します。</span><span class="sxs-lookup"><span data-stu-id="663dc-484">This method works on public and private resource files.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="663dc-485">検出されたファイルを読み込めませんでした。</span><span class="sxs-lookup"><span data-stu-id="663dc-485">A file that was found could not be loaded.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="663dc-486">ファイルが見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="663dc-486">A file was not found.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="663dc-487">ファイルが有効なアセンブリではありません。</span><span class="sxs-lookup"><span data-stu-id="663dc-487">A file was not a valid assembly.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetForwardedTypes">
      <MemberSignature Language="C#" Value="public virtual Type[] GetForwardedTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type[] GetForwardedTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetForwardedTypes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetForwardedTypes () As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;Type ^&gt; ^ GetForwardedTypes();" />
      <MemberSignature Language="F#" Value="abstract member GetForwardedTypes : unit -&gt; Type[]&#xA;override this.GetForwardedTypes : unit -&gt; Type[]" Usage="assembly.GetForwardedTypes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="assembly.GetHashCode " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetHashCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="663dc-488">このインスタンスのハッシュ コードを返します。</span><span class="sxs-lookup"><span data-stu-id="663dc-488">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="663dc-489">32 ビット符号付き整数ハッシュ コード。</span><span class="sxs-lookup"><span data-stu-id="663dc-489">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetLoadedModules">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="663dc-490">このアセンブリの一部であるすべての読み込み済みモジュールを取得します。</span><span class="sxs-lookup"><span data-stu-id="663dc-490">Gets all the loaded modules that are part of this assembly.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetLoadedModules">
      <MemberSignature Language="C#" Value="public System.Reflection.Module[] GetLoadedModules ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Module[] GetLoadedModules() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetLoadedModules" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLoadedModules () As Module()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Reflection::Module ^&gt; ^ GetLoadedModules();" />
      <MemberSignature Language="F#" Value="abstract member GetLoadedModules : unit -&gt; System.Reflection.Module[]&#xA;override this.GetLoadedModules : unit -&gt; System.Reflection.Module[]" Usage="assembly.GetLoadedModules " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetLoadedModules</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="663dc-491">このアセンブリの一部であるすべての読み込み済みモジュールを取得します。</span><span class="sxs-lookup"><span data-stu-id="663dc-491">Gets all the loaded modules that are part of this assembly.</span></span></summary>
        <returns><span data-ttu-id="663dc-492">モジュールの配列。</span><span class="sxs-lookup"><span data-stu-id="663dc-492">An array of modules.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLoadedModules">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.Module[] GetLoadedModules (bool getResourceModules);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Module[] GetLoadedModules(bool getResourceModules) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetLoadedModules(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLoadedModules (getResourceModules As Boolean) As Module()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Reflection::Module ^&gt; ^ GetLoadedModules(bool getResourceModules);" />
      <MemberSignature Language="F#" Value="abstract member GetLoadedModules : bool -&gt; System.Reflection.Module[]&#xA;override this.GetLoadedModules : bool -&gt; System.Reflection.Module[]" Usage="assembly.GetLoadedModules getResourceModules" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetLoadedModules(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="getResourceModules" Type="System.Boolean" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="getResourceModules"><span data-ttu-id="663dc-493">リソース モジュールを含める場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="663dc-493"><see langword="true" /> to include resource modules; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="663dc-494">リソース モジュールを含めるかどうかを指定して、このアセンブリの一部であるすべての読み込み済みモジュールを取得します。</span><span class="sxs-lookup"><span data-stu-id="663dc-494">Gets all the loaded modules that are part of this assembly, specifying whether to include resource modules.</span></span></summary>
        <returns><span data-ttu-id="663dc-495">モジュールの配列。</span><span class="sxs-lookup"><span data-stu-id="663dc-495">An array of modules.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManifestResourceInfo">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.ManifestResourceInfo GetManifestResourceInfo (string resourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.ManifestResourceInfo GetManifestResourceInfo(string resourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetManifestResourceInfo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManifestResourceInfo (resourceName As String) As ManifestResourceInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::ManifestResourceInfo ^ GetManifestResourceInfo(System::String ^ resourceName);" />
      <MemberSignature Language="F#" Value="abstract member GetManifestResourceInfo : string -&gt; System.Reflection.ManifestResourceInfo&#xA;override this.GetManifestResourceInfo : string -&gt; System.Reflection.ManifestResourceInfo" Usage="assembly.GetManifestResourceInfo resourceName" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetManifestResourceInfo(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ManifestResourceInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resourceName"><span data-ttu-id="663dc-496">リソースの、大文字と小文字が区別される名前。</span><span class="sxs-lookup"><span data-stu-id="663dc-496">The case-sensitive name of the resource.</span></span></param>
        <summary><span data-ttu-id="663dc-497">指定されたリソースが永続化された方法に関する情報を返します。</span><span class="sxs-lookup"><span data-stu-id="663dc-497">Returns information about how the given resource has been persisted.</span></span></summary>
        <returns><span data-ttu-id="663dc-498">リソースのトポロジに関する情報が設定されたオブジェクト。リソースが見つからない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="663dc-498">An object that is populated with information about the resource's topology, or <see langword="null" /> if the resource is not found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663dc-499">リソースが、呼び出し元に表示されるか、呼び出し元が場合にのみ、リソース情報が返される<xref:System.Security.Permissions.ReflectionPermission>します。</span><span class="sxs-lookup"><span data-stu-id="663dc-499">Resource information is returned only if the resource is visible to the caller, or the caller has <xref:System.Security.Permissions.ReflectionPermission>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="663dc-500"><paramref name="resourceName" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="663dc-500"><paramref name="resourceName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="663dc-501"><paramref name="resourceName" /> パラメーターが空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="663dc-501">The <paramref name="resourceName" /> parameter is an empty string ("").</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="663dc-502">呼び出されたときに遅延バインディング メカニズムを通じてなど<see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />します。</span><span class="sxs-lookup"><span data-stu-id="663dc-502">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="663dc-503">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="663dc-503">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
        <altmember cref="M:System.Reflection.Assembly.GetManifestResourceNames" />
      </Docs>
    </Member>
    <Member MemberName="GetManifestResourceNames">
      <MemberSignature Language="C#" Value="public virtual string[] GetManifestResourceNames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetManifestResourceNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetManifestResourceNames" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManifestResourceNames () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::String ^&gt; ^ GetManifestResourceNames();" />
      <MemberSignature Language="F#" Value="abstract member GetManifestResourceNames : unit -&gt; string[]&#xA;override this.GetManifestResourceNames : unit -&gt; string[]" Usage="assembly.GetManifestResourceNames " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetManifestResourceNames</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="663dc-504">このアセンブリのすべてのリソースの名前を返します。</span><span class="sxs-lookup"><span data-stu-id="663dc-504">Returns the names of all the resources in this assembly.</span></span></summary>
        <returns><span data-ttu-id="663dc-505">すべてのリソースの名前を格納している配列。</span><span class="sxs-lookup"><span data-stu-id="663dc-505">An array that contains the names of all the resources.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663dc-506">次のように、このメソッドによって返される配列では、各リソース名を使用できます。</span><span class="sxs-lookup"><span data-stu-id="663dc-506">You can use each resource name in the array returned by this method as follows:</span></span>  
  
-   <span data-ttu-id="663dc-507">リソース名を渡すことができます、<xref:System.Reflection.Assembly.GetManifestResourceInfo%2A>リソースに関する追加情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="663dc-507">You can pass the resource name to the <xref:System.Reflection.Assembly.GetManifestResourceInfo%2A> method to get additional information about the resource.</span></span>  
  
-   <span data-ttu-id="663dc-508">名前は、バイナリ .resources ファイルを識別する場合は、その .resources ファイルの拡張子を削除およびに渡す、<xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%29?displayProperty=nameWithType>リソース マネージャーのインスタンスを作成するコンス トラクター。</span><span class="sxs-lookup"><span data-stu-id="663dc-508">If the name identifies a binary .resources file, you can remove its .resources file extension and pass it to the <xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%29?displayProperty=nameWithType> constructor to instantiate the resource manager.</span></span>  
  
-   <span data-ttu-id="663dc-509">リソース名を渡すことができます、<xref:System.Reflection.Assembly.GetManifestResourceStream%2A>を取得するメソッド、<xref:System.IO.Stream>に渡すことができますし、オブジェクト、<xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29?displayProperty=nameWithType>コンス トラクター。</span><span class="sxs-lookup"><span data-stu-id="663dc-509">You can pass the resource name to the <xref:System.Reflection.Assembly.GetManifestResourceStream%2A> method to retrieve a <xref:System.IO.Stream> object that you can then pass to the <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29?displayProperty=nameWithType> constructor.</span></span>  
  
-   <span data-ttu-id="663dc-510">リソース名を渡すことができます、<xref:System.Reflection.Assembly.GetManifestResourceStream%2A>を取得するメソッド、<xref:System.IO.Stream>に渡すことができますし、オブジェクト、<xref:System.Resources.ResourceSet.%23ctor%28System.IO.Stream%29?displayProperty=nameWithType>コンス トラクター。</span><span class="sxs-lookup"><span data-stu-id="663dc-510">You can pass the resource name to the <xref:System.Reflection.Assembly.GetManifestResourceStream%2A> method to retrieve a <xref:System.IO.Stream> object that you can then pass to the <xref:System.Resources.ResourceSet.%23ctor%28System.IO.Stream%29?displayProperty=nameWithType> constructor.</span></span>  
  
 <span data-ttu-id="663dc-511">リソースが、呼び出し元に表示されるか、呼び出し元が場合にのみ、リソース情報が返される<xref:System.Security.Permissions.ReflectionPermission>します。</span><span class="sxs-lookup"><span data-stu-id="663dc-511">Resource information is returned only if the resource is visible to the caller, or the caller has <xref:System.Security.Permissions.ReflectionPermission>.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="663dc-512">呼び出されたときに遅延バインディング メカニズムを通じてなど<see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />します。</span><span class="sxs-lookup"><span data-stu-id="663dc-512">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="663dc-513">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="663dc-513">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
        <altmember cref="M:System.Reflection.Assembly.GetManifestResourceStream(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetManifestResourceStream">
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="663dc-514">このアセンブリから、指定されたマニフェスト リソースを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="663dc-514">Loads the specified manifest resource from this assembly.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetManifestResourceStream">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream GetManifestResourceStream (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream GetManifestResourceStream(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetManifestResourceStream(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManifestResourceStream (name As String) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Stream ^ GetManifestResourceStream(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetManifestResourceStream : string -&gt; System.IO.Stream&#xA;override this.GetManifestResourceStream : string -&gt; System.IO.Stream" Usage="assembly.GetManifestResourceStream name" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetManifestResourceStream(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="663dc-515">要求されているマニフェスト リソースの、大文字と小文字が区別される名前。</span><span class="sxs-lookup"><span data-stu-id="663dc-515">The case-sensitive name of the manifest resource being requested.</span></span></param>
        <summary><span data-ttu-id="663dc-516">このアセンブリから、指定されたマニフェスト リソースを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="663dc-516">Loads the specified manifest resource from this assembly.</span></span></summary>
        <returns><span data-ttu-id="663dc-517">マニフェスト リソース。コンパイル時にリソースが指定されない場合や、リソースが呼び出し元から参照できない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="663dc-517">The manifest resource; or <see langword="null" /> if no resources were specified during compilation or if the resource is not visible to the caller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663dc-518">マニフェスト リソースは、コンパイル時にアセンブリに埋め込まれているリソース (イメージ ファイル) などです。</span><span class="sxs-lookup"><span data-stu-id="663dc-518">A manifest resource is a resource (such as an image file) that is embedded in the assembly at compile time.</span></span> <span data-ttu-id="663dc-519">マニフェスト リソースの詳細については、次を参照してください。 [Microsoft .NET Framework リソースの基本](https://go.microsoft.com/fwlink/?LinkId=204554)、MSDN ライブラリ。</span><span class="sxs-lookup"><span data-stu-id="663dc-519">For more information about manifest resources, see [Microsoft .NET Framework Resource Basics](https://go.microsoft.com/fwlink/?LinkId=204554) in the MSDN Library.</span></span>  
  
 <span data-ttu-id="663dc-520">リソースが、呼び出し元に表示されるか、呼び出し元が場合にのみ、リソース情報が返される<xref:System.Security.Permissions.ReflectionPermission>します。</span><span class="sxs-lookup"><span data-stu-id="663dc-520">Resource information is returned only if the resource is visible to the caller, or the caller has <xref:System.Security.Permissions.ReflectionPermission>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="663dc-521">このメソッドが戻る`null`別のアセンブリ内のプライベートなリソースにアクセスすると、呼び出し元が<xref:System.Security.Permissions.ReflectionPermission>で、<xref:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="663dc-521">This method returns `null` if a private resource in another assembly is accessed and the caller does not have <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess?displayProperty=nameWithType> flag.</span></span>  
  
 <span data-ttu-id="663dc-522">アセンブリ マニフェストには、リソース ファイルが表示されている場合<xref:System.Reflection.Assembly.GetManifestResourceStream%2A>を返します、<xref:System.IO.Stream>オブジェクトの場合でも、リソース ファイルは、時間ディスクで検出されたことはできません。</span><span class="sxs-lookup"><span data-stu-id="663dc-522">If the assembly manifest lists a resource file, <xref:System.Reflection.Assembly.GetManifestResourceStream%2A> returns a <xref:System.IO.Stream> object even if the resource file cannot be found on disk at the time.</span></span> <span data-ttu-id="663dc-523">リソース ファイルが見つからない場合、その結果を渡して<xref:System.IO.Stream>オブジェクトを<xref:System.Resources.ResourceReader>コンス トラクターにより、<xref:System.ArgumentException>します。</span><span class="sxs-lookup"><span data-stu-id="663dc-523">If the resource file is not found, passing the resulting <xref:System.IO.Stream> object to the <xref:System.Resources.ResourceReader> constructor causes an <xref:System.ArgumentException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="663dc-524"><paramref name="name" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="663dc-524">The <paramref name="name" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="663dc-525"><paramref name="name" /> パラメーターが空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="663dc-525">The <paramref name="name" /> parameter is an empty string ("").</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><block subset="none" type="note">
            <para>  
 <span data-ttu-id="663dc-526"><see href="https://go.microsoft.com/fwlink/?LinkID=247912">Windows ストア アプリ用 .NET</see> または<see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">ポータブル クラス ライブラリ</see>では、基本クラスの例外である <see cref="T:System.IO.IOException" /> を代わりにキャッチします。</span><span class="sxs-lookup"><span data-stu-id="663dc-526">In the <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET for Windows Store apps</see> or the <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Portable Class Library</see>, catch the base class exception, <see cref="T:System.IO.IOException" />, instead.</span></span>  
  
</para>
          </block>  
  
 <span data-ttu-id="663dc-527">検出されたファイルを読み込めませんでした。</span><span class="sxs-lookup"><span data-stu-id="663dc-527">A file that was found could not be loaded.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="663dc-528"><paramref name="name" /> が見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="663dc-528"><paramref name="name" /> was not found.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="663dc-529"><paramref name="name" /> は正しいアセンブリではありません。</span><span class="sxs-lookup"><span data-stu-id="663dc-529"><paramref name="name" /> is not a valid assembly.</span></span></exception>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="663dc-530">リソースの長さが <see cref="F:System.Int64.MaxValue" /> を超えています</span><span class="sxs-lookup"><span data-stu-id="663dc-530">Resource length is greater than <see cref="F:System.Int64.MaxValue" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="663dc-531">呼び出されたときに遅延バインディング メカニズムを通じてなど<see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />します。</span><span class="sxs-lookup"><span data-stu-id="663dc-531">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="663dc-532">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="663dc-532">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
        <altmember cref="M:System.Reflection.Assembly.GetManifestResourceNames" />
        <related type="Article" href="~/docs/framework/app-domains/assembly-manifest.md"><span data-ttu-id="663dc-533">アセンブリ マニフェスト</span><span class="sxs-lookup"><span data-stu-id="663dc-533">Assembly Manifest</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetManifestResourceStream">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream GetManifestResourceStream (Type type, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream GetManifestResourceStream(class System.Type type, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetManifestResourceStream(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Stream ^ GetManifestResourceStream(Type ^ type, System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetManifestResourceStream : Type * string -&gt; System.IO.Stream&#xA;override this.GetManifestResourceStream : Type * string -&gt; System.IO.Stream" Usage="assembly.GetManifestResourceStream (type, name)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetManifestResourceStream(System.Type,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="663dc-534">マニフェスト リソース名のスコープを指定するために名前空間を使用する型。</span><span class="sxs-lookup"><span data-stu-id="663dc-534">The type whose namespace is used to scope the manifest resource name.</span></span></param>
        <param name="name"><span data-ttu-id="663dc-535">要求されているマニフェスト リソースの、大文字と小文字が区別される名前。</span><span class="sxs-lookup"><span data-stu-id="663dc-535">The case-sensitive name of the manifest resource being requested.</span></span></param>
        <summary><span data-ttu-id="663dc-536">このアセンブリから、指定された型の名前空間によってスコープが指定されている、指定されたマニフェスト リソースを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="663dc-536">Loads the specified manifest resource, scoped by the namespace of the specified type, from this assembly.</span></span></summary>
        <returns><span data-ttu-id="663dc-537">マニフェスト リソース。コンパイル時にリソースが指定されない場合や、リソースが呼び出し元から参照できない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="663dc-537">The manifest resource; or <see langword="null" /> if no resources were specified during compilation or if the resource is not visible to the caller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663dc-538">などの完全な名前が指定されている場合`type`"MyNameSpace.MyClasses"と`name`"MyNameSpace.Net"という名前のリソースを検索"Net"、このメソッド オーバー ロードです。</span><span class="sxs-lookup"><span data-stu-id="663dc-538">For example, if the full name specified for `type` is "MyNameSpace.MyClasses" and `name` is "Net", this method overload searches for a resource named "MyNameSpace.Net".</span></span>  
  
 <span data-ttu-id="663dc-539">マニフェスト リソースは、コンパイル時にアセンブリに埋め込まれているリソース (イメージ ファイル) などです。</span><span class="sxs-lookup"><span data-stu-id="663dc-539">A manifest resource is a resource (such as an image file) that is embedded in the assembly at compile time.</span></span> <span data-ttu-id="663dc-540">マニフェスト リソースの詳細については、次を参照してください。 [Microsoft .NET Framework リソースの基本](https://go.microsoft.com/fwlink/?LinkId=204554)、MSDN ライブラリ。</span><span class="sxs-lookup"><span data-stu-id="663dc-540">For more information about manifest resources, see [Microsoft .NET Framework Resource Basics](https://go.microsoft.com/fwlink/?LinkId=204554) in the MSDN Library.</span></span>  
  
 <span data-ttu-id="663dc-541">リソースが、呼び出し元に表示されるか、呼び出し元が場合にのみ、リソース情報が返される<xref:System.Security.Permissions.ReflectionPermission>します。</span><span class="sxs-lookup"><span data-stu-id="663dc-541">Resource information is returned only if the resource is visible to the caller, or the caller has <xref:System.Security.Permissions.ReflectionPermission>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="663dc-542">このメソッドが戻る`null`別のアセンブリ内のプライベートなリソースにアクセスすると、呼び出し元が<xref:System.Security.Permissions.ReflectionPermission>で、<xref:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="663dc-542">This method returns `null` if a private resource in another assembly is accessed and the caller does not have <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess?displayProperty=nameWithType> flag.</span></span>  
  
 <span data-ttu-id="663dc-543">アセンブリ マニフェストには、リソース ファイルが表示されている場合<xref:System.Reflection.Assembly.GetManifestResourceStream%2A>を返します、<xref:System.IO.Stream>オブジェクトの場合でも、リソース ファイルは、時間ディスクで検出されたことはできません。</span><span class="sxs-lookup"><span data-stu-id="663dc-543">If the assembly manifest lists a resource file, <xref:System.Reflection.Assembly.GetManifestResourceStream%2A> returns a <xref:System.IO.Stream> object even if the resource file cannot be found on disk at the time.</span></span> <span data-ttu-id="663dc-544">リソース ファイルが見つからない場合、その結果を渡して<xref:System.IO.Stream>オブジェクトを<xref:System.Resources.ResourceReader>コンス トラクターにより、<xref:System.ArgumentException>します。</span><span class="sxs-lookup"><span data-stu-id="663dc-544">If the resource file is not found, passing the resulting <xref:System.IO.Stream> object to the <xref:System.Resources.ResourceReader> constructor causes an <xref:System.ArgumentException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="663dc-545"><paramref name="name" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="663dc-545">The <paramref name="name" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="663dc-546"><paramref name="name" /> パラメーターが空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="663dc-546">The <paramref name="name" /> parameter is an empty string ("").</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="663dc-547">検出されたファイルを読み込めませんでした。</span><span class="sxs-lookup"><span data-stu-id="663dc-547">A file that was found could not be loaded.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="663dc-548"><paramref name="name" /> が見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="663dc-548"><paramref name="name" /> was not found.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="663dc-549"><paramref name="name" /> は正しいアセンブリではありません。</span><span class="sxs-lookup"><span data-stu-id="663dc-549"><paramref name="name" /> is not a valid assembly.</span></span></exception>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="663dc-550">リソースの長さが <see cref="F:System.Int64.MaxValue" /> を超えています</span><span class="sxs-lookup"><span data-stu-id="663dc-550">Resource length is greater than <see cref="F:System.Int64.MaxValue" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="663dc-551">呼び出されたときに遅延バインディング メカニズムを通じてなど<see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />します。</span><span class="sxs-lookup"><span data-stu-id="663dc-551">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="663dc-552">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="663dc-552">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
        <altmember cref="M:System.Reflection.Assembly.GetManifestResourceNames" />
        <related type="Article" href="~/docs/framework/app-domains/assembly-manifest.md"><span data-ttu-id="663dc-553">アセンブリ マニフェスト</span><span class="sxs-lookup"><span data-stu-id="663dc-553">Assembly Manifest</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetModule">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.Module GetModule (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Module GetModule(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetModule(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetModule (name As String) As Module" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::Module ^ GetModule(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetModule : string -&gt; System.Reflection.Module&#xA;override this.GetModule : string -&gt; System.Reflection.Module" Usage="assembly.GetModule name" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetModule(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="663dc-554">要求するモジュールの名前。</span><span class="sxs-lookup"><span data-stu-id="663dc-554">The name of the module being requested.</span></span></param>
        <summary><span data-ttu-id="663dc-555">このアセンブリから指定されたモジュールを取得します。</span><span class="sxs-lookup"><span data-stu-id="663dc-555">Gets the specified module in this assembly.</span></span></summary>
        <returns><span data-ttu-id="663dc-556">要求されたモジュール。モジュールが見つからない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="663dc-556">The module being requested, or <see langword="null" /> if the module is not found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663dc-557">このメソッドは、ファイル名で機能します。</span><span class="sxs-lookup"><span data-stu-id="663dc-557">This method works on file names.</span></span>  
  
 <span data-ttu-id="663dc-558">クラス、`Reflection.Emit`名前空間は、動的モジュールのスコープ名を出力します。</span><span class="sxs-lookup"><span data-stu-id="663dc-558">Classes in the `Reflection.Emit` namespace emit the scope name for a dynamic module.</span></span> <span data-ttu-id="663dc-559">スコープ名を決定できます、<xref:System.Reflection.Module.ScopeName%2A?displayProperty=nameWithType>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="663dc-559">The scope name can be determined by the <xref:System.Reflection.Module.ScopeName%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="663dc-560">モジュールの種類を渡す`Assembly.GetModule`します。</span><span class="sxs-lookup"><span data-stu-id="663dc-560">Pass the kind of module you want to `Assembly.GetModule`.</span></span> <span data-ttu-id="663dc-561">たとえば、アセンブリ マニフェストを含むモジュールを実行する場合には、モジュールのスコープの名前を渡す`GetModule`します。</span><span class="sxs-lookup"><span data-stu-id="663dc-561">For example, if you want the module that contains the assembly manifest, pass the scope name of the module to `GetModule`.</span></span> <span data-ttu-id="663dc-562">それ以外の場合、モジュールのファイル名を渡します。</span><span class="sxs-lookup"><span data-stu-id="663dc-562">Otherwise, pass the file name of the module.</span></span> <span data-ttu-id="663dc-563">いずれかで読み込まれたアセンブリ、`Load`を byte[] パラメーターを持つメソッドが 1 つだけのモジュールがあるし、マニフェスト モジュールです。</span><span class="sxs-lookup"><span data-stu-id="663dc-563">Assemblies loaded by one of the `Load` methods that have a byte[] parameter have only one module, and that is the manifest module.</span></span> <span data-ttu-id="663dc-564">スコープ名を使用してこれらのモジュールが常にシークします。</span><span class="sxs-lookup"><span data-stu-id="663dc-564">Always seek these modules using the scope name.</span></span>  
  
 <span data-ttu-id="663dc-565">使用して、特定のモジュールから型を取得できる<xref:System.Reflection.Module.GetType%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="663dc-565">A type can be retrieved from a specific module using <xref:System.Reflection.Module.GetType%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="663dc-566">呼び出す`Module.GetType`モジュールのマニフェストを含むは開始されませんアセンブリ全体を検索します。</span><span class="sxs-lookup"><span data-stu-id="663dc-566">Calling `Module.GetType` on the module containing the manifest will not initiate a search of the entire assembly.</span></span> <span data-ttu-id="663dc-567">呼び出す必要がありますが、どのモジュールに関係なく、アセンブリから型を取得する<xref:System.Reflection.Assembly.GetType%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="663dc-567">To retrieve a type from an assembly, regardless of which module it is in, you must call <xref:System.Reflection.Assembly.GetType%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="663dc-568"><paramref name="name" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="663dc-568">The <paramref name="name" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="663dc-569"><paramref name="name" /> パラメーターが空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="663dc-569">The <paramref name="name" /> parameter is an empty string ("").</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="663dc-570">検出されたファイルを読み込めませんでした。</span><span class="sxs-lookup"><span data-stu-id="663dc-570">A file that was found could not be loaded.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="663dc-571"><paramref name="name" /> が見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="663dc-571"><paramref name="name" /> was not found.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="663dc-572"><paramref name="name" /> は正しいアセンブリではありません。</span><span class="sxs-lookup"><span data-stu-id="663dc-572"><paramref name="name" /> is not a valid assembly.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetModules">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="663dc-573">このアセンブリの一部であるすべてのモジュールを取得します。</span><span class="sxs-lookup"><span data-stu-id="663dc-573">Gets all the modules that are part of this assembly.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetModules">
      <MemberSignature Language="C#" Value="public System.Reflection.Module[] GetModules ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Module[] GetModules() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetModules" />
      <MemberSignature Language="VB.NET" Value="Public Function GetModules () As Module()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Reflection::Module ^&gt; ^ GetModules();" />
      <MemberSignature Language="F#" Value="abstract member GetModules : unit -&gt; System.Reflection.Module[]&#xA;override this.GetModules : unit -&gt; System.Reflection.Module[]" Usage="assembly.GetModules " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetModules</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="663dc-574">このアセンブリの一部であるすべてのモジュールを取得します。</span><span class="sxs-lookup"><span data-stu-id="663dc-574">Gets all the modules that are part of this assembly.</span></span></summary>
        <returns><span data-ttu-id="663dc-575">モジュールの配列。</span><span class="sxs-lookup"><span data-stu-id="663dc-575">An array of modules.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663dc-576">このメソッドは、パブリックおよびプライベートのリソース ファイルで機能します。</span><span class="sxs-lookup"><span data-stu-id="663dc-576">This method works on public and private resource files.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="663dc-577">ファイル名拡張子を持つモジュールを生成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="663dc-577">Modules must be emitted with file name extensions.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="663dc-578">次の例では、アセンブリ マニフェストを含む、返される配列で、モジュールの名前が表示されます。</span><span class="sxs-lookup"><span data-stu-id="663dc-578">The following example displays the name of the module in the returned array that contains the assembly manifest.</span></span>  
  
 [!code-cpp[Classic Assembly.GetModules Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Assembly.GetModules Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Assembly.GetModules Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Assembly.GetModules Example/CS/source.cs#1)]
 [!code-vb[Classic Assembly.GetModules Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Assembly.GetModules Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="663dc-579">読み込まれるモジュールは、ファイル名拡張子を指定しません。</span><span class="sxs-lookup"><span data-stu-id="663dc-579">The module to be loaded does not specify a file name extension.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetModules">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.Module[] GetModules (bool getResourceModules);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Module[] GetModules(bool getResourceModules) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetModules(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetModules (getResourceModules As Boolean) As Module()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Reflection::Module ^&gt; ^ GetModules(bool getResourceModules);" />
      <MemberSignature Language="F#" Value="abstract member GetModules : bool -&gt; System.Reflection.Module[]&#xA;override this.GetModules : bool -&gt; System.Reflection.Module[]" Usage="assembly.GetModules getResourceModules" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetModules(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="getResourceModules" Type="System.Boolean" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="getResourceModules"><span data-ttu-id="663dc-580">リソース モジュールを含める場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="663dc-580"><see langword="true" /> to include resource modules; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="663dc-581">リソース モジュールを含めるかどうかを指定して、このアセンブリの一部であるすべてのモジュールを取得します。</span><span class="sxs-lookup"><span data-stu-id="663dc-581">Gets all the modules that are part of this assembly, specifying whether to include resource modules.</span></span></summary>
        <returns><span data-ttu-id="663dc-582">モジュールの配列。</span><span class="sxs-lookup"><span data-stu-id="663dc-582">An array of modules.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663dc-583">このメソッドは、パブリックおよびプライベートのリソース ファイルで機能します。</span><span class="sxs-lookup"><span data-stu-id="663dc-583">This method works on public and private resource files.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="663dc-584">ファイル名拡張子を持つモジュールを生成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="663dc-584">Modules must be emitted with file name extensions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetName">
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="663dc-585">このアセンブリの <see cref="T:System.Reflection.AssemblyName" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="663dc-585">Gets an <see cref="T:System.Reflection.AssemblyName" /> for this assembly.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.AssemblyName GetName ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.AssemblyName GetName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetName () As AssemblyName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::AssemblyName ^ GetName();" />
      <MemberSignature Language="F#" Value="abstract member GetName : unit -&gt; System.Reflection.AssemblyName&#xA;override this.GetName : unit -&gt; System.Reflection.AssemblyName" Usage="assembly.GetName " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.AssemblyName</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="663dc-586">このアセンブリの <see cref="T:System.Reflection.AssemblyName" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="663dc-586">Gets an <see cref="T:System.Reflection.AssemblyName" /> for this assembly.</span></span></summary>
        <returns><span data-ttu-id="663dc-587">このアセンブリのすべて解析された表示名を格納するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="663dc-587">An object that contains the fully parsed display name for this assembly.</span></span></returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="663dc-588">アセンブリのパスにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="663dc-588">for access to the path of the assembly.</span></span> <span data-ttu-id="663dc-589">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span><span class="sxs-lookup"><span data-stu-id="663dc-589">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.AssemblyName GetName (bool copiedName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.AssemblyName GetName(bool copiedName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetName(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetName (copiedName As Boolean) As AssemblyName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::AssemblyName ^ GetName(bool copiedName);" />
      <MemberSignature Language="F#" Value="abstract member GetName : bool -&gt; System.Reflection.AssemblyName&#xA;override this.GetName : bool -&gt; System.Reflection.AssemblyName" Usage="assembly.GetName copiedName" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetName(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.AssemblyName</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="copiedName" Type="System.Boolean" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="copiedName"><span data-ttu-id="663dc-590">シャドウ コピーの後で <see langword="true" /> をアセンブリの場所に設定する場合は <see cref="P:System.Reflection.Assembly.CodeBase" />。<see langword="false" /> を元の場所に設定する場合は <see cref="P:System.Reflection.Assembly.CodeBase" />。</span><span class="sxs-lookup"><span data-stu-id="663dc-590"><see langword="true" /> to set the <see cref="P:System.Reflection.Assembly.CodeBase" /> to the location of the assembly after it was shadow copied; <see langword="false" /> to set <see cref="P:System.Reflection.Assembly.CodeBase" /> to the original location.</span></span></param>
        <summary><span data-ttu-id="663dc-591">このアセンブリの <see cref="T:System.Reflection.AssemblyName" /> を取得し、<paramref name="copiedName" /> の指定に従ってコードベースを設定します。</span><span class="sxs-lookup"><span data-stu-id="663dc-591">Gets an <see cref="T:System.Reflection.AssemblyName" /> for this assembly, setting the codebase as specified by <paramref name="copiedName" />.</span></span></summary>
        <returns><span data-ttu-id="663dc-592">このアセンブリのすべて解析された表示名を格納するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="663dc-592">An object that contains the fully parsed display name for this assembly.</span></span></returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="663dc-593">アセンブリのパスにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="663dc-593">for access to the path of the assembly.</span></span> <span data-ttu-id="663dc-594">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span><span class="sxs-lookup"><span data-stu-id="663dc-594">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="assembly.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="663dc-595">シリアル化情報が設定されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="663dc-595">The object to be populated with serialization information.</span></span></param>
        <param name="context"><span data-ttu-id="663dc-596">シリアル化の対象コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="663dc-596">The destination context of the serialization.</span></span></param>
        <summary><span data-ttu-id="663dc-597">シリアル化情報と、このアセンブリの再インスタンス化に必要なすべてのデータを取得します。</span><span class="sxs-lookup"><span data-stu-id="663dc-597">Gets serialization information with all of the data needed to reinstantiate this assembly.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="663dc-598"><paramref name="info" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="663dc-598"><paramref name="info" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="663dc-599">直前の呼び出し元に対する完全な信頼が必要です。</span><span class="sxs-lookup"><span data-stu-id="663dc-599">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="663dc-600">このメンバーは、部分的に信頼されたまたは透過的なコードで使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="663dc-600">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetReferencedAssemblies">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.AssemblyName[] GetReferencedAssemblies ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.AssemblyName[] GetReferencedAssemblies() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetReferencedAssemblies" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetReferencedAssemblies () As AssemblyName()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Reflection::AssemblyName ^&gt; ^ GetReferencedAssemblies();" />
      <MemberSignature Language="F#" Value="abstract member GetReferencedAssemblies : unit -&gt; System.Reflection.AssemblyName[]&#xA;override this.GetReferencedAssemblies : unit -&gt; System.Reflection.AssemblyName[]" Usage="assembly.GetReferencedAssemblies " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetReferencedAssemblies</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.AssemblyName[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="663dc-601">このアセンブリが参照するすべてのアセンブリの <see cref="T:System.Reflection.AssemblyName" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="663dc-601">Gets the <see cref="T:System.Reflection.AssemblyName" /> objects for all the assemblies referenced by this assembly.</span></span></summary>
        <returns><span data-ttu-id="663dc-602">このアセンブリが参照するすべてのアセンブリのすべて解析された表示名を格納する配列。</span><span class="sxs-lookup"><span data-stu-id="663dc-602">An array that contains the fully parsed display names of all the assemblies referenced by this assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="663dc-603">以降では、 [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]、<xref:System.Reflection.AssemblyName.HashAlgorithm%2A>のプロパティ、<xref:System.Reflection.AssemblyName>このメソッドによって返されるオブジェクトが<xref:System.Configuration.Assemblies.AssemblyHashAlgorithm.None?displayProperty=nameWithType>、参照先アセンブリのハッシュ アルゴリズムがない場合、または参照先アセンブリのハッシュ アルゴリズムがない場合識別される、<xref:System.Configuration.Assemblies.AssemblyHashAlgorithm?displayProperty=nameWithType>列挙体。</span><span class="sxs-lookup"><span data-stu-id="663dc-603">Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the <xref:System.Reflection.AssemblyName.HashAlgorithm%2A> property of an <xref:System.Reflection.AssemblyName> object that is returned by this method is <xref:System.Configuration.Assemblies.AssemblyHashAlgorithm.None?displayProperty=nameWithType> if there is no hash algorithm for the referenced assembly, or if the hash algorithm of the referenced assembly is not identified by the <xref:System.Configuration.Assemblies.AssemblyHashAlgorithm?displayProperty=nameWithType> enumeration.</span></span> <span data-ttu-id="663dc-604">.NET Framework の以前のバージョンで、<xref:System.Reflection.AssemblyName.HashAlgorithm%2A>プロパティから返される<xref:System.Configuration.Assemblies.AssemblyHashAlgorithm.SHA1?displayProperty=nameWithType>でこのような状況です。</span><span class="sxs-lookup"><span data-stu-id="663dc-604">In previous versions of the .NET Framework, the <xref:System.Reflection.AssemblyName.HashAlgorithm%2A> property returned <xref:System.Configuration.Assemblies.AssemblyHashAlgorithm.SHA1?displayProperty=nameWithType> in this situation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="663dc-605">次のコード例は、呼び出し元を示します、<xref:System.Reflection.Assembly.GetReferencedAssemblies%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="663dc-605">The following code example demonstrates calling the <xref:System.Reflection.Assembly.GetReferencedAssemblies%2A> method.</span></span> <span data-ttu-id="663dc-606">このコード例が示されている例の一部、<xref:System.Reflection.Assembly>クラス。</span><span class="sxs-lookup"><span data-stu-id="663dc-606">This code example is part of a larger example provided for the <xref:System.Reflection.Assembly> class.</span></span>  
  
 [!code-cpp[Reflection#1](~/samples/snippets/cpp/VS_Snippets_CLR/Reflection/CPP/reflection.cpp#1)]
 [!code-csharp[Reflection#1](~/samples/snippets/csharp/VS_Snippets_CLR/Reflection/CS/Reflection.cs#1)]
 [!code-vb[Reflection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Reflection/VB/Reflection.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSatelliteAssembly">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="663dc-607">サテライト アセンブリを取得します。</span><span class="sxs-lookup"><span data-stu-id="663dc-607">Gets the satellite assembly.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSatelliteAssembly">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.Assembly GetSatelliteAssembly (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Assembly GetSatelliteAssembly(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSatelliteAssembly (culture As CultureInfo) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::Assembly ^ GetSatelliteAssembly(System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member GetSatelliteAssembly : System.Globalization.CultureInfo -&gt; System.Reflection.Assembly&#xA;override this.GetSatelliteAssembly : System.Globalization.CultureInfo -&gt; System.Reflection.Assembly" Usage="assembly.GetSatelliteAssembly culture" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="culture"><span data-ttu-id="663dc-608">指定されたカルチャ。</span><span class="sxs-lookup"><span data-stu-id="663dc-608">The specified culture.</span></span></param>
        <summary><span data-ttu-id="663dc-609">指定されたカルチャ設定のサテライト アセンブリを取得します。</span><span class="sxs-lookup"><span data-stu-id="663dc-609">Gets the satellite assembly for the specified culture.</span></span></summary>
        <returns><span data-ttu-id="663dc-610">指定されたサテライト アセンブリ。</span><span class="sxs-lookup"><span data-stu-id="663dc-610">The specified satellite assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663dc-611">サテライト アセンブリには、メイン アプリケーション アセンブリは、ローカライズできない実行可能コードと、既定またはニュートラル カルチャとして機能する単一カルチャ用のリソースを格納、ローカライズされたリソースが含まれます。</span><span class="sxs-lookup"><span data-stu-id="663dc-611">Satellite assemblies contain localized resources, as distinct from main application assemblies, which contain non-localizable executable code and resources for a single culture that serve as the default or neutral culture.</span></span>  
  
 <span data-ttu-id="663dc-612">現在のアセンブリ バージョンを使用するには、このメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="663dc-612">Call this method to use your current assembly version.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="663dc-613"><paramref name="culture" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="663dc-613"><paramref name="culture" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="663dc-614">アセンブリが見つかりません。</span><span class="sxs-lookup"><span data-stu-id="663dc-614">The assembly cannot be found.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="663dc-615">ファイル名が一致するサテライト アセンブリが見つかりましたが、<see langword="CultureInfo" /> は指定されているファイル名とは一致しませんでした。</span><span class="sxs-lookup"><span data-stu-id="663dc-615">The satellite assembly with a matching file name was found, but the <see langword="CultureInfo" /> did not match the one specified.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="663dc-616">サテライト アセンブリは、有効なアセンブリではありません。</span><span class="sxs-lookup"><span data-stu-id="663dc-616">The satellite assembly is not a valid assembly.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetSatelliteAssembly">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.Assembly GetSatelliteAssembly (System.Globalization.CultureInfo culture, Version version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Assembly GetSatelliteAssembly(class System.Globalization.CultureInfo culture, class System.Version version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo,System.Version)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::Assembly ^ GetSatelliteAssembly(System::Globalization::CultureInfo ^ culture, Version ^ version);" />
      <MemberSignature Language="F#" Value="abstract member GetSatelliteAssembly : System.Globalization.CultureInfo * Version -&gt; System.Reflection.Assembly&#xA;override this.GetSatelliteAssembly : System.Globalization.CultureInfo * Version -&gt; System.Reflection.Assembly" Usage="assembly.GetSatelliteAssembly (culture, version)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo,System.Version)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="version" Type="System.Version" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="culture"><span data-ttu-id="663dc-617">指定されたカルチャ。</span><span class="sxs-lookup"><span data-stu-id="663dc-617">The specified culture.</span></span></param>
        <param name="version"><span data-ttu-id="663dc-618">サテライト アセンブリのバージョン。</span><span class="sxs-lookup"><span data-stu-id="663dc-618">The version of the satellite assembly.</span></span></param>
        <summary><span data-ttu-id="663dc-619">指定されたバージョンの、指定されたカルチャ設定のサテライト アセンブリを取得します。</span><span class="sxs-lookup"><span data-stu-id="663dc-619">Gets the specified version of the satellite assembly for the specified culture.</span></span></summary>
        <returns><span data-ttu-id="663dc-620">指定されたサテライト アセンブリ。</span><span class="sxs-lookup"><span data-stu-id="663dc-620">The specified satellite assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663dc-621">サテライト アセンブリには、メイン アプリケーション アセンブリは、ローカライズできない実行可能コードと、既定またはニュートラル カルチャとして機能する単一カルチャ用のリソースを格納、ローカライズされたリソースが含まれます。</span><span class="sxs-lookup"><span data-stu-id="663dc-621">Satellite assemblies contain localized resources, as distinct from main application assemblies, which contain non-localizable executable code and resources for a single culture that serve as the default or neutral culture.</span></span>  
  
 <span data-ttu-id="663dc-622">呼び出す、<xref:System.Reflection.Assembly.GetSatelliteAssembly%28System.Globalization.CultureInfo%29>の現在のアセンブリ バージョンを使用するオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="663dc-622">Call the <xref:System.Reflection.Assembly.GetSatelliteAssembly%28System.Globalization.CultureInfo%29> overload to use your current assembly version.</span></span>  
  
 <span data-ttu-id="663dc-623">場合`version`は`null`、メイン アセンブリとリソースの両方が署名されている場合、現在のアセンブリのバージョンを使用します。</span><span class="sxs-lookup"><span data-stu-id="663dc-623">If `version` is `null`, the current assembly version is used if both the resource and main assemblies are signed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="663dc-624"><paramref name="culture" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="663dc-624"><paramref name="culture" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="663dc-625">ファイル名が一致するサテライト アセンブリが見つかりましたが、<see langword="CultureInfo" /> またはバージョンが指定されているファイルとは一致しませんでした。</span><span class="sxs-lookup"><span data-stu-id="663dc-625">The satellite assembly with a matching file name was found, but the <see langword="CultureInfo" /> or the version did not match the one specified.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="663dc-626">アセンブリが見つかりません。</span><span class="sxs-lookup"><span data-stu-id="663dc-626">The assembly cannot be found.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="663dc-627">サテライト アセンブリは、有効なアセンブリではありません。</span><span class="sxs-lookup"><span data-stu-id="663dc-627">The satellite assembly is not a valid assembly.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetType">
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="663dc-628">指定された型を表す <see cref="T:System.Type" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="663dc-628">Gets the <see cref="T:System.Type" /> object that represents the specified type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetType();" />
      <MemberSignature Language="F#" Value="override this.GetType : unit -&gt; Type" Usage="assembly.GetType " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public virtual Type GetType (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetType (name As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetType(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.GetType : string -&gt; Type" Usage="assembly.GetType name" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetType(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="663dc-629">型の完全な名前。</span><span class="sxs-lookup"><span data-stu-id="663dc-629">The full name of the type.</span></span></param>
        <summary><span data-ttu-id="663dc-630">指定した名前の <see cref="T:System.Type" /> オブジェクトを、アセンブリ インスタンスから取得します。</span><span class="sxs-lookup"><span data-stu-id="663dc-630">Gets the <see cref="T:System.Type" /> object with the specified name in the assembly instance.</span></span></summary>
        <returns><span data-ttu-id="663dc-631">指定したクラスを表すオブジェクト。クラスが見つからない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="663dc-631">An object that represents the specified class, or <see langword="null" /> if the class is not found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663dc-632">このメソッドは、現在のアセンブリのインスタンスのみを検索します。</span><span class="sxs-lookup"><span data-stu-id="663dc-632">This method only searches the current assembly instance.</span></span> <span data-ttu-id="663dc-633">`name`名前空間、アセンブリではなく、パラメーターが含まれます。</span><span class="sxs-lookup"><span data-stu-id="663dc-633">The `name` parameter includes the namespace but not the assembly.</span></span> <span data-ttu-id="663dc-634">型の他のアセンブリを検索するには、使用、<xref:System.Type.GetType%28System.String%29?displayProperty=nameWithType>型名の一部としてアセンブリの表示名を含めることができます必要に応じてメソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="663dc-634">To search other assemblies for a type, use the <xref:System.Type.GetType%28System.String%29?displayProperty=nameWithType> method overload, which can optionally include an assembly display name as part of the type name.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="663dc-635">場合は、型は、別のアセンブリに転送されましたが、このメソッドによっても返されます。</span><span class="sxs-lookup"><span data-stu-id="663dc-635">If the type has been forwarded to another assembly, it is still returned by this method.</span></span> <span data-ttu-id="663dc-636">型の転送については、次を参照してください。[共通言語ランタイムで型の転送](~/docs/framework/app-domains/type-forwarding-in-the-common-language-runtime.md)します。</span><span class="sxs-lookup"><span data-stu-id="663dc-636">For information on type forwarding, see [Type Forwarding in the Common Language Runtime](~/docs/framework/app-domains/type-forwarding-in-the-common-language-runtime.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="663dc-637">次の例では、抽象`MeansOfTransportation`クラス、`Transportation`名前空間。</span><span class="sxs-lookup"><span data-stu-id="663dc-637">The following example defines an abstract `MeansOfTransportation` class in the `Transportation` namespace.</span></span> <span data-ttu-id="663dc-638">呼び出す、<xref:System.Reflection.Assembly.GetType%28System.String%29>取得するメソッドをその<xref:System.Type>オブジェクト、呼び出し、<xref:System.Type.GetProperties%2A?displayProperty=nameWithType>の配列を取得するメソッドを<xref:System.Reflection.PropertyInfo>抽象化のプロパティの型のプロパティを表すオブジェクト、型の情報が表示されます。</span><span class="sxs-lookup"><span data-stu-id="663dc-638">It calls the <xref:System.Reflection.Assembly.GetType%28System.String%29> method to retrieve its <xref:System.Type> object, calls the <xref:System.Type.GetProperties%2A?displayProperty=nameWithType> method to get an array of <xref:System.Reflection.PropertyInfo> objects that represent the type's properties, and then displays information on the type's abstract properties.</span></span> <span data-ttu-id="663dc-639">なおへの呼び出し、<xref:System.Reflection.Assembly.GetType%28System.String%29>メソッドは、型の完全修飾名 (つまり、その名前空間型の名前と共に) を使用します。</span><span class="sxs-lookup"><span data-stu-id="663dc-639">Note that the call to the <xref:System.Reflection.Assembly.GetType%28System.String%29> method uses the type's fully qualified name (that is, its namespace along with its type name).</span></span>  
  
 [!code-csharp[System.Reflection.Assembly.GetType#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflection.assembly.gettype/cs/gettype1.cs#1)]
 [!code-vb[System.Reflection.Assembly.GetType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.reflection.assembly.gettype/vb/gettype1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="663dc-640"><paramref name="name" /> が無効です。</span><span class="sxs-lookup"><span data-stu-id="663dc-640"><paramref name="name" /> is invalid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="663dc-641"><paramref name="name" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="663dc-641"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="663dc-642"><paramref name="name" /> には見つからなかった依存アセンブリが必要です。</span><span class="sxs-lookup"><span data-stu-id="663dc-642"><paramref name="name" /> requires a dependent assembly that could not be found.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><block subset="none" type="note">
            <para>  
 <span data-ttu-id="663dc-643"><see href="https://go.microsoft.com/fwlink/?LinkID=247912">Windows ストア アプリ用 .NET</see> または<see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">ポータブル クラス ライブラリ</see>では、基本クラスの例外である <see cref="T:System.IO.IOException" /> を代わりにキャッチします。</span><span class="sxs-lookup"><span data-stu-id="663dc-643">In the <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET for Windows Store apps</see> or the <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Portable Class Library</see>, catch the base class exception, <see cref="T:System.IO.IOException" />, instead.</span></span>  
  
</para>
          </block><span data-ttu-id="663dc-644">
          <paramref name="name" /> には、見つかったものの読み込めなかった依存アセンブリが必要です。</span><span class="sxs-lookup"><span data-stu-id="663dc-644">
          <paramref name="name" /> requires a dependent assembly that was found but could not be loaded.</span></span>  
  
<span data-ttu-id="663dc-645">または</span><span class="sxs-lookup"><span data-stu-id="663dc-645">-or-</span></span> 
<span data-ttu-id="663dc-646">現在のアセンブリはリフレクションのみのコンテキストに読み込まれましたが、<paramref name="name" /> には事前に読み込まれていない依存アセンブリが必要です。</span><span class="sxs-lookup"><span data-stu-id="663dc-646">The current assembly was loaded into the reflection-only context, and <paramref name="name" /> requires a dependent assembly that was not preloaded.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="663dc-647"><paramref name="name" /> には依存アセンブリが必要ですが、ファイルは有効なアセンブリではありません。</span><span class="sxs-lookup"><span data-stu-id="663dc-647"><paramref name="name" /> requires a dependent assembly, but the file is not a valid assembly.</span></span>  
  
<span data-ttu-id="663dc-648">または</span><span class="sxs-lookup"><span data-stu-id="663dc-648">-or-</span></span> 
 <span data-ttu-id="663dc-649"><paramref name="name" /> には、現在読み込まれているバージョンより新しいバージョンのランタイム用にコンパイルされた依存アセンブリが必要です。</span><span class="sxs-lookup"><span data-stu-id="663dc-649"><paramref name="name" /> requires a dependent assembly which was compiled for a version of the runtime later than the currently loaded version.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public virtual Type GetType (string name, bool throwOnError);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType(string name, bool throwOnError) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetType(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetType (name As String, throwOnError As Boolean) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetType(System::String ^ name, bool throwOnError);" />
      <MemberSignature Language="F#" Value="override this.GetType : string * bool -&gt; Type" Usage="assembly.GetType (name, throwOnError)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetType(System.String,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="throwOnError" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="663dc-650">型の完全な名前。</span><span class="sxs-lookup"><span data-stu-id="663dc-650">The full name of the type.</span></span></param>
        <param name="throwOnError"><span data-ttu-id="663dc-651">型が見つからなかったときに例外をスローする場合は <see langword="true" />。<see langword="null" /> を返す場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="663dc-651"><see langword="true" /> to throw an exception if the type is not found; <see langword="false" /> to return <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="663dc-652">指定した名前の <see cref="T:System.Type" /> オブジェクトをアセンブリ インスタンスから取得し、型が見つからない場合は、オプションで例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="663dc-652">Gets the <see cref="T:System.Type" /> object with the specified name in the assembly instance and optionally throws an exception if the type is not found.</span></span></summary>
        <returns><span data-ttu-id="663dc-653">指定されているクラスを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="663dc-653">An object that represents the specified class.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663dc-654">このメソッドは、現在のアセンブリのインスタンスのみを検索します。</span><span class="sxs-lookup"><span data-stu-id="663dc-654">This method only searches the current assembly instance.</span></span> <span data-ttu-id="663dc-655">`name`名前空間、アセンブリではなく、パラメーターが含まれます。</span><span class="sxs-lookup"><span data-stu-id="663dc-655">The `name` parameter includes the namespace but not the assembly.</span></span> <span data-ttu-id="663dc-656">型の他のアセンブリを検索するには、使用、<xref:System.Type.GetType%28System.String%29?displayProperty=nameWithType>型名の一部としてアセンブリの表示名を含めることができます必要に応じてメソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="663dc-656">To search other assemblies for a type, use the <xref:System.Type.GetType%28System.String%29?displayProperty=nameWithType> method overload, which can optionally include an assembly display name as part of the type name.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="663dc-657">場合は、型は、別のアセンブリに転送されましたが、このメソッドによっても返されます。</span><span class="sxs-lookup"><span data-stu-id="663dc-657">If the type has been forwarded to another assembly, it is still returned by this method.</span></span> <span data-ttu-id="663dc-658">型の転送については、次を参照してください。[共通言語ランタイムで型の転送](~/docs/framework/app-domains/type-forwarding-in-the-common-language-runtime.md)します。</span><span class="sxs-lookup"><span data-stu-id="663dc-658">For information on type forwarding, see [Type Forwarding in the Common Language Runtime](~/docs/framework/app-domains/type-forwarding-in-the-common-language-runtime.md).</span></span>  
  
 <span data-ttu-id="663dc-659">`throwOnError`パラメーター型が見つからない場合にのみ影響します。</span><span class="sxs-lookup"><span data-stu-id="663dc-659">The `throwOnError` parameter only affects what happens when the type is not found.</span></span> <span data-ttu-id="663dc-660">スローされる可能性があるその他の例外には影響しません。</span><span class="sxs-lookup"><span data-stu-id="663dc-660">It does not affect any other exceptions that might be thrown.</span></span> <span data-ttu-id="663dc-661">型が見つかりましたが、読み込みができない場合は、特に<xref:System.TypeLoadException>スローされる場合でも`throwOnError`は`false`。</span><span class="sxs-lookup"><span data-stu-id="663dc-661">In particular, if the type is found but cannot be loaded, <xref:System.TypeLoadException> can be thrown even if `throwOnError` is `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="663dc-662"><paramref name="name" /> が無効です。</span><span class="sxs-lookup"><span data-stu-id="663dc-662"><paramref name="name" /> is invalid.</span></span>  
  
<span data-ttu-id="663dc-663">または</span><span class="sxs-lookup"><span data-stu-id="663dc-663">-or-</span></span> 
<span data-ttu-id="663dc-664"><paramref name="name" /> の長さが 1024 文字を超えています。</span><span class="sxs-lookup"><span data-stu-id="663dc-664">The length of <paramref name="name" /> exceeds 1024 characters.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="663dc-665"><paramref name="name" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="663dc-665"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="663dc-666"><paramref name="throwOnError" /> が <see langword="true" /> であり、型が見つかりません。</span><span class="sxs-lookup"><span data-stu-id="663dc-666"><paramref name="throwOnError" /> is <see langword="true" />, and the type cannot be found.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="663dc-667"><paramref name="name" /> には見つからなかった依存アセンブリが必要です。</span><span class="sxs-lookup"><span data-stu-id="663dc-667"><paramref name="name" /> requires a dependent assembly that could not be found.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="663dc-668"><paramref name="name" /> には、見つかったものの読み込めなかった依存アセンブリが必要です。</span><span class="sxs-lookup"><span data-stu-id="663dc-668"><paramref name="name" /> requires a dependent assembly that was found but could not be loaded.</span></span>  
  
<span data-ttu-id="663dc-669">または</span><span class="sxs-lookup"><span data-stu-id="663dc-669">-or-</span></span> 
<span data-ttu-id="663dc-670">現在のアセンブリはリフレクションのみのコンテキストに読み込まれましたが、<paramref name="name" /> には事前に読み込まれていない依存アセンブリが必要です。</span><span class="sxs-lookup"><span data-stu-id="663dc-670">The current assembly was loaded into the reflection-only context, and <paramref name="name" /> requires a dependent assembly that was not preloaded.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="663dc-671"><paramref name="name" /> には依存アセンブリが必要ですが、ファイルは有効なアセンブリではありません。</span><span class="sxs-lookup"><span data-stu-id="663dc-671"><paramref name="name" /> requires a dependent assembly, but the file is not a valid assembly.</span></span>  
  
<span data-ttu-id="663dc-672">または</span><span class="sxs-lookup"><span data-stu-id="663dc-672">-or-</span></span> 
 <span data-ttu-id="663dc-673"><paramref name="name" /> には、現在読み込まれているバージョンより新しいバージョンのランタイム用にコンパイルされた依存アセンブリが必要です。</span><span class="sxs-lookup"><span data-stu-id="663dc-673"><paramref name="name" /> requires a dependent assembly which was compiled for a version of the runtime later than the currently loaded version.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public virtual Type GetType (string name, bool throwOnError, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType(string name, bool throwOnError, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetType(System.String,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetType (name As String, throwOnError As Boolean, ignoreCase As Boolean) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetType(System::String ^ name, bool throwOnError, bool ignoreCase);" />
      <MemberSignature Language="F#" Value="override this.GetType : string * bool * bool -&gt; Type" Usage="assembly.GetType (name, throwOnError, ignoreCase)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetType(System.String,System.Boolean,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="throwOnError" Type="System.Boolean" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="ignoreCase" Type="System.Boolean" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="663dc-674">型の完全な名前。</span><span class="sxs-lookup"><span data-stu-id="663dc-674">The full name of the type.</span></span></param>
        <param name="throwOnError"><span data-ttu-id="663dc-675">型が見つからなかったときに例外をスローする場合は <see langword="true" />。<see langword="null" /> を返す場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="663dc-675"><see langword="true" /> to throw an exception if the type is not found; <see langword="false" /> to return <see langword="null" />.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="663dc-676">型名の大文字と小文字の違いを無視する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="663dc-676"><see langword="true" /> to ignore the case of the type name; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="663dc-677">指定した名前の <see cref="T:System.Type" /> オブジェクトをアセンブリ インスタンスから取得します。オプションで、大文字と小文字の区別を無視したり、型が見つからない場合は例外をスローしたりできます。</span><span class="sxs-lookup"><span data-stu-id="663dc-677">Gets the <see cref="T:System.Type" /> object with the specified name in the assembly instance, with the options of ignoring the case, and of throwing an exception if the type is not found.</span></span></summary>
        <returns><span data-ttu-id="663dc-678">指定されているクラスを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="663dc-678">An object that represents the specified class.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663dc-679">このメソッドは、現在のアセンブリのインスタンスのみを検索します。</span><span class="sxs-lookup"><span data-stu-id="663dc-679">This method only searches the current assembly instance.</span></span> <span data-ttu-id="663dc-680">`name`名前空間、アセンブリではなく、パラメーターが含まれます。</span><span class="sxs-lookup"><span data-stu-id="663dc-680">The `name` parameter includes the namespace but not the assembly.</span></span> <span data-ttu-id="663dc-681">型の他のアセンブリを検索するには、使用、<xref:System.Type.GetType%28System.String%29?displayProperty=nameWithType>型名の一部としてアセンブリの表示名を含めることができます必要に応じてメソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="663dc-681">To search other assemblies for a type, use the <xref:System.Type.GetType%28System.String%29?displayProperty=nameWithType> method overload, which can optionally include an assembly display name as part of the type name.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="663dc-682">場合は、型は、別のアセンブリに転送されましたが、このメソッドによっても返されます。</span><span class="sxs-lookup"><span data-stu-id="663dc-682">If the type has been forwarded to another assembly, it is still returned by this method.</span></span> <span data-ttu-id="663dc-683">型の転送については、次を参照してください。[共通言語ランタイムで型の転送](~/docs/framework/app-domains/type-forwarding-in-the-common-language-runtime.md)します。</span><span class="sxs-lookup"><span data-stu-id="663dc-683">For information on type forwarding, see [Type Forwarding in the Common Language Runtime](~/docs/framework/app-domains/type-forwarding-in-the-common-language-runtime.md).</span></span>  
  
 <span data-ttu-id="663dc-684">`throwOnError`パラメーター型が見つからない場合にのみ影響します。</span><span class="sxs-lookup"><span data-stu-id="663dc-684">The `throwOnError` parameter only affects what happens when the type is not found.</span></span> <span data-ttu-id="663dc-685">スローされる可能性があるその他の例外には影響しません。</span><span class="sxs-lookup"><span data-stu-id="663dc-685">It does not affect any other exceptions that might be thrown.</span></span> <span data-ttu-id="663dc-686">型が見つかりましたが、読み込みができない場合は、特に<xref:System.TypeLoadException>スローされる場合でも`throwOnError`は`false`。</span><span class="sxs-lookup"><span data-stu-id="663dc-686">In particular, if the type is found but cannot be loaded, <xref:System.TypeLoadException> can be thrown even if `throwOnError` is `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="663dc-687"><paramref name="name" /> が無効です。</span><span class="sxs-lookup"><span data-stu-id="663dc-687"><paramref name="name" /> is invalid.</span></span>  
  
<span data-ttu-id="663dc-688">または</span><span class="sxs-lookup"><span data-stu-id="663dc-688">-or-</span></span> 
<span data-ttu-id="663dc-689"><paramref name="name" /> の長さが 1024 文字を超えています。</span><span class="sxs-lookup"><span data-stu-id="663dc-689">The length of <paramref name="name" /> exceeds 1024 characters.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="663dc-690"><paramref name="name" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="663dc-690"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="663dc-691"><paramref name="throwOnError" /> が <see langword="true" /> であり、型が見つかりません。</span><span class="sxs-lookup"><span data-stu-id="663dc-691"><paramref name="throwOnError" /> is <see langword="true" />, and the type cannot be found.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="663dc-692"><paramref name="name" /> には見つからなかった依存アセンブリが必要です。</span><span class="sxs-lookup"><span data-stu-id="663dc-692"><paramref name="name" /> requires a dependent assembly that could not be found.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="663dc-693"><paramref name="name" /> には、見つかったものの読み込めなかった依存アセンブリが必要です。</span><span class="sxs-lookup"><span data-stu-id="663dc-693"><paramref name="name" /> requires a dependent assembly that was found but could not be loaded.</span></span>  
  
<span data-ttu-id="663dc-694">または</span><span class="sxs-lookup"><span data-stu-id="663dc-694">-or-</span></span> 
<span data-ttu-id="663dc-695">現在のアセンブリはリフレクションのみのコンテキストに読み込まれましたが、<paramref name="name" /> には事前に読み込まれていない依存アセンブリが必要です。</span><span class="sxs-lookup"><span data-stu-id="663dc-695">The current assembly was loaded into the reflection-only context, and <paramref name="name" /> requires a dependent assembly that was not preloaded.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="663dc-696"><paramref name="name" /> には依存アセンブリが必要ですが、ファイルは有効なアセンブリではありません。</span><span class="sxs-lookup"><span data-stu-id="663dc-696"><paramref name="name" /> requires a dependent assembly, but the file is not a valid assembly.</span></span>  
  
<span data-ttu-id="663dc-697">または</span><span class="sxs-lookup"><span data-stu-id="663dc-697">-or-</span></span> 
 <span data-ttu-id="663dc-698"><paramref name="name" /> には、現在読み込まれているバージョンより新しいバージョンのランタイム用にコンパイルされた依存アセンブリが必要です。</span><span class="sxs-lookup"><span data-stu-id="663dc-698"><paramref name="name" /> requires a dependent assembly which was compiled for a version of the runtime later than the currently loaded version.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetTypes">
      <MemberSignature Language="C#" Value="public virtual Type[] GetTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type[] GetTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetTypes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTypes () As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;Type ^&gt; ^ GetTypes();" />
      <MemberSignature Language="F#" Value="abstract member GetTypes : unit -&gt; Type[]&#xA;override this.GetTypes : unit -&gt; Type[]" Usage="assembly.GetTypes " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetTypes</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="663dc-699">このアセンブリで定義されている型を取得します。</span><span class="sxs-lookup"><span data-stu-id="663dc-699">Gets the types defined in this assembly.</span></span></summary>
        <returns><span data-ttu-id="663dc-700">このアセンブリで定義されているすべての型を格納している配列。</span><span class="sxs-lookup"><span data-stu-id="663dc-700">An array that contains all the types that are defined in this assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663dc-701">返される配列には、入れ子にされた型が含まれています。</span><span class="sxs-lookup"><span data-stu-id="663dc-701">The returned array includes nested types.</span></span>  
  
 <span data-ttu-id="663dc-702">場合、<xref:System.Reflection.Assembly.GetTypes%2A>であるアセンブリが読み込まれていない (たとえば、2 つ目のアセンブリの型から派生した) 場合、アセンブリ内の型に依存するアセンブリと型のメソッドが呼び出された、<xref:System.Reflection.ReflectionTypeLoadException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="663dc-702">If the <xref:System.Reflection.Assembly.GetTypes%2A> method is called on an assembly and a type in that assembly is dependent on a type in an assembly that has not been loaded (for example, if it derives from a type in the second assembly), a <xref:System.Reflection.ReflectionTypeLoadException> is thrown.</span></span> <span data-ttu-id="663dc-703">たとえば、これに最初のアセンブリが読み込まれている場合、<xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A>または<xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A>メソッド、および 2 つ目のアセンブリは読み込まれませんでした。</span><span class="sxs-lookup"><span data-stu-id="663dc-703">For example, this can happen if the first assembly was loaded with the <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A> or <xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A> methods, and the second assembly was not loaded.</span></span> <span data-ttu-id="663dc-704">使用して読み込まれたアセンブリにも発生しても、<xref:System.Reflection.Assembly.Load%2A>と<xref:System.Reflection.Assembly.LoadFile%2A>メソッドの場合は、2 つ目のアセンブリが見つからない場合に、<xref:System.Reflection.Assembly.GetTypes%2A>メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="663dc-704">It can also happen with assemblies loaded using the <xref:System.Reflection.Assembly.Load%2A> and <xref:System.Reflection.Assembly.LoadFile%2A> methods if the second assembly cannot be located when the <xref:System.Reflection.Assembly.GetTypes%2A> method is called.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="663dc-705">型は、別のアセンブリに転送されていますが場合、返される配列には含まれません。</span><span class="sxs-lookup"><span data-stu-id="663dc-705">If a type has been forwarded to another assembly, it is not included in the returned array.</span></span> <span data-ttu-id="663dc-706">型の転送については、次を参照してください。[共通言語ランタイムで型の転送](~/docs/framework/app-domains/type-forwarding-in-the-common-language-runtime.md)します。</span><span class="sxs-lookup"><span data-stu-id="663dc-706">For information on type forwarding, see [Type Forwarding in the Common Language Runtime](~/docs/framework/app-domains/type-forwarding-in-the-common-language-runtime.md).</span></span>  
  
 <span data-ttu-id="663dc-707">コレクションを取得する<xref:System.Reflection.TypeInfo>オブジェクトの配列ではなく<xref:System.Type>、オブジェクトを使用して、<xref:System.Reflection.Assembly.DefinedTypes%2A?displayProperty=nameWithType>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="663dc-707">To retrieve a collection of <xref:System.Reflection.TypeInfo> objects instead of an array of <xref:System.Type> objects, use the <xref:System.Reflection.Assembly.DefinedTypes%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="663dc-708">次の例では、型指定されたアセンブリ内で 1 つのメソッドのパラメーターが表示されます。</span><span class="sxs-lookup"><span data-stu-id="663dc-708">The following example displays parameters of one method on a type in the specified assembly.</span></span>  
  
 [!code-cpp[System.Reflection.Assembly#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Assembly/CPP/assembly.cpp#11)]
 [!code-csharp[System.Reflection.Assembly#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Assembly/CS/assembly.cs#11)]
 [!code-vb[System.Reflection.Assembly#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Assembly/VB/assembly.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.ReflectionTypeLoadException"><span data-ttu-id="663dc-709">アセンブリには、読み込むことができない 1 つ以上の型が含まれています。</span><span class="sxs-lookup"><span data-stu-id="663dc-709">The assembly contains one or more types that cannot be loaded.</span></span> <span data-ttu-id="663dc-710">この例外の <see cref="P:System.Reflection.ReflectionTypeLoadException.Types" /> プロパティによって返される配列には、読み込まれた各型の <see cref="T:System.Type" /> オブジェクト、および読み込むことができなかった各型の <see langword="null" /> が含まれています。<see cref="P:System.Reflection.ReflectionTypeLoadException.LoaderExceptions" /> プロパティには、読み込むことができなかった各型の例外が含まれています。</span><span class="sxs-lookup"><span data-stu-id="663dc-710">The array returned by the <see cref="P:System.Reflection.ReflectionTypeLoadException.Types" /> property of this exception contains a <see cref="T:System.Type" /> object for each type that was loaded and <see langword="null" /> for each type that could not be loaded, while the <see cref="P:System.Reflection.ReflectionTypeLoadException.LoaderExceptions" /> property contains an exception for each type that could not be loaded.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GlobalAssemblyCache">
      <MemberSignature Language="C#" Value="public virtual bool GlobalAssemblyCache { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool GlobalAssemblyCache" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.GlobalAssemblyCache" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property GlobalAssemblyCache As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool GlobalAssemblyCache { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.GlobalAssemblyCache : bool" Usage="System.Reflection.Assembly.GlobalAssemblyCache" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Assembly.GlobalAssemblyCache</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="663dc-711">アセンブリがグローバル アセンブリ キャッシュから読み込まれたかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="663dc-711">Gets a value indicating whether the assembly was loaded from the global assembly cache.</span></span></summary>
        <value><span data-ttu-id="663dc-712">アセンブリがグローバル アセンブリ キャッシュから読み込まれた場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="663dc-712"><see langword="true" /> if the assembly was loaded from the global assembly cache; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HostContext">
      <MemberSignature Language="C#" Value="public virtual long HostContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 HostContext" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.HostContext" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HostContext As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long HostContext { long get(); };" />
      <MemberSignature Language="F#" Value="member this.HostContext : int64" Usage="System.Reflection.Assembly.HostContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="663dc-713">アセンブリの読み込みに使用したホスト コンテキストを取得します。</span><span class="sxs-lookup"><span data-stu-id="663dc-713">Gets the host context with which the assembly was loaded.</span></span></summary>
        <value><span data-ttu-id="663dc-714">アセンブリの読み込みに使用したホスト コンテキストがある場合は、そのホスト コンテキストを示す <see cref="T:System.Int64" /> 値。</span><span class="sxs-lookup"><span data-stu-id="663dc-714">An <see cref="T:System.Int64" /> value that indicates the host context with which the assembly was loaded, if any.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageRuntimeVersion">
      <MemberSignature Language="C#" Value="public virtual string ImageRuntimeVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ImageRuntimeVersion" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.ImageRuntimeVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ImageRuntimeVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ImageRuntimeVersion { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ImageRuntimeVersion : string" Usage="System.Reflection.Assembly.ImageRuntimeVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="663dc-715">マニフェストを格納しているファイルに保存された共通言語ランタイム (CLR: common language runtime) のバージョンを表す文字列を取得します。</span><span class="sxs-lookup"><span data-stu-id="663dc-715">Gets a string representing the version of the common language runtime (CLR) saved in the file containing the manifest.</span></span></summary>
        <value><span data-ttu-id="663dc-716">CLR バージョン フォルダー名。</span><span class="sxs-lookup"><span data-stu-id="663dc-716">The CLR version folder name.</span></span> <span data-ttu-id="663dc-717">これは完全パスではありません。</span><span class="sxs-lookup"><span data-stu-id="663dc-717">This is not a full path.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663dc-718">たとえば、v1.1.4322、.NET Framework version 1.1 の値となります。</span><span class="sxs-lookup"><span data-stu-id="663dc-718">For example, the value for the .NET Framework version 1.1 would be v1.1.4322.</span></span> <span data-ttu-id="663dc-719">そのバージョンのバイナリ ファイルは、パスの %windir%\microsoft.net\framework\v1.1.4322 に配置するとします。</span><span class="sxs-lookup"><span data-stu-id="663dc-719">The binary files for that version would be located in the path %windir%\Microsoft.NET\Framework\v1.1.4322.</span></span>  
  
 <span data-ttu-id="663dc-720">既定では、<xref:System.Reflection.Assembly.ImageRuntimeVersion%2A>アセンブリのビルドに使用されている CLR のバージョンに設定されます。</span><span class="sxs-lookup"><span data-stu-id="663dc-720">By default, <xref:System.Reflection.Assembly.ImageRuntimeVersion%2A> is set to the version of the CLR used to build the assembly.</span></span> <span data-ttu-id="663dc-721">ただし、これが設定を別の値にコンパイル時にします。</span><span class="sxs-lookup"><span data-stu-id="663dc-721">However, it might have been set to another value at compile time.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCollectible">
      <MemberSignature Language="C#" Value="public virtual bool IsCollectible { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCollectible" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.IsCollectible" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsCollectible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsCollectible { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCollectible : bool" Usage="System.Reflection.Assembly.IsCollectible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="663dc-722">このアセンブリが収集可能な <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> に保持されているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="663dc-722">Gets a value that indicates whether this assembly is held in a collectible <see cref="T:System.Runtime.Loader.AssemblyLoadContext" />.</span></span></summary>
        <value><span data-ttu-id="663dc-723"><see langword="true" /> このアセンブリが、収集可能なに保持されている場合<see cref="T:System.Runtime.Loader.AssemblyLoadContext" />、それ以外の<see langword="false" />します。</span><span class="sxs-lookup"><span data-stu-id="663dc-723"><see langword="true" /> if this assembly is held in a collectible <see cref="T:System.Runtime.Loader.AssemblyLoadContext" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="663dc-724">詳細については、次を参照してください。[方法を使用して、デバッグで .NET Core アセンブリ unloadability](~/docs/standard/assembly/unloadability-howto.md)します。</span><span class="sxs-lookup"><span data-stu-id="663dc-724">For more information, see [How to use and debug assembly unloadability in .NET Core](~/docs/standard/assembly/unloadability-howto.md).</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public virtual bool IsDefined (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsDefined(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.IsDefined(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsDefined (attributeType As Type, inherit As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsDefined(Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="abstract member IsDefined : Type * bool -&gt; bool&#xA;override this.IsDefined : Type * bool -&gt; bool" Usage="assembly.IsDefined (attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.ICustomAttributeProvider.IsDefined(System.Type,System.Boolean)</InterfaceMember>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.IsDefined(System.Type,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="inherit" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="attributeType"><span data-ttu-id="663dc-725">このアセンブリでチェックする属性の型。</span><span class="sxs-lookup"><span data-stu-id="663dc-725">The type of the attribute to be checked for this assembly.</span></span></param>
        <param name="inherit"><span data-ttu-id="663dc-726">この型のオブジェクトでは、この引数は無視されます。</span><span class="sxs-lookup"><span data-stu-id="663dc-726">This argument is ignored for objects of this type.</span></span></param>
        <summary><span data-ttu-id="663dc-727">指定した属性がアセンブリに適用されているかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="663dc-727">Indicates whether or not a specified attribute has been applied to the assembly.</span></span></summary>
        <returns><span data-ttu-id="663dc-728">属性がアセンブリに適用されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="663dc-728"><see langword="true" /> if the attribute has been applied to the assembly; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="663dc-729">次のコード例に適用されます、<xref:System.Reflection.AssemblyTitleAttribute>アセンブリおよび、使用する属性<xref:System.Reflection.Assembly.IsDefined%2A>が適用されたかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="663dc-729">The following code example applies the <xref:System.Reflection.AssemblyTitleAttribute> attribute to an assembly and then uses <xref:System.Reflection.Assembly.IsDefined%2A> to indicate whether it was applied.</span></span> <span data-ttu-id="663dc-730">適用されていない属性もテストします。</span><span class="sxs-lookup"><span data-stu-id="663dc-730">It also tests an attribute that was not applied.</span></span>  
  
 [!code-csharp[System.Reflection.Assembly.IsDefined#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflection.assembly.isdefined/CS/isdefined.cs#1)]
 [!code-vb[System.Reflection.Assembly.IsDefined#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.reflection.assembly.isdefined/VB/isdefined.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="663dc-731"><paramref name="attributeType" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="663dc-731"><paramref name="attributeType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="663dc-732"><paramref name="attributeType" /> に無効な型が使用されています。</span><span class="sxs-lookup"><span data-stu-id="663dc-732"><paramref name="attributeType" /> uses an invalid type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsDynamic">
      <MemberSignature Language="C#" Value="public virtual bool IsDynamic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDynamic" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.IsDynamic" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsDynamic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsDynamic { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDynamic : bool" Usage="System.Reflection.Assembly.IsDynamic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="663dc-733">現在のアセンブリが、現在のプロセスでリフレクション出力を使用して動的に生成されたかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="663dc-733">Gets a value that indicates whether the current assembly was generated dynamically in the current process by using reflection emit.</span></span></summary>
        <value><span data-ttu-id="663dc-734">現在のアセンブリが現在のプロセスで動的に生成された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="663dc-734"><see langword="true" /> if the current assembly was generated dynamically in the current process; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663dc-735">動的アセンブリが、派生クラスによって表される<xref:System.Reflection.Emit.AssemblyBuilder>します。</span><span class="sxs-lookup"><span data-stu-id="663dc-735">Dynamic assemblies are represented by the derived class <xref:System.Reflection.Emit.AssemblyBuilder>.</span></span>  
  
 <span data-ttu-id="663dc-736">ディスクに保存されているアセンブリ、動的アセンブリを保存するときに動的ではありません。</span><span class="sxs-lookup"><span data-stu-id="663dc-736">When a dynamic assembly is saved to disk, the saved assembly is not dynamic.</span></span> <span data-ttu-id="663dc-737">保存されたアセンブリが別のアプリケーション ドメインまたはプロセスに読み込まれた場合、<xref:System.Reflection.Assembly.IsDynamic%2A>プロパティが返す`false`します。</span><span class="sxs-lookup"><span data-stu-id="663dc-737">If the saved assembly is loaded into another application domain or process, the <xref:System.Reflection.Assembly.IsDynamic%2A> property returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFullyTrusted">
      <MemberSignature Language="C#" Value="public bool IsFullyTrusted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFullyTrusted" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.IsFullyTrusted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFullyTrusted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFullyTrusted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFullyTrusted : bool" Usage="System.Reflection.Assembly.IsFullyTrusted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="663dc-738">現在のアセンブリが完全信頼で読み込まれたかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="663dc-738">Gets a value that indicates whether the current assembly is loaded with full trust.</span></span></summary>
        <value><span data-ttu-id="663dc-739">現在のアセンブリが完全信頼で読み込まれた場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="663dc-739"><see langword="true" /> if the current assembly is loaded with full trust; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="663dc-740">アセンブリを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="663dc-740">Loads an assembly.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly Load (byte[] rawAssembly);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly Load(unsigned int8[] rawAssembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.Load(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Load (rawAssembly As Byte()) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ Load(cli::array &lt;System::Byte&gt; ^ rawAssembly);" />
      <MemberSignature Language="F#" Value="static member Load : byte[] -&gt; System.Reflection.Assembly" Usage="System.Reflection.Assembly.Load rawAssembly" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawAssembly" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="rawAssembly"><span data-ttu-id="663dc-741">生成されたアセンブリを含む COFF ベースのイメージであるバイト配列。</span><span class="sxs-lookup"><span data-stu-id="663dc-741">A byte array that is a COFF-based image containing an emitted assembly.</span></span></param>
        <summary><span data-ttu-id="663dc-742">生成されたアセンブリを含む COFF (Common Object File Format) ベースのイメージを使用して、アセンブリを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="663dc-742">Loads the assembly with a common object file format (COFF)-based image containing an emitted assembly.</span></span> <span data-ttu-id="663dc-743">このアセンブリは、呼び出し元のアプリケーション ドメインに読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="663dc-743">The assembly is loaded into the application domain of the caller.</span></span></summary>
        <returns><span data-ttu-id="663dc-744">読み込まれるアセンブリ。</span><span class="sxs-lookup"><span data-stu-id="663dc-744">The loaded assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663dc-745">このメソッドを使用して読み込まれるアセンブリの信頼レベルでは、呼び出し元のアセンブリの信頼レベルの場合と同じです。</span><span class="sxs-lookup"><span data-stu-id="663dc-745">The trust level of an assembly that is loaded by using this method is the same as the trust level of the calling assembly.</span></span> <span data-ttu-id="663dc-746">アプリケーション ドメインの信頼レベルでバイト配列からアセンブリを読み込むには使用、<xref:System.Reflection.Assembly.Load%28System.Byte%5B%5D%2CSystem.Byte%5B%5D%2CSystem.Security.SecurityContextSource%29>メソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="663dc-746">To load an assembly from a byte array with the trust level of the application domain, use the <xref:System.Reflection.Assembly.Load%28System.Byte%5B%5D%2CSystem.Byte%5B%5D%2CSystem.Security.SecurityContextSource%29> method overload.</span></span> <span data-ttu-id="663dc-747">証拠のオーバー ロードでの使用の詳細については、<xref:System.Reflection.Assembly.Load%2A>をバイト配列を受け取るメソッドを参照してください、<xref:System.Reflection.Assembly.Load%28System.Byte%5B%5D%2CSystem.Byte%5B%5D%2CSystem.Security.Policy.Evidence%29>メソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="663dc-747">For more information about the use of evidence with overloads of the <xref:System.Reflection.Assembly.Load%2A> method that take byte arrays, see the <xref:System.Reflection.Assembly.Load%28System.Byte%5B%5D%2CSystem.Byte%5B%5D%2CSystem.Security.Policy.Evidence%29> method overload.</span></span>  
  
 <span data-ttu-id="663dc-748">C++ 実行可能ファイルにリフレクションをスローする可能性を<xref:System.BadImageFormatException>します。</span><span class="sxs-lookup"><span data-stu-id="663dc-748">Reflecting on C++ executable files might throw a <xref:System.BadImageFormatException>.</span></span> <span data-ttu-id="663dc-749">最も可能性の高い原因は、C++ コンパイラが再配置アドレスまたは`.reloc`実行可能ファイルからセクション。</span><span class="sxs-lookup"><span data-stu-id="663dc-749">This is most likely caused by the C++ compiler stripping the relocation addresses or the `.reloc` section from your executable file.</span></span> <span data-ttu-id="663dc-750">保持するために、 `.reloc` C++ 実行可能ファイルのアドレスで指定`/fixed:no`リンクしています。</span><span class="sxs-lookup"><span data-stu-id="663dc-750">To preserve the `.reloc` address for your C++ executable file, specify `/fixed:no` when you are linking.</span></span>  
  
 <span data-ttu-id="663dc-751">このメソッドのオーバー ロードが、新しい作成常にことに注意してください。<xref:System.Reflection.Assembly>に独自のマッピングを持つオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="663dc-751">Note that this method overload always creates a new <xref:System.Reflection.Assembly> object with its own mapping.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="663dc-752"><paramref name="rawAssembly" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="663dc-752"><paramref name="rawAssembly" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="663dc-753"><paramref name="rawAssembly" /> は正しいアセンブリではありません。</span><span class="sxs-lookup"><span data-stu-id="663dc-753"><paramref name="rawAssembly" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="663dc-754">または</span><span class="sxs-lookup"><span data-stu-id="663dc-754">-or-</span></span> 
<span data-ttu-id="663dc-755">共通言語ランタイムのバージョン 2.0 以降が現在読み込まれています。<paramref name="rawAssembly" /> は、より新しいバージョンでコンパイルされています。</span><span class="sxs-lookup"><span data-stu-id="663dc-755">Version 2.0 or later of the common language runtime is currently loaded and <paramref name="rawAssembly" /> was compiled with a later version.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly Load (System.Reflection.AssemblyName assemblyRef);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly Load(class System.Reflection.AssemblyName assemblyRef) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.Load(System.Reflection.AssemblyName)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Load (assemblyRef As AssemblyName) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ Load(System::Reflection::AssemblyName ^ assemblyRef);" />
      <MemberSignature Language="F#" Value="static member Load : System.Reflection.AssemblyName -&gt; System.Reflection.Assembly" Usage="System.Reflection.Assembly.Load assemblyRef" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyRef" Type="System.Reflection.AssemblyName" />
      </Parameters>
      <Docs>
        <param name="assemblyRef"><span data-ttu-id="663dc-756">読み込むアセンブリを記述するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="663dc-756">The object that describes the assembly to be loaded.</span></span></param>
        <summary><span data-ttu-id="663dc-757"><see cref="T:System.Reflection.AssemblyName" /> を指定してアセンブリを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="663dc-757">Loads an assembly given its <see cref="T:System.Reflection.AssemblyName" />.</span></span></summary>
        <returns><span data-ttu-id="663dc-758">読み込まれるアセンブリ。</span><span class="sxs-lookup"><span data-stu-id="663dc-758">The loaded assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663dc-759"><xref:System.IO.FileLoadException> 場合にスローされる`assemblyRef`アセンブリの完全な名前と簡単な名前に一致する最初のアセンブリが別のバージョン、カルチャ、または公開キー トークンを指定します。</span><span class="sxs-lookup"><span data-stu-id="663dc-759"><xref:System.IO.FileLoadException> is thrown if `assemblyRef` specifies the full assembly name and the first assembly that matches the simple name has a different version, culture, or public key token.</span></span> <span data-ttu-id="663dc-760">ローダーは、単純な名前と一致する他のアセンブリのプローブを続行できません。</span><span class="sxs-lookup"><span data-stu-id="663dc-760">The loader does not continue probing for other assemblies that match the simple name.</span></span> <span data-ttu-id="663dc-761">既定では、リモート アセンブリのコードの実行が無効になっているため、.NET Framework 4 以降、<xref:System.IO.FileLoadException>場合にスローされるも`assemblyRef`リモート アセンブリを指定します。</span><span class="sxs-lookup"><span data-stu-id="663dc-761">Starting with .NET Framework 4, because execution of code in remote assemblies is disabled by default, a <xref:System.IO.FileLoadException> is also thrown if `assemblyRef` specifies a remote assembly.</span></span> <span data-ttu-id="663dc-762">リモートの場所から読み込まれたコードの実行を有効にするを使用できます、 [ `<loadFromRemoteSources>` ](~/docs/framework/configure-apps/file-schema/runtime/loadfromremotesources-element.md)構成要素。</span><span class="sxs-lookup"><span data-stu-id="663dc-762">To enable execution of code loaded from remote locations, you can use the [`<loadFromRemoteSources>`](~/docs/framework/configure-apps/file-schema/runtime/loadfromremotesources-element.md) configuration element.</span></span>     
  
> [!NOTE]
>  <span data-ttu-id="663dc-763">使用しないでください、<xref:System.Reflection.AssemblyName>だけを持つ、<xref:System.Reflection.AssemblyName.CodeBase%2A>プロパティ セット。</span><span class="sxs-lookup"><span data-stu-id="663dc-763">Do not use an <xref:System.Reflection.AssemblyName> with only the <xref:System.Reflection.AssemblyName.CodeBase%2A> property set.</span></span> <span data-ttu-id="663dc-764"><xref:System.Reflection.AssemblyName.CodeBase%2A>プロパティがいずれかの要素を指定しないアセンブリの id (名前、バージョンなど) のための読み込みは発生しません - id によって負荷の規則に従ってから想像どおり、<xref:System.Reflection.Assembly.Load%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="663dc-764">The <xref:System.Reflection.AssemblyName.CodeBase%2A> property does not supply any elements of the assembly identity (such as name or version), so loading does not occur according to load-by-identity rules, as you would expect from the <xref:System.Reflection.Assembly.Load%2A> method.</span></span> <span data-ttu-id="663dc-765">代わりに、アセンブリが読み込み元の規則を使用して読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="663dc-765">Instead, the assembly is loaded using load-from rules.</span></span> <span data-ttu-id="663dc-766">読み込み元コンテキストを使用して、短所については、次を参照してください。、<xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType>メソッドのオーバー ロードまたは[アセンブリ読み込みのベスト プラクティス](~/docs/framework/deployment/best-practices-for-assembly-loading.md)します。</span><span class="sxs-lookup"><span data-stu-id="663dc-766">For information about the disadvantages of using the load-from context, see the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> method overload or [Best Practices for Assembly Loading](~/docs/framework/deployment/best-practices-for-assembly-loading.md).</span></span>  
  
 <span data-ttu-id="663dc-767">アセンブリに対して特定のアクセス許可を付与するかどうかは、証拠に基づいて決定されます。</span><span class="sxs-lookup"><span data-stu-id="663dc-767">Whether certain permissions are granted or not granted to an assembly is based on evidence.</span></span> <span data-ttu-id="663dc-768">アセンブリとマージのセキュリティ証拠の規則は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="663dc-768">The rules for assembly and security evidence merging are as follows:</span></span>  
  
-   <span data-ttu-id="663dc-769">使用すると、<xref:System.Reflection.Assembly.Load%2A>なしでメソッド<xref:System.Security.Policy.Evidence>パラメーター、アセンブリの表示はローダーが提供する証拠を使用して読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="663dc-769">When you use a <xref:System.Reflection.Assembly.Load%2A> method with no <xref:System.Security.Policy.Evidence> parameter, the assembly is loaded with the evidence that the loader supplies.</span></span>  
  
-   <span data-ttu-id="663dc-770">使用すると、<xref:System.Reflection.Assembly.Load%2A>メソッドを<xref:System.Security.Policy.Evidence>パラメーターの証拠がマージされます。</span><span class="sxs-lookup"><span data-stu-id="663dc-770">When you use a <xref:System.Reflection.Assembly.Load%2A> method with an <xref:System.Security.Policy.Evidence> parameter, pieces of evidence are merged.</span></span> <span data-ttu-id="663dc-771">引数として指定された証拠、<xref:System.Reflection.Assembly.Load%2A>メソッドは、ローダーによって提供される証拠の部分を置き換えます。</span><span class="sxs-lookup"><span data-stu-id="663dc-771">Pieces of evidence supplied as an argument to the <xref:System.Reflection.Assembly.Load%2A> method supersede pieces of evidence supplied by the loader.</span></span>  
  
-   <span data-ttu-id="663dc-772">使用すると、<xref:System.Reflection.Assembly.Load%2A>でメソッドのオーバー ロードを`Byte[]`パラメーターは、common object file format (COFF) イメージ、証拠を読み込むには、呼び出し元アセンブリから継承されます。</span><span class="sxs-lookup"><span data-stu-id="663dc-772">When you use a <xref:System.Reflection.Assembly.Load%2A> method overload with a `Byte[]` parameter to load a common object file format (COFF) image, evidence is inherited from the calling assembly.</span></span> <span data-ttu-id="663dc-773">これは、.NET Framework version 1.1 に当てはまります Service Pack 1 (SP1) と今後のリリース。</span><span class="sxs-lookup"><span data-stu-id="663dc-773">This applies to the .NET Framework version 1.1 Service Pack 1 (SP1) and subsequent releases.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="663dc-774">.NET Framework version 1.0 と version 1.1 を使用するときに SP1 がない場合、<xref:System.Reflection.Assembly.Load%2A>でメソッドのオーバー ロードを`Byte[]`COFF イメージ、証拠を読み込むためのパラメーターを組み合わせます。</span><span class="sxs-lookup"><span data-stu-id="663dc-774">In the .NET Framework version 1.0 and in version 1.1 without SP1, when you use a <xref:System.Reflection.Assembly.Load%2A> method overload with a `Byte[]` parameter to load a COFF image, evidence is combined.</span></span> <span data-ttu-id="663dc-775">`Zone`、`Url`と`Site`は呼び出し元のアセンブリから継承されると`Hash`と`StrongName`COFF アセンブリから取得されます。</span><span class="sxs-lookup"><span data-stu-id="663dc-775">`Zone`, `Url` and `Site` are inherited from the calling assembly, and `Hash` and `StrongName` are taken from the COFF assembly.</span></span>  
  
-   <span data-ttu-id="663dc-776">使用すると、<xref:System.Reflection.Assembly.Load%2A>メソッドを`Byte[]`パラメーターと<xref:System.Security.Policy.Evidence>COFF イメージを読み込むには、指定された証拠のみが使用されます。</span><span class="sxs-lookup"><span data-stu-id="663dc-776">When you use a <xref:System.Reflection.Assembly.Load%2A> method with a `Byte[]` parameter and <xref:System.Security.Policy.Evidence> to load a COFF image, only the supplied evidence is used.</span></span> <span data-ttu-id="663dc-777">呼び出し元のアセンブリの証拠と COFF イメージの証拠が無視されます。</span><span class="sxs-lookup"><span data-stu-id="663dc-777">Evidence of the calling assembly and evidence of the COFF image is ignored.</span></span>  
  
 <span data-ttu-id="663dc-778">C++ 実行可能ファイルにリフレクションをスローする可能性を<xref:System.BadImageFormatException>します。</span><span class="sxs-lookup"><span data-stu-id="663dc-778">Reflecting on C++ executable files might throw a <xref:System.BadImageFormatException>.</span></span> <span data-ttu-id="663dc-779">最も可能性の高い原因は、C++ コンパイラが再配置アドレスまたは`.reloc`実行可能ファイルからセクション。</span><span class="sxs-lookup"><span data-stu-id="663dc-779">This is most likely caused by the C++ compiler stripping the relocation addresses or the `.reloc` section from your executable file.</span></span> <span data-ttu-id="663dc-780">保持するために、 `.reloc` C++ 実行可能ファイルのアドレスで指定`/fixed:no`リンクしています。</span><span class="sxs-lookup"><span data-stu-id="663dc-780">To preserve the `.reloc` address for your C++ executable file, specify `/fixed:no` when you are linking.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="663dc-781">両方の場合、<xref:System.Reflection.AssemblyName.Name%2A?displayProperty=nameWithType>プロパティと<xref:System.Reflection.AssemblyName.CodeBase%2A?displayProperty=nameWithType>プロパティが設定されて、アセンブリを読み込むには、最初の試行は、表示名を使用 (によって返されるバージョン、カルチャ、およびなどを含む、<xref:System.Reflection.Assembly.FullName%2A?displayProperty=nameWithType>プロパティ)。</span><span class="sxs-lookup"><span data-stu-id="663dc-781">If both the <xref:System.Reflection.AssemblyName.Name%2A?displayProperty=nameWithType> property and the <xref:System.Reflection.AssemblyName.CodeBase%2A?displayProperty=nameWithType> property are set, the first attempt to load the assembly uses the display name (including version, culture, and so on, as returned by the <xref:System.Reflection.Assembly.FullName%2A?displayProperty=nameWithType> property).</span></span> <span data-ttu-id="663dc-782">ファイルが見つからない場合<xref:System.Reflection.AssemblyName.CodeBase%2A>アセンブリを検索するために使用します。</span><span class="sxs-lookup"><span data-stu-id="663dc-782">If the file is not found, <xref:System.Reflection.AssemblyName.CodeBase%2A> is used to search for the assembly.</span></span> <span data-ttu-id="663dc-783">使用して、アセンブリが見つかった場合<xref:System.Reflection.AssemblyName.CodeBase%2A>表示名のアセンブリが照合されます。</span><span class="sxs-lookup"><span data-stu-id="663dc-783">If the assembly is found using <xref:System.Reflection.AssemblyName.CodeBase%2A>, the display name is matched against the assembly.</span></span> <span data-ttu-id="663dc-784">一致が見つからない場合、<xref:System.IO.FileLoadException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="663dc-784">If the match fails, a <xref:System.IO.FileLoadException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="663dc-785">次の例では、インスタンス化、<xref:System.Reflection.AssemblyName>オブジェクトを読み込むことを使用して、`sysglobal.dll`アセンブリ。</span><span class="sxs-lookup"><span data-stu-id="663dc-785">The following example instantiates an <xref:System.Reflection.AssemblyName> object and uses it to load the `sysglobal.dll` assembly.</span></span> <span data-ttu-id="663dc-786">アセンブリのパブリック型の完全名を表示します。</span><span class="sxs-lookup"><span data-stu-id="663dc-786">The example then displays the full name of the assembly's public types.</span></span>  
  
 [!code-csharp[System.Reflection.Assembly.Load#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflection.assembly.load/cs/Load2.cs#2)]
 [!code-vb[System.Reflection.Assembly.Load#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.reflection.assembly.load/vb/Load2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="663dc-787"><paramref name="assemblyRef" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="663dc-787"><paramref name="assemblyRef" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="663dc-788"><paramref name="assemblyRef" /> が見つかりません。</span><span class="sxs-lookup"><span data-stu-id="663dc-788"><paramref name="assemblyRef" /> is not found.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><block subset="none" type="note">
            <para>  
 <span data-ttu-id="663dc-789"><see href="https://go.microsoft.com/fwlink/?LinkID=247912">Windows ストア アプリ用 .NET</see> または<see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">ポータブル クラス ライブラリ</see>では、基本クラスの例外である <see cref="T:System.IO.IOException" /> を代わりにキャッチします。</span><span class="sxs-lookup"><span data-stu-id="663dc-789">In the <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET for Windows Store apps</see> or the <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Portable Class Library</see>, catch the base class exception, <see cref="T:System.IO.IOException" />, instead.</span></span>  
  
</para>
          </block>  
  
 <span data-ttu-id="663dc-790">検出されたファイルを読み込めませんでした。</span><span class="sxs-lookup"><span data-stu-id="663dc-790">A file that was found could not be loaded.</span></span>

<span data-ttu-id="663dc-791">または</span><span class="sxs-lookup"><span data-stu-id="663dc-791">-or-</span></span>

<span data-ttu-id="663dc-792"><paramref name="assemblyRef" /> でリモート アセンブリが指定されていますが、リモート アセンブリ内でコードを実行する機能が無効になっています。</span><span class="sxs-lookup"><span data-stu-id="663dc-792"><paramref name="assemblyRef" /> specifies a remote assembly, but the ability to execute code in remote assemblies is disabled.</span></span> <span data-ttu-id="663dc-793"><see href="https://docs.microsoft.com/dotnet/framework/configure-apps/file-schema/runtime/loadfromremotesources-element">&lt;loadFromRemoteSources&gt;</see> を参照してください。</span><span class="sxs-lookup"><span data-stu-id="663dc-793">See <see href="https://docs.microsoft.com/dotnet/framework/configure-apps/file-schema/runtime/loadfromremotesources-element">&lt;loadFromRemoteSources&gt;</see>.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="663dc-794"><paramref name="assemblyRef" /> は正しいアセンブリではありません。</span><span class="sxs-lookup"><span data-stu-id="663dc-794"><paramref name="assemblyRef" /> is not a valid assembly.</span></span> <span data-ttu-id="663dc-795">または</span><span class="sxs-lookup"><span data-stu-id="663dc-795">-or-</span></span> 
<span data-ttu-id="663dc-796">共通言語ランタイムのバージョン 2.0 以降が現在読み込まれています。<paramref name="assemblyRef" /> は、より新しいバージョンでコンパイルされています。</span><span class="sxs-lookup"><span data-stu-id="663dc-796">Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyRef" /> was compiled with a later version.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="663dc-797">ファイルまたはディレクトリからと、パス自体の情報にアクセスするための読み取りにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="663dc-797">for access to read from a file or directory, and for access to the information in the path itself.</span></span> <span data-ttu-id="663dc-798">列挙体に関連付けられている: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span><span class="sxs-lookup"><span data-stu-id="663dc-798">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span></span></permission>
        <permission cref="T:System.Net.WebPermission"><span data-ttu-id="663dc-799">file:// で始まらないする URI を読み取る。</span><span class="sxs-lookup"><span data-stu-id="663dc-799">for reading a URI that does not begin with "file://".</span></span></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="663dc-800">証拠とアセンブリの読み込み。</span><span class="sxs-lookup"><span data-stu-id="663dc-800">to load an assembly with evidence.</span></span> <span data-ttu-id="663dc-801">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span><span class="sxs-lookup"><span data-stu-id="663dc-801">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span></span></permission>
        <altmember cref="T:System.Reflection.AssemblyName" />
        <related type="Article" href="~/docs/framework/deployment/how-the-runtime-locates-assemblies.md"><span data-ttu-id="663dc-802">ランタイムがアセンブリを検索する方法</span><span class="sxs-lookup"><span data-stu-id="663dc-802">How the Runtime Locates Assemblies</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly Load (string assemblyString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly Load(string assemblyString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.Load(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Load (assemblyString As String) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ Load(System::String ^ assemblyString);" />
      <MemberSignature Language="F#" Value="static member Load : string -&gt; System.Reflection.Assembly" Usage="System.Reflection.Assembly.Load assemblyString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyString" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="assemblyString"><span data-ttu-id="663dc-803">長い形式のアセンブリ名。</span><span class="sxs-lookup"><span data-stu-id="663dc-803">The long form of the assembly name.</span></span></param>
        <summary><span data-ttu-id="663dc-804">長い形式の名前を指定してアセンブリを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="663dc-804">Loads an assembly given the long form of its name.</span></span></summary>
        <returns><span data-ttu-id="663dc-805">読み込まれるアセンブリ。</span><span class="sxs-lookup"><span data-stu-id="663dc-805">The loaded assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663dc-806">長い形式のアセンブリ名は、そのバージョン、カルチャ、公開キー トークン、および必要に応じてそのプロセッサ アーキテクチャと単純な名前 ("System"System.dll アセンブリの) などで構成されます。</span><span class="sxs-lookup"><span data-stu-id="663dc-806">The long form of an assembly name consists of its simple name (such as "System" for the System.dll assembly) along with its version, culture, public key token, and optionally its processor architecture.</span></span> <span data-ttu-id="663dc-807">対応するアセンブリの<xref:System.Reflection.Assembly.FullName%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="663dc-807">It corresponds to the assembly's <xref:System.Reflection.Assembly.FullName%2A> property.</span></span> <span data-ttu-id="663dc-808">次の例では、.NET Framework 4 の System.dll アセンブリの読み込みに長い名前の使用を示します。</span><span class="sxs-lookup"><span data-stu-id="663dc-808">The following example illustrates the use of a long name to load the System.dll assembly for the .NET Framework 4.</span></span>  
  
 [!code-csharp[System.Reflection.Assembly.Load#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflection.assembly.load/cs/load1.cs#1)]
 [!code-vb[System.Reflection.Assembly.Load#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.reflection.assembly.load/vb/load1.vb#1)]  
  
 <span data-ttu-id="663dc-809"><xref:System.IO.FileLoadException> 場合にスローされる`assemblyString`完全なアセンブリ名と簡易名に一致する最初のアセンブリが別のバージョン、カルチャ、または公開キー トークンを指定します。</span><span class="sxs-lookup"><span data-stu-id="663dc-809"><xref:System.IO.FileLoadException> is thrown if `assemblyString` specifies the full assembly name, and the first assembly that matches the simple name has a different version, culture, or public key token.</span></span> <span data-ttu-id="663dc-810">ローダーは、単純な名前と一致する他のアセンブリのプローブを続行できません。</span><span class="sxs-lookup"><span data-stu-id="663dc-810">The loader does not continue probing for other assemblies that match the simple name.</span></span>  
  
 <span data-ttu-id="663dc-811">アセンブリに対して特定のアクセス許可を付与するかどうかは、証拠に基づいて決定されます。</span><span class="sxs-lookup"><span data-stu-id="663dc-811">Whether certain permissions are granted or not granted to an assembly is based on evidence.</span></span> <span data-ttu-id="663dc-812">アセンブリとマージのセキュリティ証拠の規則は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="663dc-812">The rules for assembly and security evidence merging are as follows:</span></span>  
  
-   <span data-ttu-id="663dc-813">使用すると、<xref:System.Reflection.Assembly.Load%2A>なしでメソッド<xref:System.Security.Policy.Evidence>パラメーター、アセンブリの表示はローダーが提供する証拠を使用して読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="663dc-813">When you use a <xref:System.Reflection.Assembly.Load%2A> method with no <xref:System.Security.Policy.Evidence> parameter, the assembly is loaded with the evidence that the loader supplies.</span></span>  
  
-   <span data-ttu-id="663dc-814">使用すると、<xref:System.Reflection.Assembly.Load%2A>メソッドを<xref:System.Security.Policy.Evidence>パラメーターの証拠がマージされます。</span><span class="sxs-lookup"><span data-stu-id="663dc-814">When you use a <xref:System.Reflection.Assembly.Load%2A> method with an <xref:System.Security.Policy.Evidence> parameter, pieces of evidence are merged.</span></span> <span data-ttu-id="663dc-815">引数として指定された証拠、<xref:System.Reflection.Assembly.Load%2A>メソッドは、ローダーによって提供される証拠の部分を置き換えます。</span><span class="sxs-lookup"><span data-stu-id="663dc-815">Pieces of evidence supplied as an argument to the <xref:System.Reflection.Assembly.Load%2A> method supersede pieces of evidence supplied by the loader.</span></span>  
  
-   <span data-ttu-id="663dc-816">使用すると、<xref:System.Reflection.Assembly.Load%2A>でメソッドのオーバー ロードを`Byte[]`パラメーターは、common object file format (COFF) イメージ、証拠を読み込むには、呼び出し元アセンブリから継承されます。</span><span class="sxs-lookup"><span data-stu-id="663dc-816">When you use a <xref:System.Reflection.Assembly.Load%2A> method overload with a `Byte[]` parameter to load a common object file format (COFF) image, evidence is inherited from the calling assembly.</span></span> <span data-ttu-id="663dc-817">これは、.NET Framework version 1.1 に当てはまります Service Pack 1 (SP1) と今後のリリース。</span><span class="sxs-lookup"><span data-stu-id="663dc-817">This applies to the .NET Framework version 1.1 Service Pack 1 (SP1) and subsequent releases.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="663dc-818">.NET Framework version 1.0 と version 1.1 を使用するときに SP1 がない場合、<xref:System.Reflection.Assembly.Load%2A>でメソッドのオーバー ロードを`Byte[]`COFF イメージ、証拠を読み込むためのパラメーターを組み合わせます。</span><span class="sxs-lookup"><span data-stu-id="663dc-818">In the .NET Framework version 1.0 and in version 1.1 without SP1, when you use a <xref:System.Reflection.Assembly.Load%2A> method overload with a `Byte[]` parameter to load a COFF image, evidence is combined.</span></span> <span data-ttu-id="663dc-819">`Zone`、`Url`と`Site`は呼び出し元のアセンブリから継承されると`Hash`と`StrongName`COFF アセンブリから取得されます。</span><span class="sxs-lookup"><span data-stu-id="663dc-819">`Zone`, `Url` and `Site` are inherited from the calling assembly, and `Hash` and `StrongName` are taken from the COFF assembly.</span></span>  
  
-   <span data-ttu-id="663dc-820">使用すると、<xref:System.Reflection.Assembly.Load%2A>メソッドを`Byte[]`パラメーターと<xref:System.Security.Policy.Evidence>COFF イメージを読み込むには、指定された証拠のみが使用されます。</span><span class="sxs-lookup"><span data-stu-id="663dc-820">When you use a <xref:System.Reflection.Assembly.Load%2A> method with a `Byte[]` parameter and <xref:System.Security.Policy.Evidence> to load a COFF image, only the supplied evidence is used.</span></span> <span data-ttu-id="663dc-821">呼び出し元のアセンブリの証拠と COFF イメージの証拠が無視されます。</span><span class="sxs-lookup"><span data-stu-id="663dc-821">Evidence of the calling assembly and evidence of the COFF image is ignored.</span></span>  
  
 <span data-ttu-id="663dc-822">C++ 実行可能ファイルにリフレクションをスローする可能性を<xref:System.BadImageFormatException>します。</span><span class="sxs-lookup"><span data-stu-id="663dc-822">Reflecting on C++ executable files might throw a <xref:System.BadImageFormatException>.</span></span> <span data-ttu-id="663dc-823">最も可能性の高い原因は、C++ コンパイラが再配置アドレスまたは`.reloc`実行可能ファイルからセクション。</span><span class="sxs-lookup"><span data-stu-id="663dc-823">This is most likely caused by the C++ compiler stripping the relocation addresses or the `.reloc` section from your executable file.</span></span> <span data-ttu-id="663dc-824">保持するために、 `.reloc` C++ 実行可能ファイルのアドレスで指定`/fixed:no`リンクしています。</span><span class="sxs-lookup"><span data-stu-id="663dc-824">To preserve the `.reloc` address for your C++ executable file, specify `/fixed:no` when you are linking.</span></span>  
  
 <span data-ttu-id="663dc-825">.NET Framework version 2.0 では、プロセッサ アーキテクチャは、アセンブリの id に追加され、アセンブリ名の文字列の一部として指定できます。</span><span class="sxs-lookup"><span data-stu-id="663dc-825">In the .NET Framework version 2.0, processor architecture is added to assembly identity, and can be specified as part of assembly name strings.</span></span> <span data-ttu-id="663dc-826">たとえば、"ProcessorArchitecture = msil"です。</span><span class="sxs-lookup"><span data-stu-id="663dc-826">For example, "ProcessorArchitecture=msil".</span></span> <span data-ttu-id="663dc-827">ただし、アセンブリ名を指定することをお勧めの方法は、作成するは、<xref:System.Reflection.AssemblyName>オブジェクトし、の適切なオーバー ロードに渡す、<xref:System.Reflection.Assembly.Load%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="663dc-827">However, the recommended way to specify an assembly name is to create an <xref:System.Reflection.AssemblyName> object and pass it to an appropriate overload of the <xref:System.Reflection.Assembly.Load%2A> method.</span></span> <span data-ttu-id="663dc-828">以下を参照してください。<xref:System.Reflection.AssemblyName.ProcessorArchitecture%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="663dc-828">See <xref:System.Reflection.AssemblyName.ProcessorArchitecture%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="663dc-829">次の例では、完全修飾名を指定してアセンブリを読み込み、指定したアセンブリに含まれるすべての型を一覧表示されます。</span><span class="sxs-lookup"><span data-stu-id="663dc-829">The following example loads an assembly given its fully qualified name, and lists all the types contained in the specified assembly.</span></span> <span data-ttu-id="663dc-830">このコード例を実行するには、完全修飾アセンブリ名を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="663dc-830">For this code example to run, you must provide the fully qualified assembly name.</span></span> <span data-ttu-id="663dc-831">完全修飾アセンブリ名を取得する方法については、次を参照してください。[アセンブリ名](~/docs/framework/app-domains/assembly-names.md)します。</span><span class="sxs-lookup"><span data-stu-id="663dc-831">For information about how to obtain the fully qualified assembly name, see [Assembly Names](~/docs/framework/app-domains/assembly-names.md).</span></span>  
  
 [!code-cpp[assembly.load1#1](~/samples/snippets/cpp/VS_Snippets_CLR/Assembly.Load1/CPP/load1.cpp#1)]
 [!code-csharp[assembly.load1#1](~/samples/snippets/csharp/VS_Snippets_CLR/Assembly.Load1/CS/load1.cs#1)]
 [!code-vb[assembly.load1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Assembly.Load1/VB/load1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="663dc-832"><paramref name="assemblyString" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="663dc-832"><paramref name="assemblyString" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="663dc-833"><paramref name="assemblyString" /> は長さゼロの文字列です。</span><span class="sxs-lookup"><span data-stu-id="663dc-833"><paramref name="assemblyString" /> is a zero-length string.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="663dc-834"><paramref name="assemblyString" /> が見つかりません。</span><span class="sxs-lookup"><span data-stu-id="663dc-834"><paramref name="assemblyString" /> is not found.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="663dc-835">検出されたファイルを読み込めませんでした。</span><span class="sxs-lookup"><span data-stu-id="663dc-835">A file that was found could not be loaded.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="663dc-836"><paramref name="assemblyString" /> は正しいアセンブリではありません。</span><span class="sxs-lookup"><span data-stu-id="663dc-836"><paramref name="assemblyString" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="663dc-837">または</span><span class="sxs-lookup"><span data-stu-id="663dc-837">-or-</span></span> 
<span data-ttu-id="663dc-838">共通言語ランタイムのバージョン 2.0 以降が現在読み込まれています。<paramref name="assemblyString" /> は、より新しいバージョンでコンパイルされています。</span><span class="sxs-lookup"><span data-stu-id="663dc-838">Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyString" /> was compiled with a later version.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="663dc-839">証拠とアセンブリの読み込み。</span><span class="sxs-lookup"><span data-stu-id="663dc-839">to load an assembly with evidence.</span></span> <span data-ttu-id="663dc-840">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span><span class="sxs-lookup"><span data-stu-id="663dc-840">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span></span></permission>
        <altmember cref="T:System.Reflection.AssemblyName" />
        <altmember cref="M:System.Reflection.Assembly.LoadFrom(System.String)" />
        <related type="Article" href="~/docs/framework/deployment/how-the-runtime-locates-assemblies.md"><span data-ttu-id="663dc-841">ランタイムがアセンブリを検索する方法</span><span class="sxs-lookup"><span data-stu-id="663dc-841">How the Runtime Locates Assemblies</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly Load (byte[] rawAssembly, byte[] rawSymbolStore);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly Load(unsigned int8[] rawAssembly, unsigned int8[] rawSymbolStore) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.Load(System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Load (rawAssembly As Byte(), rawSymbolStore As Byte()) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ Load(cli::array &lt;System::Byte&gt; ^ rawAssembly, cli::array &lt;System::Byte&gt; ^ rawSymbolStore);" />
      <MemberSignature Language="F#" Value="static member Load : byte[] * byte[] -&gt; System.Reflection.Assembly" Usage="System.Reflection.Assembly.Load (rawAssembly, rawSymbolStore)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawAssembly" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="rawSymbolStore" Type="System.Byte[]" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="rawAssembly"><span data-ttu-id="663dc-842">生成されたアセンブリを含む COFF ベースのイメージであるバイト配列。</span><span class="sxs-lookup"><span data-stu-id="663dc-842">A byte array that is a COFF-based image containing an emitted assembly.</span></span></param>
        <param name="rawSymbolStore"><span data-ttu-id="663dc-843">アセンブリのシンボルを表す生バイトを格納するバイト配列。</span><span class="sxs-lookup"><span data-stu-id="663dc-843">A byte array that contains the raw bytes representing the symbols for the assembly.</span></span></param>
        <summary><span data-ttu-id="663dc-844">生成されたアセンブリが含まれている COFF ベースのイメージを使用して、このアセンブリを読み込みます。アセンブリのシンボルを含めることもできます。</span><span class="sxs-lookup"><span data-stu-id="663dc-844">Loads the assembly with a common object file format (COFF)-based image containing an emitted assembly, optionally including symbols for the assembly.</span></span> <span data-ttu-id="663dc-845">このアセンブリは、呼び出し元のアプリケーション ドメインに読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="663dc-845">The assembly is loaded into the application domain of the caller.</span></span></summary>
        <returns><span data-ttu-id="663dc-846">読み込まれるアセンブリ。</span><span class="sxs-lookup"><span data-stu-id="663dc-846">The loaded assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663dc-847">このメソッドを使用して読み込まれるアセンブリの信頼レベルでは、呼び出し元のアセンブリの信頼レベルの場合と同じです。</span><span class="sxs-lookup"><span data-stu-id="663dc-847">The trust level of an assembly that is loaded by using this method is the same as the trust level of the calling assembly.</span></span> <span data-ttu-id="663dc-848">アプリケーション ドメインの信頼レベルでバイト配列からアセンブリを読み込むには使用、<xref:System.Reflection.Assembly.Load%28System.Byte%5B%5D%2CSystem.Byte%5B%5D%2CSystem.Security.SecurityContextSource%29>メソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="663dc-848">To load an assembly from a byte array with the trust level of the application domain, use the <xref:System.Reflection.Assembly.Load%28System.Byte%5B%5D%2CSystem.Byte%5B%5D%2CSystem.Security.SecurityContextSource%29> method overload.</span></span> <span data-ttu-id="663dc-849">証拠のオーバー ロードでの使用の詳細については、<xref:System.Reflection.Assembly.Load%2A>をバイト配列を受け取るメソッドを参照してください、<xref:System.Reflection.Assembly.Load%28System.Byte%5B%5D%2CSystem.Byte%5B%5D%2CSystem.Security.Policy.Evidence%29>メソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="663dc-849">For more information about the use of evidence with overloads of the <xref:System.Reflection.Assembly.Load%2A> method that take byte arrays, see the <xref:System.Reflection.Assembly.Load%28System.Byte%5B%5D%2CSystem.Byte%5B%5D%2CSystem.Security.Policy.Evidence%29> method overload.</span></span>  
  
 <span data-ttu-id="663dc-850">C++ 実行可能ファイルにリフレクションをスローする可能性を<xref:System.BadImageFormatException>します。</span><span class="sxs-lookup"><span data-stu-id="663dc-850">Reflecting on C++ executable files might throw a <xref:System.BadImageFormatException>.</span></span> <span data-ttu-id="663dc-851">最も可能性の高い原因は、C++ コンパイラが再配置アドレスまたは`.reloc`実行可能ファイルからセクション。</span><span class="sxs-lookup"><span data-stu-id="663dc-851">This is most likely caused by the C++ compiler stripping the relocation addresses or the `.reloc` section from your executable file.</span></span> <span data-ttu-id="663dc-852">保持するために、 `.reloc` C++ 実行可能ファイルのアドレスで指定`/fixed:no`リンクしています。</span><span class="sxs-lookup"><span data-stu-id="663dc-852">To preserve the `.reloc` address for your C++ executable file, specify `/fixed:no` when you are linking.</span></span>  
  
 <span data-ttu-id="663dc-853">このメソッドのオーバー ロードが、新しい作成常にことに注意してください。<xref:System.Reflection.Assembly>に独自のマッピングを持つオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="663dc-853">Note that this method overload always creates a new <xref:System.Reflection.Assembly> object with its own mapping.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="663dc-854"><paramref name="rawAssembly" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="663dc-854"><paramref name="rawAssembly" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="663dc-855"><paramref name="rawAssembly" /> は正しいアセンブリではありません。</span><span class="sxs-lookup"><span data-stu-id="663dc-855"><paramref name="rawAssembly" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="663dc-856">または</span><span class="sxs-lookup"><span data-stu-id="663dc-856">-or-</span></span> 
<span data-ttu-id="663dc-857">共通言語ランタイムのバージョン 2.0 以降が現在読み込まれています。<paramref name="rawAssembly" /> は、より新しいバージョンでコンパイルされています。</span><span class="sxs-lookup"><span data-stu-id="663dc-857">Version 2.0 or later of the common language runtime is currently loaded and <paramref name="rawAssembly" /> was compiled with a later version.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly Load (System.Reflection.AssemblyName assemblyRef, System.Security.Policy.Evidence assemblySecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly Load(class System.Reflection.AssemblyName assemblyRef, class System.Security.Policy.Evidence assemblySecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.Load(System.Reflection.AssemblyName,System.Security.Policy.Evidence)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Load (assemblyRef As AssemblyName, assemblySecurity As Evidence) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ Load(System::Reflection::AssemblyName ^ assemblyRef, System::Security::Policy::Evidence ^ assemblySecurity);" />
      <MemberSignature Language="F#" Value="static member Load : System.Reflection.AssemblyName * System.Security.Policy.Evidence -&gt; System.Reflection.Assembly" Usage="System.Reflection.Assembly.Load (assemblyRef, assemblySecurity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("This method is obsolete and will be removed in a future release of the .NET Framework. Please use an overload of Load which does not take an Evidence parameter. See http://go.microsoft.com/fwlink/?LinkID=155570 for more information.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyRef" Type="System.Reflection.AssemblyName" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="assemblySecurity" Type="System.Security.Policy.Evidence" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="assemblyRef"><span data-ttu-id="663dc-858">読み込むアセンブリを記述するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="663dc-858">The object that describes the assembly to be loaded.</span></span></param>
        <param name="assemblySecurity"><span data-ttu-id="663dc-859">アセンブリを読み込むために必要な証拠。</span><span class="sxs-lookup"><span data-stu-id="663dc-859">Evidence for loading the assembly.</span></span></param>
        <summary><span data-ttu-id="663dc-860"><see cref="T:System.Reflection.AssemblyName" /> を指定してアセンブリを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="663dc-860">Loads an assembly given its <see cref="T:System.Reflection.AssemblyName" />.</span></span> <span data-ttu-id="663dc-861">アセンブリは、指定された証拠を使用して、呼び出し元のドメインに読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="663dc-861">The assembly is loaded into the domain of the caller using the supplied evidence.</span></span></summary>
        <returns><span data-ttu-id="663dc-862">読み込まれるアセンブリ。</span><span class="sxs-lookup"><span data-stu-id="663dc-862">The loaded assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663dc-863"><xref:System.IO.FileLoadException> 場合にスローされる`assemblyRef`完全なアセンブリ名と簡易名に一致する最初のアセンブリが別のバージョン、カルチャ、または公開キー トークンを指定します。</span><span class="sxs-lookup"><span data-stu-id="663dc-863"><xref:System.IO.FileLoadException> is thrown if `assemblyRef` specifies the full assembly name, and the first assembly that matches the simple name has a different version, culture, or public key token.</span></span> <span data-ttu-id="663dc-864">ローダーは、単純な名前と一致する他のアセンブリのプローブを続行できません。</span><span class="sxs-lookup"><span data-stu-id="663dc-864">The loader does not continue probing for other assemblies that match the simple name.</span></span>  <span data-ttu-id="663dc-865">既定では、リモート アセンブリのコードの実行が無効になっているため、.NET Framework 4 以降、<xref:System.IO.FileLoadException>場合にスローされるも`assemblyRef`リモート アセンブリを指定します。</span><span class="sxs-lookup"><span data-stu-id="663dc-865">Starting with .NET Framework 4, because execution of code in remote assemblies is disabled by default, a <xref:System.IO.FileLoadException> is also thrown if `assemblyRef` specifies a remote assembly.</span></span> <span data-ttu-id="663dc-866">リモートの場所から読み込まれたコードの実行を有効にするを使用できます、 [ `<loadFromRemoteSources>` ](~/docs/framework/configure-apps/file-schema/runtime/loadfromremotesources-element.md)構成要素。</span><span class="sxs-lookup"><span data-stu-id="663dc-866">To enable execution of code loaded from remote locations, you can use the [`<loadFromRemoteSources>`](~/docs/framework/configure-apps/file-schema/runtime/loadfromremotesources-element.md) configuration element.</span></span>   
  
> [!NOTE]
>  <span data-ttu-id="663dc-867">使用しないでください、<xref:System.Reflection.AssemblyName>だけを持つ、<xref:System.Reflection.AssemblyName.CodeBase%2A>プロパティ セット。</span><span class="sxs-lookup"><span data-stu-id="663dc-867">Do not use an <xref:System.Reflection.AssemblyName> with only the <xref:System.Reflection.AssemblyName.CodeBase%2A> property set.</span></span> <span data-ttu-id="663dc-868"><xref:System.Reflection.AssemblyName.CodeBase%2A>プロパティがいずれかの要素を指定しないアセンブリの id (名前、バージョンなど) のための読み込みは発生しません - id によって負荷の規則に従ってから想像どおり、<xref:System.Reflection.Assembly.Load%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="663dc-868">The <xref:System.Reflection.AssemblyName.CodeBase%2A> property does not supply any elements of the assembly identity (such as name or version), so loading does not occur according to load-by-identity rules, as you would expect from the <xref:System.Reflection.Assembly.Load%2A> method.</span></span> <span data-ttu-id="663dc-869">代わりに、アセンブリが読み込み元の規則を使用して読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="663dc-869">Instead, the assembly is loaded using load-from rules.</span></span> <span data-ttu-id="663dc-870">読み込み元コンテキストを使用して、短所については、次を参照してください。、<xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType>メソッドのオーバー ロードまたは[アセンブリ読み込みのベスト プラクティス](~/docs/framework/deployment/best-practices-for-assembly-loading.md)します。</span><span class="sxs-lookup"><span data-stu-id="663dc-870">For information about the disadvantages of using the load-from context, see the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> method overload or [Best Practices for Assembly Loading](~/docs/framework/deployment/best-practices-for-assembly-loading.md).</span></span>  
  
 <span data-ttu-id="663dc-871">アセンブリに対して特定のアクセス許可を付与するかどうかは、証拠に基づいて決定されます。</span><span class="sxs-lookup"><span data-stu-id="663dc-871">Whether certain permissions are granted or not granted to an assembly is based on evidence.</span></span> <span data-ttu-id="663dc-872">アセンブリとマージのセキュリティ証拠の規則は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="663dc-872">The rules for assembly and security evidence merging are as follows:</span></span>  
  
-   <span data-ttu-id="663dc-873">使用すると、<xref:System.Reflection.Assembly.Load%2A>なしでメソッド<xref:System.Security.Policy.Evidence>パラメーター、アセンブリの表示はローダーが提供する証拠を使用して読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="663dc-873">When you use a <xref:System.Reflection.Assembly.Load%2A> method with no <xref:System.Security.Policy.Evidence> parameter, the assembly is loaded with the evidence that the loader supplies.</span></span>  
  
-   <span data-ttu-id="663dc-874">使用すると、<xref:System.Reflection.Assembly.Load%2A>メソッドを<xref:System.Security.Policy.Evidence>パラメーターの証拠がマージされます。</span><span class="sxs-lookup"><span data-stu-id="663dc-874">When you use a <xref:System.Reflection.Assembly.Load%2A> method with an <xref:System.Security.Policy.Evidence> parameter, pieces of evidence are merged.</span></span> <span data-ttu-id="663dc-875">引数として指定された証拠、<xref:System.Reflection.Assembly.Load%2A>メソッドは、ローダーによって提供される証拠の部分を置き換えます。</span><span class="sxs-lookup"><span data-stu-id="663dc-875">Pieces of evidence supplied as an argument to the <xref:System.Reflection.Assembly.Load%2A> method supersede pieces of evidence supplied by the loader.</span></span>  
  
-   <span data-ttu-id="663dc-876">使用すると、<xref:System.Reflection.Assembly.Load%2A>でメソッドのオーバー ロードを`Byte[]`パラメーターは、common object file format (COFF) イメージ、証拠を読み込むには、呼び出し元アセンブリから継承されます。</span><span class="sxs-lookup"><span data-stu-id="663dc-876">When you use a <xref:System.Reflection.Assembly.Load%2A> method overload with a `Byte[]` parameter to load a common object file format (COFF) image, evidence is inherited from the calling assembly.</span></span> <span data-ttu-id="663dc-877">これは、.NET Framework version 1.1 に当てはまります Service Pack 1 (SP1) と今後のリリース。</span><span class="sxs-lookup"><span data-stu-id="663dc-877">This applies to the .NET Framework version 1.1 Service Pack 1 (SP1) and subsequent releases.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="663dc-878">.NET Framework version 1.0 と version 1.1 を使用するときに SP1 がない場合、<xref:System.Reflection.Assembly.Load%2A>でメソッドのオーバー ロードを`Byte[]`COFF イメージ、証拠を読み込むためのパラメーターを組み合わせます。</span><span class="sxs-lookup"><span data-stu-id="663dc-878">In the .NET Framework version 1.0 and in version 1.1 without SP1, when you use a <xref:System.Reflection.Assembly.Load%2A> method overload with a `Byte[]` parameter to load a COFF image, evidence is combined.</span></span> <span data-ttu-id="663dc-879">`Zone`、`Url`と`Site`は呼び出し元のアセンブリから継承されると`Hash`と`StrongName`COFF アセンブリから取得されます。</span><span class="sxs-lookup"><span data-stu-id="663dc-879">`Zone`, `Url` and `Site` are inherited from the calling assembly, and `Hash` and `StrongName` are taken from the COFF assembly.</span></span>  
  
-   <span data-ttu-id="663dc-880">使用すると、<xref:System.Reflection.Assembly.Load%2A>メソッドを`Byte[]`パラメーターと<xref:System.Security.Policy.Evidence>COFF イメージを読み込むには、指定された証拠のみが使用されます。</span><span class="sxs-lookup"><span data-stu-id="663dc-880">When you use a <xref:System.Reflection.Assembly.Load%2A> method with a `Byte[]` parameter and <xref:System.Security.Policy.Evidence> to load a COFF image, only the supplied evidence is used.</span></span> <span data-ttu-id="663dc-881">呼び出し元のアセンブリの証拠と COFF イメージの証拠が無視されます。</span><span class="sxs-lookup"><span data-stu-id="663dc-881">Evidence of the calling assembly and evidence of the COFF image is ignored.</span></span>  
  
 <span data-ttu-id="663dc-882">C++ 実行可能ファイルにリフレクションをスローする可能性を<xref:System.BadImageFormatException>します。</span><span class="sxs-lookup"><span data-stu-id="663dc-882">Reflecting on C++ executable files might throw a <xref:System.BadImageFormatException>.</span></span> <span data-ttu-id="663dc-883">最も可能性の高い原因は、C++ コンパイラが再配置アドレスまたは`.reloc`実行可能ファイルからセクション。</span><span class="sxs-lookup"><span data-stu-id="663dc-883">This is most likely caused by the C++ compiler stripping the relocation addresses or the `.reloc` section from your executable file.</span></span> <span data-ttu-id="663dc-884">保持するために、 `.reloc` C++ 実行可能ファイルのアドレスで指定`/fixed:no`リンクしています。</span><span class="sxs-lookup"><span data-stu-id="663dc-884">To preserve the `.reloc` address for your C++ executable file, specify `/fixed:no` when you are linking.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="663dc-885">両方の場合、<xref:System.Reflection.AssemblyName.Name%2A?displayProperty=nameWithType>プロパティと<xref:System.Reflection.AssemblyName.CodeBase%2A?displayProperty=nameWithType>プロパティが設定されて、アセンブリを読み込むには、最初の試行は、表示名を使用 (によって返されるバージョン、カルチャ、およびなどを含む、<xref:System.Reflection.Assembly.FullName%2A?displayProperty=nameWithType>プロパティ)。</span><span class="sxs-lookup"><span data-stu-id="663dc-885">If both the <xref:System.Reflection.AssemblyName.Name%2A?displayProperty=nameWithType> property and the <xref:System.Reflection.AssemblyName.CodeBase%2A?displayProperty=nameWithType> property are set, the first attempt to load the assembly uses the display name (including version, culture, and so on, as returned by the <xref:System.Reflection.Assembly.FullName%2A?displayProperty=nameWithType> property).</span></span> <span data-ttu-id="663dc-886">ファイルが見つからない場合<xref:System.Reflection.AssemblyName.CodeBase%2A>アセンブリを検索するために使用します。</span><span class="sxs-lookup"><span data-stu-id="663dc-886">If the file is not found, <xref:System.Reflection.AssemblyName.CodeBase%2A> is used to search for the assembly.</span></span> <span data-ttu-id="663dc-887">使用して、アセンブリが見つかった場合<xref:System.Reflection.AssemblyName.CodeBase%2A>表示名のアセンブリが照合されます。</span><span class="sxs-lookup"><span data-stu-id="663dc-887">If the assembly is found using <xref:System.Reflection.AssemblyName.CodeBase%2A>, the display name is matched against the assembly.</span></span> <span data-ttu-id="663dc-888">一致が見つからない場合、<xref:System.IO.FileLoadException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="663dc-888">If the match fails, a <xref:System.IO.FileLoadException> is thrown.</span></span>  
  
 <span data-ttu-id="663dc-889">呼び出す場合、<xref:System.Reflection.Assembly.Load%2A>メソッドの 1 回、同じアセンブリでは、さまざまな証拠を指定、共通言語ランタイムをスローしないより、<xref:System.IO.FileLoadException>等しいかどうかと、さまざまな証拠の仕様の整合性をすることはできませんので、決定されます。</span><span class="sxs-lookup"><span data-stu-id="663dc-889">If you call the <xref:System.Reflection.Assembly.Load%2A> method more than once on the same assembly but with a different evidence specified, the common language runtime does not throw a <xref:System.IO.FileLoadException> because the equality and integrity of the different evidence specifications cannot be determined.</span></span> <span data-ttu-id="663dc-890">最初に成功した証拠は、使用される証拠です。</span><span class="sxs-lookup"><span data-stu-id="663dc-890">The evidence that first succeeds is the evidence that is used.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="663dc-891"><paramref name="assemblyRef" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="663dc-891"><paramref name="assemblyRef" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="663dc-892"><paramref name="assemblyRef" /> が見つかりません。</span><span class="sxs-lookup"><span data-stu-id="663dc-892"><paramref name="assemblyRef" /> is not found.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="663dc-893"><paramref name="assemblyRef" /> は正しいアセンブリではありません。</span><span class="sxs-lookup"><span data-stu-id="663dc-893"><paramref name="assemblyRef" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="663dc-894">または</span><span class="sxs-lookup"><span data-stu-id="663dc-894">-or-</span></span> 
<span data-ttu-id="663dc-895">共通言語ランタイムのバージョン 2.0 以降が現在読み込まれています。<paramref name="assemblyRef" /> は、より新しいバージョンでコンパイルされています。</span><span class="sxs-lookup"><span data-stu-id="663dc-895">Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyRef" /> was compiled with a later version.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="663dc-896">アセンブリまたはモジュールが、2 つの異なる証拠を使用して 2 回読み込まれました。</span><span class="sxs-lookup"><span data-stu-id="663dc-896">An assembly or module was loaded twice with two different evidences.</span></span>

<span data-ttu-id="663dc-897">または</span><span class="sxs-lookup"><span data-stu-id="663dc-897">-or-</span></span>

<span data-ttu-id="663dc-898"><paramref name="assemblyRef" /> でリモート アセンブリが指定されていますが、リモート アセンブリ内でコードを実行する機能が無効になっています。</span><span class="sxs-lookup"><span data-stu-id="663dc-898"><paramref name="assemblyRef" /> specifies a remote assembly, but the ability to execute code in remote assemblies is disabled.</span></span> <span data-ttu-id="663dc-899"><see href="https://docs.microsoft.com/dotnet/framework/configure-apps/file-schema/runtime/loadfromremotesources-element">&lt;loadFromRemoteSources&gt;</see> を参照してください。</span><span class="sxs-lookup"><span data-stu-id="663dc-899">See <see href="https://docs.microsoft.com/dotnet/framework/configure-apps/file-schema/runtime/loadfromremotesources-element">&lt;loadFromRemoteSources&gt;</see>.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="663dc-900">ファイルまたはディレクトリからと、パス自体の情報にアクセスするための読み取りにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="663dc-900">for access to read from a file or directory, and for access to the information in the path itself.</span></span> <span data-ttu-id="663dc-901">列挙体に関連付けられている: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span><span class="sxs-lookup"><span data-stu-id="663dc-901">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span></span></permission>
        <permission cref="T:System.Net.WebPermission"><span data-ttu-id="663dc-902">file:// で始まらないする URI を読み取る。</span><span class="sxs-lookup"><span data-stu-id="663dc-902">for reading a URI that does not begin with "file://".</span></span></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="663dc-903">証拠とアセンブリの読み込み。</span><span class="sxs-lookup"><span data-stu-id="663dc-903">to load an assembly with evidence.</span></span> <span data-ttu-id="663dc-904">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span><span class="sxs-lookup"><span data-stu-id="663dc-904">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span></span></permission>
        <altmember cref="T:System.Security.Policy.Evidence" />
        <related type="Article" href="~/docs/framework/deployment/how-the-runtime-locates-assemblies.md"><span data-ttu-id="663dc-905">ランタイムがアセンブリを検索する方法</span><span class="sxs-lookup"><span data-stu-id="663dc-905">How the Runtime Locates Assemblies</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly Load (string assemblyString, System.Security.Policy.Evidence assemblySecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly Load(string assemblyString, class System.Security.Policy.Evidence assemblySecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.Load(System.String,System.Security.Policy.Evidence)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Load (assemblyString As String, assemblySecurity As Evidence) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ Load(System::String ^ assemblyString, System::Security::Policy::Evidence ^ assemblySecurity);" />
      <MemberSignature Language="F#" Value="static member Load : string * System.Security.Policy.Evidence -&gt; System.Reflection.Assembly" Usage="System.Reflection.Assembly.Load (assemblyString, assemblySecurity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("This method is obsolete and will be removed in a future release of the .NET Framework. Please use an overload of Load which does not take an Evidence parameter. See http://go.microsoft.com/fwlink/?LinkID=155570 for more information.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyString" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="assemblySecurity" Type="System.Security.Policy.Evidence" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="assemblyString"><span data-ttu-id="663dc-906">アセンブリの表示名。</span><span class="sxs-lookup"><span data-stu-id="663dc-906">The display name of the assembly.</span></span></param>
        <param name="assemblySecurity"><span data-ttu-id="663dc-907">アセンブリを読み込むために必要な証拠。</span><span class="sxs-lookup"><span data-stu-id="663dc-907">Evidence for loading the assembly.</span></span></param>
        <summary><span data-ttu-id="663dc-908">表示名を指定してアセンブリを読み込みます。アセンブリは、指定された証拠を使用して、呼び出し元のドメインに読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="663dc-908">Loads an assembly given its display name, loading the assembly into the domain of the caller using the supplied evidence.</span></span></summary>
        <returns><span data-ttu-id="663dc-909">読み込まれるアセンブリ。</span><span class="sxs-lookup"><span data-stu-id="663dc-909">The loaded assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663dc-910"><xref:System.IO.FileLoadException> 場合にスローされる`assemblyString`完全なアセンブリ名と簡易名に一致する最初のアセンブリが別のバージョン、カルチャ、または公開キー トークンを指定します。</span><span class="sxs-lookup"><span data-stu-id="663dc-910"><xref:System.IO.FileLoadException> is thrown if `assemblyString` specifies the full assembly name, and the first assembly that matches the simple name has a different version, culture, or public key token.</span></span> <span data-ttu-id="663dc-911">ローダーは、単純な名前と一致する他のアセンブリのプローブを続行できません。</span><span class="sxs-lookup"><span data-stu-id="663dc-911">The loader does not continue probing for other assemblies that match the simple name.</span></span>  
  
 <span data-ttu-id="663dc-912">アセンブリに対して特定のアクセス許可を付与するかどうかは、証拠に基づいて決定されます。</span><span class="sxs-lookup"><span data-stu-id="663dc-912">Whether certain permissions are granted or not granted to an assembly is based on evidence.</span></span> <span data-ttu-id="663dc-913">アセンブリとマージのセキュリティ証拠の規則は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="663dc-913">The rules for assembly and security evidence merging are as follows:</span></span>  
  
-   <span data-ttu-id="663dc-914">使用すると、<xref:System.Reflection.Assembly.Load%2A>なしでメソッド<xref:System.Security.Policy.Evidence>パラメーター、アセンブリの表示はローダーが提供する証拠を使用して読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="663dc-914">When you use a <xref:System.Reflection.Assembly.Load%2A> method with no <xref:System.Security.Policy.Evidence> parameter, the assembly is loaded with the evidence that the loader supplies.</span></span>  
  
-   <span data-ttu-id="663dc-915">使用すると、<xref:System.Reflection.Assembly.Load%2A>メソッドを<xref:System.Security.Policy.Evidence>パラメーターの証拠がマージされます。</span><span class="sxs-lookup"><span data-stu-id="663dc-915">When you use a <xref:System.Reflection.Assembly.Load%2A> method with an <xref:System.Security.Policy.Evidence> parameter, pieces of evidence are merged.</span></span> <span data-ttu-id="663dc-916">引数として指定された証拠、<xref:System.Reflection.Assembly.Load%2A>メソッドは、ローダーによって提供される証拠の部分を置き換えます。</span><span class="sxs-lookup"><span data-stu-id="663dc-916">Pieces of evidence supplied as an argument to the <xref:System.Reflection.Assembly.Load%2A> method supersede pieces of evidence supplied by the loader.</span></span>  
  
-   <span data-ttu-id="663dc-917">使用すると、<xref:System.Reflection.Assembly.Load%2A>でメソッドのオーバー ロードを`Byte[]`パラメーターは、common object file format (COFF) イメージ、証拠を読み込むには、呼び出し元アセンブリから継承されます。</span><span class="sxs-lookup"><span data-stu-id="663dc-917">When you use a <xref:System.Reflection.Assembly.Load%2A> method overload with a `Byte[]` parameter to load a common object file format (COFF) image, evidence is inherited from the calling assembly.</span></span> <span data-ttu-id="663dc-918">これは、.NET Framework version 1.1 に当てはまります Service Pack 1 (SP1) と今後のリリース。</span><span class="sxs-lookup"><span data-stu-id="663dc-918">This applies to the .NET Framework version 1.1 Service Pack 1 (SP1) and subsequent releases.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="663dc-919">.NET Framework version 1.0 と version 1.1 を使用するときに SP1 がない場合、<xref:System.Reflection.Assembly.Load%2A>でメソッドのオーバー ロードを`Byte[]`COFF イメージ、証拠を読み込むためのパラメーターを組み合わせます。</span><span class="sxs-lookup"><span data-stu-id="663dc-919">In the .NET Framework version 1.0 and in version 1.1 without SP1, when you use a <xref:System.Reflection.Assembly.Load%2A> method overload with a `Byte[]` parameter to load a COFF image, evidence is combined.</span></span> <span data-ttu-id="663dc-920">`Zone`、`Url`と`Site`は呼び出し元のアセンブリから継承されると`Hash`と`StrongName`COFF アセンブリから取得されます。</span><span class="sxs-lookup"><span data-stu-id="663dc-920">`Zone`, `Url` and `Site` are inherited from the calling assembly, and `Hash` and `StrongName` are taken from the COFF assembly.</span></span>  
  
-   <span data-ttu-id="663dc-921">使用すると、<xref:System.Reflection.Assembly.Load%2A>メソッドを`Byte[]`パラメーターと<xref:System.Security.Policy.Evidence>COFF イメージを読み込むには、指定された証拠のみが使用されます。</span><span class="sxs-lookup"><span data-stu-id="663dc-921">When you use a <xref:System.Reflection.Assembly.Load%2A> method with a `Byte[]` parameter and <xref:System.Security.Policy.Evidence> to load a COFF image, only the supplied evidence is used.</span></span> <span data-ttu-id="663dc-922">呼び出し元のアセンブリの証拠と COFF イメージの証拠が無視されます。</span><span class="sxs-lookup"><span data-stu-id="663dc-922">Evidence of the calling assembly and evidence of the COFF image is ignored.</span></span>  
  
 <span data-ttu-id="663dc-923">C++ 実行可能ファイルにリフレクションをスローする可能性を<xref:System.BadImageFormatException>します。</span><span class="sxs-lookup"><span data-stu-id="663dc-923">Reflecting on C++ executable files might throw a <xref:System.BadImageFormatException>.</span></span> <span data-ttu-id="663dc-924">最も可能性の高い原因は、C++ コンパイラが再配置アドレスまたは`.reloc`実行可能ファイルからセクション。</span><span class="sxs-lookup"><span data-stu-id="663dc-924">This is most likely caused by the C++ compiler stripping the relocation addresses or the `.reloc` section from your executable file.</span></span> <span data-ttu-id="663dc-925">保持するために、 `.reloc` C++ 実行可能ファイルのアドレスで指定`/fixed:no`リンクしています。</span><span class="sxs-lookup"><span data-stu-id="663dc-925">To preserve the `.reloc` address for your C++ executable file, specify `/fixed:no` when you are linking.</span></span>  
  
 <span data-ttu-id="663dc-926">共通言語ランタイムがスローしない場合は、同じアセンブリが異なる証拠を指定に、このメソッドを複数回呼び出す、<xref:System.IO.FileLoadException>異なる証拠仕様の整合性と等しいかどうかを判断できないためです。</span><span class="sxs-lookup"><span data-stu-id="663dc-926">If you call this method more than once on the same assembly but with a different evidence specified, the common language runtime does not throw a <xref:System.IO.FileLoadException> because the equality and integrity of the different evidence specifications cannot be determined.</span></span> <span data-ttu-id="663dc-927">最初に成功した証拠は、使用される証拠です。</span><span class="sxs-lookup"><span data-stu-id="663dc-927">The evidence that first succeeds is the evidence that is used.</span></span>  
  
 <span data-ttu-id="663dc-928">.NET Framework version 2.0 では、プロセッサ アーキテクチャは、アセンブリの id に追加され、アセンブリ名の文字列の一部として指定できます。</span><span class="sxs-lookup"><span data-stu-id="663dc-928">In the .NET Framework version 2.0, processor architecture is added to assembly identity, and can be specified as part of assembly name strings.</span></span> <span data-ttu-id="663dc-929">たとえば、"ProcessorArchitecture = msil"です。</span><span class="sxs-lookup"><span data-stu-id="663dc-929">For example, "ProcessorArchitecture=msil".</span></span> <span data-ttu-id="663dc-930">ただし、アセンブリ名を指定することをお勧めの方法は、作成するは、<xref:System.Reflection.AssemblyName>オブジェクトし、の適切なオーバー ロードに渡す、<xref:System.Reflection.Assembly.Load%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="663dc-930">However, the recommended way to specify an assembly name is to create an <xref:System.Reflection.AssemblyName> object and pass it to an appropriate overload of the <xref:System.Reflection.Assembly.Load%2A> method.</span></span> <span data-ttu-id="663dc-931">以下を参照してください。<xref:System.Reflection.AssemblyName.ProcessorArchitecture%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="663dc-931">See <xref:System.Reflection.AssemblyName.ProcessorArchitecture%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="663dc-932"><paramref name="assemblyString" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="663dc-932"><paramref name="assemblyString" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="663dc-933"><paramref name="assemblyString" /> が見つかりません。</span><span class="sxs-lookup"><span data-stu-id="663dc-933"><paramref name="assemblyString" /> is not found.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="663dc-934"><paramref name="assemblyString" /> は正しいアセンブリではありません。</span><span class="sxs-lookup"><span data-stu-id="663dc-934"><paramref name="assemblyString" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="663dc-935">または</span><span class="sxs-lookup"><span data-stu-id="663dc-935">-or-</span></span> 
<span data-ttu-id="663dc-936">共通言語ランタイムのバージョン 2.0 以降が現在読み込まれています。<paramref name="assemblyString" /> は、より新しいバージョンでコンパイルされています。</span><span class="sxs-lookup"><span data-stu-id="663dc-936">Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyString" /> was compiled with a later version.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="663dc-937">検出されたファイルを読み込めませんでした。</span><span class="sxs-lookup"><span data-stu-id="663dc-937">A file that was found could not be loaded.</span></span>  
  
<span data-ttu-id="663dc-938">または</span><span class="sxs-lookup"><span data-stu-id="663dc-938">-or-</span></span> 
<span data-ttu-id="663dc-939">アセンブリまたはモジュールが、2 つの異なる証拠を使用して 2 回読み込まれました。</span><span class="sxs-lookup"><span data-stu-id="663dc-939">An assembly or module was loaded twice with two different evidences.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="663dc-940">証拠とアセンブリの読み込み。</span><span class="sxs-lookup"><span data-stu-id="663dc-940">to load an assembly with evidence.</span></span> <span data-ttu-id="663dc-941">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span><span class="sxs-lookup"><span data-stu-id="663dc-941">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span></span></permission>
        <altmember cref="T:System.Security.Policy.Evidence" />
        <related type="Article" href="~/docs/framework/deployment/how-the-runtime-locates-assemblies.md"><span data-ttu-id="663dc-942">ランタイムがアセンブリを検索する方法</span><span class="sxs-lookup"><span data-stu-id="663dc-942">How the Runtime Locates Assemblies</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly Load (byte[] rawAssembly, byte[] rawSymbolStore, System.Security.Policy.Evidence securityEvidence);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly Load(unsigned int8[] rawAssembly, unsigned int8[] rawSymbolStore, class System.Security.Policy.Evidence securityEvidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.Load(System.Byte[],System.Byte[],System.Security.Policy.Evidence)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Load (rawAssembly As Byte(), rawSymbolStore As Byte(), securityEvidence As Evidence) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ Load(cli::array &lt;System::Byte&gt; ^ rawAssembly, cli::array &lt;System::Byte&gt; ^ rawSymbolStore, System::Security::Policy::Evidence ^ securityEvidence);" />
      <MemberSignature Language="F#" Value="static member Load : byte[] * byte[] * System.Security.Policy.Evidence -&gt; System.Reflection.Assembly" Usage="System.Reflection.Assembly.Load (rawAssembly, rawSymbolStore, securityEvidence)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("This method is obsolete and will be removed in a future release of the .NET Framework. Please use an overload of Load which does not take an Evidence parameter. See http://go.microsoft.com/fwlink/?LinkID=155570 for more information.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawAssembly" Type="System.Byte[]" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="rawSymbolStore" Type="System.Byte[]" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="securityEvidence" Type="System.Security.Policy.Evidence" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="rawAssembly"><span data-ttu-id="663dc-943">生成されたアセンブリを含む COFF ベースのイメージであるバイト配列。</span><span class="sxs-lookup"><span data-stu-id="663dc-943">A byte array that is a COFF-based image containing an emitted assembly.</span></span></param>
        <param name="rawSymbolStore"><span data-ttu-id="663dc-944">アセンブリのシンボルを表す生バイトを格納するバイト配列。</span><span class="sxs-lookup"><span data-stu-id="663dc-944">A byte array that contains the raw bytes representing the symbols for the assembly.</span></span></param>
        <param name="securityEvidence"><span data-ttu-id="663dc-945">アセンブリを読み込むために必要な証拠。</span><span class="sxs-lookup"><span data-stu-id="663dc-945">Evidence for loading the assembly.</span></span></param>
        <summary><span data-ttu-id="663dc-946">生成されたアセンブリが含まれている COFF ベースのイメージを使用して、このアセンブリを読み込みます。アセンブリのシンボルと証拠を含めることもできます。</span><span class="sxs-lookup"><span data-stu-id="663dc-946">Loads the assembly with a common object file format (COFF)-based image containing an emitted assembly, optionally including symbols and evidence for the assembly.</span></span> <span data-ttu-id="663dc-947">このアセンブリは、呼び出し元のアプリケーション ドメインに読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="663dc-947">The assembly is loaded into the application domain of the caller.</span></span></summary>
        <returns><span data-ttu-id="663dc-948">読み込まれるアセンブリ。</span><span class="sxs-lookup"><span data-stu-id="663dc-948">The loaded assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663dc-949">アセンブリは、指定された証拠を使用して、呼び出し元のドメインに読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="663dc-949">The assembly is loaded into the domain of the caller using the supplied evidence.</span></span> <span data-ttu-id="663dc-950">アセンブリのシンボルを表す生バイトも読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="663dc-950">The raw bytes representing the symbols for the assembly are also loaded.</span></span>  
  
 <span data-ttu-id="663dc-951">アセンブリに対して特定のアクセス許可を付与するかどうかは、証拠に基づいて決定されます。</span><span class="sxs-lookup"><span data-stu-id="663dc-951">Whether certain permissions are granted or not granted to an assembly is based on evidence.</span></span> <span data-ttu-id="663dc-952">アセンブリとマージのセキュリティ証拠の規則は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="663dc-952">The rules for assembly and security evidence merging are as follows:</span></span>  
  
-   <span data-ttu-id="663dc-953">使用すると、<xref:System.Reflection.Assembly.Load%2A>なしでメソッド<xref:System.Security.Policy.Evidence>パラメーター、アセンブリの表示はローダーが提供する証拠を使用して読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="663dc-953">When you use a <xref:System.Reflection.Assembly.Load%2A> method with no <xref:System.Security.Policy.Evidence> parameter, the assembly is loaded with the evidence that the loader supplies.</span></span>  
  
-   <span data-ttu-id="663dc-954">使用すると、<xref:System.Reflection.Assembly.Load%2A>メソッドを<xref:System.Security.Policy.Evidence>パラメーターの証拠がマージされます。</span><span class="sxs-lookup"><span data-stu-id="663dc-954">When you use a <xref:System.Reflection.Assembly.Load%2A> method with an <xref:System.Security.Policy.Evidence> parameter, pieces of evidence are merged.</span></span> <span data-ttu-id="663dc-955">引数として指定された証拠、<xref:System.Reflection.Assembly.Load%2A>メソッドは、ローダーによって提供される証拠の部分を置き換えます。</span><span class="sxs-lookup"><span data-stu-id="663dc-955">Pieces of evidence supplied as an argument to the <xref:System.Reflection.Assembly.Load%2A> method supersede pieces of evidence supplied by the loader.</span></span>  
  
-   <span data-ttu-id="663dc-956">使用すると、<xref:System.Reflection.Assembly.Load%2A>でメソッドのオーバー ロードを`Byte[]`COFF イメージ、証拠を読み込むためのパラメーターは、呼び出し元アセンブリから継承されます。</span><span class="sxs-lookup"><span data-stu-id="663dc-956">When you use a <xref:System.Reflection.Assembly.Load%2A> method overload with a `Byte[]` parameter to load a COFF image, evidence is inherited from the calling assembly.</span></span> <span data-ttu-id="663dc-957">これは、.NET Framework version 1.1 に当てはまります Service Pack 1 (SP1) と今後のリリース。</span><span class="sxs-lookup"><span data-stu-id="663dc-957">This applies to the .NET Framework version 1.1 Service Pack 1 (SP1) and subsequent releases.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="663dc-958">.NET Framework version 1.0 と version 1.1 を使用するときに SP1 がない場合、<xref:System.Reflection.Assembly.Load%2A>でメソッドのオーバー ロードを`Byte[]`COFF イメージ、証拠を読み込むためのパラメーターを組み合わせます。</span><span class="sxs-lookup"><span data-stu-id="663dc-958">In the .NET Framework version 1.0 and in version 1.1 without SP1, when you use a <xref:System.Reflection.Assembly.Load%2A> method overload with a `Byte[]` parameter to load a COFF image, evidence is combined.</span></span> <span data-ttu-id="663dc-959">`Zone`、`Url`と`Site`は呼び出し元のアセンブリから継承されると`Hash`と`StrongName`COFF アセンブリから取得されます。</span><span class="sxs-lookup"><span data-stu-id="663dc-959">`Zone`, `Url` and `Site` are inherited from the calling assembly, and `Hash` and `StrongName` are taken from the COFF assembly.</span></span>  
  
-   <span data-ttu-id="663dc-960">使用すると、<xref:System.Reflection.Assembly.Load%2A>メソッドを`Byte[]`パラメーターと<xref:System.Security.Policy.Evidence>COFF イメージを読み込むには、指定された証拠のみが使用されます。</span><span class="sxs-lookup"><span data-stu-id="663dc-960">When you use a <xref:System.Reflection.Assembly.Load%2A> method with a `Byte[]` parameter and <xref:System.Security.Policy.Evidence> to load a COFF image, only the supplied evidence is used.</span></span> <span data-ttu-id="663dc-961">呼び出し元のアセンブリの証拠と COFF イメージの証拠が無視されます。</span><span class="sxs-lookup"><span data-stu-id="663dc-961">Evidence of the calling assembly and evidence of the COFF image are ignored.</span></span>  
  
 <span data-ttu-id="663dc-962">C++ 実行可能ファイルにリフレクションをスローする可能性を<xref:System.BadImageFormatException>します。</span><span class="sxs-lookup"><span data-stu-id="663dc-962">Reflecting on C++ executable files might throw a <xref:System.BadImageFormatException>.</span></span> <span data-ttu-id="663dc-963">最も可能性の高い原因は、C++ コンパイラが再配置アドレスまたは`.reloc`実行可能ファイルからセクション。</span><span class="sxs-lookup"><span data-stu-id="663dc-963">This is most likely caused by the C++ compiler stripping the relocation addresses or the `.reloc` section from your executable file.</span></span> <span data-ttu-id="663dc-964">保持するために、 `.reloc` C++ 実行可能ファイルのアドレスで指定`/fixed:no`リンクしています。</span><span class="sxs-lookup"><span data-stu-id="663dc-964">To preserve the `.reloc` address for your C++ executable file, specify `/fixed:no` when you are linking.</span></span>  
  
 <span data-ttu-id="663dc-965">呼び出す場合、[\]、バイト\<xref:System.Reflection.Assembly.Load%2A > メソッドを 1 回、同じアセンブリでは、さまざまな証拠を指定、共通言語ランタイムをスローしないより、<xref:System.IO.FileLoadException>のため、等しいかどうかと、さまざまな証拠の仕様の整合性を特定できません。</span><span class="sxs-lookup"><span data-stu-id="663dc-965">If you call the [\], Byte\<xref:System.Reflection.Assembly.Load%2A> method more than once on the same assembly but with a different evidence specified, the common language runtime does not throw a <xref:System.IO.FileLoadException> because the equality and integrity of the different evidence specifications cannot be determined.</span></span> <span data-ttu-id="663dc-966">最初に成功した証拠は、使用される証拠です。</span><span class="sxs-lookup"><span data-stu-id="663dc-966">The evidence that first succeeds is the evidence that is used.</span></span>  
  
 <span data-ttu-id="663dc-967">このメソッドのオーバー ロードが、新しい作成常にことに注意してください。<xref:System.Reflection.Assembly>に独自のマッピングを持つオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="663dc-967">Note that this method overload always creates a new <xref:System.Reflection.Assembly> object with its own mapping.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="663dc-968"><paramref name="rawAssembly" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="663dc-968"><paramref name="rawAssembly" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="663dc-969"><paramref name="rawAssembly" /> は正しいアセンブリではありません。</span><span class="sxs-lookup"><span data-stu-id="663dc-969"><paramref name="rawAssembly" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="663dc-970">または</span><span class="sxs-lookup"><span data-stu-id="663dc-970">-or-</span></span> 
<span data-ttu-id="663dc-971">共通言語ランタイムのバージョン 2.0 以降が現在読み込まれています。<paramref name="rawAssembly" /> は、より新しいバージョンでコンパイルされています。</span><span class="sxs-lookup"><span data-stu-id="663dc-971">Version 2.0 or later of the common language runtime is currently loaded and <paramref name="rawAssembly" /> was compiled with a later version.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="663dc-972">アセンブリまたはモジュールが、2 つの異なる証拠を使用して 2 回読み込まれました。</span><span class="sxs-lookup"><span data-stu-id="663dc-972">An assembly or module was loaded twice with two different evidences.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="663dc-973"><paramref name="securityEvidence" /> が <see langword="null" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="663dc-973"><paramref name="securityEvidence" /> is not <see langword="null" />.</span></span>  <span data-ttu-id="663dc-974">既定では、従来の CAS ポリシーは [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] で有効ではありません。有効でない場合、<paramref name="securityEvidence" /> は <see langword="null" /> である必要があります。</span><span class="sxs-lookup"><span data-stu-id="663dc-974">By default, legacy CAS policy is not enabled in the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]; when it is not enabled, <paramref name="securityEvidence" /> must be <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="663dc-975">証拠を提供する機能。</span><span class="sxs-lookup"><span data-stu-id="663dc-975">for the ability to supply evidence.</span></span> <span data-ttu-id="663dc-976"><see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="663dc-976">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />.</span></span> <span data-ttu-id="663dc-977">セキュリティ アクション:<see cref="F:System.Security.Permissions.SecurityAction.Demand" />します。</span><span class="sxs-lookup"><span data-stu-id="663dc-977">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly Load (byte[] rawAssembly, byte[] rawSymbolStore, System.Security.SecurityContextSource securityContextSource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly Load(unsigned int8[] rawAssembly, unsigned int8[] rawSymbolStore, valuetype System.Security.SecurityContextSource securityContextSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.Load(System.Byte[],System.Byte[],System.Security.SecurityContextSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ Load(cli::array &lt;System::Byte&gt; ^ rawAssembly, cli::array &lt;System::Byte&gt; ^ rawSymbolStore, System::Security::SecurityContextSource securityContextSource);" />
      <MemberSignature Language="F#" Value="static member Load : byte[] * byte[] * System.Security.SecurityContextSource -&gt; System.Reflection.Assembly" Usage="System.Reflection.Assembly.Load (rawAssembly, rawSymbolStore, securityContextSource)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawAssembly" Type="System.Byte[]" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="rawSymbolStore" Type="System.Byte[]" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="securityContextSource" Type="System.Security.SecurityContextSource" Index="2" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="rawAssembly"><span data-ttu-id="663dc-978">生成されたアセンブリを含む COFF ベースのイメージであるバイト配列。</span><span class="sxs-lookup"><span data-stu-id="663dc-978">A byte array that is a COFF-based image containing an emitted assembly.</span></span></param>
        <param name="rawSymbolStore"><span data-ttu-id="663dc-979">アセンブリのシンボルを表す生バイトを格納するバイト配列。</span><span class="sxs-lookup"><span data-stu-id="663dc-979">A byte array that contains the raw bytes representing the symbols for the assembly.</span></span></param>
        <param name="securityContextSource"><span data-ttu-id="663dc-980">セキュリティ コンテキストのソース。</span><span class="sxs-lookup"><span data-stu-id="663dc-980">The source of the security context.</span></span></param>
        <summary><span data-ttu-id="663dc-981">生成されたアセンブリが含まれている COFF ベースのイメージを使用して、このアセンブリを読み込みます。シンボルを含めることも、セキュリティ コンテキストのソースを指定することもできます。</span><span class="sxs-lookup"><span data-stu-id="663dc-981">Loads the assembly with a common object file format (COFF)-based image containing an emitted assembly, optionally including symbols and specifying the source for the security context.</span></span> <span data-ttu-id="663dc-982">このアセンブリは、呼び出し元のアプリケーション ドメインに読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="663dc-982">The assembly is loaded into the application domain of the caller.</span></span></summary>
        <returns><span data-ttu-id="663dc-983">読み込まれるアセンブリ。</span><span class="sxs-lookup"><span data-stu-id="663dc-983">The loaded assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663dc-984">アセンブリは、セキュリティ コンテキストの指定したソースを使用して、呼び出し元のアプリケーション ドメインに読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="663dc-984">The assembly is loaded into the application domain of the caller using the specified source for the security context.</span></span> <span data-ttu-id="663dc-985">場合`rawSymbolStore`が指定すると、アセンブリのシンボルを表す生バイトも読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="663dc-985">If `rawSymbolStore` was specified, the raw bytes that represent the symbols for the assembly are also loaded.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="663dc-986"><paramref name="rawAssembly" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="663dc-986"><paramref name="rawAssembly" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="663dc-987"><paramref name="rawAssembly" /> は正しいアセンブリではありません。</span><span class="sxs-lookup"><span data-stu-id="663dc-987"><paramref name="rawAssembly" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="663dc-988">または</span><span class="sxs-lookup"><span data-stu-id="663dc-988">-or-</span></span> 
 <span data-ttu-id="663dc-989">現在読み込まれているバージョンよりも新しいバージョンの共通言語ランタイムで、<paramref name="rawAssembly" /> がコンパイルされました。</span><span class="sxs-lookup"><span data-stu-id="663dc-989"><paramref name="rawAssembly" /> was compiled with a later version of the common language runtime than the version that is currently loaded.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="663dc-990"><paramref name="securityContextSource" /> の値は、列挙値の 1 つではありません。</span><span class="sxs-lookup"><span data-stu-id="663dc-990">The value of <paramref name="securityContextSource" /> is not one of the enumeration values.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadFile">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="663dc-991">アセンブリ ファイルの内容を読み込みます。</span><span class="sxs-lookup"><span data-stu-id="663dc-991">Loads the contents of an assembly file.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadFile">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly LoadFile (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly LoadFile(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.LoadFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LoadFile (path As String) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ LoadFile(System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member LoadFile : string -&gt; System.Reflection.Assembly" Usage="System.Reflection.Assembly.LoadFile path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="663dc-992">読み込むファイルの完全修飾パス。</span><span class="sxs-lookup"><span data-stu-id="663dc-992">The fully qualified path of the file to load.</span></span></param>
        <summary><span data-ttu-id="663dc-993">指定したパスのアセンブリ ファイルの内容を読み込みます。</span><span class="sxs-lookup"><span data-stu-id="663dc-993">Loads the contents of an assembly file on the specified path.</span></span></summary>
        <returns><span data-ttu-id="663dc-994">読み込まれるアセンブリ。</span><span class="sxs-lookup"><span data-stu-id="663dc-994">The loaded assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663dc-995">使用して、<xref:System.Reflection.Assembly.LoadFile%2A>を読み込み、同じ id を別のパスにあるアセンブリを検証するメソッド。</span><span class="sxs-lookup"><span data-stu-id="663dc-995">Use the <xref:System.Reflection.Assembly.LoadFile%2A> method to load and examine assemblies that have the same identity, but are located in different paths.</span></span> <span data-ttu-id="663dc-996"><xref:System.Reflection.Assembly.LoadFile%2A> ファイルは、読み込み元コンテキストに読み込まれません、として、読み込みパスを使用して依存関係が解決しないと、<xref:System.Reflection.Assembly.LoadFrom%2A>メソッドします。</span><span class="sxs-lookup"><span data-stu-id="663dc-996"><xref:System.Reflection.Assembly.LoadFile%2A> does not load files into the load-from  context, and does not resolve dependencies using the load path, as the <xref:System.Reflection.Assembly.LoadFrom%2A> method does.</span></span> <span data-ttu-id="663dc-997"><xref:System.Reflection.Assembly.LoadFile%2A> この限られたシナリオで役に立つため<xref:System.Reflection.Assembly.LoadFrom%2A>アセンブリを読み込むには使用できませんさまざまなパスが同じ id は最初のメッセージだけを読み込むことがこのようなアセンブリ。</span><span class="sxs-lookup"><span data-stu-id="663dc-997"><xref:System.Reflection.Assembly.LoadFile%2A> is useful in this limited scenario because <xref:System.Reflection.Assembly.LoadFrom%2A> cannot be used to load assemblies that have the same identities but different paths; it will load only the first such assembly.</span></span>  

<span data-ttu-id="663dc-998">場合は、.NET Framework 4 以降`path`、リモートの場所でアセンブリを指定、既定では、アセンブリの読み込みが無効になっていると、`LoadFile`メソッドがスローされます、<xref:System.IO.FileLoadException>します。</span><span class="sxs-lookup"><span data-stu-id="663dc-998">Starting with .NET Framework 4, if `path` specifies an assembly in a remote location, assembly loading is disabled by default, and the `LoadFile` method throws a <xref:System.IO.FileLoadException>.</span></span> <span data-ttu-id="663dc-999">リモートの場所から読み込まれたコードの実行を有効にするを使用できます、 [ `<loadFromRemoteSources>` ](~/docs/framework/configure-apps/file-schema/runtime/loadfromremotesources-element.md)構成要素。</span><span class="sxs-lookup"><span data-stu-id="663dc-999">To enable execution of code loaded from remote locations, you can use the [`<loadFromRemoteSources>`](~/docs/framework/configure-apps/file-schema/runtime/loadfromremotesources-element.md) configuration element.</span></span>    
    
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="663dc-1000"><paramref name="path" /> 引数が絶対パスではありません。</span><span class="sxs-lookup"><span data-stu-id="663dc-1000">The <paramref name="path" /> argument is not an absolute path.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="663dc-1001"><paramref name="path" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="663dc-1001">The <paramref name="path" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="663dc-1002">検出されたファイルを読み込めませんでした。</span><span class="sxs-lookup"><span data-stu-id="663dc-1002">A file that was found could not be loaded.</span></span>

<span data-ttu-id="663dc-1003">または</span><span class="sxs-lookup"><span data-stu-id="663dc-1003">-or-</span></span>

<span data-ttu-id="663dc-1004">リモート アセンブリ内でコードを実行する機能が無効になっています。</span><span class="sxs-lookup"><span data-stu-id="663dc-1004">The ability to execute code in remote assemblies is disabled.</span></span> <span data-ttu-id="663dc-1005"><see href="https://docs.microsoft.com/dotnet/framework/configure-apps/file-schema/runtime/loadfromremotesources-element">&lt;loadFromRemoteSources&gt;</see> を参照してください。</span><span class="sxs-lookup"><span data-stu-id="663dc-1005">See <see href="https://docs.microsoft.com/dotnet/framework/configure-apps/file-schema/runtime/loadfromremotesources-element">&lt;loadFromRemoteSources&gt;</see>.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="663dc-1006"><paramref name="path" /> パラメーターが空の文字列 ("") になっているか、存在しません。</span><span class="sxs-lookup"><span data-stu-id="663dc-1006">The <paramref name="path" /> parameter is an empty string ("") or does not exist.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="663dc-1007"><paramref name="path" /> は正しいアセンブリではありません。</span><span class="sxs-lookup"><span data-stu-id="663dc-1007"><paramref name="path" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="663dc-1008">または</span><span class="sxs-lookup"><span data-stu-id="663dc-1008">-or-</span></span> 
<span data-ttu-id="663dc-1009">共通言語ランタイムのバージョン 2.0 以降が現在読み込まれています。<paramref name="path" /> は、より新しいバージョンでコンパイルされています。</span><span class="sxs-lookup"><span data-stu-id="663dc-1009">Version 2.0 or later of the common language runtime is currently loaded and <paramref name="path" /> was compiled with a later version.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="663dc-1010">ファイルまたはディレクトリからと、パス自体の情報にアクセスするための読み取りにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="663dc-1010">for access to read from a file or directory, and for access to the information in the path itself.</span></span> <span data-ttu-id="663dc-1011">列挙体に関連付けられている: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span><span class="sxs-lookup"><span data-stu-id="663dc-1011">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="663dc-1012">証拠とアセンブリの読み込み。</span><span class="sxs-lookup"><span data-stu-id="663dc-1012">to load an assembly with evidence.</span></span> <span data-ttu-id="663dc-1013">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span><span class="sxs-lookup"><span data-stu-id="663dc-1013">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="LoadFile">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly LoadFile (string path, System.Security.Policy.Evidence securityEvidence);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly LoadFile(string path, class System.Security.Policy.Evidence securityEvidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.LoadFile(System.String,System.Security.Policy.Evidence)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LoadFile (path As String, securityEvidence As Evidence) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ LoadFile(System::String ^ path, System::Security::Policy::Evidence ^ securityEvidence);" />
      <MemberSignature Language="F#" Value="static member LoadFile : string * System.Security.Policy.Evidence -&gt; System.Reflection.Assembly" Usage="System.Reflection.Assembly.LoadFile (path, securityEvidence)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("This method is obsolete and will be removed in a future release of the .NET Framework. Please use an overload of LoadFile which does not take an Evidence parameter. See http://go.microsoft.com/fwlink/?LinkID=155570 for more information.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="securityEvidence" Type="System.Security.Policy.Evidence" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="663dc-1014">アセンブリ ファイルの絶対パス。</span><span class="sxs-lookup"><span data-stu-id="663dc-1014">The fully qualified path of the assembly file.</span></span></param>
        <param name="securityEvidence"><span data-ttu-id="663dc-1015">アセンブリを読み込むために必要な証拠。</span><span class="sxs-lookup"><span data-stu-id="663dc-1015">Evidence for loading the assembly.</span></span></param>
        <summary><span data-ttu-id="663dc-1016">パスを指定してアセンブリを読み込みます。アセンブリは、指定された証拠を使用して、呼び出し元のドメインに読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="663dc-1016">Loads an assembly given its path, loading the assembly into the domain of the caller using the supplied evidence.</span></span></summary>
        <returns><span data-ttu-id="663dc-1017">読み込まれるアセンブリ。</span><span class="sxs-lookup"><span data-stu-id="663dc-1017">The loaded assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663dc-1018">使用して、<xref:System.Reflection.Assembly.LoadFile%2A>を読み込み、同じ id を別のパスにあるアセンブリを検証するメソッド。</span><span class="sxs-lookup"><span data-stu-id="663dc-1018">Use the <xref:System.Reflection.Assembly.LoadFile%2A> method to load and examine assemblies that have the same identity, but are located in different paths.</span></span> <span data-ttu-id="663dc-1019"><xref:System.Reflection.Assembly.LoadFile%2A> ファイルを読み込みません、<xref:System.Reflection.Assembly.LoadFrom%2A>コンテキストとして、読み込みパスを使用して依存関係が解決しないと、<xref:System.Reflection.Assembly.LoadFrom%2A>メソッドします。</span><span class="sxs-lookup"><span data-stu-id="663dc-1019"><xref:System.Reflection.Assembly.LoadFile%2A> does not load files into the <xref:System.Reflection.Assembly.LoadFrom%2A> context, and does not resolve dependencies using the load path, as the <xref:System.Reflection.Assembly.LoadFrom%2A> method does.</span></span> <span data-ttu-id="663dc-1020"><xref:System.Reflection.Assembly.LoadFile%2A> この限られたシナリオで役に立つため<xref:System.Reflection.Assembly.LoadFrom%2A>アセンブリを読み込むには使用できませんさまざまなパスが同じ id は最初のメッセージだけを読み込むことがこのようなアセンブリ。</span><span class="sxs-lookup"><span data-stu-id="663dc-1020"><xref:System.Reflection.Assembly.LoadFile%2A> is useful in this limited scenario because <xref:System.Reflection.Assembly.LoadFrom%2A> cannot be used to load assemblies that have the same identities but different paths; it will load only the first such assembly.</span></span>  

<span data-ttu-id="663dc-1021">場合は、.NET Framework 4 以降`path`、リモートの場所でアセンブリを指定、既定では、アセンブリの読み込みが無効になっていると、`LoadFile`メソッドがスローされます、<xref:System.IO.FileLoadException>します。</span><span class="sxs-lookup"><span data-stu-id="663dc-1021">Starting with .NET Framework 4, if `path` specifies an assembly in a remote location, assembly loading is disabled by default, and the `LoadFile` method throws a <xref:System.IO.FileLoadException>.</span></span> <span data-ttu-id="663dc-1022">リモートの場所から読み込まれたコードの実行を有効にするを使用できます、 [ `<loadFromRemoteSources>` ](~/docs/framework/configure-apps/file-schema/runtime/loadfromremotesources-element.md)構成要素。</span><span class="sxs-lookup"><span data-stu-id="663dc-1022">To enable execution of code loaded from remote locations, you can use the [`<loadFromRemoteSources>`](~/docs/framework/configure-apps/file-schema/runtime/loadfromremotesources-element.md) configuration element.</span></span>    

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="663dc-1023"><paramref name="path" /> 引数が絶対パスではありません。</span><span class="sxs-lookup"><span data-stu-id="663dc-1023">The <paramref name="path" /> argument is not an absolute path.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="663dc-1024"><paramref name="path" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="663dc-1024">The <paramref name="path" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="663dc-1025"><paramref name="path" /> パラメーターが空の文字列 ("") になっているか、存在しません。</span><span class="sxs-lookup"><span data-stu-id="663dc-1025">The <paramref name="path" /> parameter is an empty string ("") or does not exist.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="663dc-1026">検出されたファイルを読み込めませんでした。</span><span class="sxs-lookup"><span data-stu-id="663dc-1026">A file that was found could not be loaded.</span></span>

<span data-ttu-id="663dc-1027">または</span><span class="sxs-lookup"><span data-stu-id="663dc-1027">-or-</span></span>

<span data-ttu-id="663dc-1028">リモート アセンブリ内でコードを実行する機能が無効になっています。</span><span class="sxs-lookup"><span data-stu-id="663dc-1028">The ability to execute code in remote assemblies is disabled.</span></span> <span data-ttu-id="663dc-1029"><see href="https://docs.microsoft.com/dotnet/framework/configure-apps/file-schema/runtime/loadfromremotesources-element">&lt;loadFromRemoteSources&gt;</see> を参照してください。</span><span class="sxs-lookup"><span data-stu-id="663dc-1029">See <see href="https://docs.microsoft.com/dotnet/framework/configure-apps/file-schema/runtime/loadfromremotesources-element">&lt;loadFromRemoteSources&gt;</see>.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="663dc-1030"><paramref name="path" /> は正しいアセンブリではありません。</span><span class="sxs-lookup"><span data-stu-id="663dc-1030"><paramref name="path" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="663dc-1031">または</span><span class="sxs-lookup"><span data-stu-id="663dc-1031">-or-</span></span> 
<span data-ttu-id="663dc-1032">共通言語ランタイムのバージョン 2.0 以降が現在読み込まれています。<paramref name="path" /> は、より新しいバージョンでコンパイルされています。</span><span class="sxs-lookup"><span data-stu-id="663dc-1032">Version 2.0 or later of the common language runtime is currently loaded and <paramref name="path" /> was compiled with a later version.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="663dc-1033"><paramref name="securityEvidence" /> が <see langword="null" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="663dc-1033"><paramref name="securityEvidence" /> is not <see langword="null" />.</span></span> <span data-ttu-id="663dc-1034">既定では、従来の CAS ポリシーは [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] で有効ではありません。有効でない場合、<paramref name="securityEvidence" /> は <see langword="null" /> である必要があります。</span><span class="sxs-lookup"><span data-stu-id="663dc-1034">By default, legacy CAS policy is not enabled in the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]; when it is not enabled, <paramref name="securityEvidence" /> must be <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="663dc-1035">ファイルまたはディレクトリからと、パス自体の情報にアクセスするための読み取りにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="663dc-1035">for access to read from a file or directory, and for access to the information in the path itself.</span></span> <span data-ttu-id="663dc-1036">列挙体に関連付けられている: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span><span class="sxs-lookup"><span data-stu-id="663dc-1036">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="663dc-1037">証拠とアセンブリの読み込み。</span><span class="sxs-lookup"><span data-stu-id="663dc-1037">to load an assembly with evidence.</span></span> <span data-ttu-id="663dc-1038">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span><span class="sxs-lookup"><span data-stu-id="663dc-1038">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadFrom">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="663dc-1039">アセンブリを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="663dc-1039">Loads an assembly.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
             
## Remarks

<span data-ttu-id="663dc-1040">.NET Framework 4 以降では、既定の呼び出しでリモートの場所から読み込まれるアセンブリでコードを実行する機能が無効です、`LoadFrom`メソッドがスローされます、<xref:System.IO.FileLoadException>します。</span><span class="sxs-lookup"><span data-stu-id="663dc-1040">Starting with .NET Framework 4, the ability to execute code in assemblies loaded from remote locations is disabled by default, and the call to the `LoadFrom` method throws a <xref:System.IO.FileLoadException>.</span></span> <span data-ttu-id="663dc-1041">アセンブリを読み込むし、そのコードを実行、する必要がありますか。</span><span class="sxs-lookup"><span data-stu-id="663dc-1041">To load the assembly and execute its code, you must either:</span></span>

- <span data-ttu-id="663dc-1042">明示的にアセンブリをサンド ボックスを作成します。</span><span class="sxs-lookup"><span data-stu-id="663dc-1042">Explicitly create a sandbox for the assembly.</span></span> <span data-ttu-id="663dc-1043">(「[方法: サンド ボックスで部分信頼コードを実行](~/docs/framework/misc/how-to-run-partially-trusted-code-in-a-sandbox.md))。</span><span class="sxs-lookup"><span data-stu-id="663dc-1043">(See [How to: Run Partially Trusted Code in a Sandbox](~/docs/framework/misc/how-to-run-partially-trusted-code-in-a-sandbox.md).)</span></span>

- <span data-ttu-id="663dc-1044">アセンブリのコードを設定して完全な信頼で実行、`enabled`の属性、 [ `<loadFromRemoteSources>`構成要素](~/docs/framework/configure-apps/file-schema/runtime/loadfromremotesources-element.md)に`true`します。</span><span class="sxs-lookup"><span data-stu-id="663dc-1044">Run the assembly's code in full trust by setting the `enabled` attribute of the [`<loadFromRemoteSources>` configuration element](~/docs/framework/configure-apps/file-schema/runtime/loadfromremotesources-element.md) to `true`.</span></span> <span data-ttu-id="663dc-1045">詳細については、次を参照してください。、 [ `<loadFromRemoteSources>`構成要素](~/docs/framework/configure-apps/file-schema/runtime/loadfromremotesources-element.md)記事。</span><span class="sxs-lookup"><span data-stu-id="663dc-1045">For more information, see the [`<loadFromRemoteSources>` configuration element](~/docs/framework/configure-apps/file-schema/runtime/loadfromremotesources-element.md) article.</span></span>

       ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadFrom">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly LoadFrom (string assemblyFile);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly LoadFrom(string assemblyFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.LoadFrom(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LoadFrom (assemblyFile As String) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ LoadFrom(System::String ^ assemblyFile);" />
      <MemberSignature Language="F#" Value="static member LoadFrom : string -&gt; System.Reflection.Assembly" Usage="System.Reflection.Assembly.LoadFrom assemblyFile" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="assemblyFile"><span data-ttu-id="663dc-1046">アセンブリのマニフェストを格納しているファイルの名前またはパス。</span><span class="sxs-lookup"><span data-stu-id="663dc-1046">The name or path of the file that contains the manifest of the assembly.</span></span></param>
        <summary><span data-ttu-id="663dc-1047">ファイル名またはパスを指定してアセンブリを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="663dc-1047">Loads an assembly given its file name or path.</span></span></summary>
        <returns><span data-ttu-id="663dc-1048">読み込まれるアセンブリ。</span><span class="sxs-lookup"><span data-stu-id="663dc-1048">The loaded assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663dc-1049">`assemblyFile`パラメーターは、エスケープ文字のない URI に参照する必要があります。</span><span class="sxs-lookup"><span data-stu-id="663dc-1049">The `assemblyFile` parameter must refer to a URI without escape characters.</span></span> <span data-ttu-id="663dc-1050">このメソッドは、URI 内のすべての無効な文字のエスケープ文字を提供します。</span><span class="sxs-lookup"><span data-stu-id="663dc-1050">This method supplies escape characters for all invalid characters in the URI.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="663dc-1051">ファイル転送プロトコル (FTP) はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="663dc-1051">File transfer protocol (FTP) is not supported.</span></span> <span data-ttu-id="663dc-1052">URI が指定されている場合`assemblyFile`FTP アドレスは、アセンブリが読み込まれていません。</span><span class="sxs-lookup"><span data-stu-id="663dc-1052">If the URI supplied for `assemblyFile` is an FTP address, the assembly is not loaded.</span></span> <span data-ttu-id="663dc-1053">例外をスローすることはありません。</span><span class="sxs-lookup"><span data-stu-id="663dc-1053">No exception is thrown.</span></span>  
  
 <span data-ttu-id="663dc-1054">`assemblyFile` 絶対パスまたは現在のディレクトリに相対する可能性があります、アセンブリは、呼び出し元のドメインに読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="663dc-1054">`assemblyFile` may be absolute or relative to the current directory, and the assembly is loaded into the domain of the caller.</span></span>  
  
 <span data-ttu-id="663dc-1055">アセンブリは、3 つのコンテキストのいずれかに読み込むことができるまたは、コンテキストなしで読み込むことができます。</span><span class="sxs-lookup"><span data-stu-id="663dc-1055">Assemblies can be loaded into one of three contexts, or can be loaded without context:</span></span>  
  
-   <span data-ttu-id="663dc-1056">読み込みコンテキストに調査して見つかるアセンブリが含まれています。 GAC 内のホスト アセンブリで、ランタイムがホストされている場合または保存、<xref:System.AppDomainSetup.ApplicationBase%2A>と<xref:System.AppDomainSetup.PrivateBinPath%2A>のアプリケーション ドメイン。</span><span class="sxs-lookup"><span data-stu-id="663dc-1056">The load context contains assemblies found by probing: in the GAC, in a host assembly store if the runtime is hosted, or in the <xref:System.AppDomainSetup.ApplicationBase%2A> and <xref:System.AppDomainSetup.PrivateBinPath%2A> of the application domain.</span></span> <span data-ttu-id="663dc-1057"><xref:System.Reflection.Assembly.Load%2A> メソッドのほとんどのオーバーロードは、このコンテキストにアセンブリを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="663dc-1057">Most overloads of the <xref:System.Reflection.Assembly.Load%2A> method load assemblies into this context.</span></span>  
  
-   <span data-ttu-id="663dc-1058">読み込み元コンテキストには、ユーザーが調査によって検索されたディレクトリに含まれていないパスを指定したアセンブリが含まれています。</span><span class="sxs-lookup"><span data-stu-id="663dc-1058">The load-from context contains assemblies for which the user provided a path not included in the directories searched by probing.</span></span> <span data-ttu-id="663dc-1059"><xref:System.Reflection.Assembly.LoadFrom%2A>、<xref:System.AppDomain.CreateInstanceFrom%2A>、<xref:System.AppDomain.ExecuteAssembly%2A> は、パスを使用して読み込むメソッドの例です。</span><span class="sxs-lookup"><span data-stu-id="663dc-1059"><xref:System.Reflection.Assembly.LoadFrom%2A>, <xref:System.AppDomain.CreateInstanceFrom%2A>, and <xref:System.AppDomain.ExecuteAssembly%2A> are examples of methods that load by path.</span></span> 

    <span data-ttu-id="663dc-1060">場合は、.NET Framework 4 以降の URI `assemblyFile` 、リモートの場所を指定します。 既定では、アセンブリの読み込みが無効になっていると`LoadFrom`メソッドがスローされます、 <xref:System.IO.FileLoadException>。</span><span class="sxs-lookup"><span data-stu-id="663dc-1060">Starting with .NET Framework 4, if the URI of `assemblyFile` specifies a remote location, assembly loading is disabled by default, and the `LoadFrom` method throws a <xref:System.IO.FileLoadException>.</span></span> <span data-ttu-id="663dc-1061">リモートの場所から読み込まれたコードの実行を有効にするを使用できます、 [ `<loadFromRemoteSources>` ](~/docs/framework/configure-apps/file-schema/runtime/loadfromremotesources-element.md)構成要素。</span><span class="sxs-lookup"><span data-stu-id="663dc-1061">To enable execution of code loaded from remote locations, you can use the [`<loadFromRemoteSources>`](~/docs/framework/configure-apps/file-schema/runtime/loadfromremotesources-element.md) configuration element.</span></span>    
  
-   <span data-ttu-id="663dc-1062">リフレクション専用コンテキストに読み込まれたアセンブリが含まれています、<xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A>と<xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A>メソッドはこれらのコードのコンテキストを実行することはできません。</span><span class="sxs-lookup"><span data-stu-id="663dc-1062">The reflection-only context contains assemblies loaded with the <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A> and <xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A> methods; code in these contexts cannot be executed.</span></span>  
  
-   <span data-ttu-id="663dc-1063">ユーザーは、生成されたか、アセンブリが見つかりましたでない任意のコンテキスト。</span><span class="sxs-lookup"><span data-stu-id="663dc-1063">If the user generated or found the assembly, it is not in any context.</span></span> <span data-ttu-id="663dc-1064">これのオーバー ロードを使用して読み込まれたアセンブリに適用されます、<xref:System.Reflection.Assembly.Load%2A>アセンブリを含むバイト配列を指定し、一時動的アセンブリがリフレクションを使用して作成するには、出力をディスクに保存せずメソッドをします。</span><span class="sxs-lookup"><span data-stu-id="663dc-1064">This applies to assemblies loaded using overloads of the <xref:System.Reflection.Assembly.Load%2A> method that specify a byte array containing an assembly, and to transient dynamic assemblies created with reflection emit and not saved to disk.</span></span>  
  
 <span data-ttu-id="663dc-1065">読み込み元コンテキストには、調査には含まれないパスから読み込まれるアセンブリができ、そのパスを見つけ、パス情報がコンテキストによって保持されるため、読み込まれた依存関係ができます。</span><span class="sxs-lookup"><span data-stu-id="663dc-1065">The load-from context allows an assembly to be loaded from a path not included in probing, and yet allows dependencies on that path to be found and loaded because the path information is maintained by the context.</span></span>  
  
 <span data-ttu-id="663dc-1066"><xref:System.Reflection.Assembly.LoadFrom%2A>メソッドには、次の欠点です。</span><span class="sxs-lookup"><span data-stu-id="663dc-1066">The <xref:System.Reflection.Assembly.LoadFrom%2A> method has the following disadvantages.</span></span> <span data-ttu-id="663dc-1067">代わりに <xref:System.Reflection.Assembly.Load%2A> を使用することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="663dc-1067">Consider using <xref:System.Reflection.Assembly.Load%2A> instead.</span></span>  
  
-   <span data-ttu-id="663dc-1068">同じ ID を持つアセンブリが既に読み込まれている場合、<xref:System.Reflection.Assembly.LoadFrom%2A> は、別のパスが指定されている場合であっても、読み込み済みのアセンブリを返します。</span><span class="sxs-lookup"><span data-stu-id="663dc-1068">If an assembly with the same identity is already loaded, <xref:System.Reflection.Assembly.LoadFrom%2A> returns the loaded assembly even if a different path was specified.</span></span>  
  
-   <span data-ttu-id="663dc-1069"><xref:System.Reflection.Assembly.LoadFrom%2A> を使用してアセンブリを読み込んだ後、同じアセンブリを、読み込みコンテキストにあるアセンブリが表示名で読み込もうとすると、読み込みが失敗します。</span><span class="sxs-lookup"><span data-stu-id="663dc-1069">If an assembly is loaded with <xref:System.Reflection.Assembly.LoadFrom%2A>, and later an assembly in the load context attempts to load the same assembly by display name, the load attempt fails.</span></span> <span data-ttu-id="663dc-1070">これは、アセンブリがシリアル化解除されたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="663dc-1070">This can occur when an assembly is de-serialized.</span></span>  
  
-   <span data-ttu-id="663dc-1071">アセンブリが読み込まれている場合<xref:System.Reflection.Assembly.LoadFrom%2A>、プローブ パスに同じ id が、別の場所でアセンブリが含まれています、 <xref:System.InvalidCastException>、 <xref:System.MissingMethodException>、またはその他の予期しない動作が発生することができます。</span><span class="sxs-lookup"><span data-stu-id="663dc-1071">If an assembly is loaded with <xref:System.Reflection.Assembly.LoadFrom%2A>, and the probing path includes an assembly with the same identity but a different location, an <xref:System.InvalidCastException>, <xref:System.MissingMethodException>, or other unexpected behavior can occur.</span></span>  
  
-   <span data-ttu-id="663dc-1072"><xref:System.Reflection.Assembly.LoadFrom%2A> には、指定したパスに対する <xref:System.Security.Permissions.FileIOPermissionAccess.Read?displayProperty=nameWithType> および <xref:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery?displayProperty=nameWithType>、または <xref:System.Net.WebPermission> が必要です。</span><span class="sxs-lookup"><span data-stu-id="663dc-1072"><xref:System.Reflection.Assembly.LoadFrom%2A> demands <xref:System.Security.Permissions.FileIOPermissionAccess.Read?displayProperty=nameWithType> and <xref:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery?displayProperty=nameWithType>, or <xref:System.Net.WebPermission>, on the specified path.</span></span>  
  
-   <span data-ttu-id="663dc-1073">ネイティブ イメージが存在する場合`assemblyFile`は使用されません。</span><span class="sxs-lookup"><span data-stu-id="663dc-1073">If a native image exists for `assemblyFile`, it is not used.</span></span> <span data-ttu-id="663dc-1074">アセンブリをドメインに中立として読み込まれたにすることはできません。</span><span class="sxs-lookup"><span data-stu-id="663dc-1074">The assembly cannot be loaded as domain neutral.</span></span>  
  
-   <span data-ttu-id="663dc-1075">.NET framework version 1.0 および 1.1 では、ポリシーは適用されません。</span><span class="sxs-lookup"><span data-stu-id="663dc-1075">In the .NET Framework version 1.0 and 1.1, policy is not applied.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="663dc-1076">次の例では、そのファイル名またはパスを指定してアセンブリを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="663dc-1076">The following example loads an assembly given its file name or path.</span></span>  
  
 [!code-cpp[System.Reflection.Assembly#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Assembly/CPP/assembly.cpp#11)]
 [!code-csharp[System.Reflection.Assembly#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Assembly/CS/assembly.cs#11)]
 [!code-vb[System.Reflection.Assembly#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Assembly/VB/assembly.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="663dc-1077"><paramref name="assemblyFile" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="663dc-1077"><paramref name="assemblyFile" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="663dc-1078"><paramref name="assemblyFile" /> が見つからないか、または読み込もうとしているモジュールにファイル名拡張子が指定されていません。</span><span class="sxs-lookup"><span data-stu-id="663dc-1078"><paramref name="assemblyFile" /> is not found, or the module you are trying to load does not specify a filename extension.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="663dc-1079">検出されたファイルを読み込めませんでした。</span><span class="sxs-lookup"><span data-stu-id="663dc-1079">A file that was found could not be loaded.</span></span>

<span data-ttu-id="663dc-1080">または</span><span class="sxs-lookup"><span data-stu-id="663dc-1080">-or-</span></span>

<span data-ttu-id="663dc-1081">リモート アセンブリ内でコードを実行する機能が無効になっています。</span><span class="sxs-lookup"><span data-stu-id="663dc-1081">The ability to execute code in remote assemblies is disabled.</span></span> <span data-ttu-id="663dc-1082"><see href="https://docs.microsoft.com/dotnet/framework/configure-apps/file-schema/runtime/loadfromremotesources-element">&lt;loadFromRemoteSources&gt;</see> を参照してください。</span><span class="sxs-lookup"><span data-stu-id="663dc-1082">See <see href="https://docs.microsoft.com/dotnet/framework/configure-apps/file-schema/runtime/loadfromremotesources-element">&lt;loadFromRemoteSources&gt;</see>.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="663dc-1083"><paramref name="assemblyFile" /> は有効なアセンブリではありません (64 ビット プロセスの 32 ビット アセンブリなど)。</span><span class="sxs-lookup"><span data-stu-id="663dc-1083"><paramref name="assemblyFile" /> is not a valid assembly; for example, a 32-bit assembly in a 64-bit process.</span></span> <span data-ttu-id="663dc-1084">詳細については、例外に関するトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="663dc-1084">See the exception topic for more information.</span></span>  
  
<span data-ttu-id="663dc-1085">または</span><span class="sxs-lookup"><span data-stu-id="663dc-1085">-or-</span></span> 
<span data-ttu-id="663dc-1086">共通言語ランタイムのバージョン 2.0 以降が現在読み込まれています。<paramref name="assemblyFile" /> は、より新しいバージョンでコンパイルされています。</span><span class="sxs-lookup"><span data-stu-id="663dc-1086">Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyFile" /> was compiled with a later version.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="663dc-1087">"file://" で始まっていないコードベースが、必要な <see cref="T:System.Net.WebPermission" /> なしで指定されました。</span><span class="sxs-lookup"><span data-stu-id="663dc-1087">A codebase that does not start with "file://" was specified without the required <see cref="T:System.Net.WebPermission" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="663dc-1088"><paramref name="assemblyFile" /> パラメーターが空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="663dc-1088">The <paramref name="assemblyFile" /> parameter is an empty string ("").</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="663dc-1089">アセンブリ名がシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="663dc-1089">The assembly name exceeds the system-defined maximum length.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="663dc-1090">file:// で始まる URI を読み取る。</span><span class="sxs-lookup"><span data-stu-id="663dc-1090">for reading a URI that begins with "file://".</span></span> <span data-ttu-id="663dc-1091">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="663dc-1091">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
        <permission cref="T:System.Net.WebPermission"><span data-ttu-id="663dc-1092">file:// で始まらないする URI を読み取る。</span><span class="sxs-lookup"><span data-stu-id="663dc-1092">for reading a URI that does not begin with "file://".</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="LoadFrom">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly LoadFrom (string assemblyFile, System.Security.Policy.Evidence securityEvidence);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly LoadFrom(string assemblyFile, class System.Security.Policy.Evidence securityEvidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.LoadFrom(System.String,System.Security.Policy.Evidence)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LoadFrom (assemblyFile As String, securityEvidence As Evidence) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ LoadFrom(System::String ^ assemblyFile, System::Security::Policy::Evidence ^ securityEvidence);" />
      <MemberSignature Language="F#" Value="static member LoadFrom : string * System.Security.Policy.Evidence -&gt; System.Reflection.Assembly" Usage="System.Reflection.Assembly.LoadFrom (assemblyFile, securityEvidence)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("This method is obsolete and will be removed in a future release of the .NET Framework. Please use an overload of LoadFrom which does not take an Evidence parameter. See http://go.microsoft.com/fwlink/?LinkID=155570 for more information.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="securityEvidence" Type="System.Security.Policy.Evidence" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="assemblyFile"><span data-ttu-id="663dc-1093">アセンブリのマニフェストを格納しているファイルの名前またはパス。</span><span class="sxs-lookup"><span data-stu-id="663dc-1093">The name or path of the file that contains the manifest of the assembly.</span></span></param>
        <param name="securityEvidence"><span data-ttu-id="663dc-1094">アセンブリを読み込むために必要な証拠。</span><span class="sxs-lookup"><span data-stu-id="663dc-1094">Evidence for loading the assembly.</span></span></param>
        <summary><span data-ttu-id="663dc-1095">ファイル名またはパスを指定してアセンブリを読み込み、セキュリティ証拠を提供します。</span><span class="sxs-lookup"><span data-stu-id="663dc-1095">Loads an assembly given its file name or path and supplying security evidence.</span></span></summary>
        <returns><span data-ttu-id="663dc-1096">読み込まれるアセンブリ。</span><span class="sxs-lookup"><span data-stu-id="663dc-1096">The loaded assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663dc-1097">`assemblyFile`パラメーターは、エスケープ文字のない URI に参照する必要があります。</span><span class="sxs-lookup"><span data-stu-id="663dc-1097">The `assemblyFile` parameter must refer to a URI without escape characters.</span></span> <span data-ttu-id="663dc-1098">このメソッドは、URI 内のすべての無効な文字のエスケープ文字を提供します。</span><span class="sxs-lookup"><span data-stu-id="663dc-1098">This method supplies escape characters for all invalid characters in the URI.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="663dc-1099">ファイル転送プロトコル (FTP) はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="663dc-1099">File transfer protocol (FTP) is not supported.</span></span> <span data-ttu-id="663dc-1100">URI が指定されている場合`assemblyFile`FTP アドレスは、アセンブリが読み込まれていません。</span><span class="sxs-lookup"><span data-stu-id="663dc-1100">If the URI supplied for `assemblyFile` is an FTP address, the assembly is not loaded.</span></span> <span data-ttu-id="663dc-1101">例外をスローすることはありません。</span><span class="sxs-lookup"><span data-stu-id="663dc-1101">No exception is thrown.</span></span>  
  
 <span data-ttu-id="663dc-1102">`assemblyFile` 絶対パスまたは現在のディレクトリに相対する可能性があります、アセンブリは、呼び出し元のドメインに読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="663dc-1102">`assemblyFile` may be absolute or  relative to the current directory, and the assembly is loaded into the domain of the caller.</span></span>  
  
 <span data-ttu-id="663dc-1103">アセンブリは、3 つのコンテキストのいずれかに読み込むことができるまたは、コンテキストなしで読み込むことができます。</span><span class="sxs-lookup"><span data-stu-id="663dc-1103">Assemblies can be loaded into one of three contexts, or can be loaded without context:</span></span>  
  
-   <span data-ttu-id="663dc-1104">読み込みコンテキストに調査して見つかるアセンブリが含まれています。 GAC 内のホスト アセンブリで、ランタイムがホストされている場合または保存、<xref:System.AppDomainSetup.ApplicationBase%2A>と<xref:System.AppDomainSetup.PrivateBinPath%2A>のアプリケーション ドメイン。</span><span class="sxs-lookup"><span data-stu-id="663dc-1104">The load context contains assemblies found by probing: in the GAC, in a host assembly store if the runtime is hosted, or in the <xref:System.AppDomainSetup.ApplicationBase%2A> and <xref:System.AppDomainSetup.PrivateBinPath%2A> of the application domain.</span></span> <span data-ttu-id="663dc-1105"><xref:System.Reflection.Assembly.Load%2A> メソッドのほとんどのオーバーロードは、このコンテキストにアセンブリを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="663dc-1105">Most overloads of the <xref:System.Reflection.Assembly.Load%2A> method load assemblies into this context.</span></span>  
  
-   <span data-ttu-id="663dc-1106">読み込み元コンテキストには、ユーザーが調査によって検索されたディレクトリに含まれていないパスを指定したアセンブリが含まれています。</span><span class="sxs-lookup"><span data-stu-id="663dc-1106">The load-from context contains assemblies for which the user provided a path not included in the directories searched by probing.</span></span> <span data-ttu-id="663dc-1107"><xref:System.Reflection.Assembly.LoadFrom%2A>、<xref:System.AppDomain.CreateInstanceFrom%2A>、<xref:System.AppDomain.ExecuteAssembly%2A> は、パスを使用して読み込むメソッドの例です。</span><span class="sxs-lookup"><span data-stu-id="663dc-1107"><xref:System.Reflection.Assembly.LoadFrom%2A>, <xref:System.AppDomain.CreateInstanceFrom%2A>, and <xref:System.AppDomain.ExecuteAssembly%2A> are examples of methods that load by path.</span></span>

    <span data-ttu-id="663dc-1108">場合は、.NET Framework 4 以降の URI `assemblyFile` 、リモートの場所を指定します。 既定では、アセンブリの読み込みが無効になっていると`LoadFrom`メソッドがスローされます、 <xref:System.IO.FileLoadException>。</span><span class="sxs-lookup"><span data-stu-id="663dc-1108">Starting with .NET Framework 4, if the URI of `assemblyFile` specifies a remote location, assembly loading is disabled by default, and the `LoadFrom` method throws a <xref:System.IO.FileLoadException>.</span></span> <span data-ttu-id="663dc-1109">リモートの場所から読み込まれたコードの実行を有効にするを使用できます、 [ `<loadFromRemoteSources>` ](~/docs/framework/configure-apps/file-schema/runtime/loadfromremotesources-element.md)構成要素。</span><span class="sxs-lookup"><span data-stu-id="663dc-1109">To enable execution of code loaded from remote locations, you can use the [`<loadFromRemoteSources>`](~/docs/framework/configure-apps/file-schema/runtime/loadfromremotesources-element.md) configuration element.</span></span>    
  
-   <span data-ttu-id="663dc-1110">リフレクション専用コンテキストに読み込まれたアセンブリが含まれています、<xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A>と<xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A>メソッドはこれらのコードのコンテキストを実行することはできません。</span><span class="sxs-lookup"><span data-stu-id="663dc-1110">The reflection-only context contains assemblies loaded with the <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A> and <xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A> methods; code in these contexts cannot be executed.</span></span>  
  
-   <span data-ttu-id="663dc-1111">ユーザーは、生成されたか、アセンブリが見つかりましたでない任意のコンテキスト。</span><span class="sxs-lookup"><span data-stu-id="663dc-1111">If the user generated or found the assembly, it is not in any context.</span></span> <span data-ttu-id="663dc-1112">これのオーバー ロードを使用して読み込まれたアセンブリに適用されます、<xref:System.Reflection.Assembly.Load%2A>アセンブリを含むバイト配列を指定し、一時動的アセンブリがリフレクションを使用して作成するには、出力をディスクに保存せずメソッドをします。</span><span class="sxs-lookup"><span data-stu-id="663dc-1112">This applies to assemblies loaded using overloads of the <xref:System.Reflection.Assembly.Load%2A> method that specify a byte array containing an assembly, and to transient dynamic assemblies created with reflection emit and not saved to disk.</span></span>  
  
 <span data-ttu-id="663dc-1113">読み込み元コンテキストには、調査には含まれないパスから読み込まれるアセンブリができ、そのパスを見つけ、パス情報がコンテキストによって保持されるため、読み込まれた依存関係ができます。</span><span class="sxs-lookup"><span data-stu-id="663dc-1113">The load-from context allows an assembly to be loaded from a path not included in probing, and yet allows dependencies on that path to be found and loaded because the path information is maintained by the context.</span></span>  
  
 <span data-ttu-id="663dc-1114"><xref:System.Reflection.Assembly.LoadFrom%2A>メソッドには、次の欠点です。</span><span class="sxs-lookup"><span data-stu-id="663dc-1114">The <xref:System.Reflection.Assembly.LoadFrom%2A> method has the following disadvantages.</span></span> <span data-ttu-id="663dc-1115">代わりに <xref:System.Reflection.Assembly.Load%2A> を使用することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="663dc-1115">Consider using <xref:System.Reflection.Assembly.Load%2A> instead.</span></span>  
  
-   <span data-ttu-id="663dc-1116">同じ ID を持つアセンブリが既に読み込まれている場合、<xref:System.Reflection.Assembly.LoadFrom%2A> は、別のパスが指定されている場合であっても、読み込み済みのアセンブリを返します。</span><span class="sxs-lookup"><span data-stu-id="663dc-1116">If an assembly with the same identity is already loaded, <xref:System.Reflection.Assembly.LoadFrom%2A> returns the loaded assembly even if a different path was specified.</span></span>  
  
-   <span data-ttu-id="663dc-1117"><xref:System.Reflection.Assembly.LoadFrom%2A> を使用してアセンブリを読み込んだ後、同じアセンブリを、読み込みコンテキストにあるアセンブリが表示名で読み込もうとすると、読み込みが失敗します。</span><span class="sxs-lookup"><span data-stu-id="663dc-1117">If an assembly is loaded with <xref:System.Reflection.Assembly.LoadFrom%2A>, and later an assembly in the load context attempts to load the same assembly by display name, the load attempt fails.</span></span> <span data-ttu-id="663dc-1118">この問題は、アセンブリが逆シリアル化されるときに発生します。</span><span class="sxs-lookup"><span data-stu-id="663dc-1118">This can occur when an assembly is deserialized.</span></span>  
  
-   <span data-ttu-id="663dc-1119">アセンブリが読み込まれている場合<xref:System.Reflection.Assembly.LoadFrom%2A>、プローブ パスに同じ id が、別の場所でアセンブリが含まれています、 <xref:System.InvalidCastException>、 <xref:System.MissingMethodException>、またはその他の予期しない動作が発生することができます。</span><span class="sxs-lookup"><span data-stu-id="663dc-1119">If an assembly is loaded with <xref:System.Reflection.Assembly.LoadFrom%2A>, and the probing path includes an assembly with the same identity but a different location, an <xref:System.InvalidCastException>, <xref:System.MissingMethodException>, or other unexpected behavior can occur.</span></span>  
  
-   <span data-ttu-id="663dc-1120"><xref:System.Reflection.Assembly.LoadFrom%2A> には、指定したパスに対する <xref:System.Security.Permissions.FileIOPermissionAccess.Read?displayProperty=nameWithType> および <xref:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery?displayProperty=nameWithType>、または <xref:System.Net.WebPermission> が必要です。</span><span class="sxs-lookup"><span data-stu-id="663dc-1120"><xref:System.Reflection.Assembly.LoadFrom%2A> demands <xref:System.Security.Permissions.FileIOPermissionAccess.Read?displayProperty=nameWithType> and <xref:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery?displayProperty=nameWithType>, or <xref:System.Net.WebPermission>, on the specified path.</span></span>  
  
-   <span data-ttu-id="663dc-1121">ネイティブ イメージが存在する場合`assemblyFile`は使用されません。</span><span class="sxs-lookup"><span data-stu-id="663dc-1121">If a native image exists for `assemblyFile`, it is not used.</span></span> <span data-ttu-id="663dc-1122">アセンブリをドメインに中立として読み込まれたにすることはできません。</span><span class="sxs-lookup"><span data-stu-id="663dc-1122">The assembly cannot be loaded as domain neutral.</span></span>  
  
-   <span data-ttu-id="663dc-1123">.NET framework version 1.0 および 1.1 では、ポリシーは適用されません。</span><span class="sxs-lookup"><span data-stu-id="663dc-1123">In the .NET Framework version 1.0 and 1.1, policy is not applied.</span></span>  
  
 <span data-ttu-id="663dc-1124">アセンブリに対して特定のアクセス許可を付与するかどうかは、証拠に基づいて決定されます。</span><span class="sxs-lookup"><span data-stu-id="663dc-1124">Whether certain permissions are granted or not granted to an assembly is based on evidence.</span></span> <span data-ttu-id="663dc-1125">アセンブリとマージのセキュリティ証拠の規則は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="663dc-1125">The rules for assembly and security evidence merging are as follows:</span></span>  
  
-   <span data-ttu-id="663dc-1126">使用すると、<xref:System.Reflection.Assembly.LoadFrom%2A>なしでメソッド<xref:System.Security.Policy.Evidence>パラメーター、アセンブリの表示はローダーが提供する証拠を使用して読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="663dc-1126">When you use a <xref:System.Reflection.Assembly.LoadFrom%2A> method with no <xref:System.Security.Policy.Evidence> parameter, the assembly is loaded with the evidence that the loader supplies.</span></span>  
  
-   <span data-ttu-id="663dc-1127">使用すると、<xref:System.Reflection.Assembly.LoadFrom%2A>メソッドを<xref:System.Security.Policy.Evidence>パラメーターの証拠がマージされます。</span><span class="sxs-lookup"><span data-stu-id="663dc-1127">When you use a <xref:System.Reflection.Assembly.LoadFrom%2A> method with an <xref:System.Security.Policy.Evidence> parameter, pieces of evidence are merged.</span></span> <span data-ttu-id="663dc-1128">引数として指定された証拠、<xref:System.Reflection.Assembly.LoadFrom%2A>メソッドは、ローダーによって提供される証拠の部分を置き換えます。</span><span class="sxs-lookup"><span data-stu-id="663dc-1128">Pieces of evidence supplied as an argument to the <xref:System.Reflection.Assembly.LoadFrom%2A> method supersede pieces of evidence supplied by the loader.</span></span>  
  
-   <span data-ttu-id="663dc-1129">共通言語ランタイムがスローしない場合は、同じアセンブリが異なる証拠を指定に、このメソッドを複数回呼び出す、<xref:System.IO.FileLoadException>異なる証拠仕様の整合性と等しいかどうかを判断できないためです。</span><span class="sxs-lookup"><span data-stu-id="663dc-1129">If you call this method more than once on the same assembly but with a different evidence specified, the common language runtime does not throw a <xref:System.IO.FileLoadException> because the equality and integrity of the different evidence specifications cannot be determined.</span></span> <span data-ttu-id="663dc-1130">最初に成功した証拠は、使用される証拠です。</span><span class="sxs-lookup"><span data-stu-id="663dc-1130">The evidence that first succeeds is the evidence that is used.</span></span>  
  
-   <span data-ttu-id="663dc-1131">使用すると、<xref:System.Reflection.Assembly.LoadFrom%2A>メソッドを`Byte[]`common object file format (COFF) イメージ、証拠を読み込むパラメーターが組み合わされます。</span><span class="sxs-lookup"><span data-stu-id="663dc-1131">When you use a <xref:System.Reflection.Assembly.LoadFrom%2A> method with a `Byte[]` parameter to load a common object file format (COFF) image, evidence is combined.</span></span> <span data-ttu-id="663dc-1132">`Zone`、`Url`と`Site`は呼び出し元のアセンブリから継承されると`Hash`と`StrongName`COFF アセンブリから取得されます。</span><span class="sxs-lookup"><span data-stu-id="663dc-1132">`Zone`, `Url` and `Site` are inherited from the calling assembly, and `Hash` and `StrongName` are taken from the COFF assembly.</span></span>  
  
-   <span data-ttu-id="663dc-1133">使用すると、<xref:System.Reflection.Assembly.LoadFrom%2A>メソッドを`Byte[]`パラメーターと<xref:System.Security.Policy.Evidence>COFF イメージを読み込むには、指定された証拠のみが使用されます。</span><span class="sxs-lookup"><span data-stu-id="663dc-1133">When you use a <xref:System.Reflection.Assembly.LoadFrom%2A> method with a `Byte[]` parameter and <xref:System.Security.Policy.Evidence> to load a COFF image, only the supplied evidence is used.</span></span> <span data-ttu-id="663dc-1134">呼び出し元のアセンブリの証拠と COFF イメージの証拠が無視されます。</span><span class="sxs-lookup"><span data-stu-id="663dc-1134">Evidence of the calling assembly and evidence of the COFF image is ignored.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="663dc-1135"><paramref name="assemblyFile" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="663dc-1135"><paramref name="assemblyFile" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="663dc-1136"><paramref name="assemblyFile" /> が見つからないか、または読み込もうとしているモジュールにファイル名拡張子が指定されていません。</span><span class="sxs-lookup"><span data-stu-id="663dc-1136"><paramref name="assemblyFile" /> is not found, or the module you are trying to load does not specify a filename extension.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="663dc-1137">検出されたファイルを読み込めませんでした。</span><span class="sxs-lookup"><span data-stu-id="663dc-1137">A file that was found could not be loaded.</span></span>  
  
<span data-ttu-id="663dc-1138">または</span><span class="sxs-lookup"><span data-stu-id="663dc-1138">-or-</span></span> 
<span data-ttu-id="663dc-1139"><paramref name="securityEvidence" /> はあいまいではなく、正しくないと判断されました。</span><span class="sxs-lookup"><span data-stu-id="663dc-1139">The <paramref name="securityEvidence" /> is not ambiguous and is determined to be invalid.</span></span>

<span data-ttu-id="663dc-1140">または</span><span class="sxs-lookup"><span data-stu-id="663dc-1140">-or-</span></span>

<span data-ttu-id="663dc-1141">リモート アセンブリ内でコードを実行する機能が無効になっています。</span><span class="sxs-lookup"><span data-stu-id="663dc-1141">The ability to execute code in remote assemblies is disabled.</span></span> <span data-ttu-id="663dc-1142"><see href="https://docs.microsoft.com/dotnet/framework/configure-apps/file-schema/runtime/loadfromremotesources-element">&lt;loadFromRemoteSources&gt;</see> を参照してください。</span><span class="sxs-lookup"><span data-stu-id="663dc-1142">See <see href="https://docs.microsoft.com/dotnet/framework/configure-apps/file-schema/runtime/loadfromremotesources-element">&lt;loadFromRemoteSources&gt;</see>.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="663dc-1143"><paramref name="assemblyFile" /> は有効なアセンブリではありません (64 ビット プロセスの 32 ビット アセンブリなど)。</span><span class="sxs-lookup"><span data-stu-id="663dc-1143"><paramref name="assemblyFile" /> is not a valid assembly; for example, a 32-bit assembly in a 64-bit process.</span></span> <span data-ttu-id="663dc-1144">詳細については、例外に関するトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="663dc-1144">See the exception topic for more information.</span></span>  
  
<span data-ttu-id="663dc-1145">または</span><span class="sxs-lookup"><span data-stu-id="663dc-1145">-or-</span></span> 
<span data-ttu-id="663dc-1146">共通言語ランタイムのバージョン 2.0 以降が現在読み込まれています。<paramref name="assemblyFile" /> は、より新しいバージョンでコンパイルされています。</span><span class="sxs-lookup"><span data-stu-id="663dc-1146">Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyFile" /> was compiled with a later version.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="663dc-1147">"file://" で始まっていないコードベースが、必要な <see cref="T:System.Net.WebPermission" /> なしで指定されました。</span><span class="sxs-lookup"><span data-stu-id="663dc-1147">A codebase that does not start with "file://" was specified without the required <see cref="T:System.Net.WebPermission" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="663dc-1148"><paramref name="assemblyFile" /> パラメーターが空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="663dc-1148">The <paramref name="assemblyFile" /> parameter is an empty string ("").</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="663dc-1149">アセンブリ名がシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="663dc-1149">The assembly name exceeds the system-defined maximum length.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="663dc-1150">証拠とアセンブリの読み込み。</span><span class="sxs-lookup"><span data-stu-id="663dc-1150">to load an assembly with evidence.</span></span> <span data-ttu-id="663dc-1151">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span><span class="sxs-lookup"><span data-stu-id="663dc-1151">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="663dc-1152">file:// で始まる URI を読み取る。</span><span class="sxs-lookup"><span data-stu-id="663dc-1152">for reading a URI that begins with "file://".</span></span> <span data-ttu-id="663dc-1153">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="663dc-1153">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
        <permission cref="T:System.Net.WebPermission"><span data-ttu-id="663dc-1154">file:// で始まらないする URI を読み取る。</span><span class="sxs-lookup"><span data-stu-id="663dc-1154">for reading a URI that does not begin with "file://".</span></span></permission>
        <altmember cref="T:System.Security.Policy.Evidence" />
      </Docs>
    </Member>
    <Member MemberName="LoadFrom">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly LoadFrom (string assemblyFile, byte[] hashValue, System.Configuration.Assemblies.AssemblyHashAlgorithm hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly LoadFrom(string assemblyFile, unsigned int8[] hashValue, valuetype System.Configuration.Assemblies.AssemblyHashAlgorithm hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.LoadFrom(System.String,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LoadFrom (assemblyFile As String, hashValue As Byte(), hashAlgorithm As AssemblyHashAlgorithm) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ LoadFrom(System::String ^ assemblyFile, cli::array &lt;System::Byte&gt; ^ hashValue, System::Configuration::Assemblies::AssemblyHashAlgorithm hashAlgorithm);" />
      <MemberSignature Language="F#" Value="static member LoadFrom : string * byte[] * System.Configuration.Assemblies.AssemblyHashAlgorithm -&gt; System.Reflection.Assembly" Usage="System.Reflection.Assembly.LoadFrom (assemblyFile, hashValue, hashAlgorithm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="hashValue" Type="System.Byte[]" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="hashAlgorithm" Type="System.Configuration.Assemblies.AssemblyHashAlgorithm" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="assemblyFile"><span data-ttu-id="663dc-1155">アセンブリのマニフェストを格納しているファイルの名前またはパス。</span><span class="sxs-lookup"><span data-stu-id="663dc-1155">The name or path of the file that contains the manifest of the assembly.</span></span></param>
        <param name="hashValue"><span data-ttu-id="663dc-1156">計算されたハッシュ コードの値。</span><span class="sxs-lookup"><span data-stu-id="663dc-1156">The value of the computed hash code.</span></span></param>
        <param name="hashAlgorithm"><span data-ttu-id="663dc-1157">ファイルのハッシュ処理および厳密な名前の生成に使用されるハッシュ アルゴリズム。</span><span class="sxs-lookup"><span data-stu-id="663dc-1157">The hash algorithm used for hashing files and for generating the strong name.</span></span></param>
        <summary><span data-ttu-id="663dc-1158">ファイル名またはパス、ハッシュ値、およびハッシュ アルゴリズムを指定してアセンブリを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="663dc-1158">Loads an assembly given its file name or path, hash value, and hash algorithm.</span></span></summary>
        <returns><span data-ttu-id="663dc-1159">読み込まれるアセンブリ。</span><span class="sxs-lookup"><span data-stu-id="663dc-1159">The loaded assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663dc-1160">`assemblyFile`パラメーターは、エスケープ文字のない URI に参照する必要があります。</span><span class="sxs-lookup"><span data-stu-id="663dc-1160">The `assemblyFile` parameter must refer to a URI without escape characters.</span></span> <span data-ttu-id="663dc-1161">このメソッドは、URI 内のすべての無効な文字のエスケープ文字を提供します。</span><span class="sxs-lookup"><span data-stu-id="663dc-1161">This method supplies escape characters for all invalid characters in the URI.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="663dc-1162">ファイル転送プロトコル (FTP) はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="663dc-1162">File transfer protocol (FTP) is not supported.</span></span> <span data-ttu-id="663dc-1163">URI が指定されている場合`assemblyFile`FTP アドレスは、アセンブリが読み込まれていません。</span><span class="sxs-lookup"><span data-stu-id="663dc-1163">If the URI supplied for `assemblyFile` is an FTP address, the assembly is not loaded.</span></span> <span data-ttu-id="663dc-1164">例外をスローすることはありません。</span><span class="sxs-lookup"><span data-stu-id="663dc-1164">No exception is thrown.</span></span>  
  
 <span data-ttu-id="663dc-1165">`assemblyFile` 絶対パスまたは現在のディレクトリに相対する可能性があります、アセンブリは、呼び出し元のドメインに読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="663dc-1165">`assemblyFile` may be absolute or relative to the current directory, and the assembly is loaded into the domain of the caller.</span></span>  
  
 <span data-ttu-id="663dc-1166">アセンブリは、3 つのコンテキストのいずれかに読み込むことができるまたは、コンテキストなしで読み込むことができます。</span><span class="sxs-lookup"><span data-stu-id="663dc-1166">Assemblies can be loaded into one of three contexts, or can be loaded without context:</span></span>  
  
-   <span data-ttu-id="663dc-1167">読み込みコンテキストに調査して見つかるアセンブリが含まれています: グローバル アセンブリ キャッシュ内のホスト アセンブリで、ランタイムがホストされている場合または保存、<xref:System.AppDomainSetup.ApplicationBase%2A>と<xref:System.AppDomainSetup.PrivateBinPath%2A>のアプリケーション ドメイン。</span><span class="sxs-lookup"><span data-stu-id="663dc-1167">The load context contains assemblies found by probing: in the global assembly cache, in a host assembly store if the runtime is hosted, or in the <xref:System.AppDomainSetup.ApplicationBase%2A> and <xref:System.AppDomainSetup.PrivateBinPath%2A> of the application domain.</span></span> <span data-ttu-id="663dc-1168"><xref:System.Reflection.Assembly.Load%2A> メソッドのほとんどのオーバーロードは、このコンテキストにアセンブリを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="663dc-1168">Most overloads of the <xref:System.Reflection.Assembly.Load%2A> method load assemblies into this context.</span></span>  
  
-   <span data-ttu-id="663dc-1169">読み込み元コンテキストには、ユーザーでは、プローブには含まれていないパスを指定したアセンブリが含まれています。</span><span class="sxs-lookup"><span data-stu-id="663dc-1169">The load-from context contains assemblies for which the user provided a path that is not included in probing.</span></span> <span data-ttu-id="663dc-1170"><xref:System.Reflection.Assembly.LoadFrom%2A>、<xref:System.AppDomain.CreateInstanceFrom%2A>、<xref:System.AppDomain.ExecuteAssembly%2A> は、パスを使用して読み込むメソッドの例です。</span><span class="sxs-lookup"><span data-stu-id="663dc-1170"><xref:System.Reflection.Assembly.LoadFrom%2A>, <xref:System.AppDomain.CreateInstanceFrom%2A>, and <xref:System.AppDomain.ExecuteAssembly%2A> are examples of methods that load by path.</span></span>  

    <span data-ttu-id="663dc-1171">場合は、.NET Framework 4 以降の URI `assemblyFile` 、リモートの場所を指定します。 既定では、アセンブリの読み込みが無効になっていると`LoadFrom`メソッドがスローされます、 <xref:System.IO.FileLoadException>。</span><span class="sxs-lookup"><span data-stu-id="663dc-1171">Starting with .NET Framework 4, if the URI of `assemblyFile` specifies a remote location, assembly loading is disabled by default, and the `LoadFrom` method throws a <xref:System.IO.FileLoadException>.</span></span> <span data-ttu-id="663dc-1172">リモートの場所から読み込まれたコードの実行を有効にするを使用できます、 [ `<loadFromRemoteSources>` ](~/docs/framework/configure-apps/file-schema/runtime/loadfromremotesources-element.md)構成要素。</span><span class="sxs-lookup"><span data-stu-id="663dc-1172">To enable execution of code loaded from remote locations, you can use the [`<loadFromRemoteSources>`](~/docs/framework/configure-apps/file-schema/runtime/loadfromremotesources-element.md) configuration element.</span></span>    
  
-   <span data-ttu-id="663dc-1173">リフレクション専用コンテキストに読み込まれたアセンブリが含まれています、<xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A>と<xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A>メソッドはこれらのコードのコンテキストを実行することはできません。</span><span class="sxs-lookup"><span data-stu-id="663dc-1173">The reflection-only context contains assemblies loaded with the <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A> and <xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A> methods; code in these contexts cannot be executed.</span></span>  
  
-   <span data-ttu-id="663dc-1174">ユーザーは、生成されたか、アセンブリが見つかりましたでない任意のコンテキスト。</span><span class="sxs-lookup"><span data-stu-id="663dc-1174">If the user generated or found the assembly, it is not in any context.</span></span> <span data-ttu-id="663dc-1175">これのオーバー ロードを使用して読み込まれたアセンブリに適用されます、<xref:System.Reflection.Assembly.Load%2A>アセンブリを含むバイト配列を指定し、一時動的アセンブリがリフレクションを使用して作成するには、出力をディスクに保存せずメソッドをします。</span><span class="sxs-lookup"><span data-stu-id="663dc-1175">This applies to assemblies loaded using overloads of the <xref:System.Reflection.Assembly.Load%2A> method that specify a byte array containing an assembly, and to transient dynamic assemblies created with reflection emit and not saved to disk.</span></span>  
  
 <span data-ttu-id="663dc-1176">読み込み元コンテキストには、調査に含まれていないパスから読み込まれるアセンブリができ、そのパスを見つけ、パス情報がコンテキストによって保持されるため、読み込まれた依存関係ができます。</span><span class="sxs-lookup"><span data-stu-id="663dc-1176">The load-from context allows an assembly to be loaded from a path that is not included in probing, and yet allows dependencies on that path to be found and loaded because the path information is maintained by the context.</span></span>  
  
 <span data-ttu-id="663dc-1177"><xref:System.Reflection.Assembly.LoadFrom%2A>メソッドには、次の欠点です。</span><span class="sxs-lookup"><span data-stu-id="663dc-1177">The <xref:System.Reflection.Assembly.LoadFrom%2A> method has the following disadvantages.</span></span> <span data-ttu-id="663dc-1178">代わりに <xref:System.Reflection.Assembly.Load%2A> を使用することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="663dc-1178">Consider using <xref:System.Reflection.Assembly.Load%2A> instead.</span></span>  
  
-   <span data-ttu-id="663dc-1179">同じ ID を持つアセンブリが既に読み込まれている場合、<xref:System.Reflection.Assembly.LoadFrom%2A> は、別のパスが指定されている場合であっても、読み込み済みのアセンブリを返します。</span><span class="sxs-lookup"><span data-stu-id="663dc-1179">If an assembly with the same identity is already loaded, <xref:System.Reflection.Assembly.LoadFrom%2A> returns the loaded assembly even if a different path was specified.</span></span>  
  
-   <span data-ttu-id="663dc-1180"><xref:System.Reflection.Assembly.LoadFrom%2A> を使用してアセンブリを読み込んだ後、同じアセンブリを、読み込みコンテキストにあるアセンブリが表示名で読み込もうとすると、読み込みが失敗します。</span><span class="sxs-lookup"><span data-stu-id="663dc-1180">If an assembly is loaded with <xref:System.Reflection.Assembly.LoadFrom%2A>, and later an assembly in the load context attempts to load the same assembly by display name, the load attempt fails.</span></span> <span data-ttu-id="663dc-1181">この問題は、アセンブリが逆シリアル化されるときに発生します。</span><span class="sxs-lookup"><span data-stu-id="663dc-1181">This can occur when an assembly is deserialized.</span></span>  
  
-   <span data-ttu-id="663dc-1182">アセンブリが読み込まれている場合<xref:System.Reflection.Assembly.LoadFrom%2A>、プローブ パスに同じ id が、別の場所でアセンブリが含まれています、 <xref:System.InvalidCastException>、 <xref:System.MissingMethodException>、またはその他の予期しない動作が発生することができます。</span><span class="sxs-lookup"><span data-stu-id="663dc-1182">If an assembly is loaded with <xref:System.Reflection.Assembly.LoadFrom%2A>, and the probing path includes an assembly with the same identity but a different location, an <xref:System.InvalidCastException>, <xref:System.MissingMethodException>, or other unexpected behavior can occur.</span></span>  
  
-   <span data-ttu-id="663dc-1183"><xref:System.Reflection.Assembly.LoadFrom%2A> には、指定したパスに対する <xref:System.Security.Permissions.FileIOPermissionAccess.Read?displayProperty=nameWithType> および <xref:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery?displayProperty=nameWithType>、または <xref:System.Net.WebPermission> が必要です。</span><span class="sxs-lookup"><span data-stu-id="663dc-1183"><xref:System.Reflection.Assembly.LoadFrom%2A> demands <xref:System.Security.Permissions.FileIOPermissionAccess.Read?displayProperty=nameWithType> and <xref:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery?displayProperty=nameWithType>, or <xref:System.Net.WebPermission>, on the specified path.</span></span>  
  
-   <span data-ttu-id="663dc-1184">ネイティブ イメージが存在する場合`assemblyFile`は使用されません。</span><span class="sxs-lookup"><span data-stu-id="663dc-1184">If a native image exists for `assemblyFile`, it is not used.</span></span> <span data-ttu-id="663dc-1185">アセンブリをドメイン中立として読み込むことはできません。</span><span class="sxs-lookup"><span data-stu-id="663dc-1185">The assembly cannot be loaded as domain-neutral.</span></span>  
  
 <span data-ttu-id="663dc-1186">アセンブリは、ローダーが提供する証拠を使用して読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="663dc-1186">The assembly is loaded with the evidence that the loader supplies.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="663dc-1187"><paramref name="assemblyFile" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="663dc-1187"><paramref name="assemblyFile" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="663dc-1188"><paramref name="assemblyFile" /> が見つからないか、読み込もうとしているモジュールにファイル名拡張子が指定されていません。</span><span class="sxs-lookup"><span data-stu-id="663dc-1188"><paramref name="assemblyFile" /> is not found, or the module you are trying to load does not specify a file name extension.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="663dc-1189">検出されたファイルを読み込めませんでした。</span><span class="sxs-lookup"><span data-stu-id="663dc-1189">A file that was found could not be loaded.</span></span>

<span data-ttu-id="663dc-1190">または</span><span class="sxs-lookup"><span data-stu-id="663dc-1190">-or-</span></span>

<span data-ttu-id="663dc-1191">リモート アセンブリ内でコードを実行する機能が無効になっています。</span><span class="sxs-lookup"><span data-stu-id="663dc-1191">The ability to execute code in remote assemblies is disabled.</span></span> <span data-ttu-id="663dc-1192"><see href="https://docs.microsoft.com/dotnet/framework/configure-apps/file-schema/runtime/loadfromremotesources-element">&lt;loadFromRemoteSources&gt;</see> を参照してください。</span><span class="sxs-lookup"><span data-stu-id="663dc-1192">See <see href="https://docs.microsoft.com/dotnet/framework/configure-apps/file-schema/runtime/loadfromremotesources-element">&lt;loadFromRemoteSources&gt;</see>.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="663dc-1193"><paramref name="assemblyFile" /> は有効なアセンブリではありません (64 ビット プロセスの 32 ビット アセンブリなど)。</span><span class="sxs-lookup"><span data-stu-id="663dc-1193"><paramref name="assemblyFile" /> is not a valid assembly; for example, a 32-bit assembly in a 64-bit process.</span></span> <span data-ttu-id="663dc-1194">詳細については、例外に関するトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="663dc-1194">See the exception topic for more information.</span></span>  
  
<span data-ttu-id="663dc-1195">または</span><span class="sxs-lookup"><span data-stu-id="663dc-1195">-or-</span></span> 
 <span data-ttu-id="663dc-1196">現在読み込まれているバージョンよりも新しいバージョンの共通言語ランタイムで、<paramref name="assemblyFile" /> がコンパイルされました。</span><span class="sxs-lookup"><span data-stu-id="663dc-1196"><paramref name="assemblyFile" /> was compiled with a later version of the common language runtime than the version that is currently loaded.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="663dc-1197">"file://" で始まっていないコードベースが、必要な <see cref="T:System.Net.WebPermission" /> なしで指定されました。</span><span class="sxs-lookup"><span data-stu-id="663dc-1197">A codebase that does not start with "file://" was specified without the required <see cref="T:System.Net.WebPermission" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="663dc-1198"><paramref name="assemblyFile" /> パラメーターが空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="663dc-1198">The <paramref name="assemblyFile" /> parameter is an empty string ("").</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="663dc-1199">アセンブリ名がシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="663dc-1199">The assembly name exceeds the system-defined maximum length.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="663dc-1200">証拠とアセンブリの読み込み。</span><span class="sxs-lookup"><span data-stu-id="663dc-1200">to load an assembly with evidence.</span></span> <span data-ttu-id="663dc-1201">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span><span class="sxs-lookup"><span data-stu-id="663dc-1201">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="663dc-1202">file:// で始まる URI を読み取る。</span><span class="sxs-lookup"><span data-stu-id="663dc-1202">for reading a URI that begins with "file://".</span></span> <span data-ttu-id="663dc-1203">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="663dc-1203">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
        <permission cref="T:System.Net.WebPermission"><span data-ttu-id="663dc-1204">file:// で始まらないする URI を読み取る。</span><span class="sxs-lookup"><span data-stu-id="663dc-1204">for reading a URI that does not begin with "file://".</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="LoadFrom">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly LoadFrom (string assemblyFile, System.Security.Policy.Evidence securityEvidence, byte[] hashValue, System.Configuration.Assemblies.AssemblyHashAlgorithm hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly LoadFrom(string assemblyFile, class System.Security.Policy.Evidence securityEvidence, unsigned int8[] hashValue, valuetype System.Configuration.Assemblies.AssemblyHashAlgorithm hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.LoadFrom(System.String,System.Security.Policy.Evidence,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LoadFrom (assemblyFile As String, securityEvidence As Evidence, hashValue As Byte(), hashAlgorithm As AssemblyHashAlgorithm) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ LoadFrom(System::String ^ assemblyFile, System::Security::Policy::Evidence ^ securityEvidence, cli::array &lt;System::Byte&gt; ^ hashValue, System::Configuration::Assemblies::AssemblyHashAlgorithm hashAlgorithm);" />
      <MemberSignature Language="F#" Value="static member LoadFrom : string * System.Security.Policy.Evidence * byte[] * System.Configuration.Assemblies.AssemblyHashAlgorithm -&gt; System.Reflection.Assembly" Usage="System.Reflection.Assembly.LoadFrom (assemblyFile, securityEvidence, hashValue, hashAlgorithm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("This method is obsolete and will be removed in a future release of the .NET Framework. Please use an overload of LoadFrom which does not take an Evidence parameter. See http://go.microsoft.com/fwlink/?LinkID=155570 for more information.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="securityEvidence" Type="System.Security.Policy.Evidence" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="hashValue" Type="System.Byte[]" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="hashAlgorithm" Type="System.Configuration.Assemblies.AssemblyHashAlgorithm" Index="3" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="assemblyFile"><span data-ttu-id="663dc-1205">アセンブリのマニフェストを格納しているファイルの名前またはパス。</span><span class="sxs-lookup"><span data-stu-id="663dc-1205">The name or path of the file that contains the manifest of the assembly.</span></span></param>
        <param name="securityEvidence"><span data-ttu-id="663dc-1206">アセンブリを読み込むために必要な証拠。</span><span class="sxs-lookup"><span data-stu-id="663dc-1206">Evidence for loading the assembly.</span></span></param>
        <param name="hashValue"><span data-ttu-id="663dc-1207">計算されたハッシュ コードの値。</span><span class="sxs-lookup"><span data-stu-id="663dc-1207">The value of the computed hash code.</span></span></param>
        <param name="hashAlgorithm"><span data-ttu-id="663dc-1208">ファイルのハッシュ処理および厳密な名前の生成に使用されるハッシュ アルゴリズム。</span><span class="sxs-lookup"><span data-stu-id="663dc-1208">The hash algorithm used for hashing files and for generating the strong name.</span></span></param>
        <summary><span data-ttu-id="663dc-1209">ファイル名またはパス、セキュリティ証拠、ハッシュ値、およびハッシュ アルゴリズムを指定してアセンブリを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="663dc-1209">Loads an assembly given its file name or path, security evidence, hash value, and hash algorithm.</span></span></summary>
        <returns><span data-ttu-id="663dc-1210">読み込まれるアセンブリ。</span><span class="sxs-lookup"><span data-stu-id="663dc-1210">The loaded assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663dc-1211">`assemblyFile`パラメーターは、エスケープ文字のない URI に参照する必要があります。</span><span class="sxs-lookup"><span data-stu-id="663dc-1211">The `assemblyFile` parameter must refer to a URI without escape characters.</span></span> <span data-ttu-id="663dc-1212">このメソッドは、URI 内のすべての無効な文字のエスケープ文字を提供します。</span><span class="sxs-lookup"><span data-stu-id="663dc-1212">This method supplies escape characters for all invalid characters in the URI.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="663dc-1213">ファイル転送プロトコル (FTP) はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="663dc-1213">File transfer protocol (FTP) is not supported.</span></span> <span data-ttu-id="663dc-1214">URI が指定されている場合`assemblyFile`FTP アドレスは、アセンブリが読み込まれていません。</span><span class="sxs-lookup"><span data-stu-id="663dc-1214">If the URI supplied for `assemblyFile` is an FTP address, the assembly is not loaded.</span></span> <span data-ttu-id="663dc-1215">例外をスローすることはありません。</span><span class="sxs-lookup"><span data-stu-id="663dc-1215">No exception is thrown.</span></span>  
  
 <span data-ttu-id="663dc-1216">`assemblyFile` 絶対パスまたは現在のディレクトリに相対する可能性があります、アセンブリは、呼び出し元のドメインに読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="663dc-1216">`assemblyFile` may be absolute or relative to the current directory, and the assembly is loaded into the domain of the caller.</span></span>  
  
 <span data-ttu-id="663dc-1217">アセンブリは、3 つのコンテキストのいずれかに読み込むことができるまたは、コンテキストなしで読み込むことができます。</span><span class="sxs-lookup"><span data-stu-id="663dc-1217">Assemblies can be loaded into one of three contexts, or can be loaded without context:</span></span>  
  
-   <span data-ttu-id="663dc-1218">読み込みコンテキストに調査して見つかるアセンブリが含まれています。 GAC 内のホスト アセンブリで、ランタイムがホストされている場合または保存、<xref:System.AppDomainSetup.ApplicationBase%2A>と<xref:System.AppDomainSetup.PrivateBinPath%2A>のアプリケーション ドメイン。</span><span class="sxs-lookup"><span data-stu-id="663dc-1218">The load context contains assemblies found by probing: in the GAC, in a host assembly store if the runtime is hosted, or in the <xref:System.AppDomainSetup.ApplicationBase%2A> and <xref:System.AppDomainSetup.PrivateBinPath%2A> of the application domain.</span></span> <span data-ttu-id="663dc-1219"><xref:System.Reflection.Assembly.Load%2A> メソッドのほとんどのオーバーロードは、このコンテキストにアセンブリを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="663dc-1219">Most overloads of the <xref:System.Reflection.Assembly.Load%2A> method load assemblies into this context.</span></span>  
  
-   <span data-ttu-id="663dc-1220">読み込み元コンテキストには、ユーザーが調査によって検索されたディレクトリに含まれていないパスを指定したアセンブリが含まれています。</span><span class="sxs-lookup"><span data-stu-id="663dc-1220">The load-from context contains assemblies for which the user provided a path not included in the directories searched by probing.</span></span> <span data-ttu-id="663dc-1221"><xref:System.Reflection.Assembly.LoadFrom%2A>、<xref:System.AppDomain.CreateInstanceFrom%2A>、<xref:System.AppDomain.ExecuteAssembly%2A> は、パスを使用して読み込むメソッドの例です。</span><span class="sxs-lookup"><span data-stu-id="663dc-1221"><xref:System.Reflection.Assembly.LoadFrom%2A>, <xref:System.AppDomain.CreateInstanceFrom%2A>, and <xref:System.AppDomain.ExecuteAssembly%2A> are examples of methods that load by path.</span></span>  

    <span data-ttu-id="663dc-1222">場合は、.NET Framework 4 以降の URI `assemblyFile` 、リモートの場所を指定します。 既定では、アセンブリの読み込みが無効になっていると`LoadFrom`メソッドがスローされます、 <xref:System.IO.FileLoadException>。</span><span class="sxs-lookup"><span data-stu-id="663dc-1222">Starting with .NET Framework 4, if the URI of `assemblyFile` specifies a remote location, assembly loading is disabled by default, and the `LoadFrom` method throws a <xref:System.IO.FileLoadException>.</span></span> <span data-ttu-id="663dc-1223">リモートの場所から読み込まれたコードの実行を有効にするを使用できます、 [ `<loadFromRemoteSources>` ](~/docs/framework/configure-apps/file-schema/runtime/loadfromremotesources-element.md)構成要素。</span><span class="sxs-lookup"><span data-stu-id="663dc-1223">To enable execution of code loaded from remote locations, you can use the [`<loadFromRemoteSources>`](~/docs/framework/configure-apps/file-schema/runtime/loadfromremotesources-element.md) configuration element.</span></span>    
  
-   <span data-ttu-id="663dc-1224">リフレクション専用コンテキストに読み込まれたアセンブリが含まれています、<xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A>と<xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A>メソッドはこれらのコードのコンテキストを実行することはできません。</span><span class="sxs-lookup"><span data-stu-id="663dc-1224">The reflection-only context contains assemblies loaded with the <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A> and <xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A> methods; code in these contexts cannot be executed.</span></span>  
  
-   <span data-ttu-id="663dc-1225">ユーザーは、生成されたか、アセンブリが見つかりましたでない任意のコンテキスト。</span><span class="sxs-lookup"><span data-stu-id="663dc-1225">If the user generated or found the assembly, it is not in any context.</span></span> <span data-ttu-id="663dc-1226">これのオーバー ロードを使用して読み込まれたアセンブリに適用されます、<xref:System.Reflection.Assembly.Load%2A>アセンブリを含むバイト配列を指定し、一時動的アセンブリがリフレクションを使用して作成するには、出力をディスクに保存せずメソッドをします。</span><span class="sxs-lookup"><span data-stu-id="663dc-1226">This applies to assemblies loaded using overloads of the <xref:System.Reflection.Assembly.Load%2A> method that specify a byte array containing an assembly, and to transient dynamic assemblies created with reflection emit and not saved to disk.</span></span>  
  
 <span data-ttu-id="663dc-1227">読み込み元コンテキストには、調査には含まれないパスから読み込まれるアセンブリができ、そのパスを見つけ、パス情報がコンテキストによって保持されるため、読み込まれた依存関係ができます。</span><span class="sxs-lookup"><span data-stu-id="663dc-1227">The load-from context allows an assembly to be loaded from a path not included in probing, and yet allows dependencies on that path to be found and loaded because the path information is maintained by the context.</span></span>  
  
 <span data-ttu-id="663dc-1228"><xref:System.Reflection.Assembly.LoadFrom%2A>メソッドには、次の欠点です。</span><span class="sxs-lookup"><span data-stu-id="663dc-1228">The <xref:System.Reflection.Assembly.LoadFrom%2A> method has the following disadvantages.</span></span> <span data-ttu-id="663dc-1229">代わりに <xref:System.Reflection.Assembly.Load%2A> を使用することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="663dc-1229">Consider using <xref:System.Reflection.Assembly.Load%2A> instead.</span></span>  
  
-   <span data-ttu-id="663dc-1230">同じ ID を持つアセンブリが既に読み込まれている場合、<xref:System.Reflection.Assembly.LoadFrom%2A> は、別のパスが指定されている場合であっても、読み込み済みのアセンブリを返します。</span><span class="sxs-lookup"><span data-stu-id="663dc-1230">If an assembly with the same identity is already loaded, <xref:System.Reflection.Assembly.LoadFrom%2A> returns the loaded assembly even if a different path was specified.</span></span>  
  
-   <span data-ttu-id="663dc-1231"><xref:System.Reflection.Assembly.LoadFrom%2A> を使用してアセンブリを読み込んだ後、同じアセンブリを、読み込みコンテキストにあるアセンブリが表示名で読み込もうとすると、読み込みが失敗します。</span><span class="sxs-lookup"><span data-stu-id="663dc-1231">If an assembly is loaded with <xref:System.Reflection.Assembly.LoadFrom%2A>, and later an assembly in the load context attempts to load the same assembly by display name, the load attempt fails.</span></span> <span data-ttu-id="663dc-1232">この問題は、アセンブリが逆シリアル化されるときに発生します。</span><span class="sxs-lookup"><span data-stu-id="663dc-1232">This can occur when an assembly is deserialized.</span></span>  
  
-   <span data-ttu-id="663dc-1233">アセンブリが読み込まれている場合<xref:System.Reflection.Assembly.LoadFrom%2A>、プローブ パスに同じ id が、別の場所でアセンブリが含まれています、 <xref:System.InvalidCastException>、 <xref:System.MissingMethodException>、またはその他の予期しない動作が発生することができます。</span><span class="sxs-lookup"><span data-stu-id="663dc-1233">If an assembly is loaded with <xref:System.Reflection.Assembly.LoadFrom%2A>, and the probing path includes an assembly with the same identity but a different location, an <xref:System.InvalidCastException>, <xref:System.MissingMethodException>, or other unexpected behavior can occur.</span></span>  
  
-   <span data-ttu-id="663dc-1234"><xref:System.Reflection.Assembly.LoadFrom%2A> には、指定したパスに対する <xref:System.Security.Permissions.FileIOPermissionAccess.Read?displayProperty=nameWithType> および <xref:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery?displayProperty=nameWithType>、または <xref:System.Net.WebPermission> が必要です。</span><span class="sxs-lookup"><span data-stu-id="663dc-1234"><xref:System.Reflection.Assembly.LoadFrom%2A> demands <xref:System.Security.Permissions.FileIOPermissionAccess.Read?displayProperty=nameWithType> and <xref:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery?displayProperty=nameWithType>, or <xref:System.Net.WebPermission>, on the specified path.</span></span>  
  
-   <span data-ttu-id="663dc-1235">ネイティブ イメージが存在する場合`assemblyFile`は使用されません。</span><span class="sxs-lookup"><span data-stu-id="663dc-1235">If a native image exists for `assemblyFile`, it is not used.</span></span> <span data-ttu-id="663dc-1236">アセンブリをドメインに中立として読み込まれたにすることはできません。</span><span class="sxs-lookup"><span data-stu-id="663dc-1236">The assembly cannot be loaded as domain neutral.</span></span>  
  
-   <span data-ttu-id="663dc-1237">.NET framework version 1.0 および 1.1 では、ポリシーは適用されません。</span><span class="sxs-lookup"><span data-stu-id="663dc-1237">In the .NET Framework version 1.0 and 1.1, policy is not applied.</span></span>  
  
 <span data-ttu-id="663dc-1238">アセンブリに対して特定のアクセス許可を付与するかどうかは、証拠に基づいて決定されます。</span><span class="sxs-lookup"><span data-stu-id="663dc-1238">Whether certain permissions are granted or not granted to an assembly is based on evidence.</span></span> <span data-ttu-id="663dc-1239">アセンブリとマージのセキュリティ証拠の規則は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="663dc-1239">The rules for assembly and security evidence merging are as follows:</span></span>  
  
-   <span data-ttu-id="663dc-1240">使用すると、<xref:System.Reflection.Assembly.LoadFrom%2A>なしでメソッド<xref:System.Security.Policy.Evidence>パラメーター、アセンブリの表示はローダーが提供する証拠を使用して読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="663dc-1240">When you use a <xref:System.Reflection.Assembly.LoadFrom%2A> method with no <xref:System.Security.Policy.Evidence> parameter, the assembly is loaded with the evidence that the loader supplies.</span></span>  
  
-   <span data-ttu-id="663dc-1241">使用すると、<xref:System.Reflection.Assembly.LoadFrom%2A>メソッドを<xref:System.Security.Policy.Evidence>パラメーターの証拠がマージされます。</span><span class="sxs-lookup"><span data-stu-id="663dc-1241">When you use a <xref:System.Reflection.Assembly.LoadFrom%2A> method with an <xref:System.Security.Policy.Evidence> parameter, pieces of evidence are merged.</span></span> <span data-ttu-id="663dc-1242">引数として指定された証拠、<xref:System.Reflection.Assembly.LoadFrom%2A>メソッドは、ローダーによって提供される証拠の部分を置き換えます。</span><span class="sxs-lookup"><span data-stu-id="663dc-1242">Pieces of evidence supplied as an argument to the <xref:System.Reflection.Assembly.LoadFrom%2A> method supersede pieces of evidence supplied by the loader.</span></span>  
  
-   <span data-ttu-id="663dc-1243">共通言語ランタイムがスローしない場合は、同じアセンブリが異なる証拠を指定に、このメソッドを複数回呼び出す、<xref:System.IO.FileLoadException>異なる証拠仕様の整合性と等しいかどうかを判断できないためです。</span><span class="sxs-lookup"><span data-stu-id="663dc-1243">If you call this method more than once on the same assembly but with a different evidence specified, the common language runtime does not throw a <xref:System.IO.FileLoadException> because the equality and integrity of the different evidence specifications cannot be determined.</span></span> <span data-ttu-id="663dc-1244">最初に成功した証拠は、使用される証拠です。</span><span class="sxs-lookup"><span data-stu-id="663dc-1244">The evidence that first succeeds is the evidence that is used.</span></span>  
  
-   <span data-ttu-id="663dc-1245">使用すると、<xref:System.Reflection.Assembly.LoadFrom%2A>メソッドを`Byte[]`common object file format (COFF) イメージ、証拠を読み込むパラメーターが組み合わされます。</span><span class="sxs-lookup"><span data-stu-id="663dc-1245">When you use a <xref:System.Reflection.Assembly.LoadFrom%2A> method with a `Byte[]` parameter to load a common object file format (COFF) image, evidence is combined.</span></span> <span data-ttu-id="663dc-1246">`Zone`、`Url`と`Site`は呼び出し元のアセンブリから継承されると`Hash`と`StrongName`COFF アセンブリから取得されます。</span><span class="sxs-lookup"><span data-stu-id="663dc-1246">`Zone`, `Url` and `Site` are inherited from the calling assembly, and `Hash` and `StrongName` are taken from the COFF assembly.</span></span>  
  
-   <span data-ttu-id="663dc-1247">使用すると、<xref:System.Reflection.Assembly.LoadFrom%2A>メソッドを`Byte[]`パラメーターと<xref:System.Security.Policy.Evidence>COFF イメージを読み込むには、指定された証拠のみが使用されます。</span><span class="sxs-lookup"><span data-stu-id="663dc-1247">When you use a <xref:System.Reflection.Assembly.LoadFrom%2A> method with a `Byte[]` parameter and <xref:System.Security.Policy.Evidence> to load a COFF image, only the supplied evidence is used.</span></span> <span data-ttu-id="663dc-1248">呼び出し元のアセンブリの証拠と COFF イメージの証拠が無視されます。</span><span class="sxs-lookup"><span data-stu-id="663dc-1248">Evidence of the calling assembly and evidence of the COFF image is ignored.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="663dc-1249"><paramref name="assemblyFile" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="663dc-1249"><paramref name="assemblyFile" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="663dc-1250"><paramref name="assemblyFile" /> が見つからないか、または読み込もうとしているモジュールにファイル名拡張子が指定されていません。</span><span class="sxs-lookup"><span data-stu-id="663dc-1250"><paramref name="assemblyFile" /> is not found, or the module you are trying to load does not specify a filename extension.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="663dc-1251">検出されたファイルを読み込めませんでした。</span><span class="sxs-lookup"><span data-stu-id="663dc-1251">A file that was found could not be loaded.</span></span>  
  
<span data-ttu-id="663dc-1252">または</span><span class="sxs-lookup"><span data-stu-id="663dc-1252">-or-</span></span> 
<span data-ttu-id="663dc-1253"><paramref name="securityEvidence" /> はあいまいではなく、正しくないと判断されました。</span><span class="sxs-lookup"><span data-stu-id="663dc-1253">The <paramref name="securityEvidence" /> is not ambiguous and is determined to be invalid.</span></span>

<span data-ttu-id="663dc-1254">または</span><span class="sxs-lookup"><span data-stu-id="663dc-1254">-or-</span></span>

<span data-ttu-id="663dc-1255">リモート アセンブリ内でコードを実行する機能が無効になっています。</span><span class="sxs-lookup"><span data-stu-id="663dc-1255">The ability to execute code in remote assemblies is disabled.</span></span> <span data-ttu-id="663dc-1256"><see href="https://docs.microsoft.com/dotnet/framework/configure-apps/file-schema/runtime/loadfromremotesources-element">&lt;loadFromRemoteSources&gt;</see> を参照してください。</span><span class="sxs-lookup"><span data-stu-id="663dc-1256">See <see href="https://docs.microsoft.com/dotnet/framework/configure-apps/file-schema/runtime/loadfromremotesources-element">&lt;loadFromRemoteSources&gt;</see>.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="663dc-1257"><paramref name="assemblyFile" /> は有効なアセンブリではありません (64 ビット プロセスの 32 ビット アセンブリなど)。</span><span class="sxs-lookup"><span data-stu-id="663dc-1257"><paramref name="assemblyFile" /> is not a valid assembly; for example, a 32-bit assembly in a 64-bit process.</span></span> <span data-ttu-id="663dc-1258">詳細については、例外に関するトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="663dc-1258">See the exception topic for more information.</span></span>  
  
<span data-ttu-id="663dc-1259">または</span><span class="sxs-lookup"><span data-stu-id="663dc-1259">-or-</span></span> 
<span data-ttu-id="663dc-1260">共通言語ランタイムのバージョン 2.0 以降が現在読み込まれています。<paramref name="assemblyFile" /> は、より新しいバージョンでコンパイルされています。</span><span class="sxs-lookup"><span data-stu-id="663dc-1260">Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyFile" /> was compiled with a later version.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="663dc-1261">"file://" で始まっていないコードベースが、必要な <see cref="T:System.Net.WebPermission" /> なしで指定されました。</span><span class="sxs-lookup"><span data-stu-id="663dc-1261">A codebase that does not start with "file://" was specified without the required <see cref="T:System.Net.WebPermission" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="663dc-1262"><paramref name="assemblyFile" /> パラメーターが空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="663dc-1262">The <paramref name="assemblyFile" /> parameter is an empty string ("").</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="663dc-1263">アセンブリ名がシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="663dc-1263">The assembly name exceeds the system-defined maximum length.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="663dc-1264">証拠とアセンブリの読み込み。</span><span class="sxs-lookup"><span data-stu-id="663dc-1264">to load an assembly with evidence.</span></span> <span data-ttu-id="663dc-1265">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span><span class="sxs-lookup"><span data-stu-id="663dc-1265">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="663dc-1266">file:// で始まる URI を読み取る。</span><span class="sxs-lookup"><span data-stu-id="663dc-1266">for reading a URI that begins with "file://".</span></span> <span data-ttu-id="663dc-1267">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="663dc-1267">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
        <permission cref="T:System.Net.WebPermission"><span data-ttu-id="663dc-1268">file:// で始まらないする URI を読み取る。</span><span class="sxs-lookup"><span data-stu-id="663dc-1268">for reading a URI that does not begin with "file://".</span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadModule">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="663dc-1269">このアセンブリ内部のモジュールを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="663dc-1269">Loads the module internal to this assembly.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadModule">
      <MemberSignature Language="C#" Value="public System.Reflection.Module LoadModule (string moduleName, byte[] rawModule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Module LoadModule(string moduleName, unsigned int8[] rawModule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.LoadModule(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadModule (moduleName As String, rawModule As Byte()) As Module" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::Module ^ LoadModule(System::String ^ moduleName, cli::array &lt;System::Byte&gt; ^ rawModule);" />
      <MemberSignature Language="F#" Value="abstract member LoadModule : string * byte[] -&gt; System.Reflection.Module&#xA;override this.LoadModule : string * byte[] -&gt; System.Reflection.Module" Usage="assembly.LoadModule (moduleName, rawModule)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.LoadModule(System.String,System.Byte[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="moduleName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="rawModule" Type="System.Byte[]" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="moduleName"><span data-ttu-id="663dc-1270">モジュールの名前です。</span><span class="sxs-lookup"><span data-stu-id="663dc-1270">The name of the module.</span></span> <span data-ttu-id="663dc-1271">この文字列は、このアセンブリのマニフェストのファイル名に対応する必要があります。</span><span class="sxs-lookup"><span data-stu-id="663dc-1271">This string must correspond to a file name in this assembly's manifest.</span></span></param>
        <param name="rawModule"><span data-ttu-id="663dc-1272">生成されたモジュールを含んだ COFF ベースのイメージまたはリソースになっているバイト配列。</span><span class="sxs-lookup"><span data-stu-id="663dc-1272">A byte array that is a COFF-based image containing an emitted module, or a resource.</span></span></param>
        <summary><span data-ttu-id="663dc-1273">生成されたモジュールを含んだ COFF ベースのイメージ、またはリソース ファイルと共に、このアセンブリの内部モジュールを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="663dc-1273">Loads the module, internal to this assembly, with a common object file format (COFF)-based image containing an emitted module, or a resource file.</span></span></summary>
        <returns><span data-ttu-id="663dc-1274">読み込み済みのモジュール。</span><span class="sxs-lookup"><span data-stu-id="663dc-1274">The loaded module.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="663dc-1275"><paramref name="moduleName" /> または <paramref name="rawModule" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="663dc-1275"><paramref name="moduleName" /> or <paramref name="rawModule" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="663dc-1276"><paramref name="moduleName" /> がこのアセンブリのマニフェストでファイル エントリと一致しません。</span><span class="sxs-lookup"><span data-stu-id="663dc-1276"><paramref name="moduleName" /> does not match a file entry in this assembly's manifest.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="663dc-1277"><paramref name="rawModule" /> は有効なモジュールではありません。</span><span class="sxs-lookup"><span data-stu-id="663dc-1277"><paramref name="rawModule" /> is not a valid module.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="663dc-1278">検出されたファイルを読み込めませんでした。</span><span class="sxs-lookup"><span data-stu-id="663dc-1278">A file that was found could not be loaded.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="663dc-1279">証拠を提供します。</span><span class="sxs-lookup"><span data-stu-id="663dc-1279">to provide evidence.</span></span> <span data-ttu-id="663dc-1280">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span><span class="sxs-lookup"><span data-stu-id="663dc-1280">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="LoadModule">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.Module LoadModule (string moduleName, byte[] rawModule, byte[] rawSymbolStore);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Module LoadModule(string moduleName, unsigned int8[] rawModule, unsigned int8[] rawSymbolStore) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.LoadModule(System.String,System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LoadModule (moduleName As String, rawModule As Byte(), rawSymbolStore As Byte()) As Module" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::Module ^ LoadModule(System::String ^ moduleName, cli::array &lt;System::Byte&gt; ^ rawModule, cli::array &lt;System::Byte&gt; ^ rawSymbolStore);" />
      <MemberSignature Language="F#" Value="abstract member LoadModule : string * byte[] * byte[] -&gt; System.Reflection.Module&#xA;override this.LoadModule : string * byte[] * byte[] -&gt; System.Reflection.Module" Usage="assembly.LoadModule (moduleName, rawModule, rawSymbolStore)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.LoadModule(System.String,System.Byte[],System.Byte[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="moduleName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="rawModule" Type="System.Byte[]" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="rawSymbolStore" Type="System.Byte[]" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="moduleName"><span data-ttu-id="663dc-1281">モジュールの名前です。</span><span class="sxs-lookup"><span data-stu-id="663dc-1281">The name of the module.</span></span> <span data-ttu-id="663dc-1282">この文字列は、このアセンブリのマニフェストのファイル名に対応する必要があります。</span><span class="sxs-lookup"><span data-stu-id="663dc-1282">This string must correspond to a file name in this assembly's manifest.</span></span></param>
        <param name="rawModule"><span data-ttu-id="663dc-1283">生成されたモジュールを含んだ COFF ベースのイメージまたはリソースになっているバイト配列。</span><span class="sxs-lookup"><span data-stu-id="663dc-1283">A byte array that is a COFF-based image containing an emitted module, or a resource.</span></span></param>
        <param name="rawSymbolStore"><span data-ttu-id="663dc-1284">モジュールのシンボルを表す生バイトを格納しているバイト配列。</span><span class="sxs-lookup"><span data-stu-id="663dc-1284">A byte array containing the raw bytes representing the symbols for the module.</span></span> <span data-ttu-id="663dc-1285">リソース ファイルの場合は <see langword="null" /> にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="663dc-1285">Must be <see langword="null" /> if this is a resource file.</span></span></param>
        <summary><span data-ttu-id="663dc-1286">生成されたモジュールを含んだ COFF ベースのイメージ、またはリソース ファイルと共に、このアセンブリの内部モジュールを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="663dc-1286">Loads the module, internal to this assembly, with a common object file format (COFF)-based image containing an emitted module, or a resource file.</span></span> <span data-ttu-id="663dc-1287">モジュールのシンボルを表す生バイトも読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="663dc-1287">The raw bytes representing the symbols for the module are also loaded.</span></span></summary>
        <returns><span data-ttu-id="663dc-1288">読み込み済みのモジュール。</span><span class="sxs-lookup"><span data-stu-id="663dc-1288">The loaded module.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="663dc-1289"><paramref name="moduleName" /> または <paramref name="rawModule" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="663dc-1289"><paramref name="moduleName" /> or <paramref name="rawModule" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="663dc-1290"><paramref name="moduleName" /> がこのアセンブリのマニフェストでファイル エントリと一致しません。</span><span class="sxs-lookup"><span data-stu-id="663dc-1290"><paramref name="moduleName" /> does not match a file entry in this assembly's manifest.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="663dc-1291"><paramref name="rawModule" /> は有効なモジュールではありません。</span><span class="sxs-lookup"><span data-stu-id="663dc-1291"><paramref name="rawModule" /> is not a valid module.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="663dc-1292">検出されたファイルを読み込めませんでした。</span><span class="sxs-lookup"><span data-stu-id="663dc-1292">A file that was found could not be loaded.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="663dc-1293">証拠を提供します。</span><span class="sxs-lookup"><span data-stu-id="663dc-1293">to provide evidence.</span></span> <span data-ttu-id="663dc-1294">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span><span class="sxs-lookup"><span data-stu-id="663dc-1294">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadWithPartialName">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="663dc-1295">アプリケーション ディレクトリまたはグローバル アセンブリ キャッシュから、部分名を使用してアセンブリを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="663dc-1295">Loads an assembly from the application directory or from the global assembly cache using a partial name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="663dc-1296">オーバー ロード、<xref:System.Reflection.Assembly.LoadWithPartialName%2A?displayProperty=nameWithType>メソッドは廃止され、旧バージョンとの互換性のために保持されています。</span><span class="sxs-lookup"><span data-stu-id="663dc-1296">The overloads of the <xref:System.Reflection.Assembly.LoadWithPartialName%2A?displayProperty=nameWithType> method are obsolete and have been retained for backward compatibility.</span></span> <span data-ttu-id="663dc-1297">旧式でない代替手段は、<xref:System.Reflection.Assembly.Load%28System.String%29?displayProperty=nameWithType> です。</span><span class="sxs-lookup"><span data-stu-id="663dc-1297">The non-obsolete alternative is <xref:System.Reflection.Assembly.Load%28System.String%29?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadWithPartialName">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly LoadWithPartialName (string partialName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly LoadWithPartialName(string partialName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.LoadWithPartialName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LoadWithPartialName (partialName As String) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ LoadWithPartialName(System::String ^ partialName);" />
      <MemberSignature Language="F#" Value="static member LoadWithPartialName : string -&gt; System.Reflection.Assembly" Usage="System.Reflection.Assembly.LoadWithPartialName partialName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("This method has been deprecated. Please use Assembly.Load() instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("This method has been deprecated. Please use Assembly.Load() instead. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partialName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="partialName"><span data-ttu-id="663dc-1298">アセンブリの表示名。</span><span class="sxs-lookup"><span data-stu-id="663dc-1298">The display name of the assembly.</span></span></param>
        <summary><span data-ttu-id="663dc-1299">アプリケーション ディレクトリまたはグローバル アセンブリ キャッシュから、部分名を使用してアセンブリを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="663dc-1299">Loads an assembly from the application directory or from the global assembly cache using a partial name.</span></span></summary>
        <returns><span data-ttu-id="663dc-1300">読み込まれるアセンブリ。</span><span class="sxs-lookup"><span data-stu-id="663dc-1300">The loaded assembly.</span></span> <span data-ttu-id="663dc-1301"><paramref name="partialName" /> が見つからない場合、このメソッドは <see langword="null" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="663dc-1301">If <paramref name="partialName" /> is not found, this method returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="663dc-1302"><xref:System.Reflection.Assembly.LoadWithPartialName%28System.String%29>メソッドは廃止され、旧バージョンとの互換性のために残されています。</span><span class="sxs-lookup"><span data-stu-id="663dc-1302">The <xref:System.Reflection.Assembly.LoadWithPartialName%28System.String%29> method is obsolete and has been retained for backward compatibility.</span></span> <span data-ttu-id="663dc-1303">旧式でない代替手段は、<xref:System.Reflection.Assembly.Load%28System.String%29?displayProperty=nameWithType> です。</span><span class="sxs-lookup"><span data-stu-id="663dc-1303">The non-obsolete alternative is <xref:System.Reflection.Assembly.Load%28System.String%29?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="663dc-1304">このメソッドを使用してアセンブリを読み込むアプリケーションは、これらのアセンブリのアップグレードの影響を受けます。</span><span class="sxs-lookup"><span data-stu-id="663dc-1304">Applications that load assemblies with this method will be affected by upgrades of those assemblies.</span></span> <span data-ttu-id="663dc-1305">そのため、このメソッドを使用しません。使用するアプリケーションを再設計、<xref:System.Reflection.Assembly.Load%28System.String%29>メソッドのオーバー ロードまたは<xref:System.Reflection.Assembly.LoadFrom%28System.String%29>メソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="663dc-1305">Therefore, do not use this method; redesign the application to use the <xref:System.Reflection.Assembly.Load%28System.String%29> method overload or the <xref:System.Reflection.Assembly.LoadFrom%28System.String%29> method overload.</span></span>  
  
 <span data-ttu-id="663dc-1306">このメソッドは、最初<xref:System.Reflection.Assembly.Load%2A>します。</span><span class="sxs-lookup"><span data-stu-id="663dc-1306">This method first calls <xref:System.Reflection.Assembly.Load%2A>.</span></span> <span data-ttu-id="663dc-1307">アセンブリが見つからない場合、このメソッドは、同じ簡易名、および最新のバージョン番号を持つグローバル アセンブリ キャッシュからアセンブリを返します。</span><span class="sxs-lookup"><span data-stu-id="663dc-1307">If the assembly is not found, this method returns the assembly from the global assembly cache that has the same simple name, and the highest version number.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="663dc-1308"><paramref name="partialName" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="663dc-1308">The <paramref name="partialName" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="663dc-1309"><paramref name="assemblyFile" /> は正しいアセンブリではありません。</span><span class="sxs-lookup"><span data-stu-id="663dc-1309"><paramref name="assemblyFile" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="663dc-1310">または</span><span class="sxs-lookup"><span data-stu-id="663dc-1310">-or-</span></span> 
<span data-ttu-id="663dc-1311">共通言語ランタイムのバージョン 2.0 以降が現在読み込まれています。<paramref name="partialName" /> は、より新しいバージョンでコンパイルされています。</span><span class="sxs-lookup"><span data-stu-id="663dc-1311">Version 2.0 or later of the common language runtime is currently loaded and <paramref name="partialName" /> was compiled with a later version.</span></span></exception>
        <altmember cref="M:System.Reflection.Assembly.Load(System.String)" />
        <altmember cref="M:System.Reflection.Assembly.LoadFrom(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="LoadWithPartialName">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly LoadWithPartialName (string partialName, System.Security.Policy.Evidence securityEvidence);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly LoadWithPartialName(string partialName, class System.Security.Policy.Evidence securityEvidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.LoadWithPartialName(System.String,System.Security.Policy.Evidence)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LoadWithPartialName (partialName As String, securityEvidence As Evidence) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ LoadWithPartialName(System::String ^ partialName, System::Security::Policy::Evidence ^ securityEvidence);" />
      <MemberSignature Language="F#" Value="static member LoadWithPartialName : string * System.Security.Policy.Evidence -&gt; System.Reflection.Assembly" Usage="System.Reflection.Assembly.LoadWithPartialName (partialName, securityEvidence)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("This method has been deprecated. Please use Assembly.Load() instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partialName" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="securityEvidence" Type="System.Security.Policy.Evidence" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="partialName"><span data-ttu-id="663dc-1312">アセンブリの表示名。</span><span class="sxs-lookup"><span data-stu-id="663dc-1312">The display name of the assembly.</span></span></param>
        <param name="securityEvidence"><span data-ttu-id="663dc-1313">アセンブリを読み込むために必要な証拠。</span><span class="sxs-lookup"><span data-stu-id="663dc-1313">Evidence for loading the assembly.</span></span></param>
        <summary><span data-ttu-id="663dc-1314">アプリケーション ディレクトリまたはグローバル アセンブリ キャッシュから、部分名を使用してアセンブリを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="663dc-1314">Loads an assembly from the application directory or from the global assembly cache using a partial name.</span></span> <span data-ttu-id="663dc-1315">アセンブリは、指定された証拠を使用して、呼び出し元のドメインに読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="663dc-1315">The assembly is loaded into the domain of the caller using the supplied evidence.</span></span></summary>
        <returns><span data-ttu-id="663dc-1316">読み込まれるアセンブリ。</span><span class="sxs-lookup"><span data-stu-id="663dc-1316">The loaded assembly.</span></span> <span data-ttu-id="663dc-1317"><paramref name="partialName" /> が見つからない場合、このメソッドは <see langword="null" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="663dc-1317">If <paramref name="partialName" /> is not found, this method returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="663dc-1318"><xref:System.Reflection.Assembly.LoadWithPartialName%28System.String%2CSystem.Security.Policy.Evidence%29>メソッドは廃止され、旧バージョンとの互換性のために残されています。</span><span class="sxs-lookup"><span data-stu-id="663dc-1318">The <xref:System.Reflection.Assembly.LoadWithPartialName%28System.String%2CSystem.Security.Policy.Evidence%29> method is obsolete and has been retained for backward compatibility.</span></span> <span data-ttu-id="663dc-1319">旧式でない代替手段は、<xref:System.Reflection.Assembly.Load%28System.String%29?displayProperty=nameWithType> です。</span><span class="sxs-lookup"><span data-stu-id="663dc-1319">The non-obsolete alternative is <xref:System.Reflection.Assembly.Load%28System.String%29?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="663dc-1320">証拠とは、セキュリティ ポリシーがアクセス許可を決定するときに使用する一連の情報 (コードにどのようなアクセス許可を付与できるかなど) のことです。</span><span class="sxs-lookup"><span data-stu-id="663dc-1320">Evidence is the set of information that constitutes input to security policy decisions, such as what permissions can be granted to code.</span></span>  
  
 <span data-ttu-id="663dc-1321">このメソッドを使用してアセンブリを読み込むアプリケーションは、これらのアセンブリのアップグレードの影響を受けます。</span><span class="sxs-lookup"><span data-stu-id="663dc-1321">Applications that load assemblies with this method will be affected by upgrades of those assemblies.</span></span> <span data-ttu-id="663dc-1322">そのため、このメソッドを使用しません。使用するアプリケーションを再設計、<xref:System.Reflection.Assembly.Load%2A>メソッドまたは<xref:System.Reflection.Assembly.LoadFrom%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="663dc-1322">Therefore, do not use this method; redesign the application to use the <xref:System.Reflection.Assembly.Load%2A> method or the <xref:System.Reflection.Assembly.LoadFrom%2A> method.</span></span>  
  
 <span data-ttu-id="663dc-1323">このメソッドは、最初<xref:System.Reflection.Assembly.Load%2A>します。</span><span class="sxs-lookup"><span data-stu-id="663dc-1323">This method first calls <xref:System.Reflection.Assembly.Load%2A>.</span></span> <span data-ttu-id="663dc-1324">アセンブリが見つからない場合、このメソッドは、同じ簡易名、および最新のバージョン番号を持つグローバル アセンブリ キャッシュからアセンブリを返します。</span><span class="sxs-lookup"><span data-stu-id="663dc-1324">If the assembly is not found, this method returns the assembly from the global assembly cache that has the same simple name, and the highest version number.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="663dc-1325">アセンブリまたはモジュールが、2 つの異なる証拠セットを使用して 2 回読み込まれました。</span><span class="sxs-lookup"><span data-stu-id="663dc-1325">An assembly or module was loaded twice with two different sets of evidence.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="663dc-1326"><paramref name="partialName" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="663dc-1326">The <paramref name="partialName" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="663dc-1327"><paramref name="assemblyFile" /> は正しいアセンブリではありません。</span><span class="sxs-lookup"><span data-stu-id="663dc-1327"><paramref name="assemblyFile" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="663dc-1328">または</span><span class="sxs-lookup"><span data-stu-id="663dc-1328">-or-</span></span> 
<span data-ttu-id="663dc-1329">共通言語ランタイムのバージョン 2.0 以降が現在読み込まれています。<paramref name="partialName" /> は、より新しいバージョンでコンパイルされています。</span><span class="sxs-lookup"><span data-stu-id="663dc-1329">Version 2.0 or later of the common language runtime is currently loaded and <paramref name="partialName" /> was compiled with a later version.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="663dc-1330">アンマネージ コードの呼び出しに証拠を使用してアセンブリを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="663dc-1330">for calling unmanaged code and to load an assembly with evidence.</span></span> <span data-ttu-id="663dc-1331">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span><span class="sxs-lookup"><span data-stu-id="663dc-1331">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span></span></permission>
        <altmember cref="M:System.Reflection.Assembly.Load(System.String)" />
        <altmember cref="M:System.Reflection.Assembly.LoadFrom(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public virtual string Location { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Location" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.Location" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Location As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Location { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Location : string" Usage="System.Reflection.Assembly.Location" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Assembly.Location</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="663dc-1332">マニフェストを格納している読み込み済みファイルの完全パスまたは UNC 位置を取得します。</span><span class="sxs-lookup"><span data-stu-id="663dc-1332">Gets the full path or UNC location of the loaded file that contains the manifest.</span></span></summary>
        <value><span data-ttu-id="663dc-1333">マニフェストを格納している読み込み済みファイルの場所。</span><span class="sxs-lookup"><span data-stu-id="663dc-1333">The location of the loaded file that contains the manifest.</span></span> <span data-ttu-id="663dc-1334">読み込み済みファイルがシャドウ コピーされている場合、この場所はシャドウ コピーされた後のファイルの場所です。</span><span class="sxs-lookup"><span data-stu-id="663dc-1334">If the loaded file was shadow-copied, the location is that of the file after being shadow-copied.</span></span> <span data-ttu-id="663dc-1335"><see cref="M:System.Reflection.Assembly.Load(System.Byte[])" /> メソッド オーバーロードを使用したときなど、アセンブリがバイト配列から読み込まれた場合に返される値は、空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="663dc-1335">If the assembly is loaded from a byte array, such as when using the <see cref="M:System.Reflection.Assembly.Load(System.Byte[])" /> method overload, the value returned is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663dc-1336">ファイルがシャドウ コピーされる前に、場所を取得する、<xref:System.Reflection.Assembly.CodeBase%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="663dc-1336">To get the location before the file has been shadow-copied, use the <xref:System.Reflection.Assembly.CodeBase%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="663dc-1337">次の例では、マニフェストを格納する読み込み済みファイルの場所が表示されます。</span><span class="sxs-lookup"><span data-stu-id="663dc-1337">The following example displays the location of the loaded file that contains the manifest.</span></span>  
  
 [!code-cpp[System.Reflection.Assembly#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Assembly/CPP/assembly.cpp#3)]
 [!code-csharp[System.Reflection.Assembly#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Assembly/CS/assembly.cs#3)]
 [!code-vb[System.Reflection.Assembly#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Assembly/VB/assembly.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="663dc-1338">現在のアセンブリは、<see cref="T:System.Reflection.Emit.AssemblyBuilder" /> オブジェクトによって表される動的アセンブリです。</span><span class="sxs-lookup"><span data-stu-id="663dc-1338">The current assembly is a dynamic assembly, represented by an <see cref="T:System.Reflection.Emit.AssemblyBuilder" /> object.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="663dc-1339">パスにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="663dc-1339">for access to the path.</span></span> <span data-ttu-id="663dc-1340">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span><span class="sxs-lookup"><span data-stu-id="663dc-1340">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span></span></permission>
        <related type="Article" href="~/docs/framework/app-domains/shadow-copy-assemblies.md"><span data-ttu-id="663dc-1341">アセンブリのシャドウ コピー</span><span class="sxs-lookup"><span data-stu-id="663dc-1341">Shadow Copying Assemblies</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ManifestModule">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.Module ManifestModule { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Module ManifestModule" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.ManifestModule" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ManifestModule As Module" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::Module ^ ManifestModule { System::Reflection::Module ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ManifestModule : System.Reflection.Module" Usage="System.Reflection.Assembly.ManifestModule" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Module</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="663dc-1342">現在のアセンブリのマニフェストを格納しているモジュールを取得します。</span><span class="sxs-lookup"><span data-stu-id="663dc-1342">Gets the module that contains the manifest for the current assembly.</span></span></summary>
        <value><span data-ttu-id="663dc-1343">アセンブリのマニフェストを格納しているモジュール。</span><span class="sxs-lookup"><span data-stu-id="663dc-1343">The module that contains the manifest for the assembly.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModuleResolve">
      <MemberSignature Language="C#" Value="public virtual event System.Reflection.ModuleResolveEventHandler ModuleResolve;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Reflection.ModuleResolveEventHandler ModuleResolve" />
      <MemberSignature Language="DocId" Value="E:System.Reflection.Assembly.ModuleResolve" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Custom Event ModuleResolve As ModuleResolveEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Reflection::ModuleResolveEventHandler ^ ModuleResolve;" />
      <MemberSignature Language="F#" Value="member this.ModuleResolve : System.Reflection.ModuleResolveEventHandler " Usage="member this.ModuleResolve : System.Reflection.ModuleResolveEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Runtime.InteropServices._Assembly.ModuleResolve</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.ModuleResolveEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="663dc-1344">共通言語ランタイム クラス ローダーが、通常の方法で参照をアセンブリの内部モジュールに解決できないときに発生します。</span><span class="sxs-lookup"><span data-stu-id="663dc-1344">Occurs when the common language runtime class loader cannot resolve a reference to an internal module of an assembly through normal means.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663dc-1345">このイベントは、コールバックに、検索、モジュール自体を読み込み、それを返す機会を与えます。</span><span class="sxs-lookup"><span data-stu-id="663dc-1345">This event gives the callback a chance to find and load the module itself and return it.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="663dc-1346">直前の呼び出し元に対する完全な信頼が必要です。</span><span class="sxs-lookup"><span data-stu-id="663dc-1346">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="663dc-1347">このメンバーは、部分的に信頼されたまたは透過的なコードで使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="663dc-1347">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Modules">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Reflection.Module&gt; Modules { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.Module&gt; Modules" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.Modules" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Modules As IEnumerable(Of Module)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;System::Reflection::Module ^&gt; ^ Modules { System::Collections::Generic::IEnumerable&lt;System::Reflection::Module ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Modules : seq&lt;System.Reflection.Module&gt;" Usage="System.Reflection.Assembly.Modules" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Reflection.Module&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="663dc-1348">このアセンブリ内のモジュールを含むコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="663dc-1348">Gets a collection that contains the modules in this assembly.</span></span></summary>
        <value><span data-ttu-id="663dc-1349">このアセンブリのモジュールを含むコレクション。</span><span class="sxs-lookup"><span data-stu-id="663dc-1349">A collection that contains the modules in this assembly.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Reflection.Assembly left, System.Reflection.Assembly right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Reflection.Assembly left, class System.Reflection.Assembly right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.op_Equality(System.Reflection.Assembly,System.Reflection.Assembly)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As Assembly, right As Assembly) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Reflection::Assembly ^ left, System::Reflection::Assembly ^ right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Reflection.Assembly * System.Reflection.Assembly -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Reflection.Assembly" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="right" Type="System.Reflection.Assembly" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="663dc-1350"><paramref name="right" /> と比較するアセンブリ。</span><span class="sxs-lookup"><span data-stu-id="663dc-1350">The assembly to compare to <paramref name="right" />.</span></span></param>
        <param name="right"><span data-ttu-id="663dc-1351"><paramref name="left" /> と比較するアセンブリ。</span><span class="sxs-lookup"><span data-stu-id="663dc-1351">The assembly to compare to <paramref name="left" />.</span></span></param>
        <summary><span data-ttu-id="663dc-1352">2 つの <see cref="T:System.Reflection.Assembly" /> オブジェクトが等しいかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="663dc-1352">Indicates whether two <see cref="T:System.Reflection.Assembly" /> objects are equal.</span></span></summary>
        <returns><span data-ttu-id="663dc-1353"><see langword="true" /> が <paramref name="left" /> に等しい場合は <paramref name="right" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="663dc-1353"><see langword="true" /> if <paramref name="left" /> is equal to <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Reflection.Assembly left, System.Reflection.Assembly right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Reflection.Assembly left, class System.Reflection.Assembly right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.op_Inequality(System.Reflection.Assembly,System.Reflection.Assembly)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As Assembly, right As Assembly) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Reflection::Assembly ^ left, System::Reflection::Assembly ^ right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Reflection.Assembly * System.Reflection.Assembly -&gt; bool" Usage="System.Reflection.Assembly.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Reflection.Assembly" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="right" Type="System.Reflection.Assembly" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="663dc-1354"><paramref name="right" /> と比較するアセンブリ。</span><span class="sxs-lookup"><span data-stu-id="663dc-1354">The assembly to compare to <paramref name="right" />.</span></span></param>
        <param name="right"><span data-ttu-id="663dc-1355"><paramref name="left" /> と比較するアセンブリ。</span><span class="sxs-lookup"><span data-stu-id="663dc-1355">The assembly to compare to <paramref name="left" />.</span></span></param>
        <summary><span data-ttu-id="663dc-1356">2 つの <see cref="T:System.Reflection.Assembly" /> オブジェクトが等しくないかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="663dc-1356">Indicates whether two <see cref="T:System.Reflection.Assembly" /> objects are not equal.</span></span></summary>
        <returns><span data-ttu-id="663dc-1357"><see langword="true" /> が <paramref name="left" /> と等しくない場合は <paramref name="right" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="663dc-1357"><see langword="true" /> if <paramref name="left" /> is not equal to <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PermissionSet">
      <MemberSignature Language="C#" Value="public virtual System.Security.PermissionSet PermissionSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.PermissionSet PermissionSet" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.PermissionSet" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PermissionSet As PermissionSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::PermissionSet ^ PermissionSet { System::Security::PermissionSet ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PermissionSet : System.Security.PermissionSet" Usage="System.Reflection.Assembly.PermissionSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.PermissionSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="663dc-1358">現在のアセンブリの許可セットを取得します。</span><span class="sxs-lookup"><span data-stu-id="663dc-1358">Gets the grant set of the current assembly.</span></span></summary>
        <value><span data-ttu-id="663dc-1359">現在のアセンブリの許可セット。</span><span class="sxs-lookup"><span data-stu-id="663dc-1359">The grant set of the current assembly.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663dc-1360"><xref:System.Security.PermissionSet> オブジェクトは、パスなどの機密情報を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="663dc-1360"><xref:System.Security.PermissionSet> objects can contain sensitive information such as paths.</span></span> <span data-ttu-id="663dc-1361">そのため、これらのオブジェクトにアクセスするには、完全な信頼が必要です。</span><span class="sxs-lookup"><span data-stu-id="663dc-1361">Therefore, full trust is required to access these objects.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="663dc-1362">直前の呼び出し元に対する完全な信頼が必要です。</span><span class="sxs-lookup"><span data-stu-id="663dc-1362">requires full trust for the immediate caller.</span></span> <span data-ttu-id="663dc-1363">このメンバーは、部分的に信頼されたまたは透過的なコードで使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="663dc-1363">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="ReflectionOnly">
      <MemberSignature Language="C#" Value="public virtual bool ReflectionOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReflectionOnly" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.ReflectionOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ReflectionOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ReflectionOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ReflectionOnly : bool" Usage="System.Reflection.Assembly.ReflectionOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="663dc-1364">このアセンブリがリフレクションのみのコンテキストに読み込まれたかどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</span><span class="sxs-lookup"><span data-stu-id="663dc-1364">Gets a <see cref="T:System.Boolean" /> value indicating whether this assembly was loaded into the reflection-only context.</span></span></summary>
        <value><span data-ttu-id="663dc-1365">アセンブリが実行コンテキストではなく、リフレクションのみのコンテキストに読み込まれている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="663dc-1365"><see langword="true" /> if the assembly was loaded into the reflection-only context, rather than the execution context; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663dc-1366">使用して、アセンブリがリフレクションのみのコンテキストに読み込まれた場合、<xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A>メソッド、アセンブリのコードを実行することはできません。</span><span class="sxs-lookup"><span data-stu-id="663dc-1366">If an assembly has been loaded into the reflection-only context, using the <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A> method, you cannot execute code in the assembly.</span></span> <span data-ttu-id="663dc-1367">コードを実行するには、アセンブリは実行コンテキストに読み込まれる必要があります。</span><span class="sxs-lookup"><span data-stu-id="663dc-1367">To execute code, the assembly must be loaded into the execution context.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReflectionOnlyLoad">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="663dc-1368">アセンブリをリフレクションのみのコンテキストに読み込みます。リフレクションのみのコンテキストでは、アセンブリのチェックはできますが、実行はできません。</span><span class="sxs-lookup"><span data-stu-id="663dc-1368">Loads an assembly into the reflection-only context, where it can be examined but not executed.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReflectionOnlyLoad">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly ReflectionOnlyLoad (byte[] rawAssembly);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly ReflectionOnlyLoad(unsigned int8[] rawAssembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.ReflectionOnlyLoad(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReflectionOnlyLoad (rawAssembly As Byte()) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ ReflectionOnlyLoad(cli::array &lt;System::Byte&gt; ^ rawAssembly);" />
      <MemberSignature Language="F#" Value="static member ReflectionOnlyLoad : byte[] -&gt; System.Reflection.Assembly" Usage="System.Reflection.Assembly.ReflectionOnlyLoad rawAssembly" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawAssembly" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="rawAssembly"><span data-ttu-id="663dc-1369">生成されたアセンブリを含む COFF ベースのイメージであるバイト配列。</span><span class="sxs-lookup"><span data-stu-id="663dc-1369">A byte array that is a COFF-based image containing an emitted assembly.</span></span></param>
        <summary><span data-ttu-id="663dc-1370">生成されたアセンブリを含む COFF ベースのイメージを使用して、アセンブリを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="663dc-1370">Loads the assembly from a common object file format (COFF)-based image containing an emitted assembly.</span></span> <span data-ttu-id="663dc-1371">アセンブリは、呼び出し元のアプリケーション ドメインの、リフレクションのみのコンテキストに読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="663dc-1371">The assembly is loaded into the reflection-only context of the caller's application domain.</span></span></summary>
        <returns><span data-ttu-id="663dc-1372">読み込まれるアセンブリ。</span><span class="sxs-lookup"><span data-stu-id="663dc-1372">The loaded assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663dc-1373">リフレクション専用コンテキストに読み込まれたアセンブリからコードを実行することはできません。</span><span class="sxs-lookup"><span data-stu-id="663dc-1373">You cannot execute code from an assembly loaded into the reflection-only context.</span></span> <span data-ttu-id="663dc-1374">コードを実行するアセンブリ読み込む必要がある同様に、実行コンテキストを使用して、<xref:System.Reflection.Assembly.Load%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="663dc-1374">To execute code, the assembly must be loaded into the execution context as well, using the <xref:System.Reflection.Assembly.Load%2A> method.</span></span>  
  
 <span data-ttu-id="663dc-1375">リフレクションのみのコンテキストは、他のコンテキストと変わりありません。</span><span class="sxs-lookup"><span data-stu-id="663dc-1375">The reflection-only context is no different from other contexts.</span></span> <span data-ttu-id="663dc-1376">アプリケーション ドメインをアンロードしてのみのコンテキストに読み込まれるアセンブリをアンロードできます。</span><span class="sxs-lookup"><span data-stu-id="663dc-1376">Assemblies that are loaded into the context can be unloaded only by unloading the application domain.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="663dc-1377"><paramref name="rawAssembly" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="663dc-1377"><paramref name="rawAssembly" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="663dc-1378"><paramref name="rawAssembly" /> は正しいアセンブリではありません。</span><span class="sxs-lookup"><span data-stu-id="663dc-1378"><paramref name="rawAssembly" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="663dc-1379">または</span><span class="sxs-lookup"><span data-stu-id="663dc-1379">-or-</span></span> 
<span data-ttu-id="663dc-1380">共通言語ランタイムのバージョン 2.0 以降が現在読み込まれています。<paramref name="rawAssembly" /> は、より新しいバージョンでコンパイルされています。</span><span class="sxs-lookup"><span data-stu-id="663dc-1380">Version 2.0 or later of the common language runtime is currently loaded and <paramref name="rawAssembly" /> was compiled with a later version.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="663dc-1381"><paramref name="rawAssembly" /> を読み込めません。</span><span class="sxs-lookup"><span data-stu-id="663dc-1381"><paramref name="rawAssembly" /> cannot be loaded.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReflectionOnlyLoad">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly ReflectionOnlyLoad (string assemblyString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly ReflectionOnlyLoad(string assemblyString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.ReflectionOnlyLoad(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReflectionOnlyLoad (assemblyString As String) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ ReflectionOnlyLoad(System::String ^ assemblyString);" />
      <MemberSignature Language="F#" Value="static member ReflectionOnlyLoad : string -&gt; System.Reflection.Assembly" Usage="System.Reflection.Assembly.ReflectionOnlyLoad assemblyString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyString" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="assemblyString"><span data-ttu-id="663dc-1382"><see cref="P:System.Reflection.AssemblyName.FullName" /> プロパティによって返される、アセンブリの表示名。</span><span class="sxs-lookup"><span data-stu-id="663dc-1382">The display name of the assembly, as returned by the <see cref="P:System.Reflection.AssemblyName.FullName" /> property.</span></span></param>
        <summary><span data-ttu-id="663dc-1383">表示名を指定して、アセンブリをリフレクションのみのコンテキストに読み込みます。</span><span class="sxs-lookup"><span data-stu-id="663dc-1383">Loads an assembly into the reflection-only context, given its display name.</span></span></summary>
        <returns><span data-ttu-id="663dc-1384">読み込まれるアセンブリ。</span><span class="sxs-lookup"><span data-stu-id="663dc-1384">The loaded assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663dc-1385">依存関係は、リフレクション専用コンテキストに自動的に読み込まれません。</span><span class="sxs-lookup"><span data-stu-id="663dc-1385">Dependencies are not automatically loaded into the reflection-only context.</span></span>  
  
 <span data-ttu-id="663dc-1386">リフレクション専用コンテキストに読み込まれたアセンブリからコードを実行することはできません。</span><span class="sxs-lookup"><span data-stu-id="663dc-1386">You cannot execute code from an assembly loaded into the reflection-only context.</span></span> <span data-ttu-id="663dc-1387">コードを実行するアセンブリ読み込む必要がある同様に、実行コンテキストを使用して、<xref:System.Reflection.Assembly.Load%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="663dc-1387">To execute code, the assembly must be loaded into the execution context as well, using the <xref:System.Reflection.Assembly.Load%2A> method.</span></span>  
  
 <span data-ttu-id="663dc-1388">アセンブリに対して特定のアクセス許可を付与するかどうかは、証拠に基づいて決定されます。</span><span class="sxs-lookup"><span data-stu-id="663dc-1388">Whether certain permissions are granted or not granted to an assembly is based on evidence.</span></span> <span data-ttu-id="663dc-1389">アセンブリとマージのセキュリティ証拠の規則は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="663dc-1389">The rules for assembly and security evidence merging are as follows:</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="663dc-1390">C++ でコンパイルされた実行可能ファイルにリフレクションをスローする可能性を<xref:System.IO.FileLoadException>します。</span><span class="sxs-lookup"><span data-stu-id="663dc-1390">Reflecting on executable files compiled in C++ might throw a <xref:System.IO.FileLoadException>.</span></span> <span data-ttu-id="663dc-1391">これはほとんどの場合、再配置アドレスまたは .reloc セクション、実行可能ファイルから、C++ コンパイラ発生します。</span><span class="sxs-lookup"><span data-stu-id="663dc-1391">This is most likely caused by the C++ compiler stripping the relocation addresses or the .reloc section from your executable file.</span></span> <span data-ttu-id="663dc-1392">.Reloc アドレスを保持するために次のように指定します。`/fixed:no`リンクしています。</span><span class="sxs-lookup"><span data-stu-id="663dc-1392">To preserve the .reloc address, specify `/fixed:no` when you are linking.</span></span>  
  
 <span data-ttu-id="663dc-1393">リフレクションのみのコンテキストは、他のコンテキストと変わりありません。</span><span class="sxs-lookup"><span data-stu-id="663dc-1393">The reflection-only context is no different from other contexts.</span></span> <span data-ttu-id="663dc-1394">アプリケーション ドメインをアンロードしてのみのコンテキストに読み込まれるアセンブリをアンロードできます。</span><span class="sxs-lookup"><span data-stu-id="663dc-1394">Assemblies that are loaded into the context can be unloaded only by unloading the application domain.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="663dc-1395"><paramref name="assemblyString" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="663dc-1395"><paramref name="assemblyString" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="663dc-1396"><paramref name="assemblyString" /> が空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="663dc-1396"><paramref name="assemblyString" /> is an empty string ("").</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="663dc-1397"><paramref name="assemblyString" /> が見つかりません。</span><span class="sxs-lookup"><span data-stu-id="663dc-1397"><paramref name="assemblyString" /> is not found.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="663dc-1398"><paramref name="assemblyString" /> が見つかりましたが、読み込めません。</span><span class="sxs-lookup"><span data-stu-id="663dc-1398"><paramref name="assemblyString" /> is found, but cannot be loaded.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="663dc-1399"><paramref name="assemblyString" /> は正しいアセンブリではありません。</span><span class="sxs-lookup"><span data-stu-id="663dc-1399"><paramref name="assemblyString" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="663dc-1400">または</span><span class="sxs-lookup"><span data-stu-id="663dc-1400">-or-</span></span> 
<span data-ttu-id="663dc-1401">共通言語ランタイムのバージョン 2.0 以降が現在読み込まれています。<paramref name="assemblyString" /> は、より新しいバージョンでコンパイルされています。</span><span class="sxs-lookup"><span data-stu-id="663dc-1401">Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyString" /> was compiled with a later version.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReflectionOnlyLoadFrom">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly ReflectionOnlyLoadFrom (string assemblyFile);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly ReflectionOnlyLoadFrom(string assemblyFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.ReflectionOnlyLoadFrom(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReflectionOnlyLoadFrom (assemblyFile As String) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ ReflectionOnlyLoadFrom(System::String ^ assemblyFile);" />
      <MemberSignature Language="F#" Value="static member ReflectionOnlyLoadFrom : string -&gt; System.Reflection.Assembly" Usage="System.Reflection.Assembly.ReflectionOnlyLoadFrom assemblyFile" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="assemblyFile"><span data-ttu-id="663dc-1402">アセンブリのマニフェストを格納しているファイルのパス。</span><span class="sxs-lookup"><span data-stu-id="663dc-1402">The path of the file that contains the manifest of the assembly.</span></span></param>
        <summary><span data-ttu-id="663dc-1403">パスを指定して、アセンブリをリフレクションのみのコンテキストに読み込みます。</span><span class="sxs-lookup"><span data-stu-id="663dc-1403">Loads an assembly into the reflection-only context, given its path.</span></span></summary>
        <returns><span data-ttu-id="663dc-1404">読み込まれるアセンブリ。</span><span class="sxs-lookup"><span data-stu-id="663dc-1404">The loaded assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663dc-1405">依存関係は、リフレクション専用コンテキストに自動的に読み込まれません。</span><span class="sxs-lookup"><span data-stu-id="663dc-1405">Dependencies are not automatically loaded into the reflection-only context.</span></span> <span data-ttu-id="663dc-1406">依存関係を自動的に読み込むには、処理、<xref:System.AppDomain.ReflectionOnlyAssemblyResolve>イベントと load イベント ハンドラー内の依存関係。</span><span class="sxs-lookup"><span data-stu-id="663dc-1406">To automatically load dependencies, handle the <xref:System.AppDomain.ReflectionOnlyAssemblyResolve> event and load the dependency in the event handler.</span></span>  
  
 <span data-ttu-id="663dc-1407">リフレクションのみのコンテキストに読み込まれたアセンブリからコードを実行することはできません。</span><span class="sxs-lookup"><span data-stu-id="663dc-1407">You cannot execute code from an assembly that has been loaded into the reflection-only context.</span></span> <span data-ttu-id="663dc-1408">使用してアセンブリを読み込むコードを実行する、<xref:System.Reflection.Assembly.LoadFile%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="663dc-1408">To execute the code, load the assembly with the <xref:System.Reflection.Assembly.LoadFile%2A> method.</span></span>  
  
 <span data-ttu-id="663dc-1409">`assemblyFile`パラメーターは、エスケープ文字のない URI に参照する必要があります。</span><span class="sxs-lookup"><span data-stu-id="663dc-1409">The `assemblyFile` parameter must refer to a URI without escape characters.</span></span> <span data-ttu-id="663dc-1410">このメソッドは、URI 内のすべての無効な文字のエスケープ文字を提供します。</span><span class="sxs-lookup"><span data-stu-id="663dc-1410">This method supplies escape characters for all invalid characters in the URI.</span></span>  
  
 <span data-ttu-id="663dc-1411">指定されたパス`assemblyFile`現在のディレクトリに対する相対パスです。</span><span class="sxs-lookup"><span data-stu-id="663dc-1411">The path specified for `assemblyFile` is relative to the current directory.</span></span> <span data-ttu-id="663dc-1412">アセンブリは、呼び出し元のドメインに読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="663dc-1412">The assembly is loaded into the domain of the caller.</span></span>  
  
 <span data-ttu-id="663dc-1413">リフレクションのみのコンテキストは、他のコンテキストと変わりありません。</span><span class="sxs-lookup"><span data-stu-id="663dc-1413">The reflection-only context is no different from other contexts.</span></span> <span data-ttu-id="663dc-1414">アプリケーション ドメインをアンロードしてのみのコンテキストに読み込まれるアセンブリをアンロードできます。</span><span class="sxs-lookup"><span data-stu-id="663dc-1414">Assemblies that are loaded into the context can be unloaded only by unloading the application domain.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="663dc-1415"><paramref name="assemblyFile" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="663dc-1415"><paramref name="assemblyFile" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="663dc-1416"><paramref name="assemblyFile" /> が見つからないか、読み込もうとしているモジュールにファイル名拡張子が指定されていません。</span><span class="sxs-lookup"><span data-stu-id="663dc-1416"><paramref name="assemblyFile" /> is not found, or the module you are trying to load does not specify a file name extension.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="663dc-1417"><paramref name="assemblyFile" /> が見つかりましたが、読み込めませんでした。</span><span class="sxs-lookup"><span data-stu-id="663dc-1417"><paramref name="assemblyFile" /> is found, but could not be loaded.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="663dc-1418"><paramref name="assemblyFile" /> は正しいアセンブリではありません。</span><span class="sxs-lookup"><span data-stu-id="663dc-1418"><paramref name="assemblyFile" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="663dc-1419">または</span><span class="sxs-lookup"><span data-stu-id="663dc-1419">-or-</span></span> 
<span data-ttu-id="663dc-1420">共通言語ランタイムのバージョン 2.0 以降が現在読み込まれています。<paramref name="assemblyFile" /> は、より新しいバージョンでコンパイルされています。</span><span class="sxs-lookup"><span data-stu-id="663dc-1420">Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyFile" /> was compiled with a later version.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="663dc-1421">"file://" で始まっていないコードベースが、必要な <see cref="T:System.Net.WebPermission" /> なしで指定されました。</span><span class="sxs-lookup"><span data-stu-id="663dc-1421">A codebase that does not start with "file://" was specified without the required <see cref="T:System.Net.WebPermission" />.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="663dc-1422">アセンブリ名がシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="663dc-1422">The assembly name exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="663dc-1423"><paramref name="assemblyFile" /> が空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="663dc-1423"><paramref name="assemblyFile" /> is an empty string ("").</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="663dc-1424">file:// で始まる URI を読み取る。</span><span class="sxs-lookup"><span data-stu-id="663dc-1424">for reading a URI that begins with "file://".</span></span> <span data-ttu-id="663dc-1425">列挙体に関連付けられている: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span><span class="sxs-lookup"><span data-stu-id="663dc-1425">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span></span></permission>
        <permission cref="T:System.Net.WebPermission"><span data-ttu-id="663dc-1426">file:// で始まらないする URI を読み取る。</span><span class="sxs-lookup"><span data-stu-id="663dc-1426">for reading a URI that does not begin with "file://".</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SecurityRuleSet">
      <MemberSignature Language="C#" Value="public virtual System.Security.SecurityRuleSet SecurityRuleSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.SecurityRuleSet SecurityRuleSet" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.SecurityRuleSet" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SecurityRuleSet As SecurityRuleSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::SecurityRuleSet SecurityRuleSet { System::Security::SecurityRuleSet get(); };" />
      <MemberSignature Language="F#" Value="member this.SecurityRuleSet : System.Security.SecurityRuleSet" Usage="System.Reflection.Assembly.SecurityRuleSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityRuleSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="663dc-1427">共通言語ランタイム (CLR: Common Language Runtime) によってこのアセンブリに適用されるセキュリティ規則のセットを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="663dc-1427">Gets a value that indicates which set of security rules the common language runtime (CLR) enforces for this assembly.</span></span></summary>
        <value><span data-ttu-id="663dc-1428">CLR によってこのアセンブリに適用されるセキュリティ規則のセット。</span><span class="sxs-lookup"><span data-stu-id="663dc-1428">The security rule set that the CLR enforces for this assembly.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663dc-1429">既定で指定してコンパイルしたアセンブリ、[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]が[レベル 2](~/docs/framework/misc/security-transparent-code-level-2.md)透過性、明示的に作成できますが[レベル 1](~/docs/framework/misc/security-transparent-code-level-1.md)代わりにします。</span><span class="sxs-lookup"><span data-stu-id="663dc-1429">By default, assemblies that you compile with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] have [level 2](~/docs/framework/misc/security-transparent-code-level-2.md) transparency, although you can explicitly make them [level 1](~/docs/framework/misc/security-transparent-code-level-1.md) instead.</span></span> <span data-ttu-id="663dc-1430">.NET Framework の以前のバージョンでコンパイルされたアセンブリでは、レベル 1 の透過性があります。</span><span class="sxs-lookup"><span data-stu-id="663dc-1430">Assemblies that were compiled with earlier versions of the .NET Framework have level 1 transparency.</span></span>  
  
 <span data-ttu-id="663dc-1431">「[セキュリティの変更](~/docs/framework/security/security-changes.md)」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="663dc-1431">See [Security Changes](~/docs/framework/security/security-changes.md).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/misc/security-transparent-code.md"><span data-ttu-id="663dc-1432">透過的セキュリティ コード</span><span class="sxs-lookup"><span data-stu-id="663dc-1432">Security-Transparent Code</span></span></related>
        <related type="Article" href="~/docs/framework/security/security-changes.md"><span data-ttu-id="663dc-1433">.NET Framework 4 におけるセキュリティの変更</span><span class="sxs-lookup"><span data-stu-id="663dc-1433">Security Changes in the .NET Framework 4</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.ICustomAttributeProvider.GetCustomAttributes">
      <MemberSignature Language="C#" Value="object[] ICustomAttributeProvider.GetCustomAttributes (bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object[] System.Reflection.ICustomAttributeProvider.GetCustomAttributes(bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function GetCustomAttributes (inherit As Boolean) As Object() Implements ICustomAttributeProvider.GetCustomAttributes" />
      <MemberSignature Language="C++ CLI" Value=" virtual cli::array &lt;System::Object ^&gt; ^ System.Reflection.ICustomAttributeProvider.GetCustomAttributes(bool inherit) = System::Reflection::ICustomAttributeProvider::GetCustomAttributes;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.ICustomAttributeProvider.GetCustomAttributes(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inherit" Type="System.Boolean" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netstandard-1.5;netstandard-1.6" />
      </Parameters>
      <Docs>
        <param name="inherit">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.ICustomAttributeProvider.GetCustomAttributes">
      <MemberSignature Language="C#" Value="object[] ICustomAttributeProvider.GetCustomAttributes (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object[] System.Reflection.ICustomAttributeProvider.GetCustomAttributes(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function GetCustomAttributes (attributeType As Type, inherit As Boolean) As Object() Implements ICustomAttributeProvider.GetCustomAttributes" />
      <MemberSignature Language="C++ CLI" Value=" virtual cli::array &lt;System::Object ^&gt; ^ System.Reflection.ICustomAttributeProvider.GetCustomAttributes(Type ^ attributeType, bool inherit) = System::Reflection::ICustomAttributeProvider::GetCustomAttributes;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.ICustomAttributeProvider.GetCustomAttributes(System.Type,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netstandard-1.5;netstandard-1.6" />
        <Parameter Name="inherit" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netstandard-1.5;netstandard-1.6" />
      </Parameters>
      <Docs>
        <param name="attributeType">To be added.</param>
        <param name="inherit">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.ICustomAttributeProvider.IsDefined">
      <MemberSignature Language="C#" Value="bool ICustomAttributeProvider.IsDefined (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Reflection.ICustomAttributeProvider.IsDefined(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.System#Reflection#ICustomAttributeProvider#IsDefined(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function IsDefined (attributeType As Type, inherit As Boolean) As Boolean Implements ICustomAttributeProvider.IsDefined" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Reflection.ICustomAttributeProvider.IsDefined(Type ^ attributeType, bool inherit) = System::Reflection::ICustomAttributeProvider::IsDefined;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.ICustomAttributeProvider.IsDefined(System.Type,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netstandard-1.5;netstandard-1.6" />
        <Parameter Name="inherit" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netstandard-1.5;netstandard-1.6" />
      </Parameters>
      <Docs>
        <param name="attributeType">To be added.</param>
        <param name="inherit">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._Assembly.GetType">
      <MemberSignature Language="C#" Value="Type _Assembly.GetType ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Type System.Runtime.InteropServices._Assembly.GetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.System#Runtime#InteropServices#_Assembly#GetType" />
      <MemberSignature Language="VB.NET" Value="Function GetType () As Type Implements _Assembly.GetType" />
      <MemberSignature Language="C++ CLI" Value=" virtual Type ^ System.Runtime.InteropServices._Assembly.GetType() = System::Runtime::InteropServices::_Assembly::GetType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="663dc-1434">現在のインスタンスの型を返します。</span><span class="sxs-lookup"><span data-stu-id="663dc-1434">Returns the type of the current instance.</span></span></summary>
        <returns><span data-ttu-id="663dc-1435"><see cref="T:System.Reflection.Assembly" /> 型を表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="663dc-1435">An object that represents the <see cref="T:System.Reflection.Assembly" /> type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="assembly.ToString " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.ToString</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="663dc-1436">アセンブリの完全名を返します。この名前は表示名とも呼ばれます。</span><span class="sxs-lookup"><span data-stu-id="663dc-1436">Returns the full name of the assembly, also known as the display name.</span></span></summary>
        <returns><span data-ttu-id="663dc-1437">アセンブリの完全名。アセンブリの完全名を判断できない場合は、クラス名。</span><span class="sxs-lookup"><span data-stu-id="663dc-1437">The full name of the assembly, or the class name if the full name of the assembly cannot be determined.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnsafeLoadFrom">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly UnsafeLoadFrom (string assemblyFile);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly UnsafeLoadFrom(string assemblyFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.UnsafeLoadFrom(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UnsafeLoadFrom (assemblyFile As String) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ UnsafeLoadFrom(System::String ^ assemblyFile);" />
      <MemberSignature Language="F#" Value="static member UnsafeLoadFrom : string -&gt; System.Reflection.Assembly" Usage="System.Reflection.Assembly.UnsafeLoadFrom assemblyFile" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="assemblyFile"><span data-ttu-id="663dc-1438">アセンブリのマニフェストを格納しているファイルの名前またはパス。</span><span class="sxs-lookup"><span data-stu-id="663dc-1438">The name or path of the file that contains the manifest of the assembly.</span></span></param>
        <summary><span data-ttu-id="663dc-1439">一部のセキュリティ チェックをバイパスして、アセンブリを読み込み元コンテキストに読み込みます。</span><span class="sxs-lookup"><span data-stu-id="663dc-1439">Loads an assembly into the load-from context, bypassing some security checks.</span></span></summary>
        <returns><span data-ttu-id="663dc-1440">読み込まれるアセンブリ。</span><span class="sxs-lookup"><span data-stu-id="663dc-1440">The loaded assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663dc-1441">このメソッドを使用して、オペレーティング システムが (たとえば、一時ファイル、インターネットまたはイントラネットからダウンロードされた) Web から読み込まれたものとしてフラグが立てられてローカル アセンブリを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="663dc-1441">Use this method to load a local assembly that the operating system has flagged as having been loaded from the Web (for example, a temporary file that was downloaded from the Internet or intranet).</span></span> <span data-ttu-id="663dc-1442">前に、 [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]、このようなアセンブリがサンド ボックス アプリケーション ドメインに自動的に読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="663dc-1442">Before the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], such assemblies were automatically loaded into a sandboxed application domain.</span></span> <span data-ttu-id="663dc-1443">以降では、 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]、完全な信頼で読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="663dc-1443">Starting with the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], they are loaded with full trust.</span></span>  
  
 <span data-ttu-id="663dc-1444">このメソッドを使用する代わりに、適用することができます、 [ &lt;NetFx40_LegacySecurityPolicy&gt;要素](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md)アプリケーション構成ファイル。</span><span class="sxs-lookup"><span data-stu-id="663dc-1444">As an alternative to using this method, you can apply the [&lt;NetFx40_LegacySecurityPolicy&gt; Element](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md) in your application configuration file.</span></span> <span data-ttu-id="663dc-1445">これにより、共通言語ランタイムのセキュリティ ポリシーに戻すには、[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]します。</span><span class="sxs-lookup"><span data-stu-id="663dc-1445">This causes the common language runtime to revert to the security policy of the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)].</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="663dc-1446">これらのソリューションのいずれかを使用する場合は、する必要がありますに読み込んでも安全である`assemblyFile`完全に信頼します。</span><span class="sxs-lookup"><span data-stu-id="663dc-1446">If you use either of these solutions, you must be certain that it is safe to load `assemblyFile` with full trust.</span></span>  
  
 <span data-ttu-id="663dc-1447">読み込みコンテキスト、読み込み元コンテキストなどの詳細については、次を参照してください。、<xref:System.Reflection.Assembly.LoadFrom%28System.String%29>メソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="663dc-1447">For a discussion of load contexts, including the load-from context, see the <xref:System.Reflection.Assembly.LoadFrom%28System.String%29> method overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="663dc-1448"><paramref name="assemblyFile" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="663dc-1448"><paramref name="assemblyFile" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="663dc-1449"><paramref name="assemblyFile" /> が見つからないか、または読み込もうとしているモジュールにファイル名拡張子が指定されていません。</span><span class="sxs-lookup"><span data-stu-id="663dc-1449"><paramref name="assemblyFile" /> is not found, or the module you are trying to load does not specify a filename extension.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="663dc-1450">検出されたファイルを読み込めませんでした。</span><span class="sxs-lookup"><span data-stu-id="663dc-1450">A file that was found could not be loaded.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="663dc-1451"><paramref name="assemblyFile" /> は正しいアセンブリではありません。</span><span class="sxs-lookup"><span data-stu-id="663dc-1451"><paramref name="assemblyFile" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="663dc-1452">または</span><span class="sxs-lookup"><span data-stu-id="663dc-1452">-or-</span></span> 
 <span data-ttu-id="663dc-1453">現在読み込まれているバージョンよりも新しいバージョンの共通言語ランタイムで、<paramref name="assemblyFile" /> がコンパイルされました。</span><span class="sxs-lookup"><span data-stu-id="663dc-1453"><paramref name="assemblyFile" /> was compiled with a later version of the common language runtime than the version that is currently loaded.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="663dc-1454">"file://" で始まっていないコードベースが、必要な <see cref="T:System.Net.WebPermission" /> なしで指定されました。</span><span class="sxs-lookup"><span data-stu-id="663dc-1454">A codebase that does not start with "file://" was specified without the required <see cref="T:System.Net.WebPermission" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="663dc-1455"><paramref name="assemblyFile" /> パラメーターが空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="663dc-1455">The <paramref name="assemblyFile" /> parameter is an empty string ("").</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="663dc-1456">アセンブリ名がシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="663dc-1456">The assembly name exceeds the system-defined maximum length.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="663dc-1457">直前の呼び出し元に対する完全な信頼が必要です。</span><span class="sxs-lookup"><span data-stu-id="663dc-1457">requires full trust for the immediate caller.</span></span> <span data-ttu-id="663dc-1458">このメンバーは、部分的に信頼されたまたは透過的なコードで使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="663dc-1458">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
  </Members>
</Type>
