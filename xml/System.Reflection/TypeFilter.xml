<Type Name="TypeFilter" FullName="System.Reflection.TypeFilter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="07d3b79fefe427e2526ec6f90eb596e22914a3ba" /><Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="11/27/2018" /><Meta Name="ms.locfileid" Value="52365492" /></Metadata><TypeSignature Language="C#" Value="public delegate bool TypeFilter(Type m, object filterCriteria);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed TypeFilter extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.TypeFilter" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function TypeFilter(m As Type, filterCriteria As Object) As Boolean " />
  <TypeSignature Language="C++ CLI" Value="public delegate bool TypeFilter(Type ^ m, System::Object ^ filterCriteria);" />
  <TypeSignature Language="F#" Value="type TypeFilter = delegate of Type * obj -&gt; bool" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="m" Type="System.Type" />
    <Parameter Name="filterCriteria" Type="System.Object" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Boolean</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="m"><span data-ttu-id="12a74-101">フィルターを適用する <see langword="Type" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="12a74-101">The <see langword="Type" /> object to which the filter is applied.</span></span></param>
    <param name="filterCriteria"><span data-ttu-id="12a74-102">一覧をフィルター処理するために使用する任意のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="12a74-102">An arbitrary object used to filter the list.</span></span></param>
    <summary><span data-ttu-id="12a74-103"><see cref="T:System.Type" /> オブジェクトの配列で表されるクラスをフィルター処理します。</span><span class="sxs-lookup"><span data-stu-id="12a74-103">Filters the classes represented in an array of <see cref="T:System.Type" /> objects.</span></span></summary>
    <returns><span data-ttu-id="12a74-104">フィルター選択されたリストに <see cref="T:System.Type" /> を含めるには <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="12a74-104"><see langword="true" /> to include the <see cref="T:System.Type" /> in the filtered list; otherwise <see langword="false" />.</span></span></returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="12a74-105">`TypeFilter`クラスの一覧をフィルター処理するデリゲートを使用します。</span><span class="sxs-lookup"><span data-stu-id="12a74-105">The `TypeFilter` delegate is used to filter a list of classes.</span></span> <span data-ttu-id="12a74-106">配列で表されるクラスをフィルター処理に使用する具体的には、<xref:System.Type>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="12a74-106">Specifically, you use it to filter the classes represented in an array of <xref:System.Type> objects.</span></span> <span data-ttu-id="12a74-107"><xref:System.Type.FindInterfaces%2A?displayProperty=nameWithType>メソッドでは、このデリゲートを使用して、返されるインターフェイスの一覧をフィルター処理します。</span><span class="sxs-lookup"><span data-stu-id="12a74-107">The <xref:System.Type.FindInterfaces%2A?displayProperty=nameWithType> method uses this delegate to filter the list of interfaces that it returns.</span></span> <span data-ttu-id="12a74-108">すべての派生クラスの<xref:System.Delegate>と<xref:System.MulticastDelegate>コンス トラクターを持つ、`DynamicInvoke`メソッド。</span><span class="sxs-lookup"><span data-stu-id="12a74-108">Every derived class of <xref:System.Delegate> and <xref:System.MulticastDelegate> has a constructor and a `DynamicInvoke` method.</span></span> <span data-ttu-id="12a74-109">説明で指定された Visual C のコード例を参照してください。`Delegate`します。</span><span class="sxs-lookup"><span data-stu-id="12a74-109">See the Visual C++ code example given in the description for `Delegate`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="12a74-110">この例は、一致するメソッドを定義する方法を示します、<xref:System.Reflection.TypeFilter>デリゲートのプロトタイプをフィルター処理または一致するエントリのサブセットを返すリフレクションを使用することができます。</span><span class="sxs-lookup"><span data-stu-id="12a74-110">This example shows how to define a method matching the <xref:System.Reflection.TypeFilter> delegate prototype allowing you to use reflection to filter or return a subset of matching entries.</span></span>  
  
 [!code-vb[Typefilter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/TypeFilter/VB/Typefilter.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Type.FindInterfaces(System.Reflection.TypeFilter,System.Object)" />
    <altmember cref="T:System.Object" />
    <altmember cref="T:System.Delegate" />
    <altmember cref="T:System.MulticastDelegate" />
  </Docs>
</Type>