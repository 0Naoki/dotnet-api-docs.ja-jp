<Type Name="Activity" FullName="System.Workflow.ComponentModel.Activity">
  <TypeSignature Language="C#" Value="public class Activity : System.Workflow.ComponentModel.DependencyObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Activity extends System.Workflow.ComponentModel.DependencyObject" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.ComponentModel.Activity" />
  <TypeSignature Language="VB.NET" Value="Public Class Activity&#xA;Inherits DependencyObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class Activity : System::Workflow::ComponentModel::DependencyObject" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Workflow.ComponentModel.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Design.Serialization.DesignerSerializer(typeof(System.Workflow.ComponentModel.Serialization.ActivityMarkupSerializer), typeof(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Design.Serialization.DesignerSerializer(typeof(System.Workflow.ComponentModel.Serialization.ActivityCodeDomSerializer), typeof(System.ComponentModel.Design.Serialization.CodeDomSerializer))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Design.Serialization.DesignerSerializer(typeof(System.Workflow.ComponentModel.Serialization.ActivityTypeCodeDomSerializer), typeof(System.ComponentModel.Design.Serialization.TypeCodeDomSerializer))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer(typeof(System.Workflow.ComponentModel.Design.ActivityDesigner), typeof(System.ComponentModel.Design.IDesigner))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer(typeof(System.Workflow.ComponentModel.Design.ActivityDesigner), typeof(System.ComponentModel.Design.IRootDesigner))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DesignerCategory("Component")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(typeof(System.Workflow.ComponentModel.Design.ActivityToolboxItem))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItemFilter</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItemFilter</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(System.Workflow.ComponentModel.Activity), "Design.Resources.Activity.png")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Workflow.ComponentModel.Compiler.ActivityCodeGenerator(typeof(System.Workflow.ComponentModel.Compiler.ActivityCodeGenerator))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Workflow.ComponentModel.Compiler.ActivityValidator(typeof(System.Workflow.ComponentModel.Compiler.ActivityValidator))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Workflow.ComponentModel.Serialization.RuntimeNameProperty("Name")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="4a2ae-101">ワークフローに不可欠な構成要素を表します。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-101">Represents the fundamental building block of workflows.</span></span> <span data-ttu-id="4a2ae-102"><see cref="T:System.Workflow.ComponentModel.Activity" /> はあらゆるアクティビティの基本クラスです。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-102"><see cref="T:System.Workflow.ComponentModel.Activity" /> is the base class for all activities.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <span data-ttu-id="4a2ae-103"><xref:System.Workflow.ComponentModel.Activity> はワークフロー構築の基礎となるブロックです。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-103">An <xref:System.Workflow.ComponentModel.Activity> is the fundamental building block of workflows.</span></span> <span data-ttu-id="4a2ae-104"><xref:System.Workflow.ComponentModel.Activity> には、クラスなど一連のプロパティやイベント、およびアクティビティの動作を規定する実行ロジックが定義されています。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-104">An <xref:System.Workflow.ComponentModel.Activity> defines a set of properties and events, such as any class, along with execution logic that defines the activity's run-time behavior.</span></span> <span data-ttu-id="4a2ae-105">各種の追加コンポーネントを <xref:System.Workflow.ComponentModel.Activity> に関連付けることができます。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-105">A set of additional components can be associated with an <xref:System.Workflow.ComponentModel.Activity>.</span></span> <span data-ttu-id="4a2ae-106">具体的には、バリデーター、コード ジェネレーター、独自のシリアライザー、デザイナー、その他があります。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-106">These include, but are not limited to a validator, a code generator, custom serializers, and a designer.</span></span>  
  
 <span data-ttu-id="4a2ae-107">基本クラスである <xref:System.Workflow.ComponentModel.Activity> で定義されたプロパティは、どのアクティビティでも使用できます。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-107">All activities share a common set of properties defined on the <xref:System.Workflow.ComponentModel.Activity> base class.</span></span>  <span data-ttu-id="4a2ae-108"><xref:System.Workflow.ComponentModel.Activity> から派生した各クラスでは、必要に応じて独自のプロパティを追加できます。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-108">Each <xref:System.Workflow.ComponentModel.Activity> can declare its own additional properties according to its requirements by extending this class.</span></span>  <span data-ttu-id="4a2ae-109"><xref:System.Workflow.ComponentModel.Activity> 自身は <xref:System.Workflow.ComponentModel.DependencyObject> の派生クラスなので、各プロパティは、標準 CLR プロパティとしても、依存関係プロパティとしても定義可能です。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-109">Because <xref:System.Workflow.ComponentModel.Activity> derives from <xref:System.Workflow.ComponentModel.DependencyObject>, properties can be defined as standard CLR properties and as dependency properties.</span></span>  
  
 <span data-ttu-id="4a2ae-110"><xref:System.Workflow.ComponentModel.Activity> の実行ロジックは、当該 <xref:System.Workflow.ComponentModel.Activity> とワークフロー ランタイムが連携して動作するようになっています。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-110">The execution logic of an <xref:System.Workflow.ComponentModel.Activity> fulfills a contract that exists between any <xref:System.Workflow.ComponentModel.Activity> and the workflow runtime.</span></span> <span data-ttu-id="4a2ae-111"><xref:System.Workflow.ComponentModel.Activity> の派生クラスでは、ワークフロー開発者がこの <xref:System.Workflow.ComponentModel.Activity> の動作を理解できるよう、外部から見た機能としての観点から実行ロジックを文書化する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-111">You must document the execution logic of any <xref:System.Workflow.ComponentModel.Activity> in a functional sense, so that a workflow developer who uses the <xref:System.Workflow.ComponentModel.Activity> knows how it behaves.</span></span> <span data-ttu-id="4a2ae-112">実行ロジックそのものを、このアクティビティをワークフローに組み込んで使う開発者に公開する必要はありません。これは、ワークフロー ランタイムと <xref:System.Workflow.ComponentModel.Activity> がどのように連携して機能を実現しているか、という実装詳細にすぎないからです。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-112">The execution logic itself is hidden from the workflow developer who includes the activity in a workflow, because the execution logic is part of a contract that exists strictly between the workflow runtime and the <xref:System.Workflow.ComponentModel.Activity>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a2ae-113">電子メールを送信するというアクティビティを定義した例を以下に示します。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-113">This example defines an activity whose purpose is to send an email.</span></span> <span data-ttu-id="4a2ae-114">`Subject` というプロパティを定義していますが、これは依存関係プロパティです。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-114">The activity defines one property, `Subject`, that uses a dependency property in its implementation.</span></span> <span data-ttu-id="4a2ae-115">他のプロパティも同様にして定義できます。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-115">Other properties can be defined in a similar way.</span></span> <span data-ttu-id="4a2ae-116">`Execute` メソッドをオーバーライドして、実際に電子メールを送信する処理を組み込んでいます。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-116">The `Execute` method is overridden to provide the logic for sending the email.</span></span> <span data-ttu-id="4a2ae-117">完全な例では、次を参照してください。、[電子メール送信アクティビティのサンプル](http://msdn.microsoft.com/library/bfb5939e-60a9-4037-af4e-2cea9e654669)です。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-117">For a complete example, see the [Send Email Activity Sample](http://msdn.microsoft.com/library/bfb5939e-60a9-4037-af4e-2cea9e654669).</span></span>  
  
```csharp  
public class SendEmail : Activity  
{  
    public static readonly DependencyProperty SubjectProperty =  
        DependencyProperty.Register("Subject", typeof(string), typeof(SendEmail));  
  
    public string Subject  
    {  
        get { return base.GetValue(SubjectProperty) as string; }  
        set { base.SetValue(SubjectProperty, value); }  
    }  
  
    // Define other properties...  
  
    protected override ActivityExecutionStatus Execute(ActivityExecutionContext executionContext)  
    {  
        // Logic to send the email goes here...  
        return ActivityExecutionStatus.Closed;  
    }  
}  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4a2ae-118"><see cref="T:System.Workflow.ComponentModel.Activity" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-118">Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Activity" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Activity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Activity.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Activity();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4a2ae-119"><see cref="T:System.Workflow.ComponentModel.Activity" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-119">Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Activity" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a2ae-120">アクティビティを作成し、複合アクティビティに子として追加するコード例を以下に示します。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-120">The following code shows how to create activities and add them as children to a composite activity.</span></span>  
  
 <span data-ttu-id="4a2ae-121">このコード例は、ThrowWorkFlow.cs ファイルから抜粋したスローの SDK サンプルの一部です。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-121">This code example is part of the Throw SDK sample and is from the ThrowWorkFlow.cs file.</span></span> <span data-ttu-id="4a2ae-122">詳細については、次を参照してください。[スロー サンプル](http://msdn.microsoft.com/library/aa5b9546-ec95-4e43-8337-20e26f8d71cc)です。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-122">For more information, see [Throw Sample](http://msdn.microsoft.com/library/aa5b9546-ec95-4e43-8337-20e26f8d71cc).</span></span>  
  
 [!code-csharp[WF_Samples#179](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#179)]
 [!code-vb[WF_Samples#179](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#179)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Activity (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Activity.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Activity(System::String ^ name);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="4a2ae-123">このインスタンスに関連付ける名前。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-123">The name to associate with this instance.</span></span> <span data-ttu-id="4a2ae-124">この名前は、ワークフロー プロジェクトの作成に使用されたプログラミング言語の変数の名前付け規則に準拠し、ワークフローで一意である必要があります。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-124">The name must conform to the variable naming conventions for the programming language that is being used in the Workflow project, and must be unique in the workflow.</span></span></param>
        <summary><span data-ttu-id="4a2ae-125"><see cref="T:System.Workflow.ComponentModel.Activity" /> クラスの新しいインスタンスを初期化します。その際、<see cref="P:System.Workflow.ComponentModel.Activity.Name" /> も初期化します。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-125">Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Activity" /> class, while initializing the <see cref="P:System.Workflow.ComponentModel.Activity.Name" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4a2ae-126"><paramref name="name" /> が null 参照 (Visual Basic の場合は <see langword="Nothing" />) です。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-126"><paramref name="name" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ActivityContextGuidProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty ActivityContextGuidProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty ActivityContextGuidProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ActivityContextGuidProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ ActivityContextGuidProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4a2ae-127"><see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> に関連付けられた <see cref="T:System.Guid" /> の <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> を表す <see cref="T:System.Workflow.ComponentModel.Activity" />。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-127">The <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> that represents the <see cref="T:System.Guid" /> of the <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> that is associated with the <see cref="T:System.Workflow.ComponentModel.Activity" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="protected internal virtual System.Workflow.ComponentModel.ActivityExecutionStatus Cancel (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance valuetype System.Workflow.ComponentModel.ActivityExecutionStatus Cancel(class System.Workflow.ComponentModel.ActivityExecutionContext executionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Activity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function Cancel (executionContext As ActivityExecutionContext) As ActivityExecutionStatus" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Workflow::ComponentModel::ActivityExecutionStatus Cancel(System::Workflow::ComponentModel::ActivityExecutionContext ^ executionContext);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.ActivityExecutionStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executionContext" Type="System.Workflow.ComponentModel.ActivityExecutionContext" />
      </Parameters>
      <Docs>
        <param name="executionContext"><span data-ttu-id="4a2ae-128">取り消そうとするインスタンスを収容する <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-128">The <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> that contains the instance to cancel.</span></span></param>
        <summary><span data-ttu-id="4a2ae-129">実行中のアクティビティを取り消すために、ワークフロー ランタイムから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-129">Called by the workflow runtime to cancel execution of an activity that is currently executing.</span></span></summary>
        <returns><span data-ttu-id="4a2ae-130">操作終了時の状態。アクティビティをキャンセル状態のまま残すか、クローズド状態に遷移させるかを表します。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-130">The status at the end of the operation that determines whether the activity remains in the canceling state or transitions to the closed state.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Canceling">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs&gt; Canceling;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs&gt; Canceling" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.ComponentModel.Activity.Canceling" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Canceling As EventHandler(Of ActivityExecutionStatusChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::ComponentModel::ActivityExecutionStatusChangedEventArgs ^&gt; ^ Canceling;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4a2ae-131">アクティビティ実行が取り消された場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-131">Occurs when the activity execution is canceled.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a2ae-132">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-132">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="4a2ae-133">詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)です。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-133">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="4a2ae-134"><xref:System.Workflow.ComponentModel.Activity.Cancel%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-134">The <xref:System.Workflow.ComponentModel.Activity.Cancel%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="4a2ae-135">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-135">This is the preferred technique for handling the event in a derived class.</span></span>  <span data-ttu-id="4a2ae-136">イベント処理の詳細については、次を参照してください。[イベントの利用](https://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67(v=vs.100))です。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-136">For more information about handling events, see [Consuming Events](https://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67(v=vs.100)).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="4a2ae-137">派生クラスで <see cref="E:System.Workflow.ComponentModel.Activity.Canceling" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Workflow.ComponentModel.Activity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)" /> メソッドを必ず呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-137">When overriding <see cref="E:System.Workflow.ComponentModel.Activity.Canceling" /> in a derived class, make sure to call the base class <see cref="M:System.Workflow.ComponentModel.Activity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)" /> method so that registered delegates receive the event.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CancelingEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty CancelingEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty CancelingEvent" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.ComponentModel.Activity.CancelingEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CancelingEvent As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ CancelingEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4a2ae-138">
          <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> イベントをターゲットとする <see cref="E:System.Workflow.ComponentModel.Activity.Canceling" /> を表します。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-138">Represents the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> that targets the <see cref="E:System.Workflow.ComponentModel.Activity.Canceling" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a2ae-139">この型の各パブリック プロパティとイベントには、対応する依存プロパティの解決によって間接的にアクセスします。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-139">You indirectly access each public property and event of this type by the resolution of a corresponding dependency property.</span></span> <span data-ttu-id="4a2ae-140">この依存プロパティは、`XProperty` または `XEvent` という名前のパブリックな静的フィールドです。X は対応するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-140">This dependency property is the public static field named `XProperty` or `XEvent`, where X is the corresponding property.</span></span>  
  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Workflow.ComponentModel.Activity Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.ComponentModel.Activity Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Activity.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Activity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::ComponentModel::Activity ^ Clone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Activity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4a2ae-141"><see cref="T:System.Workflow.ComponentModel.Activity" /> の詳細コピーを作成します。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-141">Creates a deep copy of the <see cref="T:System.Workflow.ComponentModel.Activity" />.</span></span></summary>
        <returns><span data-ttu-id="4a2ae-142"><see cref="T:System.Workflow.ComponentModel.Activity" /> の詳細コピー。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-142">A deep copy of the <see cref="T:System.Workflow.ComponentModel.Activity" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a2ae-143"><xref:System.IO.MemoryStream> を使ってアクティビティをコピーし、この <xref:System.IO.MemoryStream> から逆シリアル化することにより、新しいアクティビティを作成します。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-143">Uses a <xref:System.IO.MemoryStream> to copy the activity and creates a new activity by deserializing from that particular <xref:System.IO.MemoryStream>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Closed">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs&gt; Closed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs&gt; Closed" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.ComponentModel.Activity.Closed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Closed As EventHandler(Of ActivityExecutionStatusChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::ComponentModel::ActivityExecutionStatusChangedEventArgs ^&gt; ^ Closed;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4a2ae-144">
          <see cref="T:System.Workflow.ComponentModel.Activity" /> の実行終了時に発生します。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-144">Occurs when an <see cref="T:System.Workflow.ComponentModel.Activity" /> has completed execution.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a2ae-145">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-145">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="4a2ae-146">詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)です。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-146">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="4a2ae-147"><xref:System.Workflow.ComponentModel.Activity.Closed> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-147">The <xref:System.Workflow.ComponentModel.Activity.Closed> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="4a2ae-148">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-148">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="4a2ae-149">派生クラスで <see cref="E:System.Workflow.ComponentModel.Activity.Closed" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="E:System.Workflow.ComponentModel.Activity.Closed" /> メソッドを必ず呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-149">When overriding <see cref="E:System.Workflow.ComponentModel.Activity.Closed" /> in a derived class, make sure to call the base class <see cref="E:System.Workflow.ComponentModel.Activity.Closed" /> method so that registered delegates receive the event.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ClosedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty ClosedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty ClosedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.ComponentModel.Activity.ClosedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ClosedEvent As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ ClosedEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4a2ae-150">
          <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> イベントをターゲットとする <see cref="E:System.Workflow.ComponentModel.Activity.Closed" /> を表します。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-150">Represents the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> that targets the <see cref="E:System.Workflow.ComponentModel.Activity.Closed" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a2ae-151">この型の各パブリック プロパティとイベントには、対応する依存プロパティの解決によって間接的にアクセスします。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-151">You indirectly access each public property and event of this type by the resolution of a corresponding dependency property.</span></span> <span data-ttu-id="4a2ae-152">この依存プロパティは、`XProperty` または `XEvent` という名前のパブリックな静的フィールドです。X は対応するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-152">This dependency property is the public static field named `XProperty` or `XEvent`, where X is the corresponding property.</span></span>  
  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compensating">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs&gt; Compensating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs&gt; Compensating" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.ComponentModel.Activity.Compensating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Compensating As EventHandler(Of ActivityExecutionStatusChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::ComponentModel::ActivityExecutionStatusChangedEventArgs ^&gt; ^ Compensating;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4a2ae-153"><see cref="T:System.Workflow.ComponentModel.Activity" /> 上で補正メソッドが起動されたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-153">Occurs when running a compensation method on the <see cref="T:System.Workflow.ComponentModel.Activity" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a2ae-154">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-154">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="4a2ae-155">詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)です。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-155">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="4a2ae-156"><xref:System.Workflow.ComponentModel.Activity.Compensating> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-156">The <xref:System.Workflow.ComponentModel.Activity.Compensating> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="4a2ae-157">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-157">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="4a2ae-158">派生クラスで <see cref="E:System.Workflow.ComponentModel.Activity.Compensating" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="E:System.Workflow.ComponentModel.Activity.Compensating" /> メソッドを必ず呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-158">When overriding <see cref="E:System.Workflow.ComponentModel.Activity.Compensating" /> in a derived class, make sure to call the base class <see cref="E:System.Workflow.ComponentModel.Activity.Compensating" /> method so that registered delegates receive the event.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CompensatingEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty CompensatingEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty CompensatingEvent" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.ComponentModel.Activity.CompensatingEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CompensatingEvent As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ CompensatingEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4a2ae-159">
          <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> イベントをターゲットとする <see cref="E:System.Workflow.ComponentModel.Activity.Compensating" /> を表します。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-159">Represents the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> that targets the <see cref="E:System.Workflow.ComponentModel.Activity.Compensating" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a2ae-160">この型の各パブリック プロパティとイベントには、対応する依存プロパティの解決によって間接的にアクセスします。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-160">You indirectly access each public property and event of this type by the resolution of a corresponding dependency property.</span></span> <span data-ttu-id="4a2ae-161">この依存プロパティは、`XProperty` または `XEvent` という名前のパブリックな静的フィールドです。X は対応するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-161">This dependency property is the public static field named `XProperty` or `XEvent`, where X is the corresponding property.</span></span>  
  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Activity.Description" />
      <MemberSignature Language="VB.NET" Value="Public Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Description { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor(typeof(System.ComponentModel.Design.MultilineStringEditor), typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4a2ae-162"><see cref="T:System.Workflow.ComponentModel.Activity" /> の、ユーザーが定義した説明を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-162">Gets or sets the user-defined description of the <see cref="T:System.Workflow.ComponentModel.Activity" />.</span></span></summary>
        <value><span data-ttu-id="4a2ae-163"><see cref="T:System.Workflow.ComponentModel.Activity" /> の説明テキスト。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-163">The text description of the <see cref="T:System.Workflow.ComponentModel.Activity" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a2ae-164">このプロパティはメタ プロパティです。つまり、実行時には変更できません。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-164">This property is a meta property, which means it cannot be changed at runtime.</span></span> <span data-ttu-id="4a2ae-165">メタ プロパティは、実行時にプロパティ インスタンスが作成された後は変更されません。そのため、デザイン時にプロパティをリテラル値に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-165">Meta properties do not change after a property instance is created at runtime, so the property must be set to a literal value at design time.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Activity.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4a2ae-166">このインスタンスの実行と検証が可能かどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-166">Gets or sets a value that indicates whether this instance is enabled for execution and validation.</span></span></summary>
        <value>
          <span data-ttu-id="4a2ae-167">実行と検証が有効であれば <see langword="true" />、それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-167"><see langword="true" /> if enabled for execution and validation; <see langword="false" /> otherwise.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a2ae-168">`false` の場合、子アクティビティもすべて、この値が `false` であるものとして扱われます。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-168">If `false`, all child activities are treated as if this value is `false` for them also.</span></span>  
  
 <span data-ttu-id="4a2ae-169">このプロパティはメタ プロパティです。つまり、実行時には変更できません。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-169">This property is a meta property, which means it cannot be changed at runtime.</span></span> <span data-ttu-id="4a2ae-170">メタ プロパティは、実行時にプロパティ インスタンスが作成された後は変更されません。そのため、デザイン時にプロパティをリテラル値に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-170">Meta properties do not change after a property instance is created at runtime, so the property must be set to a literal value at design time.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="protected internal virtual System.Workflow.ComponentModel.ActivityExecutionStatus Execute (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance valuetype System.Workflow.ComponentModel.ActivityExecutionStatus Execute(class System.Workflow.ComponentModel.ActivityExecutionContext executionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Activity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function Execute (executionContext As ActivityExecutionContext) As ActivityExecutionStatus" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Workflow::ComponentModel::ActivityExecutionStatus Execute(System::Workflow::ComponentModel::ActivityExecutionContext ^ executionContext);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.ActivityExecutionStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executionContext" Type="System.Workflow.ComponentModel.ActivityExecutionContext" />
      </Parameters>
      <Docs>
        <param name="executionContext"><span data-ttu-id="4a2ae-171">この <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> を実行するための <see cref="T:System.Workflow.ComponentModel.Activity" />。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-171">The <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> to associate with this <see cref="T:System.Workflow.ComponentModel.Activity" /> and execution.</span></span></param>
        <summary><span data-ttu-id="4a2ae-172">アクティビティを実行するために、ワークフロー ランタイムが呼び出します。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-172">Called by the workflow runtime to execute an activity.</span></span></summary>
        <returns><span data-ttu-id="4a2ae-173">実行タスクの <see cref="T:System.Workflow.ComponentModel.ActivityExecutionStatus" />。アクティビティを実行状態のまま残すか、クローズド状態に遷移させるかを表します。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-173">The <see cref="T:System.Workflow.ComponentModel.ActivityExecutionStatus" /> of the run task, which determines whether the activity remains in the executing state, or transitions to the closed state.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a2ae-174"><xref:System.Workflow.ComponentModel.ActivityExecutionContext> は、現在実行中のアクティビティやワークフローに関する情報を取得し、ランタイム環境からサービスを得るために使います。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-174">The <xref:System.Workflow.ComponentModel.ActivityExecutionContext> is used to get information about the currently running activity and workflow, and is also used to obtain services from the runtime environment.</span></span>  
  
 <span data-ttu-id="4a2ae-175">これは同期的に実行され、アクティビティの終了時、あるいは中間状態になったときに、呼び出し元に制御が戻ります。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-175">The running occurs synchronously, returning control to the caller when the activity is completed or reaches an intermediate state.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a2ae-176">`Execute` メソッドを実装する方法を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-176">The following code example shows an implementation of the `Execute` method.</span></span> <span data-ttu-id="4a2ae-177">この例では Outlook 電子メール メッセージが構築され、送信します。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-177">In this example, an Outlook email message is constructed and sent.</span></span> <span data-ttu-id="4a2ae-178">これは Outlook ワークフロー ウィザード SDK サンプルから抜粋したものです。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-178">This example is from the Outlook Workflow Wizard SDK sample.</span></span> <span data-ttu-id="4a2ae-179">詳細については、次を参照してください。 [Outlook ワークフロー ウィザード サンプル](http://msdn.microsoft.com/library/7b2ba92b-8456-43f3-87fc-184ffdec4408)です。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-179">For more information, see [Outlook Workflow Wizard Sample](http://msdn.microsoft.com/library/7b2ba92b-8456-43f3-87fc-184ffdec4408).</span></span>  
  
 [!code-csharp[WF_Samples#98](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#98)]
 [!code-vb[WF_Samples#98](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#98)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Executing">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs&gt; Executing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs&gt; Executing" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.ComponentModel.Activity.Executing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Executing As EventHandler(Of ActivityExecutionStatusChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::ComponentModel::ActivityExecutionStatusChangedEventArgs ^&gt; ^ Executing;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4a2ae-180"><see cref="T:System.Workflow.ComponentModel.Activity" /> の実行時に発生します。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-180">Occurs when the <see cref="T:System.Workflow.ComponentModel.Activity" /> is run.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a2ae-181">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-181">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="4a2ae-182">詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)です。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-182">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="4a2ae-183"><xref:System.Workflow.ComponentModel.Activity.Executing> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-183">The <xref:System.Workflow.ComponentModel.Activity.Executing> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="4a2ae-184">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-184">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="4a2ae-185">派生クラスで <see cref="E:System.Workflow.ComponentModel.Activity.Executing" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="E:System.Workflow.ComponentModel.Activity.Executing" /> メソッドを必ず呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-185">When overriding <see cref="E:System.Workflow.ComponentModel.Activity.Executing" /> in a derived class, make sure to call the base class <see cref="E:System.Workflow.ComponentModel.Activity.Executing" /> method so that registered delegates receive the event.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ExecutingEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty ExecutingEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty ExecutingEvent" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.ComponentModel.Activity.ExecutingEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ExecutingEvent As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ ExecutingEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4a2ae-186">アクティビティの実行時に発生する、<see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> イベントを対象とする <see cref="E:System.Workflow.ComponentModel.Activity.Executing" /> を表します。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-186">Represents the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> that targets the <see cref="E:System.Workflow.ComponentModel.Activity.Executing" /> event, which occurs when the activity is executed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a2ae-187">この型の各パブリック プロパティとイベントには、対応する依存プロパティの解決によって間接的にアクセスします。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-187">You indirectly access each public property and event of this type by the resolution of a corresponding dependency property.</span></span> <span data-ttu-id="4a2ae-188">この依存プロパティは、`XProperty` または `XEvent` という名前のパブリックな静的フィールドです。X は対応するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-188">This dependency property is the public static field named `XProperty` or `XEvent`, where X is the corresponding property.</span></span>  
  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecutionResult">
      <MemberSignature Language="C#" Value="public System.Workflow.ComponentModel.ActivityExecutionResult ExecutionResult { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Workflow.ComponentModel.ActivityExecutionResult ExecutionResult" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExecutionResult As ActivityExecutionResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::ComponentModel::ActivityExecutionResult ExecutionResult { System::Workflow::ComponentModel::ActivityExecutionResult get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.ActivityExecutionResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4a2ae-189">このインスタンスを最後に実行した際の <see cref="T:System.Workflow.ComponentModel.ActivityExecutionResult" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-189">Gets the <see cref="T:System.Workflow.ComponentModel.ActivityExecutionResult" /> of the last attempt to run this instance.</span></span></summary>
        <value><span data-ttu-id="4a2ae-190">このインスタンスを最後に実行した際の <see cref="T:System.Workflow.ComponentModel.ActivityExecutionResult" />。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-190">The <see cref="T:System.Workflow.ComponentModel.ActivityExecutionResult" /> of the last attempt to run this instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a2ae-191">このプロパティは、ワークフロー インスタンスが実行されている場合のみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-191">This property is only useful when a workflow instance is running.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecutionStatus">
      <MemberSignature Language="C#" Value="public System.Workflow.ComponentModel.ActivityExecutionStatus ExecutionStatus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Workflow.ComponentModel.ActivityExecutionStatus ExecutionStatus" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExecutionStatus As ActivityExecutionStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::ComponentModel::ActivityExecutionStatus ExecutionStatus { System::Workflow::ComponentModel::ActivityExecutionStatus get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.ActivityExecutionStatus</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4a2ae-192">このインスタンスの、現在の <see cref="T:System.Workflow.ComponentModel.ActivityExecutionStatus" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-192">Gets the current <see cref="T:System.Workflow.ComponentModel.ActivityExecutionStatus" /> of this instance.</span></span></summary>
        <value><span data-ttu-id="4a2ae-193">このインスタンスの、現在の <see cref="T:System.Workflow.ComponentModel.ActivityExecutionStatus" />。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-193">The current <see cref="T:System.Workflow.ComponentModel.ActivityExecutionStatus" /> of this instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a2ae-194">このプロパティは、ワークフロー インスタンスが実行されている場合のみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-194">This property is only useful when a workflow instance is running.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Faulting">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs&gt; Faulting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs&gt; Faulting" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.ComponentModel.Activity.Faulting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Faulting As EventHandler(Of ActivityExecutionStatusChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::ComponentModel::ActivityExecutionStatusChangedEventArgs ^&gt; ^ Faulting;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4a2ae-195">インスタンスの実行中、例外が発生したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-195">Occurs when an exception is raised during the running of the instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a2ae-196">イベント処理の詳細については、次を参照してください。[イベントの利用](https://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67(v=vs.100))です。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-196">For more information about handling events, see [Consuming Events](https://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67(v=vs.100)).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FaultingEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty FaultingEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty FaultingEvent" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.ComponentModel.Activity.FaultingEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FaultingEvent As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ FaultingEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4a2ae-197"><see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> イベントを表す <see cref="E:System.Workflow.ComponentModel.Activity.Faulting" />。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-197">The <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> that represents the <see cref="E:System.Workflow.ComponentModel.Activity.Faulting" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a2ae-198">この型の各パブリック プロパティとイベントには、対応する依存プロパティの解決によって間接的にアクセスします。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-198">You indirectly access each public property and event of this type by the resolution of a corresponding dependency property.</span></span> <span data-ttu-id="4a2ae-199">この依存プロパティは、`XProperty` または `XEvent` という名前のパブリックな静的フィールドです。X は対応するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-199">This dependency property is the public static field named `XProperty` or `XEvent`, where X is the corresponding property.</span></span>  
  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetActivityByName">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4a2ae-200">指定された名前の <see cref="T:System.Workflow.ComponentModel.Activity" /> インスタンスを検索して返します。検索範囲は、このインスタンスのルート アクティビティ内、つまりワークフロー内で、現在動作中のアクティビティ全体です。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-200">Returns the instance of the <see cref="T:System.Workflow.ComponentModel.Activity" /> whose name is requested from the set of all activities running under the root activity of this instance that is within the workflow.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a2ae-201">カスタム アクティビティのコンストラクター内からの `GetActivityByName` 呼び出しはサポートされていません。予期しない結果が生じる場合があります。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-201">Calling `GetActivityByName` from within the constructor of a custom activity is not supported and can have unexpected results.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetActivityByName">
      <MemberSignature Language="C#" Value="public System.Workflow.ComponentModel.Activity GetActivityByName (string activityQualifiedName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.ComponentModel.Activity GetActivityByName(string activityQualifiedName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetActivityByName (activityQualifiedName As String) As Activity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::ComponentModel::Activity ^ GetActivityByName(System::String ^ activityQualifiedName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Activity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activityQualifiedName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="activityQualifiedName"><span data-ttu-id="4a2ae-202">検索の対象となる <see cref="T:System.Workflow.ComponentModel.Activity" /> の名前。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-202">The name of the <see cref="T:System.Workflow.ComponentModel.Activity" /> to search for.</span></span></param>
        <summary><span data-ttu-id="4a2ae-203">指定された名前の <see cref="T:System.Workflow.ComponentModel.Activity" /> インスタンスを検索して返します。検索範囲は、このインスタンスのルート アクティビティ内、つまりワークフロー内で、現在動作中のアクティビティ全体です。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-203">Returns the instance of the <see cref="T:System.Workflow.ComponentModel.Activity" /> whose name is requested from the set of all activities running under the root activity of this instance, which is within the workflow.</span></span></summary>
        <returns><span data-ttu-id="4a2ae-204">指定された名前の <see cref="T:System.Workflow.ComponentModel.Activity" /> インスタンス。検索範囲は、このインスタンスのルート アクティビティ内で、現在動作中のアクティビティ全体です。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-204">The instance of the <see cref="T:System.Workflow.ComponentModel.Activity" /> whose name is requested from the set of all activities running under the root activity of this instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a2ae-205">カスタム アクティビティのコンストラクター内からの `GetActivityByName` 呼び出しはサポートされていません。予期しない結果が生じる場合があります。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-205">Calling `GetActivityByName` from within the constructor of a custom activity is not supported and can have unexpected results.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4a2ae-206"><paramref name="activityQualifiedID" /> が null 参照 (Visual Basic の場合は <see langword="Nothing" />) です。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-206"><paramref name="activityQualifiedID" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetActivityByName">
      <MemberSignature Language="C#" Value="public System.Workflow.ComponentModel.Activity GetActivityByName (string activityQualifiedName, bool withinThisActivityOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.ComponentModel.Activity GetActivityByName(string activityQualifiedName, bool withinThisActivityOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetActivityByName (activityQualifiedName As String, withinThisActivityOnly As Boolean) As Activity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::ComponentModel::Activity ^ GetActivityByName(System::String ^ activityQualifiedName, bool withinThisActivityOnly);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Activity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activityQualifiedName" Type="System.String" />
        <Parameter Name="withinThisActivityOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="activityQualifiedName"><span data-ttu-id="4a2ae-207">検索の対象となる <see cref="T:System.Workflow.ComponentModel.Activity" /> の名前。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-207">The name of the <see cref="T:System.Workflow.ComponentModel.Activity" /> to search for.</span></span></param>
        <param name="withinThisActivityOnly"><span data-ttu-id="4a2ae-208">検索範囲をこのインスタンス内のアクティビティに限定するかどうかを表す値。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-208">The value that indicates whether to limit the search to activities contained within this instance.</span></span></param>
        <summary><span data-ttu-id="4a2ae-209">指定された名前の <see cref="T:System.Workflow.ComponentModel.Activity" /> インスタンスを検索して返します。検索範囲は、第 2 パラメーターが <see cref="T:System.Workflow.ComponentModel.Activity" /> ならばこのインスタンスの <see langword="false" /> のルート アクティビティ内、<see cref="T:System.Workflow.ComponentModel.Activity" /> ならばこの <see langword="true" /> 内で、現在動作中のアクティビティ全体です。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-209">Returns the instance of the <see cref="T:System.Workflow.ComponentModel.Activity" /> whose name is requested from the set of all activities under the root the <see cref="T:System.Workflow.ComponentModel.Activity" /> of this instance if the second parameter is <see langword="false" /> and under the current <see cref="T:System.Workflow.ComponentModel.Activity" /> if the second parameter is <see langword="true" />.</span></span></summary>
        <returns><span data-ttu-id="4a2ae-210">指定された名前の <see cref="T:System.Workflow.ComponentModel.Activity" /> インスタンス。検索範囲は、第 2 パラメーターが <see cref="T:System.Workflow.ComponentModel.Activity" /> ならばこのインスタンスのルート <see langword="false" /> 内、<see cref="T:System.Workflow.ComponentModel.Activity" /> ならばこの <see langword="true" /> 内です。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-210">The instance of the <see cref="T:System.Workflow.ComponentModel.Activity" /> whose name is requested from the set of all activities under the root the <see cref="T:System.Workflow.ComponentModel.Activity" /> of this instance if the second parameter is <see langword="false" /> and under the current <see cref="T:System.Workflow.ComponentModel.Activity" /> if the second parameter is <see langword="true" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a2ae-211">指定された名前の <xref:System.Workflow.ComponentModel.Activity> インスタンスを検索して返します。検索範囲は、第 2 パラメーターが <xref:System.Workflow.ComponentModel.Activity> ならばこのインスタンスの `false` のルート アクティビティ内、<xref:System.Workflow.ComponentModel.Activity> ならばこの `true` 内で、現在動作中のアクティビティ全体です。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-211">Returns the instance of the <xref:System.Workflow.ComponentModel.Activity> whose name is requested from the set of all activities under the root the <xref:System.Workflow.ComponentModel.Activity> of this instance if the second parameter is `false` and under the current <xref:System.Workflow.ComponentModel.Activity> if the second parameter is `true`.</span></span>  
  
 <span data-ttu-id="4a2ae-212">カスタム アクティビティのコンストラクター内からの `GetActivityByName` 呼び出しはサポートされていません。予期しない結果が生じる場合があります。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-212">Calling `GetActivityByName` from within the constructor of a custom activity is not supported and can have unexpected results.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4a2ae-213"><paramref name="activityQualifiedID" /> が null 参照 (Visual Basic の場合は <see langword="Nothing" />) です。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-213"><paramref name="activityQualifiedID" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HandleFault">
      <MemberSignature Language="C#" Value="protected internal virtual System.Workflow.ComponentModel.ActivityExecutionStatus HandleFault (System.Workflow.ComponentModel.ActivityExecutionContext executionContext, Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance valuetype System.Workflow.ComponentModel.ActivityExecutionStatus HandleFault(class System.Workflow.ComponentModel.ActivityExecutionContext executionContext, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Activity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Workflow::ComponentModel::ActivityExecutionStatus HandleFault(System::Workflow::ComponentModel::ActivityExecutionContext ^ executionContext, Exception ^ exception);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.ActivityExecutionStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executionContext" Type="System.Workflow.ComponentModel.ActivityExecutionContext" />
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="executionContext"><span data-ttu-id="4a2ae-214">このインスタンスの <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-214">The <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> for this instance.</span></span></param>
        <param name="exception"><span data-ttu-id="4a2ae-215">このエラーの原因となった <see cref="T:System.Exception" />。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-215">The <see cref="T:System.Exception" /> that caused this fault.</span></span></param>
        <summary><span data-ttu-id="4a2ae-216">このインスタンスの実行のコンテキスト内で例外が発生したときに呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-216">Called when an exception is raised within the context of the execution of this instance.</span></span></summary>
        <returns><span data-ttu-id="4a2ae-217">このインスタンスをキャンセルしようとした結果生成された <see cref="T:System.Workflow.ComponentModel.ActivityExecutionStatus" />。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-217">The <see cref="T:System.Workflow.ComponentModel.ActivityExecutionStatus" /> that results from an attempt to cancel this instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a2ae-218">このメソッドをオーバーライドしなければ、<xref:System.Workflow.ComponentModel.Activity.Cancel%2A> メソッドを呼び出してその結果を返す、という動作になります。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-218">The default method tries to call the <xref:System.Workflow.ComponentModel.Activity.Cancel%2A> method and returns the result of this attempt.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4a2ae-219"><paramref name="exception" /> が null 参照 (Visual Basic の場合は <see langword="Nothing" />) です。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-219"><paramref name="exception" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected internal virtual void Initialize (IServiceProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Initialize(class System.IServiceProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Activity.Initialize(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub Initialize (provider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void Initialize(IServiceProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="4a2ae-220">初期化サービスを提供する <see cref="T:System.IServiceProvider" />。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-220">The <see cref="T:System.IServiceProvider" /> that provides the initialization service.</span></span></param>
        <summary><span data-ttu-id="4a2ae-221">新しいワークフロー インスタンスを構築する際、アクティビティを初期化するために、ワークフロー ランタイムが呼び出します。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-221">Called by the workflow runtime to initialize an activity during the construction of a new workflow instance.</span></span> <span data-ttu-id="4a2ae-222">このメソッドは、動的に <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> を構築する際に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-222">This method is called during the construction of a dynamic <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4a2ae-223"><paramref name="provider" /> が null 参照 (Visual Basic の場合は <see langword="Nothing" />) です。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-223"><paramref name="provider" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Invoke&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4a2ae-224"><see cref="T:System.EventHandler" /> または <see cref="T:System.Workflow.ComponentModel.IActivityEventListener`1" /> を定期受信し、そのデリゲートを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-224">Subscribes an <see cref="T:System.EventHandler" /> or an <see cref="T:System.Workflow.ComponentModel.IActivityEventListener`1" /> and invokes that delegate.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Invoke&lt;T&gt;">
      <MemberSignature Language="C#" Value="protected internal void Invoke&lt;T&gt; (EventHandler&lt;T&gt; handler, T e) where T : EventArgs;" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void Invoke&lt;(class System.EventArgs) T&gt;(class System.EventHandler`1&lt;!!T&gt; handler, !!T e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub Invoke(Of T As EventArgs) (handler As EventHandler(Of T), e As T)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA;generic &lt;typename T&gt;&#xA; where T : EventArgs void Invoke(EventHandler&lt;T&gt; ^ handler, T e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.EventArgs</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="handler" Type="System.EventHandler&lt;T&gt;" />
        <Parameter Name="e" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="4a2ae-225">指定された型。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-225">The specified type.</span></span></typeparam>
        <param name="handler"><span data-ttu-id="4a2ae-226">呼び出す <see cref="T:System.EventHandler" />。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-226">The <see cref="T:System.EventHandler" /> to be invoked.</span></span></param>
        <param name="e"><span data-ttu-id="4a2ae-227">このイベントに関連付ける <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-227">The <see cref="T:System.EventArgs" /> to associate with this event</span></span></param>
        <summary><span data-ttu-id="4a2ae-228"><see cref="T:System.EventHandler" /> を定期受信し、そのデリゲートを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-228">Subscribes an <see cref="T:System.EventHandler" /> and invokes that delegate.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke&lt;T&gt;">
      <MemberSignature Language="C#" Value="protected internal void Invoke&lt;T&gt; (System.Workflow.ComponentModel.IActivityEventListener&lt;T&gt; eventListener, T e) where T : EventArgs;" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void Invoke&lt;(class System.EventArgs) T&gt;(class System.Workflow.ComponentModel.IActivityEventListener`1&lt;!!T&gt; eventListener, !!T e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub Invoke(Of T As EventArgs) (eventListener As IActivityEventListener(Of T), e As T)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA;generic &lt;typename T&gt;&#xA; where T : EventArgs void Invoke(System::Workflow::ComponentModel::IActivityEventListener&lt;T&gt; ^ eventListener, T e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.EventArgs</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="eventListener" Type="System.Workflow.ComponentModel.IActivityEventListener&lt;T&gt;" />
        <Parameter Name="e" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="4a2ae-229">指定された型。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-229">The specified type.</span></span></typeparam>
        <param name="eventListener"><span data-ttu-id="4a2ae-230">呼び出す <see cref="T:System.Workflow.ComponentModel.IActivityEventListener`1" />。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-230">The <see cref="T:System.Workflow.ComponentModel.IActivityEventListener`1" /> to be invoked.</span></span></param>
        <param name="e"><span data-ttu-id="4a2ae-231">このイベントに関連付ける <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-231">The <see cref="T:System.EventArgs" /> to associate with this event</span></span></param>
        <summary><span data-ttu-id="4a2ae-232"><see cref="T:System.Workflow.ComponentModel.IActivityEventListener`1" /> を定期受信し、そのデリゲートを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-232">Subscribes an <see cref="T:System.Workflow.ComponentModel.IActivityEventListener`1" /> and invokes that delegate.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDynamicActivity">
      <MemberSignature Language="C#" Value="public bool IsDynamicActivity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDynamicActivity" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDynamicActivity As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDynamicActivity { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4a2ae-233">アクティビティがワークフロー インスタンスの既定の <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> で実行されているかどうかに関する情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-233">Gets information about whether the activity is executing within the default <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> of the workflow instance.</span></span></summary>
        <value><span data-ttu-id="4a2ae-234">アクティビティがワークフロー インスタンスの既定の <see langword="false" /> で実行されていれば <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />、そうでなければ <see langword="true" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-234">Returns <see langword="false" /> if the activity is executing within the default <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> of the workflow instance, otherwise returns <see langword="true" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4a2ae-235"><see cref="T:System.Workflow.ComponentModel.Activity" /> から <see cref="T:System.IO.Stream" /> のインスタンスを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-235">Loads an instance of an <see cref="T:System.Workflow.ComponentModel.Activity" /> from a <see cref="T:System.IO.Stream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="4a2ae-236">信頼できないデータをこのメソッドを呼び出すと、セキュリティ上のリスクです。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-236">Calling this method with untrusted data is a security risk.</span></span> <span data-ttu-id="4a2ae-237">このメソッドでは、信頼されたデータだけです。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-237">Call this method only with trusted data.</span></span> <span data-ttu-id="4a2ae-238">詳細については、次を参照してください。[データ検証](https://www.owasp.org/index.php/Data_Validation)です。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-238">For more information, see [Data Validation](https://www.owasp.org/index.php/Data_Validation).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static System.Workflow.ComponentModel.Activity Load (System.IO.Stream stream, System.Workflow.ComponentModel.Activity outerActivity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Workflow.ComponentModel.Activity Load(class System.IO.Stream stream, class System.Workflow.ComponentModel.Activity outerActivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Workflow::ComponentModel::Activity ^ Load(System::IO::Stream ^ stream, System::Workflow::ComponentModel::Activity ^ outerActivity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Activity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="outerActivity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="4a2ae-239">読み込み元の <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-239">The <see cref="T:System.IO.Stream" /> from which to load.</span></span></param>
        <param name="outerActivity"><span data-ttu-id="4a2ae-240">逆シリアル化された <see cref="T:System.Workflow.ComponentModel.Activity" /> のコンテキストを保持している <see cref="T:System.Workflow.ComponentModel.Activity" />。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-240">The <see cref="T:System.Workflow.ComponentModel.Activity" /> that owns the context for the deserialized <see cref="T:System.Workflow.ComponentModel.Activity" />.</span></span></param>
        <summary><span data-ttu-id="4a2ae-241"><see cref="T:System.Workflow.ComponentModel.Activity" /> から <see cref="T:System.IO.Stream" /> のインスタンスを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-241">Loads an instance of an <see cref="T:System.Workflow.ComponentModel.Activity" /> from a <see cref="T:System.IO.Stream" />.</span></span></summary>
        <returns><span data-ttu-id="4a2ae-242"><see cref="T:System.Workflow.ComponentModel.Activity" /> の <see cref="T:System.IO.Stream" /> のインスタンス。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-242">An instance of an <see cref="T:System.Workflow.ComponentModel.Activity" /> from a <see cref="T:System.IO.Stream" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="4a2ae-243">信頼できないデータをこのメソッドを呼び出すと、セキュリティ上のリスクです。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-243">Calling this method with untrusted data is a security risk.</span></span> <span data-ttu-id="4a2ae-244">このメソッドでは、信頼されたデータだけです。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-244">Call this method only with trusted data.</span></span> <span data-ttu-id="4a2ae-245">詳細については、次を参照してください。[データ検証](https://www.owasp.org/index.php/Data_Validation)です。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-245">For more information, see [Data Validation](https://www.owasp.org/index.php/Data_Validation).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4a2ae-246"><paramref name="stream" /> が null 参照 (Visual Basic の場合は <see langword="Nothing" />) です。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-246"><paramref name="stream" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static System.Workflow.ComponentModel.Activity Load (System.IO.Stream stream, System.Workflow.ComponentModel.Activity outerActivity, System.Runtime.Serialization.IFormatter formatter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Workflow.ComponentModel.Activity Load(class System.IO.Stream stream, class System.Workflow.ComponentModel.Activity outerActivity, class System.Runtime.Serialization.IFormatter formatter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity,System.Runtime.Serialization.IFormatter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Workflow::ComponentModel::Activity ^ Load(System::IO::Stream ^ stream, System::Workflow::ComponentModel::Activity ^ outerActivity, System::Runtime::Serialization::IFormatter ^ formatter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Activity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="outerActivity" Type="System.Workflow.ComponentModel.Activity" />
        <Parameter Name="formatter" Type="System.Runtime.Serialization.IFormatter" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="4a2ae-247">読み込み元の <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-247">The target <see cref="T:System.IO.Stream" /> of the load operation.</span></span></param>
        <param name="outerActivity"><span data-ttu-id="4a2ae-248">逆シリアル化された <see cref="T:System.Workflow.ComponentModel.Activity" /> のコンテキストを保持している <see cref="T:System.Workflow.ComponentModel.Activity" />。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-248">The <see cref="T:System.Workflow.ComponentModel.Activity" /> that owns the context for the deserialized <see cref="T:System.Workflow.ComponentModel.Activity" />.</span></span></param>
        <param name="formatter"><span data-ttu-id="4a2ae-249"><see cref="T:System.Runtime.Serialization.IFormatter" /> からストリームを読み込むために使う <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-249">The <see cref="T:System.Runtime.Serialization.IFormatter" /> used to read from the <see cref="T:System.IO.Stream" />.</span></span></param>
        <summary><span data-ttu-id="4a2ae-250"><see cref="T:System.Workflow.ComponentModel.Activity" /> のインスタンスを <see cref="T:System.IO.Stream" /> から読み込みます。逆シリアル化の機能を提供する独自の <see cref="T:System.Runtime.Serialization.IFormatter" /> を使います。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-250">Loads an instance of an <see cref="T:System.Workflow.ComponentModel.Activity" /> from a <see cref="T:System.IO.Stream" /> using the custom <see cref="T:System.Runtime.Serialization.IFormatter" /> for deserialization.</span></span></summary>
        <returns><span data-ttu-id="4a2ae-251"><see cref="T:System.Workflow.ComponentModel.Activity" /> の <see cref="T:System.IO.Stream" /> のインスタンス。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-251">An instance of an <see cref="T:System.Workflow.ComponentModel.Activity" /> from a <see cref="T:System.IO.Stream" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="4a2ae-252">信頼できないデータをこのメソッドを呼び出すと、セキュリティ上のリスクです。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-252">Calling this method with untrusted data is a security risk.</span></span> <span data-ttu-id="4a2ae-253">このメソッドでは、信頼されたデータだけです。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-253">Call this method only with trusted data.</span></span> <span data-ttu-id="4a2ae-254">詳細については、次を参照してください。[データ検証](https://www.owasp.org/index.php/Data_Validation)です。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-254">For more information, see [Data Validation](https://www.owasp.org/index.php/Data_Validation).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4a2ae-255"><paramref name="formatter" /> が null 参照 (<see langword="Nothing" />) です。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-255"><paramref name="formatter" /> is a null reference (<see langword="Nothing" />).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Activity.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ParenthesizePropertyName(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4a2ae-256">このインスタンスの名前を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-256">Gets or sets the name of this instance.</span></span> <span data-ttu-id="4a2ae-257">この名前は、ワークフロー プロジェクトの作成に使用されたプログラミング言語の変数の名前付け規則に準拠している必要があります。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-257">This name must conform to the variable naming convention of the programming language that is being used in the Workflow project.</span></span></summary>
        <value><span data-ttu-id="4a2ae-258">このインスタンスの名前。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-258">The name of this instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a2ae-259">既定値は空文字列です。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-259">Default value for this is the empty string.</span></span>  
  
 <span data-ttu-id="4a2ae-260">このプロパティはメタ プロパティです。つまり、実行時には変更できません。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-260">This property is a meta property, which means it cannot be changed at runtime.</span></span> <span data-ttu-id="4a2ae-261">メタ プロパティは、実行時にプロパティ インスタンスが作成された後は変更されません。そのため、デザイン時にプロパティをリテラル値に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-261">Meta properties do not change after a property instance is created at runtime, so the property must be set to a literal value at design time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a2ae-262">次のコードは、アクティビティを作成し、これを子として複合アクティビティに追加し、<xref:System.Workflow.ComponentModel.Activity.Name%2A> を設定する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-262">The following code shows how to create activities and add them as children to a composite activity and set the value for <xref:System.Workflow.ComponentModel.Activity.Name%2A>.</span></span>  
  
 <span data-ttu-id="4a2ae-263">このコード例は、ThrowWorkFlow.cs ファイルから抜粋したスローの SDK サンプルの一部です。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-263">This code example is part of the Throw SDK sample and is from the ThrowWorkFlow.cs file.</span></span> <span data-ttu-id="4a2ae-264">詳細については、次を参照してください。[スロー サンプル](http://msdn.microsoft.com/library/aa5b9546-ec95-4e43-8337-20e26f8d71cc)です。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-264">For more information, see [Throw Sample](http://msdn.microsoft.com/library/aa5b9546-ec95-4e43-8337-20e26f8d71cc).</span></span>  
  
 [!code-csharp[WF_Samples#179](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#179)]
 [!code-vb[WF_Samples#179](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#179)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnActivityExecutionContextLoad">
      <MemberSignature Language="C#" Value="protected internal virtual void OnActivityExecutionContextLoad (IServiceProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnActivityExecutionContextLoad(class System.IServiceProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Activity.OnActivityExecutionContextLoad(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnActivityExecutionContextLoad (provider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnActivityExecutionContextLoad(IServiceProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="4a2ae-265">サービスを提供する <see cref="T:System.IServiceProvider" />。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-265">The <see cref="T:System.IServiceProvider" /> that provides the service.</span></span></param>
        <summary><span data-ttu-id="4a2ae-266"><see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> を読み込む都度、ワークフロー ランタイムが呼び出します。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-266">Called by the workflow runtime whenever an <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> is loaded.</span></span> <span data-ttu-id="4a2ae-267"><see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> の作成時ばかりでなく、永続ストレージからワークフロー インスタンスを読み込んで <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> を復元したときにも呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-267">For example, this method is called during the creation of an <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> as well as every time the <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> is reincarnated when a workflow instance is loaded from persistent storage.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnActivityExecutionContextUnload">
      <MemberSignature Language="C#" Value="protected internal virtual void OnActivityExecutionContextUnload (IServiceProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnActivityExecutionContextUnload(class System.IServiceProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Activity.OnActivityExecutionContextUnload(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnActivityExecutionContextUnload (provider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnActivityExecutionContextUnload(IServiceProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="4a2ae-268">サービスを提供する <see cref="T:System.IServiceProvider" />。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-268">The <see cref="T:System.IServiceProvider" /> that provides the service.</span></span></param>
        <summary><span data-ttu-id="4a2ae-269"><see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> をアンロードする都度、ワークフロー ランタイムが呼び出します。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-269">Called by the workflow runtime whenever an <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> is unloaded.</span></span> <span data-ttu-id="4a2ae-270"><see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> の終了時ばかりでなく、ワークフロー インスタンスを永続ストレージに保存して <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> をアンロードしたときにも呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-270">For example, this method is called during completion of an <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> as well as every time the <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> is unloaded when a workflow instance is persisted.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnClosed">
      <MemberSignature Language="C#" Value="protected virtual void OnClosed (IServiceProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClosed(class System.IServiceProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClosed (provider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClosed(IServiceProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="4a2ae-271">サービスを提供する <see cref="T:System.IServiceProvider" />。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-271">The <see cref="T:System.IServiceProvider" /> that provides the service.</span></span></param>
        <summary><span data-ttu-id="4a2ae-272">アクティビティをクローズド状態に遷移する過程で、ワークフロー ランタイムが呼び出します。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-272">Called by the workflow runtime as part of the activity's transition to the closed state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a2ae-273">このメソッドを使用すると、アクティビティは実行中に利用されたリソースをクリーンアップできます。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-273">This method provides the activity with an opportunity to clean up resources utilized during its execution.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.Workflow.ComponentModel.CompositeActivity Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.CompositeActivity Parent" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Activity.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As CompositeActivity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::ComponentModel::CompositeActivity ^ Parent { System::Workflow::ComponentModel::CompositeActivity ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.CompositeActivity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4a2ae-274">この <see cref="T:System.Workflow.ComponentModel.CompositeActivity" /> を格納している <see cref="T:System.Workflow.ComponentModel.Activity" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-274">Gets the <see cref="T:System.Workflow.ComponentModel.CompositeActivity" /> that contains this <see cref="T:System.Workflow.ComponentModel.Activity" />.</span></span></summary>
        <value><span data-ttu-id="4a2ae-275">この <see cref="T:System.Workflow.ComponentModel.Activity" /> の親である <see cref="T:System.Workflow.ComponentModel.Activity" />。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-275">The <see cref="T:System.Workflow.ComponentModel.Activity" /> that is a parent to this <see cref="T:System.Workflow.ComponentModel.Activity" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a2ae-276">Null 参照を返します。 (`Nothing` Visual Basic で) 場合<xref:System.Workflow.ComponentModel.Activity>がワークフローまたはルート<xref:System.Workflow.ComponentModel.Activity>です。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-276">Returnsa null reference(`Nothing` in Visual Basic) if <xref:System.Workflow.ComponentModel.Activity> is a workflow or a root <xref:System.Workflow.ComponentModel.Activity>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QualifiedName">
      <MemberSignature Language="C#" Value="public string QualifiedName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string QualifiedName" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property QualifiedName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ QualifiedName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4a2ae-277">アクティビティの限定名を取得します。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-277">Gets the qualified name of the activity.</span></span> <span data-ttu-id="4a2ae-278">限定アクティビティ名は、ワークフロー インスタンス内で一意です。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-278">Qualified activity names are always unique in a workflow instance.</span></span></summary>
        <value><span data-ttu-id="4a2ae-279">インスタンスの修飾名。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-279">The qualified name of the instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a2ae-280">修飾名とは、インスタンス名の前に、このインスタンスが属するカスタム アプリケーションの名前を付加したものです。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-280">The qualified name is the name of this instance with the name of the custom activity that contains this instance appended to the front.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseEvent">
      <MemberSignature Language="C#" Value="protected internal void RaiseEvent (System.Workflow.ComponentModel.DependencyProperty dependencyEvent, object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void RaiseEvent(class System.Workflow.ComponentModel.DependencyProperty dependencyEvent, object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub RaiseEvent (dependencyEvent As DependencyProperty, sender As Object, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void RaiseEvent(System::Workflow::ComponentModel::DependencyProperty ^ dependencyEvent, System::Object ^ sender, EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyEvent" Type="System.Workflow.ComponentModel.DependencyProperty" />
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="dependencyEvent"><span data-ttu-id="4a2ae-281">この <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> に関連付けられている <see cref="F:System.Reflection.MemberTypes.Event" />。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-281">The <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> associated with this <see cref="F:System.Reflection.MemberTypes.Event" />.</span></span></param>
        <param name="sender"><span data-ttu-id="4a2ae-282"><see cref="T:System.Object" /> の <see cref="F:System.Reflection.MemberTypes.Event" /> ソース。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-282">The <see cref="T:System.Object" /> source of the <see cref="F:System.Reflection.MemberTypes.Event" />.</span></span></param>
        <param name="e"><span data-ttu-id="4a2ae-283"><see cref="T:System.EventArgs" /> に関連付けられている <see cref="F:System.Reflection.MemberTypes.Event" />。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-283">The <see cref="T:System.EventArgs" /> associated with the <see cref="F:System.Reflection.MemberTypes.Event" />.</span></span></param>
        <summary><span data-ttu-id="4a2ae-284">指定された依存関係プロパティに関連付けられた <see cref="F:System.Reflection.MemberTypes.Event" /> を発生させます。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-284">Raises an <see cref="F:System.Reflection.MemberTypes.Event" /> associated with the specified dependency property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a2ae-285">このメソッドを起動して、先に <xref:System.Workflow.ComponentModel.DependencyProperty> として定義したイベントを発生させるコード例を以下に示します。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-285">The following code invokes this method to raise an event that is defined as a <xref:System.Workflow.ComponentModel.DependencyProperty>.</span></span>  
  
 <span data-ttu-id="4a2ae-286">このコード例では、電子メールの送信アクティビティのサンプルの一部であるし、は、SendEmailActivity.cs ファイルからです。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-286">This code example is part of the Send Email Activity sample and is from the SendEmailActivity.cs file.</span></span> <span data-ttu-id="4a2ae-287">詳細については、次を参照してください[電子メール送信アクティビティのサンプル。](http://msdn.microsoft.com/library/bfb5939e-60a9-4037-af4e-2cea9e654669)</span><span class="sxs-lookup"><span data-stu-id="4a2ae-287">For more information, see [Send Email Activity Sample](http://msdn.microsoft.com/library/bfb5939e-60a9-4037-af4e-2cea9e654669)</span></span>  
  
 [!code-csharp[WF_Samples#233](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#233)]
 [!code-vb[WF_Samples#233](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#233)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseGenericEvent&lt;T&gt;">
      <MemberSignature Language="C#" Value="protected internal void RaiseGenericEvent&lt;T&gt; (System.Workflow.ComponentModel.DependencyProperty dependencyEvent, object sender, T e) where T : EventArgs;" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void RaiseGenericEvent&lt;(class System.EventArgs) T&gt;(class System.Workflow.ComponentModel.DependencyProperty dependencyEvent, object sender, !!T e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub RaiseGenericEvent(Of T As EventArgs) (dependencyEvent As DependencyProperty, sender As Object, e As T)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA;generic &lt;typename T&gt;&#xA; where T : EventArgs void RaiseGenericEvent(System::Workflow::ComponentModel::DependencyProperty ^ dependencyEvent, System::Object ^ sender, T e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.EventArgs</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="dependencyEvent" Type="System.Workflow.ComponentModel.DependencyProperty" />
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="4a2ae-288">指定された型。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-288">The specified type.</span></span></typeparam>
        <param name="dependencyEvent"><span data-ttu-id="4a2ae-289">この <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> に関連付けられている <see cref="F:System.Reflection.MemberTypes.Event" />。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-289">The <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> associated with this <see cref="F:System.Reflection.MemberTypes.Event" />.</span></span></param>
        <param name="sender"><span data-ttu-id="4a2ae-290">イベントのソースである <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-290">The <see cref="T:System.Object" /> source of the event.</span></span></param>
        <param name="e"><span data-ttu-id="4a2ae-291"><see cref="T:System.EventArgs" /> に関連付けられている <see cref="F:System.Reflection.MemberTypes.Event" />。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-291">The <see cref="T:System.EventArgs" /> associated with the <see cref="F:System.Reflection.MemberTypes.Event" />.</span></span></param>
        <summary><span data-ttu-id="4a2ae-292">指定された <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> に関連付けられたイベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-292">Raises the event associated with the referenced <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterForStatusChange">
      <MemberSignature Language="C#" Value="public void RegisterForStatusChange (System.Workflow.ComponentModel.DependencyProperty dependencyProp, System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs&gt; activityStatusChangeListener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterForStatusChange(class System.Workflow.ComponentModel.DependencyProperty dependencyProp, class System.Workflow.ComponentModel.IActivityEventListener`1&lt;class System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs&gt; activityStatusChangeListener) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterForStatusChange (dependencyProp As DependencyProperty, activityStatusChangeListener As IActivityEventListener(Of ActivityExecutionStatusChangedEventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterForStatusChange(System::Workflow::ComponentModel::DependencyProperty ^ dependencyProp, System::Workflow::ComponentModel::IActivityEventListener&lt;System::Workflow::ComponentModel::ActivityExecutionStatusChangedEventArgs ^&gt; ^ activityStatusChangeListener);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyProp" Type="System.Workflow.ComponentModel.DependencyProperty" />
        <Parameter Name="activityStatusChangeListener" Type="System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="dependencyProp"><span data-ttu-id="4a2ae-293">登録する <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-293">The <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> to register.</span></span></param>
        <param name="activityStatusChangeListener"><span data-ttu-id="4a2ae-294">この登録のイベント リスナー インターフェイスを実装しているオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-294">The object that implements the Event Listener interface for this registration.</span></span></param>
        <summary><span data-ttu-id="4a2ae-295">指定された <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> を状態変更イベントに登録します。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-295">Registers the specified <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> for the status change event.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4a2ae-296"><paramref name="dependencyProp" /> が次のいずれでもありません。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-296"><paramref name="dependencyProp" /> is not one of the following:</span></span>  
  
-   <see cref="F:System.Workflow.ComponentModel.Activity.ExecutingEvent" />  
  
-   <see cref="F:System.Workflow.ComponentModel.Activity.CancelingEvent" />  
  
-   <see cref="F:System.Workflow.ComponentModel.Activity.ClosedEvent" />  
  
-   <see cref="F:System.Workflow.ComponentModel.Activity.CompensatingEvent" />  
  
-   <see cref="F:System.Workflow.ComponentModel.Activity.FaultingEvent" />  
  
-   <see cref="F:System.Workflow.ComponentModel.Activity.StatusChangedEvent" /></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Save">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4a2ae-297"><see cref="T:System.Workflow.ComponentModel.Activity" /> のコピーを <see cref="T:System.IO.Stream" /> に保存します。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-297">Saves a copy of the <see cref="T:System.Workflow.ComponentModel.Activity" /> to a <see cref="T:System.IO.Stream" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::IO::Stream ^ stream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="4a2ae-298"><see cref="T:System.IO.Stream" /> の保存先となる <see cref="T:System.Workflow.ComponentModel.Activity" />。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-298">The <see cref="T:System.IO.Stream" /> to which to save the <see cref="T:System.Workflow.ComponentModel.Activity" />.</span></span></param>
        <summary><span data-ttu-id="4a2ae-299"><see cref="T:System.Workflow.ComponentModel.Activity" /> を <see cref="T:System.IO.Stream" /> に書き込んで永続化します。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-299">Writes the <see cref="T:System.Workflow.ComponentModel.Activity" /> to a <see cref="T:System.IO.Stream" /> for persistence.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4a2ae-300"><paramref name="stream" /> が null 参照 (Visual Basic の場合は <see langword="Nothing" />) です。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-300"><paramref name="stream" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.IO.Stream stream, System.Runtime.Serialization.IFormatter formatter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(class System.IO.Stream stream, class System.Runtime.Serialization.IFormatter formatter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::IO::Stream ^ stream, System::Runtime::Serialization::IFormatter ^ formatter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="formatter" Type="System.Runtime.Serialization.IFormatter" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="4a2ae-301">保存操作の対象となる <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-301">The target <see cref="T:System.IO.Stream" /> of the save operation.</span></span></param>
        <param name="formatter"><span data-ttu-id="4a2ae-302">シリアル化に使用するバイナリまたはカスタム <see cref="T:System.Runtime.Serialization.IFormatter" />。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-302">The binary or custom <see cref="T:System.Runtime.Serialization.IFormatter" /> for the serialization.</span></span></param>
        <summary><span data-ttu-id="4a2ae-303"><see cref="T:System.Workflow.ComponentModel.Activity" /> を <see cref="T:System.IO.Stream" /> に書き込んで永続化します。シリアル化の機能を提供する独自の <see cref="T:System.Runtime.Serialization.IFormatter" /> を使います。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-303">Writes the <see cref="T:System.Workflow.ComponentModel.Activity" /> to a <see cref="T:System.IO.Stream" /> for persistence using the custom <see cref="T:System.Runtime.Serialization.IFormatter" /> provided for serialization.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a2ae-304">SOAP フォーマッタは、Windows Workflow Foundation ではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-304">Soap formatters are not supported by Windows Workflow Foundation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4a2ae-305"><paramref name="formatter" /> が null 参照 (<see langword="Nothing" />) です。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-305"><paramref name="formatter" /> is a null reference (<see langword="Nothing" />).</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4a2ae-306">このインスタンスはデザイン モードです。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-306">This instance is in design mode.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="StatusChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs&gt; StatusChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs&gt; StatusChanged" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StatusChanged As EventHandler(Of ActivityExecutionStatusChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::ComponentModel::ActivityExecutionStatusChangedEventArgs ^&gt; ^ StatusChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4a2ae-307">実行中の <see cref="T:System.Workflow.ComponentModel.ActivityExecutionStatus" /> の <see cref="T:System.Workflow.ComponentModel.Activity" /> が変更された場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-307">Occurs when the <see cref="T:System.Workflow.ComponentModel.ActivityExecutionStatus" /> of a running <see cref="T:System.Workflow.ComponentModel.Activity" /> changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a2ae-308">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-308">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="4a2ae-309">詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)です。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-309">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="4a2ae-310"><xref:System.Workflow.ComponentModel.Activity.StatusChanged> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-310">The <xref:System.Workflow.ComponentModel.Activity.StatusChanged> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="4a2ae-311">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-311">This is the preferred technique for handling the event in a derived class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4a2ae-312">アクティビティ (アクティビティ A) が別のアクティビティ (アクティビティ B) の `StatusChanged` イベントを定期受信した場合、関連付けられた `Activity` の <xref:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs> プロパティは、定期受信先の アクティビティ (アクティビティ B) を参照し、関連付けられた `Sender` オブジェクトは、定期受信元のアクティビティ (アクティビティ A) の実行コンテキストを参照します。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-312">When an activity (Activity A) subscribes to a different activity's (Activity B) `StatusChanged` event, the `Activity` property of the associated <xref:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs> refers to the activity subscribed to (Activity B), and the associated `Sender` object refers to the execution context of the subscribing activity (Activity A).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="4a2ae-313">派生クラスで <see cref="E:System.Workflow.ComponentModel.Activity.StatusChanged" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="E:System.Workflow.ComponentModel.Activity.StatusChanged" /> メソッドを必ず呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-313">When overriding <see cref="E:System.Workflow.ComponentModel.Activity.StatusChanged" /> in a derived class, make sure to call the base class <see cref="E:System.Workflow.ComponentModel.Activity.StatusChanged" /> method so that registered delegates receive the event.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="StatusChangedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty StatusChangedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty StatusChangedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.ComponentModel.Activity.StatusChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StatusChangedEvent As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ StatusChangedEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4a2ae-314">
          <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> イベントをターゲットとする <see cref="E:System.Workflow.ComponentModel.Activity.StatusChanged" /> を表します。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-314">Represents the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> that targets the <see cref="E:System.Workflow.ComponentModel.Activity.StatusChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a2ae-315">この型の各パブリック プロパティとイベントには、対応する依存プロパティの解決によって間接的にアクセスします。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-315">You indirectly access each public property and event of this type by the resolution of a corresponding dependency property.</span></span> <span data-ttu-id="4a2ae-316">この依存プロパティは、`XProperty` または `XEvent` という名前のパブリックな静的フィールドです。X は対応するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-316">This dependency property is the public static field named `XProperty` or `XEvent`, where X is the corresponding property.</span></span>  
  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Activity.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4a2ae-317">このインスタンスを表す文字列を返します。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-317">Provides a string that represents this instance.</span></span></summary>
        <returns><span data-ttu-id="4a2ae-318">このインスタンス。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-318">This instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a2ae-319"><xref:System.Workflow.ComponentModel.Activity.QualifiedName%2A> に、このインスタンスの型の <xref:System.Type.FullName%2A> を連結した文字列を返します。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-319">The string returned is a combination of the <xref:System.Workflow.ComponentModel.Activity.QualifiedName%2A> and the <xref:System.Type.FullName%2A> of the type of this instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TrackData">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4a2ae-320">ランタイム追跡インフラストラクチャに保留の追跡情報を通知します。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-320">Informs the run-time tracking infrastructure of pending tracking information.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TrackData">
      <MemberSignature Language="C#" Value="protected void TrackData (object userData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void TrackData(object userData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub TrackData (userData As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void TrackData(System::Object ^ userData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userData" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="userData">
          <span data-ttu-id="4a2ae-321">追跡情報を格納している <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-321"><see cref="T:System.Object" /> that contains the tracking information.</span></span></param>
        <summary><span data-ttu-id="4a2ae-322">ランタイム追跡インフラストラクチャに保留の追跡情報を通知します。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-322">Informs the run-time tracking infrastructure of pending tracking information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a2ae-323">次の例は、`TrackData` メソッドの呼び出しを示しています。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-323">The following example shows a call to the `TrackData` method.</span></span> <span data-ttu-id="4a2ae-324">この例は、終了追跡サービスの SDK サンプルです。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-324">This example is from the Termination Tracking Service SDK sample.</span></span> <span data-ttu-id="4a2ae-325">詳細については、次を参照してください。[終了追跡サービスのサンプル](http://msdn.microsoft.com/library/29b7c0d7-cece-4bb9-96d0-c5b6c6e14439)です。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-325">For more information, see [Termination Tracking Service Sample](http://msdn.microsoft.com/library/29b7c0d7-cece-4bb9-96d0-c5b6c6e14439).</span></span>  
  
 [!code-csharp[WF_Samples#118](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#118)]
 [!code-vb[WF_Samples#118](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#118)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4a2ae-326"><paramref name="userData" /> が null 参照 (Visual Basic の場合は <see langword="Nothing" />) です。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-326"><paramref name="userData" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TrackData">
      <MemberSignature Language="C#" Value="protected void TrackData (string userDataKey, object userData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void TrackData(string userDataKey, object userData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub TrackData (userDataKey As String, userData As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void TrackData(System::String ^ userDataKey, System::Object ^ userData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userDataKey" Type="System.String" />
        <Parameter Name="userData" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="userDataKey"><span data-ttu-id="4a2ae-327">変更したユーザー データへのキー。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-327">The key to the user data that has changed.</span></span></param>
        <param name="userData">
          <span data-ttu-id="4a2ae-328">追跡情報を格納している <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-328"><see cref="T:System.Object" /> that contains the tracking information.</span></span></param>
        <summary><span data-ttu-id="4a2ae-329">ランタイム追跡インフラストラクチャに保留の追跡情報を通知します。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-329">Informs the run-time tracking infrastructure of pending tracking information.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4a2ae-330"><paramref name="userData" /> が null 参照 (Visual Basic の場合は <see langword="Nothing" />) です。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-330"><paramref name="userData" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Uninitialize">
      <MemberSignature Language="C#" Value="protected internal virtual void Uninitialize (IServiceProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Uninitialize(class System.IServiceProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Activity.Uninitialize(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub Uninitialize (provider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void Uninitialize(IServiceProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="4a2ae-331">サービスを提供する <see cref="T:System.IServiceProvider" />。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-331">The <see cref="T:System.IServiceProvider" /> that provides the service.</span></span></param>
        <summary><span data-ttu-id="4a2ae-332">サービス プロバイダーがアクティビティの初期化を解除するメソッドとして、派生クラスでオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-332">When overridden in a derived class, provides un-initialization by a service provider for the activity.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a2ae-333">アクティビティが、初期化の際に割り当てられたリソースを解放するために呼び出します。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-333">This method provides the activity with an opportunity to clean up resources allocated during initialization.</span></span>  
  
 <span data-ttu-id="4a2ae-334"><xref:System.Workflow.ComponentModel.Activity.Uninitialize%2A> は、アクティビティ インスタンスを今後実行することはない、という段階で呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-334"><xref:System.Workflow.ComponentModel.Activity.Uninitialize%2A> is called when an activity instance is guaranteed not to perform any more execution.</span></span> <span data-ttu-id="4a2ae-335"><xref:System.Workflow.ComponentModel.ICompensatableActivity> を実装していないアクティビティでは、アクティビティを閉じた直後、またはワークフローが終了し、以後このアクティビティが実行されることはなくなったときに呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-335">For activities that do not implement <xref:System.Workflow.ComponentModel.ICompensatableActivity>, this occurs immediately after the activity closes, or, if the activity never executed, at workflow completion.</span></span> <span data-ttu-id="4a2ae-336"><xref:System.Workflow.ComponentModel.ICompensatableActivity> アクティビティでは、補正の後、またはワークフローの終了時に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-336">For <xref:System.Workflow.ComponentModel.ICompensatableActivity> activities, this occurs either after compensation or at workflow completion.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterForStatusChange">
      <MemberSignature Language="C#" Value="public void UnregisterForStatusChange (System.Workflow.ComponentModel.DependencyProperty dependencyProp, System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs&gt; activityStatusChangeListener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnregisterForStatusChange(class System.Workflow.ComponentModel.DependencyProperty dependencyProp, class System.Workflow.ComponentModel.IActivityEventListener`1&lt;class System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs&gt; activityStatusChangeListener) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnregisterForStatusChange (dependencyProp As DependencyProperty, activityStatusChangeListener As IActivityEventListener(Of ActivityExecutionStatusChangedEventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UnregisterForStatusChange(System::Workflow::ComponentModel::DependencyProperty ^ dependencyProp, System::Workflow::ComponentModel::IActivityEventListener&lt;System::Workflow::ComponentModel::ActivityExecutionStatusChangedEventArgs ^&gt; ^ activityStatusChangeListener);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyProp" Type="System.Workflow.ComponentModel.DependencyProperty" />
        <Parameter Name="activityStatusChangeListener" Type="System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="dependencyProp"><span data-ttu-id="4a2ae-337">登録解除する <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-337">The <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> to un-register.</span></span></param>
        <param name="activityStatusChangeListener"><span data-ttu-id="4a2ae-338">この登録のイベント リスナー インターフェイスを実装しているオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-338">The object that implements the Event Listener interface for this registration.</span></span></param>
        <summary><span data-ttu-id="4a2ae-339">状態変更イベントから指定された <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> の登録を解除します。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-339">Un-registers the specified <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> for the status change event.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4a2ae-340"><paramref name="dependencyProp" /> が次のいずれでもありません。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-340"><paramref name="dependencyProp" /> is not one of the following:</span></span>  
  
-   <see cref="F:System.Workflow.ComponentModel.Activity.ExecutingEvent" />  
  
-   <see cref="F:System.Workflow.ComponentModel.Activity.CancelingEvent" />  
  
-   <see cref="F:System.Workflow.ComponentModel.Activity.ClosedEvent" />  
  
-   <see cref="F:System.Workflow.ComponentModel.Activity.CompensatingEvent" />  
  
-   <see cref="F:System.Workflow.ComponentModel.Activity.FaultingEvent" />  
  
-   <see cref="F:System.Workflow.ComponentModel.Activity.StatusChangedEvent" /></exception>
      </Docs>
    </Member>
    <Member MemberName="WorkflowInstanceId">
      <MemberSignature Language="C#" Value="protected Guid WorkflowInstanceId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid WorkflowInstanceId" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Activity.WorkflowInstanceId" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property WorkflowInstanceId As Guid" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property Guid WorkflowInstanceId { Guid get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4a2ae-341">インスタンスに関連付けられた <see cref="T:System.Guid" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-341">Gets the <see cref="T:System.Guid" /> associated with the instance.</span></span></summary>
        <value><span data-ttu-id="4a2ae-342">インスタンスに関連付けられた <see cref="T:System.Guid" />。</span><span class="sxs-lookup"><span data-stu-id="4a2ae-342">The <see cref="T:System.Guid" /> associated with the instance.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>