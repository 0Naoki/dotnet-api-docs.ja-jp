<Type Name="ActivityCollection" FullName="System.Workflow.ComponentModel.ActivityCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="475d0e0e4aaa11a84b0ecb960e1a3bb50640bc68" />
    <Meta Name="ms.sourcegitcommit" Value="4b4804968da1dfdf71c501075a5b66957b54f2e8" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/27/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ActivityCollection : System.Collections.Generic.List&lt;System.Workflow.ComponentModel.Activity&gt;, System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;, System.Collections.Generic.IEnumerable&lt;System.Workflow.ComponentModel.Activity&gt;, System.Collections.Generic.IList&lt;System.Workflow.ComponentModel.Activity&gt;, System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ActivityCollection extends System.Collections.Generic.List`1&lt;class System.Workflow.ComponentModel.Activity&gt; implements class System.Collections.Generic.ICollection`1&lt;class System.Workflow.ComponentModel.Activity&gt;, class System.Collections.Generic.IEnumerable`1&lt;class System.Workflow.ComponentModel.Activity&gt;, class System.Collections.Generic.IList`1&lt;class System.Workflow.ComponentModel.Activity&gt;, class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.ComponentModel.ActivityCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ActivityCollection&#xA;Inherits List(Of Activity)&#xA;Implements ICollection(Of Activity), IEnumerable(Of Activity), IList, IList(Of Activity)" />
  <TypeSignature Language="C++ CLI" Value="public ref class ActivityCollection sealed : System::Collections::Generic::List&lt;System::Workflow::ComponentModel::Activity ^&gt;, System::Collections::Generic::ICollection&lt;System::Workflow::ComponentModel::Activity ^&gt;, System::Collections::Generic::IEnumerable&lt;System::Workflow::ComponentModel::Activity ^&gt;, System::Collections::Generic::IList&lt;System::Workflow::ComponentModel::Activity ^&gt;, System::Collections::IList" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Collections.Generic.List&lt;System.Workflow.ComponentModel.Activity&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">System.Workflow.ComponentModel.Activity</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Workflow.ComponentModel.Activity&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IList&lt;System.Workflow.ComponentModel.Activity&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Design.Serialization.DesignerSerializer(typeof(System.Workflow.ComponentModel.Serialization.ActivityCollectionMarkupSerializer), typeof(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="68a52-101">
        <see cref="T:System.Collections.ICollection" /> 型の、厳密に型付けされた <see cref="T:System.Workflow.ComponentModel.Activity" /> をモデル化します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="68a52-101">Models a strongly typed <see cref="T:System.Collections.ICollection" /> of type <see cref="T:System.Workflow.ComponentModel.Activity" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <span data-ttu-id="68a52-102">このクラスを使用して、<xref:System.Workflow.ComponentModel.CompositeActivity> の子アクティビティのリストを表します。</span><span class="sxs-lookup"><span data-stu-id="68a52-102">This class is used to represent the list of child activities for a <xref:System.Workflow.ComponentModel.CompositeActivity>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68a52-103"><xref:System.Collections.Generic.IList%601> の代わりに <xref:System.Collections.Generic.List%601> を使用してアクティビティを追加するなど、<xref:System.Workflow.ComponentModel.ActivityCollection.Add%2A> ではなく、<xref:System.Collections.Generic.List%601.AddRange%2A> から派生したメソッドだけを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="68a52-103">Only call methods derived from <xref:System.Collections.Generic.IList%601> and not <xref:System.Collections.Generic.List%601>, such as using <xref:System.Workflow.ComponentModel.ActivityCollection.Add%2A> to add activities instead of <xref:System.Collections.Generic.List%601.AddRange%2A>.</span></span> <span data-ttu-id="68a52-104"><xref:System.Collections.Generic.List%601> から派生したメソッドを呼び出した場合、予期しない結果になります。</span><span class="sxs-lookup"><span data-stu-id="68a52-104">Calling methods derived from <xref:System.Collections.Generic.List%601> will have unexpected consequences.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68a52-105">次の例では、すべての子アクティビティを含む複合アクティビティ クラスのメンバーである <xref:System.Workflow.ComponentModel.ActivityCollection> にアクセスしています。</span><span class="sxs-lookup"><span data-stu-id="68a52-105">The following example shows access of the <xref:System.Workflow.ComponentModel.ActivityCollection> which is the member of a composite activity class containing all child activities.</span></span> <span data-ttu-id="68a52-106">このコード例は、スローの使用 SDK サンプルの一部で、ThrowWorkflow.cs ファイルから抽出したものです。</span><span class="sxs-lookup"><span data-stu-id="68a52-106">This code example is part of the Using Throw SDK Sample and is from the ThrowWorkflow.cs file.</span></span> <span data-ttu-id="68a52-107">詳細については、次を参照してください。 [ThrowActivity アクティビティを使用して](http://msdn.microsoft.com/library/82bc0fef-d78a-4750-82b4-e4cb397a10f1)です。</span><span class="sxs-lookup"><span data-stu-id="68a52-107">For more information, see [Using the ThrowActivity Activity](http://msdn.microsoft.com/library/82bc0fef-d78a-4750-82b4-e4cb397a10f1).</span></span>  
  
 [!code-csharp[WF_Samples#179](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#179)]
 [!code-vb[WF_Samples#179](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#179)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ActivityCollection (System.Workflow.ComponentModel.Activity owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Workflow.ComponentModel.Activity owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.#ctor(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As Activity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ActivityCollection(System::Workflow::ComponentModel::Activity ^ owner);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="owner">
          <span data-ttu-id="68a52-108">このインスタンスを所有する <see cref="T:System.Workflow.ComponentModel.Activity" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-108">The <see cref="T:System.Workflow.ComponentModel.Activity" /> designated as owning this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="68a52-109">
            <see cref="T:System.Workflow.ComponentModel.ActivityCollection" /> クラスの新しいインスタンスを初期化します。これを所有する <see cref="T:System.Workflow.ComponentModel.Activity" /> を引数として指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-109">Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.ActivityCollection" /> class, initializing an owner <see cref="T:System.Workflow.ComponentModel.Activity" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68a52-110">例</span><span class="sxs-lookup"><span data-stu-id="68a52-110">Example</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="68a52-111">
            <paramref name="owner" /> が null 参照 (Visual Basic の場合は <see langword="Nothing" />) です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-111">
              <paramref name="owner" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="68a52-112">
            <paramref name="owner" /> は <see cref="T:System.Workflow.ComponentModel.Activity" /> の子孫ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-112">
              <paramref name="owner" /> is not a descendent of <see cref="T:System.Workflow.ComponentModel.Activity" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Workflow.ComponentModel.Activity item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Workflow.ComponentModel.Activity item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.Add(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (item As Activity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Workflow::ComponentModel::Activity ^ item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="68a52-113">
            <see cref="T:System.Workflow.ComponentModel.Activity" /> に追加される <see cref="T:System.Collections.ICollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-113">The <see cref="T:System.Workflow.ComponentModel.Activity" /> to be added to the <see cref="T:System.Collections.ICollection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="68a52-114">
            <see cref="T:System.Workflow.ComponentModel.Activity" /> を <see cref="T:System.Collections.ICollection" /> に追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-114">Adds the <see cref="T:System.Workflow.ComponentModel.Activity" /> to the <see cref="T:System.Collections.ICollection" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="68a52-115">次の例では、すべての子アクティビティを含む複合アクティビティ クラスのメンバーである <xref:System.Workflow.ComponentModel.ActivityCollection> にアクセスしています。</span><span class="sxs-lookup"><span data-stu-id="68a52-115">The following example shows access of the <xref:System.Workflow.ComponentModel.ActivityCollection> which is the member of a composite activity class containing all child activities.</span></span> <span data-ttu-id="68a52-116">この例では、<xref:System.Workflow.ComponentModel.ActivityCollection.Add%2A> の使用法を示します。</span><span class="sxs-lookup"><span data-stu-id="68a52-116">This example illustrates the use of <xref:System.Workflow.ComponentModel.ActivityCollection.Add%2A>.</span></span> <span data-ttu-id="68a52-117">このコード例は Throw SDK サンプルの一部で、ThrowWorkflow.cs ファイルから抽出したものです。</span><span class="sxs-lookup"><span data-stu-id="68a52-117">This code example is part of the Throw SDK sample and is from the ThrowWorkflow.cs file.</span></span> <span data-ttu-id="68a52-118">詳細については、次を参照してください。 [ThrowActivity アクティビティを使用して](http://msdn.microsoft.com/library/82bc0fef-d78a-4750-82b4-e4cb397a10f1)です。</span><span class="sxs-lookup"><span data-stu-id="68a52-118">For more information, see [Using the ThrowActivity Activity](http://msdn.microsoft.com/library/82bc0fef-d78a-4750-82b4-e4cb397a10f1).</span></span>  
  
 [!code-csharp[WF_Samples#179](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#179)]
 [!code-vb[WF_Samples#179](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#179)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="68a52-119">
            <see cref="T:System.Workflow.ComponentModel.Activity" /> をすべて <see cref="T:System.Collections.ICollection" /> から削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-119">Removes every <see cref="T:System.Workflow.ComponentModel.Activity" /> from the <see cref="T:System.Collections.ICollection" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Workflow.ComponentModel.Activity item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Workflow.ComponentModel.Activity item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.Contains(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (item As Activity) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Workflow::ComponentModel::Activity ^ item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="68a52-120">属しているかどうかを調べる <see cref="T:System.Workflow.ComponentModel.Activity" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-120">The <see cref="T:System.Workflow.ComponentModel.Activity" /> being tested for membership.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="68a52-121">
            <see cref="T:System.Workflow.ComponentModel.Activity" /> が <see cref="T:System.Collections.ICollection" /> に属しているかどうかを調べます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-121">Provides a test for membership of the <see cref="T:System.Workflow.ComponentModel.Activity" /> in the <see cref="T:System.Collections.ICollection" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="68a52-122">
            <see langword="true" /> が <see cref="T:System.Workflow.ComponentModel.Activity" /> に属していれば <see cref="T:System.Collections.ICollection" />、それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-122">
              <see langword="true" /> if the <see cref="T:System.Workflow.ComponentModel.Activity" /> belongs to the <see cref="T:System.Collections.ICollection" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68a52-123">この <xref:System.Collections.ICollection> はタイプ セーフです。</span><span class="sxs-lookup"><span data-stu-id="68a52-123">This <xref:System.Collections.ICollection> is type-safe.</span></span> <span data-ttu-id="68a52-124">項目が <xref:System.Workflow.ComponentModel.Activity> 型でない場合は、ランライム例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="68a52-124">A run-time exception is raised if the item is not of type <xref:System.Workflow.ComponentModel.Activity>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.ActivityCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="68a52-125">
            <see cref="T:System.Collections.ICollection" /> のメンバー数を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-125">Gets the number of members of the <see cref="T:System.Collections.ICollection" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="68a52-126">
            <see cref="T:System.Collections.ICollection" /> のメンバー数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-126">The number of members of the <see cref="T:System.Collections.ICollection" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;System.Workflow.ComponentModel.Activity&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerator`1&lt;class System.Workflow.ComponentModel.Activity&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator(Of Activity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerator&lt;System::Workflow::ComponentModel::Activity ^&gt; ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Workflow.ComponentModel.Activity&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="68a52-127">
            <see cref="T:System.Collections.ICollection" /> の反復処理インターフェイスを実装します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-127">Implements an enumeration interface to the <see cref="T:System.Collections.ICollection" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="68a52-128">
            <see cref="T:System.Collections.ReadOnlyCollectionBase" /> インスタンスを反復処理できる列挙子を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-128">Returns an enumerator that can iterate through the <see cref="T:System.Collections.ReadOnlyCollectionBase" /> instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68a52-129">列挙子は、コレクション内のデータの読み取りだけを許可します。</span><span class="sxs-lookup"><span data-stu-id="68a52-129">Enumerators only enable reading the data in the collection.</span></span> <span data-ttu-id="68a52-130">列挙子を使用して基になるコレクションを変更することはできません。</span><span class="sxs-lookup"><span data-stu-id="68a52-130">You cannot use enumerators to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="68a52-131">初期状態では、列挙子はコレクションの最初の要素の前に位置しています。</span><span class="sxs-lookup"><span data-stu-id="68a52-131">To begin, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="68a52-132"><xref:System.Collections.IEnumerator.Reset%2A> を実行した場合も、列挙子はこの位置に戻されます。</span><span class="sxs-lookup"><span data-stu-id="68a52-132"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span> <span data-ttu-id="68a52-133">この位置で <xref:System.Collections.IEnumerator.Current%2A> を呼び出すと、例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="68a52-133">At this position, calling <xref:System.Collections.IEnumerator.Current%2A> raises an exception.</span></span> <span data-ttu-id="68a52-134">そのため、<xref:System.Collections.IEnumerator.MoveNext%2A> の値を読み取る前に、<xref:System.Collections.IEnumerator.Current%2A> を呼び出して列挙子をコレクションの最初の要素に進める必要があります。</span><span class="sxs-lookup"><span data-stu-id="68a52-134">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="68a52-135"><xref:System.Collections.IEnumerator.Current%2A> は、<xref:System.Collections.IEnumerator.MoveNext%2A> または <xref:System.Collections.IEnumerator.Reset%2A> が呼び出されるまでは同じオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="68a52-135"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="68a52-136"><xref:System.Collections.IEnumerator.MoveNext%2A> は、<xref:System.Collections.IEnumerator.Current%2A> を次の要素に設定します。</span><span class="sxs-lookup"><span data-stu-id="68a52-136"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="68a52-137">コレクションの末尾を過ぎると、列挙子はコレクションの最後の要素の後ろに配置され、<xref:System.Collections.IEnumerator.MoveNext%2A> を呼び出すと `false` が返されます。</span><span class="sxs-lookup"><span data-stu-id="68a52-137">After the end of the collection is passed, the enumerator is positioned after the last element in the collection, and calling <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="68a52-138">前回 <xref:System.Collections.IEnumerator.MoveNext%2A> を呼び出して `false` が返された後に <xref:System.Collections.IEnumerator.Current%2A> を呼び出すと、例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="68a52-138">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, calling <xref:System.Collections.IEnumerator.Current%2A> raises an exception.</span></span>  
  
 <span data-ttu-id="68a52-139">`Current` をコレクションの最初の要素にもう一度設定するには、`Reset` を呼び出してから <xref:System.Collections.IEnumerator.MoveNext%2A> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="68a52-139">To set `Current` to the first element of the collection again, you can call `Reset` followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="68a52-140">コレクションが変更されない限り、列挙子は有効です。</span><span class="sxs-lookup"><span data-stu-id="68a52-140">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="68a52-141">要素の追加、変更、削除などの変更がコレクションに対して実行されると、列挙子は回復不可能な無効状態になり、次に <xref:System.Collections.IEnumerator.MoveNext%2A> または `Reset` を呼び出すと、<xref:System.InvalidOperationException> が発生します。</span><span class="sxs-lookup"><span data-stu-id="68a52-141">If changes are made to the collection, such as adding, modifying or deleting elements, the enumerator is irreversibly invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or `Reset` raises an <xref:System.InvalidOperationException> .</span></span> <span data-ttu-id="68a52-142">コレクションが <xref:System.Collections.IEnumerator.MoveNext%2A> と <xref:System.Collections.IEnumerator.Current%2A> の間で変更された場合は、列挙子が既に無効になっていても、<xref:System.Collections.IEnumerator.Current%2A> は設定した要素を返します。</span><span class="sxs-lookup"><span data-stu-id="68a52-142">If the collection is modified between <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> will return the element that it is set to, even if the enumerator is already invalidated.</span></span>  
  
 <span data-ttu-id="68a52-143">列挙子にはコレクションへの排他アクセス権限はないため、コレクションの列挙処理は本質的にスレッド セーフな処理ではありません。</span><span class="sxs-lookup"><span data-stu-id="68a52-143">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="68a52-144">コレクションが同期されている場合でも、他のスレッドがそのコレクションを変更する可能性はあります。</span><span class="sxs-lookup"><span data-stu-id="68a52-144">Even when a collection is synchronized, other threads could still modify the collection.</span></span> <span data-ttu-id="68a52-145">この場合、列挙子から例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="68a52-145">This causes the enumerator to raise an exception.</span></span> <span data-ttu-id="68a52-146">列挙処理を確実にスレッド セーフに行うには、列挙中にコレクションをロックするか、他のスレッドによって行われた変更によってスローされる例外をキャッチします。</span><span class="sxs-lookup"><span data-stu-id="68a52-146">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Workflow.ComponentModel.Activity item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Workflow.ComponentModel.Activity item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.IndexOf(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (item As Activity) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Workflow::ComponentModel::Activity ^ item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.IndexOf(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="68a52-147">インデックスを取得するアクティビティ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-147">The activity for which to acquire the index.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="68a52-148">
            <see cref="T:System.Workflow.ComponentModel.Activity" /> 内の <see cref="T:System.Collections.ICollection" /> のインデックスを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-148">Gets the index of the <see cref="T:System.Workflow.ComponentModel.Activity" /> in the <see cref="T:System.Collections.ICollection" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="68a52-149">
            <see cref="T:System.Workflow.ComponentModel.Activity" /> 内の <see cref="T:System.Collections.ICollection" /> のインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-149">The index of the <see cref="T:System.Workflow.ComponentModel.Activity" /> in the <see cref="T:System.Collections.ICollection" />.</span>
          </span>
          <span data-ttu-id="68a52-150">
            <see cref="T:System.Workflow.ComponentModel.Activity" /> が <see cref="T:System.Collections.ICollection" /> 内にない場合は -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-150">Otherwise -1 (if <see cref="T:System.Workflow.ComponentModel.Activity" /> is not in the <see cref="T:System.Collections.ICollection" />).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68a52-151">このコレクションはタイプ セーフです。</span><span class="sxs-lookup"><span data-stu-id="68a52-151">This collection is type-safe.</span></span> <span data-ttu-id="68a52-152">項目が <xref:System.Workflow.ComponentModel.Activity> 型でない場合は、ランライム例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="68a52-152">A run-time exception will be raised if an item is not of type <xref:System.Workflow.ComponentModel.Activity>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.Workflow.ComponentModel.Activity item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, class System.Workflow.ComponentModel.Activity item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.Insert(System.Int32,System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, item As Activity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::Workflow::ComponentModel::Activity ^ item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="68a52-153">項目を挿入する位置を示す、コレクション内での 0 から始まるインデックス</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-153">Zero-based index of the collection at which to insert the item.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="68a52-154">コレクションに挿入される <see cref="T:System.Workflow.ComponentModel.Activity" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-154">The <see cref="T:System.Workflow.ComponentModel.Activity" /> to be inserted into the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="68a52-155">
            <see cref="T:System.Collections.ICollection" /> 内の指定したインデックス位置に項目を挿入します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-155">Inserts the item at the index in the <see cref="T:System.Collections.ICollection" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68a52-156">この <xref:System.Collections.ICollection> はタイプ セーフです。</span><span class="sxs-lookup"><span data-stu-id="68a52-156">This <xref:System.Collections.ICollection> is type safe.</span></span> <span data-ttu-id="68a52-157">項目が <xref:System.Workflow.ComponentModel.Activity> 型でない場合は、ランライム例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="68a52-157">A run-time exception is raised if an item is not of type <xref:System.Workflow.ComponentModel.Activity>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="68a52-158">名前またはインデックスに基づいて、<see cref="T:System.Workflow.ComponentModel.Activity" /> の項目 <see cref="T:System.Collections.ICollection" /> を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-158">Gets an item <see cref="T:System.Workflow.ComponentModel.Activity" /> in the <see cref="T:System.Collections.ICollection" /> by name or index.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Workflow.ComponentModel.Activity this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.Activity Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.ActivityCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As Activity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::ComponentModel::Activity ^ default[int] { System::Workflow::ComponentModel::Activity ^ get(int index); void set(int index, System::Workflow::ComponentModel::Activity ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IList`1.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Activity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="68a52-159">
            <see cref="T:System.Collections.ICollection" /> の 0 から始まるインデックス番号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-159">Zero-based index into the <see cref="T:System.Collections.ICollection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="68a52-160">インデックスに基づいて、<see cref="T:System.Collections.ICollection" /> のアクティビティを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-160">Gets or sets the activity in the <see cref="T:System.Collections.ICollection" /> based on the index.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="68a52-161">
            <see cref="T:System.Collections.ICollection" /> で、呼び出し時に指定したインデックス位置にある <see cref="T:System.Collections.ICollection" /> のメンバー アクティビティ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-161">A member activity of the <see cref="T:System.Collections.ICollection" />, whose index in the <see cref="T:System.Collections.ICollection" /> was specified in the call.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="68a52-162">
            <paramref name="index" /> が <see cref="T:System.Collections.IList" /> の有効なインデックスではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-162">
              <paramref name="index" /> is not a valid index in <see cref="T:System.Collections.IList" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="68a52-163">このプロパティが設定されていますが、<see cref="T:System.Collections.IList" /> が読み取り専用です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-163">The property is set and the <see cref="T:System.Collections.IList" /> is read-only.</span>
          </span>
        </exception>
        <exception cref="T:System.Exception">
          <span data-ttu-id="68a52-164">
            <see cref="T:System.Object" /> ではない <see cref="T:System.Workflow.ComponentModel.Activity" /> を設定しようとしました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-164">An attempt to set to an <see cref="T:System.Object" /> that is not an <see cref="T:System.Workflow.ComponentModel.Activity" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Workflow.ComponentModel.Activity this[string key] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.Activity Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.ActivityCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(key As String) As Activity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::ComponentModel::Activity ^ default[System::String ^] { System::Workflow::ComponentModel::Activity ^ get(System::String ^ key); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Activity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="68a52-165">
            <see cref="T:System.Collections.ICollection" /> のアクティビティを表す一意的な識別子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-165">Unique identifier for activity in the <see cref="T:System.Collections.ICollection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="68a52-166">一意的なキー文字列を使って <see cref="T:System.Collections.ICollection" /> のアクティビティを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-166">Gets the activity in the <see cref="T:System.Collections.ICollection" /> based on the string which is a unique key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="68a52-167">
            <see cref="T:System.Workflow.ComponentModel.Activity" /> のメンバー <see cref="T:System.Collections.ICollection" /> (呼び出し時に指定した <see cref="T:System.Collections.ICollection" /> 内のキー)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-167">A member <see cref="T:System.Workflow.ComponentModel.Activity" /> of the <see cref="T:System.Collections.ICollection" />; the key in the <see cref="T:System.Collections.ICollection" /> which was specified in the call.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68a52-168">キーで示される <xref:System.Workflow.ComponentModel.Activity> が <xref:System.Collections.ICollection> にない場合、例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="68a52-168">If there is no <xref:System.Workflow.ComponentModel.Activity> in the <xref:System.Collections.ICollection> with specified key, an exception is raised.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ListChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs&gt; ListChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs&gt; ListChanged" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.ComponentModel.ActivityCollection.ListChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event ListChanged As EventHandler(Of ActivityCollectionChangeEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::ComponentModel::ActivityCollectionChangeEventArgs ^&gt; ^ ListChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="68a52-169">この <see cref="T:System.Collections.ICollection" /> の内容が変更されたときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-169">Raised whenever a change is made to the contents of this <see cref="T:System.Collections.ICollection" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68a52-170">このコンテキストでメンバーを追加または削除するとイベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="68a52-170">In this context, adding or removing members raises the event.</span></span> <span data-ttu-id="68a52-171">メンバーを変更してもイベントは発生しません。</span><span class="sxs-lookup"><span data-stu-id="68a52-171">Modifying a member does not raise this event.</span></span>  
  
 <span data-ttu-id="68a52-172"><xref:System.Workflow.ComponentModel.ActivityCollection> デリゲートを作成する場合は、イベントを処理するメソッドを指定します。</span><span class="sxs-lookup"><span data-stu-id="68a52-172">When you create an <xref:System.Workflow.ComponentModel.ActivityCollection> delegate, you identify the method that will handle the event.</span></span> <span data-ttu-id="68a52-173">イベントをイベント ハンドラーに関連付けるには、デリゲートのインスタンスをイベントに追加します。</span><span class="sxs-lookup"><span data-stu-id="68a52-173">To associate the event with your event handler, add an instance of the delegate to the event.</span></span> <span data-ttu-id="68a52-174">デリゲートを削除しない限り、そのイベントが発生すると常にイベント ハンドラーが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="68a52-174">The event handler is called whenever the event occurs, unless you remove the delegate.</span></span> <span data-ttu-id="68a52-175">イベント ハンドラー デリゲートの詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)です。</span><span class="sxs-lookup"><span data-stu-id="68a52-175">For more information about event-handler delegates, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (System.Workflow.ComponentModel.Activity item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Remove(class System.Workflow.ComponentModel.Activity item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.Remove(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (item As Activity) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Remove(System::Workflow::ComponentModel::Activity ^ item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="68a52-176">
            <see cref="T:System.Collections.ICollection" /> から削除するアクティビティ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-176">The activity to remove from the <see cref="T:System.Collections.ICollection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="68a52-177">指定されたアクティビティを <see cref="T:System.Collections.ICollection" /> から削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-177">Removes the activity specified in the call from the <see cref="T:System.Collections.ICollection" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="68a52-178">操作が正常な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-178">
              <see langword="true" /> if the operation succeeded; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68a52-179">この <xref:System.Collections.ICollection> はタイプ セーフです。</span><span class="sxs-lookup"><span data-stu-id="68a52-179">This <xref:System.Collections.ICollection> is type safe.</span></span> <span data-ttu-id="68a52-180">項目が <xref:System.Workflow.ComponentModel.Activity> 型でない場合は、ランライム例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="68a52-180">A run-time exception is raised if an item is not of type <xref:System.Workflow.ComponentModel.Activity>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)</InterfaceMember>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="68a52-181">コレクションから削除するアクティビティの位置を表す 0 から始まるインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-181">Position in a zero-based index to remove the activity from the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="68a52-182">
            <see cref="T:System.Workflow.ComponentModel.Activity" /> 内の指定された <see cref="T:System.Collections.ICollection" /> の位置にある <paramref name="index" /> を削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-182">Removes the <see cref="T:System.Workflow.ComponentModel.Activity" /> in the <see cref="T:System.Collections.ICollection" /> at the specified <paramref name="index" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68a52-183">インデックスが有効でない (範囲外である) 場合、ランライム例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="68a52-183">A run-time exception occurs if the index is not valid (out of range).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;.Add">
      <MemberSignature Language="C#" Value="void ICollection&lt;Activity&gt;.Add (System.Workflow.ComponentModel.Activity item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;.Add(class System.Workflow.ComponentModel.Activity item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection&lt;System#Workflow#ComponentModel#Activity&gt;#Add(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Sub Add (item As Activity) Implements ICollection(Of Activity).Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;.Add(System::Workflow::ComponentModel::Activity ^ item) = System::Collections::Generic::ICollection&lt;System::Workflow::ComponentModel::Activity ^&gt;::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="68a52-184">
            <see cref="T:System.Object" /> に追加する <see cref="T:System.Collections.IList" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-184">The <see cref="T:System.Object" /> to add to the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="68a52-185">
            <see cref="T:System.Collections.IList" /> の末尾の <see cref="T:System.Collections.IList" /> にオブジェクトを追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-185">Adds an object to the <see cref="T:System.Collections.IList" /> at the end of the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68a52-186"><xref:System.Object> が <xref:System.Workflow.ComponentModel.Activity> 型でない場合は例外が発生し、エラー メッセージ "Error_InvalidListItem" が出力されます。</span><span class="sxs-lookup"><span data-stu-id="68a52-186">Raises an exception with the error message "Error_InvalidListItem" if the <xref:System.Object> is not of type <xref:System.Workflow.ComponentModel.Activity>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;.Clear">
      <MemberSignature Language="C#" Value="void ICollection&lt;Activity&gt;.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;.Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection&lt;System#Workflow#ComponentModel#Activity&gt;#Clear" />
      <MemberSignature Language="VB.NET" Value="Sub Clear () Implements ICollection(Of Activity).Clear" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;.Clear() = System::Collections::Generic::ICollection&lt;System::Workflow::ComponentModel::Activity ^&gt;::Clear;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="68a52-187">
            <see cref="T:System.Collections.IList" /> からアクティビティをすべて削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-187">Clears all activities from the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68a52-188">操作後は <xref:System.Collections.CollectionBase.Count%2A> プロパティが 0 になります。</span><span class="sxs-lookup"><span data-stu-id="68a52-188">The <xref:System.Collections.CollectionBase.Count%2A> property is zero after this operation is finished.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;.Contains">
      <MemberSignature Language="C#" Value="bool ICollection&lt;Activity&gt;.Contains (System.Workflow.ComponentModel.Activity item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;.Contains(class System.Workflow.ComponentModel.Activity item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection&lt;System#Workflow#ComponentModel#Activity&gt;#Contains(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (item As Activity) As Boolean Implements ICollection(Of Activity).Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;.Contains(System::Workflow::ComponentModel::Activity ^ item) = System::Collections::Generic::ICollection&lt;System::Workflow::ComponentModel::Activity ^&gt;::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="68a52-189">
            <see cref="T:System.Object" /> 内で検索される <see cref="T:System.Collections.IList" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-189">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="68a52-190">
            <see cref="T:System.Object" /> がコレクションに属するかどうかを表す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-190">Gets a value that indicates whether the <see cref="T:System.Object" /> is a member of the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="68a52-191">値がコレクション内に存在する場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-191">
              <see langword="true" /> if value is in the collection; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68a52-192"><xref:System.Object> が <xref:System.Workflow.ComponentModel.Activity> 型でない場合は例外が発生し、エラー メッセージ "Error_InvalidListItem" が出力されます。</span><span class="sxs-lookup"><span data-stu-id="68a52-192">Raises an exception with the error message "Error_InvalidListItem" if the <xref:System.Object> is not of type <xref:System.Workflow.ComponentModel.Activity>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection&lt;Activity&gt;.CopyTo (System.Workflow.ComponentModel.Activity[] array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;.CopyTo(class System.Workflow.ComponentModel.Activity[] array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection&lt;System#Workflow#ComponentModel#Activity&gt;#CopyTo(System.Workflow.ComponentModel.Activity[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub CopyTo (array As Activity(), arrayIndex As Integer) Implements ICollection(Of Activity).CopyTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;.CopyTo(cli::array &lt;System::Workflow::ComponentModel::Activity ^&gt; ^ array, int arrayIndex) = System::Collections::Generic::ICollection&lt;System::Workflow::ComponentModel::Activity ^&gt;::CopyTo;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Workflow.ComponentModel.Activity[]" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="68a52-193">コピー操作の対象である <see cref="T:System.Array" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-193">The <see cref="T:System.Array" /> which is the target of the copy operation.</span>
          </span>
        </param>
        <param name="arrayIndex">
          <span data-ttu-id="68a52-194">
            <see cref="T:System.Collections.ICollection" /> のコピー開始位置を表す、0 から始まるインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-194">The zero-based index within the <see cref="T:System.Collections.ICollection" /> where the copy starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="68a52-195">
            <see cref="T:System.Collections.ICollection" /> の要素を <see cref="T:System.Array" /> にコピーします。コピーは特定の <see cref="T:System.Array" /> のインデックスから開始されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-195">Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="68a52-196">
            <paramref name="array" /> が null 参照 (Visual Basic の場合は <see langword="Nothing" />) です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-196">
              <paramref name="array" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="68a52-197">
            <paramref name="index" /> が 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-197">
              <paramref name="index" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="68a52-198">
            <paramref name="array" /> が多次元です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-198">
              <paramref name="array" /> is multidimensional.</span>
          </span>
          <span data-ttu-id="68a52-199">
            <paramref name="index" /> が <paramref name="array" /> の長さ以上です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-199">
              <paramref name="index" /> is equal to or greater than the length of <paramref name="array" />.</span>
          </span>
          <span data-ttu-id="68a52-200">コピー元の <see cref="T:System.Collections.ICollection" /> の要素数が、コピー先の配列の <paramref name="index" /> から最後までの領域を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-200">The number of elements in the source <see cref="T:System.Collections.ICollection" /> is greater than the available space from <paramref name="index" /> to the end of the destination array.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="68a52-201">型 <see cref="T:System.Workflow.ComponentModel.Activity" /> をコピー先の <paramref name="array" /> の型に自動的にキャストすることはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-201">The type <see cref="T:System.Workflow.ComponentModel.Activity" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;.Count">
      <MemberSignature Language="C#" Value="int System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;.Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;.Count" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection&lt;System#Workflow#ComponentModel#Activity&gt;#Count" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Count As Integer Implements ICollection(Of Activity).Count" />
      <MemberSignature Language="C++ CLI" Value="property int System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;.Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="68a52-202">
            <see cref="T:System.Collections.Generic.ICollection`1" /> に格納されている要素の数を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-202">Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="68a52-203">
            <see cref="T:System.Collections.Generic.ICollection`1" /> に格納されている要素の数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-203">The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection&lt;System#Workflow#ComponentModel#Activity&gt;#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements ICollection(Of Activity).IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;.IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="68a52-204">
            <see cref="T:System.Collections.IList" /> が読み取り専用かどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-204">Gets a value that indicates whether the <see cref="T:System.Collections.IList" /> is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="68a52-205">
            <see langword="true" /> が読み取り専用である場合は <see cref="T:System.Collections.IList" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-205">
              <see langword="true" /> if the <see cref="T:System.Collections.IList" /> is read-only; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68a52-206">読み取り専用のコレクションでは、コレクション作成後に要素の追加、削除、または変更はできません。</span><span class="sxs-lookup"><span data-stu-id="68a52-206">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;.Remove">
      <MemberSignature Language="C#" Value="bool ICollection&lt;Activity&gt;.Remove (System.Workflow.ComponentModel.Activity item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;.Remove(class System.Workflow.ComponentModel.Activity item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection&lt;System#Workflow#ComponentModel#Activity&gt;#Remove(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Function Remove (item As Activity) As Boolean Implements ICollection(Of Activity).Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;.Remove(System::Workflow::ComponentModel::Activity ^ item) = System::Collections::Generic::ICollection&lt;System::Workflow::ComponentModel::Activity ^&gt;::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="68a52-207">
            <see cref="T:System.Collections.Generic.ICollection`1" /> から削除するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-207">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="68a52-208">特定のオブジェクトが <see cref="T:System.Collections.Generic.ICollection`1" /> 内にあるときに、最初に出現したものを削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-208">Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="68a52-209">
            <see langword="true" /> が <paramref name="item" /> から正常に削除された場合は <see cref="T:System.Collections.Generic.ICollection`1" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-209">
              <see langword="true" /> if <paramref name="item" /> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="68a52-210">このメソッドは、<see langword="false" /> が元の <paramref name="item" /> に見つからない場合にも <see cref="T:System.Collections.Generic.ICollection`1" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-210">This method also returns <see langword="false" /> if <paramref name="item" /> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68a52-211">オブジェクトが等しいかどうかを判断する方法で実装が異なります。たとえば、<xref:System.Collections.Generic.List%601> では <xref:System.Collections.Generic.Comparer%601.Default%2A> が使用されます。また、<xref:System.Collections.Generic.Dictionary%602> では、<xref:System.Collections.Generic.IComparer%601> 実装をキーの比較に使うかどうかをユーザーが指定できます。</span><span class="sxs-lookup"><span data-stu-id="68a52-211">Implementations can vary in how they determine equality of objects; for example, <xref:System.Collections.Generic.List%601> uses <xref:System.Collections.Generic.Comparer%601.Default%2A>, whereas, <xref:System.Collections.Generic.Dictionary%602> allows the user to specify the <xref:System.Collections.Generic.IComparer%601> implementation to use for comparing keys.</span></span>  
  
 <span data-ttu-id="68a52-212">リストなどの連続する要素のコレクションでは、空白になった位置を埋めるために、削除された要素の後にある要素の位置が繰り上げられます。</span><span class="sxs-lookup"><span data-stu-id="68a52-212">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="68a52-213">コレクションにインデックスがある場合、移動した要素のインデックスも更新されます。</span><span class="sxs-lookup"><span data-stu-id="68a52-213">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="68a52-214">この動作は、要素が概念的にバケットにグループ化されているハッシュ テーブルなどのコレクションには適用されません。</span><span class="sxs-lookup"><span data-stu-id="68a52-214">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="68a52-215">
            <see langword="ICollection" /> は読み取り専用です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-215">The <see langword="ICollection" /> is read-only.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;System.Workflow.ComponentModel.Activity&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;System.Workflow.ComponentModel.Activity&gt; IEnumerable&lt;Activity&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;class System.Workflow.ComponentModel.Activity&gt; System.Collections.Generic.IEnumerable&lt;System.Workflow.ComponentModel.Activity&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IEnumerable&lt;System#Workflow#ComponentModel#Activity&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of Activity) Implements IEnumerable(Of Activity).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;System::Workflow::ComponentModel::Activity ^&gt; ^ System.Collections.Generic.IEnumerable&lt;System.Workflow.ComponentModel.Activity&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;System::Workflow::ComponentModel::Activity ^&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Workflow.ComponentModel.Activity&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="68a52-216">コレクションを反復処理する列挙子を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-216">Returns an enumerator that iterates through the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="68a52-217">コレクションを反復処理するために使用できる <see cref="T:System.Collections.Generic.IEnumerator`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-217">An <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68a52-218">`foreach` C# 言語のステートメント (`for each` C++ では、 `For Each` Visual Basic で)、列挙子の複雑さが隠されています。</span><span class="sxs-lookup"><span data-stu-id="68a52-218">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of the enumerators.</span></span> <span data-ttu-id="68a52-219">したがって、列挙子を直接操作するのではなく、`foreach` を使用することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="68a52-219">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="68a52-220">列挙子を使用すると、コレクション内のデータを読み取ることができますが、基になるコレクションを変更することはできません。</span><span class="sxs-lookup"><span data-stu-id="68a52-220">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="68a52-221">最初に、列挙子はコレクション内の 1 番目の要素の前に位置付けられます。</span><span class="sxs-lookup"><span data-stu-id="68a52-221">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="68a52-222">この位置では、<xref:System.Collections.Generic.IEnumerator%601.Current%2A> が未定義です。</span><span class="sxs-lookup"><span data-stu-id="68a52-222">At this position, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined.</span></span> <span data-ttu-id="68a52-223">そのため、<xref:System.Collections.IEnumerator.MoveNext%2A> の値を読み取る前に、<xref:System.Collections.Generic.IEnumerator%601.Current%2A> を呼び出して列挙子をコレクションの最初の要素に進める必要があります。</span><span class="sxs-lookup"><span data-stu-id="68a52-223">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.IEnumerator%601.Current%2A>.</span></span>  
  
 <span data-ttu-id="68a52-224"><xref:System.Collections.Generic.IEnumerator%601.Current%2A> は、<xref:System.Collections.IEnumerator.MoveNext%2A> が呼び出されるまでは同じオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="68a52-224"><xref:System.Collections.Generic.IEnumerator%601.Current%2A> returns the same object until <xref:System.Collections.IEnumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="68a52-225"><xref:System.Collections.IEnumerator.MoveNext%2A> は、<xref:System.Collections.Generic.IEnumerator%601.Current%2A> を次の要素に設定します。</span><span class="sxs-lookup"><span data-stu-id="68a52-225"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="68a52-226"><xref:System.Collections.IEnumerator.MoveNext%2A> がコレクションの末尾を越えた場合、列挙子の位置は最後の要素の後ろになり、<xref:System.Collections.IEnumerator.MoveNext%2A> は false を返します。</span><span class="sxs-lookup"><span data-stu-id="68a52-226">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns false.</span></span> <span data-ttu-id="68a52-227">列挙子がこの位置にあるときは、それ以降の <xref:System.Collections.IEnumerator.MoveNext%2A> の呼び出しも false を返します。</span><span class="sxs-lookup"><span data-stu-id="68a52-227">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return false.</span></span> <span data-ttu-id="68a52-228"><xref:System.Collections.IEnumerator.MoveNext%2A> への最後の呼び出しで false が返された場合は、<xref:System.Collections.Generic.IEnumerator%601.Current%2A> が未定義です。</span><span class="sxs-lookup"><span data-stu-id="68a52-228">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned false, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined.</span></span> <span data-ttu-id="68a52-229"><xref:System.Collections.Generic.IEnumerator%601.Current%2A> を、再度、コレクションの最初の要素に設定することはできません。列挙子の新しいインスタンスを作成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68a52-229">You cannot set <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the first element of the collection again; you must create a new enumerator instance instead.</span></span>  
  
 <span data-ttu-id="68a52-230">コレクションが変更されない限り、列挙子は有効です。</span><span class="sxs-lookup"><span data-stu-id="68a52-230">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="68a52-231">コレクションに対して変更 (要素の追加、変更、削除など) が行われると、列挙子は回復不可能な無効状態になり、その動作は未定義になります。</span><span class="sxs-lookup"><span data-stu-id="68a52-231">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="68a52-232">列挙子にはコレクションへの排他アクセス権限はないため、コレクションの列挙処理は本質的にスレッド セーフな処理ではありません。</span><span class="sxs-lookup"><span data-stu-id="68a52-232">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="68a52-233">列挙処理でスレッド セーフを確保するには、列挙処理が終わるまでコレクションをロックできます。</span><span class="sxs-lookup"><span data-stu-id="68a52-233">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span> <span data-ttu-id="68a52-234">コレクションに対し複数のスレッドがアクセスして読み取りや書き込みを行うことができるようにするには、独自に同期化を実装する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68a52-234">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="68a52-235"><xref:System.Collections.Generic> 名前空間のコレクションの既定の実装は同期されません。</span><span class="sxs-lookup"><span data-stu-id="68a52-235">Default implementations of collections in the <xref:System.Collections.Generic> namespace are not synchronized.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IList&lt;System.Workflow.ComponentModel.Activity&gt;.IndexOf">
      <MemberSignature Language="C#" Value="int IList&lt;Activity&gt;.IndexOf (System.Workflow.ComponentModel.Activity item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.Generic.IList&lt;System.Workflow.ComponentModel.Activity&gt;.IndexOf(class System.Workflow.ComponentModel.Activity item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList&lt;System#Workflow#ComponentModel#Activity&gt;#IndexOf(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (item As Activity) As Integer Implements IList(Of Activity).IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.Generic.IList&lt;System.Workflow.ComponentModel.Activity&gt;.IndexOf(System::Workflow::ComponentModel::Activity ^ item) = System::Collections::Generic::IList&lt;System::Workflow::ComponentModel::Activity ^&gt;::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.IndexOf(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="68a52-236">
            <see cref="T:System.Collections.IList" /> 内で検索するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-236">The object to locate in the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="68a52-237">
            <see cref="T:System.Collections.IList" /> 内の特定の項目のインデックスを確認します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-237">Determines the index of a specific item in the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="68a52-238">リストに存在する場合は <paramref name="item" /> のインデックス。それ以外の場合は -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-238">The index of <paramref name="item" /> if found in the list; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68a52-239">オブジェクトがリスト内に複数回出現する場合、`IndexOf` メソッドは最初に見つかったものを常に返します。</span><span class="sxs-lookup"><span data-stu-id="68a52-239">If an object occurs multiple times in the list, the `IndexOf` method always returns the first instance found.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IList&lt;System.Workflow.ComponentModel.Activity&gt;.Insert">
      <MemberSignature Language="C#" Value="void IList&lt;Activity&gt;.Insert (int index, System.Workflow.ComponentModel.Activity item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.IList&lt;System.Workflow.ComponentModel.Activity&gt;.Insert(int32 index, class System.Workflow.ComponentModel.Activity item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList&lt;System#Workflow#ComponentModel#Activity&gt;#Insert(System.Int32,System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, item As Activity) Implements IList(Of Activity).Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.IList&lt;System.Workflow.ComponentModel.Activity&gt;.Insert(int index, System::Workflow::ComponentModel::Activity ^ item) = System::Collections::Generic::IList&lt;System::Workflow::ComponentModel::Activity ^&gt;::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="68a52-240">挿入位置を表す、0 から始まるインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-240">The zero-based position of the insertion.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="68a52-241">挿入するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-241">The object to insert.</span>
          </span>
          <span data-ttu-id="68a52-242">
            <see cref="T:System.Workflow.ComponentModel.Activity" /> 型でなければなりません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-242">It must be of type <see cref="T:System.Workflow.ComponentModel.Activity" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="68a52-243">
            <see cref="T:System.Object" /> を <see cref="T:System.Collections.IList" /> 内の、0 から始まるインデックスで指定された位置に挿入します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-243">Inserts an <see cref="T:System.Object" /> into the <see cref="T:System.Collections.IList" /> at the zero-based index specified.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68a52-244"><xref:System.Object> を <xref:System.Workflow.ComponentModel.Activity> にキャストできなかった場合、独自の <xref:System.Exception> が発生します。</span><span class="sxs-lookup"><span data-stu-id="68a52-244">If the <xref:System.Object> cannot be cast to an <xref:System.Workflow.ComponentModel.Activity>, a custom <xref:System.Exception> is raised.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IList&lt;System.Workflow.ComponentModel.Activity&gt;.Item">
      <MemberSignature Language="C#" Value="System.Workflow.ComponentModel.Activity System.Collections.Generic.IList&lt;System.Workflow.ComponentModel.Activity&gt;.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.Activity System.Collections.Generic.IList&lt;System.Workflow.ComponentModel.Activity&gt;.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList&lt;System#Workflow#ComponentModel#Activity&gt;#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Activity Implements IList(Of Activity).Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Workflow::ComponentModel::Activity ^ System.Collections.Generic.IList&lt;System.Workflow.ComponentModel.Activity&gt;.Item[int] { System::Workflow::ComponentModel::Activity ^ get(int index); void set(int index, System::Workflow::ComponentModel::Activity ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IList`1.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Activity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="68a52-245">取得または設定する要素の、0 から始まるインデックス番号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-245">The zero-based index of the element to get or set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="68a52-246">指定したインデックスにある要素を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-246">Gets or sets the element at the specified index.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="68a52-247">指定されたインデックス位置にある <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-247">The <see cref="T:System.Object" /> at the specified index.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68a52-248">このプロパティでは、myCollection[index] という構文を使用して、コレクション内の特定の要素にアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="68a52-248">This property provides the ability to access a specific element in the collection by using the following syntax: myCollection[index].</span></span>  
  
 <span data-ttu-id="68a52-249">C# 言語では、`this` プロパティを実装する代わりに、`Item` キーワードを使用してインデクサーを定義します。</span><span class="sxs-lookup"><span data-stu-id="68a52-249">The C# language uses the `this` keyword to define the indexers instead of implementing the `Item` property.</span></span> <span data-ttu-id="68a52-250">Visual Basic は、`Item` を既定のプロパティとして実装しており、同様のインデックス機能を提供します。</span><span class="sxs-lookup"><span data-stu-id="68a52-250">Visual Basic implements `Item` as a default property, which provides the same indexing functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="68a52-251">
            <paramref name="index" /> が <see cref="T:System.Collections.IList" /> の有効なインデックスではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-251">
              <paramref name="index" /> is not a valid index in the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="68a52-252">
            <see langword="ICollection" /> は読み取り専用です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-252">The <see langword="ICollection" /> is read-only.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IList&lt;System.Workflow.ComponentModel.Activity&gt;.RemoveAt">
      <MemberSignature Language="C#" Value="void IList&lt;Activity&gt;.RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.IList&lt;System.Workflow.ComponentModel.Activity&gt;.RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList&lt;System#Workflow#ComponentModel#Activity&gt;#RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub RemoveAt (index As Integer) Implements IList(Of Activity).RemoveAt" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.IList&lt;System.Workflow.ComponentModel.Activity&gt;.RemoveAt(int index) = System::Collections::Generic::IList&lt;System::Workflow::ComponentModel::Activity ^&gt;::RemoveAt;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="68a52-253">削除する項目の 0 から始まるインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-253">The zero-based index of the item to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="68a52-254">指定したインデックスにある <see cref="T:System.Collections.IList" /> 項目を削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-254">Removes the <see cref="T:System.Collections.IList" /> item at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68a52-255">リストなどの連続する要素のコレクションでは、空白になった位置を埋めるために、削除された要素の後にある要素の位置が繰り上げられます。</span><span class="sxs-lookup"><span data-stu-id="68a52-255">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="68a52-256">コレクションにインデックスがある場合、移動した要素のインデックスも更新されます。</span><span class="sxs-lookup"><span data-stu-id="68a52-256">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="68a52-257">この動作は、要素が概念的にバケットにグループ化されているハッシュ テーブルなどのコレクションには適用されません。</span><span class="sxs-lookup"><span data-stu-id="68a52-257">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="68a52-258">
            <paramref name="index" /> が <see cref="T:System.Collections.IList" /> の有効なインデックスではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-258">
              <paramref name="index" /> is not a valid index in the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="68a52-259">
            <see langword="ICollection" /> は読み取り専用です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-259">The <see langword="ICollection" /> is read-only.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="68a52-260">コピー操作の対象である <see cref="T:System.Array" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-260">The <see cref="T:System.Array" /> which is the target of the copy operation.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="68a52-261">
            <see cref="T:System.Collections.ICollection" /> のコピー開始位置を表す、0 から始まるインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-261">The zero-based index within the <see cref="T:System.Collections.ICollection" /> where the copy starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="68a52-262">
            <see cref="T:System.Collections.ICollection" /> の要素を <see cref="T:System.Array" /> にコピーします。コピーは特定の <see cref="T:System.Array" /> のインデックスから開始されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-262">Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.ActivityCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="68a52-263">
            <see cref="T:System.Collections.Generic.ICollection`1" /> へのアクセスが同期されているか、つまりスレッド セーフかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-263">Gets a value that indicates whether access to the <see cref="T:System.Collections.Generic.ICollection`1" /> is synchronized, that is thread-safe.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="68a52-264">
            <see langword="true" /> へのアクセスが同期されている (スレッド セーフである) 場合は <see cref="T:System.Collections.Generic.ICollection`1" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-264">
              <see langword="true" /> if access to the <see cref="T:System.Collections.Generic.ICollection`1" /> is synchronized, that is, thread-safe; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68a52-265"><xref:System.Collections.ICollection.SyncRoot%2A> は、<xref:System.Collections.Generic.ICollection%601> へのアクセスを同期するために使用できるオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="68a52-265"><xref:System.Collections.ICollection.SyncRoot%2A> returns an object, which can be used to synchronize access to the <xref:System.Collections.Generic.ICollection%601>.</span></span>  
  
 <span data-ttu-id="68a52-266"><xref:System.Collections?displayProperty=nameWithType> 名前空間内のほとんどのコレクション クラスは、`Synchronized` メソッドも実装しています。このメソッドは、基になるコレクションをラップする同期されたラッパーを提供します。</span><span class="sxs-lookup"><span data-stu-id="68a52-266">Most collection classes in the <xref:System.Collections?displayProperty=nameWithType> namespace also implement a `Synchronized` method, which provides a synchronized wrapper around the underlying collection.</span></span>  
  
 <span data-ttu-id="68a52-267">コレクションの列挙は、本質的にスレッド セーフなプロシージャではありません。</span><span class="sxs-lookup"><span data-stu-id="68a52-267">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="68a52-268">コレクションの同期がとられている場合でも、別のスレッドによってそのコレクションを変更できるため、変更の結果として列挙子は例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="68a52-268">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="68a52-269">列挙処理を確実にスレッド セーフに行うには、列挙中にコレクションをロックするか、他のスレッドによって行われた変更によってスローされる例外をキャッチします。</span><span class="sxs-lookup"><span data-stu-id="68a52-269">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.ActivityCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="68a52-270">
            <see cref="T:System.Collections.Generic.ICollection`1" /> へのアクセスを同期するために使用できるオブジェクトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-270">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.Generic.ICollection`1" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="68a52-271">
            <see cref="T:System.Collections.Generic.ICollection`1" /> へのアクセスの同期に使用できるオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-271">An object that can be used to synchronize access to the <see cref="T:System.Collections.Generic.ICollection`1" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68a52-272">基になっているストアがパブリックではないコレクションの場合、現在のインスタンスを返す実装が要求されます。</span><span class="sxs-lookup"><span data-stu-id="68a52-272">For collections whose underlying store is not publicly available, the expected implementation is to return the current instance.</span></span> <span data-ttu-id="68a52-273">ただし、他のコレクションをラップするコレクションの場合、現在のインスタンスへのポインターを返すのでは不十分なことがあります。このようなコレクションは、基になっているコレクションの <xref:System.Collections.ICollection.SyncRoot%2A> プロパティを返す必要があります。</span><span class="sxs-lookup"><span data-stu-id="68a52-273">Note that the pointer to the current instance might not be sufficient for collections that wrap other collections; those should return the underlying collection <xref:System.Collections.ICollection.SyncRoot%2A> property.</span></span>  
  
 <span data-ttu-id="68a52-274"><xref:System.Collections?displayProperty=nameWithType> 名前空間内のほとんどのコレクション クラスは、`Synchronized` メソッドも実装しています。このメソッドは、基になるコレクションをラップする同期されたラッパーを提供します。</span><span class="sxs-lookup"><span data-stu-id="68a52-274">Most collection classes in the <xref:System.Collections?displayProperty=nameWithType> namespace also implement a `Synchronized` method, which provides a synchronized wrapper around the underlying collection.</span></span> <span data-ttu-id="68a52-275">ただし、派生クラスは <xref:System.Workflow.ComponentModel.ActivityCollection.System%23Collections%23ICollection%23SyncRoot> プロパティを使って、コレクションの同期されたバージョンを独自に提供できます。</span><span class="sxs-lookup"><span data-stu-id="68a52-275">However, derived classes can provide their own synchronized version of the collection using the <xref:System.Workflow.ComponentModel.ActivityCollection.System%23Collections%23ICollection%23SyncRoot> property.</span></span> <span data-ttu-id="68a52-276">同期されたコードでは、コレクションを直接操作するのではなく、コレクションの <xref:System.Workflow.ComponentModel.ActivityCollection.System%23Collections%23ICollection%23SyncRoot> プロパティに対して操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="68a52-276">The synchronizing code must perform operations on the <xref:System.Workflow.ComponentModel.ActivityCollection.System%23Collections%23ICollection%23SyncRoot> property of the collection, not directly on the collection.</span></span> <span data-ttu-id="68a52-277">これにより、他のオブジェクトから派生したコレクションを適切に操作できるようになります。</span><span class="sxs-lookup"><span data-stu-id="68a52-277">This ensures proper operation of collections that are derived from other objects.</span></span> <span data-ttu-id="68a52-278">特に、コレクション インスタンスを同時に変更する可能性がある別スレッドとの間で、正常な同期を維持します。</span><span class="sxs-lookup"><span data-stu-id="68a52-278">Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the collection instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="68a52-279">基になる <see cref="T:System.Collections.IEnumerator" /> の各項目に対して反復処理を行う <see cref="T:System.Collections.IList" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-279">Returns an <see cref="T:System.Collections.IEnumerator" /> that iterates through the underlying <see cref="T:System.Collections.IList" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="68a52-280">コレクションを反復処理するために使用できる <see cref="T:System.Collections.IEnumerator" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-280">An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68a52-281"><xref:System.Collections.IEnumerator> は、コレクション内のデータの読み取りだけを許可します。</span><span class="sxs-lookup"><span data-stu-id="68a52-281">An <xref:System.Collections.IEnumerator> only allows for reading the data in the collection.</span></span> <span data-ttu-id="68a52-282"><xref:System.Collections.IEnumerator> を使用して基になるコレクションを変更することはできません。</span><span class="sxs-lookup"><span data-stu-id="68a52-282">You cannot use an <xref:System.Collections.IEnumerator> to modify the underlying collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="68a52-283">
            <see cref="T:System.Object" /> に追加する <see cref="T:System.Collections.IList" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-283">The <see cref="T:System.Object" /> to add to the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="68a52-284">
            <see cref="T:System.Collections.IList" /> の末尾の <see cref="T:System.Collections.IList" /> にオブジェクトを追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-284">Adds an object to the <see cref="T:System.Collections.IList" /> at the end of the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="68a52-285">
            <see cref="T:System.Int32" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-285">Returns <see cref="T:System.Int32" />.</span>
          </span>
          <span data-ttu-id="68a52-286">追加した <see cref="T:System.Object" /> の、0 から始まるインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-286">The zero-based index of the <see cref="T:System.Object" /> that was just added.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Clear">
      <MemberSignature Language="C#" Value="void IList.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Clear" />
      <MemberSignature Language="VB.NET" Value="Sub Clear () Implements IList.Clear" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Clear() = System::Collections::IList::Clear;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="68a52-287">
            <see cref="T:System.Workflow.ComponentModel.Activity" /> からすべての <see cref="T:System.Collections.ICollection" /> を削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-287">Removes all <see cref="T:System.Workflow.ComponentModel.Activity" /> from the <see cref="T:System.Collections.ICollection" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="68a52-288">
            <see cref="T:System.Object" /> 内で検索される <see cref="T:System.Collections.IList" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-288">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="68a52-289">
            <see cref="T:System.Object" /> がコレクションに属するかどうかを表す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-289">Gets a value that indicates whether the <see cref="T:System.Object" /> is a member of the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="68a52-290">
            <paramref name="value" /> がコレクションに存在する場合は <see cref="T:System.Boolean" /><see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-290">Returns <see cref="T:System.Boolean" /><see langword="true" /> if <paramref name="value" /> is in the collection; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="68a52-291">インデックスを調べる <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-291">The <see cref="T:System.Object" /> to be indexed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="68a52-292">基になるアクティビティ コレクション内にある <see cref="T:System.Object" /> の、0 から始まるインデックスを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-292">Gets the zero-based index of the <see cref="T:System.Object" /> in the underlying activities collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="68a52-293">基になるアクティビティ コレクション内にある <paramref name="value" /> の 0 から始まるインデックス番号。コレクション内で見つからなかった場合は -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-293">The zero-based index of the <paramref name="value" /> in the underlying activities collection or -1 if not found in the collection.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="68a52-294">
            <paramref name="value" /> が <see cref="T:System.Workflow.ComponentModel.Activity" /> の型ではなく、例外オブジェクトに "Error_InvalidListItem" というエラー メッセージ が含まれます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-294">The <paramref name="value" /> is not of type <see cref="T:System.Workflow.ComponentModel.Activity" /> and the exception object contains "Error_InvalidListItem" error message.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="68a52-295">挿入位置を表す、0 から始まるインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-295">The zero-based position of the insertion.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="68a52-296">挿入するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-296">The object to insert.</span>
          </span>
          <span data-ttu-id="68a52-297">
            <see cref="T:System.Workflow.ComponentModel.Activity" /> 型でなければなりません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-297">It must be of type <see cref="T:System.Workflow.ComponentModel.Activity" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="68a52-298">
            <see cref="T:System.Object" /> を <see cref="T:System.Collections.IList" /> 内の、0 から始まるインデックスで指定された位置に挿入します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-298">Inserts an <see cref="T:System.Object" /> into the <see cref="T:System.Collections.IList" /> at the zero-based index specified.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsFixedSize { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="68a52-299">
            <see cref="T:System.Collections.IList" /> が固定サイズかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-299">Gets a value indicating whether the <see cref="T:System.Collections.IList" /> has a fixed size.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="68a52-300">
            <see langword="true" /> が固定サイズの場合は <see cref="T:System.Collections.IList" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-300">
              <see langword="true" /> if the <see cref="T:System.Collections.IList" /> has a fixed size; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68a52-301">固定サイズのコレクションでは、コレクションの作成後に要素の追加または削除はできませんが、既存の要素の変更はできます。</span><span class="sxs-lookup"><span data-stu-id="68a52-301">A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but it allows the modification of existing elements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="68a52-302">
            <see cref="T:System.Collections.Generic.ICollection`1" /> が読み取り専用かどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-302">Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="68a52-303">
            <see cref="T:System.Boolean" /> が読み取り専用の場合は <see cref="T:System.Collections.Generic.ICollection`1" /><see langword="true" />、それ以外の場合は <see langword="false" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-303">Returns <see cref="T:System.Boolean" /><see langword="true" /> if the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IList.Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="68a52-304">
            <see cref="T:System.Collections.ICollection" /> の 0 から始まるインデックス番号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-304">Zero-based index into the <see cref="T:System.Collections.ICollection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="68a52-305">インデックスに基づいて、<see cref="T:System.Collections.ICollection" /> のアクティビティを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-305">Gets or sets the activity in the <see cref="T:System.Collections.ICollection" /> based on the index.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="68a52-306">
            <see cref="T:System.Object" /> 内のインデックスが呼び出しで指定されている <see cref="T:System.Collections.ICollection" /> のメンバー アクティビティ <see cref="T:System.Collections.ICollection" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-306">Returns <see cref="T:System.Object" />, a member activity of the <see cref="T:System.Collections.ICollection" />, whose index in the <see cref="T:System.Collections.ICollection" /> was specified in the call.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="68a52-307">
            <see cref="T:System.Object" /> から削除する <see cref="T:System.Collections.IList" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-307">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="68a52-308">特定のオブジェクトが <see cref="T:System.Collections.IList" /> 内にあるときに、最初に出現したものを削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-308">Removes the first occurrence of a specific object from the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68a52-309">削除された要素の後続の要素は、空白になった場所に上に詰めて移動します。</span><span class="sxs-lookup"><span data-stu-id="68a52-309">The elements that follow the removed element move up to occupy the vacated spot.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="68a52-310">
            <see cref="T:System.Collections.IList" /> は読み取り専用です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-310">The <see cref="T:System.Collections.IList" /> is read-only.</span>
          </span>
          <span data-ttu-id="68a52-311">
            <see cref="T:System.Collections.IList" /> は固定サイズです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68a52-311">
              <see cref="T:System.Collections.IList" /> has a fixed size.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>