<Type Name="VisualState" FullName="System.Windows.VisualState">
  <Metadata><Meta Name="ms.openlocfilehash" Value="94d52fadbbe5ee0176549400999a58e3ae14fb10" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70571773" /></Metadata><TypeSignature Language="C#" Value="public class VisualState : System.Windows.DependencyObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit VisualState extends System.Windows.DependencyObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.VisualState" />
  <TypeSignature Language="VB.NET" Value="Public Class VisualState&#xA;Inherits DependencyObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class VisualState : System::Windows::DependencyObject" />
  <TypeSignature Language="F#" Value="type VisualState = class&#xA;    inherit DependencyObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Storyboard")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.RuntimeNameProperty("Name")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>コントロールが特定の状態のときの外観を表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 は<xref:System.Windows.VisualState> 、コントロールが特定の状態にあるときのコントロールの外観を指定します。 たとえば、 <xref:System.Windows.Controls.Button>が押されている場合、その境界線は通常とは異なる色になることがあります。  クラス<xref:System.Windows.VisualState>には、 <xref:System.Windows.VisualState.Storyboard%2A>コントロールの外観を変更するプロパティがあります。 コントロールが<xref:System.Windows.VisualState.Name%2A?displayProperty=nameWithType>プロパティによって指定された状態になると<xref:System.Windows.VisualState.Storyboard%2A> 、が開始されます。 コントロールが状態を終了すると、 <xref:System.Windows.VisualState.Storyboard%2A>は停止します。  
  
 プロパティ<xref:System.Windows.VisualStateGroup.States%2A?displayProperty=nameWithType>は、 <xref:System.Windows.VisualState>オブジェクトを格納します。 <xref:System.Windows.VisualStateGroup>オブジェクトは、ので<xref:System.Windows.VisualStateManager.VisualStateGroups%2A?displayProperty=nameWithType>定義<xref:System.Windows.FrameworkElement>されている添付プロパティに追加されます。 オブジェクトは任意<xref:System.Windows.VisualState> <xref:System.Windows.FrameworkElement>のに追加でき<xref:System.Windows.Controls.Control>ますが、 <xref:System.Windows.Controls.ControlTemplate>通常はので使用されます。 既存のコントロールのオブジェクトと<xref:System.Windows.Controls.ControlTemplate> <xref:System.Windows.VisualState>オブジェクトを作成する方法の詳細については、「 [ControlTemplate を作成して既存のコントロールの外観をカスタマイズ](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)する」を参照してください。 の外部<xref:System.Windows.VisualState> <xref:System.Windows.VisualStateManager>でオブジェクトを使用する例については、クラスを参照してください。 <xref:System.Windows.Controls.ControlTemplate>  
  
   
  
## Examples  
 次の例では<xref:System.Windows.VisualStateGroup> 、と<xref:System.Windows.Controls.ControlTemplate> `CommonStates` `MouseOver` `Pressed`いうの内に <xref:System.Windows.VisualState> を作成し、、、、およびの各状態のオブジェクトを追加します。 `Normal`  <xref:System.Windows.Controls.Button> また、は、に`CommonStates`ある <xref:System.Windows.VisualStateGroup> という`Disabled`状態を定義しますが、この例では簡潔にするためにこれを省略しています。 <xref:System.Windows.Controls.Button> 全体の例については、「 [ControlTemplate を作成して既存のコントロールの外観をカスタマイズ](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)する」を参照してください。  
  
 [!code-xaml[VSMButtonTemplate#10](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/buttonstages.xaml#10)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VisualState ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.VisualState.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VisualState();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.VisualState" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualState.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.VisualState.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.VisualState" /> の名前を取得または設定します。</summary>
        <value><see cref="T:System.Windows.VisualState" /> の名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 のを<xref:System.Windows.VisualState.Name%2A> <xref:System.Windows.VisualState>に渡すことによって、要素が入力するビジュアル状態を指定します。 <xref:System.Windows.VisualStateManager>  
  
 <xref:System.Windows.VisualStateManager> <xref:System.Windows.TemplateVisualStateAttribute> <xref:System.Windows.VisualState> <xref:System.Windows.Controls.ControlTemplate>がのを<xref:System.Windows.Controls.Control> 使用 <xref:System.Windows.Controls.ControlTemplate> する場合、コントロールの作成者は、をクラスシグネチャに配置して、コントロールが内で検索する必要があるオブジェクトを指定する必要があります。 <xref:System.Windows.Controls.ControlTemplate>作成者は<xref:System.Windows.VisualState> <xref:System.Windows.VisualState.Name%2A> 、新しいオブジェクトを定義し、プロパティを<xref:System.Windows.TemplateVisualStateAttribute.Name%2A?displayProperty=nameWithType>プロパティで指定された値に設定します。  
  
 に[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]含まれているコントロールの表示状態の名前を確認するには、「[コントロールのスタイルとテンプレート](~/docs/framework/wpf/controls/control-styles-and-templates.md)」を参照してください。 既存のコントロールのオブジェクトと<xref:System.Windows.Controls.ControlTemplate> <xref:System.Windows.VisualState>オブジェクトを作成する方法の詳細については、「 [ControlTemplate を作成して既存のコントロールの外観をカスタマイズ](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)する」を参照してください。  
  
   
  
## Examples  
 次の例では<xref:System.Windows.VisualStateGroup> 、と<xref:System.Windows.Controls.ControlTemplate> `CommonStates` `MouseOver` `Pressed`いうの内に <xref:System.Windows.VisualState> を作成し、、、、およびの各状態のオブジェクトを追加します。 `Normal`  <xref:System.Windows.Controls.Button> また、は、に`CommonStates`ある <xref:System.Windows.VisualStateGroup> という`Disabled`状態を定義しますが、この例では簡潔にするためにこれを省略しています。 <xref:System.Windows.Controls.Button> 全体の例については、「 [ControlTemplate を作成して既存のコントロールの外観をカスタマイズ](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)する」を参照してください。  
  
 [!code-xaml[VSMButtonTemplate#10](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/buttonstages.xaml#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Storyboard">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Storyboard Storyboard { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Animation.Storyboard Storyboard" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualState.Storyboard" />
      <MemberSignature Language="VB.NET" Value="Public Property Storyboard As Storyboard" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Animation::Storyboard ^ Storyboard { System::Windows::Media::Animation::Storyboard ^ get(); void set(System::Windows::Media::Animation::Storyboard ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Storyboard : System.Windows.Media.Animation.Storyboard with get, set" Usage="System.Windows.VisualState.Storyboard" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Storyboard</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールが <see cref="T:System.Windows.Media.Animation.Storyboard" /> で表される状態のときに、コントロールの外観を定義する <see cref="T:System.Windows.VisualState" /> を取得または設定します。</summary>
        <value>コントロールが <see cref="T:System.Windows.VisualState" /> で表される状態のときに、コントロールの外観を定義するストーリーボード。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コントロールが<xref:System.Windows.VisualState.Name%2A?displayProperty=nameWithType>プロパティによって指定された状態になると<xref:System.Windows.VisualState.Storyboard%2A> 、が開始されます。 コントロールが状態を終了すると、 <xref:System.Windows.VisualState.Storyboard%2A>は停止します。  
  
   
  
## Examples  
 次の例では、 <xref:System.Windows.Controls.ControlTemplate> 1 つ<xref:System.Windows.Controls.Button> <xref:System.Windows.Controls.Grid>のを含むの単純なを作成します。  呼び出されるには、ユーザーがの上にマウス<xref:System.Windows.Controls.Grid>を置い<xref:System.Windows.Controls.Button>たときに、の色を緑から赤に変更するストーリーボードがあります。 `MouseOver` <xref:System.Windows.VisualState>  呼び出されたは、ユーザーがマウスをボタンの外に移動したとき<xref:System.Windows.Controls.Grid>に、が緑に戻るようにするために用意されています。 `Normal` <xref:System.Windows.VisualState>  
  
 [!code-xaml[VSMButtonTemplate#11](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/window1.xaml#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
