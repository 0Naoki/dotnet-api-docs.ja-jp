<Type Name="VisualState" FullName="System.Windows.VisualState">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b04245240fdfdb362dd764fe8c78afbbd4fe63b9" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39745379" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class VisualState : System.Windows.DependencyObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit VisualState extends System.Windows.DependencyObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.VisualState" />
  <TypeSignature Language="VB.NET" Value="Public Class VisualState&#xA;Inherits DependencyObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class VisualState : System::Windows::DependencyObject" />
  <TypeSignature Language="F#" Value="type VisualState = class&#xA;    inherit DependencyObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Windows.Markup.ContentProperty("Storyboard")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Windows.Markup.RuntimeNameProperty("Name")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>コントロールが特定の状態のときの外観を表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A<xref:System.Windows.VisualState>が特定の状態にあるときのコントロールの外観を指定します。 たとえば、ときに、<xref:System.Windows.Controls.Button>は、押された、境界線で通常は異なる色可能性があります。  <xref:System.Windows.VisualState>クラスには、<xref:System.Windows.VisualState.Storyboard%2A>コントロールの外観を変更するプロパティ。 コントロールがで指定されている状態に入ったとき、<xref:System.Windows.VisualState.Name%2A?displayProperty=nameWithType>プロパティ、<xref:System.Windows.VisualState.Storyboard%2A>が開始されます。 コントロールの状態、終了時に、<xref:System.Windows.VisualState.Storyboard%2A>を停止します。  
  
 <xref:System.Windows.VisualStateGroup.States%2A?displayProperty=nameWithType>プロパティを含む<xref:System.Windows.VisualState>オブジェクト。 <xref:System.Windows.VisualStateGroup> オブジェクトに追加されます、<xref:System.Windows.VisualStateManager.VisualStateGroups%2A?displayProperty=nameWithType>添付プロパティで定義されている場合は、上、 <xref:System.Windows.FrameworkElement>。 追加することができます<xref:System.Windows.VisualState>いずれにもオブジェクト<xref:System.Windows.FrameworkElement>が通常はで使用される、<xref:System.Windows.Controls.ControlTemplate>の<xref:System.Windows.Controls.Control>。 作成する方法については、<xref:System.Windows.Controls.ControlTemplate>と<xref:System.Windows.VisualState>既存のコントロール オブジェクトを参照してください[ControlTemplate の作成による既存のコントロールの外観のカスタマイズ](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)します。 使用する例については<xref:System.Windows.VisualState>外のオブジェクトを<xref:System.Windows.Controls.ControlTemplate>を参照してください、<xref:System.Windows.VisualStateManager>クラス。  
  
   
  
## Examples  
 次の例では、作成、<xref:System.Windows.VisualStateGroup>で、<xref:System.Windows.Controls.ControlTemplate>の<xref:System.Windows.Controls.Button>と呼ばれる`CommonStates`し、追加<xref:System.Windows.VisualState>オブジェクト、州、 `Normal`、`Pressed`と`MouseOver`。 <xref:System.Windows.Controls.Button>もと呼ばれる状態を定義`Disabled`内にある、 `CommonStates`<xref:System.Windows.VisualStateGroup>例は簡潔にするため省略します。 全体の例では、次を参照してください。 [ControlTemplate の作成による既存のコントロールの外観のカスタマイズ](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)します。  
  
 [!code-xaml[VSMButtonTemplate#10](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/buttonstages.xaml#10)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VisualState ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.VisualState.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VisualState();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.VisualState" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualState.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.VisualState.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.VisualState" /> の名前を取得または設定します。</summary>
        <value>
          <see cref="T:System.Windows.VisualState" /> の名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 要素を表示する状態を渡すことで入力する必要がありますを指定する、<xref:System.Windows.VisualState.Name%2A>の<xref:System.Windows.VisualState>を<xref:System.Windows.VisualStateManager>します。  
  
 ときに、<xref:System.Windows.Controls.Control>を使用して、<xref:System.Windows.VisualStateManager>で、 <xref:System.Windows.Controls.ControlTemplate>、コントロールの作成者を指定する必要があります<xref:System.Windows.VisualState>オブジェクト内で検索するコントロールが必要です、<xref:System.Windows.Controls.ControlTemplate>配置することで、<xref:System.Windows.TemplateVisualStateAttribute>そのクラスのシグネチャでします。 <xref:System.Windows.Controls.ControlTemplate> 作成者は新しい定義<xref:System.Windows.VisualState>オブジェクトと設定、<xref:System.Windows.VisualState.Name%2A>プロパティによって指定された値を<xref:System.Windows.TemplateVisualStateAttribute.Name%2A?displayProperty=nameWithType>プロパティ。  
  
 含まれているコントロールの視覚的な状態の名前を検索する[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]を参照してください[コントロールのスタイルとテンプレート](~/docs/framework/wpf/controls/control-styles-and-templates.md)します。 作成する方法については、<xref:System.Windows.Controls.ControlTemplate>と<xref:System.Windows.VisualState>既存のコントロール オブジェクトを参照してください[ControlTemplate の作成による既存のコントロールの外観のカスタマイズ](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)します。  
  
   
  
## Examples  
 次の例では、作成、<xref:System.Windows.VisualStateGroup>で、<xref:System.Windows.Controls.ControlTemplate>の<xref:System.Windows.Controls.Button>と呼ばれる`CommonStates`し、追加<xref:System.Windows.VisualState>オブジェクト、州、 `Normal`、`Pressed`と`MouseOver`。 <xref:System.Windows.Controls.Button>もと呼ばれる状態を定義`Disabled`内にある、 `CommonStates`<xref:System.Windows.VisualStateGroup>例は簡潔にするため省略します。 全体の例では、次を参照してください。 [ControlTemplate の作成による既存のコントロールの外観のカスタマイズ](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)します。  
  
 [!code-xaml[VSMButtonTemplate#10](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/buttonstages.xaml#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Storyboard">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Storyboard Storyboard { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Animation.Storyboard Storyboard" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualState.Storyboard" />
      <MemberSignature Language="VB.NET" Value="Public Property Storyboard As Storyboard" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Animation::Storyboard ^ Storyboard { System::Windows::Media::Animation::Storyboard ^ get(); void set(System::Windows::Media::Animation::Storyboard ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Storyboard : System.Windows.Media.Animation.Storyboard with get, set" Usage="System.Windows.VisualState.Storyboard" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Storyboard</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールが <see cref="T:System.Windows.Media.Animation.Storyboard" /> で表される状態のときに、コントロールの外観を定義する <see cref="T:System.Windows.VisualState" /> を取得または設定します。</summary>
        <value>コントロールが <see cref="T:System.Windows.VisualState" /> で表される状態のときに、コントロールの外観を定義するストーリーボード。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コントロールがで指定されている状態に入ったとき、<xref:System.Windows.VisualState.Name%2A?displayProperty=nameWithType>プロパティ、<xref:System.Windows.VisualState.Storyboard%2A>が開始されます。 コントロールの状態、終了時に、<xref:System.Windows.VisualState.Storyboard%2A>を停止します。  
  
   
  
## Examples  
 次の例では、単純な<xref:System.Windows.Controls.ControlTemplate>の<xref:System.Windows.Controls.Button>1 つを格納している<xref:System.Windows.Controls.Grid>します。  <xref:System.Windows.VisualState>と呼ばれる`MouseOver`の色を変更するストーリー ボード、<xref:System.Windows.Controls.Grid>赤に緑からユーザーが経由で、マウスを置く、<xref:System.Windows.Controls.Button>します。  <xref:System.Windows.VisualState>と呼ばれる`Normal`が、ユーザーがオフにする、ボタン、マウスを移動したときにするために含まれる、<xref:System.Windows.Controls.Grid>緑に返します。  
  
 [!code-xaml[VSMButtonTemplate#11](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/window1.xaml#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>