<Type Name="RoutedEventArgs" FullName="System.Windows.RoutedEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="86f523bef7f76ecf3e0fc2ab9adc3b6f2590fe25" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39915997" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class RoutedEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RoutedEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.RoutedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class RoutedEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class RoutedEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type RoutedEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="a4069-101">ルーティング イベントに関連付けられている状態情報とイベント データを格納します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="a4069-101">Contains state information and event data associated with a routed event.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4069-102">異なる<xref:System.Windows.RoutedEventArgs>、1 つを併用<xref:System.Windows.RoutedEventArgs.RoutedEvent%2A>します。</span><span class="sxs-lookup"><span data-stu-id="a4069-102">Different <xref:System.Windows.RoutedEventArgs> can be used with a single <xref:System.Windows.RoutedEventArgs.RoutedEvent%2A>.</span></span> <span data-ttu-id="a4069-103">イベントのイベント データをパッケージ化するため、このクラスは、 <xref:System.Windows.RoutedEventArgs.RoutedEvent%2A>、余分なイベントの状態情報を提供され、ルーティング イベントに関連付けられたハンドラーを呼び出すためイベント システムによって使用されます。</span><span class="sxs-lookup"><span data-stu-id="a4069-103">This class is responsible for packaging the event data for a <xref:System.Windows.RoutedEventArgs.RoutedEvent%2A>, providing extra event state information, and is used by the event system for invoking the handler associated with the routed event.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Windows.RoutedEventArgs.RoutedEvent" />
    <altmember cref="T:System.Windows.EventManager" />
    <altmember cref="M:System.Windows.UIElement.RaiseEvent(System.Windows.RoutedEventArgs)" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a4069-104">
            <see cref="T:System.Windows.RoutedEventArgs" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4069-104">Initializes a new instance of the <see cref="T:System.Windows.RoutedEventArgs" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RoutedEventArgs ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.RoutedEventArgs.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RoutedEventArgs();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a4069-105">
            <see cref="T:System.Windows.RoutedEventArgs" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4069-105">Initializes a new instance of the <see cref="T:System.Windows.RoutedEventArgs" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4069-106">このコンス トラクター、新しいすべてのパブリック プロパティを使用する場合<xref:System.Windows.RoutedEventArgs>インスタンスには、次の既定値が前提としています。</span><span class="sxs-lookup"><span data-stu-id="a4069-106">When using this parameterless constructor, all public properties of the new <xref:System.Windows.RoutedEventArgs> instance assume the following default values:</span></span>  
  
-   <span data-ttu-id="a4069-107"><xref:System.Windows.RoutedEventArgs.RoutedEvent%2A> 既定値は`null`します。</span><span class="sxs-lookup"><span data-stu-id="a4069-107"><xref:System.Windows.RoutedEventArgs.RoutedEvent%2A> defaults to `null`.</span></span>  
  
-   <span data-ttu-id="a4069-108"><xref:System.Windows.RoutedEventArgs.Handled%2A> 既定値は `false`</span><span class="sxs-lookup"><span data-stu-id="a4069-108"><xref:System.Windows.RoutedEventArgs.Handled%2A> defaults to `false`</span></span>  
  
-   <span data-ttu-id="a4069-109"><xref:System.Windows.RoutedEventArgs.Source%2A> 既定値は`null`します。</span><span class="sxs-lookup"><span data-stu-id="a4069-109"><xref:System.Windows.RoutedEventArgs.Source%2A> defaults to `null`.</span></span>  
  
-   <span data-ttu-id="a4069-110"><xref:System.Windows.RoutedEventArgs.OriginalSource%2A> 既定値は`null`します。</span><span class="sxs-lookup"><span data-stu-id="a4069-110"><xref:System.Windows.RoutedEventArgs.OriginalSource%2A> defaults to `null`.</span></span>  
  
 <span data-ttu-id="a4069-111">値は null<xref:System.Windows.RoutedEventArgs.Source%2A>と<xref:System.Windows.RoutedEventArgs.OriginalSource%2A>のみといって、<xref:System.Windows.RoutedEventArgs>データは、ソースを指定する操作を行わない。</span><span class="sxs-lookup"><span data-stu-id="a4069-111">Null values for <xref:System.Windows.RoutedEventArgs.Source%2A> and <xref:System.Windows.RoutedEventArgs.OriginalSource%2A> only mean that the <xref:System.Windows.RoutedEventArgs> data makes no attempt to specify the source.</span></span> <span data-ttu-id="a4069-112">呼び出しでこのインスタンスを使用するときに<xref:System.Windows.UIElement.RaiseEvent%2A>、<xref:System.Windows.RoutedEventArgs.Source%2A>と<xref:System.Windows.RoutedEventArgs.OriginalSource%2A>イベントを発生し、ルーティングでリスナーに渡されます要素に基づいて値が設定されます。</span><span class="sxs-lookup"><span data-stu-id="a4069-112">When this instance is used in a call to <xref:System.Windows.UIElement.RaiseEvent%2A>, the  <xref:System.Windows.RoutedEventArgs.Source%2A> and <xref:System.Windows.RoutedEventArgs.OriginalSource%2A> values are populated based on the element that raised the event and are passed on to listeners through the routing.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.RoutedEventArgs.RoutedEvent" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RoutedEventArgs (System.Windows.RoutedEvent routedEvent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.RoutedEvent routedEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.RoutedEventArgs.#ctor(System.Windows.RoutedEvent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RoutedEventArgs(System::Windows::RoutedEvent ^ routedEvent);" />
      <MemberSignature Language="F#" Value="new System.Windows.RoutedEventArgs : System.Windows.RoutedEvent -&gt; System.Windows.RoutedEventArgs" Usage="new System.Windows.RoutedEventArgs routedEvent" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
      </Parameters>
      <Docs>
        <param name="routedEvent">
          <span data-ttu-id="a4069-113">
            <see cref="T:System.Windows.RoutedEventArgs" /> クラスのこのインスタンスに対するルーティング イベント識別子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4069-113">The routed event identifier for this instance of the <see cref="T:System.Windows.RoutedEventArgs" /> class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4069-114">指定されたルーティング イベント識別子を使用して、<see cref="T:System.Windows.RoutedEventArgs" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4069-114">Initializes a new instance of the <see cref="T:System.Windows.RoutedEventArgs" /> class, using the supplied routed event identifier.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4069-115">このオーバー ロードされたコンス トラクターを使用する場合に新しいプロパティが指定されていない<xref:System.Windows.RoutedEventArgs>インスタンスには、次の既定値が前提としています。</span><span class="sxs-lookup"><span data-stu-id="a4069-115">When using this overloaded constructor, unspecified properties of the new <xref:System.Windows.RoutedEventArgs> instance assume the following default values:</span></span>  
  
-   <span data-ttu-id="a4069-116"><xref:System.Windows.RoutedEventArgs.Handled%2A> 既定値は `false`</span><span class="sxs-lookup"><span data-stu-id="a4069-116"><xref:System.Windows.RoutedEventArgs.Handled%2A> defaults to `false`</span></span>  
  
-   <span data-ttu-id="a4069-117"><xref:System.Windows.RoutedEventArgs.Source%2A> 既定値は`null`します。</span><span class="sxs-lookup"><span data-stu-id="a4069-117"><xref:System.Windows.RoutedEventArgs.Source%2A> defaults to `null`.</span></span>  
  
-   <span data-ttu-id="a4069-118"><xref:System.Windows.RoutedEventArgs.OriginalSource%2A> 既定値は`null`します。</span><span class="sxs-lookup"><span data-stu-id="a4069-118"><xref:System.Windows.RoutedEventArgs.OriginalSource%2A> defaults to `null`.</span></span>  
  
 <span data-ttu-id="a4069-119">値は null<xref:System.Windows.RoutedEventArgs.Source%2A>と<xref:System.Windows.RoutedEventArgs.OriginalSource%2A>のみからといってこれ<xref:System.Windows.RoutedEventArgs>ソースの指定を試みません。</span><span class="sxs-lookup"><span data-stu-id="a4069-119">Null values for <xref:System.Windows.RoutedEventArgs.Source%2A> and <xref:System.Windows.RoutedEventArgs.OriginalSource%2A> only mean that this <xref:System.Windows.RoutedEventArgs> makes no attempt to specify the source.</span></span> <span data-ttu-id="a4069-120">呼び出しでこのインスタンスを使用するときに<xref:System.Windows.UIElement.RaiseEvent%2A>、<xref:System.Windows.RoutedEventArgs.Source%2A>と<xref:System.Windows.RoutedEventArgs.OriginalSource%2A>イベントを発生し、ルーティングでリスナーに渡されます要素に基づいて値が設定されます。</span><span class="sxs-lookup"><span data-stu-id="a4069-120">When this instance is used in a call to <xref:System.Windows.UIElement.RaiseEvent%2A>, the  <xref:System.Windows.RoutedEventArgs.Source%2A> and <xref:System.Windows.RoutedEventArgs.OriginalSource%2A> values are populated based on the element that raised the event and are passed on to listeners through the routing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a4069-121">次の例は、新しい<xref:System.Windows.RoutedEventArgs>への呼び出しで使用するため<xref:System.Windows.UIElement.RaiseEvent%2A>します。</span><span class="sxs-lookup"><span data-stu-id="a4069-121">The following example constructs a new <xref:System.Windows.RoutedEventArgs> for use in a call to <xref:System.Windows.UIElement.RaiseEvent%2A>.</span></span>  
  
 [!code-csharp[RoutedEventCustom#RaiseEvent](~/samples/snippets/csharp/VS_Snippets_Wpf/RoutedEventCustom/CSharp/SDKSampleLibrary/class1.cs#raiseevent)]
 [!code-vb[RoutedEventCustom#RaiseEvent](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RoutedEventCustom/VB/SDKSampleLibrary/Class1.vb#raiseevent)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.RaiseEvent(System.Windows.RoutedEventArgs)" />
        <altmember cref="P:System.Windows.RoutedEventArgs.RoutedEvent" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RoutedEventArgs (System.Windows.RoutedEvent routedEvent, object source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.RoutedEvent routedEvent, object source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.RoutedEventArgs.#ctor(System.Windows.RoutedEvent,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RoutedEventArgs(System::Windows::RoutedEvent ^ routedEvent, System::Object ^ source);" />
      <MemberSignature Language="F#" Value="new System.Windows.RoutedEventArgs : System.Windows.RoutedEvent * obj -&gt; System.Windows.RoutedEventArgs" Usage="new System.Windows.RoutedEventArgs (routedEvent, source)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
        <Parameter Name="source" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="routedEvent">
          <span data-ttu-id="a4069-122">
            <see cref="T:System.Windows.RoutedEventArgs" /> クラスのこのインスタンスに対するルーティング イベント識別子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4069-122">The routed event identifier for this instance of the <see cref="T:System.Windows.RoutedEventArgs" /> class.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="a4069-123">イベントの処理時に報告される代替ソース。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4069-123">An alternate source that will be reported when the event is handled.</span>
          </span>
          <span data-ttu-id="a4069-124">
            <see cref="P:System.Windows.RoutedEventArgs.Source" /> プロパティに、このソースが事前設定されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4069-124">This pre-populates the <see cref="P:System.Windows.RoutedEventArgs.Source" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4069-125">指定されたルーティング イベント識別子を使用して、<see cref="T:System.Windows.RoutedEventArgs" /> クラスの新しいインスタンスを初期化します。また、このコンストラクターでは、イベントに対して異なるソースを宣言することができます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4069-125">Initializes a new instance of the <see cref="T:System.Windows.RoutedEventArgs" /> class, using the supplied routed event identifier, and providing the opportunity to declare a different source for the event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4069-126">このオーバー ロードされたコンス トラクターを使用する場合に新しいプロパティが指定されていない<xref:System.Windows.RoutedEventArgs>インスタンスには、次の既定値が前提としています。</span><span class="sxs-lookup"><span data-stu-id="a4069-126">When using this overloaded constructor, unspecified properties of the new <xref:System.Windows.RoutedEventArgs> instance assume the following default values:</span></span>  
  
-   <span data-ttu-id="a4069-127"><xref:System.Windows.RoutedEventArgs.Handled%2A> 既定値は `false`</span><span class="sxs-lookup"><span data-stu-id="a4069-127"><xref:System.Windows.RoutedEventArgs.Handled%2A> defaults to `false`</span></span>  
  
-   <span data-ttu-id="a4069-128"><xref:System.Windows.RoutedEventArgs.OriginalSource%2A> 既定値は`null`します。</span><span class="sxs-lookup"><span data-stu-id="a4069-128"><xref:System.Windows.RoutedEventArgs.OriginalSource%2A> defaults to `null`.</span></span>  
  
 <span data-ttu-id="a4069-129">値は null<xref:System.Windows.RoutedEventArgs.OriginalSource%2A>イベントを発生し、ルーティング渡す要素に基づいて設定されますが、読み取りは`null`呼び出しの前にします。</span><span class="sxs-lookup"><span data-stu-id="a4069-129">Null values for <xref:System.Windows.RoutedEventArgs.OriginalSource%2A> are populated based on the element that raised the event and passed on through the routing, but will read `null` prior to invocation.</span></span>  
  
 <span data-ttu-id="a4069-130">渡すときに、この署名を使用して<xref:System.Windows.RoutedEventArgs>などの仮想メソッドを<xref:System.Windows.Controls.Primitives.TextBoxBase.OnSelectionChanged%2A>呼び出しに引数を使用する場所、<xref:System.Windows.UIElement.RaiseEvent%2A>内部的にします。</span><span class="sxs-lookup"><span data-stu-id="a4069-130">Use this signature when passing <xref:System.Windows.RoutedEventArgs> to virtuals such as <xref:System.Windows.Controls.Primitives.TextBoxBase.OnSelectionChanged%2A>, where the arguments are used to call <xref:System.Windows.UIElement.RaiseEvent%2A> internally.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Handled">
      <MemberSignature Language="C#" Value="public bool Handled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Handled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.RoutedEventArgs.Handled" />
      <MemberSignature Language="VB.NET" Value="Public Property Handled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Handled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Handled : bool with get, set" Usage="System.Windows.RoutedEventArgs.Handled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4069-131">ルーティング イベントがルートをたどる際のイベント処理の現在の状態を示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4069-131">Gets or sets a value that indicates the present state of the event handling for a routed event as it travels the route.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a4069-132">設定する場合に設定<see langword="true" />それ以外の処理済みとしてマークする場合は、イベント<see langword="false" />します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4069-132">If setting, set to <see langword="true" /> if the event is to be marked handled; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="a4069-133">場合は、この値を読み取る<see langword="true" />クラス ハンドラーまたはルート上いくつかのインスタンス ハンドラーのいずれかがこのイベントを処理済みのマークでは既にことを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4069-133">If reading this value, <see langword="true" /> indicates that either a class handler, or some instance handler along the route, has already marked this event handled.</span>
          </span>
          <span data-ttu-id="a4069-134">
            <see langword="false" /> は、いずれのハンドラーもイベントを処理済みとしてマークしていないことを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4069-134">
              <see langword="false" />.indicates that no such handler has marked the event handled.</span>
          </span>
          <span data-ttu-id="a4069-135">既定値は <see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4069-135">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4069-136">イベントを処理済みのマークを付けると、イベント ルート上のリスナーにルーティング イベントの可視性が制限されます。</span><span class="sxs-lookup"><span data-stu-id="a4069-136">Marking the event handled will limit the visibility of the routed event to listeners along the event route.</span></span> <span data-ttu-id="a4069-137">イベントは、ルートの残りの部分を移動してもが、唯一のハンドラーは、特にを追加`HandledEventsToo``true`で、<xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29>応答でメソッドの呼び出しが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="a4069-137">The event does still travel the remainder of the route, but only handlers specifically added with `HandledEventsToo` `true` in the <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> method call will be invoked in response.</span></span> <span data-ttu-id="a4069-138">既定のインスタンスのリスナーのハンドラー (で表されるものなど[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]) は呼び出されません。</span><span class="sxs-lookup"><span data-stu-id="a4069-138">Default handlers on instance listeners (such as those expressed in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]) will not be invoked.</span></span> <span data-ttu-id="a4069-139">処理済みとマークされているイベントを処理は、一般的なシナリオではありません。</span><span class="sxs-lookup"><span data-stu-id="a4069-139">Handling events that are marked handled is not a common scenario.</span></span>  
  
 <span data-ttu-id="a4069-140">コントロールの作成者の場合は、上の決定を行う独自のイベントを定義、コントロールのユーザーと、派生コントロールのすべてのユーザー イベントに関して、クラス レベルでの処理に影響し、では、その他の要素が、コントロールに含まれる可能性があります。または、コントロールが含まれています。</span><span class="sxs-lookup"><span data-stu-id="a4069-140">If you are a control author defining your own events, the decisions you make regarding event handling at the class level will impact users of your control as well as any users of derived controls, and potentially other elements that are either contained by your control or that contain your control.</span></span> <span data-ttu-id="a4069-141">詳細については、「[ルーティング イベントの処理済みとしてのマーキング、およびクラス処理](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="a4069-141">For more information, see [Marking Routed Events as Handled, and Class Handling](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md).</span></span>  
  
 <span data-ttu-id="a4069-142">非常にまれな状況ではイベントを処理する適切な場所<xref:System.Windows.RoutedEventArgs.Handled%2A>がマークされている`true`、および変更することで、イベント引数を変更<xref:System.Windows.RoutedEventArgs.Handled%2A>に`false`します。</span><span class="sxs-lookup"><span data-stu-id="a4069-142">In very rare circumstances it is appropriate to handle events where  <xref:System.Windows.RoutedEventArgs.Handled%2A> is marked `true`, and modify the event arguments by changing <xref:System.Windows.RoutedEventArgs.Handled%2A> to `false`.</span></span> <span data-ttu-id="a4069-143">キーの処理などのコントロールの入力イベントの特定の領域で必要になるこのこと<xref:System.Windows.UIElement.KeyDown>と<xref:System.Windows.UIElement.TextInput>それぞれさまざまなルーティング方法を使用しようと、下位レベルと高レベルの入力イベントの処理では、競合が発生します。</span><span class="sxs-lookup"><span data-stu-id="a4069-143">This can be necessary in certain areas of input events of controls, such as key handling of <xref:System.Windows.UIElement.KeyDown> versus <xref:System.Windows.UIElement.TextInput> where low level and high level input events compete for the handling, and each is attempting to work with a different routing strategy.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a4069-144">次の例では、マークのイベントを処理するイベント ハンドラーを実装します。</span><span class="sxs-lookup"><span data-stu-id="a4069-144">The following example implements an event handler that marks the event handled.</span></span>  
  
 [!code-csharp[ClassHandling#OnStarClassHandler](~/samples/snippets/csharp/VS_Snippets_Wpf/ClassHandling/CSharp/SDKSampleLibrary/class1.cs#onstarclasshandler)]
 [!code-vb[ClassHandling#OnStarClassHandler](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ClassHandling/visualbasic/sdksamplelibrary/class1.vb#onstarclasshandler)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeEventHandler">
      <MemberSignature Language="C#" Value="protected virtual void InvokeEventHandler (Delegate genericHandler, object genericTarget);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InvokeEventHandler(class System.Delegate genericHandler, object genericTarget) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.RoutedEventArgs.InvokeEventHandler(System.Delegate,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InvokeEventHandler (genericHandler As Delegate, genericTarget As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InvokeEventHandler(Delegate ^ genericHandler, System::Object ^ genericTarget);" />
      <MemberSignature Language="F#" Value="abstract member InvokeEventHandler : Delegate * obj -&gt; unit&#xA;override this.InvokeEventHandler : Delegate * obj -&gt; unit" Usage="routedEventArgs.InvokeEventHandler (genericHandler, genericTarget)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="genericHandler" Type="System.Delegate" />
        <Parameter Name="genericTarget" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="genericHandler">
          <span data-ttu-id="a4069-145">呼び出すジェネリック ハンドラー/デリゲート実装。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4069-145">The generic handler / delegate implementation to be invoked.</span>
          </span>
        </param>
        <param name="genericTarget">
          <span data-ttu-id="a4069-146">指定したハンドラーが呼び出されるターゲット。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4069-146">The target on which the provided handler should be invoked.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4069-147">派生クラスでオーバーライドされた場合、型固有の方法でイベント ハンドラーを呼び出す方法を提供します。これにより、基本実装よりも効率が向上する場合があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4069-147">When overridden in a derived class, provides a way to invoke event handlers in a type-specific way, which can increase efficiency over the base implementation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4069-148">基本の実装には、場所、ハンドラーは文字どおりすべてのケースで適切なハンドラーを判断するためにリフレクションが組み込まれています。 <xref:System.Windows.RoutedEventHandler>、このリフレクション手順がいくつかのパフォーマンスの影響をが。</span><span class="sxs-lookup"><span data-stu-id="a4069-148">The base implementation incorporates reflection to determine the right handler for any case where the handler is not literally <xref:System.Windows.RoutedEventHandler>, and this reflection step does have some performance consequences.</span></span> <span data-ttu-id="a4069-149">呼び出しでリフレクションに依存しないがより効率的な行われることができます。</span><span class="sxs-lookup"><span data-stu-id="a4069-149">Invocations can be made more efficient by not relying on reflection.</span></span> <span data-ttu-id="a4069-150">これは、このメソッドをオーバーライドする任意のルーティング イベント引数クラスで使用されるこのメソッドの用途シナリオです。</span><span class="sxs-lookup"><span data-stu-id="a4069-150">This is the scenario that motivates this method being available for any routed event arguments class that choose to override it.</span></span> <span data-ttu-id="a4069-151">実装、実装は既にこの型の安全なハンドラーを呼び出すために、ベースをこのメソッドは呼び出せませんする必要があります。</span><span class="sxs-lookup"><span data-stu-id="a4069-151">Implementations should not call the base for this method, because your implementation should already be responsible for invoking the type safe handlers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a4069-152">実装に使用できる基本的なパターンを示す疑似コードを次に示します。</span><span class="sxs-lookup"><span data-stu-id="a4069-152">The following is pseudocode that illustrates a basic pattern that can be used for implementation.</span></span> <span data-ttu-id="a4069-153">ここでは、`MyRoutedEventHandler`のサブクラスは<xref:System.Windows.RoutedEventHandler>します。</span><span class="sxs-lookup"><span data-stu-id="a4069-153">Here, `MyRoutedEventHandler` is a subclass of <xref:System.Windows.RoutedEventHandler>.</span></span>  
  
 [!code-csharp[CorePseudocode#RoutedEventArgs](~/samples/snippets/csharp/VS_Snippets_Wpf/CorePseudocode/CSharp/corepseudocode.cs#routedeventargs)]
 [!code-vb[CorePseudocode#RoutedEventArgs](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CorePseudocode/visualbasic/corepseudocode.vb#routedeventargs)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="a4069-154">
            <para>このメソッドは、デリゲートの呼び出しを効率化を提供する派生イベント データ クラスでオーバーライドされます。実装は、指定されたキャストする必要があります<paramref name="genericHandler" />型固有に委任し、そのハンドラーを呼び出します。既定の実装としてそれをキャストしようとして、指定したハンドラーを呼び出すしよう<see cref="T:System.Windows.RoutedEventHandler" />します。いずれか<paramref name="genericHandler" />または<paramref name="genericTarget" />として提供されます<see langword="null" />例外が発生します。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4069-154">
              <para>This method is intended to be overridden by derived event data classes to provide more efficient invocation of their delegates. The implementation should cast the provided <paramref name="genericHandler" /> to the type-specific delegate, and then invoke that handler.  The default implementation will attempt to invoke the provided handler, attempting to cast it as <see cref="T:System.Windows.RoutedEventHandler" />. If either <paramref name="genericHandler" /> or <paramref name="genericTarget" /> is provided as <see langword="null" />, exceptions will be raised.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnSetSource">
      <MemberSignature Language="C#" Value="protected virtual void OnSetSource (object source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSetSource(object source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.RoutedEventArgs.OnSetSource(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSetSource (source As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSetSource(System::Object ^ source);" />
      <MemberSignature Language="F#" Value="abstract member OnSetSource : obj -&gt; unit&#xA;override this.OnSetSource : obj -&gt; unit" Usage="routedEventArgs.OnSetSource source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="a4069-155">
            <see cref="P:System.Windows.RoutedEventArgs.Source" /> に設定する新しい値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4069-155">The new value that <see cref="P:System.Windows.RoutedEventArgs.Source" /> is being set to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4069-156">派生クラスでオーバーライドした場合、インスタンスの <see cref="P:System.Windows.RoutedEventArgs.Source" /> プロパティの値が変更されるたびに、通知コールバックのエントリ ポイントを提供します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4069-156">When overridden in a derived class, provides a notification callback entry point whenever the value of the <see cref="P:System.Windows.RoutedEventArgs.Source" /> property of an instance changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="a4069-157">
            <para>イベントの報告ソースをプログラムで変更するには、イベント内で型固有のデータを更新する可能性がありますが必要です。このため、<see cref="M:System.Windows.RoutedEventArgs.OnSetSource(System.Object)" />メソッドは、仮想保護されているしのサブクラスによってオーバーライドするためのものが<see cref="T:System.Windows.RoutedEventArgs" />します。このメソッドには、既定の実装がありません。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a4069-157">
              <para>Changing the reported source of an event programmatically can potentially require updating the type-specific data within the event. For this reason, the <see cref="M:System.Windows.RoutedEventArgs.OnSetSource(System.Object)" /> method is protected virtual and is intended to be overridden by subclasses of <see cref="T:System.Windows.RoutedEventArgs" />.  This method has no default implementation.</para>
            </span>
          </span>
        </block>
        <altmember cref="P:System.Windows.RoutedEventArgs.Source" />
      </Docs>
    </Member>
    <Member MemberName="OriginalSource">
      <MemberSignature Language="C#" Value="public object OriginalSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object OriginalSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.RoutedEventArgs.OriginalSource" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OriginalSource As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ OriginalSource { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OriginalSource : obj" Usage="System.Windows.RoutedEventArgs.OriginalSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4069-158">親クラスによって <see cref="P:System.Windows.RoutedEventArgs.Source" /> が調整される前の、純粋なヒット テストで判断される元の報告ソースを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4069-158">Gets the original reporting source as determined by pure hit testing, before any possible <see cref="P:System.Windows.RoutedEventArgs.Source" /> adjustment by a parent class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a4069-159">複合要素ツリーを平坦化するなどの目的でクラス処理によって <see cref="P:System.Windows.RoutedEventArgs.Source" /> が調整される前の、元の報告ソース。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4069-159">The original reporting source, before any possible <see cref="P:System.Windows.RoutedEventArgs.Source" /> adjustment made by class handling, which may have been done to flatten composited element trees.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4069-160">このプロパティは、クラスの前にイベント ハンドラーやインスタンス ハンドラーが呼び出され、このポイント以降は調整しないと、その値を取得します。</span><span class="sxs-lookup"><span data-stu-id="a4069-160">This property acquires its value once, before the class event handlers or any instance handlers are invoked, and is never adjusted past this point.</span></span> <span data-ttu-id="a4069-161">元のソース情報は、イベント データで報告されているのと同様はクラス ハンドラーまたはクラスの実装に読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="a4069-161">The original source information is read-only to class handlers or class implementations, just as it is reported in the event data.</span></span>  
  
 <span data-ttu-id="a4069-162">一般的なソースを調整することができますが、コントロールのコンテンツ モデル内のコンテンツの要素が含まれます (たとえば、リスト項目の内容としてリスト項目要素が報告されます、<xref:System.Windows.RoutedEventArgs.Source%2A>リスト項目内の実際の要素は、されます<xref:System.Windows.RoutedEventArgs.OriginalSource%2A>.</span><span class="sxs-lookup"><span data-stu-id="a4069-162">Common cases where the source may be adjusted include content elements inside a content model for a control (the contents of a list item, for instance, will report the list item element as the <xref:System.Windows.RoutedEventArgs.Source%2A> and the actual element within the list item will be the <xref:System.Windows.RoutedEventArgs.OriginalSource%2A>.</span></span>  
  
 <span data-ttu-id="a4069-163">ソースの調整によって、さまざまな要素およびコンテンツ モデルでは、クラスによって異なります。</span><span class="sxs-lookup"><span data-stu-id="a4069-163">Source adjustment by various elements and content models varies from class to class.</span></span> <span data-ttu-id="a4069-164">イベント ソースを調整する各クラスがどのソースが最も入力シナリオと、クラスが対象とするシナリオを報告する中で最も役に立つを予測しようし、し、セットをソースとして、<xref:System.Windows.RoutedEventArgs.Source%2A>します。</span><span class="sxs-lookup"><span data-stu-id="a4069-164">Each class that adjusts event sources attempts to anticipate which source is the most useful to report for most input scenarios and the scenarios for which the class is intended, and then sets that source as the <xref:System.Windows.RoutedEventArgs.Source%2A>.</span></span> <span data-ttu-id="a4069-165">このソースがイベントの処理に関連性のある 1 つでない場合は、確認してください。<xref:System.Windows.RoutedEventArgs.OriginalSource%2A>代わりにする場合に別のソースがより適しているのがレポートを参照してください。</span><span class="sxs-lookup"><span data-stu-id="a4069-165">If this source is not the one that has relevance to your handling of the event, try checking <xref:System.Windows.RoutedEventArgs.OriginalSource%2A> instead to see if it reports a different source that is more suitable.</span></span> <span data-ttu-id="a4069-166">入力イベントの詳細については、次を参照してください。[入力の概要](~/docs/framework/wpf/advanced/input-overview.md)します。</span><span class="sxs-lookup"><span data-stu-id="a4069-166">For more details on input events, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.RoutedEventArgs.Source" />
      </Docs>
    </Member>
    <Member MemberName="RoutedEvent">
      <MemberSignature Language="C#" Value="public System.Windows.RoutedEvent RoutedEvent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.RoutedEvent RoutedEvent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.RoutedEventArgs.RoutedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Property RoutedEvent As RoutedEvent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::RoutedEvent ^ RoutedEvent { System::Windows::RoutedEvent ^ get(); void set(System::Windows::RoutedEvent ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RoutedEvent : System.Windows.RoutedEvent with get, set" Usage="System.Windows.RoutedEventArgs.RoutedEvent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4069-167">この <see cref="P:System.Windows.RoutedEventArgs.RoutedEvent" /> インスタンスに関連付けられている <see cref="T:System.Windows.RoutedEventArgs" /> を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4069-167">Gets or sets the <see cref="P:System.Windows.RoutedEventArgs.RoutedEvent" /> associated with this <see cref="T:System.Windows.RoutedEventArgs" /> instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a4069-168">呼び出されたイベントの識別子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4069-168">The identifier for the event that has been invoked.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4069-169">この値を設定することはできません、<xref:System.Windows.RoutedEventArgs>が既にルーティングされている (たとえば、ハンドラーを引数を取得した) 場合。</span><span class="sxs-lookup"><span data-stu-id="a4069-169">You cannot set this value on a <xref:System.Windows.RoutedEventArgs> that has already been routed (for instance, if you obtained the arguments through a handler).</span></span> <span data-ttu-id="a4069-170">しようとすると、例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="a4069-170">Attempting to do so will generate an exception.</span></span> <span data-ttu-id="a4069-171">イベントの呼び出しの生成に使用されていないインスタンスでのみ設定できます。</span><span class="sxs-lookup"><span data-stu-id="a4069-171">You can only set it on an instance that has not yet been used to generate an invocation of the event.</span></span>  
  
 <span data-ttu-id="a4069-172">値<xref:System.Windows.RoutedEventArgs.RoutedEvent%2A>することはできません`null`いつでもできます。</span><span class="sxs-lookup"><span data-stu-id="a4069-172">The value of <xref:System.Windows.RoutedEventArgs.RoutedEvent%2A> cannot be `null` at any time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a4069-173">次の例は、最初のコンス トラクターを持つ新しいルーティング イベントのデータを作成し、設定、<xref:System.Windows.RoutedEventArgs.RoutedEvent%2A>プロパティを後続の操作として。</span><span class="sxs-lookup"><span data-stu-id="a4069-173">The following example creates new routed event data with an initial constructor and then sets the <xref:System.Windows.RoutedEventArgs.RoutedEvent%2A> property as a subsequent operation.</span></span> <span data-ttu-id="a4069-174">必要があります<xref:System.Windows.RoutedEventArgs.RoutedEvent%2A>ルーティング イベントを発生させる前に設定します。</span><span class="sxs-lookup"><span data-stu-id="a4069-174">You must have <xref:System.Windows.RoutedEventArgs.RoutedEvent%2A> set prior to raising the routed event.</span></span>  
  
 [!code-csharp[ColorPicker_v2#RoutedEventArgsRoutedEvent](~/samples/snippets/csharp/VS_Snippets_Wpf/ColorPicker_v2/CSharp/ColorPicker.cs#routedeventargsroutedevent)]
 [!code-vb[ColorPicker_v2#RoutedEventArgsRoutedEvent](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ColorPicker_v2/visualbasic/colorpicker.vb#routedeventargsroutedevent)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a4069-175">イベントのルーティング中に <see cref="P:System.Windows.RoutedEventArgs.RoutedEvent" /> 値を変更しようとしました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4069-175">Attempted to change the <see cref="P:System.Windows.RoutedEventArgs.RoutedEvent" /> value while the event is being routed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public object Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Source" />
      <MemberSignature Language="DocId" Value="P:System.Windows.RoutedEventArgs.Source" />
      <MemberSignature Language="VB.NET" Value="Public Property Source As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Source { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Source : obj with get, set" Usage="System.Windows.RoutedEventArgs.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4069-176">イベントを発生させたオブジェクトへの参照を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4069-176">Gets or sets a reference to the object that raised the event.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a4069-177">イベントを発生させたオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4069-177">The object that raised the event.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4069-178">発生元の要素の次のルートを実際に通過したイベントのバブル ルーティングされると、トンネリング ルーティングされていないイベントまだトンネリングの値であることを発生させた要素までの<xref:System.Windows.RoutedEventArgs.Source%2A>は、の値とは異なります`sender`イベント引数クラスのパラメーター。</span><span class="sxs-lookup"><span data-stu-id="a4069-178">For any bubbling routed event that has actually traveled the route beyond the element that raised it, and for any tunneling routed event that has not yet tunneled down to the element that raised it, the value of <xref:System.Windows.RoutedEventArgs.Source%2A> will be different than the value of the `sender` parameter of the event arguments class.</span></span> <span data-ttu-id="a4069-179">任意の特定のハンドラーで最も重要ではイベントに関連する 2 つの要素の (<xref:System.Windows.RoutedEventArgs.Source%2A>、それを発生させた要素または`sender`、処理は、現在の要素) は、ハンドラーは、アプリケーション ロジックに依存アドレスを指定します。</span><span class="sxs-lookup"><span data-stu-id="a4069-179">Which of the two elements involved in the event is of the most importance in any given handler (<xref:System.Windows.RoutedEventArgs.Source%2A>, the element that raised it, or `sender`, the element that is currently handling it) is dependent on the application logic that your handler is addressing.</span></span>  
  
 <span data-ttu-id="a4069-180">このプロパティの設定は通常ときにのみ実行オーバーライドまたは実装するその他の[!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)]場合など、イベント ソースを調整するクラス イベントを処理します。</span><span class="sxs-lookup"><span data-stu-id="a4069-180">Setting this property is typically only done when overriding or implementing other [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] that adjust event sources, such as when class handling an event.</span></span> <span data-ttu-id="a4069-181">特に、処理済みとしてハンドラーが、イベントをマークしない場合、インスタンス ハンドラーからイベント ソースのリセットはお勧めしません。</span><span class="sxs-lookup"><span data-stu-id="a4069-181">Resetting apparent event sources from instance handlers is not recommended, particularly when the handler does not mark the event as handled.</span></span>  
  
 <span data-ttu-id="a4069-182">実行をリセットする場合<xref:System.Windows.RoutedEventArgs.Source%2A>、別のイベント ソースをレポートする<xref:System.Windows.RoutedEventArgs.OriginalSource%2A>として最初のソース、送信元によって生成されるレポートは引き続き<xref:System.Windows.UIElement.RaiseEvent%2A>を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="a4069-182">If you do reset <xref:System.Windows.RoutedEventArgs.Source%2A> to report a different event source, <xref:System.Windows.RoutedEventArgs.OriginalSource%2A> will continue to report the source as first raised by the originating <xref:System.Windows.UIElement.RaiseEvent%2A> call.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.RoutedEventArgs.OriginalSource" />
      </Docs>
    </Member>
  </Members>
</Type>