<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="PresentationSource.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-81070f4" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1e344e59-9d8e-481b-978a-09f2e01be86c13a9cea950a28bb02b42a5733e9943659ec922e6.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">13a9cea950a28bb02b42a5733e9943659ec922e6</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f9e3295b6cc303a611a73a84c4b27f9da792ad0d</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/26/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.PresentationSource">
          <source>Provides an abstract base for classes that present content from another technology as part of an interoperation scenario.</source>
          <target state="translated">別の技術からのコンテンツを相互運用シナリオの一部として表示するクラスの抽象基本クラスです。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Windows.PresentationSource">
          <source>In addition, this class provides static methods for working with these sources, as well as the basic visual-layer presentation architecture.</source>
          <target state="translated">また、このクラスはそれらのソースを操作するための静的メソッド、および基本的なビジュアル層のプレゼンテーション アーキテクチャも提供します。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.PresentationSource">
          <source>to derive from this class.</source>
          <target state="translated">このクラスから派生します。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.PresentationSource">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph> (関連する列挙体)</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Windows.PresentationSource.#ctor">
          <source>Provides initialization for base class values when called by the constructor of a derived class.</source>
          <target state="translated">派生クラスのコンストラクターによって呼び出されるときに基本クラスの値を初期化します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Windows.PresentationSource.AddSource">
          <source>Adds a <ph id="ph1">&lt;see cref="T:System.Windows.PresentationSource" /&gt;</ph> derived class instance to the list of known presentation sources.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.PresentationSource" /&gt;</ph> 派生クラスのインスタンスを既知のプレゼンテーション ソースのリストに追加します。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PresentationSource.AddSource">
          <source>This method should be called by derived classes to indicate that they need to be tracked.</source>
          <target state="translated">このメソッドは、追跡する必要があることを示すために、派生クラスによって呼び出す必要があります。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Windows.PresentationSource.AddSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)">
          <source>The element to add the handler to.</source>
          <target state="translated">ハンドラーを追加する対象の要素。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Windows.PresentationSource.AddSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)">
          <source>The hander implementation to add.</source>
          <target state="translated">追加するハンドラー実装。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Windows.PresentationSource.AddSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)">
          <source>Adds a handler for the <ph id="ph1">&lt;see langword="SourceChanged" /&gt;</ph> event to the provided element.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="SourceChanged" /&gt;</ph> イベントのハンドラーを、指定した要素に追加します。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PresentationSource.AddSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)">
          <source>Despite what the syntax block for this event states, there is no legitimate <ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph> attached property usage.</source>
          <target state="translated">このイベントの構文のブロックの状態に関係なくが正当ないいえ<ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph>添付プロパティの使用法。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PresentationSource.AddSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)">
          <source>You should not attempt to add handlers in <ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph>, and handlers in code should only be placed on objects that serve as hosts for presentation (<ph id="ph2">&lt;xref:System.Windows.PresentationSource&gt;</ph> ) content.</source>
          <target state="translated">ハンドラーを追加しないで<ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph>、し、コード内のハンドラーは、プレゼンテーション用のホストとして機能するオブジェクトにだけ適用する必要があります (<ph id="ph2">&lt;xref:System.Windows.PresentationSource&gt;</ph> ) のコンテンツ。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PresentationSource.AddSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)">
          <source>Such handlers should only be attached during object initialization, and should be explicitly removed in a Dispose method or equivalent object cleanup.</source>
          <target state="translated">このようなハンドラーは、オブジェクトの初期化中にのみ接続されている必要があり、Dispose メソッドまたは同等のオブジェクトのクリーンアップで明示的に削除する必要があります。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PresentationSource.AddSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)">
          <source>Even though this is a routed event, there are special restrictions placed on this event that differ from normal routed event behavior, due to the relatively small number of elements in a typical application scenario that would concern themselves with handling this event.</source>
          <target state="translated">場合でも、ルーティングされたイベントは、このイベントは意識このイベントを処理する一般的なアプリケーション シナリオ内の要素数が比較的小さいため、通常のルーティング イベントの動作とは異なるに特別な制限があります。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PresentationSource.AddSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)">
          <source>You cannot use the <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.ContentElement&gt;</ph> <ph id="ph3">&lt;xref:System.Windows.UIElement.AddHandler%2A&gt;</ph> methods to add handlers.</source>
          <target state="translated">使用することはできません、<ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph>または<ph id="ph2">&lt;xref:System.Windows.ContentElement&gt;</ph><ph id="ph3">&lt;xref:System.Windows.UIElement.AddHandler%2A&gt;</ph>ハンドラーを追加する方法です。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PresentationSource.AddSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)">
          <source>You must use <ph id="ph1">&lt;xref:System.Windows.PresentationSource.AddSourceChangedHandler%2A&gt;</ph>.</source>
          <target state="translated">使用する必要があります<ph id="ph1">&lt;xref:System.Windows.PresentationSource.AddSourceChangedHandler%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PresentationSource.AddSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)">
          <source>The C# <ph id="ph1">`+=`</ph> and <ph id="ph2">`-=`</ph> event handler syntaxes, and related language-specific handler syntaxes, are not supported, because the event itself is not exposed as public.</source>
          <target state="translated">C#<ph id="ph1">`+=`</ph>と<ph id="ph2">`-=`</ph>イベント ハンドラーの構文、および関連する言語固有のハンドラーの構文ではサポートされず、イベント自体がパブリックとして公開されていないためです。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PresentationSource.AddSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)">
          <source>Only the <ph id="ph1">&lt;xref:System.Windows.PresentationSource&gt;</ph> utility methods for adding and removing the handlers directly are supported.</source>
          <target state="translated">のみ、<ph id="ph1">&lt;xref:System.Windows.PresentationSource&gt;</ph>ユーティリティ メソッドを追加およびサポートは、直接、ハンドラーを削除します。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PresentationSource.AddSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)">
          <source>Class handlers are not allowed.</source>
          <target state="translated">クラスのハンドラーを指定することはできません。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PresentationSource.AddSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)">
          <source>Specifically, you cannot call <ph id="ph1">&lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</ph> against this event in a class constructor because although an identifier field exists for SourceChanged, the identifier is not public.</source>
          <target state="translated">具体的には、呼び出すことができません<ph id="ph1">&lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</ph>クラス コンス トラクターでは、このイベントに対して SourceChanged の識別子フィールドが存在しますが、識別子は public ではないためです。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PresentationSource.AddSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)">
          <source>All registered handlers will receive the SourceChanged event even if one of the handlers attempts to mark the arguments as handled.</source>
          <target state="translated">すべての登録済みハンドラー、ハンドラーの 1 つが、引数を処理済みとしてマークする場合でも、SourceChanged イベントが表示されます。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PresentationSource.AddSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)">
          <source>to call or implement this method.</source>
          <target state="translated">呼び出すか、このメソッドを実装します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PresentationSource.AddSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph> (関連する列挙体)</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Windows.PresentationSource.ClearContentRenderedListeners">
          <source>Sets the list of listeners for the <ph id="ph1">&lt;see cref="E:System.Windows.PresentationSource.ContentRendered" /&gt;</ph> event to <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.PresentationSource.ContentRendered" /&gt;</ph> イベントのリスナーのリストを <ph id="ph2">&lt;see langword="null" /&gt;</ph> に設定します。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="P:System.Windows.PresentationSource.CompositionTarget">
          <source>Gets the visual target for the visuals being presented in the source.</source>
          <target state="translated">ソースに表示されているビジュアルのビジュアル ターゲットを取得します。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PresentationSource.CompositionTarget">
          <source>A visual target (instance of a <ph id="ph1">&lt;see cref="T:System.Windows.Media.CompositionTarget" /&gt;</ph> derived class).</source>
          <target state="translated">ビジュアル ターゲット (<ph id="ph1">&lt;see cref="T:System.Windows.Media.CompositionTarget" /&gt;</ph> 派生クラスのインスタンス)。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PresentationSource.CompositionTarget">
          <source>The return of this property relies on an implementation of <ph id="ph1">&lt;xref:System.Windows.PresentationSource.GetCompositionTargetCore%2A&gt;</ph>.</source>
          <target state="translated">このプロパティの戻り値の実装に依存<ph id="ph1">&lt;xref:System.Windows.PresentationSource.GetCompositionTargetCore%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PresentationSource.CompositionTarget">
          <source>Derived classes can choose to shadow this property to offer a type-specific value.</source>
          <target state="translated">派生クラスは、型固有の値を提供するには、このプロパティをシャドウするを選択できます。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="E:System.Windows.PresentationSource.ContentRendered">
          <source>Occurs when content is rendered and ready for user interaction.</source>
          <target state="translated">コンテンツがレンダリングされ、ユーザー操作を受け入れる準備が整ったときに発生します。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="P:System.Windows.PresentationSource.CurrentSources">
          <source>Returns a list of sources.</source>
          <target state="translated">ソースのリストを返します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PresentationSource.CurrentSources">
          <source>A list of weak references.</source>
          <target state="translated">弱い参照のリスト。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PresentationSource.CurrentSources">
          <source>The returned list supports an enumerator over a read-only, thread-safe copy of the list of sources as added with <ph id="ph1">&lt;xref:System.Windows.PresentationSource.AddSource%2A&gt;</ph>.</source>
          <target state="translated">追加されると、返された一覧がソースの一覧の読み取り専用、スレッド セーフであるコピーに対する列挙子をサポート<ph id="ph1">&lt;xref:System.Windows.PresentationSource.AddSource%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PresentationSource.CurrentSources">
          <source>The enumerator skips any dead weak references in the list.</source>
          <target state="translated">列挙子は、一覧のデッド弱い参照をスキップします。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PresentationSource.CurrentSources">
          <source>to get sources.</source>
          <target state="translated">ソースを取得します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PresentationSource.CurrentSources">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph> (関連する列挙体)</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Windows.PresentationSource.FromDependencyObject(System.Windows.DependencyObject)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph> to find the source for.</source>
          <target state="translated">ソースの検索対象となる <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Windows.PresentationSource.FromDependencyObject(System.Windows.DependencyObject)">
          <source>Returns the source in which a provided <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph> is presented.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph> が表示されているソースを返します。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Windows.PresentationSource.FromDependencyObject(System.Windows.DependencyObject)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.PresentationSource" /&gt;</ph> in which the dependency object is being presented.</source>
          <target state="translated">依存関係オブジェクトが表示されている <ph id="ph1">&lt;see cref="T:System.Windows.PresentationSource" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PresentationSource.FromDependencyObject(System.Windows.DependencyObject)">
          <source>to call or implement this method.</source>
          <target state="translated">呼び出すか、このメソッドを実装します。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PresentationSource.FromDependencyObject(System.Windows.DependencyObject)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph> (関連する列挙体)</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Windows.PresentationSource.FromVisual(System.Windows.Media.Visual)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> to find the source for.</source>
          <target state="translated">ソースの検索対象となる <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Windows.PresentationSource.FromVisual(System.Windows.Media.Visual)">
          <source>Returns the source in which a provided <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> is presented.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> が表示されているソースを返します。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Windows.PresentationSource.FromVisual(System.Windows.Media.Visual)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.PresentationSource" /&gt;</ph> in which the visual is being presented, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if <ph id="ph3">&lt;paramref name="visual" /&gt;</ph> is disposed.</source>
          <target state="translated">ビジュアルが表示されている <ph id="ph1">&lt;see cref="T:System.Windows.PresentationSource" /&gt;</ph>。<ph id="ph3">&lt;paramref name="visual" /&gt;</ph> が破棄されている場合は <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Windows.PresentationSource.FromVisual(System.Windows.Media.Visual)">
          <source><ph id="ph1">&lt;paramref name="visual" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="visual" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PresentationSource.FromVisual(System.Windows.Media.Visual)">
          <source>to call or implement this method.</source>
          <target state="translated">呼び出すか、このメソッドを実装します。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PresentationSource.FromVisual(System.Windows.Media.Visual)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph> (関連する列挙体)</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Windows.PresentationSource.GetCompositionTargetCore">
          <source>When overridden in a derived class, returns a visual target for the given source.</source>
          <target state="translated">派生クラスでオーバーライドされると、指定したソースのビジュアル ターゲットを返します。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Windows.PresentationSource.GetCompositionTargetCore">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Windows.Media.CompositionTarget" /&gt;</ph> that is target for rendering the visual.</source>
          <target state="translated">ビジュアルを描画するターゲットである <ph id="ph1">&lt;see cref="T:System.Windows.Media.CompositionTarget" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PresentationSource.GetCompositionTargetCore">
          <source>Override this method to declare the value that the <ph id="ph1">&lt;see cref="P:System.Windows.PresentationSource.CompositionTarget" /&gt;</ph> read-only property will return.</source>
          <target state="translated">値を宣言するには、このメソッドをオーバーライドする、<ph id="ph1">&lt;see cref="P:System.Windows.PresentationSource.CompositionTarget" /&gt;</ph>は読み取り専用プロパティを返します。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PresentationSource.GetCompositionTargetCore">
          <source>Your override should return type-specific instances of the <ph id="ph1">&lt;see cref="T:System.Windows.Media.CompositionTarget" /&gt;</ph> derived class type that is used for your interoperation scenario.</source>
          <target state="translated">オーバーライドの種類に固有のインスタンスを返す必要があります、<ph id="ph1">&lt;see cref="T:System.Windows.Media.CompositionTarget" /&gt;</ph>相互運用シナリオに使用されるクラスの型を派生します。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="P:System.Windows.PresentationSource.IsDisposed">
          <source>When overridden in a derived class, gets a value that declares whether the object is disposed.</source>
          <target state="translated">派生クラスでオーバーライドされると、オブジェクトが破棄されているかどうかを宣言する値を取得します。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PresentationSource.IsDisposed">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the object is disposed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">オブジェクトが破棄されている場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PresentationSource.IsDisposed">
          <source>Derived classes are expected to implement <ph id="ph1">&lt;see cref="T:System.IDisposable" /&gt;</ph> or provide equivalent behavior.</source>
          <target state="translated">派生クラスの実装が期待される<ph id="ph1">&lt;see cref="T:System.IDisposable" /&gt;</ph>または同等の動作を提供します。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Windows.PresentationSource.RemoveSource">
          <source>Removes a <ph id="ph1">&lt;see cref="T:System.Windows.PresentationSource" /&gt;</ph> derived class instance from the list of known presentation sources.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.PresentationSource" /&gt;</ph> 派生クラスのインスタンスを既知のプレゼンテーション ソースのリストから削除します。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Windows.PresentationSource.RemoveSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)">
          <source>The element to remove the handler from.</source>
          <target state="translated">ハンドラーの削除元となる要素。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Windows.PresentationSource.RemoveSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)">
          <source>The handler implementation to remove.</source>
          <target state="translated">削除するハンドラー実装。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Windows.PresentationSource.RemoveSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)">
          <source>Removes a handler for the <ph id="ph1">&lt;see langword="SourceChanged" /&gt;</ph> event from the provided element.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="SourceChanged" /&gt;</ph> イベントのハンドラーを、指定した要素から削除します。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PresentationSource.RemoveSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)">
          <source>Even though this is a routed event, there are special restrictions placed on this event that differ from normal routed event behavior, due to the relatively small number of elements in a typical application scenario that would concern themselves with handling this event.</source>
          <target state="translated">場合でも、ルーティングされたイベントは、このイベントは意識このイベントを処理する一般的なアプリケーション シナリオ内の要素数が比較的小さいため、通常のルーティング イベントの動作とは異なるに特別な制限があります。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PresentationSource.RemoveSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)">
          <source>You cannot use the <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.ContentElement&gt;</ph> <ph id="ph3">&lt;xref:System.Windows.UIElement.RemoveHandler%2A&gt;</ph> methods to remove handlers.</source>
          <target state="translated">使用することはできません、<ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph>または<ph id="ph2">&lt;xref:System.Windows.ContentElement&gt;</ph><ph id="ph3">&lt;xref:System.Windows.UIElement.RemoveHandler%2A&gt;</ph>ハンドラーを削除する方法です。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PresentationSource.RemoveSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)">
          <source>You must use <ph id="ph1">&lt;xref:System.Windows.PresentationSource.RemoveSourceChangedHandler%2A&gt;</ph>.</source>
          <target state="translated">使用する必要があります<ph id="ph1">&lt;xref:System.Windows.PresentationSource.RemoveSourceChangedHandler%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PresentationSource.RemoveSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)">
          <source>The C# <ph id="ph1">`+=`</ph> and <ph id="ph2">`-=`</ph> event handler syntaxes, and other language-specific handler syntaxes, are not supported, because the event itself is not exposed as public.</source>
          <target state="translated">C#<ph id="ph1">`+=`</ph>と<ph id="ph2">`-=`</ph>イベント ハンドラーの構文、およびその他の言語固有のハンドラーの構文ではサポートされず、イベント自体がパブリックとして公開されていないためです。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PresentationSource.RemoveSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)">
          <source>Only the <ph id="ph1">&lt;xref:System.Windows.PresentationSource&gt;</ph> utility methods for adding and removing the handlers directly are supported.</source>
          <target state="translated">のみ、<ph id="ph1">&lt;xref:System.Windows.PresentationSource&gt;</ph>ユーティリティ メソッドを追加およびサポートは、直接、ハンドラーを削除します。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Windows.PresentationSource.RootChanged(System.Windows.Media.Visual,System.Windows.Media.Visual)">
          <source>The old root <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>.</source>
          <target state="translated">変更前のルート <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Windows.PresentationSource.RootChanged(System.Windows.Media.Visual,System.Windows.Media.Visual)">
          <source>The new root <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>.</source>
          <target state="translated">変更後のルート <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Windows.PresentationSource.RootChanged(System.Windows.Media.Visual,System.Windows.Media.Visual)">
          <source>Provides notification that the root <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> has changed.</source>
          <target state="translated">ルート <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> が変更されたことを示す通知を提供します。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PresentationSource.RootChanged(System.Windows.Media.Visual,System.Windows.Media.Visual)">
          <source>Derived classes should call this method to indicate that their root <ph id="ph1">&lt;xref:System.Windows.Media.Visual&gt;</ph> has changed.</source>
          <target state="translated">派生クラスこのメソッドを呼び出すことを示すルートの<ph id="ph1">&lt;xref:System.Windows.Media.Visual&gt;</ph>が変更されました。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PresentationSource.RootChanged(System.Windows.Media.Visual,System.Windows.Media.Visual)">
          <source>Calling this method causes two object lifetime events to be raised on the specified root visuals, if and only if those root visuals are <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> derived classes.</source>
          <target state="translated">このメソッドを呼び出すそれらルート ビジュアルは場合にのみ 2 つのオブジェクトの有効期間イベントで、指定したルート ビジュアルに発生すると、<ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph>クラスを派生します。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PresentationSource.RootChanged(System.Windows.Media.Visual,System.Windows.Media.Visual)">
          <source>The old root visual will raise the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Unloaded&gt;</ph> event, and will process its tree of elements downward, broadcasting this event to each child element.</source>
          <target state="translated">以前のルート visual を生成、<ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Unloaded&gt;</ph>イベント、およびその要素ツリーの下に、各子要素には、このイベントをブロードキャストを処理します。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PresentationSource.RootChanged(System.Windows.Media.Visual,System.Windows.Media.Visual)">
          <source>The new root visual will raise the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Loaded&gt;</ph> event, and will process its tree of elements downward, broadcasting this event to each child element.</source>
          <target state="translated">新しいルート visual を発生させる、<ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Loaded&gt;</ph>イベント、およびその要素ツリーの下に、各子要素には、このイベントをブロードキャストを処理します。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="P:System.Windows.PresentationSource.RootVisual">
          <source>When overridden in a derived class, gets or sets the root visual being presented in the source.</source>
          <target state="translated">派生クラスでオーバーライドされると、ソースで表示されているルート ビジュアルを取得または設定します。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PresentationSource.RootVisual">
          <source>The root visual.</source>
          <target state="translated">ルート ビジュアル。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PresentationSource.RootVisual">
          <source>to override the property (<ph id="ph1">&lt;see langword="InheritanceDemand" /&gt;</ph>).</source>
          <target state="translated">プロパティを上書きする (<ph id="ph1">&lt;see langword="InheritanceDemand" /&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PresentationSource.RootVisual">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph> (関連する列挙体)</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>