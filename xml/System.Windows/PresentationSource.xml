<Type Name="PresentationSource" FullName="System.Windows.PresentationSource">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="13a9cea950a28bb02b42a5733e9943659ec922e6" />
    <Meta Name="ms.sourcegitcommit" Value="f9e3295b6cc303a611a73a84c4b27f9da792ad0d" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/26/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class PresentationSource : System.Windows.Threading.DispatcherObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract PresentationSource extends System.Windows.Threading.DispatcherObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.PresentationSource" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PresentationSource&#xA;Inherits DispatcherObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class PresentationSource abstract : System::Windows::Threading::DispatcherObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Threading.DispatcherObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="c115e-101">別の技術からのコンテンツを相互運用シナリオの一部として表示するクラスの抽象基本クラスです。</span>
      <span class="sxs-lookup">
        <span data-stu-id="c115e-101">Provides an abstract base for classes that present content from another technology as part of an interoperation scenario.</span>
      </span>
      <span data-ttu-id="c115e-102">また、このクラスはそれらのソースを操作するための静的メソッド、および基本的なビジュアル層のプレゼンテーション アーキテクチャも提供します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="c115e-102">In addition, this class provides static methods for working with these sources, as well as the basic visual-layer presentation architecture.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
    <permission cref="T:System.Security.Permissions.UIPermission">
      <span data-ttu-id="c115e-103">このクラスから派生します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="c115e-103">to derive from this class.</span>
      </span>
      <span data-ttu-id="c115e-104">
        <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span>
      <span class="sxs-lookup">
        <span data-stu-id="c115e-104">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span>
      </span>
    </permission>
    <altmember cref="T:System.Windows.Interop.HwndSource" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PresentationSource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PresentationSource();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c115e-105">派生クラスのコンストラクターによって呼び出されるときに基本クラスの値を初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c115e-105">Provides initialization for base class values when called by the constructor of a derived class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddSource">
      <MemberSignature Language="C#" Value="protected void AddSource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AddSource() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.AddSource" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AddSource ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AddSource();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c115e-106">
            <see cref="T:System.Windows.PresentationSource" /> 派生クラスのインスタンスを既知のプレゼンテーション ソースのリストに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c115e-106">Adds a <see cref="T:System.Windows.PresentationSource" /> derived class instance to the list of known presentation sources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c115e-107">このメソッドは、追跡する必要があることを示すために、派生クラスによって呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="c115e-107">This method should be called by derived classes to indicate that they need to be tracked.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddSourceChangedHandler">
      <MemberSignature Language="C#" Value="public static void AddSourceChangedHandler (System.Windows.IInputElement element, System.Windows.SourceChangedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddSourceChangedHandler(class System.Windows.IInputElement element, class System.Windows.SourceChangedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.AddSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddSourceChangedHandler (element As IInputElement, handler As SourceChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddSourceChangedHandler(System::Windows::IInputElement ^ element, System::Windows::SourceChangedEventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.IInputElement" />
        <Parameter Name="handler" Type="System.Windows.SourceChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="c115e-108">ハンドラーを追加する対象の要素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c115e-108">The element to add the handler to.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="c115e-109">追加するハンドラー実装。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c115e-109">The hander implementation to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c115e-110">
            <see langword="SourceChanged" /> イベントのハンドラーを、指定した要素に追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c115e-110">Adds a handler for the <see langword="SourceChanged" /> event to the provided element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c115e-111">このイベントの構文のブロックの状態に関係なくが正当ないいえ[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]添付プロパティの使用法。</span><span class="sxs-lookup"><span data-stu-id="c115e-111">Despite what the syntax block for this event states, there is no legitimate [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] attached property usage.</span></span> <span data-ttu-id="c115e-112">ハンドラーを追加しないで[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]、し、コード内のハンドラーは、プレゼンテーション用のホストとして機能するオブジェクトにだけ適用する必要があります (<xref:System.Windows.PresentationSource> ) のコンテンツ。</span><span class="sxs-lookup"><span data-stu-id="c115e-112">You should not attempt to add handlers in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)], and handlers in code should only be placed on objects that serve as hosts for presentation (<xref:System.Windows.PresentationSource> ) content.</span></span> <span data-ttu-id="c115e-113">このようなハンドラーは、オブジェクトの初期化中にのみ接続されている必要があり、Dispose メソッドまたは同等のオブジェクトのクリーンアップで明示的に削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="c115e-113">Such handlers should only be attached during object initialization, and should be explicitly removed in a Dispose method or equivalent object cleanup.</span></span>  
  
 <span data-ttu-id="c115e-114">場合でも、ルーティングされたイベントは、このイベントは意識このイベントを処理する一般的なアプリケーション シナリオ内の要素数が比較的小さいため、通常のルーティング イベントの動作とは異なるに特別な制限があります。</span><span class="sxs-lookup"><span data-stu-id="c115e-114">Even though this is a routed event, there are special restrictions placed on this event that differ from normal routed event behavior, due to the relatively small number of elements in a typical application scenario that would concern themselves with handling this event.</span></span>  
  
-   <span data-ttu-id="c115e-115">使用することはできません、<xref:System.Windows.UIElement>または<xref:System.Windows.ContentElement><xref:System.Windows.UIElement.AddHandler%2A>ハンドラーを追加する方法です。</span><span class="sxs-lookup"><span data-stu-id="c115e-115">You cannot use the <xref:System.Windows.UIElement> or <xref:System.Windows.ContentElement> <xref:System.Windows.UIElement.AddHandler%2A> methods to add handlers.</span></span> <span data-ttu-id="c115e-116">使用する必要があります<xref:System.Windows.PresentationSource.AddSourceChangedHandler%2A>です。</span><span class="sxs-lookup"><span data-stu-id="c115e-116">You must use <xref:System.Windows.PresentationSource.AddSourceChangedHandler%2A>.</span></span>  
  
-   <span data-ttu-id="c115e-117">C#`+=`と`-=`イベント ハンドラーの構文、および関連する言語固有のハンドラーの構文ではサポートされず、イベント自体がパブリックとして公開されていないためです。</span><span class="sxs-lookup"><span data-stu-id="c115e-117">The C# `+=` and `-=` event handler syntaxes, and related language-specific handler syntaxes, are not supported, because the event itself is not exposed as public.</span></span> <span data-ttu-id="c115e-118">のみ、<xref:System.Windows.PresentationSource>ユーティリティ メソッドを追加およびサポートは、直接、ハンドラーを削除します。</span><span class="sxs-lookup"><span data-stu-id="c115e-118">Only the <xref:System.Windows.PresentationSource> utility methods for adding and removing the handlers directly are supported.</span></span>  
  
-   <span data-ttu-id="c115e-119">クラスのハンドラーを指定することはできません。</span><span class="sxs-lookup"><span data-stu-id="c115e-119">Class handlers are not allowed.</span></span> <span data-ttu-id="c115e-120">具体的には、呼び出すことができません<xref:System.Windows.EventManager.RegisterClassHandler%2A>クラス コンス トラクターでは、このイベントに対して SourceChanged の識別子フィールドが存在しますが、識別子は public ではないためです。</span><span class="sxs-lookup"><span data-stu-id="c115e-120">Specifically, you cannot call <xref:System.Windows.EventManager.RegisterClassHandler%2A> against this event in a class constructor because although an identifier field exists for SourceChanged, the identifier is not public.</span></span>  
  
-   <span data-ttu-id="c115e-121">すべての登録済みハンドラー、ハンドラーの 1 つが、引数を処理済みとしてマークする場合でも、SourceChanged イベントが表示されます。</span><span class="sxs-lookup"><span data-stu-id="c115e-121">All registered handlers will receive the SourceChanged event even if one of the handlers attempts to mark the arguments as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="c115e-122">呼び出すか、このメソッドを実装します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c115e-122">to call or implement this method.</span>
          </span>
          <span data-ttu-id="c115e-123">
            <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /> (関連する列挙体)</span>
          <span class="sxs-lookup">
            <span data-stu-id="c115e-123">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ClearContentRenderedListeners">
      <MemberSignature Language="C#" Value="protected void ClearContentRenderedListeners ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ClearContentRenderedListeners() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.ClearContentRenderedListeners" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ClearContentRenderedListeners ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ClearContentRenderedListeners();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c115e-124">
            <see cref="E:System.Windows.PresentationSource.ContentRendered" /> イベントのリスナーのリストを <see langword="null" /> に設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c115e-124">Sets the list of listeners for the <see cref="E:System.Windows.PresentationSource.ContentRendered" /> event to <see langword="null" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Windows.PresentationSource.ContentRendered" />
      </Docs>
    </Member>
    <Member MemberName="CompositionTarget">
      <MemberSignature Language="C#" Value="public System.Windows.Media.CompositionTarget CompositionTarget { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.CompositionTarget CompositionTarget" />
      <MemberSignature Language="DocId" Value="P:System.Windows.PresentationSource.CompositionTarget" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CompositionTarget As CompositionTarget" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::CompositionTarget ^ CompositionTarget { System::Windows::Media::CompositionTarget ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.CompositionTarget</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c115e-125">ソースに表示されているビジュアルのビジュアル ターゲットを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c115e-125">Gets the visual target for the visuals being presented in the source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c115e-126">ビジュアル ターゲット (<see cref="T:System.Windows.Media.CompositionTarget" /> 派生クラスのインスタンス)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c115e-126">A visual target (instance of a <see cref="T:System.Windows.Media.CompositionTarget" /> derived class).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c115e-127">このプロパティの戻り値の実装に依存<xref:System.Windows.PresentationSource.GetCompositionTargetCore%2A>です。</span><span class="sxs-lookup"><span data-stu-id="c115e-127">The return of this property relies on an implementation of <xref:System.Windows.PresentationSource.GetCompositionTargetCore%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="c115e-128">派生クラスは、型固有の値を提供するには、このプロパティをシャドウするを選択できます。</span>
            <span class="sxs-lookup">
              <span data-stu-id="c115e-128">Derived classes can choose to shadow this property to offer a type-specific value.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ContentRendered">
      <MemberSignature Language="C#" Value="public event EventHandler ContentRendered;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ContentRendered" />
      <MemberSignature Language="DocId" Value="E:System.Windows.PresentationSource.ContentRendered" />
      <MemberSignature Language="VB.NET" Value="Public Event ContentRendered As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ContentRendered;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c115e-129">コンテンツがレンダリングされ、ユーザー操作を受け入れる準備が整ったときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c115e-129">Occurs when content is rendered and ready for user interaction.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentSources">
      <MemberSignature Language="C#" Value="public static System.Collections.IEnumerable CurrentSources { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.IEnumerable CurrentSources" />
      <MemberSignature Language="DocId" Value="P:System.Windows.PresentationSource.CurrentSources" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentSources As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::IEnumerable ^ CurrentSources { System::Collections::IEnumerable ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c115e-130">ソースのリストを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c115e-130">Returns a list of sources.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c115e-131">弱い参照のリスト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c115e-131">A list of weak references.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c115e-132">追加されると、返された一覧がソースの一覧の読み取り専用、スレッド セーフであるコピーに対する列挙子をサポート<xref:System.Windows.PresentationSource.AddSource%2A>です。</span><span class="sxs-lookup"><span data-stu-id="c115e-132">The returned list supports an enumerator over a read-only, thread-safe copy of the list of sources as added with <xref:System.Windows.PresentationSource.AddSource%2A>.</span></span>  
  
 <span data-ttu-id="c115e-133">列挙子は、一覧のデッド弱い参照をスキップします。</span><span class="sxs-lookup"><span data-stu-id="c115e-133">The enumerator skips any dead weak references in the list.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="c115e-134">ソースを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c115e-134">to get sources.</span>
          </span>
          <span data-ttu-id="c115e-135">
            <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /> (関連する列挙体)</span>
          <span class="sxs-lookup">
            <span data-stu-id="c115e-135">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="FromDependencyObject">
      <MemberSignature Language="C#" Value="public static System.Windows.PresentationSource FromDependencyObject (System.Windows.DependencyObject dependencyObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.PresentationSource FromDependencyObject(class System.Windows.DependencyObject dependencyObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.FromDependencyObject(System.Windows.DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::PresentationSource ^ FromDependencyObject(System::Windows::DependencyObject ^ dependencyObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.PresentationSource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyObject" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="dependencyObject">
          <span data-ttu-id="c115e-136">ソースの検索対象となる <see cref="T:System.Windows.DependencyObject" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c115e-136">The <see cref="T:System.Windows.DependencyObject" /> to find the source for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c115e-137">指定した <see cref="T:System.Windows.DependencyObject" /> が表示されているソースを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c115e-137">Returns the source in which a provided <see cref="T:System.Windows.DependencyObject" /> is presented.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c115e-138">依存関係オブジェクトが表示されている <see cref="T:System.Windows.PresentationSource" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c115e-138">The <see cref="T:System.Windows.PresentationSource" /> in which the dependency object is being presented.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="c115e-139">呼び出すか、このメソッドを実装します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c115e-139">to call or implement this method.</span>
          </span>
          <span data-ttu-id="c115e-140">
            <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /> (関連する列挙体)</span>
          <span class="sxs-lookup">
            <span data-stu-id="c115e-140">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="FromVisual">
      <MemberSignature Language="C#" Value="public static System.Windows.PresentationSource FromVisual (System.Windows.Media.Visual visual);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.PresentationSource FromVisual(class System.Windows.Media.Visual visual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.FromVisual(System.Windows.Media.Visual)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::PresentationSource ^ FromVisual(System::Windows::Media::Visual ^ visual);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.PresentationSource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="visual">
          <span data-ttu-id="c115e-141">ソースの検索対象となる <see cref="T:System.Windows.Media.Visual" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c115e-141">The <see cref="T:System.Windows.Media.Visual" /> to find the source for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c115e-142">指定した <see cref="T:System.Windows.Media.Visual" /> が表示されているソースを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c115e-142">Returns the source in which a provided <see cref="T:System.Windows.Media.Visual" /> is presented.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c115e-143">ビジュアルが表示されている <see cref="T:System.Windows.PresentationSource" />。<paramref name="visual" /> が破棄されている場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c115e-143">The <see cref="T:System.Windows.PresentationSource" /> in which the visual is being presented, or <see langword="null" /> if <paramref name="visual" /> is disposed.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c115e-144">
            <paramref name="visual" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c115e-144">
              <paramref name="visual" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="c115e-145">呼び出すか、このメソッドを実装します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c115e-145">to call or implement this method.</span>
          </span>
          <span data-ttu-id="c115e-146">
            <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /> (関連する列挙体)</span>
          <span class="sxs-lookup">
            <span data-stu-id="c115e-146">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetCompositionTargetCore">
      <MemberSignature Language="C#" Value="protected abstract System.Windows.Media.CompositionTarget GetCompositionTargetCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Media.CompositionTarget GetCompositionTargetCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.GetCompositionTargetCore" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetCompositionTargetCore () As CompositionTarget" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Windows::Media::CompositionTarget ^ GetCompositionTargetCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.CompositionTarget</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c115e-147">派生クラスでオーバーライドされると、指定したソースのビジュアル ターゲットを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c115e-147">When overridden in a derived class, returns a visual target for the given source.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c115e-148">ビジュアルを描画するターゲットである <see cref="T:System.Windows.Media.CompositionTarget" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c115e-148">Returns a <see cref="T:System.Windows.Media.CompositionTarget" /> that is target for rendering the visual.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="c115e-149">値を宣言するには、このメソッドをオーバーライドする、<see cref="P:System.Windows.PresentationSource.CompositionTarget" />は読み取り専用プロパティを返します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="c115e-149">Override this method to declare the value that the <see cref="P:System.Windows.PresentationSource.CompositionTarget" /> read-only property will return.</span>
            </span>
            <span data-ttu-id="c115e-150">オーバーライドの種類に固有のインスタンスを返す必要があります、<see cref="T:System.Windows.Media.CompositionTarget" />相互運用シナリオに使用されるクラスの型を派生します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="c115e-150">Your override should return type-specific instances of the <see cref="T:System.Windows.Media.CompositionTarget" /> derived class type that is used for your interoperation scenario.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="IsDisposed">
      <MemberSignature Language="C#" Value="public abstract bool IsDisposed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDisposed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.PresentationSource.IsDisposed" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsDisposed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsDisposed { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c115e-151">派生クラスでオーバーライドされると、オブジェクトが破棄されているかどうかを宣言する値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c115e-151">When overridden in a derived class, gets a value that declares whether the object is disposed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c115e-152">オブジェクトが破棄されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c115e-152">
              <see langword="true" /> if the object is disposed; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="c115e-153">派生クラスの実装が期待される<see cref="T:System.IDisposable" />または同等の動作を提供します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="c115e-153">Derived classes are expected to implement <see cref="T:System.IDisposable" /> or provide equivalent behavior.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="RemoveSource">
      <MemberSignature Language="C#" Value="protected void RemoveSource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RemoveSource() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.RemoveSource" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RemoveSource ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RemoveSource();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c115e-154">
            <see cref="T:System.Windows.PresentationSource" /> 派生クラスのインスタンスを既知のプレゼンテーション ソースのリストから削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c115e-154">Removes a <see cref="T:System.Windows.PresentationSource" /> derived class instance from the list of known presentation sources.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveSourceChangedHandler">
      <MemberSignature Language="C#" Value="public static void RemoveSourceChangedHandler (System.Windows.IInputElement e, System.Windows.SourceChangedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveSourceChangedHandler(class System.Windows.IInputElement e, class System.Windows.SourceChangedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.RemoveSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveSourceChangedHandler (e As IInputElement, handler As SourceChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveSourceChangedHandler(System::Windows::IInputElement ^ e, System::Windows::SourceChangedEventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.IInputElement" />
        <Parameter Name="handler" Type="System.Windows.SourceChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="c115e-155">ハンドラーの削除元となる要素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c115e-155">The element to remove the handler from.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="c115e-156">削除するハンドラー実装。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c115e-156">The handler implementation to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c115e-157">
            <see langword="SourceChanged" /> イベントのハンドラーを、指定した要素から削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c115e-157">Removes a handler for the <see langword="SourceChanged" /> event from the provided element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c115e-158">場合でも、ルーティングされたイベントは、このイベントは意識このイベントを処理する一般的なアプリケーション シナリオ内の要素数が比較的小さいため、通常のルーティング イベントの動作とは異なるに特別な制限があります。</span><span class="sxs-lookup"><span data-stu-id="c115e-158">Even though this is a routed event, there are special restrictions placed on this event that differ from normal routed event behavior, due to the relatively small number of elements in a typical application scenario that would concern themselves with handling this event.</span></span>  
  
-   <span data-ttu-id="c115e-159">使用することはできません、<xref:System.Windows.UIElement>または<xref:System.Windows.ContentElement><xref:System.Windows.UIElement.RemoveHandler%2A>ハンドラーを削除する方法です。</span><span class="sxs-lookup"><span data-stu-id="c115e-159">You cannot use the <xref:System.Windows.UIElement> or <xref:System.Windows.ContentElement> <xref:System.Windows.UIElement.RemoveHandler%2A> methods to remove handlers.</span></span> <span data-ttu-id="c115e-160">使用する必要があります<xref:System.Windows.PresentationSource.RemoveSourceChangedHandler%2A>です。</span><span class="sxs-lookup"><span data-stu-id="c115e-160">You must use <xref:System.Windows.PresentationSource.RemoveSourceChangedHandler%2A>.</span></span>  
  
-   <span data-ttu-id="c115e-161">C#`+=`と`-=`イベント ハンドラーの構文、およびその他の言語固有のハンドラーの構文ではサポートされず、イベント自体がパブリックとして公開されていないためです。</span><span class="sxs-lookup"><span data-stu-id="c115e-161">The C# `+=` and `-=` event handler syntaxes, and other language-specific handler syntaxes, are not supported, because the event itself is not exposed as public.</span></span> <span data-ttu-id="c115e-162">のみ、<xref:System.Windows.PresentationSource>ユーティリティ メソッドを追加およびサポートは、直接、ハンドラーを削除します。</span><span class="sxs-lookup"><span data-stu-id="c115e-162">Only the <xref:System.Windows.PresentationSource> utility methods for adding and removing the handlers directly are supported.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.PresentationSource.AddSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)" />
      </Docs>
    </Member>
    <Member MemberName="RootChanged">
      <MemberSignature Language="C#" Value="protected void RootChanged (System.Windows.Media.Visual oldRoot, System.Windows.Media.Visual newRoot);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RootChanged(class System.Windows.Media.Visual oldRoot, class System.Windows.Media.Visual newRoot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.RootChanged(System.Windows.Media.Visual,System.Windows.Media.Visual)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RootChanged (oldRoot As Visual, newRoot As Visual)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RootChanged(System::Windows::Media::Visual ^ oldRoot, System::Windows::Media::Visual ^ newRoot);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldRoot" Type="System.Windows.Media.Visual" />
        <Parameter Name="newRoot" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="oldRoot">
          <span data-ttu-id="c115e-163">変更前のルート <see cref="T:System.Windows.Media.Visual" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c115e-163">The old root <see cref="T:System.Windows.Media.Visual" />.</span>
          </span>
        </param>
        <param name="newRoot">
          <span data-ttu-id="c115e-164">変更後のルート <see cref="T:System.Windows.Media.Visual" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c115e-164">The new root <see cref="T:System.Windows.Media.Visual" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c115e-165">ルート <see cref="T:System.Windows.Media.Visual" /> が変更されたことを示す通知を提供します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c115e-165">Provides notification that the root <see cref="T:System.Windows.Media.Visual" /> has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c115e-166">派生クラスこのメソッドを呼び出すことを示すルートの<xref:System.Windows.Media.Visual>が変更されました。</span><span class="sxs-lookup"><span data-stu-id="c115e-166">Derived classes should call this method to indicate that their root <xref:System.Windows.Media.Visual> has changed.</span></span>  
  
 <span data-ttu-id="c115e-167">このメソッドを呼び出すそれらルート ビジュアルは場合にのみ 2 つのオブジェクトの有効期間イベントで、指定したルート ビジュアルに発生すると、<xref:System.Windows.FrameworkElement>クラスを派生します。</span><span class="sxs-lookup"><span data-stu-id="c115e-167">Calling this method causes two object lifetime events to be raised on the specified root visuals, if and only if those root visuals are <xref:System.Windows.FrameworkElement> derived classes.</span></span>  
  
-   <span data-ttu-id="c115e-168">以前のルート visual を生成、<xref:System.Windows.FrameworkElement.Unloaded>イベント、およびその要素ツリーの下に、各子要素には、このイベントをブロードキャストを処理します。</span><span class="sxs-lookup"><span data-stu-id="c115e-168">The old root visual will raise the <xref:System.Windows.FrameworkElement.Unloaded> event, and will process its tree of elements downward, broadcasting this event to each child element.</span></span>  
  
-   <span data-ttu-id="c115e-169">新しいルート visual を発生させる、<xref:System.Windows.FrameworkElement.Loaded>イベント、およびその要素ツリーの下に、各子要素には、このイベントをブロードキャストを処理します。</span><span class="sxs-lookup"><span data-stu-id="c115e-169">The new root visual will raise the <xref:System.Windows.FrameworkElement.Loaded> event, and will process its tree of elements downward, broadcasting this event to each child element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootVisual">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Media.Visual RootVisual { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Visual RootVisual" />
      <MemberSignature Language="DocId" Value="P:System.Windows.PresentationSource.RootVisual" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property RootVisual As Visual" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Windows::Media::Visual ^ RootVisual { System::Windows::Media::Visual ^ get(); void set(System::Windows::Media::Visual ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Visual</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c115e-170">派生クラスでオーバーライドされると、ソースで表示されているルート ビジュアルを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c115e-170">When overridden in a derived class, gets or sets the root visual being presented in the source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c115e-171">ルート ビジュアル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c115e-171">The root visual.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="c115e-172">プロパティを上書きする (<see langword="InheritanceDemand" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c115e-172">to override the property (<see langword="InheritanceDemand" />).</span>
          </span>
          <span data-ttu-id="c115e-173">
            <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /> (関連する列挙体)</span>
          <span class="sxs-lookup">
            <span data-stu-id="c115e-173">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
  </Members>
</Type>