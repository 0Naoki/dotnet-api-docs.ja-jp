<Type Name="PresentationSource" FullName="System.Windows.PresentationSource">
  <Metadata><Meta Name="ms.openlocfilehash" Value="20d3b3ad42e8a642f9361220f51143b2d62a3a86" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48637657" /></Metadata><TypeSignature Language="C#" Value="public abstract class PresentationSource : System.Windows.Threading.DispatcherObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract PresentationSource extends System.Windows.Threading.DispatcherObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.PresentationSource" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PresentationSource&#xA;Inherits DispatcherObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class PresentationSource abstract : System::Windows::Threading::DispatcherObject" />
  <TypeSignature Language="F#" Value="type PresentationSource = class&#xA;    inherit DispatcherObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Threading.DispatcherObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>別の技術からのコンテンツを相互運用シナリオの一部として表示するクラスの抽象基本クラスです。 また、このクラスはそれらのソースを操作するための静的メソッド、および基本的なビジュアル層のプレゼンテーション アーキテクチャも提供します。</summary>
    <remarks>To be added.</remarks>
    <permission cref="T:System.Security.Permissions.UIPermission">このクラスから派生します。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</permission>
    <altmember cref="T:System.Windows.Interop.HwndSource" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PresentationSource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PresentationSource();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>派生クラスのコンストラクターによって呼び出されるときに基本クラスの値を初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddSource">
      <MemberSignature Language="C#" Value="protected void AddSource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AddSource() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.AddSource" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AddSource ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AddSource();" />
      <MemberSignature Language="F#" Value="member this.AddSource : unit -&gt; unit" Usage="presentationSource.AddSource " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.PresentationSource" /> 派生クラスのインスタンスを既知のプレゼンテーション ソースのリストに追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 追跡する必要があることを示すために、派生クラスによってこのメソッドを呼び出す必要があります。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddSourceChangedHandler">
      <MemberSignature Language="C#" Value="public static void AddSourceChangedHandler (System.Windows.IInputElement element, System.Windows.SourceChangedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddSourceChangedHandler(class System.Windows.IInputElement element, class System.Windows.SourceChangedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.AddSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddSourceChangedHandler (element As IInputElement, handler As SourceChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddSourceChangedHandler(System::Windows::IInputElement ^ element, System::Windows::SourceChangedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddSourceChangedHandler : System.Windows.IInputElement * System.Windows.SourceChangedEventHandler -&gt; unit" Usage="System.Windows.PresentationSource.AddSourceChangedHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.IInputElement" />
        <Parameter Name="handler" Type="System.Windows.SourceChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">ハンドラーを追加する対象の要素。</param>
        <param name="handler">追加するハンドラー実装。</param>
        <summary><see langword="SourceChanged" /> イベントのハンドラーを、指定した要素に追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このイベントの構文のブロックの状態に関係なくが正当ないいえ[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]添付プロパティの使用法。 ハンドラーを追加しないで[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]、し、コード内のハンドラーは、プレゼンテーション用のホストとして機能するオブジェクトにだけ適用する必要があります (<xref:System.Windows.PresentationSource> ) コンテンツ。 このようなハンドラーは、オブジェクトの初期化中にのみアタッチする必要があり、Dispose メソッドまたは同等のオブジェクトのクリーンアップで明示的に削除する必要があります。  
  
 このイベントは自体にこの処理に関連する一般的なアプリケーション シナリオの要素数が比較的小さいため、通常のルーティング イベントの動作とは異なるに特別な制限がある場合でも、ルーティング イベントは、イベントです。  
  
-   使用することはできません、<xref:System.Windows.UIElement>または<xref:System.Windows.ContentElement><xref:System.Windows.UIElement.AddHandler%2A>ハンドラーを追加する方法。 使用する必要があります<xref:System.Windows.PresentationSource.AddSourceChangedHandler%2A>します。  
  
-   C#`+=`と`-=`イベント ハンドラーの構文、および関連する言語固有のハンドラーの構文はサポートされていません、イベント自体がパブリックとして公開されていないためです。 のみ、<xref:System.Windows.PresentationSource>ユーティリティ メソッドの追加やサポートが直接、ハンドラーを削除します。  
  
-   クラス ハンドラーを指定することはできません。 具体的には、呼び出すことはできません<xref:System.Windows.EventManager.RegisterClassHandler%2A>クラスのコンス トラクターでは、このイベントに対して、識別子がパブリックでない SourceChanged の識別子フィールドが存在しますが、ためです。  
  
-   すべての登録済みハンドラー、ハンドラーの 1 つの引数を処理済みとしてマークしよう場合でも、SourceChanged イベントが表示されます。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">呼び出すか、このメソッドを実装します。 <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /> (関連する列挙体)</permission>
      </Docs>
    </Member>
    <Member MemberName="ClearContentRenderedListeners">
      <MemberSignature Language="C#" Value="protected void ClearContentRenderedListeners ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ClearContentRenderedListeners() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.ClearContentRenderedListeners" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ClearContentRenderedListeners ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ClearContentRenderedListeners();" />
      <MemberSignature Language="F#" Value="member this.ClearContentRenderedListeners : unit -&gt; unit" Usage="presentationSource.ClearContentRenderedListeners " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="E:System.Windows.PresentationSource.ContentRendered" /> イベントのリスナーのリストを <see langword="null" /> に設定します。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Windows.PresentationSource.ContentRendered" />
      </Docs>
    </Member>
    <Member MemberName="CompositionTarget">
      <MemberSignature Language="C#" Value="public System.Windows.Media.CompositionTarget CompositionTarget { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.CompositionTarget CompositionTarget" />
      <MemberSignature Language="DocId" Value="P:System.Windows.PresentationSource.CompositionTarget" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CompositionTarget As CompositionTarget" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::CompositionTarget ^ CompositionTarget { System::Windows::Media::CompositionTarget ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CompositionTarget : System.Windows.Media.CompositionTarget" Usage="System.Windows.PresentationSource.CompositionTarget" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.CompositionTarget</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ソースに表示されているビジュアルのビジュアル ターゲットを取得します。</summary>
        <value>ビジュアル ターゲット (<see cref="T:System.Windows.Media.CompositionTarget" /> 派生クラスのインスタンス)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティの戻り値の実装に依存<xref:System.Windows.PresentationSource.GetCompositionTargetCore%2A>します。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>型固有の値を提供するには、このプロパティをシャドウする派生クラスを選択できます。</para></block>
      </Docs>
    </Member>
    <Member MemberName="ContentRendered">
      <MemberSignature Language="C#" Value="public event EventHandler ContentRendered;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ContentRendered" />
      <MemberSignature Language="DocId" Value="E:System.Windows.PresentationSource.ContentRendered" />
      <MemberSignature Language="VB.NET" Value="Public Event ContentRendered As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ContentRendered;" />
      <MemberSignature Language="F#" Value="member this.ContentRendered : EventHandler " Usage="member this.ContentRendered : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コンテンツがレンダリングされ、ユーザー操作を受け入れる準備が整ったときに発生します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentSources">
      <MemberSignature Language="C#" Value="public static System.Collections.IEnumerable CurrentSources { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.IEnumerable CurrentSources" />
      <MemberSignature Language="DocId" Value="P:System.Windows.PresentationSource.CurrentSources" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentSources As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::IEnumerable ^ CurrentSources { System::Collections::IEnumerable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentSources : System.Collections.IEnumerable" Usage="System.Windows.PresentationSource.CurrentSources" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ソースのリストを返します。</summary>
        <value>弱い参照のリスト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 追加されると、リストが返されますがソースの一覧の読み取り専用のスレッド セーフのコピーに対する列挙子をサポート<xref:System.Windows.PresentationSource.AddSource%2A>します。  
  
 列挙子は、リストの配信不能の弱い参照をスキップします。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">ソースを取得します。 <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /> (関連する列挙体)</permission>
      </Docs>
    </Member>
    <Member MemberName="FromDependencyObject">
      <MemberSignature Language="C#" Value="public static System.Windows.PresentationSource FromDependencyObject (System.Windows.DependencyObject dependencyObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.PresentationSource FromDependencyObject(class System.Windows.DependencyObject dependencyObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.FromDependencyObject(System.Windows.DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::PresentationSource ^ FromDependencyObject(System::Windows::DependencyObject ^ dependencyObject);" />
      <MemberSignature Language="F#" Value="static member FromDependencyObject : System.Windows.DependencyObject -&gt; System.Windows.PresentationSource" Usage="System.Windows.PresentationSource.FromDependencyObject dependencyObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.PresentationSource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyObject" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="dependencyObject">ソースの検索対象となる <see cref="T:System.Windows.DependencyObject" />。</param>
        <summary>指定した <see cref="T:System.Windows.DependencyObject" /> が表示されているソースを返します。</summary>
        <returns>依存関係オブジェクトが表示されている <see cref="T:System.Windows.PresentationSource" />。</returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">呼び出すか、このメソッドを実装します。 <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /> (関連する列挙体)</permission>
      </Docs>
    </Member>
    <Member MemberName="FromVisual">
      <MemberSignature Language="C#" Value="public static System.Windows.PresentationSource FromVisual (System.Windows.Media.Visual visual);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.PresentationSource FromVisual(class System.Windows.Media.Visual visual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.FromVisual(System.Windows.Media.Visual)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::PresentationSource ^ FromVisual(System::Windows::Media::Visual ^ visual);" />
      <MemberSignature Language="F#" Value="static member FromVisual : System.Windows.Media.Visual -&gt; System.Windows.PresentationSource" Usage="System.Windows.PresentationSource.FromVisual visual" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.PresentationSource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="visual">ソースの検索対象となる <see cref="T:System.Windows.Media.Visual" />。</param>
        <summary>指定した <see cref="T:System.Windows.Media.Visual" /> が表示されているソースを返します。</summary>
        <returns>ビジュアルが表示されている <see cref="T:System.Windows.PresentationSource" />。<paramref name="visual" /> が破棄されている場合は <see langword="null" />。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="visual" /> は <see langword="null" />です。</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">呼び出すか、このメソッドを実装します。 <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /> (関連する列挙体)</permission>
      </Docs>
    </Member>
    <Member MemberName="GetCompositionTargetCore">
      <MemberSignature Language="C#" Value="protected abstract System.Windows.Media.CompositionTarget GetCompositionTargetCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Media.CompositionTarget GetCompositionTargetCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.GetCompositionTargetCore" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetCompositionTargetCore () As CompositionTarget" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Windows::Media::CompositionTarget ^ GetCompositionTargetCore();" />
      <MemberSignature Language="F#" Value="abstract member GetCompositionTargetCore : unit -&gt; System.Windows.Media.CompositionTarget" Usage="presentationSource.GetCompositionTargetCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.CompositionTarget</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>派生クラスでオーバーライドされると、指定したソースのビジュアル ターゲットを返します。</summary>
        <returns>ビジュアルを描画するターゲットである <see cref="T:System.Windows.Media.CompositionTarget" /> を返します。</returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para>値を宣言するには、このメソッドをオーバーライドする、<see cref="P:System.Windows.PresentationSource.CompositionTarget" />は読み取り専用プロパティを返します。  
  
オーバーライドの種類に固有のインスタンスを返す必要があります、<see cref="T:System.Windows.Media.CompositionTarget" />相互運用シナリオに使用されるクラス型を派生します。</para></block>
      </Docs>
    </Member>
    <Member MemberName="IsDisposed">
      <MemberSignature Language="C#" Value="public abstract bool IsDisposed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDisposed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.PresentationSource.IsDisposed" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsDisposed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsDisposed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDisposed : bool" Usage="System.Windows.PresentationSource.IsDisposed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>派生クラスでオーバーライドされると、オブジェクトが破棄されているかどうかを宣言する値を取得します。</summary>
        <value>オブジェクトが破棄されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para>派生クラスの実装が期待される<see cref="T:System.IDisposable" />または同等の動作を提供します。</para></block>
      </Docs>
    </Member>
    <Member MemberName="RemoveSource">
      <MemberSignature Language="C#" Value="protected void RemoveSource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RemoveSource() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.RemoveSource" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RemoveSource ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RemoveSource();" />
      <MemberSignature Language="F#" Value="member this.RemoveSource : unit -&gt; unit" Usage="presentationSource.RemoveSource " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.PresentationSource" /> 派生クラスのインスタンスを既知のプレゼンテーション ソースのリストから削除します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveSourceChangedHandler">
      <MemberSignature Language="C#" Value="public static void RemoveSourceChangedHandler (System.Windows.IInputElement e, System.Windows.SourceChangedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveSourceChangedHandler(class System.Windows.IInputElement e, class System.Windows.SourceChangedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.RemoveSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveSourceChangedHandler (e As IInputElement, handler As SourceChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveSourceChangedHandler(System::Windows::IInputElement ^ e, System::Windows::SourceChangedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveSourceChangedHandler : System.Windows.IInputElement * System.Windows.SourceChangedEventHandler -&gt; unit" Usage="System.Windows.PresentationSource.RemoveSourceChangedHandler (e, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.IInputElement" />
        <Parameter Name="handler" Type="System.Windows.SourceChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="e">ハンドラーの削除元となる要素。</param>
        <param name="handler">削除するハンドラー実装。</param>
        <summary><see langword="SourceChanged" /> イベントのハンドラーを、指定した要素から削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このイベントは自体にこの処理に関連する一般的なアプリケーション シナリオの要素数が比較的小さいため、通常のルーティング イベントの動作とは異なるに特別な制限がある場合でも、ルーティング イベントは、イベントです。  
  
-   使用することはできません、<xref:System.Windows.UIElement>または<xref:System.Windows.ContentElement><xref:System.Windows.UIElement.RemoveHandler%2A>メソッド ハンドラーを削除します。 使用する必要があります<xref:System.Windows.PresentationSource.RemoveSourceChangedHandler%2A>します。  
  
-   C#`+=`と`-=`イベント ハンドラーの構文、およびその他の言語固有のハンドラー構文はサポートされていません、イベント自体がパブリックとして公開されていないためです。 のみ、<xref:System.Windows.PresentationSource>ユーティリティ メソッドの追加やサポートが直接、ハンドラーを削除します。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.PresentationSource.AddSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)" />
      </Docs>
    </Member>
    <Member MemberName="RootChanged">
      <MemberSignature Language="C#" Value="protected void RootChanged (System.Windows.Media.Visual oldRoot, System.Windows.Media.Visual newRoot);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RootChanged(class System.Windows.Media.Visual oldRoot, class System.Windows.Media.Visual newRoot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.RootChanged(System.Windows.Media.Visual,System.Windows.Media.Visual)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RootChanged (oldRoot As Visual, newRoot As Visual)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RootChanged(System::Windows::Media::Visual ^ oldRoot, System::Windows::Media::Visual ^ newRoot);" />
      <MemberSignature Language="F#" Value="member this.RootChanged : System.Windows.Media.Visual * System.Windows.Media.Visual -&gt; unit" Usage="presentationSource.RootChanged (oldRoot, newRoot)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldRoot" Type="System.Windows.Media.Visual" />
        <Parameter Name="newRoot" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="oldRoot">変更前のルート <see cref="T:System.Windows.Media.Visual" />。</param>
        <param name="newRoot">変更後のルート <see cref="T:System.Windows.Media.Visual" />。</param>
        <summary>ルート <see cref="T:System.Windows.Media.Visual" /> が変更されたことを示す通知を提供します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 派生クラスを示すには、このメソッド呼び出す必要があります、ルート<xref:System.Windows.Media.Visual>が変更されました。  
  
 これらのルート ビジュアルが場合にのみに 2 つのオブジェクト有効期間イベントが発生します。 指定したルートのビジュアルにこのメソッドを呼び出すと、<xref:System.Windows.FrameworkElement>クラスを派生します。  
  
-   前のルート ビジュアルを発生させる、<xref:System.Windows.FrameworkElement.Unloaded>イベント、その要素ツリーの下に、各子要素には、このイベントをブロードキャストが処理されます。  
  
-   ルート ビジュアルを発生させる、<xref:System.Windows.FrameworkElement.Loaded>イベント、その要素ツリーの下に、各子要素には、このイベントをブロードキャストが処理されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootVisual">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Media.Visual RootVisual { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Visual RootVisual" />
      <MemberSignature Language="DocId" Value="P:System.Windows.PresentationSource.RootVisual" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property RootVisual As Visual" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Windows::Media::Visual ^ RootVisual { System::Windows::Media::Visual ^ get(); void set(System::Windows::Media::Visual ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RootVisual : System.Windows.Media.Visual with get, set" Usage="System.Windows.PresentationSource.RootVisual" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Visual</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>派生クラスでオーバーライドされると、ソースで表示されているルート ビジュアルを取得または設定します。</summary>
        <value>ルート ビジュアル。</value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">プロパティを上書きする (<see langword="InheritanceDemand" />)。 <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /> (関連する列挙体)</permission>
      </Docs>
    </Member>
  </Members>
</Type>