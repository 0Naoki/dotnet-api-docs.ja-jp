<Type Name="VisualTransition" FullName="System.Windows.VisualTransition">
  <Metadata><Meta Name="ms.openlocfilehash" Value="28b6863b2a2868d20f566573bd386ff0b3324735" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69432679" /></Metadata><TypeSignature Language="C#" Value="public class VisualTransition : System.Windows.DependencyObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit VisualTransition extends System.Windows.DependencyObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.VisualTransition" />
  <TypeSignature Language="VB.NET" Value="Public Class VisualTransition&#xA;Inherits DependencyObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class VisualTransition : System::Windows::DependencyObject" />
  <TypeSignature Language="F#" Value="type VisualTransition = class&#xA;    inherit DependencyObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Storyboard")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>コントロールの状態が遷移するときに発生する視覚的な動作を表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 オブジェクトを追加<xref:System.Windows.VisualTransition>することによって、コントロールが状態間を遷移するときのビジュアル動作を指定できます。 を作成<xref:System.Windows.VisualTransition>するときは、次のいずれかまたは複数を指定します。  
  
-   <xref:System.Windows.VisualTransition.GeneratedDuration%2A>プロパティを設定することによって、状態間の遷移が発生するまでにかかる時間。  
  
-   プロパティを設定する<xref:System.Windows.VisualTransition.Storyboard%2A>ことによって、遷移時に発生するコントロールの外観の追加の変更。  
  
-   が適用されるときに、 <xref:System.Windows.VisualTransition.To%2A>プロパティ<xref:System.Windows.VisualTransition.From%2A>とプロパティを設定します。 <xref:System.Windows.VisualTransition>  
  
   
  
## Examples  
 次の例では<xref:System.Windows.VisualTransition> 、ユーザーがマウスをコントロールから移動したときに、コントロールの境界線が青に変わり、次に黄色に変わり、次に1.5 秒で黒に変更されたことを指定するを作成します。 全体の例については、「 [ControlTemplate を作成して既存のコントロールの外観をカスタマイズ](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)する」を参照してください。  
  
 [!code-xaml[VSMButtonTemplate#8](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/skinnedbutton.xaml#8)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VisualTransition ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.VisualTransition.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VisualTransition();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.VisualTransition" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="From">
      <MemberSignature Language="C#" Value="public string From { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string From" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualTransition.From" />
      <MemberSignature Language="VB.NET" Value="Public Property From As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ From { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.From : string with get, set" Usage="System.Windows.VisualTransition.From" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>遷移する前の <see cref="T:System.Windows.VisualState" /> の名前を取得または設定します。</summary>
        <value>遷移する前の <see cref="T:System.Windows.VisualState" /> の名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.VisualTransition.From%2A>プロパティは省略可能です。 は<xref:System.Windows.VisualTransition>特定の状態にのみ適用されるように制限できます。また、コントロールが状態間を遷移するたびに適用することもできます。 <xref:System.Windows.VisualTransition>が適用されるタイミングを制限するに<xref:System.Windows.VisualTransition.To%2A>は<xref:System.Windows.VisualTransition.From%2A> 、プロパティとプロパティを設定します。 次の表では、制限が最も厳しいレベルから最も緩いレベルまでを一覧にして示しています。  
  
|制限の種類|からの値|の値|  
|-------------------------|-------------------|-----------------|  
|指定した状態から別の指定した状態まで|の名前<xref:System.Windows.VisualState>|の名前<xref:System.Windows.VisualState>|  
|任意の状態から指定された状態まで|未設定|の名前<xref:System.Windows.VisualState>|  
|指定した状態から任意の状態まで|の名前<xref:System.Windows.VisualState>|未設定|  
|任意の状態から他の状態へ|未設定|未設定|  
  
 同じ状態を参照<xref:System.Windows.VisualTransition>している<xref:System.Windows.VisualStateGroup>内に複数のオブジェクトを含めることができますが、これらは、前の表で指定した順序で使用されます。  
  
 この動作を変更するには、から<xref:System.Windows.VisualStateManager>継承する新しいクラスを作成し、 <xref:System.Windows.VisualStateManager.GoToStateCore%2A>メソッドをオーバーライドします。  
  
   
  
## Examples  
 次の例では<xref:System.Windows.VisualTransition> 、2つのオブジェクトを作成します。 `Pressed`コントロールが<xref:System.Windows.VisualTransition.To%2A>状態から`MouseOver`状態に遷移すると、との<xref:System.Windows.VisualTransition>両方<xref:System.Windows.VisualTransition.From%2A>を持つが使用されます。 コントロールが `Pressed` ではない状態から `MouseOver` 状態に遷移するときには、別の状態を使用します。  
  
 [!code-xaml[VSMButtonTemplate#7](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/skinnedbutton.xaml#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GeneratedDuration">
      <MemberSignature Language="C#" Value="public System.Windows.Duration GeneratedDuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Duration GeneratedDuration" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualTransition.GeneratedDuration" />
      <MemberSignature Language="VB.NET" Value="Public Property GeneratedDuration As Duration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Duration GeneratedDuration { System::Windows::Duration get(); void set(System::Windows::Duration value); };" />
      <MemberSignature Language="F#" Value="member this.GeneratedDuration : System.Windows.Duration with get, set" Usage="System.Windows.VisualTransition.GeneratedDuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.DurationConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Duration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>状態の遷移に必要な時間を取得または設定します。</summary>
        <value>状態の遷移に必要な時間。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 遷移の実行時間を指定するには、 <xref:System.Windows.VisualTransition.GeneratedDuration%2A>プロパティを設定します。 <xref:System.Windows.VisualTransition.GeneratedDuration%2A>プロパティを設定するときは、遷移が発生するまでにかかる時間を指定します。  
  
   
  
## Examples  
 次の例では、コントロールが1秒間に`MouseOver`状態に進むように指定しています。 全体の例については、「 [ControlTemplate を作成して既存のコントロールの外観をカスタマイズ](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)する」を参照してください。  
  
 [!code-xaml[VSMButtonTemplate#MouseOverTransition](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/skinnedbutton.xaml#mouseovertransition)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GeneratedEasingFunction">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.IEasingFunction GeneratedEasingFunction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Animation.IEasingFunction GeneratedEasingFunction" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualTransition.GeneratedEasingFunction" />
      <MemberSignature Language="VB.NET" Value="Public Property GeneratedEasingFunction As IEasingFunction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Animation::IEasingFunction ^ GeneratedEasingFunction { System::Windows::Media::Animation::IEasingFunction ^ get(); void set(System::Windows::Media::Animation::IEasingFunction ^ value); };" />
      <MemberSignature Language="F#" Value="member this.GeneratedEasingFunction : System.Windows.Media.Animation.IEasingFunction with get, set" Usage="System.Windows.VisualTransition.GeneratedEasingFunction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.IEasingFunction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>状態間の遷移に使用するカスタムの数式を取得または設定します。</summary>
        <value>状態間の遷移に使用するカスタムの数式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.VisualTransition.GeneratedEasingFunction%2A>プロパティを設定して、遷移の実行方法を指定できます。 たとえば、イージング関数を指定して、遷移を加速または減速させることができます。 詳細については、「[イージング関数](~/docs/framework/wpf/graphics-multimedia/easing-functions.md)」を参照してください。  
  
   
  
## Examples  
 次の例では<xref:System.Windows.VisualTransition> 、ユーザーが<xref:System.Windows.Shapes.Rectangle>の<xref:System.Windows.Controls.Canvas>上でマウスボタンを押すと、が垂直方向に移動するを作成します。 この例では<xref:System.Windows.VisualTransition.GeneratedEasingFunction%2A> 、プロパティを<xref:System.Windows.Media.Animation.BounceEase>オブジェクトに設定し<xref:System.Windows.Shapes.Rectangle>て、が送信先に到達したときにがバウンスするようにします。 ユーザーがボタンを離したときに、が元の<xref:System.Windows.Media.Animation.BounceEase>位置に戻る前<xref:System.Windows.Shapes.Rectangle>にをバウンスするようにする別のオブジェクトがある場合に使用される。<xref:System.Windows.VisualTransition>  
  
 [!code-xaml[VSMCustomControl#VSMEasingFunction](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmcustomcontrol/csharp/window1.xaml#vsmeasingfunction)]  
  
 次の例は、イベント<xref:System.Windows.UIElement3D.MouseDown>と<xref:System.Windows.UIElement.MouseUp>イベントのイベントハンドラーを示しています。 この例では<xref:System.Windows.VisualStateManager.GoToElementState%2A> 、メソッドを呼び出し<xref:System.Windows.VisualState>て、キャンバスのを変更します。  
  
 [!code-csharp[VSMCustomControl#VSMEasingFunctionLogic](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmcustomcontrol/csharp/window1.xaml.cs#vsmeasingfunctionlogic)]
 [!code-vb[VSMCustomControl#VSMEasingFunctionLogic](~/samples/snippets/visualbasic/VS_Snippets_Wpf/vsmcustomcontrol/visualbasic/window1.xaml.vb#vsmeasingfunctionlogic)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Storyboard">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Storyboard Storyboard { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Animation.Storyboard Storyboard" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualTransition.Storyboard" />
      <MemberSignature Language="VB.NET" Value="Public Property Storyboard As Storyboard" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Animation::Storyboard ^ Storyboard { System::Windows::Media::Animation::Storyboard ^ get(); void set(System::Windows::Media::Animation::Storyboard ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Storyboard : System.Windows.Media.Animation.Storyboard with get, set" Usage="System.Windows.VisualTransition.Storyboard" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Storyboard</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>遷移が行われたときに発生する <see cref="T:System.Windows.Media.Animation.Storyboard" /> を取得または設定します。</summary>
        <value>遷移が行われたときに発生する <see cref="T:System.Windows.Media.Animation.Storyboard" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 にが<xref:System.Windows.VisualTransition> <xref:System.Windows.Media.Animation.Storyboard> <xref:System.Windows.Media.Animation.Storyboard>含まれている場合、が適用されるたびにが実行されます。 <xref:System.Windows.VisualTransition> たとえば、ユーザーがマウスを移動したとき<xref:System.Windows.Controls.Button>にの境界線を使用して色を変更する場合は、ボタンの<xref:System.Windows.VisualTransition>背景を変更<xref:System.Windows.Media.Animation.Storyboard>するを持つを作成できます。  
  
   
  
## Examples  
 次の例では<xref:System.Windows.VisualTransition> 、ユーザーがマウスをコントロールから移動したときに、コントロールの境界線が青に変わり、次に黄色に変わり、次に1.5 秒で黒に変更されたことを指定するを作成します。 全体の例については、「 [ControlTemplate を作成して既存のコントロールの外観をカスタマイズ](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)する」を参照してください。  
  
 [!code-xaml[VSMButtonTemplate#8](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/skinnedbutton.xaml#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="To">
      <MemberSignature Language="C#" Value="public string To { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string To" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualTransition.To" />
      <MemberSignature Language="VB.NET" Value="Public Property To As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ To { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.To : string with get, set" Usage="System.Windows.VisualTransition.To" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>遷移した後の <see cref="T:System.Windows.VisualState" /> の名前を取得または設定します。</summary>
        <value>遷移先の <see cref="T:System.Windows.VisualState" /> の名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.VisualTransition.To%2A>プロパティは省略可能です。 は<xref:System.Windows.VisualTransition>特定の状態にのみ適用されるように制限できます。また、コントロールが状態間を遷移するたびに適用することもできます。 <xref:System.Windows.VisualTransition>が適用されるタイミングを制限するに<xref:System.Windows.VisualTransition.To%2A>は<xref:System.Windows.VisualTransition.From%2A> 、プロパティとプロパティを設定します。 次の表では、制限が最も厳しいレベルから最も緩いレベルまでを一覧にして示しています。  
  
|制限の種類|からの値|の値|  
|-------------------------|-------------------|-----------------|  
|指定した状態から別の指定した状態まで|の名前<xref:System.Windows.VisualState>|の名前<xref:System.Windows.VisualState>|  
|任意の状態から指定された状態まで|未設定|の名前<xref:System.Windows.VisualState>|  
|指定した状態から任意の状態まで|の名前<xref:System.Windows.VisualState>|未設定|  
|任意の状態から他の状態へ|未設定|未設定|  
  
 同じ状態を参照<xref:System.Windows.VisualTransition>している<xref:System.Windows.VisualStateGroup>内に複数のオブジェクトを含めることができますが、これらは、前の表で指定した順序で使用されます。  
  
 この動作を変更するには、から<xref:System.Windows.VisualStateManager>継承する新しいクラスを作成し、 <xref:System.Windows.VisualStateManager.GoToStateCore%2A>メソッドをオーバーライドします。  
  
   
  
## Examples  
 次の例では<xref:System.Windows.VisualTransition> 、2つのオブジェクトを作成します。 `Pressed`コントロールが<xref:System.Windows.VisualTransition.To%2A>状態から`MouseOver`状態に遷移すると、との<xref:System.Windows.VisualTransition>両方<xref:System.Windows.VisualTransition.From%2A>を持つが使用されます。 コントロールが `Pressed` ではない状態から `MouseOver` 状態に遷移するときには、別の状態を使用します。  
  
 [!code-xaml[VSMButtonTemplate#7](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/skinnedbutton.xaml#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
