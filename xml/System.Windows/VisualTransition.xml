<Type Name="VisualTransition" FullName="System.Windows.VisualTransition">
  <Metadata><Meta Name="ms.openlocfilehash" Value="28b6863b2a2868d20f566573bd386ff0b3324735" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70708377" /></Metadata><TypeSignature Language="C#" Value="public class VisualTransition : System.Windows.DependencyObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit VisualTransition extends System.Windows.DependencyObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.VisualTransition" />
  <TypeSignature Language="VB.NET" Value="Public Class VisualTransition&#xA;Inherits DependencyObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class VisualTransition : System::Windows::DependencyObject" />
  <TypeSignature Language="F#" Value="type VisualTransition = class&#xA;    inherit DependencyObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Storyboard")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="866f7-101">コントロールの状態が遷移するときに発生する視覚的な動作を表します。</span><span class="sxs-lookup"><span data-stu-id="866f7-101">Represents the visual behavior that occurs when a control transitions from one state to another.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="866f7-102">オブジェクトを追加<xref:System.Windows.VisualTransition>することによって、コントロールが状態間を遷移するときのビジュアル動作を指定できます。</span><span class="sxs-lookup"><span data-stu-id="866f7-102">You can specify the visual behavior of a control when it transitions between states by adding <xref:System.Windows.VisualTransition> objects.</span></span> <span data-ttu-id="866f7-103">を作成<xref:System.Windows.VisualTransition>するときは、次のいずれかまたは複数を指定します。</span><span class="sxs-lookup"><span data-stu-id="866f7-103">When you create a <xref:System.Windows.VisualTransition>, you specify one or more of the following:</span></span>  
  
-   <span data-ttu-id="866f7-104"><xref:System.Windows.VisualTransition.GeneratedDuration%2A>プロパティを設定することによって、状態間の遷移が発生するまでにかかる時間。</span><span class="sxs-lookup"><span data-stu-id="866f7-104">The time it takes for a transition between states to occur by setting the <xref:System.Windows.VisualTransition.GeneratedDuration%2A> property.</span></span>  
  
-   <span data-ttu-id="866f7-105">プロパティを設定する<xref:System.Windows.VisualTransition.Storyboard%2A>ことによって、遷移時に発生するコントロールの外観の追加の変更。</span><span class="sxs-lookup"><span data-stu-id="866f7-105">Additional changes in the control's appearance that occur at the time of the transition by setting the <xref:System.Windows.VisualTransition.Storyboard%2A> property.</span></span>  
  
-   <span data-ttu-id="866f7-106">が適用されるときに、 <xref:System.Windows.VisualTransition.To%2A>プロパティ<xref:System.Windows.VisualTransition.From%2A>とプロパティを設定します。 <xref:System.Windows.VisualTransition></span><span class="sxs-lookup"><span data-stu-id="866f7-106">When the <xref:System.Windows.VisualTransition> is applied by setting the <xref:System.Windows.VisualTransition.To%2A> and <xref:System.Windows.VisualTransition.From%2A> properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="866f7-107">次の例では<xref:System.Windows.VisualTransition> 、ユーザーがマウスをコントロールから移動したときに、コントロールの境界線が青に変わり、次に黄色に変わり、次に1.5 秒で黒に変更されたことを指定するを作成します。</span><span class="sxs-lookup"><span data-stu-id="866f7-107">The following example creates a <xref:System.Windows.VisualTransition> that specifies that when the user moves the mouse away from the control, the control's border changes to blue, then to yellow, and then to black in 1.5 seconds.</span></span> <span data-ttu-id="866f7-108">全体の例については、「 [ControlTemplate を作成して既存のコントロールの外観をカスタマイズ](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)する」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="866f7-108">For the entire example, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  
  
 [!code-xaml[VSMButtonTemplate#8](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/skinnedbutton.xaml#8)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VisualTransition ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.VisualTransition.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VisualTransition();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="866f7-109"><see cref="T:System.Windows.VisualTransition" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="866f7-109">Initializes a new instance of the <see cref="T:System.Windows.VisualTransition" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="From">
      <MemberSignature Language="C#" Value="public string From { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string From" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualTransition.From" />
      <MemberSignature Language="VB.NET" Value="Public Property From As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ From { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.From : string with get, set" Usage="System.Windows.VisualTransition.From" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="866f7-110">遷移する前の <see cref="T:System.Windows.VisualState" /> の名前を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="866f7-110">Gets or sets the name of the <see cref="T:System.Windows.VisualState" /> to transition from.</span></span></summary>
        <value><span data-ttu-id="866f7-111">遷移する前の <see cref="T:System.Windows.VisualState" /> の名前。</span><span class="sxs-lookup"><span data-stu-id="866f7-111">The name of the <see cref="T:System.Windows.VisualState" /> to transition from.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="866f7-112"><xref:System.Windows.VisualTransition.From%2A>プロパティは省略可能です。</span><span class="sxs-lookup"><span data-stu-id="866f7-112">The <xref:System.Windows.VisualTransition.From%2A> property is optional.</span></span> <span data-ttu-id="866f7-113">は<xref:System.Windows.VisualTransition>特定の状態にのみ適用されるように制限できます。また、コントロールが状態間を遷移するたびに適用することもできます。</span><span class="sxs-lookup"><span data-stu-id="866f7-113">A <xref:System.Windows.VisualTransition> can be restricted to apply to only certain states or it can be applied any time the control transitions between states.</span></span> <span data-ttu-id="866f7-114"><xref:System.Windows.VisualTransition>が適用されるタイミングを制限するに<xref:System.Windows.VisualTransition.To%2A>は<xref:System.Windows.VisualTransition.From%2A> 、プロパティとプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="866f7-114">You restrict when a <xref:System.Windows.VisualTransition> is applied by setting the <xref:System.Windows.VisualTransition.To%2A> and <xref:System.Windows.VisualTransition.From%2A> properties.</span></span> <span data-ttu-id="866f7-115">次の表では、制限が最も厳しいレベルから最も緩いレベルまでを一覧にして示しています。</span><span class="sxs-lookup"><span data-stu-id="866f7-115">The following table describes the levels of restriction from most restrictive to least restrictive.</span></span>  
  
|<span data-ttu-id="866f7-116">制限の種類</span><span class="sxs-lookup"><span data-stu-id="866f7-116">Type of restriction</span></span>|<span data-ttu-id="866f7-117">からの値</span><span class="sxs-lookup"><span data-stu-id="866f7-117">Value of From</span></span>|<span data-ttu-id="866f7-118">の値</span><span class="sxs-lookup"><span data-stu-id="866f7-118">Value of To</span></span>|  
|-------------------------|-------------------|-----------------|  
|<span data-ttu-id="866f7-119">指定した状態から別の指定した状態まで</span><span class="sxs-lookup"><span data-stu-id="866f7-119">From a specified state to another specified state</span></span>|<span data-ttu-id="866f7-120">の名前<xref:System.Windows.VisualState></span><span class="sxs-lookup"><span data-stu-id="866f7-120">The name of a <xref:System.Windows.VisualState></span></span>|<span data-ttu-id="866f7-121">の名前<xref:System.Windows.VisualState></span><span class="sxs-lookup"><span data-stu-id="866f7-121">The name of a <xref:System.Windows.VisualState></span></span>|  
|<span data-ttu-id="866f7-122">任意の状態から指定された状態まで</span><span class="sxs-lookup"><span data-stu-id="866f7-122">From any state to a specified state</span></span>|<span data-ttu-id="866f7-123">未設定</span><span class="sxs-lookup"><span data-stu-id="866f7-123">Not set</span></span>|<span data-ttu-id="866f7-124">の名前<xref:System.Windows.VisualState></span><span class="sxs-lookup"><span data-stu-id="866f7-124">The name of a <xref:System.Windows.VisualState></span></span>|  
|<span data-ttu-id="866f7-125">指定した状態から任意の状態まで</span><span class="sxs-lookup"><span data-stu-id="866f7-125">From a specified state to any state</span></span>|<span data-ttu-id="866f7-126">の名前<xref:System.Windows.VisualState></span><span class="sxs-lookup"><span data-stu-id="866f7-126">The name of a <xref:System.Windows.VisualState></span></span>|<span data-ttu-id="866f7-127">未設定</span><span class="sxs-lookup"><span data-stu-id="866f7-127">Not set</span></span>|  
|<span data-ttu-id="866f7-128">任意の状態から他の状態へ</span><span class="sxs-lookup"><span data-stu-id="866f7-128">From any state to any other state</span></span>|<span data-ttu-id="866f7-129">未設定</span><span class="sxs-lookup"><span data-stu-id="866f7-129">Not set</span></span>|<span data-ttu-id="866f7-130">未設定</span><span class="sxs-lookup"><span data-stu-id="866f7-130">Not set</span></span>|  
  
 <span data-ttu-id="866f7-131">同じ状態を参照<xref:System.Windows.VisualTransition>している<xref:System.Windows.VisualStateGroup>内に複数のオブジェクトを含めることができますが、これらは、前の表で指定した順序で使用されます。</span><span class="sxs-lookup"><span data-stu-id="866f7-131">You can have multiple <xref:System.Windows.VisualTransition> objects in a <xref:System.Windows.VisualStateGroup> that refer to the same state, but they will be used in the order that the previous table specifies.</span></span>  
  
 <span data-ttu-id="866f7-132">この動作を変更するには、から<xref:System.Windows.VisualStateManager>継承する新しいクラスを作成し、 <xref:System.Windows.VisualStateManager.GoToStateCore%2A>メソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="866f7-132">You can change this behavior by creating a new class that inherits from <xref:System.Windows.VisualStateManager> and overriding the <xref:System.Windows.VisualStateManager.GoToStateCore%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="866f7-133">次の例では<xref:System.Windows.VisualTransition> 、2つのオブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="866f7-133">The following example creates two <xref:System.Windows.VisualTransition> objects.</span></span> <span data-ttu-id="866f7-134">`Pressed`コントロールが<xref:System.Windows.VisualTransition.To%2A>状態から`MouseOver`状態に遷移すると、との<xref:System.Windows.VisualTransition>両方<xref:System.Windows.VisualTransition.From%2A>を持つが使用されます。</span><span class="sxs-lookup"><span data-stu-id="866f7-134">When the control transitions from the `Pressed` state to the `MouseOver` state, the <xref:System.Windows.VisualTransition> that has both <xref:System.Windows.VisualTransition.From%2A> and <xref:System.Windows.VisualTransition.To%2A> set is used.</span></span> <span data-ttu-id="866f7-135">コントロールが `Pressed` ではない状態から `MouseOver` 状態に遷移するときには、別の状態を使用します。</span><span class="sxs-lookup"><span data-stu-id="866f7-135">When the control transitions from a state that is not `Pressed` to the `MouseOver` state, the other state is used.</span></span>  
  
 [!code-xaml[VSMButtonTemplate#7](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/skinnedbutton.xaml#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GeneratedDuration">
      <MemberSignature Language="C#" Value="public System.Windows.Duration GeneratedDuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Duration GeneratedDuration" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualTransition.GeneratedDuration" />
      <MemberSignature Language="VB.NET" Value="Public Property GeneratedDuration As Duration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Duration GeneratedDuration { System::Windows::Duration get(); void set(System::Windows::Duration value); };" />
      <MemberSignature Language="F#" Value="member this.GeneratedDuration : System.Windows.Duration with get, set" Usage="System.Windows.VisualTransition.GeneratedDuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.DurationConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Duration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="866f7-136">状態の遷移に必要な時間を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="866f7-136">Gets or sets the time that it takes to move from one state to another.</span></span></summary>
        <value><span data-ttu-id="866f7-137">状態の遷移に必要な時間。</span><span class="sxs-lookup"><span data-stu-id="866f7-137">The time that it takes to move from one state to another.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="866f7-138">遷移の実行時間を指定するには、 <xref:System.Windows.VisualTransition.GeneratedDuration%2A>プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="866f7-138">You can specify how long a transition takes by setting the <xref:System.Windows.VisualTransition.GeneratedDuration%2A> property.</span></span> <span data-ttu-id="866f7-139"><xref:System.Windows.VisualTransition.GeneratedDuration%2A>プロパティを設定するときは、遷移が発生するまでにかかる時間を指定します。</span><span class="sxs-lookup"><span data-stu-id="866f7-139">When you set the <xref:System.Windows.VisualTransition.GeneratedDuration%2A> property, you are specifying the time that it takes for the transition to occur.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="866f7-140">次の例では、コントロールが1秒間に`MouseOver`状態に進むように指定しています。</span><span class="sxs-lookup"><span data-stu-id="866f7-140">The following example specifies that the control takes one half second to go into the `MouseOver` state.</span></span> <span data-ttu-id="866f7-141">全体の例については、「 [ControlTemplate を作成して既存のコントロールの外観をカスタマイズ](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)する」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="866f7-141">For the entire example, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  
  
 [!code-xaml[VSMButtonTemplate#MouseOverTransition](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/skinnedbutton.xaml#mouseovertransition)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GeneratedEasingFunction">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.IEasingFunction GeneratedEasingFunction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Animation.IEasingFunction GeneratedEasingFunction" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualTransition.GeneratedEasingFunction" />
      <MemberSignature Language="VB.NET" Value="Public Property GeneratedEasingFunction As IEasingFunction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Animation::IEasingFunction ^ GeneratedEasingFunction { System::Windows::Media::Animation::IEasingFunction ^ get(); void set(System::Windows::Media::Animation::IEasingFunction ^ value); };" />
      <MemberSignature Language="F#" Value="member this.GeneratedEasingFunction : System.Windows.Media.Animation.IEasingFunction with get, set" Usage="System.Windows.VisualTransition.GeneratedEasingFunction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.IEasingFunction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="866f7-142">状態間の遷移に使用するカスタムの数式を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="866f7-142">Gets or sets a custom mathematical formula that is used to transition between states.</span></span></summary>
        <value><span data-ttu-id="866f7-143">状態間の遷移に使用するカスタムの数式。</span><span class="sxs-lookup"><span data-stu-id="866f7-143">A custom mathematical formula that is used to transition between states.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="866f7-144"><xref:System.Windows.VisualTransition.GeneratedEasingFunction%2A>プロパティを設定して、遷移の実行方法を指定できます。</span><span class="sxs-lookup"><span data-stu-id="866f7-144">You can set the <xref:System.Windows.VisualTransition.GeneratedEasingFunction%2A> property to specify the way a transition occurs.</span></span> <span data-ttu-id="866f7-145">たとえば、イージング関数を指定して、遷移を加速または減速させることができます。</span><span class="sxs-lookup"><span data-stu-id="866f7-145">For example, you can specify an easing function to accelerate or decelerate the transition.</span></span> <span data-ttu-id="866f7-146">詳細については、「[イージング関数](~/docs/framework/wpf/graphics-multimedia/easing-functions.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="866f7-146">For more information, see [Easing Functions](~/docs/framework/wpf/graphics-multimedia/easing-functions.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="866f7-147">次の例では<xref:System.Windows.VisualTransition> 、ユーザーが<xref:System.Windows.Shapes.Rectangle>の<xref:System.Windows.Controls.Canvas>上でマウスボタンを押すと、が垂直方向に移動するを作成します。</span><span class="sxs-lookup"><span data-stu-id="866f7-147">The following example creates a <xref:System.Windows.VisualTransition> that causes a <xref:System.Windows.Shapes.Rectangle> to move vertically when the user presses the mouse button over the <xref:System.Windows.Controls.Canvas>.</span></span> <span data-ttu-id="866f7-148">この例では<xref:System.Windows.VisualTransition.GeneratedEasingFunction%2A> 、プロパティを<xref:System.Windows.Media.Animation.BounceEase>オブジェクトに設定し<xref:System.Windows.Shapes.Rectangle>て、が送信先に到達したときにがバウンスするようにします。</span><span class="sxs-lookup"><span data-stu-id="866f7-148">The example sets the <xref:System.Windows.VisualTransition.GeneratedEasingFunction%2A> property to a <xref:System.Windows.Media.Animation.BounceEase> object to cause the <xref:System.Windows.Shapes.Rectangle> to appear to bounce when it reaches its destination.</span></span> <span data-ttu-id="866f7-149">ユーザーがボタンを離したときに、が元の<xref:System.Windows.Media.Animation.BounceEase>位置に戻る前<xref:System.Windows.Shapes.Rectangle>にをバウンスするようにする別のオブジェクトがある場合に使用される。 <xref:System.Windows.VisualTransition></span><span class="sxs-lookup"><span data-stu-id="866f7-149">The <xref:System.Windows.VisualTransition> that is used when the user releases the button has another <xref:System.Windows.Media.Animation.BounceEase> object to cause the <xref:System.Windows.Shapes.Rectangle> to bounce before it returns to its original position.</span></span>  
  
 [!code-xaml[VSMCustomControl#VSMEasingFunction](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmcustomcontrol/csharp/window1.xaml#vsmeasingfunction)]  
  
 <span data-ttu-id="866f7-150">次の例は、イベント<xref:System.Windows.UIElement3D.MouseDown>と<xref:System.Windows.UIElement.MouseUp>イベントのイベントハンドラーを示しています。</span><span class="sxs-lookup"><span data-stu-id="866f7-150">The following example shows the event handler for the <xref:System.Windows.UIElement3D.MouseDown> and <xref:System.Windows.UIElement.MouseUp> events.</span></span> <span data-ttu-id="866f7-151">この例では<xref:System.Windows.VisualStateManager.GoToElementState%2A> 、メソッドを呼び出し<xref:System.Windows.VisualState>て、キャンバスのを変更します。</span><span class="sxs-lookup"><span data-stu-id="866f7-151">The example calls the <xref:System.Windows.VisualStateManager.GoToElementState%2A> method to change the <xref:System.Windows.VisualState> of the canvas.</span></span>  
  
 [!code-csharp[VSMCustomControl#VSMEasingFunctionLogic](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmcustomcontrol/csharp/window1.xaml.cs#vsmeasingfunctionlogic)]
 [!code-vb[VSMCustomControl#VSMEasingFunctionLogic](~/samples/snippets/visualbasic/VS_Snippets_Wpf/vsmcustomcontrol/visualbasic/window1.xaml.vb#vsmeasingfunctionlogic)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Storyboard">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Storyboard Storyboard { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Animation.Storyboard Storyboard" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualTransition.Storyboard" />
      <MemberSignature Language="VB.NET" Value="Public Property Storyboard As Storyboard" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Animation::Storyboard ^ Storyboard { System::Windows::Media::Animation::Storyboard ^ get(); void set(System::Windows::Media::Animation::Storyboard ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Storyboard : System.Windows.Media.Animation.Storyboard with get, set" Usage="System.Windows.VisualTransition.Storyboard" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Storyboard</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="866f7-152">遷移が行われたときに発生する <see cref="T:System.Windows.Media.Animation.Storyboard" /> を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="866f7-152">Gets or sets the <see cref="T:System.Windows.Media.Animation.Storyboard" /> that occurs when the transition occurs.</span></span></summary>
        <value><span data-ttu-id="866f7-153">遷移が行われたときに発生する <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span><span class="sxs-lookup"><span data-stu-id="866f7-153">The <see cref="T:System.Windows.Media.Animation.Storyboard" /> that occurs when the transition occurs.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="866f7-154">にが<xref:System.Windows.VisualTransition> <xref:System.Windows.Media.Animation.Storyboard> <xref:System.Windows.Media.Animation.Storyboard>含まれている場合、が適用されるたびにが実行されます。 <xref:System.Windows.VisualTransition></span><span class="sxs-lookup"><span data-stu-id="866f7-154">When a <xref:System.Windows.VisualTransition> contains a <xref:System.Windows.Media.Animation.Storyboard>, the <xref:System.Windows.Media.Animation.Storyboard> runs any time the <xref:System.Windows.VisualTransition> is applied.</span></span> <span data-ttu-id="866f7-155">たとえば、ユーザーがマウスを移動したとき<xref:System.Windows.Controls.Button>にの境界線を使用して色を変更する場合は、ボタンの<xref:System.Windows.VisualTransition>背景を変更<xref:System.Windows.Media.Animation.Storyboard>するを持つを作成できます。</span><span class="sxs-lookup"><span data-stu-id="866f7-155">For example, if you want the border of a <xref:System.Windows.Controls.Button> to change colors when the user moves the mouse away from it, you can create a <xref:System.Windows.VisualTransition> that has a <xref:System.Windows.Media.Animation.Storyboard> that changes the button's background.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="866f7-156">次の例では<xref:System.Windows.VisualTransition> 、ユーザーがマウスをコントロールから移動したときに、コントロールの境界線が青に変わり、次に黄色に変わり、次に1.5 秒で黒に変更されたことを指定するを作成します。</span><span class="sxs-lookup"><span data-stu-id="866f7-156">The following example creates a <xref:System.Windows.VisualTransition> that specifies that when the user moves the mouse away from the control, the control's border changes to blue, then to yellow, and then to black in 1.5 seconds.</span></span> <span data-ttu-id="866f7-157">全体の例については、「 [ControlTemplate を作成して既存のコントロールの外観をカスタマイズ](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)する」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="866f7-157">For the entire example, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  
  
 [!code-xaml[VSMButtonTemplate#8](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/skinnedbutton.xaml#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="To">
      <MemberSignature Language="C#" Value="public string To { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string To" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualTransition.To" />
      <MemberSignature Language="VB.NET" Value="Public Property To As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ To { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.To : string with get, set" Usage="System.Windows.VisualTransition.To" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="866f7-158">遷移した後の <see cref="T:System.Windows.VisualState" /> の名前を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="866f7-158">Gets or sets the name of the <see cref="T:System.Windows.VisualState" /> to transition to.</span></span></summary>
        <value><span data-ttu-id="866f7-159">遷移先の <see cref="T:System.Windows.VisualState" /> の名前。</span><span class="sxs-lookup"><span data-stu-id="866f7-159">The name of the <see cref="T:System.Windows.VisualState" /> to transition to.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="866f7-160"><xref:System.Windows.VisualTransition.To%2A>プロパティは省略可能です。</span><span class="sxs-lookup"><span data-stu-id="866f7-160">The <xref:System.Windows.VisualTransition.To%2A> property is optional.</span></span> <span data-ttu-id="866f7-161">は<xref:System.Windows.VisualTransition>特定の状態にのみ適用されるように制限できます。また、コントロールが状態間を遷移するたびに適用することもできます。</span><span class="sxs-lookup"><span data-stu-id="866f7-161">A <xref:System.Windows.VisualTransition> can be restricted to apply to only certain states or it can be applied any time the control transitions between states.</span></span> <span data-ttu-id="866f7-162"><xref:System.Windows.VisualTransition>が適用されるタイミングを制限するに<xref:System.Windows.VisualTransition.To%2A>は<xref:System.Windows.VisualTransition.From%2A> 、プロパティとプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="866f7-162">You restrict when a <xref:System.Windows.VisualTransition> is applied by setting the <xref:System.Windows.VisualTransition.To%2A> and <xref:System.Windows.VisualTransition.From%2A> properties.</span></span> <span data-ttu-id="866f7-163">次の表では、制限が最も厳しいレベルから最も緩いレベルまでを一覧にして示しています。</span><span class="sxs-lookup"><span data-stu-id="866f7-163">The following table describes the levels of restriction from most restrictive to least restrictive.</span></span>  
  
|<span data-ttu-id="866f7-164">制限の種類</span><span class="sxs-lookup"><span data-stu-id="866f7-164">Type of restriction</span></span>|<span data-ttu-id="866f7-165">からの値</span><span class="sxs-lookup"><span data-stu-id="866f7-165">Value of From</span></span>|<span data-ttu-id="866f7-166">の値</span><span class="sxs-lookup"><span data-stu-id="866f7-166">Value of To</span></span>|  
|-------------------------|-------------------|-----------------|  
|<span data-ttu-id="866f7-167">指定した状態から別の指定した状態まで</span><span class="sxs-lookup"><span data-stu-id="866f7-167">From a specified state to another specified state</span></span>|<span data-ttu-id="866f7-168">の名前<xref:System.Windows.VisualState></span><span class="sxs-lookup"><span data-stu-id="866f7-168">The name of a <xref:System.Windows.VisualState></span></span>|<span data-ttu-id="866f7-169">の名前<xref:System.Windows.VisualState></span><span class="sxs-lookup"><span data-stu-id="866f7-169">The name of a <xref:System.Windows.VisualState></span></span>|  
|<span data-ttu-id="866f7-170">任意の状態から指定された状態まで</span><span class="sxs-lookup"><span data-stu-id="866f7-170">From any state to a specified state</span></span>|<span data-ttu-id="866f7-171">未設定</span><span class="sxs-lookup"><span data-stu-id="866f7-171">Not set</span></span>|<span data-ttu-id="866f7-172">の名前<xref:System.Windows.VisualState></span><span class="sxs-lookup"><span data-stu-id="866f7-172">The name of a <xref:System.Windows.VisualState></span></span>|  
|<span data-ttu-id="866f7-173">指定した状態から任意の状態まで</span><span class="sxs-lookup"><span data-stu-id="866f7-173">From a specified state to any state</span></span>|<span data-ttu-id="866f7-174">の名前<xref:System.Windows.VisualState></span><span class="sxs-lookup"><span data-stu-id="866f7-174">The name of a <xref:System.Windows.VisualState></span></span>|<span data-ttu-id="866f7-175">未設定</span><span class="sxs-lookup"><span data-stu-id="866f7-175">Not set</span></span>|  
|<span data-ttu-id="866f7-176">任意の状態から他の状態へ</span><span class="sxs-lookup"><span data-stu-id="866f7-176">From any state to any other state</span></span>|<span data-ttu-id="866f7-177">未設定</span><span class="sxs-lookup"><span data-stu-id="866f7-177">Not set</span></span>|<span data-ttu-id="866f7-178">未設定</span><span class="sxs-lookup"><span data-stu-id="866f7-178">Not set</span></span>|  
  
 <span data-ttu-id="866f7-179">同じ状態を参照<xref:System.Windows.VisualTransition>している<xref:System.Windows.VisualStateGroup>内に複数のオブジェクトを含めることができますが、これらは、前の表で指定した順序で使用されます。</span><span class="sxs-lookup"><span data-stu-id="866f7-179">You can have multiple <xref:System.Windows.VisualTransition> objects in a <xref:System.Windows.VisualStateGroup> that refer to the same state, but they will be used in the order that the previous table specifies.</span></span>  
  
 <span data-ttu-id="866f7-180">この動作を変更するには、から<xref:System.Windows.VisualStateManager>継承する新しいクラスを作成し、 <xref:System.Windows.VisualStateManager.GoToStateCore%2A>メソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="866f7-180">You can change this behavior by creating a new class that inherits from <xref:System.Windows.VisualStateManager> and overriding the <xref:System.Windows.VisualStateManager.GoToStateCore%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="866f7-181">次の例では<xref:System.Windows.VisualTransition> 、2つのオブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="866f7-181">The following example creates two <xref:System.Windows.VisualTransition> objects.</span></span> <span data-ttu-id="866f7-182">`Pressed`コントロールが<xref:System.Windows.VisualTransition.To%2A>状態から`MouseOver`状態に遷移すると、との<xref:System.Windows.VisualTransition>両方<xref:System.Windows.VisualTransition.From%2A>を持つが使用されます。</span><span class="sxs-lookup"><span data-stu-id="866f7-182">When the control transitions from the `Pressed` state to the `MouseOver` state, the <xref:System.Windows.VisualTransition> that has both <xref:System.Windows.VisualTransition.From%2A> and <xref:System.Windows.VisualTransition.To%2A> set is used.</span></span> <span data-ttu-id="866f7-183">コントロールが `Pressed` ではない状態から `MouseOver` 状態に遷移するときには、別の状態を使用します。</span><span class="sxs-lookup"><span data-stu-id="866f7-183">When the control transitions from a state that is not `Pressed` to the `MouseOver` state, the other state is used.</span></span>  
  
 [!code-xaml[VSMButtonTemplate#7](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/skinnedbutton.xaml#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
