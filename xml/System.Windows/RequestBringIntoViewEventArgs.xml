<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="RequestBringIntoViewEventArgs.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac54d1a9c14ed9171240e8980e9efc8a43107b009dc.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4d1a9c14ed9171240e8980e9efc8a43107b009dc</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.RequestBringIntoViewEventArgs">
          <source>Provides data for the <ph id="ph1">&lt;see cref="E:System.Windows.FrameworkElement.RequestBringIntoView" /&gt;</ph> routed event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.FrameworkElement.RequestBringIntoView" /&gt;</ph> ルーティング イベントのデータを提供します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.RequestBringIntoViewEventArgs">
          <source>The <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType&gt;</ph> event is raised by elements when you call <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.BringIntoView%2A&gt;</ph> from that element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType&gt;</ph>を呼び出すと、要素によってイベントが生成<ph id="ph2">&lt;xref:System.Windows.FrameworkElement.BringIntoView%2A&gt;</ph>その要素から。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.RequestBringIntoViewEventArgs">
          <source>Generally, this routed event is not handled by the source.</source>
          <target state="translated">一般に、このルーティングされたイベントは、ソースでは処理されません。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.RequestBringIntoViewEventArgs">
          <source>Intermediate classes that do not implement scrollable regions or similar concepts that clip content should not handle the event.</source>
          <target state="translated">スクロール可能な領域を実装していない中間クラスまたはコンテンツをクリップする類似する概念は、イベントを処理する必要があります。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.RequestBringIntoViewEventArgs">
          <source>The event should be permitted to bubble to parent elements that implement a scrollable region or otherwise specify <ph id="ph1">&lt;xref:System.Windows.UIElement.ClipToBounds%2A&gt;</ph> <ph id="ph2">`false`</ph>.</source>
          <target state="translated">イベントは、スクロール可能な領域を実装するか、それ以外の場合を指定する親要素を許可する必要があります<ph id="ph1">&lt;xref:System.Windows.UIElement.ClipToBounds%2A&gt;</ph><ph id="ph2">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.RequestBringIntoViewEventArgs">
          <source>Such parent elements typically provide class handling for the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.RequestBringIntoView&gt;</ph> event, which is where the necessary rendering logic occurs whenever a given element requests that it be made viewable within the clipping region.</source>
          <target state="translated">このような親要素は、通常のクラス処理を提供、<ph id="ph1">&lt;xref:System.Windows.FrameworkElement.RequestBringIntoView&gt;</ph>は、必要なレンダリング ロジックが指定された要素は、それに表示可能なクリップ領域内を要求したときに発生するイベントです。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.RequestBringIntoViewEventArgs">
          <source>Content elements can cause the event to be raised by their content hosts (through calling <ph id="ph1">&lt;xref:System.Windows.FrameworkContentElement.BringIntoView%2A&gt;</ph> and raising <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType&gt;</ph> from the content host).</source>
          <target state="translated">コンテンツの要素には、イベントがそのコンテンツ ホストにより発生する可能性があります (呼び出しを介して<ph id="ph1">&lt;xref:System.Windows.FrameworkContentElement.BringIntoView%2A&gt;</ph>と発生<ph id="ph2">&lt;xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType&gt;</ph>コンテンツ ホストから)。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.RequestBringIntoViewEventArgs">
          <source>Similarly, you can request logical tree elements to be brought into view with the helper method <ph id="ph1">&lt;xref:System.Windows.LogicalTreeHelper.BringIntoView%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">同様に、要求内に収めるビュー、ヘルパー メソッドを使用する論理ツリー要素<ph id="ph1">&lt;xref:System.Windows.LogicalTreeHelper.BringIntoView%2A?displayProperty=nameWithType&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.RequestBringIntoViewEventArgs">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Controls.ListBox&gt;</ph> implements a related but different method <ph id="ph2">&lt;xref:System.Windows.Controls.ListBox.ScrollIntoView%2A&gt;</ph>.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Windows.Controls.ListBox&gt;</ph>関連ですが異なるメソッドを実装する<ph id="ph2">&lt;xref:System.Windows.Controls.ListBox.ScrollIntoView%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Windows.RequestBringIntoViewEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
          <source>The generic handler to call in a type-specific way.</source>
          <target state="translated">型固有の方法で呼び出しを行うジェネリック ハンドラー。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Windows.RequestBringIntoViewEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
          <source>The target to call the handler on.</source>
          <target state="translated">ハンドラーを呼び出す対象。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Windows.RequestBringIntoViewEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
          <source>Invokes event handlers in a type-specific way, which can increase event system efficiency.</source>
          <target state="translated">型固有の方法でイベント ハンドラーを呼び出します。これにより、イベント システムの効率を高めることができます。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.RequestBringIntoViewEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
          <source>This implementation casts the generic handler as a <ph id="ph1">&lt;xref:System.Windows.RequestBringIntoViewEventHandler&gt;</ph> and then invokes it.</source>
          <target state="translated">この実装は、ジェネリック ハンドラーをキャスト、<ph id="ph1">&lt;xref:System.Windows.RequestBringIntoViewEventHandler&gt;</ph>してそれを呼び出します。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.RequestBringIntoViewEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
          <source>For details on this implementation pattern and the reasons for it, see <ph id="ph1">&lt;xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A&gt;</ph> and <bpt id="p1">[</bpt>Routed Events Overview<ept id="p1">](~/docs/framework/wpf/advanced/routed-events-overview.md)</ept>.</source>
          <target state="translated">この実装パターンとその理由の詳細については、次を参照してください。<ph id="ph1">&lt;xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A&gt;</ph>と<bpt id="p1">[</bpt>ルーティング イベントの概要<ept id="p1">](~/docs/framework/wpf/advanced/routed-events-overview.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="P:System.Windows.RequestBringIntoViewEventArgs.TargetObject">
          <source>Gets the object that should be made visible in response to the event.</source>
          <target state="translated">イベントに応じて表示する必要があるオブジェクトを取得します。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.RequestBringIntoViewEventArgs.TargetObject">
          <source>The object that called <ph id="ph1">&lt;see cref="M:System.Windows.FrameworkElement.BringIntoView" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Windows.FrameworkElement.BringIntoView" /&gt;</ph> を呼び出したオブジェクト。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.RequestBringIntoViewEventArgs.TargetObject">
          <source>This object is typically the same object as returned by <ph id="ph1">&lt;xref:System.Windows.RoutedEventArgs.Source%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">このオブジェクトは通常、同じオブジェクトによって返される<ph id="ph1">&lt;xref:System.Windows.RoutedEventArgs.Source%2A?displayProperty=nameWithType&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="P:System.Windows.RequestBringIntoViewEventArgs.TargetRect">
          <source>Gets the rectangular region in the object's coordinate space which should be made visible.</source>
          <target state="translated">オブジェクトの座標空間における、表示する必要がある四角形の領域を取得します。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.RequestBringIntoViewEventArgs.TargetRect">
          <source>The requested rectangular space.</source>
          <target state="translated">要求された四角形の領域。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.RequestBringIntoViewEventArgs.TargetRect">
          <source>If the signature of <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.BringIntoView%2A&gt;</ph> that was invoked to raise the event didn't specify a target rectangle, this property may be the <ph id="ph2">&lt;xref:System.Windows.Rect.Empty%2A&gt;</ph> value of the <ph id="ph3">&lt;xref:System.Windows.Rect&gt;</ph> structure.</source>
          <target state="translated">場合の署名<ph id="ph1">&lt;xref:System.Windows.FrameworkElement.BringIntoView%2A&gt;</ph>が呼び出されたイベントを発生させる対象の四角形を指定して、このプロパティがあります、<ph id="ph2">&lt;xref:System.Windows.Rect.Empty%2A&gt;</ph>の値、<ph id="ph3">&lt;xref:System.Windows.Rect&gt;</ph>構造体。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>