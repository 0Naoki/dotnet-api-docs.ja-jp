<Type Name="DataTrigger" FullName="System.Windows.DataTrigger">
  <Metadata><Meta Name="ms.openlocfilehash" Value="467761a27a702ddf648fe785b4231edb79a206de" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70705687" /></Metadata><TypeSignature Language="C#" Value="public class DataTrigger : System.Windows.TriggerBase, System.Windows.Markup.IAddChild" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataTrigger extends System.Windows.TriggerBase implements class System.Windows.Markup.IAddChild" />
  <TypeSignature Language="DocId" Value="T:System.Windows.DataTrigger" />
  <TypeSignature Language="VB.NET" Value="Public Class DataTrigger&#xA;Inherits TriggerBase&#xA;Implements IAddChild" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataTrigger : System::Windows::TriggerBase, System::Windows::Markup::IAddChild" />
  <TypeSignature Language="F#" Value="type DataTrigger = class&#xA;    inherit TriggerBase&#xA;    interface IAddChild" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.TriggerBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Markup.IAddChild</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Setters")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Windows.Markup.XamlSetMarkupExtension("ReceiveMarkupExtension")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>バインドされたデータが指定した条件を満たしたときに、プロパティ値を適用するかアクションを実行するトリガーを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Style>、 <xref:System.Windows.Controls.ControlTemplate>、および<xref:System.Windows.DataTemplate>にはすべて triggers コレクションがあります。 を<xref:System.Windows.DataTrigger>使用すると、データオブジェクトのプロパティ値が指定<xref:System.Windows.Condition.Value%2A>したに一致する場合に、プロパティ値を設定できます。 たとえば、オブジェクトの`Employee`一覧を表示している場合は、 `Employee's`現在の出席に応じて、前景色を異なるものにすることができます。 (たとえば、 `Employees`現在休暇中のユーザーは紫色の前景で表示されます)。場合によっては、コンバーターを作成したり、 <xref:System.Windows.Controls.DataTemplateSelector>を使用したりする方が適している場合があります。 詳細については、「[データテンプレートの概要](~/docs/framework/wpf/data/data-templating-overview.md)」を参照してください。  
  
 データトリガーが意味を持つよう<xref:System.Windows.DataTrigger.Binding%2A>に<xref:System.Windows.DataTrigger.Value%2A>するには<xref:System.Windows.DataTrigger> 、のプロパティとプロパティの両方を指定する必要があることに注意してください。 プロパティの一方または両方が指定されていない場合は、例外がスローされます。  
  
 オブジェクトのプロパティは、 <xref:System.Windows.DataTrigger.Setters%2A> オブジェクトのみで構成できます。 <xref:System.Windows.Setter>  <xref:System.Windows.DataTrigger> オブジェクトに子を<xref:System.Windows.Setter>追加すると、 <xref:System.Windows.SetterBaseCollection> <xref:System.Windows.DataTrigger>オブジェクトのに暗黙的に子が追加されます。 <xref:System.Windows.DataTrigger> <xref:System.Windows.EventSetter>オブジェクトはサポートされていません。で<xref:System.Windows.Style.Setters%2A?displayProperty=nameWithType>は<xref:System.Windows.EventSetter> 、オブジェクトのみがサポートされます。  
  
   
  
## Examples  
 次の例では、 <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> <xref:System.Windows.Controls.ListBox>のは、 *place*オブジェクト** のと<xref:System.Collections.ObjectModel.ObservableCollection%601>いう場所にバインドされています。 *配置*オブジェクトには、プロパティの*名前*と*状態*があります。  
  
 各<xref:System.Windows.Controls.ListBoxItem>には<xref:System.Windows.Controls.ListBox> 、 *Place*オブジェクトが表示されます。 この<xref:System.Windows.Style>例のは、それぞれ<xref:System.Windows.Controls.ListBoxItem>に適用されます。  
  
 は<xref:System.Windows.DataTrigger> 、 *Place*データ項目の<xref:System.Windows.Controls.ListBoxItem> *状態*が "WA" の場合に、対応するの前景が赤に設定されるように指定されています。  
  
 [!code-xaml[DataTrigger#1](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTrigger/CSharp/Window1.xaml#1)]  
  
 次の例では<xref:System.Windows.DataTrigger> <xref:System.Windows.Media.Animation.BeginStoryboard> 、バインドされたデータが指定し<xref:System.Windows.Media.Animation.Storyboard>た条件を満たす場合に、、アクション、およびを使用してプロパティをアニメーション化する方法を示します。 この例では、 <xref:System.Windows.Controls.ListBox>コントロールにインベントリ情報を表示します。 を<xref:System.Windows.DataTrigger>使用して、在庫<xref:System.Windows.UIElement.Opacity%2A>切れの<xref:System.Windows.Controls.ListBoxItem>書籍を含むすべてのをアニメーション化します。  
  
 [!code-xaml[AnimatePropertyStoryboards#GraphicsMMDataTriggerStoryboardWholePage](~/samples/snippets/xaml/VS_Snippets_Wpf/AnimatePropertyStoryboards/XAML/DataTriggerStoryboardExample.xaml#graphicsmmdatatriggerstoryboardwholepage)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Trigger" />
    <altmember cref="T:System.Windows.MultiDataTrigger" />
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160009">データテンプレートサンプルの概要</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataTrigger ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataTrigger.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataTrigger();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.DataTrigger" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Binding">
      <MemberSignature Language="C#" Value="public System.Windows.Data.BindingBase Binding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.BindingBase Binding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.DataTrigger.Binding" />
      <MemberSignature Language="VB.NET" Value="Public Property Binding As BindingBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::BindingBase ^ Binding { System::Windows::Data::BindingBase ^ get(); void set(System::Windows::Data::BindingBase ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Binding : System.Windows.Data.BindingBase with get, set" Usage="System.Windows.DataTrigger.Binding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ オブジェクトのプロパティ値を作成するバインドを取得または設定します。</summary>
        <value>既定値は <see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このバインディングによって生成されるプロパティ値は、 <xref:System.Windows.DataTrigger.Value%2A>プロパティによって指定された値と比較されます。 この値は、可能であれば、バインディングの値の型に最初に変換され、その後、 `Object.Equals`メソッドを使用して2つの値が比較されます。 2つの値が等しい場合は、関連付けられているアクションまたは setter が適用されます。  
  
 バインディングを作成し、 <xref:System.Windows.Data.Binding.Path%2A>プロパティを使用して、特定のオブジェクト (バインディングソースオブジェクト) のプロパティにバインドします。 たとえば、*タスク*の*Priority*プロパティにバインドできます。 詳しくは、「[データ バインディングの概要](~/docs/framework/wpf/data/data-binding-overview.md)」をご覧ください。  
  
 データトリガーが意味を持つよう<xref:System.Windows.DataTrigger.Binding%2A>に<xref:System.Windows.DataTrigger.Value%2A>するには<xref:System.Windows.DataTrigger> 、のプロパティとプロパティの両方を指定する必要があることに注意してください。 プロパティの一方または両方が設定されていない場合は、例外がスローされます。  
  
<a name="xamlAttributeUsage_PriorityBinding"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
  
```  
<object property="{Binding  declaration}"/>  
```  
  
<a name="xamlPropertyElementUsage_Binding"></a>   
## <a name="xaml-property-element-usage"></a>XAML プロパティ要素の使用  
  
```  
<object>  
  <object.Binding>  
    <Binding …/>  
  </object.Binding>  
</object>  
```  
  
<a name="xamlValues_PriorityBinding"></a>   
## <a name="xaml-values"></a>XAML 値  
 *declaration*  
 コンマ (,) で区切られた0個以上の属性代入句。 詳細については、「[バインドマークアップ拡張機能](~/docs/framework/wpf/advanced/binding-markup-extension.md)」を参照してください。  
  
   
  
## Examples  
 次の例では、 <xref:System.Windows.DataTrigger> `TaskType`プロパティが<xref:System.Windows.Controls.Border.BorderBrush%2A> `border` `Yellow` の場合、はという名前の要素のをに `TaskType.Home` 設定します。  
  
 [!code-xaml[DataTemplatingIntro#DT](~/samples/snippets/xaml/VS_Snippets_Wpf/DataTemplatingIntro/xaml/window1.xaml#dt)]  
[!code-xaml[DataTemplatingIntro#DataTrigger](~/samples/snippets/xaml/VS_Snippets_Wpf/DataTemplatingIntro/xaml/window1.xaml#datatrigger)]  
[!code-xaml[DataTemplatingIntro#AddingMore2](~/samples/snippets/xaml/VS_Snippets_Wpf/DataTemplatingIntro/xaml/window1.xaml#addingmore2)]  
  
 この例の詳細については、「[データテンプレートの概要](~/docs/framework/wpf/data/data-templating-overview.md)」を参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.DataTrigger.Value" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160009">データテンプレートサンプルの概要</related>
      </Docs>
    </Member>
    <Member MemberName="ReceiveMarkupExtension">
      <MemberSignature Language="C#" Value="public static void ReceiveMarkupExtension (object targetObject, System.Windows.Markup.XamlSetMarkupExtensionEventArgs eventArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReceiveMarkupExtension(object targetObject, class System.Windows.Markup.XamlSetMarkupExtensionEventArgs eventArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataTrigger.ReceiveMarkupExtension(System.Object,System.Windows.Markup.XamlSetMarkupExtensionEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ReceiveMarkupExtension (targetObject As Object, eventArgs As XamlSetMarkupExtensionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ReceiveMarkupExtension(System::Object ^ targetObject, System::Windows::Markup::XamlSetMarkupExtensionEventArgs ^ eventArgs);" />
      <MemberSignature Language="F#" Value="static member ReceiveMarkupExtension : obj * System.Windows.Markup.XamlSetMarkupExtensionEventArgs -&gt; unit" Usage="System.Windows.DataTrigger.ReceiveMarkupExtension (targetObject, eventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetObject" Type="System.Object" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="eventArgs" Type="System.Windows.Markup.XamlSetMarkupExtensionEventArgs" Index="1" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="targetObject">マークアップ拡張機能によって値が設定されるオブジェクト。</param>
        <param name="eventArgs">マークアップ拡張機能の処理に関連したデータ。</param>
        <summary>マークアップ拡張機能によって <see cref="T:System.Windows.DataTrigger" /> オブジェクトのプロパティの値が設定された場合の処理を行います。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 これは、クラスレベルで適用さ<xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute>れる属性によって参照されるメソッドです。つまり、このメソッドは、マーク<xref:System.Windows.DataTrigger>アップ拡張機能を使用しての値を設定しようとするすべての試行を処理します。 通常、このメソッドを直接呼び出すことはありません。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Markup.XamlSetMarkupExtensionAttribute" />
        <altmember cref="T:System.Windows.Markup.XamlSetMarkupExtensionEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="Setters">
      <MemberSignature Language="C#" Value="public System.Windows.SetterBaseCollection Setters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.SetterBaseCollection Setters" />
      <MemberSignature Language="DocId" Value="P:System.Windows.DataTrigger.Setters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Setters As SetterBaseCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::SetterBaseCollection ^ Setters { System::Windows::SetterBaseCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Setters : System.Windows.SetterBaseCollection" Usage="System.Windows.DataTrigger.Setters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.SetterBaseCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ項目が指定した条件を満たしたときに適用するプロパティ値を表す <see cref="T:System.Windows.Setter" /> オブジェクトのコレクションを取得します。</summary>
        <value>既定値は <see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlPropertyElementUsage_Setters"></a>   
## <a name="xaml-property-element-usage"></a>XAML プロパティ要素の使用  
  
```  
<object>  
  <object.Setters>  
    ZeroOrMoreSetters  
  </object.Setters>  
</object>  
```  
  
<a name="xamlValues_Setters"></a>   
## <a name="xaml-values"></a>XAML 値  
 *ZeroOrMoreSetters*  
 0個以上<xref:System.Windows.Setter>のオブジェクト。  
  
 を<xref:System.Windows.DataTrigger>使用すると、データ項目が指定<xref:System.Windows.Setter>した条件を満たす場合に、アクションを開始したり、を使用してプロパティ値を適用したりできます。  
  
 同じプロパティを同じ setter コレクション内に複数設定する setter がある場合は、last と宣言された setter が使用されます。  
  
 オブジェクトのプロパティは、 <xref:System.Windows.DataTrigger.Setters%2A> オブジェクトのみで構成できます。 <xref:System.Windows.Setter>  <xref:System.Windows.DataTrigger> オブジェクトに子を<xref:System.Windows.Setter>追加すると、 <xref:System.Windows.SetterBaseCollection> <xref:System.Windows.DataTrigger>オブジェクトのに暗黙的に子が追加されます。 <xref:System.Windows.DataTrigger> <xref:System.Windows.EventSetter>オブジェクトはサポートされていません。で<xref:System.Windows.Style.Setters%2A?displayProperty=nameWithType>は<xref:System.Windows.EventSetter> 、オブジェクトのみがサポートされます。  
  
   
  
## Examples  
 次の例では<xref:System.Windows.DataTrigger> 、 <xref:System.Windows.DataTemplate>で定義されている2つのオブジェクトを示します。 は<xref:System.Windows.DataTemplate> 、 *AuctionItem*データオブジェクト (この例では示されていません) に適用されます。これには、プロパティの*特徴*があります。  
  
 最初<xref:System.Windows.DataTrigger>の値が指定されています。これは、データオブジェクトの*色*が "*特殊特徴*" に設定`DodgerBlue`されている場合、その項目には海軍のタイトルの背景が表示されることを示します。 データオブジェクトの [蛍光*機能*] の値が [*強調表示*] の<xref:System.Windows.DataTrigger>場合は、2番目のがアクティブになり、項目はオレンジ色の枠線付きで表示されます。  
  
 完全なサンプルについては、「[データバインディングのデモ](https://go.microsoft.com/fwlink/?LinkID=163703)」を参照してください。  
  
 [!code-xaml[DataBindingLab#AuctionItemsDataTriggers](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/DataBindingLabApp.xaml#auctionitemsdatatriggers)]  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160009">データテンプレートサンプルの概要</related>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddChild">
      <MemberSignature Language="C#" Value="void IAddChild.AddChild (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddChild(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataTrigger.System#Windows#Markup#IAddChild#AddChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub AddChild (value As Object) Implements IAddChild.AddChild" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddChild(System::Object ^ value) = System::Windows::Markup::IAddChild::AddChild;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddChild(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">追加する子オブジェクト。</param>
        <summary>子オブジェクトを追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Windows.DataTrigger> のインスタンスが <xref:System.Windows.Markup.IAddChild> インターフェイスにキャストされる場合のみ、使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddText">
      <MemberSignature Language="C#" Value="void IAddChild.AddText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataTrigger.System#Windows#Markup#IAddChild#AddText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub AddText (text As String) Implements IAddChild.AddText" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddText(System::String ^ text) = System::Windows::Markup::IAddChild::AddText;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddText(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">オブジェクトに追加するテキスト。</param>
        <summary>オブジェクトにノードのテキスト コンテンツを追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Windows.DataTrigger> のインスタンスが <xref:System.Windows.Markup.IAddChild> インターフェイスにキャストされる場合のみ、使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Windows.DataTrigger.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : obj with get, set" Usage="System.Windows.DataTrigger.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Markup.DependsOn("Binding")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ オブジェクトのプロパティ値と比較する値を取得または設定します。</summary>
        <value>既定値は <see langword="null" /> です。 「例外」も参照してください。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlPropertyElementUsage_Value"></a>   
## <a name="xaml-property-element-usage"></a>XAML プロパティ要素の使用  
  
```  
<object>  
  <object.Value>  
    Value  
  </object.Value>  
</object>  
```  
  
 この値は、 <xref:System.Windows.DataTrigger.Binding%2A> <xref:System.Windows.DataTrigger>のプロパティによって生成されるプロパティ値と比較されます。 この比較は参照の等価性チェックです。 2つの値が等しい場合は、関連付けられているアクションまたは setter が適用されます。  
  
 データトリガーが意味を持つよう<xref:System.Windows.DataTrigger.Binding%2A>に<xref:System.Windows.DataTrigger.Value%2A>するには<xref:System.Windows.DataTrigger> 、のプロパティとプロパティの両方を指定する必要があることに注意してください。 一方または両方のプロパティが設定されていない場合は、例外がスローされます。  
  
   
  
## Examples  
 次の例では、 <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> <xref:System.Windows.Controls.ListBox>のは、 *place*オブジェクト** のと<xref:System.Collections.ObjectModel.ObservableCollection%601>いう場所にバインドされています。 *配置*オブジェクトには、プロパティの*名前*と*状態*があります。  
  
 各<xref:System.Windows.Controls.ListBoxItem>には<xref:System.Windows.Controls.ListBox> 、 *Place*オブジェクトが表示されます。 この<xref:System.Windows.Style>例のは、それぞれ<xref:System.Windows.Controls.ListBoxItem>に適用されます。  
  
 は<xref:System.Windows.DataTrigger> 、 *Place*データ項目の<xref:System.Windows.Controls.ListBoxItem> *状態*が "WA" の場合に、対応するの前景が赤に設定されるように指定されています。  
  
 [!code-xaml[DataTrigger#1](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTrigger/CSharp/Window1.xaml#1)]  
  
 次の例は、 <xref:System.Windows.DataTrigger> <xref:System.Windows.DataTemplate>で定義されている2つのを示しています。 は<xref:System.Windows.DataTemplate> 、 *AuctionItem*データオブジェクト (この例では示されていません) に適用されます。これには、プロパティの*特徴*があります。 完全な例については、「[データバインディングのデモ](https://go.microsoft.com/fwlink/?LinkID=163703)」を参照してください。  
  
 最初<xref:System.Windows.DataTrigger>の値が指定されています。これは、データオブジェクトの*色*が "*特殊特徴*" である場合、その項目は DodgerBlue の背景と海軍のタイトルで表示されます。 データオブジェクトの [蛍光*機能*] の値が [*強調表示*] の<xref:System.Windows.DataTrigger>場合は、2番目のがアクティブになり、項目はオレンジ色の枠線付きで表示されます。  
  
 [!code-xaml[DataBindingLab#AuctionItemsDataTriggers](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/DataBindingLabApp.xaml#auctionitemsdatatriggers)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">式はサポートされていません。 バインディングはサポートされていません。</exception>
        <altmember cref="P:System.Windows.DataTrigger.Binding" />
        <altmember cref="P:System.Windows.DataTrigger.Setters" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160009">データテンプレートサンプルの概要</related>
      </Docs>
    </Member>
  </Members>
</Type>
