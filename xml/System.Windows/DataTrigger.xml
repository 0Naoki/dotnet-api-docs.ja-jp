<Type Name="DataTrigger" FullName="System.Windows.DataTrigger">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6a96b6f025b0dde64c8590ed579c01d92bb7d15c" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57932326" /></Metadata><TypeSignature Language="C#" Value="public class DataTrigger : System.Windows.TriggerBase, System.Windows.Markup.IAddChild" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataTrigger extends System.Windows.TriggerBase implements class System.Windows.Markup.IAddChild" />
  <TypeSignature Language="DocId" Value="T:System.Windows.DataTrigger" />
  <TypeSignature Language="VB.NET" Value="Public Class DataTrigger&#xA;Inherits TriggerBase&#xA;Implements IAddChild" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataTrigger : System::Windows::TriggerBase, System::Windows::Markup::IAddChild" />
  <TypeSignature Language="F#" Value="type DataTrigger = class&#xA;    inherit TriggerBase&#xA;    interface IAddChild" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.TriggerBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Markup.IAddChild</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Setters")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Windows.Markup.XamlSetMarkupExtension("ReceiveMarkupExtension")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>バインドされたデータが指定した条件を満たしたときに、プロパティ値を適用するかアクションを実行するトリガーを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Style>、 <xref:System.Windows.Controls.ControlTemplate>、および<xref:System.Windows.DataTemplate>すべて triggers コレクションであります。 A<xref:System.Windows.DataTrigger>データ オブジェクトのプロパティの値に一致すると、指定されたプロパティ値を設定することができます<xref:System.Windows.Condition.Value%2A>します。 一覧を表示している場合など、`Employee`オブジェクトの場合、各に基づいて、別にする前景色をする可能性があります`Employee's`現在出席します。 (たとえば、`Employees`休暇中は現在は、紫色の前景で表示されます)。一部のシナリオで使用するか、コンバーターを作成する方が適切な場合があります、<xref:System.Windows.Controls.DataTemplateSelector>します。 詳細については、次を参照してください。、[データ テンプレートの概要](~/docs/framework/wpf/data/data-templating-overview.md)します。  
  
 両方を指定する必要がありますに注意してください、<xref:System.Windows.DataTrigger.Binding%2A>と<xref:System.Windows.DataTrigger.Value%2A>プロパティを<xref:System.Windows.DataTrigger>に意味のあるデータ トリガーします。 1 つまたは両方のプロパティが指定されていない場合、例外がスローされます。  
  
 <xref:System.Windows.DataTrigger.Setters%2A>のプロパティを<xref:System.Windows.DataTrigger>オブジェクトから成るのみ<xref:System.Windows.Setter>オブジェクト。 追加、<xref:System.Windows.Setter>に子を<xref:System.Windows.DataTrigger>オブジェクトが暗黙的に追加して、<xref:System.Windows.SetterBaseCollection>の<xref:System.Windows.DataTrigger>オブジェクト。 <xref:System.Windows.EventSetter> オブジェクトはサポートされていません。のみ<xref:System.Windows.Style.Setters%2A?displayProperty=nameWithType>サポート<xref:System.Windows.EventSetter>オブジェクト。  
  
   
  
## Examples  
 次の例では、<xref:System.Windows.Controls.ItemsControl.ItemsSource%2A>の<xref:System.Windows.Controls.ListBox>にバインドされた*場所*、<xref:System.Collections.ObjectModel.ObservableCollection%601>の*場所*オブジェクト。 *場所*オブジェクト プロパティがある*名前*と*状態*します。  
  
 各<xref:System.Windows.Controls.ListBoxItem>の<xref:System.Windows.Controls.ListBox>が表示されます、*場所*オブジェクト。 <xref:System.Windows.Style>の例では、各に適用される<xref:System.Windows.Controls.ListBoxItem>します。  
  
 <xref:System.Windows.DataTrigger>が指定されてように場合、*状態*の*場所*データ項目が"WA"の対応するフォア グラウンド<xref:System.Windows.Controls.ListBoxItem>は赤に設定します。  
  
 [!code-xaml[DataTrigger#1](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTrigger/CSharp/Window1.xaml#1)]  
  
 次の例は、使用する方法を示します、 <xref:System.Windows.DataTrigger>、<xref:System.Windows.Media.Animation.BeginStoryboard>アクション、および<xref:System.Windows.Media.Animation.Storyboard>バインドされたデータが、指定した条件を満たしている場合は、プロパティをアニメーション化します。 例では、インベントリの情報が表示されます、<xref:System.Windows.Controls.ListBox>コントロール。 使用して、<xref:System.Windows.DataTrigger>をアニメーション化する、<xref:System.Windows.UIElement.Opacity%2A>のすべて<xref:System.Windows.Controls.ListBoxItem>在庫の書籍を格納しています。  
  
 [!code-xaml[AnimatePropertyStoryboards#GraphicsMMDataTriggerStoryboardWholePage](~/samples/snippets/xaml/VS_Snippets_Wpf/AnimatePropertyStoryboards/XAML/DataTriggerStoryboardExample.xaml#graphicsmmdatatriggerstoryboardwholepage)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Trigger" />
    <altmember cref="T:System.Windows.MultiDataTrigger" />
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160009">データ テンプレート サンプルの概要</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataTrigger ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataTrigger.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataTrigger();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.DataTrigger" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Binding">
      <MemberSignature Language="C#" Value="public System.Windows.Data.BindingBase Binding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.BindingBase Binding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.DataTrigger.Binding" />
      <MemberSignature Language="VB.NET" Value="Public Property Binding As BindingBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::BindingBase ^ Binding { System::Windows::Data::BindingBase ^ get(); void set(System::Windows::Data::BindingBase ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Binding : System.Windows.Data.BindingBase with get, set" Usage="System.Windows.DataTrigger.Binding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ オブジェクトのプロパティ値を作成するバインドを取得または設定します。</summary>
        <value>既定値は <see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このバインディングによって生成されたプロパティの値によって指定された値と比較されます、<xref:System.Windows.DataTrigger.Value%2A>プロパティ。 値は最初、(可能な場合は、バインディングの値の型に変換され、2 つの値が比較を使用し、`Object.Equals`メソッド。 2 つの値が等しい場合は、関連付けられたアクションまたは set アクセス操作子が適用されます。  
  
 バインドを作成して使用する、<xref:System.Windows.Data.Binding.Path%2A>特定のオブジェクト (バインディング ソース オブジェクト) のプロパティにバインドするプロパティ。 バインドする場合など、*優先度*のプロパティを*タスク*します。 詳しくは、「 [データ バインディングの概要](~/docs/framework/wpf/data/data-binding-overview.md)」をご覧ください。  
  
 両方を指定する必要がありますに注意してください、<xref:System.Windows.DataTrigger.Binding%2A>と<xref:System.Windows.DataTrigger.Value%2A>プロパティを<xref:System.Windows.DataTrigger>に意味のあるデータ トリガーします。 1 つまたは両方のプロパティが設定されていない場合は、例外がスローされます。  
  
<a name="xamlAttributeUsage_PriorityBinding"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
  
```  
<object property="{Binding  declaration}"/>  
```  
  
<a name="xamlPropertyElementUsage_Binding"></a>   
## <a name="xaml-property-element-usage"></a>XAML プロパティ要素の使用  
  
```  
<object>  
  <object.Binding>  
    <Binding …/>  
  </object.Binding>  
</object>  
```  
  
<a name="xamlValues_PriorityBinding"></a>   
## <a name="xaml-values"></a>XAML 値  
 *declaration*  
 コンマ (,) で区切られた 0 個以上の属性の割り当て句。 参照してください[バインディング マークアップ拡張機能](~/docs/framework/wpf/advanced/binding-markup-extension.md)詳細についてはします。  
  
   
  
## Examples  
 次の例では、<xref:System.Windows.DataTrigger>設定、<xref:System.Windows.Controls.Border.BorderBrush%2A>という名前の要素の`border`に`Yellow`場合、`TaskType`プロパティは`TaskType.Home`します。  
  
 [!code-xaml[DataTemplatingIntro#DT](~/samples/snippets/xaml/VS_Snippets_Wpf/DataTemplatingIntro/xaml/window1.xaml#dt)]  
[!code-xaml[DataTemplatingIntro#DataTrigger](~/samples/snippets/xaml/VS_Snippets_Wpf/DataTemplatingIntro/xaml/window1.xaml#datatrigger)]  
[!code-xaml[DataTemplatingIntro#AddingMore2](~/samples/snippets/xaml/VS_Snippets_Wpf/DataTemplatingIntro/xaml/window1.xaml#addingmore2)]  
  
 この例の詳細については、次を参照してください。[データ テンプレートの概要](~/docs/framework/wpf/data/data-templating-overview.md)します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.DataTrigger.Value" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160009">データ テンプレート サンプルの概要</related>
      </Docs>
    </Member>
    <Member MemberName="ReceiveMarkupExtension">
      <MemberSignature Language="C#" Value="public static void ReceiveMarkupExtension (object targetObject, System.Windows.Markup.XamlSetMarkupExtensionEventArgs eventArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReceiveMarkupExtension(object targetObject, class System.Windows.Markup.XamlSetMarkupExtensionEventArgs eventArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataTrigger.ReceiveMarkupExtension(System.Object,System.Windows.Markup.XamlSetMarkupExtensionEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ReceiveMarkupExtension (targetObject As Object, eventArgs As XamlSetMarkupExtensionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ReceiveMarkupExtension(System::Object ^ targetObject, System::Windows::Markup::XamlSetMarkupExtensionEventArgs ^ eventArgs);" />
      <MemberSignature Language="F#" Value="static member ReceiveMarkupExtension : obj * System.Windows.Markup.XamlSetMarkupExtensionEventArgs -&gt; unit" Usage="System.Windows.DataTrigger.ReceiveMarkupExtension (targetObject, eventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetObject" Type="System.Object" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="eventArgs" Type="System.Windows.Markup.XamlSetMarkupExtensionEventArgs" Index="1" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="targetObject">マークアップ拡張機能によって値が設定されるオブジェクト。</param>
        <param name="eventArgs">マークアップ拡張機能の処理に関連したデータ。</param>
        <summary>マークアップ拡張機能によって <see cref="T:System.Windows.DataTrigger" /> オブジェクトのプロパティの値が設定された場合の処理を行います。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 これは、適用によって参照されるメソッド<xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute>属性の値を設定するすべての試行をこのメソッドで処理することを意味するクラス レベルで<xref:System.Windows.DataTrigger>マークアップ拡張機能を使用します。 ない通常このメソッドを呼び出す直接します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Markup.XamlSetMarkupExtensionAttribute" />
        <altmember cref="T:System.Windows.Markup.XamlSetMarkupExtensionEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="Setters">
      <MemberSignature Language="C#" Value="public System.Windows.SetterBaseCollection Setters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.SetterBaseCollection Setters" />
      <MemberSignature Language="DocId" Value="P:System.Windows.DataTrigger.Setters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Setters As SetterBaseCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::SetterBaseCollection ^ Setters { System::Windows::SetterBaseCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Setters : System.Windows.SetterBaseCollection" Usage="System.Windows.DataTrigger.Setters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.SetterBaseCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ項目が指定した条件を満たしたときに適用するプロパティ値を表す <see cref="T:System.Windows.Setter" /> オブジェクトのコレクションを取得します。</summary>
        <value>既定値は <see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlPropertyElementUsage_Setters"></a>   
## <a name="xaml-property-element-usage"></a>XAML プロパティ要素の使用  
  
```  
<object>  
  <object.Setters>  
    ZeroOrMoreSetters  
  </object.Setters>  
</object>  
```  
  
<a name="xamlValues_Setters"></a>   
## <a name="xaml-values"></a>XAML 値  
 *ZeroOrMoreSetters*  
 0 個以上<xref:System.Windows.Setter>オブジェクト。  
  
 A<xref:System.Windows.DataTrigger>アクションを開始するかを使用できます<xref:System.Windows.Setter>のプロパティに適用する値のデータ項目が、指定した条件を満たしている場合。  
  
 1 つ以上の setter が同じ set アクセス操作子コレクション内の同じプロパティを設定する場合は、宣言されている setter 最後使用されます。  
  
 <xref:System.Windows.DataTrigger.Setters%2A>のプロパティを<xref:System.Windows.DataTrigger>オブジェクトから成るのみ<xref:System.Windows.Setter>オブジェクト。 追加、<xref:System.Windows.Setter>に子を<xref:System.Windows.DataTrigger>オブジェクトが暗黙的に追加して、<xref:System.Windows.SetterBaseCollection>の<xref:System.Windows.DataTrigger>オブジェクト。 <xref:System.Windows.EventSetter> オブジェクトはサポートされていません。のみ<xref:System.Windows.Style.Setters%2A?displayProperty=nameWithType>サポート<xref:System.Windows.EventSetter>オブジェクト。  
  
   
  
## Examples  
 次の例では 2 つ<xref:System.Windows.DataTrigger>で定義されているオブジェクト、<xref:System.Windows.DataTemplate>します。 <xref:System.Windows.DataTemplate>に適用される*AuctionItem*データ オブジェクト (この例では表示されません)、プロパティを持つ*SpecialFeatures*します。  
  
 最初の<xref:System.Windows.DataTrigger>が指定されてようにデータ オブジェクトがある場合、 *SpecialFeatures*の値*色*で、項目が表示されます、`DodgerBlue`ネイビー カラーのタイトルの背景。 データ オブジェクトがある場合、 *SpecialFeatures*の値*を強調表示*、秒、<xref:System.Windows.DataTrigger>が原因で、星の付いたオレンジの枠線で表示される項目をアクティブになります。  
  
 サンプル全体については、次を参照してください。[データ バインディング デモ](https://go.microsoft.com/fwlink/?LinkID=163703)します。  
  
 [!code-xaml[DataBindingLab#AuctionItemsDataTriggers](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/DataBindingLabApp.xaml#auctionitemsdatatriggers)]  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160009">データ テンプレート サンプルの概要</related>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddChild">
      <MemberSignature Language="C#" Value="void IAddChild.AddChild (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddChild(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataTrigger.System#Windows#Markup#IAddChild#AddChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub AddChild (value As Object) Implements IAddChild.AddChild" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddChild(System::Object ^ value) = System::Windows::Markup::IAddChild::AddChild;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddChild(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">追加する子オブジェクト。</param>
        <summary>子オブジェクトを追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Windows.DataTrigger> のインスタンスが <xref:System.Windows.Markup.IAddChild> インターフェイスにキャストされる場合のみ、使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddText">
      <MemberSignature Language="C#" Value="void IAddChild.AddText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataTrigger.System#Windows#Markup#IAddChild#AddText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub AddText (text As String) Implements IAddChild.AddText" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddText(System::String ^ text) = System::Windows::Markup::IAddChild::AddText;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddText(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">オブジェクトに追加するテキスト。</param>
        <summary>オブジェクトにノードのテキスト コンテンツを追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Windows.DataTrigger> のインスタンスが <xref:System.Windows.Markup.IAddChild> インターフェイスにキャストされる場合のみ、使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Windows.DataTrigger.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : obj with get, set" Usage="System.Windows.DataTrigger.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Markup.DependsOn("Binding")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ オブジェクトのプロパティ値と比較する値を取得または設定します。</summary>
        <value>既定値は <see langword="null" /> です。 「例外」も参照してください。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlPropertyElementUsage_Value"></a>   
## <a name="xaml-property-element-usage"></a>XAML プロパティ要素の使用  
  
```  
<object>  
  <object.Value>  
    Value  
  </object.Value>  
</object>  
```  
  
 この値によって生成されるプロパティの値と比較されます、<xref:System.Windows.DataTrigger.Binding%2A>のプロパティ、<xref:System.Windows.DataTrigger>します。 この比較は参照の等価性チェックです。 2 つの値が等しい場合は、関連付けられたアクションまたは set アクセス操作子が適用されます。  
  
 両方を指定する必要がありますに注意してください、<xref:System.Windows.DataTrigger.Binding%2A>と<xref:System.Windows.DataTrigger.Value%2A>プロパティを<xref:System.Windows.DataTrigger>に意味のあるデータ トリガーします。 1 つまたは両方のプロパティが設定されていない場合、例外がスローされます。  
  
   
  
## Examples  
 次の例では、<xref:System.Windows.Controls.ItemsControl.ItemsSource%2A>の<xref:System.Windows.Controls.ListBox>にバインドされた*場所*、<xref:System.Collections.ObjectModel.ObservableCollection%601>の*場所*オブジェクト。 *場所*オブジェクト プロパティがある*名前*と*状態*します。  
  
 各<xref:System.Windows.Controls.ListBoxItem>の<xref:System.Windows.Controls.ListBox>が表示されます、*場所*オブジェクト。 <xref:System.Windows.Style>の例では、各に適用される<xref:System.Windows.Controls.ListBoxItem>します。  
  
 <xref:System.Windows.DataTrigger>が指定されてように場合、*状態*の*場所*データ項目が"WA"の対応するフォア グラウンド<xref:System.Windows.Controls.ListBoxItem>は赤に設定します。  
  
 [!code-xaml[DataTrigger#1](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTrigger/CSharp/Window1.xaml#1)]  
  
 次の例では 2 つ<xref:System.Windows.DataTrigger>で定義されている、<xref:System.Windows.DataTemplate>します。 <xref:System.Windows.DataTemplate>に適用される*AuctionItem*データ オブジェクト (この例では表示されません)、プロパティを持つ*SpecialFeatures*します。 参照してください[データ バインディング デモ](https://go.microsoft.com/fwlink/?LinkID=163703)の完全な例です。  
  
 最初の<xref:System.Windows.DataTrigger>が指定されてようにデータ オブジェクトがある場合、 *SpecialFeatures*の値*色*、ネイビー カラーの書名 DodgerBlue の背景を持つ項目が表示されます。 データ オブジェクトがある場合、 *SpecialFeatures*の値*を強調表示*、秒、<xref:System.Windows.DataTrigger>が原因で、星の付いたオレンジの枠線で表示される項目をアクティブになります。  
  
 [!code-xaml[DataBindingLab#AuctionItemsDataTriggers](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/DataBindingLabApp.xaml#auctionitemsdatatriggers)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">式はサポートされていません。 バインディングはサポートされていません。</exception>
        <altmember cref="P:System.Windows.DataTrigger.Binding" />
        <altmember cref="P:System.Windows.DataTrigger.Setters" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160009">データ テンプレート サンプルの概要</related>
      </Docs>
    </Member>
  </Members>
</Type>