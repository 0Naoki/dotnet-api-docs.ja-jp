<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DependencyObjectType.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac582fb7814e22f512058a33e227f6da12781e34e22.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">82fb7814e22f512058a33e227f6da12781e34e22</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.DependencyObjectType">
          <source>Implements an underlying type cache for all <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph> derived types.</source>
          <target state="translated">すべての <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph> 派生型の基になる型のキャッシュを実装します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.DependencyObjectType">
          <source><ph id="ph1">&lt;xref:System.Windows.DependencyObjectType&gt;</ph> represents a specific underlying system (<ph id="ph2">[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]</ph>) <ph id="ph3">&lt;xref:System.Type&gt;</ph> of a <ph id="ph4">&lt;xref:System.Windows.DependencyObject&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.DependencyObjectType&gt;</ph> 特定の基になるシステムを表します (<ph id="ph2">[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]</ph>)<ph id="ph3">&lt;xref:System.Type&gt;</ph>の<ph id="ph4">&lt;xref:System.Windows.DependencyObject&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.DependencyObjectType">
          <source><ph id="ph1">&lt;xref:System.Windows.DependencyObjectType&gt;</ph> is essentially a wrapper for the (<ph id="ph2">[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]</ph>) <ph id="ph3">&lt;xref:System.Type&gt;</ph> so that it can extend some of its capabilities.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.DependencyObjectType&gt;</ph> ラッパーでは基本的には、(<ph id="ph2">[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]</ph>)<ph id="ph3">&lt;xref:System.Type&gt;</ph>できるように、一部の機能を拡張することができます。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.DependencyObjectType">
          <source>This class has no public constructor.</source>
          <target state="translated">このクラスには、パブリック コンス トラクターがありません。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.DependencyObjectType">
          <source>Instances of this class can only be obtained through properties on other objects (such as <ph id="ph1">&lt;xref:System.Windows.DependencyObject.DependencyObjectType%2A?displayProperty=nameWithType&gt;</ph>), or through the static method <ph id="ph2">&lt;xref:System.Windows.DependencyObjectType.FromSystemType%2A&gt;</ph>.</source>
          <target state="translated">このクラスのインスタンスは、その他のオブジェクトのプロパティでのみ取得できます (など<ph id="ph1">&lt;xref:System.Windows.DependencyObject.DependencyObjectType%2A?displayProperty=nameWithType&gt;</ph>)、または静的メソッドを通じて<ph id="ph2">&lt;xref:System.Windows.DependencyObjectType.FromSystemType%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="P:System.Windows.DependencyObjectType.BaseType">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObjectType" /&gt;</ph> of the immediate base class of the current <ph id="ph2">&lt;see cref="T:System.Windows.DependencyObjectType" /&gt;</ph>.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObjectType" /&gt;</ph> の直接基本クラスの <ph id="ph2">&lt;see cref="T:System.Windows.DependencyObjectType" /&gt;</ph> を取得します。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.DependencyObjectType.BaseType">
          <source>The type of the base class.</source>
          <target state="translated">基本クラスの型。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Windows.DependencyObjectType.FromSystemType(System.Type)">
          <source>The system (<ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]</ph>) type to convert.</source>
          <target state="translated">変換するシステム (<ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]</ph>) 型。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Windows.DependencyObjectType.FromSystemType(System.Type)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObjectType" /&gt;</ph> that represents a given system (<ph id="ph2">[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]</ph>) type.</source>
          <target state="translated">指定されたシステム (<ph id="ph2">[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]</ph>) 型を表す <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObjectType" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Windows.DependencyObjectType.FromSystemType(System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObjectType" /&gt;</ph> that represents the system (<ph id="ph2">[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]</ph>) type.</source>
          <target state="translated">システム (<ph id="ph2">[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]</ph>) 型を表す <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObjectType" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.DependencyObjectType.FromSystemType(System.Type)">
          <source>Each <ph id="ph1">&lt;xref:System.Windows.DependencyObject&gt;</ph> maintains a <ph id="ph2">&lt;xref:System.Windows.DependencyObject.DependencyObjectType%2A&gt;</ph> property that returns a <ph id="ph3">&lt;xref:System.Windows.DependencyObjectType&gt;</ph>, but this requires having a particular <ph id="ph4">&lt;xref:System.Windows.DependencyObject&gt;</ph> instance.</source>
          <target state="translated">各<ph id="ph1">&lt;xref:System.Windows.DependencyObject&gt;</ph>保持、<ph id="ph2">&lt;xref:System.Windows.DependencyObject.DependencyObjectType%2A&gt;</ph>プロパティを返す、 <ph id="ph3">&lt;xref:System.Windows.DependencyObjectType&gt;</ph>、特定のことが必要ですが、<ph id="ph4">&lt;xref:System.Windows.DependencyObject&gt;</ph>インスタンス。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.DependencyObjectType.FromSystemType(System.Type)">
          <source>You can use this static utility method if you do not yet have a <ph id="ph1">&lt;xref:System.Windows.DependencyObject&gt;</ph> instance and require a <ph id="ph2">&lt;xref:System.Windows.DependencyObjectType&gt;</ph>.</source>
          <target state="translated">インストールされていない場合は、この静的ユーティリティ メソッドを使用することができます、<ph id="ph1">&lt;xref:System.Windows.DependencyObject&gt;</ph>インスタンス化し、必要な<ph id="ph2">&lt;xref:System.Windows.DependencyObjectType&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.DependencyObjectType.FromSystemType(System.Type)">
          <source>The following example calls <ph id="ph1">&lt;xref:System.Windows.DependencyObjectType.FromSystemType%2A&gt;</ph> , creating a <ph id="ph2">&lt;xref:System.Windows.DependencyObjectType&gt;</ph> based on the type of the <ph id="ph3">&lt;xref:System.Windows.Window&gt;</ph> class.</source>
          <target state="translated">次の例では<ph id="ph1">&lt;xref:System.Windows.DependencyObjectType.FromSystemType%2A&gt;</ph>、作成、<ph id="ph2">&lt;xref:System.Windows.DependencyObjectType&gt;</ph>の種類に基づいて、<ph id="ph3">&lt;xref:System.Windows.Window&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Windows.DependencyObjectType.GetHashCode">
          <source>Returns the hash code for this <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObjectType" /&gt;</ph>.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObjectType" /&gt;</ph> のハッシュ コードを返します。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Windows.DependencyObjectType.GetHashCode">
          <source>A 32-bit signed integer hash code.</source>
          <target state="translated">32 ビット符号付き整数ハッシュ コード。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.DependencyObjectType.GetHashCode">
          <source>This implementation is linked to the value of the <ph id="ph1">&lt;xref:System.Windows.DependencyObjectType.Id%2A&gt;</ph> property.</source>
          <target state="translated">この実装は、の値にリンクされている、<ph id="ph1">&lt;xref:System.Windows.DependencyObjectType.Id%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="P:System.Windows.DependencyObjectType.Id">
          <source>Gets a zero-based unique identifier for constant-time array lookup operations.</source>
          <target state="translated">一定時間の配列検索操作の 0 から始まる一意識別子を取得します。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.DependencyObjectType.Id">
          <source>An internal identifier.</source>
          <target state="translated">内部識別子。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.DependencyObjectType.Id">
          <source>Do not use for general hashing functions.</source>
          <target state="translated">一般的なハッシュ関数は使用しないでください。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.DependencyObjectType.Id">
          <source>There is no guarantee on this value.</source>
          <target state="translated">この値を保証はありません。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.DependencyObjectType.Id">
          <source>It can vary between application runs.</source>
          <target state="translated">これは、アプリケーションの実行によって異なります。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Windows.DependencyObjectType.IsInstanceOfType(System.Windows.DependencyObject)">
          <source>The object to compare with the current <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObjectType" /&gt;</ph>.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObjectType" /&gt;</ph> と比較するオブジェクト。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Windows.DependencyObjectType.IsInstanceOfType(System.Windows.DependencyObject)">
          <source>Determines whether the specified object is an instance of the current <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObjectType" /&gt;</ph>.</source>
          <target state="translated">指定したオブジェクトが現在の <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObjectType" /&gt;</ph> のインスタンスかどうかを判断します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Windows.DependencyObjectType.IsInstanceOfType(System.Windows.DependencyObject)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the class represented by the current <ph id="ph2">&lt;see cref="T:System.Windows.DependencyObjectType" /&gt;</ph> is in the inheritance hierarchy of the <ph id="ph3">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph> passed as <ph id="ph4">&lt;paramref name="d" /&gt;</ph>; otherwise, <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">現在の <ph id="ph2">&lt;see cref="T:System.Windows.DependencyObjectType" /&gt;</ph> によって表されるクラスが <ph id="ph4">&lt;paramref name="d" /&gt;</ph> として渡される <ph id="ph3">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph> の継承階層内にある場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph5">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.DependencyObjectType.IsInstanceOfType(System.Windows.DependencyObject)">
          <source>Objects of the exact same type return <ph id="ph1">`true`</ph>.</source>
          <target state="translated">まったく同じ型のオブジェクトを返す<ph id="ph1">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Windows.DependencyObjectType.IsSubclassOf(System.Windows.DependencyObjectType)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObjectType" /&gt;</ph> to compare.</source>
          <target state="translated">比較対象の <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObjectType" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Windows.DependencyObjectType.IsSubclassOf(System.Windows.DependencyObjectType)">
          <source>Determines whether the current <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObjectType" /&gt;</ph> derives from the specified <ph id="ph2">&lt;see cref="T:System.Windows.DependencyObjectType" /&gt;</ph>.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObjectType" /&gt;</ph> が、指定した <ph id="ph2">&lt;see cref="T:System.Windows.DependencyObjectType" /&gt;</ph> から派生しているかどうかを判断します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Windows.DependencyObjectType.IsSubclassOf(System.Windows.DependencyObjectType)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;paramref name="dependencyObjectType" /&gt;</ph> parameter and the current <ph id="ph3">&lt;see cref="T:System.Windows.DependencyObjectType" /&gt;</ph> represent types of classes, and the class represented by the current <ph id="ph4">&lt;see cref="T:System.Windows.DependencyObjectType" /&gt;</ph> derives from the class represented by <ph id="ph5">&lt;paramref name="dependencyObjectType" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="dependencyObjectType" /&gt;</ph> パラメーターおよび現在の <ph id="ph3">&lt;see cref="T:System.Windows.DependencyObjectType" /&gt;</ph> がクラスの型を表し、現在の <ph id="ph4">&lt;see cref="T:System.Windows.DependencyObjectType" /&gt;</ph> によって表されるクラスが <ph id="ph5">&lt;paramref name="dependencyObjectType" /&gt;</ph> によって表されるクラスから派生している場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Windows.DependencyObjectType.IsSubclassOf(System.Windows.DependencyObjectType)">
          <source>Otherwise, <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">それ以外の場合は <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Windows.DependencyObjectType.IsSubclassOf(System.Windows.DependencyObjectType)">
          <source>This method also returns <ph id="ph1">&lt;see langword="false" /&gt;</ph> if <ph id="ph2">&lt;paramref name="dependencyObjectType" /&gt;</ph> and the current <ph id="ph3">&lt;see cref="T:System.Windows.DependencyObjectType" /&gt;</ph> represent the same class.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="dependencyObjectType" /&gt;</ph> と現在の <ph id="ph3">&lt;see cref="T:System.Windows.DependencyObjectType" /&gt;</ph> が同じクラスを表す場合、このメソッドは <ph id="ph1">&lt;see langword="false" /&gt;</ph> も返します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="P:System.Windows.DependencyObjectType.Name">
          <source>Gets the name of the represented <ph id="ph1">[!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]</ph> system type.</source>
          <target state="translated">表される<ph id="ph1">[!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]</ph> システム型の名前を取得します。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.DependencyObjectType.Name">
          <source>The name of the represented <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]</ph> system type.</source>
          <target state="translated">表される<ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]</ph> システム型の名前。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.DependencyObjectType.Name">
          <source>The value of <ph id="ph1">&lt;xref:System.Windows.DependencyObjectType.Name%2A&gt;</ph> is the same string as the name of the type name of the <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">値<ph id="ph1">&lt;xref:System.Windows.DependencyObjectType.Name%2A&gt;</ph>の型名の名前と同じ文字列には、<ph id="ph2">&lt;xref:System.Type&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="P:System.Windows.DependencyObjectType.SystemType">
          <source>Gets the <ph id="ph1">[!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]</ph> system type represented by this <ph id="ph2">&lt;see cref="T:System.Windows.DependencyObjectType" /&gt;</ph>.</source>
          <target state="translated">この <ph id="ph2">&lt;see cref="T:System.Windows.DependencyObjectType" /&gt;</ph> によって表される<ph id="ph1">[!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]</ph> システム型を取得します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.DependencyObjectType.SystemType">
          <source>The <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]</ph> system type represented by this <ph id="ph2">&lt;see cref="T:System.Windows.DependencyObjectType" /&gt;</ph>.</source>
          <target state="translated">この <ph id="ph2">&lt;see cref="T:System.Windows.DependencyObjectType" /&gt;</ph> によって表される<ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]</ph> システム型。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>