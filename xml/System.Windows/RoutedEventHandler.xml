<Type Name="RoutedEventHandler" FullName="System.Windows.RoutedEventHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2f1f9099dd40ac32c2809e9c3dde9a8fb3c61fb1" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30676246" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void RoutedEventHandler(object sender, RoutedEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed RoutedEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.RoutedEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub RoutedEventHandler(sender As Object, e As RoutedEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void RoutedEventHandler(System::Object ^ sender, RoutedEventArgs ^ e);" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">
      <span data-ttu-id="a08d7-101">イベント ハンドラーがアタッチされているオブジェクト。</span>
      <span class="sxs-lookup">
        <span data-stu-id="a08d7-101">The object where the event handler is attached.</span>
      </span>
    </param>
    <param name="e">
      <span data-ttu-id="a08d7-102">イベントのデータ。</span>
      <span class="sxs-lookup">
        <span data-stu-id="a08d7-102">The event data.</span>
      </span>
    </param>
    <summary>
      <span data-ttu-id="a08d7-103">すべてのルーティング イベントに共通なデータ以外の特定のイベント データを持たない、さまざまなルーティング イベントを処理するメソッドを表します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="a08d7-103">Represents the method that will handle various routed events that do not have specific event data beyond the data that is common for all routed events.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a08d7-104"><xref:System.Windows.RoutedEventHandler>イベント データのイベントに固有の情報を報告しない任意のルーティング イベントのデリゲートを使用します。</span><span class="sxs-lookup"><span data-stu-id="a08d7-104">The <xref:System.Windows.RoutedEventHandler> delegate is used for any routed event that does not report event-specific information in the event data.</span></span> <span data-ttu-id="a08d7-105">そのような多くのルーティング イベント; があります。目立つ例としては、<xref:System.Windows.Controls.Primitives.ButtonBase.Click>と<xref:System.Windows.FrameworkElement.Loaded>です。</span><span class="sxs-lookup"><span data-stu-id="a08d7-105">There are many such routed events; prominent examples include <xref:System.Windows.Controls.Primitives.ButtonBase.Click> and <xref:System.Windows.FrameworkElement.Loaded>.</span></span>  
  
 <span data-ttu-id="a08d7-106">一般的なのではなくルーティング イベントのハンドラーの記述の違い最も注目に値する[!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]イベントは使用する、`sender`イベント (ハンドラーがアタッチされ、呼び出される位置の要素) のことはできませんと見なされるため必ずしもイベントのソース。</span><span class="sxs-lookup"><span data-stu-id="a08d7-106">The most noteworthy difference between writing a handler for a routed event as opposed to a general [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event is that the `sender` of the event (the element where the handler is attached and invoked) cannot be considered to necessarily be the source of the event.</span></span> <span data-ttu-id="a08d7-107">ソースは、イベント データでは、プロパティとして報告 (<xref:System.Windows.RoutedEventArgs.Source%2A>)。</span><span class="sxs-lookup"><span data-stu-id="a08d7-107">The source is reported as a property in the event data (<xref:System.Windows.RoutedEventArgs.Source%2A>).</span></span> <span data-ttu-id="a08d7-108">違い`sender`と<xref:System.Windows.RoutedEventArgs.Source%2A>要素ツリーを通じてルーティング イベントの検査中に、異なる要素にルーティングされるイベントの結果です。</span><span class="sxs-lookup"><span data-stu-id="a08d7-108">A difference between `sender` and <xref:System.Windows.RoutedEventArgs.Source%2A> is the result of the event being routed to different elements, during the traversal of the routed event through an element tree.</span></span>  
  
 <span data-ttu-id="a08d7-109">いずれかを使用する`sender`または<xref:System.Windows.RoutedEventArgs.Source%2A>オブジェクトの参照を直接またはバブルのルーティング イベントのルーティングの動作に興味は意図的に処理する場合のルーティング イベント最初に発生する要素をします。</span><span class="sxs-lookup"><span data-stu-id="a08d7-109">You can use either `sender` or <xref:System.Windows.RoutedEventArgs.Source%2A> for an object reference if you are deliberately not interested in the routing behavior of a direct or bubbling routed event and you only intend to handle routed events on the elements where they are first raised.</span></span> <span data-ttu-id="a08d7-110">この状況で`sender`と<xref:System.Windows.RoutedEventArgs.Source%2A>同じオブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="a08d7-110">In this circumstance, `sender` and <xref:System.Windows.RoutedEventArgs.Source%2A> are the same object.</span></span>  
  
 <span data-ttu-id="a08d7-111">ルーティング イベントの固有の機能を活用し、それに応じて、ハンドラーを作成する場合は、イベント ハンドラーを作成するときに作業するため、イベント データの 2 つの最も重要なプロパティは、<xref:System.Windows.RoutedEventArgs.Source%2A>と<xref:System.Windows.RoutedEventArgs.Handled%2A>です。</span><span class="sxs-lookup"><span data-stu-id="a08d7-111">If you do intend to take advantage of the inherent features of routed events and write your handlers accordingly, the two most important properties of the event data that you will work with when writing event handlers are <xref:System.Windows.RoutedEventArgs.Source%2A> and <xref:System.Windows.RoutedEventArgs.Handled%2A>.</span></span>  
  
 <span data-ttu-id="a08d7-112">入力イベントの特定の組み合わせと[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]コントロール クラス、イベントを発生させる要素は、それを処理する機会を持つ最初の要素ではありません。</span><span class="sxs-lookup"><span data-stu-id="a08d7-112">For certain combinations of input events and [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] control classes, the element that raises the event is not the first element that has the opportunity to handle it.</span></span> <span data-ttu-id="a08d7-113">最初のチャンスには、入力イベントがある場合、イベントのプレビュー バージョンし、要素ツリーのルートを設定できます<xref:System.Windows.RoutedEventArgs.Handled%2A>に`true`共有イベント データにし、そのイベント ルート上で残りの要素を入力イベントを報告する方法に影響を与えることができます。</span><span class="sxs-lookup"><span data-stu-id="a08d7-113">If the input event has a Preview version of the event, then the root of the element tree has first opportunity, can set <xref:System.Windows.RoutedEventArgs.Handled%2A> to `true` in the shared event data, and can influence how the input event is reported to remaining elements in its event route.</span></span> <span data-ttu-id="a08d7-114">処理の動作は、特定のルーティング イベントではない外観を与えることができます、プレビューは、想定どおりに発生します。</span><span class="sxs-lookup"><span data-stu-id="a08d7-114">The Preview handling behavior can give the appearance that a particular routed event is not raised as expected.</span></span> <span data-ttu-id="a08d7-115">詳細については、次を参照してください。[プレビュー イベント](~/docs/framework/wpf/advanced/preview-events.md)と[入力概要](~/docs/framework/wpf/advanced/input-overview.md)です。</span><span class="sxs-lookup"><span data-stu-id="a08d7-115">For more information, see [Preview Events](~/docs/framework/wpf/advanced/preview-events.md) and [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
</Type>