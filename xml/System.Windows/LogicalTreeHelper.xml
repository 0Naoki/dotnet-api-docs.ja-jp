<Type Name="LogicalTreeHelper" FullName="System.Windows.LogicalTreeHelper">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="62b7945787d0b94dce6ae67c8577e1d895687cda" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36458581" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class LogicalTreeHelper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit LogicalTreeHelper extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.LogicalTreeHelper" />
  <TypeSignature Language="VB.NET" Value="Public Class LogicalTreeHelper" />
  <TypeSignature Language="C++ CLI" Value="public ref class LogicalTreeHelper abstract sealed" />
  <TypeSignature Language="F#" Value="type LogicalTreeHelper = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="70832-101">論理ツリー内のオブジェクトのクエリを実行するために静的ヘルパー メソッドを提供します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="70832-101">Provides static helper methods for querying objects in the logical tree.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70832-102"><xref:System.Windows.LogicalTreeHelper>クラスを使用することができますをオブジェクトの子コレクションを返すまたは論理ツリーのサブノード内からのオブジェクトは特定のメソッドを提供します。</span><span class="sxs-lookup"><span data-stu-id="70832-102">The <xref:System.Windows.LogicalTreeHelper> class provides methods that you can use to return child collections of objects, or specific objects from within subnodes of the logical tree.</span></span> <span data-ttu-id="70832-103">ただし、通常実行するオブジェクト ツリーの操作のほとんどもによって公開される同様のメソッドまたはプロパティで<xref:System.Windows.FrameworkElement>または<xref:System.Windows.FrameworkContentElement>です。</span><span class="sxs-lookup"><span data-stu-id="70832-103">However, most of the object tree operations that you typically perform are also exposed by similar methods or properties on <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement>.</span></span> <span data-ttu-id="70832-104">たとえば、次の点を再試行してください。</span><span class="sxs-lookup"><span data-stu-id="70832-104">For example, try the following:</span></span>  
  
-   <span data-ttu-id="70832-105">静的なを呼び出す代わりに<xref:System.Windows.LogicalTreeHelper.GetChildren%2A>列挙子の論理子オブジェクトを返すメソッドは、そのオブジェクトのコンテンツ モデルで公開されている専用のコレクションを使用します。</span><span class="sxs-lookup"><span data-stu-id="70832-105">Instead of calling the static <xref:System.Windows.LogicalTreeHelper.GetChildren%2A> method, which returns an enumerator for the logical child objects, use the dedicated collection exposed in the content model for that object.</span></span> <span data-ttu-id="70832-106">コンテンツ モデルをサポートするほとんどすべてのオブジェクトは、子オブジェクトのコレクションを格納し、そのコレクションに対するコレクション インターフェイスのサポートに直接を提供するいくつかのプロパティを公開します。</span><span class="sxs-lookup"><span data-stu-id="70832-106">Nearly all objects that support a content model expose some property that contains the collection of child objects, and provides collection interface support directly on that collection.</span></span>  
  
-   <span data-ttu-id="70832-107">静的なを呼び出す代わりに<xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A>を呼び出し、その名前を指定することによって、子オブジェクトを取得するメソッド、<xref:System.Windows.FrameworkElement.FindName%2A?displayProperty=nameWithType>または<xref:System.Windows.FrameworkContentElement.FindName%2A?displayProperty=nameWithType>固有のオブジェクトのメソッドです。</span><span class="sxs-lookup"><span data-stu-id="70832-107">Instead of calling the static <xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A> method to obtain a child object by specifying its name, call the <xref:System.Windows.FrameworkElement.FindName%2A?displayProperty=nameWithType> or <xref:System.Windows.FrameworkContentElement.FindName%2A?displayProperty=nameWithType> method on specific objects.</span></span>  
  
 <span data-ttu-id="70832-108"><xref:System.Windows.LogicalTreeHelper> 論理ツリーを再帰的に、複数のレベルの上下に移動してさまざまな親または子オブジェクトを確認するための一貫した方法を使用する分析シナリオに最も役立ちます。</span><span class="sxs-lookup"><span data-stu-id="70832-108"><xref:System.Windows.LogicalTreeHelper> is most useful for analysis scenarios where you are traveling up or down the logical tree recursively through multiple levels, and want to use a consistent approach for examining the various parent or child objects.</span></span> <span data-ttu-id="70832-109">ここでは、コンテンツ モデルの組み合わせにアクセスする可能性があり、複数のコンテンツ モデルを使用して特定の Api が複雑すぎます。</span><span class="sxs-lookup"><span data-stu-id="70832-109">In this case, you might be accessing a mixture of content models, and using the more content-model specific APIs would be too complex.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BringIntoView">
      <MemberSignature Language="C#" Value="public static void BringIntoView (System.Windows.DependencyObject current);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void BringIntoView(class System.Windows.DependencyObject current) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LogicalTreeHelper.BringIntoView(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub BringIntoView (current As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void BringIntoView(System::Windows::DependencyObject ^ current);" />
      <MemberSignature Language="F#" Value="static member BringIntoView : System.Windows.DependencyObject -&gt; unit" Usage="System.Windows.LogicalTreeHelper.BringIntoView current" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="current" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="current">
          <span data-ttu-id="70832-110">表示する UI 要素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="70832-110">The UI element to bring into view.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="70832-111">要求された UI 要素の表示を試行して、結果を報告するためにターゲット上で <see cref="E:System.Windows.FrameworkElement.RequestBringIntoView" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="70832-111">Attempts to bring the requested UI element into view and raises the <see cref="E:System.Windows.FrameworkElement.RequestBringIntoView" /> event on the target in order to report the results.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70832-112">通常、インスタンス メソッドを呼び出すした方が便利です<xref:System.Windows.FrameworkElement.BringIntoView%2A?displayProperty=nameWithType>または<xref:System.Windows.FrameworkContentElement.BringIntoView%2A?displayProperty=nameWithType>このユーティリティの静的メソッドではなくです。</span><span class="sxs-lookup"><span data-stu-id="70832-112">It is typically more convenient to call the instance methods <xref:System.Windows.FrameworkElement.BringIntoView%2A?displayProperty=nameWithType> or <xref:System.Windows.FrameworkContentElement.BringIntoView%2A?displayProperty=nameWithType> rather than this static utility method.</span></span> <span data-ttu-id="70832-113">インスタンス メソッドの動作は、静的メソッドの動作と同じです。</span><span class="sxs-lookup"><span data-stu-id="70832-113">The behavior of the instance methods is equivalent to the behavior of the static method.</span></span>  
  
 <span data-ttu-id="70832-114">場合でも、`current`提供される UI 要素が、 <xref:System.Windows.FrameworkContentElement>、結果として得られるイベントが変更されていないか<xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType>は発信元でのイベント<xref:System.Windows.FrameworkContentElement>イベントのイベント データをチェックして識別します。</span><span class="sxs-lookup"><span data-stu-id="70832-114">Even if the `current` UI element provided was a <xref:System.Windows.FrameworkContentElement>, the resulting event is still the same <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType> event, with the originating <xref:System.Windows.FrameworkContentElement> identifiable by checking the event data of the event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.FrameworkElement.RequestBringIntoView" />
      </Docs>
    </Member>
    <Member MemberName="FindLogicalNode">
      <MemberSignature Language="C#" Value="public static System.Windows.DependencyObject FindLogicalNode (System.Windows.DependencyObject logicalTreeNode, string elementName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.DependencyObject FindLogicalNode(class System.Windows.DependencyObject logicalTreeNode, string elementName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LogicalTreeHelper.FindLogicalNode(System.Windows.DependencyObject,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindLogicalNode (logicalTreeNode As DependencyObject, elementName As String) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::DependencyObject ^ FindLogicalNode(System::Windows::DependencyObject ^ logicalTreeNode, System::String ^ elementName);" />
      <MemberSignature Language="F#" Value="static member FindLogicalNode : System.Windows.DependencyObject * string -&gt; System.Windows.DependencyObject" Usage="System.Windows.LogicalTreeHelper.FindLogicalNode (logicalTreeNode, elementName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logicalTreeNode" Type="System.Windows.DependencyObject" />
        <Parameter Name="elementName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="logicalTreeNode">
          <span data-ttu-id="70832-115">検索を開始するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="70832-115">The object to start searching from.</span>
          </span>
          <span data-ttu-id="70832-116">このオブジェクトは、<see cref="T:System.Windows.FrameworkElement" /> と <see cref="T:System.Windows.FrameworkContentElement" /> のどちらかである必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="70832-116">This object must be either a <see cref="T:System.Windows.FrameworkElement" /> or a <see cref="T:System.Windows.FrameworkContentElement" />.</span>
          </span>
        </param>
        <param name="elementName">
          <span data-ttu-id="70832-117">検索するオブジェクトの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="70832-117">The name of the object to find.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="70832-118">指定された名前を持つオブジェクトを検索して返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="70832-118">Attempts to find and return an object that has the specified name.</span>
          </span>
          <span data-ttu-id="70832-119">検索は指定されたオブジェクトから開始され、論理ツリーのサブノードに続きます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="70832-119">The search starts from the specified object and continues into subnodes of the logical tree.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="70832-120">一致する名前が見つかった場合は、その名前を持つオブジェクト。論理ツリー内に一致する名前が見つからなかった場合は、<see langword="null" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="70832-120">The object with the matching name, if one is found; returns <see langword="null" /> if no matching name was found in the logical tree.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70832-121">メソッド<xref:System.Windows.FrameworkContentElement.FindName%2A?displayProperty=nameWithType>と<xref:System.Windows.FrameworkElement.FindName%2A?displayProperty=nameWithType>一見のような<xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A>、別のロジックでは、動作は。</span><span class="sxs-lookup"><span data-stu-id="70832-121">The methods <xref:System.Windows.FrameworkContentElement.FindName%2A?displayProperty=nameWithType> and <xref:System.Windows.FrameworkElement.FindName%2A?displayProperty=nameWithType> are superficially similar to <xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A>, but operate by different logic:</span></span>  
  
-   <span data-ttu-id="70832-122">検索の方向<xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A>(ツリー); の下の子オブジェクトの方向の検索の方向、`FindName`メソッドが (ツリー) 上の親オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="70832-122">The search direction for <xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A> is toward child objects (down the tree); the search direction for the `FindName` methods is towards parent objects (up the tree).</span></span>  
  
-   <span data-ttu-id="70832-123">`FindName`メソッドは、XAML 名前スコープの概念によって制御されます。</span><span class="sxs-lookup"><span data-stu-id="70832-123">The `FindName` methods are governed by the concept of a XAML namescope.</span></span> <span data-ttu-id="70832-124">使用して`FindName`が 1 つだけを保証する XAML 名前スコープは、一意性を適用するため、その名前のオブジェクトが存在します。</span><span class="sxs-lookup"><span data-stu-id="70832-124">Using `FindName` you are guaranteed that only one object of that name exists, because XAML namescopes enforce uniqueness.</span></span> <span data-ttu-id="70832-125">これに対し、<xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A>検索中に XAML 名前スコープおよび XAML 名前スコープの境界を越えた場合がありますは無視されます。</span><span class="sxs-lookup"><span data-stu-id="70832-125">In contrast, <xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A> ignores XAML namescope and might cross XAML namescope boundaries during the search.</span></span> <span data-ttu-id="70832-126">そのための一意性の保証はありません、`elementName`境界を越えると名前を付けます。</span><span class="sxs-lookup"><span data-stu-id="70832-126">As such, there is no guarantee of uniqueness of the `elementName` name once boundaries are crossed.</span></span> <span data-ttu-id="70832-127">XAML 名前スコープの詳細については、次を参照してください。 [WPF XAML 名前スコープ](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md)です。</span><span class="sxs-lookup"><span data-stu-id="70832-127">For more information about XAML namescopes, see [WPF XAML Namescopes](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetChildren">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="70832-128">論理ツリーを処理して、指定したオブジェクトの直接の子オブジェクトのコレクションを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="70832-128">Returns the collection of immediate child objects of the specified object by processing the logical tree.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetChildren">
      <MemberSignature Language="C#" Value="public static System.Collections.IEnumerable GetChildren (System.Windows.DependencyObject current);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.IEnumerable GetChildren(class System.Windows.DependencyObject current) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LogicalTreeHelper.GetChildren(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetChildren (current As DependencyObject) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::IEnumerable ^ GetChildren(System::Windows::DependencyObject ^ current);" />
      <MemberSignature Language="F#" Value="static member GetChildren : System.Windows.DependencyObject -&gt; System.Collections.IEnumerable" Usage="System.Windows.LogicalTreeHelper.GetChildren current" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="current" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="current">
          <span data-ttu-id="70832-129">論理ツリーの処理の起点になるオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="70832-129">The object from which to start processing the logical tree.</span>
          </span>
          <span data-ttu-id="70832-130">これは <see cref="T:System.Windows.FrameworkElement" /> または <see cref="T:System.Windows.FrameworkContentElement" /> であることが求められます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="70832-130">This is expected to be either a <see cref="T:System.Windows.FrameworkElement" /> or <see cref="T:System.Windows.FrameworkContentElement" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="70832-131">論理ツリーを処理して、指定したオブジェクトの直接の子オブジェクトのコレクションを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="70832-131">Returns the collection of immediate child objects of the specified object, by processing the logical tree.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="70832-132">指定したオブジェクトの論理ツリーに属する直接の子オブジェクトの列挙可能なコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="70832-132">The enumerable collection of immediate child objects from the logical tree of the specified object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70832-133">確信できないときに、主に、この署名とヘルパー メソッドを使用しているかどうか`current`は、<xref:System.Windows.FrameworkElement>または<xref:System.Windows.FrameworkContentElement>わからないもそのオブジェクトのクラスが独自のコンテンツ モデルのコレクションをサポートしているかどうかとします。</span><span class="sxs-lookup"><span data-stu-id="70832-133">Use this signature and helper method primarily when you are unsure whether `current` is a <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement> and are also unsure whether that object's class supports its own content model collection.</span></span> <span data-ttu-id="70832-134">クエリを実行するオブジェクトの種類と判断した場合がわかっている特定のコンテンツ プロパティは、その型に存在することを確認します。</span><span class="sxs-lookup"><span data-stu-id="70832-134">If you can determine the type of the object you are querying, check the specific content property that you know exists on that type.</span></span> <span data-ttu-id="70832-135">たとえば、あるオブジェクト クエリを実行することがわかっている場合は、 <xref:System.Windows.Controls.ItemsControl>、確認、<xref:System.Windows.Controls.ItemsControl.Items%2A>コレクション インターフェイスのサポートを持ち、列挙子が含まれている厳密に型指定されたコレクションを取得するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="70832-135">For example, if you know that the object you are querying is an <xref:System.Windows.Controls.ItemsControl>, check the <xref:System.Windows.Controls.ItemsControl.Items%2A> property to get a strongly typed collection, which has collection interface support and is probably more useful than an enumerator.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChildren">
      <MemberSignature Language="C#" Value="public static System.Collections.IEnumerable GetChildren (System.Windows.FrameworkContentElement current);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.IEnumerable GetChildren(class System.Windows.FrameworkContentElement current) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LogicalTreeHelper.GetChildren(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetChildren (current As FrameworkContentElement) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::IEnumerable ^ GetChildren(System::Windows::FrameworkContentElement ^ current);" />
      <MemberSignature Language="F#" Value="static member GetChildren : System.Windows.FrameworkContentElement -&gt; System.Collections.IEnumerable" Usage="System.Windows.LogicalTreeHelper.GetChildren current" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="current" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="current">
          <span data-ttu-id="70832-136">論理ツリーの処理の起点になるオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="70832-136">The object from which to start processing the logical tree.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="70832-137">論理ツリーを処理して、指定した <see cref="T:System.Windows.FrameworkContentElement" /> の直接の子オブジェクトのコレクションを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="70832-137">Returns the collection of immediate child objects of the specified <see cref="T:System.Windows.FrameworkContentElement" /> by processing the logical tree.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="70832-138">論理ツリー内の <paramref name="current" /> から始まる、直接の子オブジェクトの列挙可能なコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="70832-138">The enumerable collection of immediate child objects starting from <paramref name="current" /> in the logical tree.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChildren">
      <MemberSignature Language="C#" Value="public static System.Collections.IEnumerable GetChildren (System.Windows.FrameworkElement current);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.IEnumerable GetChildren(class System.Windows.FrameworkElement current) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LogicalTreeHelper.GetChildren(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetChildren (current As FrameworkElement) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::IEnumerable ^ GetChildren(System::Windows::FrameworkElement ^ current);" />
      <MemberSignature Language="F#" Value="static member GetChildren : System.Windows.FrameworkElement -&gt; System.Collections.IEnumerable" Usage="System.Windows.LogicalTreeHelper.GetChildren current" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="current" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="current">
          <span data-ttu-id="70832-139">論理ツリーの処理の起点になるオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="70832-139">The object from which to start processing the logical tree.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="70832-140">論理ツリーを処理して、指定した <see cref="T:System.Windows.FrameworkElement" /> の直接の子オブジェクトのコレクションを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="70832-140">Returns the collection of immediate child objects of the specified <see cref="T:System.Windows.FrameworkElement" /> by processing the logical tree.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="70832-141">論理ツリー内の <paramref name="current" /> から始まる、直接の子オブジェクトの列挙可能なコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="70832-141">The enumerable collection of immediate child objects starting from <paramref name="current" /> in the logical tree.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParent">
      <MemberSignature Language="C#" Value="public static System.Windows.DependencyObject GetParent (System.Windows.DependencyObject current);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.DependencyObject GetParent(class System.Windows.DependencyObject current) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LogicalTreeHelper.GetParent(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetParent (current As DependencyObject) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::DependencyObject ^ GetParent(System::Windows::DependencyObject ^ current);" />
      <MemberSignature Language="F#" Value="static member GetParent : System.Windows.DependencyObject -&gt; System.Windows.DependencyObject" Usage="System.Windows.LogicalTreeHelper.GetParent current" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="current" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="current">
          <span data-ttu-id="70832-142">親オブジェクトを検索する対象となるオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="70832-142">The object to find the parent object for.</span>
          </span>
          <span data-ttu-id="70832-143">これは、<see cref="T:System.Windows.FrameworkElement" /> または <see cref="T:System.Windows.FrameworkContentElement" /> である必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="70832-143">This is expected to be either a <see cref="T:System.Windows.FrameworkElement" /> or a <see cref="T:System.Windows.FrameworkContentElement" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="70832-144">論理ツリーを処理して、指定したオブジェクトの親オブジェクトを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="70832-144">Returns the parent object of the specified object by processing the logical tree.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="70832-145">要求された親オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="70832-145">The requested parent object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70832-146">このメソッドは、適切な種類のバージョンを取得するラッパーだけを実行 (<xref:System.Windows.FrameworkElement>または<xref:System.Windows.FrameworkContentElement>) の<xref:System.Windows.FrameworkElement.Parent%2A?displayProperty=nameWithType>または<xref:System.Windows.FrameworkContentElement.Parent%2A?displayProperty=nameWithType>プロパティですこれを判断できない場合を除き、、`current`型、することができます、それぞれの確認。インスタンス プロパティの代わりにします。</span><span class="sxs-lookup"><span data-stu-id="70832-146">This method is merely a wrapper that gets the appropriate type version (<xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement>) of the <xref:System.Windows.FrameworkElement.Parent%2A?displayProperty=nameWithType> or <xref:System.Windows.FrameworkContentElement.Parent%2A?displayProperty=nameWithType> property; so unless you are unable to determine the `current` type, you might want to check the respective instance properties instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>