<Type Name="LogicalTreeHelper" FullName="System.Windows.LogicalTreeHelper">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3794828e1dd9f6d221f59f069553788f01bde108" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37491979" /></Metadata><TypeSignature Language="C#" Value="public static class LogicalTreeHelper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit LogicalTreeHelper extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.LogicalTreeHelper" />
  <TypeSignature Language="VB.NET" Value="Public Class LogicalTreeHelper" />
  <TypeSignature Language="C++ CLI" Value="public ref class LogicalTreeHelper abstract sealed" />
  <TypeSignature Language="F#" Value="type LogicalTreeHelper = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>論理ツリー内のオブジェクトのクエリを実行するために静的ヘルパー メソッドを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.LogicalTreeHelper>クラスを使用することができますをオブジェクトの子コレクションを返すまたは論理ツリーのサブノード内の特定のオブジェクトからメソッドを提供します。 ただし、通常実行するオブジェクト ツリーの操作のほとんどもによって公開されている同様のメソッドまたはプロパティで<xref:System.Windows.FrameworkElement>または<xref:System.Windows.FrameworkContentElement>します。 たとえば、次の点をお試しください。  
  
-   静的なを呼び出す代わりに<xref:System.Windows.LogicalTreeHelper.GetChildren%2A>論理上の子の列挙子オブジェクトを返す、メソッドを使用して、そのオブジェクトのコンテンツ モデルで公開されている専用のコレクション。 コンテンツ モデルをサポートするほぼすべてのオブジェクトは、子オブジェクトのコレクションを格納し、そのコレクションのコレクション インターフェイスのサポートに直接を提供するいくつかのプロパティを公開します。  
  
-   静的なを呼び出す代わりに<xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A>メソッドを呼び出し、その名前を指定することで、子オブジェクトを取得、<xref:System.Windows.FrameworkElement.FindName%2A?displayProperty=nameWithType>または<xref:System.Windows.FrameworkContentElement.FindName%2A?displayProperty=nameWithType>特定のオブジェクトに対するメソッド。  
  
 <xref:System.Windows.LogicalTreeHelper> 分析のなかで、論理ツリーを再帰的に複数のレベルを上下に移動し、さまざまな親または子オブジェクトを確認するための一貫した方法を使用する場所に最も適しています。 この場合、コンテンツ モデルの組み合わせにアクセスする可能性があり、複数のコンテンツ モデルを使用して特定の Api は複雑すぎます。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BringIntoView">
      <MemberSignature Language="C#" Value="public static void BringIntoView (System.Windows.DependencyObject current);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void BringIntoView(class System.Windows.DependencyObject current) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LogicalTreeHelper.BringIntoView(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub BringIntoView (current As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void BringIntoView(System::Windows::DependencyObject ^ current);" />
      <MemberSignature Language="F#" Value="static member BringIntoView : System.Windows.DependencyObject -&gt; unit" Usage="System.Windows.LogicalTreeHelper.BringIntoView current" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="current" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="current">表示する UI 要素。</param>
        <summary>要求された UI 要素の表示を試行して、結果を報告するためにターゲット上で <see cref="E:System.Windows.FrameworkElement.RequestBringIntoView" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通常、インスタンス メソッドを呼び出す方が便利です<xref:System.Windows.FrameworkElement.BringIntoView%2A?displayProperty=nameWithType>または<xref:System.Windows.FrameworkContentElement.BringIntoView%2A?displayProperty=nameWithType>この静的なユーティリティ メソッドではなく。 インスタンス メソッドの動作は、静的メソッドの動作と同じです。  
  
 場合でも、`current`提供されている UI 要素が、 <xref:System.Windows.FrameworkContentElement>、結果として得られるイベントがも同じ<xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType>は発信元でのイベント<xref:System.Windows.FrameworkContentElement>イベントのイベント データをチェックすることで識別できます。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.FrameworkElement.RequestBringIntoView" />
      </Docs>
    </Member>
    <Member MemberName="FindLogicalNode">
      <MemberSignature Language="C#" Value="public static System.Windows.DependencyObject FindLogicalNode (System.Windows.DependencyObject logicalTreeNode, string elementName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.DependencyObject FindLogicalNode(class System.Windows.DependencyObject logicalTreeNode, string elementName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LogicalTreeHelper.FindLogicalNode(System.Windows.DependencyObject,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindLogicalNode (logicalTreeNode As DependencyObject, elementName As String) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::DependencyObject ^ FindLogicalNode(System::Windows::DependencyObject ^ logicalTreeNode, System::String ^ elementName);" />
      <MemberSignature Language="F#" Value="static member FindLogicalNode : System.Windows.DependencyObject * string -&gt; System.Windows.DependencyObject" Usage="System.Windows.LogicalTreeHelper.FindLogicalNode (logicalTreeNode, elementName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logicalTreeNode" Type="System.Windows.DependencyObject" />
        <Parameter Name="elementName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="logicalTreeNode">検索を開始するオブジェクト。 このオブジェクトは、<see cref="T:System.Windows.FrameworkElement" /> と <see cref="T:System.Windows.FrameworkContentElement" /> のどちらかである必要があります。</param>
        <param name="elementName">検索するオブジェクトの名前。</param>
        <summary>指定された名前を持つオブジェクトを検索して返します。 検索は指定されたオブジェクトから開始され、論理ツリーのサブノードに続きます。</summary>
        <returns>一致する名前が見つかった場合は、その名前を持つオブジェクト。論理ツリー内に一致する名前が見つからなかった場合は、<see langword="null" /> を返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メソッド<xref:System.Windows.FrameworkContentElement.FindName%2A?displayProperty=nameWithType>と<xref:System.Windows.FrameworkElement.FindName%2A?displayProperty=nameWithType>に表面的に似ています<xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A>が別のロジックによって動作します。  
  
-   検索の方向<xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A>(ツリー); の下の子オブジェクトの方向の検索の方向、`FindName`メソッドが (ツリー) 上の親オブジェクト。  
  
-   `FindName`メソッドは XAML 名前スコープの概念によって管理されます。 使用して`FindName`が 1 つだけを保証する XAML 名前スコープに一意性を強制するため、その名前のオブジェクトが存在します。 これに対し、<xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A>検索中に XAML 名前スコープおよび XAML 名前スコープの境界を越えた可能性がありますは無視されます。 そのための一意性の保証はありません、`elementName`境界を越えると名前を付けます。 XAML 名前スコープの詳細については、次を参照してください。 [WPF XAML 名前スコープ](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetChildren">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>論理ツリーを処理して、指定したオブジェクトの直接の子オブジェクトのコレクションを返します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetChildren">
      <MemberSignature Language="C#" Value="public static System.Collections.IEnumerable GetChildren (System.Windows.DependencyObject current);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.IEnumerable GetChildren(class System.Windows.DependencyObject current) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LogicalTreeHelper.GetChildren(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetChildren (current As DependencyObject) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::IEnumerable ^ GetChildren(System::Windows::DependencyObject ^ current);" />
      <MemberSignature Language="F#" Value="static member GetChildren : System.Windows.DependencyObject -&gt; System.Collections.IEnumerable" Usage="System.Windows.LogicalTreeHelper.GetChildren current" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="current" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="current">論理ツリーの処理の起点になるオブジェクト。 これは <see cref="T:System.Windows.FrameworkElement" /> または <see cref="T:System.Windows.FrameworkContentElement" /> であることが求められます。</param>
        <summary>論理ツリーを処理して、指定したオブジェクトの直接の子オブジェクトのコレクションを返します。</summary>
        <returns>指定したオブジェクトの論理ツリーに属する直接の子オブジェクトの列挙可能なコレクション。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 主に、不明な場合に、この署名とヘルパー メソッドを使用しているかどうか`current`は、<xref:System.Windows.FrameworkElement>または<xref:System.Windows.FrameworkContentElement>もしていないオブジェクトのクラスが独自のコンテンツ モデルのコレクションをサポートするかどうか。 クエリを実行するオブジェクトの型と判断した場合がわかっている特定のコンテンツ プロパティがその型に存在することを確認します。 たとえば、あるオブジェクトを照会することがわかっている場合は、 <xref:System.Windows.Controls.ItemsControl>、確認、<xref:System.Windows.Controls.ItemsControl.Items%2A>コレクション インターフェイスのサポートを備え、おそらく、列挙子よりも役に立つである厳密に型指定されたコレクションを取得するプロパティ。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChildren">
      <MemberSignature Language="C#" Value="public static System.Collections.IEnumerable GetChildren (System.Windows.FrameworkContentElement current);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.IEnumerable GetChildren(class System.Windows.FrameworkContentElement current) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LogicalTreeHelper.GetChildren(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetChildren (current As FrameworkContentElement) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::IEnumerable ^ GetChildren(System::Windows::FrameworkContentElement ^ current);" />
      <MemberSignature Language="F#" Value="static member GetChildren : System.Windows.FrameworkContentElement -&gt; System.Collections.IEnumerable" Usage="System.Windows.LogicalTreeHelper.GetChildren current" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="current" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="current">論理ツリーの処理の起点になるオブジェクト。</param>
        <summary>論理ツリーを処理して、指定した <see cref="T:System.Windows.FrameworkContentElement" /> の直接の子オブジェクトのコレクションを返します。</summary>
        <returns>論理ツリー内の <paramref name="current" /> から始まる、直接の子オブジェクトの列挙可能なコレクション。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChildren">
      <MemberSignature Language="C#" Value="public static System.Collections.IEnumerable GetChildren (System.Windows.FrameworkElement current);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.IEnumerable GetChildren(class System.Windows.FrameworkElement current) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LogicalTreeHelper.GetChildren(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetChildren (current As FrameworkElement) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::IEnumerable ^ GetChildren(System::Windows::FrameworkElement ^ current);" />
      <MemberSignature Language="F#" Value="static member GetChildren : System.Windows.FrameworkElement -&gt; System.Collections.IEnumerable" Usage="System.Windows.LogicalTreeHelper.GetChildren current" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="current" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="current">論理ツリーの処理の起点になるオブジェクト。</param>
        <summary>論理ツリーを処理して、指定した <see cref="T:System.Windows.FrameworkElement" /> の直接の子オブジェクトのコレクションを返します。</summary>
        <returns>論理ツリー内の <paramref name="current" /> から始まる、直接の子オブジェクトの列挙可能なコレクション。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParent">
      <MemberSignature Language="C#" Value="public static System.Windows.DependencyObject GetParent (System.Windows.DependencyObject current);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.DependencyObject GetParent(class System.Windows.DependencyObject current) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LogicalTreeHelper.GetParent(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetParent (current As DependencyObject) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::DependencyObject ^ GetParent(System::Windows::DependencyObject ^ current);" />
      <MemberSignature Language="F#" Value="static member GetParent : System.Windows.DependencyObject -&gt; System.Windows.DependencyObject" Usage="System.Windows.LogicalTreeHelper.GetParent current" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="current" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="current">親オブジェクトを検索する対象となるオブジェクト。 これは、<see cref="T:System.Windows.FrameworkElement" /> または <see cref="T:System.Windows.FrameworkContentElement" /> である必要があります。</param>
        <summary>論理ツリーを処理して、指定したオブジェクトの親オブジェクトを返します。</summary>
        <returns>要求された親オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは単なるラッパー型の適切なバージョンを取得する (<xref:System.Windows.FrameworkElement>または<xref:System.Windows.FrameworkContentElement>) の<xref:System.Windows.FrameworkElement.Parent%2A?displayProperty=nameWithType>または<xref:System.Windows.FrameworkContentElement.Parent%2A?displayProperty=nameWithType>プロパティですこれを判断できない場合を除き、`current`型を、それぞれを確認するする可能性があります。代わりにインスタンスのプロパティ。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>