<Type Name="DependencyPropertyHelper" FullName="System.Windows.DependencyPropertyHelper">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1e94dc62c1036a5dc99a97e700747260431e77cd" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52192578" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class DependencyPropertyHelper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit DependencyPropertyHelper extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.DependencyPropertyHelper" />
  <TypeSignature Language="VB.NET" Value="Public Class DependencyPropertyHelper" />
  <TypeSignature Language="C++ CLI" Value="public ref class DependencyPropertyHelper abstract sealed" />
  <TypeSignature Language="F#" Value="type DependencyPropertyHelper = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>依存関係プロパティの有効値のプロパティ システムのソースを報告する単一のヘルパー メソッド (<see cref="M:System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />) を提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]プロパティ システムはかなり複雑にし、合理化する可能性のあるさまざまな確立されている値の決定の優先順位に基づいて、入力から取得した値に依存しています。 これらのソースがコンパイル済みのマークアップから、実行時のコードから取得される可能性がも、実行時のユーザー設定からでも依存関係プロパティの値のシステムでは、どの参加者にを呼び出すときに取得する値が確立されている正確に把握するのに役立ちますできるため<xref:System.Windows.DependencyObject.GetValue%2A>、そのプロパティの実行時にします。 値は、意図していたものよりも、別のソースを元に場合、は、アプリケーションの一部の側面を調整する必要があります。 値のソースには、スタイル、テーマ、ローカル値をアニメーション、バインディング、またはテーマやシステム リソースをシステムの設定など、実行時のベース値があります。 詳細については、「[依存関係プロパティ値の優先順位](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)」を参照してください。  
  
 オブジェクトのプロパティの特定のインスタンスではなく、プロパティに関する一般に、レポートを別のメカニズムは、プロパティのメタデータです。 呼び出してプロパティのメタデータが検索<xref:System.Windows.DependencyProperty.GetMetadata%2A>を調べて、返された<xref:System.Windows.PropertyMetadata>(または返されるプロパティのメタデータにキャストできるいくつかの可能な派生クラスのいずれか)。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetValueSource">
      <MemberSignature Language="C#" Value="public static System.Windows.ValueSource GetValueSource (System.Windows.DependencyObject dependencyObject, System.Windows.DependencyProperty dependencyProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.ValueSource GetValueSource(class System.Windows.DependencyObject dependencyObject, class System.Windows.DependencyProperty dependencyProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::ValueSource GetValueSource(System::Windows::DependencyObject ^ dependencyObject, System::Windows::DependencyProperty ^ dependencyProperty);" />
      <MemberSignature Language="F#" Value="static member GetValueSource : System.Windows.DependencyObject * System.Windows.DependencyProperty -&gt; System.Windows.ValueSource" Usage="System.Windows.DependencyPropertyHelper.GetValueSource (dependencyObject, dependencyProperty)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ValueSource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyObject" Type="System.Windows.DependencyObject" />
        <Parameter Name="dependencyProperty" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="dependencyObject">情報の報告対象である <paramref name="dependencyProperty" /> を含む要素。</param>
        <param name="dependencyProperty">情報を報告する依存関係プロパティの識別子。</param>
        <summary>特定の <see cref="T:System.Windows.DependencyObject" /> の指定した依存関係プロパティのさまざまなメタデータとプロパティ システム特性を報告する構造体を返します。</summary>
        <returns>固有の情報を報告する <see cref="T:System.Windows.ValueSource" /> 構造体。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プロパティ値の決定で遅延の参加者がプロパティに動作できるように、コンテキストでこのメソッドを呼び出す必要があります。 たとえば、バインドできない可能性があります、プロパティ上でアクティブな要素ツリー内のすべての参加要素が読み込まれると非同期のバインドが反映され、バインディング ソース オブジェクトが接続されている場合を除き、します。 同様に、すべての必要なテーマ ディクショナリなどのリソースを使用できます。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.ValueSource" />
      </Docs>
    </Member>
    <Member MemberName="IsTemplatedValueDynamic">
      <MemberSignature Language="C#" Value="public static bool IsTemplatedValueDynamic (System.Windows.DependencyObject elementInTemplate, System.Windows.DependencyProperty dependencyProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsTemplatedValueDynamic(class System.Windows.DependencyObject elementInTemplate, class System.Windows.DependencyProperty dependencyProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyPropertyHelper.IsTemplatedValueDynamic(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsTemplatedValueDynamic(System::Windows::DependencyObject ^ elementInTemplate, System::Windows::DependencyProperty ^ dependencyProperty);" />
      <MemberSignature Language="F#" Value="static member IsTemplatedValueDynamic : System.Windows.DependencyObject * System.Windows.DependencyProperty -&gt; bool" Usage="System.Windows.DependencyPropertyHelper.IsTemplatedValueDynamic (elementInTemplate, dependencyProperty)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementInTemplate" Type="System.Windows.DependencyObject" />
        <Parameter Name="dependencyProperty" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="elementInTemplate">テンプレート インスタンスに属している要素。</param>
        <param name="dependencyProperty">依存関係プロパティ。</param>
        <summary>指定した要素が、別の場所の変更に基づいて実行時に変わる可能性のある、指定したプロパティの値を定義するテンプレートのインスタンスに属するかどうかを示します。</summary>
        <returns>
          <paramref name="elementInTemplate" /> が別の場所の変更に基づいて実行時に変わる可能性のある、指定したプロパティの値を定義するテンプレートのインスタンスに属する場合は <see langword="true" />、それ以外の場合、<see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
別の場所の変更に基づいて実行時に変わる可能性のある値の例は、設定した値<xref:System.Windows.Data.Binding>、<xref:System.Windows.TemplateBindingExtension>と<xref:System.Windows.DynamicResourceExtension>オブジェクト。

この方法より詳細な情報の場合では、値、<xref:System.Windows.ValueSource.BaseValueSource?displayProperty=nameWithType>プロパティは<xref:System.Windows.BaseValueSource.ParentTemplate?displayProperty=nameWithType>します。
情報は、診断ツールを使用して、主にです。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>