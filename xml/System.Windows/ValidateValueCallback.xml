<Type Name="ValidateValueCallback" FullName="System.Windows.ValidateValueCallback">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ddf9d6c742bc770b4260c7a927add64dad411190" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37489433" /></Metadata><TypeSignature Language="C#" Value="public delegate bool ValidateValueCallback(object value);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ValidateValueCallback extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.ValidateValueCallback" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function ValidateValueCallback(value As Object) As Boolean " />
  <TypeSignature Language="C++ CLI" Value="public delegate bool ValidateValueCallback(System::Object ^ value);" />
  <TypeSignature Language="F#" Value="type ValidateValueCallback = delegate of obj -&gt; bool" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="value" Type="System.Object" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Boolean</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="value"><span data-ttu-id="c870d-101">検証する値。</span><span class="sxs-lookup"><span data-stu-id="c870d-101">The value to be validated.</span></span></param>
    <summary><span data-ttu-id="c870d-102">依存関係プロパティの有効な値を検証するコールバックとして使用されるメソッドを表します。</span><span class="sxs-lookup"><span data-stu-id="c870d-102">Represents a method used as a callback that validates the effective value of a  dependency property.</span></span></summary>
    <returns><span data-ttu-id="c870d-103">値が検証された場合は <see langword="true" />。送信された値が無効である場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c870d-103"><see langword="true" /> if the value was validated; <see langword="false" /> if the submitted value was invalid.</span></span></returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c870d-104">このデリゲートに基づくのコールバックを使用して特定の署名の<xref:System.Windows.DependencyProperty.Register%2A?displayProperty=nameWithType>などのメソッドに関連する<xref:System.Windows.DependencyProperty.RegisterAttached%2A>と対応する読み取り専用とします。</span><span class="sxs-lookup"><span data-stu-id="c870d-104">Callbacks based on this delegate are used by certain signatures of <xref:System.Windows.DependencyProperty.Register%2A?displayProperty=nameWithType> and related methods, such as <xref:System.Windows.DependencyProperty.RegisterAttached%2A> and read-only equivalents.</span></span> <span data-ttu-id="c870d-105">受け取るシグネチャを使用する必要があります、`validateValueCallback`たびにその日が設定されているプロパティの値の特定の検証が必要な場合は、パラメーター。</span><span class="sxs-lookup"><span data-stu-id="c870d-105">You should use signatures that take the `validateValueCallback` parameter if you want specific validation of the property value each time that its effective is set.</span></span> <span data-ttu-id="c870d-106">提案された値の実際の検証を実行するよう、このコールバックを実装する必要があります。</span><span class="sxs-lookup"><span data-stu-id="c870d-106">You should then implement this callback such that it performs the actual validation of the proposed value.</span></span> <span data-ttu-id="c870d-107">コールバック`true`コールバックに送信された値が、有効な場合と`false`それ以外の場合。</span><span class="sxs-lookup"><span data-stu-id="c870d-107">The callback should return `true` if the value submitted to the callback is valid, and `false` otherwise.</span></span> <span data-ttu-id="c870d-108">A`false`値これらの例外を処理するために、アプリケーションを準備する必要がありますので、無効なプロパティ セットが試行された、プロパティ システムの特定の部分で例外が生成されます。</span><span class="sxs-lookup"><span data-stu-id="c870d-108">A `false` value will produce an exception in the specific portion of the property system where the invalid property set was attempted, so your application should be prepared to handle these exceptions.</span></span>  
  
 <span data-ttu-id="c870d-109">検証コールバックは、依存関係プロパティ メタデータではなく、依存関係プロパティ識別子に格納されます。</span><span class="sxs-lookup"><span data-stu-id="c870d-109">Validation callbacks are stored on dependency property identifiers, rather than dependency property metadata.</span></span> <span data-ttu-id="c870d-110">検証コールバックには、特定のインスタンスへのアクセスはありません、<xref:System.Windows.DependencyObject>は、プロパティを設定するとのみに影響を与えるプロパティはどのような値が一般に受け入れられます。</span><span class="sxs-lookup"><span data-stu-id="c870d-110">Your validation callback does not have access to a specific instance of a <xref:System.Windows.DependencyObject> on which the property is set, and can only influence what values are accepted for the property in general.</span></span> <span data-ttu-id="c870d-111">特定のインスタンスに基づいてプロパティ値を変更できるコールバックが必要な場合は、組み合わせを使用する必要があります、<xref:System.Windows.CoerceValueCallback>と<xref:System.Windows.PropertyChangedCallback>プロパティのプロパティのメタデータに適用されるコールバック。</span><span class="sxs-lookup"><span data-stu-id="c870d-111">If you need a callback that can change property values based on a specific instance, you should use a combination of a <xref:System.Windows.CoerceValueCallback> and <xref:System.Windows.PropertyChangedCallback> callbacks as applied to the property metadata of your property.</span></span> <span data-ttu-id="c870d-112">これらのコールバックは、関連するプロパティに影響を及ぼすプロパティの値にも適用可能性があります。</span><span class="sxs-lookup"><span data-stu-id="c870d-112">You might also apply these callbacks to related properties that should influence your property's value.</span></span> <span data-ttu-id="c870d-113">詳細については、次を参照してください。[依存関係プロパティのコールバックと検証](~/docs/framework/wpf/advanced/dependency-property-callbacks-and-validation.md)です。</span><span class="sxs-lookup"><span data-stu-id="c870d-113">For details, see [Dependency Property Callbacks and Validation](~/docs/framework/wpf/advanced/dependency-property-callbacks-and-validation.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c870d-114">次の例には、カスタム依存関係プロパティの値の範囲を検証するには、このコールバックの実装が含まれます。</span><span class="sxs-lookup"><span data-stu-id="c870d-114">The following example includes an implementation of this callback to validate a range of values for a custom dependency property.</span></span> <span data-ttu-id="c870d-115">ここで、プロパティ値が列挙体が必要ですし、検証により、指定された値がその列挙体のメンバーに評価されます。</span><span class="sxs-lookup"><span data-stu-id="c870d-115">In this case the property value expects an enumeration, and the validation assures that the provided value evaluates to a member of that enumeration.</span></span>  
  
 [!code-csharp[DPCustom#ValidateValueCallback](~/samples/snippets/csharp/VS_Snippets_Wpf/DPCustom/CSharp/default.xaml.cs#validatevaluecallback)]
 [!code-vb[DPCustom#ValidateValueCallback](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DPCustom/visualbasic/default.xaml.vb#validatevaluecallback)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.DependencyProperty" />
  </Docs>
</Type>