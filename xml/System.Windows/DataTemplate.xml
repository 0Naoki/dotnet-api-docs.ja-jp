<Type Name="DataTemplate" FullName="System.Windows.DataTemplate">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cffbeb8fcc8f02b552d5ae620f2af8c77273c146" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30678656" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataTemplate : System.Windows.FrameworkTemplate" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataTemplate extends System.Windows.FrameworkTemplate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.DataTemplate" />
  <TypeSignature Language="VB.NET" Value="Public Class DataTemplate&#xA;Inherits FrameworkTemplate" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataTemplate : System::Windows::FrameworkTemplate" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.FrameworkTemplate</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.DictionaryKeyProperty("DataTemplateKey")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="2c515-101">データ オブジェクトのビジュアル構造を記述します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="2c515-101">Describes the visual structure of a data object.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c515-102">使用する、<xref:System.Windows.DataTemplate>データ オブジェクトの視覚エフェクトを指定します。</span><span class="sxs-lookup"><span data-stu-id="2c515-102">You use a <xref:System.Windows.DataTemplate> to specify the visualization of your data objects.</span></span> <span data-ttu-id="2c515-103"><xref:System.Windows.DataTemplate> バインドするときに、オブジェクトが特に便利ですが、<xref:System.Windows.Controls.ItemsControl>など、<xref:System.Windows.Controls.ListBox>コレクション全体にします。</span><span class="sxs-lookup"><span data-stu-id="2c515-103"><xref:System.Windows.DataTemplate> objects are particularly useful when you are binding an <xref:System.Windows.Controls.ItemsControl> such as a <xref:System.Windows.Controls.ListBox> to an entire collection.</span></span> <span data-ttu-id="2c515-104">詳細については、なし、<xref:System.Windows.Controls.ListBox>コレクション内のオブジェクトの文字列形式を表示します。</span><span class="sxs-lookup"><span data-stu-id="2c515-104">Without specific instructions, a <xref:System.Windows.Controls.ListBox> displays the string representation of the objects in a collection.</span></span> <span data-ttu-id="2c515-105">その場合は、使用することができます、<xref:System.Windows.DataTemplate>データ オブジェクトの外観を定義します。</span><span class="sxs-lookup"><span data-stu-id="2c515-105">In that case, you can use a <xref:System.Windows.DataTemplate> to define the appearance of your data objects.</span></span> <span data-ttu-id="2c515-106">内容、<xref:System.Windows.DataTemplate>データ オブジェクトの視覚的な構造になります。</span><span class="sxs-lookup"><span data-stu-id="2c515-106">The content of your <xref:System.Windows.DataTemplate> becomes the visual structure of your data objects.</span></span>  
  
 <span data-ttu-id="2c515-107">詳細については、次を参照してください。[データ テンプレートの概要](~/docs/framework/wpf/data/data-templating-overview.md)です。</span><span class="sxs-lookup"><span data-stu-id="2c515-107">For an in-depth discussion, see [Data Templating Overview](~/docs/framework/wpf/data/data-templating-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2c515-108">次の例を作成する方法を示しています、<xref:System.Windows.DataTemplate>インラインです。</span><span class="sxs-lookup"><span data-stu-id="2c515-108">The following example shows how to create a <xref:System.Windows.DataTemplate> inline.</span></span> <span data-ttu-id="2c515-109"><xref:System.Windows.DataTemplate> 3 つの各データ項目が表示されるように指定<xref:System.Windows.Controls.TextBlock>内の要素、<xref:System.Windows.Controls.StackPanel>です。</span><span class="sxs-lookup"><span data-stu-id="2c515-109">The <xref:System.Windows.DataTemplate> specifies that each data item appears as three <xref:System.Windows.Controls.TextBlock> elements within a <xref:System.Windows.Controls.StackPanel>.</span></span> <span data-ttu-id="2c515-110">この例では、データ オブジェクトと呼ばれるクラス`Task`です。</span><span class="sxs-lookup"><span data-stu-id="2c515-110">In this example, the data object is a class called `Task`.</span></span> <span data-ttu-id="2c515-111"><xref:System.Windows.Controls.TextBlock>のプロパティにこのテンプレート内の要素がバインドされている、`Task`クラスです。</span><span class="sxs-lookup"><span data-stu-id="2c515-111">Note that each <xref:System.Windows.Controls.TextBlock> element in this template is bound to a property of the `Task` class.</span></span>  
  
 [!code-xaml[DataTemplatingIntro_snip#Inline](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/Window1.xaml#inline)]  
  
 <span data-ttu-id="2c515-112">定義する方が一般的な<xref:System.Windows.DataTemplate>で次の例のように、再利用可能なオブジェクトにするためのリソース セクション。</span><span class="sxs-lookup"><span data-stu-id="2c515-112">It is more common to define a <xref:System.Windows.DataTemplate> in the resources section so it can be a reusable object, as in the following example:</span></span>  
  
 [!code-xaml[DataTemplatingIntro_snip#R1](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/Window1.xaml#r1)]  
[!code-xaml[DataTemplatingIntro_snip#AsResource](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/Window1.xaml#asresource)]  
[!code-xaml[DataTemplatingIntro_snip#R2](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/Window1.xaml#r2)]  
  
 <span data-ttu-id="2c515-113">これで、次の例のように、`myTaskTemplate` をリソースとして使用できるようになります。</span><span class="sxs-lookup"><span data-stu-id="2c515-113">Now you can use `myTaskTemplate` as a resource, as in the following example:</span></span>  
  
 [!code-xaml[DataTemplatingIntro_snip#MyTaskTemplate](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/Window1.xaml#mytasktemplate)]  
  
 <span data-ttu-id="2c515-114">完全なサンプルについては、「[Introduction to Data Templating Sample](http://go.microsoft.com/fwlink/?LinkID=160009)」(データ テンプレート サンプルの概要) をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="2c515-114">For the complete sample, see [Introduction to Data Templating Sample](http://go.microsoft.com/fwlink/?LinkID=160009).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Data.Binding" />
    <altmember cref="T:System.Windows.Controls.DataTemplateSelector" />
    <altmember cref="T:System.Windows.HierarchicalDataTemplate" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2c515-115">
            <see cref="T:System.Windows.DataTemplate" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c515-115">Initializes a new instance of the <see cref="T:System.Windows.DataTemplate" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataTemplate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataTemplate.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataTemplate();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2c515-116">
            <see cref="T:System.Windows.DataTemplate" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c515-116">Initializes a new instance of the <see cref="T:System.Windows.DataTemplate" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataTemplate (object dataType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object dataType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataTemplate.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dataType As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataTemplate(System::Object ^ dataType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dataType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dataType">
          <span data-ttu-id="2c515-117">テンプレートがオブジェクト データ用である場合、これはデータ オブジェクトの Type 名です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c515-117">If the template is intended for object data, this is the Type name of the data object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2c515-118">指定した <see cref="T:System.Windows.DataTemplate" /> プロパティを使用して、<see cref="P:System.Windows.DataTemplate.DataType" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c515-118">Initializes a new instance of the <see cref="T:System.Windows.DataTemplate" /> class with the specified <see cref="P:System.Windows.DataTemplate.DataType" /> property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c515-119">クラスの型名、参照を使用して、 [X:type マークアップ拡張機能](~/docs/framework/xaml-services/x-type-markup-extension.md)します。</span><span class="sxs-lookup"><span data-stu-id="2c515-119">To refer to the Type name of the class, use the [x:Type Markup Extension](~/docs/framework/xaml-services/x-type-markup-extension.md).</span></span> <span data-ttu-id="2c515-120">テンプレートを使用する場合[!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)]データ、これは、データのタグ名を表す文字列。</span><span class="sxs-lookup"><span data-stu-id="2c515-120">If the template is intended for [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] data, this is the string that represents the tag name of the data.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataTemplateKey">
      <MemberSignature Language="C#" Value="public object DataTemplateKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataTemplateKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.DataTemplate.DataTemplateKey" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataTemplateKey As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DataTemplateKey { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2c515-121">
            <see cref="T:System.Windows.DataTemplate" /> の既定のキーを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c515-121">Gets the default key of the <see cref="T:System.Windows.DataTemplate" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2c515-122">
            <see cref="T:System.Windows.DataTemplate" /> の既定のキー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c515-122">The default key of the <see cref="T:System.Windows.DataTemplate" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c515-123">設定しない場合、 [X:key ディレクティブ](~/docs/framework/xaml-services/x-key-directive.md)上、<xref:System.Windows.DataTemplate>内にある、 <xref:System.Windows.ResourceDictionary>、<xref:System.Windows.DataTemplate.DataTemplateKey%2A>キーとして使用します。</span><span class="sxs-lookup"><span data-stu-id="2c515-123">If you do not set the [x:Key Directive](~/docs/framework/xaml-services/x-key-directive.md) on a <xref:System.Windows.DataTemplate> that is in a <xref:System.Windows.ResourceDictionary>, the <xref:System.Windows.DataTemplate.DataTemplateKey%2A> is used as the key.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataType">
      <MemberSignature Language="C#" Value="public object DataType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.DataTemplate.DataType" />
      <MemberSignature Language="VB.NET" Value="Public Property DataType As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DataType { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Markup.Ambient</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2c515-124">この <see cref="T:System.Windows.DataTemplate" /> が対象としている型を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c515-124">Gets or sets the type for which this <see cref="T:System.Windows.DataTemplate" /> is intended.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2c515-125">既定値は <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c515-125">The default value is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c515-126">このプロパティとよく似ています、<xref:System.Windows.Style.TargetType%2A>のプロパティ、<xref:System.Windows.Style>クラスです。</span><span class="sxs-lookup"><span data-stu-id="2c515-126">This property is very similar to the <xref:System.Windows.Style.TargetType%2A> property of the <xref:System.Windows.Style> class.</span></span> <span data-ttu-id="2c515-127">ときにこのプロパティを設定するデータ型を指定せず、 `x:Key`、<xref:System.Windows.DataTemplate>その種類のデータ オブジェクトに自動的に適用されます。</span><span class="sxs-lookup"><span data-stu-id="2c515-127">When you set this property to the data type without specifying an `x:Key`, the <xref:System.Windows.DataTemplate> gets applied automatically to data objects of that type.</span></span> <span data-ttu-id="2c515-128">実行すると、`x:Key`が暗黙的に設定します。</span><span class="sxs-lookup"><span data-stu-id="2c515-128">Note that when you do that the `x:Key` is set implicitly.</span></span> <span data-ttu-id="2c515-129">そのため、これを割り当てる場合<xref:System.Windows.DataTemplate>、`x:Key`値、暗黙的なをオーバーライドする`x:Key`と<xref:System.Windows.DataTemplate>自動的には適用されません。</span><span class="sxs-lookup"><span data-stu-id="2c515-129">Therefore, if you assign this <xref:System.Windows.DataTemplate> an `x:Key` value, you are overriding the implicit `x:Key` and the <xref:System.Windows.DataTemplate> would not be applied automatically.</span></span>  
  
 <span data-ttu-id="2c515-130">なおをバインドする場合、<xref:System.Windows.Controls.ContentControl>のコレクションに`Task`、オブジェクト、<xref:System.Windows.Controls.ContentControl>使用しない、<xref:System.Windows.DataTemplate>自動的にします。</span><span class="sxs-lookup"><span data-stu-id="2c515-130">Also note that if you are binding a <xref:System.Windows.Controls.ContentControl> to a collection of `Task` objects, the <xref:System.Windows.Controls.ContentControl> does not use the <xref:System.Windows.DataTemplate> automatically.</span></span> <span data-ttu-id="2c515-131">これは、ためのバインドに、<xref:System.Windows.Controls.ContentControl>詳細については、全体のコレクションまたは個々 のオブジェクトにバインドするかどうかを区別する必要があります。</span><span class="sxs-lookup"><span data-stu-id="2c515-131">This is because the binding on a <xref:System.Windows.Controls.ContentControl> needs more information to distinguish whether you want to bind to an entire collection or the individual objects.</span></span> <span data-ttu-id="2c515-132">場合、<xref:System.Windows.Controls.ContentControl>の選択の追跡は、<xref:System.Windows.Controls.ItemsControl>の種類を設定できます、<xref:System.Windows.Data.Binding.Path%2A>のプロパティ、<xref:System.Windows.Controls.ContentControl>へのバインド"`/`"を現在のアイテムを興味のあることを示します。</span><span class="sxs-lookup"><span data-stu-id="2c515-132">If your <xref:System.Windows.Controls.ContentControl> is tracking the selection of an <xref:System.Windows.Controls.ItemsControl> type, you can set the <xref:System.Windows.Data.Binding.Path%2A> property of the <xref:System.Windows.Controls.ContentControl> binding to "`/`" to indicate that you are interested in the current item.</span></span> <span data-ttu-id="2c515-133">例については、次を参照してください。[する方法: コレクションと選択内容に基づいて情報を表示するバインド](~/docs/framework/wpf/data/how-to-bind-to-a-collection-and-display-information-based-on-selection.md)です。</span><span class="sxs-lookup"><span data-stu-id="2c515-133">For an example, see [How to: Bind to a Collection and Display Information Based on Selection](~/docs/framework/wpf/data/how-to-bind-to-a-collection-and-display-information-based-on-selection.md).</span></span> <span data-ttu-id="2c515-134">それ以外の場合、指定する必要があります、<xref:System.Windows.DataTemplate>設定して明示的に、<xref:System.Windows.Controls.ContentControl.ContentTemplate%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="2c515-134">Otherwise, you need to specify the <xref:System.Windows.DataTemplate> explicitly by setting the <xref:System.Windows.Controls.ContentControl.ContentTemplate%2A> property.</span></span>  
  
 <span data-ttu-id="2c515-135"><xref:System.Windows.DataTemplate.DataType%2A>がある場合、プロパティが特に便利ですが、<xref:System.Windows.Data.CompositeCollection>さまざまな種類のデータ オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="2c515-135">The <xref:System.Windows.DataTemplate.DataType%2A> property is particularly useful when you have a <xref:System.Windows.Data.CompositeCollection> of different types of data objects.</span></span>  
  
 <span data-ttu-id="2c515-136">このプロパティは、既定の名前空間に含まれていない XML 要素をターゲットとする場合、名前空間、名前空間の指定子を持つ要素名の前する必要があります。</span><span class="sxs-lookup"><span data-stu-id="2c515-136">If this property targets an XML element that is not in the default namespace, you must precede the element name with the namespace or a namespace designator.</span></span> <span data-ttu-id="2c515-137">XML 用に LINQ を通じて公開される xml では、かっこをエスケープ シーケンスの前に、中かっこで名前空間が表示されます。</span><span class="sxs-lookup"><span data-stu-id="2c515-137">For XML exposed through LINQ for XML, the namespace appears in braces, preceded by a brace escape sequence:</span></span>  
  
```xaml  
<DataTemplate DataType="{}{http://myNamespace}Details">  
```  
  
 <span data-ttu-id="2c515-138">インスタンスによって確立された名前空間の指定子によって、要素名の前に XPath を介して公開される xml、 <xref:System.Windows.Data.XmlNamespaceMapping>:</span><span class="sxs-lookup"><span data-stu-id="2c515-138">For XML exposed through XPath, the element name is preceded by a namespace designator established by an instance of <xref:System.Windows.Data.XmlNamespaceMapping>:</span></span>  
  
```xaml  
<DataTemplate DataType="mn:Details">  
```  
  
<a name="xamlAttributeUsage_DataType"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="2c515-139">XAML 属性の使用方法</span><span class="sxs-lookup"><span data-stu-id="2c515-139">XAML Attribute Usage</span></span>  
  
```  
<object DataType="typeName"/>  
```  
  
<a name="xamlValues_DataType"></a>   
## <a name="xaml-values"></a><span data-ttu-id="2c515-140">XAML 値</span><span class="sxs-lookup"><span data-stu-id="2c515-140">XAML Values</span></span>  
 <span data-ttu-id="2c515-141">*typeName*</span><span class="sxs-lookup"><span data-stu-id="2c515-141">*typeName*</span></span>  
 <span data-ttu-id="2c515-142">テンプレートはオブジェクトのデータとしている場合、このプロパティは、(文字列) として、データ オブジェクトの型名を表します。</span><span class="sxs-lookup"><span data-stu-id="2c515-142">If the template is intended for object data, this property contains the type name of the data object (as a string).</span></span> <span data-ttu-id="2c515-143">クラスの型名、参照を使用して、 [X:type マークアップ拡張機能](~/docs/framework/xaml-services/x-type-markup-extension.md)します。</span><span class="sxs-lookup"><span data-stu-id="2c515-143">To refer to the type name of the class, use the [x:Type Markup Extension](~/docs/framework/xaml-services/x-type-markup-extension.md).</span></span> <span data-ttu-id="2c515-144">テンプレートを使用する場合[!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)]データ、このプロパティには、XML 要素名が含まれています。</span><span class="sxs-lookup"><span data-stu-id="2c515-144">If the template is intended for [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] data, this property contains the XML element name.</span></span> <span data-ttu-id="2c515-145">XML 要素の既定以外の名前空間の指定に関する詳細については、ドキュメントの解説を参照してください。</span><span class="sxs-lookup"><span data-stu-id="2c515-145">See the documentation remarks for details about specifying a non-default namespace for the XML element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Triggers">
      <MemberSignature Language="C#" Value="public System.Windows.TriggerCollection Triggers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.TriggerCollection Triggers" />
      <MemberSignature Language="DocId" Value="P:System.Windows.DataTemplate.Triggers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Triggers As TriggerCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::TriggerCollection ^ Triggers { System::Windows::TriggerCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Markup.DependsOn("VisualTree")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Markup.DependsOn("Template")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.TriggerCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2c515-146">プロパティ値を適用するトリガー、または 1 つ以上の条件に基づいてアクションを実行するトリガーのコレクションを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c515-146">Gets a collection of triggers that apply property values or perform actions based on one or more conditions.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2c515-147">トリガー オブジェクトのコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c515-147">A collection of trigger objects.</span>
          </span>
          <span data-ttu-id="2c515-148">既定値は <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c515-148">The default value is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c515-149">データ テンプレート内でトリガーを作成する場合、トリガーの set アクセス操作子プロパティを設定、データ テンプレートのスコープ内にあります。</span><span class="sxs-lookup"><span data-stu-id="2c515-149">If you are creating triggers within a data template, the setters of the triggers should be setting properties that are within the scope of the data template.</span></span> <span data-ttu-id="2c515-150">それ以外の場合、データを含む型を対象とするスタイルを使用してトリガーを作成するのには適切な場合があります。</span><span class="sxs-lookup"><span data-stu-id="2c515-150">Otherwise, it may be more suitable to create triggers using a style that targets the type that contains the data.</span></span> <span data-ttu-id="2c515-151">バインドする場合など、 <xref:System.Windows.Controls.ListBox> 、コンテナーは、コントロール、<xref:System.Windows.Controls.ListBoxItem>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="2c515-151">For example, if you are binding a <xref:System.Windows.Controls.ListBox> control, the containers are <xref:System.Windows.Controls.ListBoxItem> objects.</span></span> <span data-ttu-id="2c515-152">スコープ内ではないプロパティを設定するトリガーを使用している場合、 <xref:System.Windows.DataTemplate>、作成する適切な場合があります、<xref:System.Windows.Controls.ListBoxItem>スタイルを設定し、そのスタイル内でトリガーを作成します。</span><span class="sxs-lookup"><span data-stu-id="2c515-152">If you are using triggers to set properties that are not within the scope of the <xref:System.Windows.DataTemplate>, then it may be more suitable to create a <xref:System.Windows.Controls.ListBoxItem> style and create triggers within that style.</span></span> <span data-ttu-id="2c515-153">詳細については、DataTemplate に属している新機能を参照してくださいしますか。[データ テンプレートの概要](~/docs/framework/wpf/data/data-templating-overview.md)です。</span><span class="sxs-lookup"><span data-stu-id="2c515-153">For more information, see What Belongs in a DataTemplate? in the [Data Templating Overview](~/docs/framework/wpf/data/data-templating-overview.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2c515-154">このプロパティのみ設定できます[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]に示すコレクション構文を使用して、またはコレクション オブジェクトにアクセスして追加などのさまざまなメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="2c515-154">This property can only be set in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] via the collection syntax shown, or by accessing the collection object and using its various methods such as Add.</span></span> <span data-ttu-id="2c515-155">コレクション オブジェクト自体にアクセスするプロパティは読み取り専用で、コレクション自体は読み取り/書き込みです。</span><span class="sxs-lookup"><span data-stu-id="2c515-155">The property to access the collection object itself is read-only, the collection itself is read-write.</span></span>  
  
<a name="xamlPropertyElementUsage_Triggers"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="2c515-156">XAML プロパティ要素の使用</span><span class="sxs-lookup"><span data-stu-id="2c515-156">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <object.Triggers>  
    OneOrMoreTriggers  
  </object.Triggers>  
</object>  
```  
  
<a name="xamlValues_Triggers"></a>   
## <a name="xaml-values"></a><span data-ttu-id="2c515-157">XAML 値</span><span class="sxs-lookup"><span data-stu-id="2c515-157">XAML Values</span></span>  
 <span data-ttu-id="2c515-158">*OneOrMoreTriggers*</span><span class="sxs-lookup"><span data-stu-id="2c515-158">*OneOrMoreTriggers*</span></span>  
 <span data-ttu-id="2c515-159">0 個以上<xref:System.Windows.TriggerBase>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="2c515-159">Zero or more <xref:System.Windows.TriggerBase> objects.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2c515-160">次<xref:System.Windows.DataTemplate>の使用例を示します、<xref:System.Windows.DataTemplate.Triggers%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="2c515-160">The following <xref:System.Windows.DataTemplate> demonstrates the use of the <xref:System.Windows.DataTemplate.Triggers%2A> property.</span></span>  
  
 [!code-xaml[DataBindingLab#AuctionItemDataTemplate](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/DataBindingLabApp.xaml#auctionitemdatatemplate)]  
  
 <span data-ttu-id="2c515-161">サンプル全体については、次を参照してください。[データ バインディング デモ](http://go.microsoft.com/fwlink/?LinkID=163703)です。</span><span class="sxs-lookup"><span data-stu-id="2c515-161">For the complete sample, see [Data Binding Demo](http://go.microsoft.com/fwlink/?LinkID=163703).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.DataTrigger" />
        <altmember cref="T:System.Windows.MultiDataTrigger" />
      </Docs>
    </Member>
    <Member MemberName="ValidateTemplatedParent">
      <MemberSignature Language="C#" Value="protected override void ValidateTemplatedParent (System.Windows.FrameworkElement templatedParent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ValidateTemplatedParent(class System.Windows.FrameworkElement templatedParent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataTemplate.ValidateTemplatedParent(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ValidateTemplatedParent (templatedParent As FrameworkElement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ValidateTemplatedParent(System::Windows::FrameworkElement ^ templatedParent);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="templatedParent" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="templatedParent">
          <span data-ttu-id="2c515-162">このテンプレートが適用される要素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c515-162">The element this template is applied to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2c515-163">規則のセットに対してテンプレートが適用される親をチェックします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c515-163">Checks the templated parent against a set of rules.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c515-164">メソッドは、次の規則を使用します。</span><span class="sxs-lookup"><span data-stu-id="2c515-164">The method uses the following rules:</span></span>  
  
-   <span data-ttu-id="2c515-165">`templatedParent` Null 以外にする必要があります<xref:System.Windows.FrameworkElement>です。</span><span class="sxs-lookup"><span data-stu-id="2c515-165">The `templatedParent` must be a non-null <xref:System.Windows.FrameworkElement>.</span></span>  
  
-   <span data-ttu-id="2c515-166"><xref:System.Windows.DataTemplate>に適用する必要があります、<xref:System.Windows.Controls.ContentPresenter>です。</span><span class="sxs-lookup"><span data-stu-id="2c515-166">The <xref:System.Windows.DataTemplate> must be applied to a <xref:System.Windows.Controls.ContentPresenter>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>