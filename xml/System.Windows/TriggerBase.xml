<Type Name="TriggerBase" FullName="System.Windows.TriggerBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c3f9758d8b864c6c890c2624c5249e6cbf359e78" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70697204" /></Metadata><TypeSignature Language="C#" Value="public abstract class TriggerBase : System.Windows.DependencyObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TriggerBase extends System.Windows.DependencyObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.TriggerBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TriggerBase&#xA;Inherits DependencyObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class TriggerBase abstract : System::Windows::DependencyObject" />
  <TypeSignature Language="F#" Value="type TriggerBase = class&#xA;    inherit DependencyObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><see cref="T:System.Windows.Style" /> オブジェクト内の条件値を指定するための基本クラスを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 スタイルとテンプレートモデルを使用すると、 <xref:System.Windows.Controls.ControlTemplate>、、および<xref:System.Windows.Style> <xref:System.Windows.DataTemplate>内でトリガーを指定できます。 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 基本的に<xref:System.Windows.TriggerBase> 、は、特定の条件 (特定のプロパティ`true`値が発生したときやイベントが発生したときなど) が満たされたときに変更を適用できるようにするオブジェクトの基本クラスです。  
  
   
  
## Examples  
 トリガー <xref:System.Windows.Trigger> <xref:System.Windows.DataTrigger>には <xref:System.Windows.MultiDataTrigger> 、、、 、、およびのさまざまな種類があります。 <xref:System.Windows.EventTrigger>  <xref:System.Windows.MultiTrigger>  
  
 <xref:System.Windows.Trigger>クラスは、最も単純なトリガーの種類です。 オブジェクト<xref:System.Windows.Trigger>を使用すると、プロパティの値に基づいて変更を適用できます。 たとえば、次の例は、 <xref:System.Windows.Style> <xref:System.Windows.Controls.Button>コントロールで使用できるという名前のを示しています。 は<xref:System.Windows.Style> 、 <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A>プロパティ<xref:System.Windows.Trigger> <xref:System.Windows.Controls.Control.Foreground%2A>がの `true` 場合に、ボタンのプロパティを変更する要素を定義します。  
  
 [!code-xaml[BtnStyles#2](~/samples/snippets/csharp/VS_Snippets_Wpf/BtnStyles/CS/app.xaml#2)]  
  
 複数のプロパティの状態に基づいて変更を適用する必要がある場合は、 <xref:System.Windows.MultiTrigger>を使用できます。 例については、 <xref:System.Windows.MultiTrigger> 「」ページを参照してください。  
  
 クラス<xref:System.Windows.EventTrigger>を使用すると、イベントの発生時に変更を適用できます。 次の例には<xref:System.Windows.EventTrigger> 、2つのオブジェクトが含まれています。1つはマウスが要素に入ったときに発生し、もう1つはマウスが要素から離れたときに発生します。  
  
 [!code-xaml[StyleEventTriggerAnimation#EventTriggerSnippet](~/samples/snippets/csharp/VS_Snippets_Wpf/StyleEventTriggerAnimation/CS/Default.xaml#eventtriggersnippet)]
  
 これらは、 <xref:System.Windows.MultiDataTrigger>クラス<xref:System.Windows.DataTrigger>およびクラスでもあります。 これらは、データ<xref:System.Windows.Trigger>バインド<xref:System.Windows.MultiTrigger>されたプロパティ用であることを除いて、およびに似ています。  
  
 ]]></format>
    </remarks>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160010">スタイルとテンプレートのサンプルの概要</related>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160009">データテンプレートサンプルの概要</related>
  </Docs>
  <Members>
    <Member MemberName="EnterActions">
      <MemberSignature Language="C#" Value="public System.Windows.TriggerActionCollection EnterActions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.TriggerActionCollection EnterActions" />
      <MemberSignature Language="DocId" Value="P:System.Windows.TriggerBase.EnterActions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EnterActions As TriggerActionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::TriggerActionCollection ^ EnterActions { System::Windows::TriggerActionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EnterActions : System.Windows.TriggerActionCollection" Usage="System.Windows.TriggerBase.EnterActions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.TriggerActionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>トリガー オブジェクトがアクティブになったときに適用する <see cref="T:System.Windows.TriggerAction" /> オブジェクトのコレクションを取得します。 このプロパティは <see cref="T:System.Windows.EventTrigger" /> クラスには適用されません。</summary>
        <value>既定値は <see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントは特定の<xref:System.Windows.EventTrigger> <xref:System.Windows.TriggerBase.EnterActions%2A>時点を表し、はオブジェクトの状態に対応して<xref:System.Windows.TriggerBase.ExitActions%2A>いるため、このプロパティはクラスには適用されません。 オブジェクト<xref:System.Windows.EventTrigger>の場合は、 <xref:System.Windows.EventTrigger.Actions%2A>代わりにプロパティを使用します。  
  
> [!NOTE]
>  このプロパティを設定できるの[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]は、表示されているコレクション構文を使用するか、コレクションオブジェクトにアクセスし、追加のようなさまざまなメソッドを使用することです。 コレクションオブジェクト自体にアクセスするプロパティは読み取り専用で、コレクション自体は読み取り/書き込み可能です。  
  
<a name="xamlPropertyElementUsage_EnterActions"></a>   
## <a name="xaml-property-element-usage"></a>XAML プロパティ要素の使用  
  
```  
<object>  
  <object.EnterActions>  
    OneOrMoreTriggerActions  
  </object.EnterActions >  
</object>  
```  
  
<a name="xamlValues_EnterActions"></a>   
## <a name="xaml-values"></a>XAML 値  
 *OneOrMoreTriggerActions*  
 1つ以上のオブジェクト。 <xref:System.Windows.TriggerAction>  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160010">スタイルとテンプレートのサンプルの概要</related>
      </Docs>
    </Member>
    <Member MemberName="ExitActions">
      <MemberSignature Language="C#" Value="public System.Windows.TriggerActionCollection ExitActions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.TriggerActionCollection ExitActions" />
      <MemberSignature Language="DocId" Value="P:System.Windows.TriggerBase.ExitActions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExitActions As TriggerActionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::TriggerActionCollection ^ ExitActions { System::Windows::TriggerActionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ExitActions : System.Windows.TriggerActionCollection" Usage="System.Windows.TriggerBase.ExitActions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.TriggerActionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>トリガー オブジェクトが非アクティブになったときに適用する <see cref="T:System.Windows.TriggerAction" /> オブジェクトのコレクションを取得します。 このプロパティは <see cref="T:System.Windows.EventTrigger" /> クラスには適用されません。</summary>
        <value>既定値は <see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントは特定の<xref:System.Windows.EventTrigger> <xref:System.Windows.TriggerBase.EnterActions%2A>時点を表し、はオブジェクトの状態に対応して<xref:System.Windows.TriggerBase.ExitActions%2A>いるため、このプロパティはクラスには適用されません。 オブジェクト<xref:System.Windows.EventTrigger>の場合は、 <xref:System.Windows.EventTrigger.Actions%2A>代わりにプロパティを使用します。  
  
> [!NOTE]
>  このプロパティを設定できるの[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]は、表示されているコレクション構文を使用するか、コレクションオブジェクトにアクセスし、追加のようなさまざまなメソッドを使用することです。 コレクションオブジェクト自体にアクセスするプロパティは読み取り専用で、コレクション自体は読み取り/書き込み可能です。  
  
<a name="xamlPropertyElementUsage_ExitActions"></a>   
## <a name="xaml-property-element-usage"></a>XAML プロパティ要素の使用  
  
```  
<object>  
  <object.ExitActions>  
    OneOrMoreTriggerActions  
  </object.ExitActions >  
</object>  
```  
  
<a name="xamlValues_ExitActions"></a>   
## <a name="xaml-values"></a>XAML 値  
 *OneOrMoreTriggerActions*  
 1つ以上のオブジェクト。 <xref:System.Windows.TriggerAction>  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160010">スタイルとテンプレートのサンプルの概要</related>
      </Docs>
    </Member>
  </Members>
</Type>
