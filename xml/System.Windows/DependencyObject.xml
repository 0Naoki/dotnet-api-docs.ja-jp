<Type Name="DependencyObject" FullName="System.Windows.DependencyObject">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b20096950e5ef29b8ab06fba5406a44bbc3ff7f2" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36461256" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DependencyObject : System.Windows.Threading.DispatcherObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DependencyObject extends System.Windows.Threading.DispatcherObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.DependencyObject" />
  <TypeSignature Language="VB.NET" Value="Public Class DependencyObject&#xA;Inherits DispatcherObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class DependencyObject : System::Windows::Threading::DispatcherObject" />
  <TypeSignature Language="F#" Value="type DependencyObject = class&#xA;    inherit DispatcherObject" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Threading.DispatcherObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeDescriptionProvider(typeof(MS.Internal.ComponentModel.DependencyObjectProvider))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.NameScopeProperty("NameScope", typeof(System.Windows.NameScope))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Represents an object that participates in the dependency property system.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.DependencyObject>クラスにより[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]その派生クラスでプロパティのシステム サービスです。  
  
 プロパティ システムの主な機能は、変更された値に関するシステム通知を提供して、プロパティの値を計算するには。 プロパティ システムに参加している別のキー クラスは<xref:System.Windows.DependencyProperty>します。 <xref:System.Windows.DependencyProperty> プロパティ システムに依存関係プロパティの登録を有効にし、識別し、各依存関係プロパティに関する情報を提供<xref:System.Windows.DependencyObject>基底クラス オブジェクトの依存関係プロパティを使用することができます。  
  
 <xref:System.Windows.DependencyObject> サービスと特性次に示します。  
  
-   依存関係プロパティのサポートをホストします。 呼び出すことによって、依存関係プロパティを登録する、<xref:System.Windows.DependencyProperty.Register%2A>メソッド、およびクラスのパブリックな静的フィールドとメソッドの戻り値を格納します。  
  
-   添付プロパティのサポートをホストします。 呼び出して添付プロパティを登録する、<xref:System.Windows.DependencyProperty.RegisterAttached%2A>メソッド、およびクラスのパブリック静的な読み取り専用フィールドとして、メソッドの戻り値を格納します。 (その他のメンバーの要件もあります。 これを表すことに注意してください、[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]添付プロパティの特定の実装です。 詳細については、「[添付プロパティの概要](~/docs/framework/wpf/advanced/attached-properties-overview.md))。派生した任意のクラス、添付プロパティを設定することができますし、<xref:System.Windows.DependencyObject>です。  
  
-   Get、set、およびユーティリティ メソッドの上に存在する依存関係プロパティの値をクリア、<xref:System.Windows.DependencyObject>です。  
  
-   メタデータ、値のサポート、プロパティの変更通知、および依存関係プロパティのオーバーライドのコールバックを強制または、アタッチされるプロパティです。 また、<xref:System.Windows.DependencyObject>クラスには、依存関係プロパティの所有者ごとのプロパティのメタデータが容易になります。  
  
-   クラスの共通の基本クラスから派生した<xref:System.Windows.ContentElement>、 <xref:System.Windows.Freezable>、または<xref:System.Windows.Media.Visual>です。 (<xref:System.Windows.UIElement>、別の基本要素のクラスがクラスの階層構造を含む<xref:System.Windows.Media.Visual>)。  
  
   
  
## Examples  
 次の例に由来<xref:System.Windows.DependencyObject>新しい抽象クラスを作成します。 クラスに、添付プロパティを登録し、その添付プロパティのサポートのメンバーが含まれています。  
  
 [!code-csharp[WPFAquariumSln#DOMain](~/samples/snippets/csharp/VS_Snippets_Wpf/WPFAquariumSln/CSharp/WPFAquariumObjects/Class1.cs#domain)]
 [!code-vb[WPFAquariumSln#DOMain](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WPFAquariumSln/visualbasic/wpfaquariumobjects/class1.vb#domain)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.DependencyProperty" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DependencyObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyObject.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DependencyObject();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.DependencyObject" /> class.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.DependencyProperty" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ClearValue">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Clears the local value of a property.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ClearValue">
      <MemberSignature Language="C#" Value="public void ClearValue (System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearValue(class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearValue (dp As DependencyProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearValue(System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="member this.ClearValue : System.Windows.DependencyProperty -&gt; unit" Usage="dependencyObject.ClearValue dp" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="dp">The dependency property to be cleared, identified by a <see cref="T:System.Windows.DependencyProperty" /> object reference.</param>
        <summary>Clears the local value of a property. The property to be cleared is specified by a <see cref="T:System.Windows.DependencyProperty" /> identifier.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼び出してプロパティの値をクリアする<xref:System.Windows.DependencyObject.ClearValue%2A>で必ずしも得られなければ、依存関係プロパティの依存関係プロパティのメタデータで指定されている既定値です。 具体的にのみ、プロパティをクリアするは、どのようなローカル値が適用されている可能性がありますを消去します。 詳細については、「[依存関係プロパティ値の優先順位](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)」を参照してください。  
  
   
  
## Examples  
 次の例は、そのオブジェクトに対する設定ローカル値を持つすべてのプロパティを反復処理を呼び出して<xref:System.Windows.DependencyObject.ClearValue%2A>などの各プロパティの値をクリアします。  
  
 [!code-csharp[DPClearValue#IterateLocalValuesAndClear](~/samples/snippets/csharp/VS_Snippets_Wpf/DPClearValue/CSharp/default.xaml.cs#iteratelocalvaluesandclear)]
 [!code-vb[DPClearValue#IterateLocalValuesAndClear](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DPClearValue/VisualBasic/default.xaml.vb#iteratelocalvaluesandclear)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Attempted to call <see cref="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" /> on a sealed <see cref="T:System.Windows.DependencyObject" />.</exception>
        <altmember cref="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
        <altmember cref="P:System.Windows.DependencyObject.IsSealed" />
        <altmember cref="T:System.Windows.DependencyProperty" />
      </Docs>
    </Member>
    <Member MemberName="ClearValue">
      <MemberSignature Language="C#" Value="public void ClearValue (System.Windows.DependencyPropertyKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearValue(class System.Windows.DependencyPropertyKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearValue (key As DependencyPropertyKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearValue(System::Windows::DependencyPropertyKey ^ key);" />
      <MemberSignature Language="F#" Value="member this.ClearValue : System.Windows.DependencyPropertyKey -&gt; unit" Usage="dependencyObject.ClearValue key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Windows.DependencyPropertyKey" />
      </Parameters>
      <Docs>
        <param name="key">The key for the dependency property to be cleared.</param>
        <summary>Clears the local value of a read-only property. The property to be cleared is specified by a <see cref="T:System.Windows.DependencyPropertyKey" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A<xref:System.Windows.DependencyPropertyKey>プロパティ システム操作用の読み取り専用の依存関係プロパティを識別します。 読み取り専用の依存関係プロパティを定義するクラスでは、パブリック アクセス権を持つこのキーは公開しないでください。 場合、公開キーのプロパティの読み取り専用の文字を否定するパブリック コード パスが提供するなどのメソッド<xref:System.Windows.DependencyObject.ClearValue%2A>または<xref:System.Windows.DependencyObject.SetValue%2A>クラスまたはキーを参照するアセンブリの外部から呼び出すことができます。  
  
 呼び出してプロパティの値をクリアする<xref:System.Windows.DependencyObject.ClearValue%2A>で必ずしも得られなければ、依存関係プロパティの依存関係プロパティのメタデータで指定されている既定値です。 具体的にのみ値をクリアすると、ローカル値が適用されている可能性がありますを消去します。 詳細については、「[依存関係プロパティ値の優先順位](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)」を参照してください。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Attempted to call <see cref="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" /> on a sealed <see cref="T:System.Windows.DependencyObject" />.</exception>
        <altmember cref="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
        <altmember cref="T:System.Windows.DependencyPropertyKey" />
      </Docs>
    </Member>
    <Member MemberName="CoerceValue">
      <MemberSignature Language="C#" Value="public void CoerceValue (System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CoerceValue(class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CoerceValue (dp As DependencyProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CoerceValue(System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="member this.CoerceValue : System.Windows.DependencyProperty -&gt; unit" Usage="dependencyObject.CoerceValue dp" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="dp">The identifier for the dependency property to coerce.</param>
        <summary>Coerces the value of the specified dependency property. This is accomplished by invoking any <see cref="T:System.Windows.CoerceValueCallback" /> function specified in property metadata for the dependency property as it exists on the calling <see cref="T:System.Windows.DependencyObject" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼び出し元を明示的に呼び出されているだけでなく<xref:System.Windows.DependencyObject.CoerceValue%2A>、<xref:System.Windows.CoerceValueCallback>依存関係のプロパティ エディターが呼び出されます内部的に、依存関係プロパティの値がによって再評価されるたびに、[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]プロパティ システムです。  
  
 呼び出した場合、<xref:System.Windows.DependencyObject.CoerceValue%2A>メソッド、して、最終的に呼び出す、強制値プロパティのコールバックを指定します。 呼び出す通常<xref:System.Windows.DependencyObject.CoerceValue%2A>強制値のコールバックが存在することがわかっている場合、および強制型変換のコールバックの条件を把握している場合のみです。  
  
 呼び出し元の最も一般的なシナリオ<xref:System.Windows.DependencyObject.CoerceValue%2A>が依存する形で互いの値に影響を与える関連するプロパティのクラス処理、またはプロパティ変更のコールバック内で。 詳しくは、「[依存関係プロパティのコールバックと検証](~/docs/framework/wpf/advanced/dependency-property-callbacks-and-validation.md)」を参照してください。  
  
   
  
## Examples  
 次の例では<xref:System.Windows.DependencyObject.CoerceValue%2A>内で、<xref:System.Windows.PropertyChangedCallback>実装として使用される、<xref:System.Windows.PropertyMetadata.PropertyChangedCallback%2A>のさまざまな依存関係プロパティを同じクラスにします。 これは、依存関係プロパティの間で true 値の依存関係を導入するための一般的なパターンです。  
  
 [!code-csharp[DPCallbackOverride#OnPCCurrent](~/samples/snippets/csharp/VS_Snippets_Wpf/DPCallbackOverride/CSharp/SDKSampleLibrary/class1.cs#onpccurrent)]
 [!code-vb[DPCallbackOverride#OnPCCurrent](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DPCallbackOverride/visualbasic/sdksamplelibrary/class1.vb#onpccurrent)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The specified <paramref name="dp" /> or its value were invalid or do not exist.</exception>
        <altmember cref="T:System.Windows.CoerceValueCallback" />
        <altmember cref="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="DependencyObjectType">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyObjectType DependencyObjectType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyObjectType DependencyObjectType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.DependencyObject.DependencyObjectType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DependencyObjectType As DependencyObjectType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DependencyObjectType ^ DependencyObjectType { System::Windows::DependencyObjectType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DependencyObjectType : System.Windows.DependencyObjectType" Usage="System.Windows.DependencyObject.DependencyObjectType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObjectType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.DependencyObjectType" /> that wraps the [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] type of this instance.</summary>
        <value>A<see cref="T:System.Windows.DependencyObjectType" />をラップする、[です。このインスタンスの INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] 型です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティは、メソッドから返されるオブジェクトの戻り値の型がある場合に役立ちます。<xref:System.Windows.DependencyObject>プロパティは、その種類に応じてで特定操作にシステムを実行するとします。 たとえばを呼び出すより効率的です<xref:System.Windows.DependencyProperty.GetMetadata%28System.Windows.DependencyObjectType%29>を使用して、<xref:System.Windows.DependencyObjectType>ではなく、[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]型です。 <xref:System.Windows.DependencyObjectType> 高速の参照を容易になります。  
  
   
  
## Examples  
 例では、次の疑似コード、`MySubClass`予測するその他の派生クラスがの既定値を変更する可能性があります、`MyCustom`依存関係プロパティです。 クラスを活用して多態性、実際の派生クラスを決定できる既定のコンス トラクターを実装する、<xref:System.Windows.DependencyObjectType>値の派生クラスのインスタンスとしてそのコンス トラクターを使用するたびにします。  
  
 `public DOClass() : base()`  
  
 `{`  
  
 `__customPropertyCache = (CustomDP)`  
  
 `CustomDPProperty.GetMetadata(DependencyObjectType).DefaultValue;`  
  
 `}`  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.DependencyProperty.GetMetadata(System.Type)" />
        <altmember cref="T:System.Windows.DependencyObjectType" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override sealed bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyObject.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="dependencyObject.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">The <see cref="T:System.Windows.DependencyObject" /> to compare to the current instance.</param>
        <summary>Determines whether a provided <see cref="T:System.Windows.DependencyObject" /> is equivalent to the current <see cref="T:System.Windows.DependencyObject" />.</summary>
        <returns>
          <see langword="true" /> if the two instances are the same; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この実装は、参照の等価性のみで含まれているプロパティの値の等価性を評価しようとはしません。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <see cref="T:System.Windows.DependencyObject" /> オーバーライドし、2 つの基本をシール<see cref="T:System.Object" />メソッド:<see cref="M:System.Windows.DependencyObject.Equals(System.Object)" />と<see cref="M:System.Windows.DependencyObject.GetHashCode" />です。上書きを呼び出し、<see cref="T:System.Object" />実装では、オブジェクトの等価性動作します。これらの意図的なオーバーライドの目的は、派生クラスがの値の等価性を定義しようとしていることを防ぐため、<see cref="T:System.Windows.DependencyObject" />です。値を等号<see cref="T:System.Windows.DependencyObject" />の本質的なプロパティの値を変更する機能が原因で正確なできなくなります、<see cref="T:System.Windows.DependencyObject" />とその依存関係プロパティです。これを含む基本的な [!データ バインディングなどの機能を INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] と [です。INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] プロパティのシステムです。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override sealed int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyObject.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="dependencyObject.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets a hash code for this <see cref="T:System.Windows.DependencyObject" />.</summary>
        <returns>A signed 32-bit integer hash code.</returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>
            <see cref="T:System.Windows.DependencyObject" /> オーバーライドし、2 つをシール<see cref="T:System.Object" />メソッド:<see cref="M:System.Windows.DependencyObject.Equals(System.Object)" />と<see cref="M:System.Windows.DependencyObject.GetHashCode" />です。上書きを呼び出し、<see cref="T:System.Object" />実装では、オブジェクトの等価性動作します。これらの意図的なオーバーライドの目的は、派生クラスがの値の等価性を定義しようとしていることを防ぐため、<see cref="T:System.Windows.DependencyObject" />です。値を等号<see cref="T:System.Windows.DependencyObject" />の本質的なプロパティの値を変更する機能が原因で正確なできなくなります、<see cref="T:System.Windows.DependencyObject" />とその依存関係プロパティです。これを含む基本的な [!データ バインディングなどの機能を INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] と [です。INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] プロパティのシステムです。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetLocalValueEnumerator">
      <MemberSignature Language="C#" Value="public System.Windows.LocalValueEnumerator GetLocalValueEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.LocalValueEnumerator GetLocalValueEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyObject.GetLocalValueEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLocalValueEnumerator () As LocalValueEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::LocalValueEnumerator GetLocalValueEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetLocalValueEnumerator : unit -&gt; System.Windows.LocalValueEnumerator" Usage="dependencyObject.GetLocalValueEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.LocalValueEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates a specialized enumerator for determining which dependency properties have locally set values on this <see cref="T:System.Windows.DependencyObject" />.</summary>
        <returns>A specialized local value enumerator.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A*ローカル値*によって設定された依存関係プロパティの値は、<xref:System.Windows.DependencyObject.SetValue%2A>プロパティ システムの他の側面ではなく、します。  
  
 <xref:System.Windows.LocalValueEnumerator>呼び出すことによって取得<xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A>をローカルで設定されたプロパティを列挙するために使用する値を<xref:System.Windows.DependencyObject>インスタンス。 このような各プロパティは、列挙子で表されます、 <xref:System.Windows.LocalValueEntry> 、固有の仕様を参照するプロパティを持つオブジェクト<xref:System.Windows.DependencyProperty>とその値。 この手法をローカルに設定の列挙の値として使用できますの最適化またはローカルの値の他の処理などのプロパティ値を判断、<xref:System.Windows.DependencyObject>が変わってしまう場合、それらをクリアします。  
  
> [!IMPORTANT]
>  返された<xref:System.Windows.LocalValueEnumerator>が含まれます<xref:System.Windows.LocalValueEntry>は読み取り専用の依存関係プロパティまたは依存関係プロパティをプロパティ システムで値を計算する場所のレコードです。 たとえばをレイアウトから確立の幅を持つ visual framework 要素がのローカル値をレポート<xref:System.Windows.FrameworkElement.ActualWidth%2A>です。 それらをリセットするためにローカルの値を取得する場合は、確認、<xref:System.Windows.DependencyProperty.ReadOnly%2A>の各プロパティの識別子の値<xref:System.Windows.LocalValueEntry>ことを確認する、<xref:System.Windows.DependencyProperty>対象は読み取り専用です。  
  
   
  
## Examples  
 次の例は、そのオブジェクトに対する設定ローカル値を持つすべてのプロパティを反復処理を呼び出して<xref:System.Windows.DependencyObject.ClearValue%2A>などの各プロパティの値をクリアします。  
  
 [!code-csharp[DPClearValue#IterateLocalValuesAndClear](~/samples/snippets/csharp/VS_Snippets_Wpf/DPClearValue/CSharp/default.xaml.cs#iteratelocalvaluesandclear)]
 [!code-vb[DPClearValue#IterateLocalValuesAndClear](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DPClearValue/VisualBasic/default.xaml.vb#iteratelocalvaluesandclear)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.LocalValueEntry" />
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValue(class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (dp As DependencyProperty) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="member this.GetValue : System.Windows.DependencyProperty -&gt; obj" Usage="dependencyObject.GetValue dp" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="dp">The <see cref="T:System.Windows.DependencyProperty" /> identifier of the property to retrieve the value for.</param>
        <summary>Returns the current effective value of a dependency property on this instance of a <see cref="T:System.Windows.DependencyObject" />.</summary>
        <returns>Returns the current effective value.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 *有効な値*プロパティ システムによって、値を要求している任意の呼び出し元に返されるプロパティの値です。 有効な値は、プロパティのシステム値の優先順位に参加しているすべての可能な入力を評価したプロパティ システムの結果です。 これには、強制とアニメーションが含まれます。 詳細については、「[依存関係プロパティ値の優先順位](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)」を参照してください。  
  
 このメソッドは返されません<xref:System.Windows.DependencyProperty.UnsetValue>です。 <xref:System.Windows.DependencyProperty.UnsetValue>内部的に、場合によってはも強制コールバックを通じて公開されるさまざまな容量で使用されているプロパティ システムの sentinel 値です。  
  
 プロパティの型にする必要がありますがわからない場合は、詳細ながあるかどうかを判断する、要求された依存関係プロパティの識別子を照会できます<xref:System.Windows.DependencyProperty.PropertyType%2A>戻り値に変換できます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The specified <paramref name="dp" /> or its value was invalid, or the specified <paramref name="dp" /> does not exist.</exception>
        <altmember cref="M:System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="InvalidateProperty">
      <MemberSignature Language="C#" Value="public void InvalidateProperty (System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InvalidateProperty(class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InvalidateProperty (dp As DependencyProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InvalidateProperty(System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="member this.InvalidateProperty : System.Windows.DependencyProperty -&gt; unit" Usage="dependencyObject.InvalidateProperty dp" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="dp">The <see cref="T:System.Windows.DependencyProperty" /> identifier of the property to invalidate.</param>
        <summary>Re-evaluates the effective value for the specified dependency property</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼び出すと<xref:System.Windows.DependencyObject.InvalidateProperty%2A>、any 関連付けられている、該当する<xref:System.Windows.CoerceValueCallback>または<xref:System.Windows.PropertyChangedCallback>関数に登録する依存関係プロパティを呼び出す可能性があります。  
  
 呼び出す<xref:System.Windows.DependencyObject.InvalidateProperty%2A>をローカルの値の設定を持つプロパティでは効果がなく、ため、ローカルの値がアニメーションを除く他のプロパティのシステム入力より優先されます。 ただし、呼び出すでした<xref:System.Windows.DependencyObject.ClearValue%2A>、呼び出して<xref:System.Windows.DependencyObject.InvalidateProperty%2A>です。 詳細については、「[依存関係プロパティ値の優先順位](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)」を参照してください。  
  
 呼び出す<xref:System.Windows.DependencyObject.InvalidateProperty%2A>は依存関係プロパティの多くのシナリオに必ずしも適用されません。 依存関係プロパティが、構成要素のいずれかの値が変更されたのため、無効になるプロパティのシステムは無効にし、依存関係プロパティを自動的に再評価します。 ただし、シナリオは、まだいくつか適切な場所<xref:System.Windows.DependencyObject.InvalidateProperty%2A>役に立ちます。 具体的には、使用することができます<xref:System.Windows.DependencyObject.InvalidateProperty%2A>強制値またはプロパティの内部のコールバックを別の依存関係プロパティを変更します。 使用することも<xref:System.Windows.DependencyObject.InvalidateProperty%2A>推奨を実装するようになっているデータ ソースに対するバインドの再評価を強制的に<xref:System.ComponentModel.INotifyPropertyChanged>通知メカニズム (おそらくから派生することはできませんか、またはデータが、静的なデータ クラスを使用している場合メンバーの場合)。  
  
   
  
## Examples  
 次の例では<xref:System.Windows.DependencyObject.InvalidateProperty%2A>カスタム プロパティをするたびに、無効化されたプロパティの計算に関連するプロパティを変更します。 これは、代替手法を呼び出すこと、<xref:System.Windows.DependencyObject.CoerceValue%2A>メソッド、プロパティを無効には呼び出すことも、登録されているため<xref:System.Windows.PropertyMetadata.CoerceValueCallback%2A>です。  
  
 [!code-csharp[PropertySystemEsoterics#InvalidateProperty](~/samples/snippets/csharp/VS_Snippets_Wpf/PropertySystemEsoterics/CSharp/SDKSampleLibrary/class1.cs#invalidateproperty)]
 [!code-vb[PropertySystemEsoterics#InvalidateProperty](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PropertySystemEsoterics/visualbasic/sdksamplelibrary/class1.vb#invalidateproperty)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.DependencyProperty.UnsetValue" />
      </Docs>
    </Member>
    <Member MemberName="IsSealed">
      <MemberSignature Language="C#" Value="public bool IsSealed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSealed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.DependencyObject.IsSealed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSealed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSealed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSealed : bool" Usage="System.Windows.DependencyObject.IsSealed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether this instance is currently sealed (read-only).</summary>
        <value>
          <see langword="true" /> このインスタンスはシールされている場合それ以外の場合、<see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この値は、内部的に設定されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.FrameworkElementFactory" />
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPropertyChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPropertyChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPropertyChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPropertyChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnPropertyChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnPropertyChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="dependencyObject.OnPropertyChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Event data that will contain the dependency property identifier of interest, the property metadata for the type, and old and new values.</param>
        <summary>Invoked whenever the effective value of any dependency property on this <see cref="T:System.Windows.DependencyObject" /> has been updated. The specific dependency property that changed is reported in the event data.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、通常、個々 のプロパティの変更を検出するか、ケースごとにプロパティの無効化を実行するものではありません。 <xref:System.Windows.DependencyObject.OnPropertyChanged%2A> 代わりに、一般的な無効化パターンの変更プロパティの広範な分類に関する特定の情報がわかっている場合です。 たとえば、変更の<xref:System.Windows.Freezable>の値の型に変更可能性があります、 <xref:System.Windows.Freezable>、か可能性があります、サブプロパティを他の内に変更がある<xref:System.Windows.Freezable>参照します。 <xref:System.Windows.Freezable>の実装をオーバーライド<xref:System.Windows.DependencyObject.OnPropertyChanged%2A>かを判断するかどうか、プロパティ、サブプロパティをいずれの場合の適切な基本クラス ロジックを提供する内部情報を使用します。  
  
 <xref:System.Windows.DependencyObject.OnPropertyChanged%2A> オブジェクトの有効期間中に何度もを呼び出す可能性のあるは。 したがって、特定のプロパティのメタデータをオーバーライドし、適用するを使用するプロパティの全体的なシステムのパフォーマンスが向上を実現できます<xref:System.Windows.CoerceValueCallback>または<xref:System.Windows.PropertyChangedCallback>個々 のプロパティです。 場合にこのメソッドを使用すると、<xref:System.Windows.DependencyObject>多数の値と相互に依存関係プロパティを含む動作をレンダリングする必要がありますを再実行関連のプロパティの無効化のケースのいくつかのようにロジックが含まれている場合またはします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>常に基底の実装を呼び出します。これを行うにはエラーには、全体が無効になりますが大幅に [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] プロパティのシステム、原因で正しくない値が報告されます。</para>
        </block>
        <altmember cref="T:System.Windows.FrameworkElement" />
      </Docs>
    </Member>
    <Member MemberName="ReadLocalValue">
      <MemberSignature Language="C#" Value="public object ReadLocalValue (System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ReadLocalValue(class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadLocalValue (dp As DependencyProperty) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ReadLocalValue(System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="member this.ReadLocalValue : System.Windows.DependencyProperty -&gt; obj" Usage="dependencyObject.ReadLocalValue dp" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="dp">The <see cref="T:System.Windows.DependencyProperty" /> identifier of the property to retrieve the value for.</param>
        <summary>Returns the local value of a dependency property, if it exists.</summary>
        <returns>Returns the local value, or returns the sentinel value <see cref="F:System.Windows.DependencyProperty.UnsetValue" /> if no local value is set.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用する必要があります<xref:System.Windows.DependencyObject.GetValue%2A>依存関係プロパティの「取得」操作で最も一般的です。 <xref:System.Windows.DependencyObject.ReadLocalValue%2A> 返しません様々 な状況に対する有効な値、値がローカルに設定されていません。  
  
 スタイル、テーマ、テンプレートで設定されている値の場合は、メタデータ、またはプロパティ値の継承の既定値はローカル値は考慮されません。 ただし、束縛やその他の式が評価された後、ローカルの値であると見なされます。  
  
 このメソッドが戻るとき、ローカルの値が設定されていない<xref:System.Windows.DependencyProperty.UnsetValue>です。  
  
 返された値が以外の場合は<xref:System.Windows.DependencyProperty.UnsetValue>、戻り値に変換できるより具体的な種類があるかどうかを判断する、要求された依存関係プロパティのメタデータをクエリを実行できます。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.DependencyObject.GetLocalValueEnumerator" />
        <altmember cref="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="SetCurrentValue">
      <MemberSignature Language="C#" Value="public void SetCurrentValue (System.Windows.DependencyProperty dp, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCurrentValue(class System.Windows.DependencyProperty dp, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCurrentValue (dp As DependencyProperty, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCurrentValue(System::Windows::DependencyProperty ^ dp, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.SetCurrentValue : System.Windows.DependencyProperty * obj -&gt; unit" Usage="dependencyObject.SetCurrentValue (dp, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dp">The identifier of the dependency property to set.</param>
        <param name="value">The new local value.</param>
        <summary>Sets the value of a dependency property without changing its value source.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、プログラムによって、アプリケーションの宣言されたプロパティを使用するを無効にしなくても、独自のプロパティのいずれかの値を設定するコンポーネントによって使用されます。 <xref:System.Windows.DependencyObject.SetCurrentValue%2A>メソッド、プロパティが既存のトリガーのデータ バインドの有効な値を変更して、スタイルは引き続き機能します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Attempted to modify a read-only dependency property, or a property on a sealed <see cref="T:System.Windows.DependencyObject" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="value" /> was not the correct type as registered for the <paramref name="dp" /> property.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetValue">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Sets the local value of a dependency property.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (System.Windows.DependencyProperty dp, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValue(class System.Windows.DependencyProperty dp, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (dp As DependencyProperty, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::Windows::DependencyProperty ^ dp, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.SetValue : System.Windows.DependencyProperty * obj -&gt; unit" Usage="dependencyObject.SetValue (dp, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dp">The identifier of the dependency property to set.</param>
        <param name="value">The new local value.</param>
        <summary>Sets the local value of a dependency property, specified by its dependency property identifier.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 指定された型が最初に登録されているとおりに、依存関係プロパティの宣言されている型が一致しない場合、例外がスローされます。 `value`パラメーターを適切な型として常に指定する必要があります。  
  
 例外条件は、可能性のある影響を受けます、<xref:System.Windows.DependencyProperty.ValidateValueCallback%2A>設定される依存関係プロパティの依存関係プロパティの識別子上に存在するコールバック。 それ以外の場合、指定された値に問題がある一般的な型チェックの条件をネイティブ型は Double と文字列を渡すなど)。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Attempted to modify a read-only dependency property, or a property on a sealed <see cref="T:System.Windows.DependencyObject" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="value" /> was not the correct type as registered for the <paramref name="dp" /> property.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (System.Windows.DependencyPropertyKey key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValue(class System.Windows.DependencyPropertyKey key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (key As DependencyPropertyKey, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::Windows::DependencyPropertyKey ^ key, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.SetValue : System.Windows.DependencyPropertyKey * obj -&gt; unit" Usage="dependencyObject.SetValue (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Windows.DependencyPropertyKey" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">The <see cref="T:System.Windows.DependencyPropertyKey" /> identifier of the property to set.</param>
        <param name="value">The new local value.</param>
        <summary>Sets the local value of a read-only dependency property, specified by the <see cref="T:System.Windows.DependencyPropertyKey" /> identifier of the dependency property.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この署名は通常、カスタム クラスで定義されている読み取り専用の依存関係プロパティの値を設定するときに使用します。 一般に、<xref:System.Windows.DependencyObject.SetValue%2A>依存関係プロパティの特定の値を提供する内部ロジックを実装して、その依存関係プロパティを登録する型からのみ呼び出されます。 詳細については、「[読み取り専用の依存関係プロパティ](~/docs/framework/wpf/advanced/read-only-dependency-properties.md)」を参照してください。  
  
 指定された型が最初に登録されているとおりに、依存関係プロパティの宣言されている型が一致しない場合、例外がスローされます。 `value`パラメーターを適切な型として常に指定する必要があります。 例外条件は、可能性のある影響を受けます、<xref:System.Windows.DependencyProperty.ValidateValueCallback%2A>設定される依存関係プロパティの依存関係プロパティの識別子上に存在するコールバック。  
  
   
  
## Examples  
 次の例では、読み取り専用の依存関係プロパティを定義と共に、 `public static readonly` <xref:System.Windows.DependencyProperty>プロパティ コンシューマーとの get アクセサーに必要な読み取り専用の露出を提供する、[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]ラッパーです。  
  
 [!code-csharp[WPFAquariumSln#RODP](~/samples/snippets/csharp/VS_Snippets_Wpf/WPFAquariumSln/CSharp/WPFAquariumObjects/Class1.cs#rodp)]
 [!code-vb[WPFAquariumSln#RODP](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WPFAquariumSln/visualbasic/wpfaquariumobjects/class1.vb#rodp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeProperty">
      <MemberSignature Language="C#" Value="protected internal virtual bool ShouldSerializeProperty (System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool ShouldSerializeProperty(class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function ShouldSerializeProperty (dp As DependencyProperty) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool ShouldSerializeProperty(System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="abstract member ShouldSerializeProperty : System.Windows.DependencyProperty -&gt; bool&#xA;override this.ShouldSerializeProperty : System.Windows.DependencyProperty -&gt; bool" Usage="dependencyObject.ShouldSerializeProperty dp" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="dp">The identifier for the dependency property that should be serialized.</param>
        <summary>Returns a value that indicates whether serialization processes should serialize the value for the provided dependency property.</summary>
        <returns>
          <see langword="true" /> if the dependency property that is supplied should be value-serialized; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定の実装を返します`true`の依存関係プロパティをするには、上に確立されたローカル値を持っていたすべてのケースの<xref:System.Windows.DependencyObject>です。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>このメソッドのオーバーライドの処理は、特定の依存関係プロパティに異なる可能性があります。</para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>