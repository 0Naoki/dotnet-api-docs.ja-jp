<Type Name="DependencyObject" FullName="System.Windows.DependencyObject">
  <Metadata><Meta Name="ms.openlocfilehash" Value="62d0c6b5a93fa38d970f0445e7a629dacdae551c" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48699248" /></Metadata><TypeSignature Language="C#" Value="public class DependencyObject : System.Windows.Threading.DispatcherObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DependencyObject extends System.Windows.Threading.DispatcherObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.DependencyObject" />
  <TypeSignature Language="VB.NET" Value="Public Class DependencyObject&#xA;Inherits DispatcherObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class DependencyObject : System::Windows::Threading::DispatcherObject" />
  <TypeSignature Language="F#" Value="type DependencyObject = class&#xA;    inherit DispatcherObject" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Threading.DispatcherObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.TypeDescriptionProvider(typeof(MS.Internal.ComponentModel.DependencyObjectProvider))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Windows.Markup.NameScopeProperty("NameScope", typeof(System.Windows.NameScope))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>依存関係プロパティ システムに参加しているオブジェクトを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.DependencyObject>クラスにより[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]その派生クラスでプロパティ システム サービスです。  
  
 プロパティ システムの主な機能は、システム通知が変更された値を提供して、プロパティの値を計算するには。 プロパティ システムに参加している別のキー クラスは<xref:System.Windows.DependencyProperty>します。 <xref:System.Windows.DependencyProperty> プロパティ システムに依存関係プロパティの登録を有効し、は識別し、各依存関係プロパティに関する情報に対し<xref:System.Windows.DependencyObject>基底クラスがオブジェクトの依存関係プロパティを使用することができます。  
  
 <xref:System.Windows.DependencyObject> 次のサービスと特性があります。  
  
-   依存関係プロパティのサポートをホストします。 呼び出すことによって、依存関係プロパティを登録する、<xref:System.Windows.DependencyProperty.Register%2A>メソッド、およびメソッドの戻り値をクラスにパブリックな静的フィールドとして保存します。  
  
-   ホストのサポートされている添付プロパティ。 呼び出して添付プロパティを登録する、<xref:System.Windows.DependencyProperty.RegisterAttached%2A>メソッド、およびクラスのパブリック静的読み取り専用フィールドとしてメソッドの戻り値を格納します。 (メンバーの追加要件もあります。 これを表すことに注意してください、[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]添付プロパティの特定の実装。 詳細については、次を参照してください[添付プロパティの概要](~/docs/framework/wpf/advanced/attached-properties-overview.md)。)。派生したクラスで添付プロパティを設定できます<xref:System.Windows.DependencyObject>します。  
  
-   取得、設定、およびユーティリティ メソッドの上に存在する依存関係プロパティの値をクリア、<xref:System.Windows.DependencyObject>します。  
  
-   メタデータは、値のサポート、プロパティ変更通知、および依存関係プロパティのオーバーライドのコールバックを強制または添付プロパティ。 また、<xref:System.Windows.DependencyObject>クラスに依存関係プロパティの所有者ごとのプロパティのメタデータが容易になります。  
  
-   クラスの共通基本クラスから派生した<xref:System.Windows.ContentElement>、 <xref:System.Windows.Freezable>、または<xref:System.Windows.Media.Visual>します。 (<xref:System.Windows.UIElement>、もう 1 つの基本要素クラスを含むクラス階層構造になって<xref:System.Windows.Media.Visual>)。  
  
   
  
## Examples  
 派生した次の例では、<xref:System.Windows.DependencyObject>新しい抽象クラスを作成します。 クラスは、添付プロパティを登録し、その添付プロパティのサポート メンバーが含まれています。  
  
 [!code-csharp[WPFAquariumSln#DOMain](~/samples/snippets/csharp/VS_Snippets_Wpf/WPFAquariumSln/CSharp/WPFAquariumObjects/Class1.cs#domain)]
 [!code-vb[WPFAquariumSln#DOMain](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WPFAquariumSln/visualbasic/wpfaquariumobjects/class1.vb#domain)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.DependencyProperty" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DependencyObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyObject.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DependencyObject();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.DependencyObject" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.DependencyProperty" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ClearValue">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>プロパティのローカル値をクリアします。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ClearValue">
      <MemberSignature Language="C#" Value="public void ClearValue (System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearValue(class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearValue (dp As DependencyProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearValue(System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="member this.ClearValue : System.Windows.DependencyProperty -&gt; unit" Usage="dependencyObject.ClearValue dp" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="dp"><see cref="T:System.Windows.DependencyProperty" /> オブジェクト参照によって識別される、消去対象の依存関係プロパティ。</param>
        <summary>プロパティのローカル値をクリアします。 クリアするプロパティは <see cref="T:System.Windows.DependencyProperty" /> 識別子で指定されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼び出すことによって、プロパティ値をクリアする<xref:System.Windows.DependencyObject.ClearValue%2A>必ずしも与えない依存関係プロパティの依存関係プロパティのメタデータで指定されている既定値。 に限って、プロパティをクリアするには、ローカル値が適用されている可能性がありますがクリアします。 詳細については、「[依存関係プロパティ値の優先順位](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)」を参照してください。  
  
   
  
## Examples  
 次の例では、設定、オブジェクトをローカルの値を持つすべてのプロパティを反復処理を呼び出して<xref:System.Windows.DependencyObject.ClearValue%2A>このような各プロパティの値をクリアします。  
  
 [!code-csharp[DPClearValue#IterateLocalValuesAndClear](~/samples/snippets/csharp/VS_Snippets_Wpf/DPClearValue/CSharp/default.xaml.cs#iteratelocalvaluesandclear)]
 [!code-vb[DPClearValue#IterateLocalValuesAndClear](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DPClearValue/VisualBasic/default.xaml.vb#iteratelocalvaluesandclear)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">シールされている <see cref="T:System.Windows.DependencyObject" /> で <see cref="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" /> を呼び出そうとしました。</exception>
        <altmember cref="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
        <altmember cref="P:System.Windows.DependencyObject.IsSealed" />
        <altmember cref="T:System.Windows.DependencyProperty" />
      </Docs>
    </Member>
    <Member MemberName="ClearValue">
      <MemberSignature Language="C#" Value="public void ClearValue (System.Windows.DependencyPropertyKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearValue(class System.Windows.DependencyPropertyKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearValue (key As DependencyPropertyKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearValue(System::Windows::DependencyPropertyKey ^ key);" />
      <MemberSignature Language="F#" Value="member this.ClearValue : System.Windows.DependencyPropertyKey -&gt; unit" Usage="dependencyObject.ClearValue key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Windows.DependencyPropertyKey" />
      </Parameters>
      <Docs>
        <param name="key">消去する依存関係プロパティのキー。</param>
        <summary>読み取り専用プロパティのローカル値を消去します。 消去するプロパティは、<see cref="T:System.Windows.DependencyPropertyKey" /> で指定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A<xref:System.Windows.DependencyPropertyKey>プロパティ システム操作の読み取り専用の依存関係プロパティを識別します。 読み取り専用の依存関係プロパティを定義するクラスは、パブリック アクセス権を持つには、このキーを公開する必要があります。 場合、一般公開されているキーのプロパティの読み取り専用の文字を否定するパブリック コード パスが提供するなどのメソッド<xref:System.Windows.DependencyObject.ClearValue%2A>または<xref:System.Windows.DependencyObject.SetValue%2A>クラスまたはキーを参照するアセンブリの外部から呼び出すことができます。  
  
 呼び出すことによって、プロパティ値をクリアする<xref:System.Windows.DependencyObject.ClearValue%2A>必ずしも与えない依存関係プロパティの依存関係プロパティのメタデータで指定されている既定値。 のみ具体的には、値をクリアするには、ローカル値が適用されている可能性がありますがクリアします。 詳細については、「[依存関係プロパティ値の優先順位](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)」を参照してください。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">シールされている <see cref="T:System.Windows.DependencyObject" /> で <see cref="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" /> を呼び出そうとしました。</exception>
        <altmember cref="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
        <altmember cref="T:System.Windows.DependencyPropertyKey" />
      </Docs>
    </Member>
    <Member MemberName="CoerceValue">
      <MemberSignature Language="C#" Value="public void CoerceValue (System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CoerceValue(class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CoerceValue (dp As DependencyProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CoerceValue(System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="member this.CoerceValue : System.Windows.DependencyProperty -&gt; unit" Usage="dependencyObject.CoerceValue dp" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="dp">強制する依存関係プロパティの識別子。</param>
        <summary>指定した依存関係プロパティの値を強制します。 これは、呼び出し元の <see cref="T:System.Windows.DependencyObject" /> の依存関係プロパティのプロパティ メタデータで指定されている <see cref="T:System.Windows.CoerceValueCallback" /> 関数を呼び出すことによって実現されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼び出し元を明示的に呼び出されるだけでなく<xref:System.Windows.DependencyObject.CoerceValue%2A>、<xref:System.Windows.CoerceValueCallback>依存関係のプロパティも呼び出される内部で依存関係プロパティの値が再評価されるたびに、[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]プロパティ システム。  
  
 呼び出した場合、<xref:System.Windows.DependencyObject.CoerceValue%2A>メソッドでは、指定したプロパティの強制値コールバック呼び出す最終的にします。 通常は呼び出す<xref:System.Windows.DependencyObject.CoerceValue%2A>強制値コールバックが存在することがわかっている場合、および強制型変換のコールバックの条件がわかっている場合のみです。  
  
 呼び出し元の最も一般的なシナリオ<xref:System.Windows.DependencyObject.CoerceValue%2A>が依存している方法で他の値に影響を与える関連するプロパティのクラス処理またはプロパティ変更コールバック内で。 詳しくは、「[依存関係プロパティのコールバックと検証](~/docs/framework/wpf/advanced/dependency-property-callbacks-and-validation.md)」を参照してください。  
  
   
  
## Examples  
 次の例では<xref:System.Windows.DependencyObject.CoerceValue%2A>内で、<xref:System.Windows.PropertyChangedCallback>として使用される実装、<xref:System.Windows.PropertyMetadata.PropertyChangedCallback%2A>の同じクラスでさまざまな依存関係プロパティ。 これは、依存関係プロパティ間の値が true の依存関係を導入するための一般的なパターンです。  
  
 [!code-csharp[DPCallbackOverride#OnPCCurrent](~/samples/snippets/csharp/VS_Snippets_Wpf/DPCallbackOverride/CSharp/SDKSampleLibrary/class1.cs#onpccurrent)]
 [!code-vb[DPCallbackOverride#OnPCCurrent](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DPCallbackOverride/visualbasic/sdksamplelibrary/class1.vb#onpccurrent)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">指定した <paramref name="dp" /> またはその値が無効であるか、存在しません。</exception>
        <altmember cref="T:System.Windows.CoerceValueCallback" />
        <altmember cref="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="DependencyObjectType">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyObjectType DependencyObjectType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyObjectType DependencyObjectType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.DependencyObject.DependencyObjectType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DependencyObjectType As DependencyObjectType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DependencyObjectType ^ DependencyObjectType { System::Windows::DependencyObjectType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DependencyObjectType : System.Windows.DependencyObjectType" Usage="System.Windows.DependencyObject.DependencyObjectType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObjectType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このインスタンスの [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] 型をラップする <see cref="T:System.Windows.DependencyObjectType" /> を取得します。</summary>
        <value>このインスタンスの [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] 型をラップする <see cref="T:System.Windows.DependencyObjectType" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティは、メソッドから返されるオブジェクトの戻り値の型がある場合に役立ちます。<xref:System.Windows.DependencyObject>プロパティ システムで特定の操作がその型に応じてを実行したいとします。 呼び出す方が効率的ですたとえば<xref:System.Windows.DependencyProperty.GetMetadata%28System.Windows.DependencyObjectType%29>を使用して、<xref:System.Windows.DependencyObjectType>なく[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]型。 <xref:System.Windows.DependencyObjectType> 高速参照を容易になります。  
  
   
  
## Examples  
 次の擬似コード例では、`MySubClass`予測する追加の派生クラスがの既定値を変更する可能性があります、`MyCustom`依存関係プロパティ。 実際の派生クラスを判断するポリモーフィズムの活用を既定のコンス トラクターを実装するクラス、<xref:System.Windows.DependencyObjectType>コンス トラクターは派生クラスのインスタンスとして使用されるたびに値します。  
  
 `public DOClass() : base()`  
  
 `{`  
  
 `__customPropertyCache = (CustomDP)`  
  
 `CustomDPProperty.GetMetadata(DependencyObjectType).DefaultValue;`  
  
 `}`  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.DependencyProperty.GetMetadata(System.Type)" />
        <altmember cref="T:System.Windows.DependencyObjectType" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override sealed bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyObject.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="dependencyObject.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">現在のインスタンスと比較する対象の <see cref="T:System.Windows.DependencyObject" />。</param>
        <summary>指定した <see cref="T:System.Windows.DependencyObject" /> が現在の <see cref="T:System.Windows.DependencyObject" /> と等しいかどうかを判断します。</summary>
        <returns>2 つのインスタンスが同じである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この実装は参照の等価性のみを含まれているプロパティの値の等価性を評価しようとはしません。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>
            <see cref="T:System.Windows.DependencyObject" /> オーバーライドし、2 つの基本をシールし<see cref="T:System.Object" />メソッド:<see cref="M:System.Windows.DependencyObject.Equals(System.Object)" />と<see cref="M:System.Windows.DependencyObject.GetHashCode" />します。 上書きを呼び出し、<see cref="T:System.Object" />実装では、オブジェクトの等価性動作します。 これらの意図的な上書きの目的は、派生クラスがの値の等価性の定義を試行するを防ぐためには、<see cref="T:System.Windows.DependencyObject" />します。 値を等号<see cref="T:System.Windows.DependencyObject" />の本質的なプロパティの値を変更する機能のため正確なことになります、<see cref="T:System.Windows.DependencyObject" />とその依存関係プロパティ。 これを含む基本的な[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]データ バインディングなどの機能と[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]プロパティ システム。</para></block>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override sealed int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyObject.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="dependencyObject.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>この <see cref="T:System.Windows.DependencyObject" /> のハッシュ コードを取得します。</summary>
        <returns>32 ビット符号付き整数ハッシュ コード。</returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para>
            <see cref="T:System.Windows.DependencyObject" /> オーバーライドし、2 つをシール<see cref="T:System.Object" />メソッド:<see cref="M:System.Windows.DependencyObject.Equals(System.Object)" />と<see cref="M:System.Windows.DependencyObject.GetHashCode" />します。 上書きを呼び出し、<see cref="T:System.Object" />実装では、オブジェクトの等価性動作します。 これらの意図的な上書きの目的は、派生クラスがの値の等価性の定義を試行するを防ぐためには、<see cref="T:System.Windows.DependencyObject" />します。 値を等号<see cref="T:System.Windows.DependencyObject" />の本質的なプロパティの値を変更する機能のため正確なことになります、<see cref="T:System.Windows.DependencyObject" />とその依存関係プロパティ。 これを含む基本的な[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]データ バインディングなどの機能と[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]プロパティ システム。</para></block>
      </Docs>
    </Member>
    <Member MemberName="GetLocalValueEnumerator">
      <MemberSignature Language="C#" Value="public System.Windows.LocalValueEnumerator GetLocalValueEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.LocalValueEnumerator GetLocalValueEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyObject.GetLocalValueEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLocalValueEnumerator () As LocalValueEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::LocalValueEnumerator GetLocalValueEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetLocalValueEnumerator : unit -&gt; System.Windows.LocalValueEnumerator" Usage="dependencyObject.GetLocalValueEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.LocalValueEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>どの依存関係プロパティがこの <see cref="T:System.Windows.DependencyObject" /> 上にローカルに設定された値を持つかを確認するための、専用の列挙子を作成します。</summary>
        <returns>専用のローカル値列挙子。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A*ローカル値*によって設定された依存関係プロパティの値は、<xref:System.Windows.DependencyObject.SetValue%2A>プロパティ システムの他の側面ではなく、します。  
  
 <xref:System.Windows.LocalValueEnumerator>呼び出すことによって取得<xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A>ローカルに設定されたプロパティを列挙するために使用できる値を<xref:System.Windows.DependencyObject>インスタンス。 このような各プロパティが、列挙子で表される、<xref:System.Windows.LocalValueEntry>オブジェクトは、特定の参照プロパティを持つ<xref:System.Windows.DependencyProperty>とその値。 この手法の列挙でローカルに設定値として使用できますの最適化またはローカルの値の他の処理などのプロパティ値を判断、<xref:System.Windows.DependencyObject>変更、消去された場合。  
  
> [!IMPORTANT]
>  返された<xref:System.Windows.LocalValueEnumerator>あります<xref:System.Windows.LocalValueEntry>レコードは読み取り専用依存関係プロパティまたは依存関係プロパティの値がプロパティ システムによって計算されます。 レイアウトから確立の幅を持つ visual フレームワーク要素がのローカル値を報告するなど、<xref:System.Windows.FrameworkElement.ActualWidth%2A>します。 それらをリセットするにはローカル値を取得する場合は、確認、<xref:System.Windows.DependencyProperty.ReadOnly%2A>の各プロパティの識別子で値<xref:System.Windows.LocalValueEntry>ことを確認する、<xref:System.Windows.DependencyProperty>問題のない読み取り専用です。  
  
   
  
## Examples  
 次の例では、設定、オブジェクトをローカルの値を持つすべてのプロパティを反復処理を呼び出して<xref:System.Windows.DependencyObject.ClearValue%2A>このような各プロパティの値をクリアします。  
  
 [!code-csharp[DPClearValue#IterateLocalValuesAndClear](~/samples/snippets/csharp/VS_Snippets_Wpf/DPClearValue/CSharp/default.xaml.cs#iteratelocalvaluesandclear)]
 [!code-vb[DPClearValue#IterateLocalValuesAndClear](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DPClearValue/VisualBasic/default.xaml.vb#iteratelocalvaluesandclear)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.LocalValueEntry" />
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValue(class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (dp As DependencyProperty) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="member this.GetValue : System.Windows.DependencyProperty -&gt; obj" Usage="dependencyObject.GetValue dp" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="dp">値を取得する対象のプロパティの <see cref="T:System.Windows.DependencyProperty" /> 識別子。</param>
        <summary><see cref="T:System.Windows.DependencyObject" /> のこのインスタンスにある依存関係プロパティの現在の有効値を返します。</summary>
        <returns>現在の有効値を返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 *有効な値*プロパティ システムによって、値を要求している任意の呼び出し元に返されるプロパティの値です。 有効な値では、プロパティ システムの値の優先順位に参加しているすべての入力を評価した、プロパティ システムの結果です。 これには、強制型変換とアニメーションが含まれます。 詳細については、「[依存関係プロパティ値の優先順位](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)」を参照してください。  
  
 このメソッドは返されません<xref:System.Windows.DependencyProperty.UnsetValue>します。 <xref:System.Windows.DependencyProperty.UnsetValue>も内部的には、場合によっては強制型変換のコールバックを通じて公開されるさまざまな容量で使用されているプロパティ システムの sentinel 値です。  
  
 プロパティの型にする必要がありますがわからない場合は、詳細ながあるかどうかを判断する要求された依存関係プロパティの識別子をクエリできます<xref:System.Windows.DependencyProperty.PropertyType%2A>戻り値に変換できます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">指定した <paramref name="dp" /> またはその値が無効であるか、指定した <paramref name="dp" /> が存在しません。</exception>
        <altmember cref="M:System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="InvalidateProperty">
      <MemberSignature Language="C#" Value="public void InvalidateProperty (System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InvalidateProperty(class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InvalidateProperty (dp As DependencyProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InvalidateProperty(System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="member this.InvalidateProperty : System.Windows.DependencyProperty -&gt; unit" Usage="dependencyObject.InvalidateProperty dp" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="dp">無効にするプロパティの <see cref="T:System.Windows.DependencyProperty" /> 識別子。</param>
        <summary>指定した依存関係プロパティの有効値を再評価します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼び出すと<xref:System.Windows.DependencyObject.InvalidateProperty%2A>、any 関連付けられている、該当する<xref:System.Windows.CoerceValueCallback>または<xref:System.Windows.PropertyChangedCallback>関数は、その依存関係プロパティが呼び出されるを登録します。  
  
 呼び出す<xref:System.Windows.DependencyObject.InvalidateProperty%2A>をローカルの値の設定を持つプロパティでは効果がありません、ため、ローカルの値のアニメーションを除く、他のプロパティ システム入力よりも優先されます。 ただし、呼び出すことができます<xref:System.Windows.DependencyObject.ClearValue%2A>、呼び出して<xref:System.Windows.DependencyObject.InvalidateProperty%2A>します。 詳細については、「[依存関係プロパティ値の優先順位](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)」を参照してください。  
  
 呼び出す<xref:System.Windows.DependencyObject.InvalidateProperty%2A>は依存関係プロパティの多くのシナリオに必ずしも適用されません。 依存関係プロパティが、構成要素のいずれかの値の変更のため無効になった場合、プロパティ システムは無効にし、依存関係プロパティを自動的に再評価します。 ただし、シナリオは、まだいくつか適切な場所<xref:System.Windows.DependencyObject.InvalidateProperty%2A>役に立ちます。 具体的には、使用することができます<xref:System.Windows.DependencyObject.InvalidateProperty%2A>強制値またはプロパティ内でさまざまな依存関係プロパティのコールバックを変更します。 使用することも<xref:System.Windows.DependencyObject.InvalidateProperty%2A>推奨を実装するようになっているデータ ソースに対して、バインドの再評価を強制する<xref:System.ComponentModel.INotifyPropertyChanged>通知メカニズム (おそらくから派生できませんをまたはデータが静的なデータ クラスを使用している場合メンバーの場合)。  
  
   
  
## Examples  
 次の例では<xref:System.Windows.DependencyObject.InvalidateProperty%2A>カスタム プロパティをされるたびに、無効化されたプロパティの計算に関連するプロパティを変更します。 これは、呼び出し元に別の手法、<xref:System.Windows.DependencyObject.CoerceValue%2A>メソッド、プロパティを無効には、呼び出されますもために登録<xref:System.Windows.PropertyMetadata.CoerceValueCallback%2A>します。  
  
 [!code-csharp[PropertySystemEsoterics#InvalidateProperty](~/samples/snippets/csharp/VS_Snippets_Wpf/PropertySystemEsoterics/CSharp/SDKSampleLibrary/class1.cs#invalidateproperty)]
 [!code-vb[PropertySystemEsoterics#InvalidateProperty](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PropertySystemEsoterics/visualbasic/sdksamplelibrary/class1.vb#invalidateproperty)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.DependencyProperty.UnsetValue" />
      </Docs>
    </Member>
    <Member MemberName="IsSealed">
      <MemberSignature Language="C#" Value="public bool IsSealed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSealed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.DependencyObject.IsSealed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSealed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSealed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSealed : bool" Usage="System.Windows.DependencyObject.IsSealed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このインスタンスが現在シールされている (読み取り専用である) かどうかを示す値を取得します。</summary>
        <value>このインスタンスがシールされている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この値は、内部的に設定されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.FrameworkElementFactory" />
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPropertyChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPropertyChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPropertyChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPropertyChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnPropertyChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnPropertyChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="dependencyObject.OnPropertyChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">関心のある依存関係プロパティの識別子、そのタイプのプロパティ メタデータ、新旧の値を含むイベント データ。</param>
        <summary>この <see cref="T:System.Windows.DependencyObject" /> の依存関係プロパティの有効値が更新されると、そのたびに呼び出されます。 変更された特定の依存関係プロパティは、イベント データで報告されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、通常、個々 のプロパティの変更を検出するか、ケースごとにプロパティの無効化を実行するものではありません。 <xref:System.Windows.DependencyObject.OnPropertyChanged%2A> 代わりに、変更、無効化の一般的なパターンのプロパティの広範な分類について特定の情報がわかっている場合です。 変更など、<xref:System.Windows.Freezable>の値の型の変更があります、 <xref:System.Windows.Freezable>、または可能性があります、サブプロパティ他内で変更された箇所<xref:System.Windows.Freezable>参照。 <xref:System.Windows.Freezable>の実装をオーバーライド<xref:System.Windows.DependencyObject.OnPropertyChanged%2A>プロパティ、サブプロパティと、どちらの場合も適切な基本クラス ロジックを提供するかどうかを判断する内部情報を使用します。  
  
 <xref:System.Windows.DependencyObject.OnPropertyChanged%2A> オブジェクトの有効期間中に何度もを呼び出す可能性のあります。 固有のプロパティのメタデータをオーバーライドし、適用する場合、全体的なプロパティ システムのパフォーマンスが向上を実現するそのため、<xref:System.Windows.CoerceValueCallback>または<xref:System.Windows.PropertyChangedCallback>個々 のプロパティ。 場合にこのメソッドを使用すると、<xref:System.Windows.DependencyObject>多数値と相互に依存関係プロパティにはが含まれています動作をレンダリングする必要がありますを再実行するいくつかの関連プロパティの無効化のケースのようにロジックが含まれている場合またはします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>常に、基本実装を呼び出します。 これに失敗には、全体が無効になりますが大幅に[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]プロパティ システムが壊れ、不適切な値が報告されます。</para></block>
        <altmember cref="T:System.Windows.FrameworkElement" />
      </Docs>
    </Member>
    <Member MemberName="ReadLocalValue">
      <MemberSignature Language="C#" Value="public object ReadLocalValue (System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ReadLocalValue(class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadLocalValue (dp As DependencyProperty) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ReadLocalValue(System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="member this.ReadLocalValue : System.Windows.DependencyProperty -&gt; obj" Usage="dependencyObject.ReadLocalValue dp" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="dp">値を取得する対象のプロパティの <see cref="T:System.Windows.DependencyProperty" /> 識別子。</param>
        <summary>ローカルの依存関係プロパティの値を返します (存在する場合)。</summary>
        <returns>ローカル値を返します。ローカル値が設定されていない場合は sentinel 値 <see cref="F:System.Windows.DependencyProperty.UnsetValue" /> を返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用する必要があります<xref:System.Windows.DependencyObject.GetValue%2A>依存関係プロパティの"get"操作で最も一般的な。 <xref:System.Windows.DependencyObject.ReadLocalValue%2A> 返さないさまざまな状況に対する有効な値、値がローカルに設定されていません。  
  
 スタイル、テーマ、テンプレートで設定されている値の場合は、メタデータまたはプロパティ値の継承の既定値はローカル値は考慮されません。 ただし、バインディング、およびその他の式は、ローカルの値が評価された後と見なされます。  
  
 このメソッドが戻るときに、ローカルの値が設定されていない<xref:System.Windows.DependencyProperty.UnsetValue>します。  
  
 返される値が以外の場合は<xref:System.Windows.DependencyProperty.UnsetValue>、戻り値を変換できる具体的な型があるかどうかを判断する要求された依存関係プロパティのメタデータをクエリすることができます。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.DependencyObject.GetLocalValueEnumerator" />
        <altmember cref="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="SetCurrentValue">
      <MemberSignature Language="C#" Value="public void SetCurrentValue (System.Windows.DependencyProperty dp, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCurrentValue(class System.Windows.DependencyProperty dp, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCurrentValue (dp As DependencyProperty, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCurrentValue(System::Windows::DependencyProperty ^ dp, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.SetCurrentValue : System.Windows.DependencyProperty * obj -&gt; unit" Usage="dependencyObject.SetCurrentValue (dp, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dp">設定する依存関係プロパティの識別子。</param>
        <param name="value">新しいローカル値。</param>
        <summary>依存関係プロパティ値のソースを変更せずにその値を設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、プログラムでプロパティをアプリケーションの宣言の使用を無効にしなくても、独自のプロパティのいずれかの値を設定するコンポーネントによって使用されます。 <xref:System.Windows.DependencyObject.SetCurrentValue%2A>メソッド、プロパティが既存のトリガーのデータ バインディングの有効な値を変更して、スタイルは引き続き機能します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">読み取り専用の依存関係プロパティ、またはシールされている <see cref="T:System.Windows.DependencyObject" /> 上のプロパティを変更しようとしました。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="value" /> が、<paramref name="dp" /> プロパティに登録されている正しい型ではありません。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetValue">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>ローカルの依存関係プロパティの値を設定します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (System.Windows.DependencyProperty dp, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValue(class System.Windows.DependencyProperty dp, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (dp As DependencyProperty, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::Windows::DependencyProperty ^ dp, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.SetValue : System.Windows.DependencyProperty * obj -&gt; unit" Usage="dependencyObject.SetValue (dp, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dp">設定する依存関係プロパティの識別子。</param>
        <param name="value">新しいローカル値。</param>
        <summary>依存関係プロパティ識別子を指定して、該当する依存関係プロパティのローカル値を設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 指定された型が最初に登録されているように、依存関係プロパティの宣言されている型が一致しない場合、例外がスローされます。 `value`常に適切な型としてパラメーターを指定する必要があります。  
  
 例外条件によって決まる可能性のある、<xref:System.Windows.DependencyProperty.ValidateValueCallback%2A>設定される依存関係プロパティの依存関係プロパティの識別子上に存在するコールバック。 それ以外の場合、指定された値に (たとえば、ネイティブ型は Double と文字列を渡すなど) の一般的な型チェックの状態を失敗する可能性があります。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">読み取り専用の依存関係プロパティ、またはシールされている <see cref="T:System.Windows.DependencyObject" /> 上のプロパティを変更しようとしました。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="value" /> が、<paramref name="dp" /> プロパティに登録されている正しい型ではありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (System.Windows.DependencyPropertyKey key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValue(class System.Windows.DependencyPropertyKey key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (key As DependencyPropertyKey, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::Windows::DependencyPropertyKey ^ key, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.SetValue : System.Windows.DependencyPropertyKey * obj -&gt; unit" Usage="dependencyObject.SetValue (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Windows.DependencyPropertyKey" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">設定するプロパティの <see cref="T:System.Windows.DependencyPropertyKey" /> 識別子。</param>
        <param name="value">新しいローカル値。</param>
        <summary>依存関係プロパティの <see cref="T:System.Windows.DependencyPropertyKey" /> 識別子で指定した読み取り専用の依存関係プロパティのローカル値を設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この署名は通常、カスタム クラスで定義されている読み取り専用の依存関係プロパティの値を設定するときに使用します。 一般に、<xref:System.Windows.DependencyObject.SetValue%2A>依存関係プロパティの特定の値を提供する内部ロジックを実装して、その依存関係プロパティを登録する型からのみ呼び出されます。 詳細については、「[読み取り専用の依存関係プロパティ](~/docs/framework/wpf/advanced/read-only-dependency-properties.md)」を参照してください。  
  
 指定された型が最初に登録されているように、依存関係プロパティの宣言されている型が一致しない場合、例外がスローされます。 `value`常に適切な型としてパラメーターを指定する必要があります。 例外条件によって決まる可能性のある、<xref:System.Windows.DependencyProperty.ValidateValueCallback%2A>設定される依存関係プロパティの依存関係プロパティの識別子上に存在するコールバック。  
  
   
  
## Examples  
 次の例では、読み取り専用の依存関係プロパティを定義と共に、 `public static readonly` <xref:System.Windows.DependencyProperty>プロパティのコンシューマーとの get アクセサーに必要な読み取り専用の露出を提供する、[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]ラッパー。  
  
 [!code-csharp[WPFAquariumSln#RODP](~/samples/snippets/csharp/VS_Snippets_Wpf/WPFAquariumSln/CSharp/WPFAquariumObjects/Class1.cs#rodp)]
 [!code-vb[WPFAquariumSln#RODP](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WPFAquariumSln/visualbasic/wpfaquariumobjects/class1.vb#rodp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeProperty">
      <MemberSignature Language="C#" Value="protected internal virtual bool ShouldSerializeProperty (System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool ShouldSerializeProperty(class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function ShouldSerializeProperty (dp As DependencyProperty) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool ShouldSerializeProperty(System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="abstract member ShouldSerializeProperty : System.Windows.DependencyProperty -&gt; bool&#xA;override this.ShouldSerializeProperty : System.Windows.DependencyProperty -&gt; bool" Usage="dependencyObject.ShouldSerializeProperty dp" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="dp">シリアル化する必要がある依存関係プロパティの識別子。</param>
        <summary>シリアル化プロセスが、指定された依存関係プロパティの値をシリアル化する必要があるかどうかを示す値を返します。</summary>
        <returns>指定された依存関係プロパティの値をシリアル化する必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定の実装を返します`true`を依存関係プロパティに確立されているローカル値の場合、<xref:System.Windows.DependencyObject>します。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>このメソッドのオーバーライドの処理は、特定の依存関係プロパティに異なる可能性があります。</para></block>
      </Docs>
    </Member>
  </Members>
</Type>