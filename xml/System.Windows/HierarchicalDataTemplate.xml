<Type Name="HierarchicalDataTemplate" FullName="System.Windows.HierarchicalDataTemplate">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="199cb29677bd977727dae2cdd864f03ba6aecfca" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36459345" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class HierarchicalDataTemplate : System.Windows.DataTemplate" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HierarchicalDataTemplate extends System.Windows.DataTemplate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.HierarchicalDataTemplate" />
  <TypeSignature Language="VB.NET" Value="Public Class HierarchicalDataTemplate&#xA;Inherits DataTemplate" />
  <TypeSignature Language="C++ CLI" Value="public ref class HierarchicalDataTemplate : System::Windows::DataTemplate" />
  <TypeSignature Language="F#" Value="type HierarchicalDataTemplate = class&#xA;    inherit DataTemplate" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DataTemplate</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="T:System.Windows.Controls.TreeViewItem" /> や <see cref="T:System.Windows.Controls.MenuItem" /> などの <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> をサポートする <see cref="T:System.Windows.DataTemplate" /> を表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例で、`ListLeagueList` は `League` オブジェクトのリストです。 各 `League` オブジェクトには、`Name` と、`Division` オブジェクトのコレクションがあります。 各 `Division` には、`Name` と `Team` オブジェクトのコレクションがあり、各 `Team` オブジェクトには `Name` があります。  
  
 [!code-xaml[HierarchicalDataTemplateSnippet#HDT](~/samples/snippets/csharp/VS_Snippets_Wpf/HierarchicalDataTemplateSnippet/CS/window1.xaml#hdt)]   
  
 例では、ことを示していますの使用に<xref:System.Windows.HierarchicalDataTemplate>、他のリストを含むリストのデータを簡単に表示できます。 次に示すのは、この例のスクリーンショットです。  
  
 ![HierarchicalDataTemplate のサンプルのスクリーン ショット](~/add/media/databinding-hierarchicaldatatemplate.png "HierarchicalDataTemplate のサンプルのスクリーン ショット")  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Windows.HierarchicalDataTemplate" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HierarchicalDataTemplate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.HierarchicalDataTemplate.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HierarchicalDataTemplate();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.HierarchicalDataTemplate" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HierarchicalDataTemplate (object dataType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object dataType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.HierarchicalDataTemplate.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dataType As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HierarchicalDataTemplate(System::Object ^ dataType);" />
      <MemberSignature Language="F#" Value="new System.Windows.HierarchicalDataTemplate : obj -&gt; System.Windows.HierarchicalDataTemplate" Usage="new System.Windows.HierarchicalDataTemplate dataType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dataType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dataType">このテンプレートの対象となる型。</param>
        <summary>テンプレートの対象となる型を指定して、<see cref="T:System.Windows.HierarchicalDataTemplate" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `dataType`パラメーターは、いずれか、[!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]オブジェクトまたは文字列を表す、[!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)]要素。 詳しくは、「[バインディング ソースの概要](~/docs/framework/wpf/data/binding-sources-overview.md)」をご覧ください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AlternationCount">
      <MemberSignature Language="C#" Value="public int AlternationCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AlternationCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.HierarchicalDataTemplate.AlternationCount" />
      <MemberSignature Language="VB.NET" Value="Public Property AlternationCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AlternationCount { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.AlternationCount : int with get, set" Usage="System.Windows.HierarchicalDataTemplate.AlternationCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>子項目の代替項目コンテナーの数を取得または設定します。</summary>
        <value>項目の次のレベルに対する代替項目コンテナーの数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.ItemsControl.AlternationCount%2A>と<xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType>プロパティが有効にすると、2 つ以上の代替項目コンテナーの表示方法を指定します。 たとえば、各 3 番目の項目の背景色を交互を指定できます、<xref:System.Windows.Controls.ItemsControl>です。  <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType>で各項目のコンテナーに割り当てられている、<xref:System.Windows.Controls.ItemsControl>です。  <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> 0 から始まる、インクリメントを実行するまで<xref:System.Windows.Controls.ItemsControl.AlternationCount%2A>マイナス 1、および 0 にし、再起動します。 たとえば場合、<xref:System.Windows.Controls.ItemsControl.AlternationCount%2A>に 3、7 つのアイテムでは、 <xref:System.Windows.Controls.ItemsControl>、次の表、<xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType>項目ごとにします。  
  
|内の項目の位置、 <xref:System.Windows.Controls.ItemsControl>|<xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType>|  
|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------|  
|1|0|  
|2|1|  
|3|2|  
|4|0|  
|5|1|  
|6|2|  
|7|0|  
  
 設定すると、<xref:System.Windows.HierarchicalDataTemplate.AlternationCount%2A>プロパティが伝え子項目を取得する必要があります、<xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType>その範囲内で項目を持つこのではありません<xref:System.Windows.HierarchicalDataTemplate>を適用します。 たとえば場合、<xref:System.Windows.Controls.HeaderedItemsControl>と呼ばれる`aHeaderedItemsControl`を使用して、<xref:System.Windows.HierarchicalDataTemplate>で、<xref:System.Windows.HierarchicalDataTemplate.AlternationCount%2A>設定すると、項目コンテナーの子項目の`aHeaderedItemsControl`が、<xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType>の項目コンテナーではない`aHeaderedItemsControl`。  
  
 代替項目コンテナーの異なる外観を指定に使用できるいくつかの方法があります。 1 つのメソッドは、項目コンテナーのプロパティをバインドする、<xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType>です。 使用してできます、<xref:System.Windows.Controls.AlternationConverter>を指定する値を持つ特定の項目コンテナーに適用される<xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType>値。 値に応じて、項目コンテナーのプロパティの値を変更するトリガーを使用することができますもその<xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType>です。  
  
   
  
## Examples  
 次の例を作成、<xref:System.Windows.Controls.TreeView>は 3 階層、データにバインドされていると、各項目に表示されます、<xref:System.Windows.Controls.TextBlock>です。  <xref:System.Windows.Controls.TextBlock>最初のレベルのオブジェクトが、同じプロパティ値を持つ、 <xref:System.Windows.Controls.TextBlock> 2 番目のレベルのオブジェクトの代替値を使用して、<xref:System.Windows.Controls.TextBlock.FontStyle%2A>プロパティ、および<xref:System.Windows.Controls.TextBlock>第 3 レベル内のオブジェクトの代替値を使用して、<xref:System.Windows.Controls.TextBlock.Background%2A>プロパティです。  
  
 <xref:System.Windows.HierarchicalDataTemplate>最初のレベルの`Level1Data`が、 <xref:System.Windows.HierarchicalDataTemplate.AlternationCount%2A> 2 に設定するプロパティ、<xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType>の<xref:System.Windows.Controls.TreeViewItem>第 2 レベルの代替に 0 ~ 1 の間のオブジェクト。 <xref:System.Windows.HierarchicalDataTemplate> 2 番目のレベルでは、 `Level2Data`、<xref:System.Windows.Controls.TextBlock.FontStyle%2A>の<xref:System.Windows.Controls.TextBlock>にバインドされて、<xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType>と<xref:System.Windows.Controls.AlternationConverter>に変換することは、 <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> 、交互に<xref:System.Windows.Controls.TextBlock.FontStyle%2A>です。  間に類似した関係が存在する`Level2Data`と`Level3Data`: <xref:System.Windows.HierarchicalDataTemplate.AlternationCount%2A> 3 に設定されている`Level2Data`、および<xref:System.Windows.Controls.TextBlock>で`Level3Ddata`がその<xref:System.Windows.Controls.TextBlock.Background%2A>プロパティにバインドされる、<xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType>です。  
  
 [!code-xaml[AlternationIndexSnippets#5](~/samples/snippets/csharp/VS_Snippets_Wpf/AlternationIndexSnippets/CS/Window1.xaml#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemBindingGroup">
      <MemberSignature Language="C#" Value="public System.Windows.Data.BindingGroup ItemBindingGroup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.BindingGroup ItemBindingGroup" />
      <MemberSignature Language="DocId" Value="P:System.Windows.HierarchicalDataTemplate.ItemBindingGroup" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemBindingGroup As BindingGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::BindingGroup ^ ItemBindingGroup { System::Windows::Data::BindingGroup ^ get(); void set(System::Windows::Data::BindingGroup ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemBindingGroup : System.Windows.Data.BindingGroup with get, set" Usage="System.Windows.HierarchicalDataTemplate.ItemBindingGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>各子項目にコピーされる <see cref="T:System.Windows.Data.BindingGroup" /> を取得または設定します。</summary>
        <value>各子項目にコピーされる <see cref="T:System.Windows.Data.BindingGroup" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 設定すると、<xref:System.Windows.Controls.ItemsControl.ItemBindingGroup%2A>プロパティ、各アイテムのコンテナーを取得、<xref:System.Windows.Data.BindingGroup>を持つ同じ<xref:System.Windows.Controls.ValidationRule>としてオブジェクトの<xref:System.Windows.Controls.ItemsControl.ItemBindingGroup%2A>など、バインド内のデータを記述するプロパティが、<xref:System.Windows.Data.BindingGroup.Items%2A>と<xref:System.Windows.Data.BindingGroup.BindingExpressions%2A>、されます内の各項目のデータを特定、<xref:System.Windows.Controls.ItemsControl>です。  項目コンテナーのアクセスする必要があります<xref:System.Windows.FrameworkContentElement.BindingGroup%2A>を実行する操作など、データと検証の項目でエラーを確認します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemContainerStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Style ItemContainerStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Style ItemContainerStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.HierarchicalDataTemplate.ItemContainerStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemContainerStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Style ^ ItemContainerStyle { System::Windows::Style ^ get(); void set(System::Windows::Style ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemContainerStyle : System.Windows.Style with get, set" Usage="System.Windows.HierarchicalDataTemplate.ItemContainerStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>各子項目の項目コンテナーに適用される <see cref="T:System.Windows.Style" /> を取得または設定します。</summary>
        <value>各子項目の項目コンテナーに適用される <see cref="T:System.Windows.Style" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを使用する、または<xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyleSelector%2A>データ項目が含まれる要素の外観に影響するスタイルを設定するプロパティです。 たとえば、 <xref:System.Windows.Controls.TreeView>、生成されたコンテナーは<xref:System.Windows.Controls.TreeViewItem>が制御の<xref:System.Windows.Controls.Menu>は<xref:System.Windows.Controls.MenuItem>コントロール。  
  
   
  
## Examples  
 次の例を作成、<xref:System.Windows.Controls.TreeView>その最初のレベル内の項目の 1 つのスタイルを使用して、第 2 レベルの項目を別のスタイルをします。  最初のレベルのスタイルを設定、<xref:System.Windows.Controls.ItemsControl.ItemContainerStyle%2A>のプロパティ、<xref:System.Windows.Controls.TreeView>です。  2 番目のレベルのスタイルを設定、<xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyle%2A>のプロパティ、<xref:System.Windows.HierarchicalDataTemplate>です。  
  
 [!code-xaml[RecycleItemContainerShippets#VirtualizingTreeView](~/samples/snippets/csharp/VS_Snippets_Wpf/RecycleItemContainerShippets/CSharp/Window1.xaml#virtualizingtreeview)]  
  
 次の例では、前の例で使用されるデータを作成します。  
  
 [!code-csharp[RecycleItemContainerShippets#TreeViewData](~/samples/snippets/csharp/VS_Snippets_Wpf/RecycleItemContainerShippets/CSharp/Window1.xaml.cs#treeviewdata)]
 [!code-vb[RecycleItemContainerShippets#TreeViewData](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RecycleItemContainerShippets/visualbasic/window1.xaml.vb#treeviewdata)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemContainerStyleSelector">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.StyleSelector ItemContainerStyleSelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.StyleSelector ItemContainerStyleSelector" />
      <MemberSignature Language="DocId" Value="P:System.Windows.HierarchicalDataTemplate.ItemContainerStyleSelector" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemContainerStyleSelector As StyleSelector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::StyleSelector ^ ItemContainerStyleSelector { System::Windows::Controls::StyleSelector ^ get(); void set(System::Windows::Controls::StyleSelector ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemContainerStyleSelector : System.Windows.Controls.StyleSelector with get, set" Usage="System.Windows.HierarchicalDataTemplate.ItemContainerStyleSelector" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.StyleSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>各項目コンテナーに適用できるスタイルについて、スタイル選択のカスタム ロジックを取得または設定します。</summary>
        <value>
          <see cref="T:System.Windows.Controls.StyleSelector" /> として使用するスタイルを選択する <see cref="P:System.Windows.HierarchicalDataTemplate.ItemContainerStyle" />。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用する、<xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyle%2A>データ項目が含まれる要素の外観に影響するスタイルを設定するプロパティです。 たとえば、 <xref:System.Windows.Controls.TreeView>、生成されたコンテナーは<xref:System.Windows.Controls.TreeViewItem>が制御の<xref:System.Windows.Controls.Menu>は<xref:System.Windows.Controls.MenuItem>コントロール。 使用するかどうかは、複数のスタイルを定義して適用するには、どちらを選択するロジックを指定する必要があります、<xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyleSelector%2A>プロパティの代わりに、<xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyle%2A>プロパティです。 場合、このプロパティは無視されることに注意してください、<xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyle%2A>プロパティを設定します。  
  
   
  
## Examples  
 次の例を作成、<xref:System.Windows.Controls.TreeView>を使用して、<xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyle%2A>の<xref:System.Windows.HierarchicalDataTemplate>間の項目の第 2 レベルに 2 つのスタイルを選択する、<xref:System.Windows.Controls.TreeView>です。  
  
 [!code-xaml[RecycleItemContainerShippets#ItemContainerStyleSelector](~/samples/snippets/csharp/VS_Snippets_Wpf/RecycleItemContainerShippets/CSharp/Window1.xaml#itemcontainerstyleselector)]  
  
 次の例は、<xref:System.Windows.Controls.StyleSelector>前の例で使用されます。  
  
 [!code-csharp[RecycleItemContainerShippets#TreeViewItemStyleSelector](~/samples/snippets/csharp/VS_Snippets_Wpf/RecycleItemContainerShippets/CSharp/Window1.xaml.cs#treeviewitemstyleselector)]
 [!code-vb[RecycleItemContainerShippets#TreeViewItemStyleSelector](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RecycleItemContainerShippets/visualbasic/window1.xaml.vb#treeviewitemstyleselector)]  
  
 次の例では、前の例で使用されるデータを作成します。  
  
 [!code-csharp[RecycleItemContainerShippets#TreeViewData](~/samples/snippets/csharp/VS_Snippets_Wpf/RecycleItemContainerShippets/CSharp/Window1.xaml.cs#treeviewdata)]
 [!code-vb[RecycleItemContainerShippets#TreeViewData](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RecycleItemContainerShippets/visualbasic/window1.xaml.vb#treeviewdata)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemsSource">
      <MemberSignature Language="C#" Value="public System.Windows.Data.BindingBase ItemsSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.BindingBase ItemsSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.HierarchicalDataTemplate.ItemsSource" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemsSource As BindingBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::BindingBase ^ ItemsSource { System::Windows::Data::BindingBase ^ get(); void set(System::Windows::Data::BindingBase ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemsSource : System.Windows.Data.BindingBase with get, set" Usage="System.Windows.HierarchicalDataTemplate.ItemsSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ階層内の次のレベルを表すコレクションを検索する場所を示す、このデータ テンプレートのバインドを取得または設定します。</summary>
        <value>既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 これに適用される、<xref:System.Windows.Controls.ItemsControl.ItemsSource%2A>プロパティを生成された<xref:System.Windows.Controls.HeaderedItemsControl>(など、<xref:System.Windows.Controls.MenuItem>または<xref:System.Windows.Controls.TreeViewItem>) をデータ階層の次のレベルを表すコレクションを検索する場所を示します。  
  
<a name="xamlTextUsage_ItemsSource"></a>   
## <a name="xaml-text-usage"></a>XAML テキストの使用方法  
 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]についてを参照してください、<xref:System.Windows.Data.Binding>型です。  
  
   
  
## Examples  
 次の例で、`ListLeagueList` は `League` オブジェクトのリストです。 各 `League` オブジェクトには、`Name` と、`Division` オブジェクトのコレクションがあります。 各 `Division` には、`Name` と `Team` オブジェクトのコレクションがあり、各 `Team` オブジェクトには `Name` があります。  
  
 [!code-xaml[HierarchicalDataTemplateSnippet#HDT](~/samples/snippets/csharp/VS_Snippets_Wpf/HierarchicalDataTemplateSnippet/CS/window1.xaml#hdt)]   
  
 例では、ことを示していますの使用に<xref:System.Windows.HierarchicalDataTemplate>、他のリストを含むリストのデータを簡単に表示できます。 次に示すのは、この例のスクリーンショットです。  
  
 ![HierarchicalDataTemplate のサンプルのスクリーン ショット](~/add/media/databinding-hierarchicaldatatemplate.png "HierarchicalDataTemplate のサンプルのスクリーン ショット")  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemStringFormat">
      <MemberSignature Language="C#" Value="public string ItemStringFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ItemStringFormat" />
      <MemberSignature Language="DocId" Value="P:System.Windows.HierarchicalDataTemplate.ItemStringFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemStringFormat As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ItemStringFormat { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemStringFormat : string with get, set" Usage="System.Windows.HierarchicalDataTemplate.ItemStringFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ階層の次のレベル内の項目が文字列として表示される場合に、その書式を指定する複合文字列を取得または設定します。</summary>
        <value>データ階層の次のレベル内の項目が文字列として表示される場合に、その書式を指定する複合文字列。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemTemplate">
      <MemberSignature Language="C#" Value="public System.Windows.DataTemplate ItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DataTemplate ItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.HierarchicalDataTemplate.ItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemTemplate As DataTemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DataTemplate ^ ItemTemplate { System::Windows::DataTemplate ^ get(); void set(System::Windows::DataTemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemTemplate : System.Windows.DataTemplate with get, set" Usage="System.Windows.HierarchicalDataTemplate.ItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DataTemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ階層の次のレベルにある項目の表示方法を示すために、生成された <see cref="T:System.Windows.DataTemplate" /> (<see cref="P:System.Windows.Controls.ItemsControl.ItemTemplate" /> や <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> など) の <see cref="T:System.Windows.Controls.MenuItem" /> プロパティに適用する <see cref="T:System.Windows.Controls.TreeViewItem" /> を取得または設定します。</summary>
        <value>データ階層の次のレベルにある項目の表示方法を示すために、生成された <see cref="T:System.Windows.DataTemplate" /> (<see cref="P:System.Windows.Controls.ItemsControl.ItemTemplate" /> や <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> など) の <see cref="T:System.Windows.Controls.MenuItem" /> プロパティに適用する <see cref="T:System.Windows.Controls.TreeViewItem" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemTemplateSelector">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.DataTemplateSelector ItemTemplateSelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.DataTemplateSelector ItemTemplateSelector" />
      <MemberSignature Language="DocId" Value="P:System.Windows.HierarchicalDataTemplate.ItemTemplateSelector" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemTemplateSelector As DataTemplateSelector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::DataTemplateSelector ^ ItemTemplateSelector { System::Windows::Controls::DataTemplateSelector ^ get(); void set(System::Windows::Controls::DataTemplateSelector ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemTemplateSelector : System.Windows.Controls.DataTemplateSelector with get, set" Usage="System.Windows.HierarchicalDataTemplate.ItemTemplateSelector" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.DataTemplateSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ階層の次のレベルにある項目を表示するテンプレートの選択方法を示すために、生成された <see cref="T:System.Windows.Controls.DataTemplateSelector" /> (<see cref="P:System.Windows.Controls.ItemsControl.ItemTemplateSelector" /> や <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> など) の <see cref="T:System.Windows.Controls.MenuItem" /> プロパティに適用する <see cref="T:System.Windows.Controls.TreeViewItem" /> を取得または設定します。</summary>
        <value>データ階層の次のレベルにある項目を表示するテンプレートの選択方法を示すために、生成された <see cref="T:System.Windows.Controls.DataTemplateSelector" /> (<see cref="P:System.Windows.Controls.ItemsControl.ItemTemplateSelector" /> や <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> など) の <see cref="T:System.Windows.Controls.MenuItem" /> プロパティに適用する <see cref="T:System.Windows.Controls.TreeViewItem" /> オブジェクト。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>