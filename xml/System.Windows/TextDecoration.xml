<Type Name="TextDecoration" FullName="System.Windows.TextDecoration">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4322424d188ee5899926051bc94fffd8525dcc80" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30679806" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class TextDecoration : System.Windows.Media.Animation.Animatable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed TextDecoration extends System.Windows.Media.Animation.Animatable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.TextDecoration" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TextDecoration&#xA;Inherits Animatable" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextDecoration sealed : System::Windows::Media::Animation::Animatable" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Animation.Animatable</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>文字装飾を表します。文字装飾とは、テキストに追加する下線などの装飾です。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 文字の装飾の 4 つの種類があります: 下線、基準、取り消し線、および上線。 次の例は、文字の装飾のテキストに対する相対位置を示します。  
  
 ![テキスト装飾位置のダイアグラム](~/add/media/textdecoration01.gif "テキスト装飾位置のダイアグラム")  
テキスト装飾の種類の例  
  
 次の例では、線形グラデーション ブラシとペンの破線スタイルが設定されているテキスト装飾を示します。  
  
 ![線形グラデーション下線付き文字飾り](~/add/media/textdecoration02.png "線形グラデーション下線付き文字飾り")  
線形グラデーションのスタイルの下線の例ブラシ、ペンの破線  
  
 注意して<xref:System.Windows.TextDecoration>から派生した<xref:System.Windows.Media.Animation.Animatable>です。 使用して、装飾要素にアニメーション効果を適用できるようになります、<xref:System.Windows.Media.Animation.DoubleAnimation>の<xref:System.Windows.TextDecoration.PenOffset%2A>と<xref:System.Windows.Media.Animation.ThicknessAnimation>の<xref:System.Windows.TextDecoration.Pen%2A>です。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.TextDecorations" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Windows.TextDecoration" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextDecoration ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TextDecoration.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextDecoration();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.TextDecoration" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定値、<xref:System.Windows.TextDecoration.Location%2A>プロパティは<xref:System.Windows.TextDecorationLocation.Underline>します。  
  
   
  
## Examples  
 次のコード例を作成する方法を示しています、<xref:System.Windows.TextDecoration>既定コンス トラクターを使用します。  
  
 [!code-csharp[TextDecorationSnippets#TextDecorationSnippets2](~/samples/snippets/csharp/VS_Snippets_Wpf/TextDecorationSnippets/CSharp/Window1.xaml.cs#textdecorationsnippets2)]
 [!code-vb[TextDecorationSnippets#TextDecorationSnippets2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextDecorationSnippets/visualbasic/window1.xaml.vb#textdecorationsnippets2)]
 [!code-xaml[TextDecorationSnippets#TextDecorationSnippets2](~/samples/snippets/csharp/VS_Snippets_Wpf/TextDecorationSnippets/CSharp/Window1.xaml#textdecorationsnippets2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextDecoration (System.Windows.TextDecorationLocation location, System.Windows.Media.Pen pen, double penOffset, System.Windows.TextDecorationUnit penOffsetUnit, System.Windows.TextDecorationUnit penThicknessUnit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.TextDecorationLocation location, class System.Windows.Media.Pen pen, float64 penOffset, valuetype System.Windows.TextDecorationUnit penOffsetUnit, valuetype System.Windows.TextDecorationUnit penThicknessUnit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TextDecoration.#ctor(System.Windows.TextDecorationLocation,System.Windows.Media.Pen,System.Double,System.Windows.TextDecorationUnit,System.Windows.TextDecorationUnit)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextDecoration(System::Windows::TextDecorationLocation location, System::Windows::Media::Pen ^ pen, double penOffset, System::Windows::TextDecorationUnit penOffsetUnit, System::Windows::TextDecorationUnit penThicknessUnit);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="location" Type="System.Windows.TextDecorationLocation" />
        <Parameter Name="pen" Type="System.Windows.Media.Pen" />
        <Parameter Name="penOffset" Type="System.Double" />
        <Parameter Name="penOffsetUnit" Type="System.Windows.TextDecorationUnit" />
        <Parameter Name="penThicknessUnit" Type="System.Windows.TextDecorationUnit" />
      </Parameters>
      <Docs>
        <param name="location">文字装飾の位置。</param>
        <param name="pen">文字装飾の描画に使用される <see cref="T:System.Windows.Media.Pen" />。 この値が <see langword="null" /> の場合、文字装飾の色が適用対象のテキストの色に一致し、文字装飾の太さがフォントで推奨されている太さに設定されます。</param>
        <param name="penOffset">文字装飾の位置からの垂直移動距離。 負の値の場合は文字装飾が下に移動し、正の値の場合は上に移動します。</param>
        <param name="penOffsetUnit">
          <c>penOffset</c> の値を解釈するために使用される単位。</param>
        <param name="penThicknessUnit">
          <c>pen</c> の <see cref="P:System.Windows.Media.Pen.Thickness" /> の値を解釈するために使用される単位。</param>
        <summary>
          <see cref="T:System.Windows.TextDecoration" />、<see cref="P:System.Windows.TextDecoration.Location" />、<see cref="P:System.Windows.TextDecoration.Pen" />、<see cref="P:System.Windows.TextDecoration.PenOffset" />、<see cref="P:System.Windows.TextDecoration.PenOffsetUnit" /> のそれぞれの値を指定して、<see cref="P:System.Windows.TextDecoration.PenThicknessUnit" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例を作成する方法を示しています、<xref:System.Windows.TextDecoration>を使用して、 `location`、 `pen`、 `penOffset`、 `penOffsetUnit`、および`penThicknessUnit`パラメーター。  
  
 [!code-csharp[TextDecorationSnippets#TextDecorationSnippets6](~/samples/snippets/csharp/VS_Snippets_Wpf/TextDecorationSnippets/CSharp/Window1.xaml.cs#textdecorationsnippets6)]
 [!code-vb[TextDecorationSnippets#TextDecorationSnippets6](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextDecorationSnippets/visualbasic/window1.xaml.vb#textdecorationsnippets6)]
 [!code-xaml[TextDecorationSnippets#TextDecorationSnippets6](~/samples/snippets/csharp/VS_Snippets_Wpf/TextDecorationSnippets/CSharp/Window1.xaml#textdecorationsnippets6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.TextDecoration Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.TextDecoration Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TextDecoration.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As TextDecoration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::TextDecoration ^ Clone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.TextDecoration</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>この <see cref="T:System.Windows.TextDecoration" /> の変更可能な複製を作成し、このオブジェクトの値の詳細コピーを作成します。</summary>
        <returns>現在のオブジェクトの変更可能な複製。 複製されたオブジェクトの <see cref="P:System.Windows.Freezable.IsFrozen" /> プロパティは、ソースの <see cref="P:System.Windows.Freezable.IsFrozen" /> プロパティが <see langword="true." /> である場合でも、<see langword="false" /> になります。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドを使用して、固定された <xref:System.Windows.Freezable> オブジェクト (または任意の <xref:System.Windows.Freezable> オブジェクト) の変更可能なコピーを作成します。 便宜上は、このメソッドは、厳密に型指定された実装が継承したバージョンをシャドウします。  
  
 詳細については、「<xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>」を参照してください。  
  
 このメソッドは、依存関係プロパティをコピーするときにリソース参照とデータ バインディングをコピーしますが (ただし、これらは解決されなくなる場合があります)、アニメーションやその現在の値はコピーしません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValue">
      <MemberSignature Language="C#" Value="public System.Windows.TextDecoration CloneCurrentValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.TextDecoration CloneCurrentValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TextDecoration.CloneCurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public Function CloneCurrentValue () As TextDecoration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::TextDecoration ^ CloneCurrentValue();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.TextDecoration</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>この <see cref="T:System.Windows.TextDecoration" /> オブジェクトの変更可能な複製を作成し、このオブジェクトの現在値の詳細コピーを作成します。</summary>
        <returns>現在のオブジェクトの変更可能な複製。 複製されたオブジェクトの <see cref="P:System.Windows.Freezable.IsFrozen" /> プロパティ値は、ソースの <see cref="P:System.Windows.Freezable.IsFrozen" /> プロパティ値が <see langword="false" /> の場合でも <see langword="true" /> です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドを使用して、固定された <xref:System.Windows.Freezable> オブジェクト (または任意の <xref:System.Windows.Freezable> オブジェクト) の変更可能なコピーを作成します。 便宜上は、このメソッドは、厳密に型指定された実装が継承したバージョンをシャドウします。  
  
 詳細については、「<xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType>」を参照してください。  
  
 リソース参照、データ バインディング、アニメーションはコピーされませんが、それらの現在値はコピーされます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TextDecoration.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public System.Windows.TextDecorationLocation Location { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.TextDecorationLocation Location" />
      <MemberSignature Language="DocId" Value="P:System.Windows.TextDecoration.Location" />
      <MemberSignature Language="VB.NET" Value="Public Property Location As TextDecorationLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::TextDecorationLocation Location { System::Windows::TextDecorationLocation get(); void set(System::Windows::TextDecorationLocation value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.TextDecorationLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>文字装飾が描画される垂直位置を取得または設定します。</summary>
        <value>文字装飾が描画される垂直位置。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 次の例は、文字の装飾のテキストに対する相対位置を示します。  
  
 ![テキスト装飾位置のダイアグラム](~/add/media/textdecoration01.gif "テキスト装飾位置のダイアグラム")  
テキスト装飾の種類の例  
  
 <xref:System.Windows.TextDecoration.PenOffset%2A>プロパティでは、指定された対象から文字飾りをオフセットできます。<xref:System.Windows.TextDecoration.Location%2A>です。  
  
<a name="dependencyPropertyInfo_Location"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.TextDecoration.LocationProperty>|  
|メタデータ プロパティに設定します。 `true`|なし|  
  
   
  
## Examples  
 次のコード例では、純色のブラシ、ペンを使用した取り消し線テキスト装飾が作成されます。 <xref:System.Windows.TextDecoration.Location%2A> プロパティが <xref:System.Windows.TextDecorationLocation.Strikethrough> に設定されている。  
  
 [!code-csharp[textdecorationsnippets#TextDecorationSnippets1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextDecorationSnippets/CSharp/Window1.xaml.cs#textdecorationsnippets1)]
 [!code-vb[textdecorationsnippets#TextDecorationSnippets1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextDecorationSnippets/visualbasic/window1.xaml.vb#textdecorationsnippets1)]
 [!code-xaml[textdecorationsnippets#TextDecorationSnippets1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextDecorationSnippets/CSharp/Window1.xaml#textdecorationsnippets1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LocationProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty LocationProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty LocationProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.TextDecoration.LocationProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LocationProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ LocationProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.TextDecoration.Location" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pen">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Pen Pen { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Pen Pen" />
      <MemberSignature Language="DocId" Value="P:System.Windows.TextDecoration.Pen" />
      <MemberSignature Language="VB.NET" Value="Public Property Pen As Pen" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Pen ^ Pen { System::Windows::Media::Pen ^ get(); void set(System::Windows::Media::Pen ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Pen</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>文字装飾を描画するために使用される <see cref="T:System.Windows.Media.Pen" /> を取得または設定します。</summary>
        <value>文字装飾の描画に使用される <see cref="T:System.Windows.Media.Pen" />。 この値が場合<c>null</c>装飾の色を適用する文字列と一致して、装飾の太さに設定されているフォントの推奨される、太さです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 次の例では、線形グラデーション ブラシとペンの破線スタイルが設定されているテキスト装飾を示します。  
  
 ![線形グラデーション下線付き文字飾り](~/add/media/textdecoration02.png "線形グラデーション下線付き文字飾り")  
線形グラデーションのスタイルの下線の例ブラシ、ペンの破線  
  
<a name="dependencyPropertyInfo_Pen"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.TextDecoration.PenProperty>|  
|メタデータ プロパティに設定します。 `true`|なし|  
  
   
  
## Examples  
 次のコード例では、下線の文字装飾を破線のペンの線形グラデーション ブラシを使用して作成されます。  
  
 [!code-csharp[textdecorationsnippets#TextDecorationSnippets3](~/samples/snippets/csharp/VS_Snippets_Wpf/TextDecorationSnippets/CSharp/Window1.xaml.cs#textdecorationsnippets3)]
 [!code-vb[textdecorationsnippets#TextDecorationSnippets3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextDecorationSnippets/visualbasic/window1.xaml.vb#textdecorationsnippets3)]
 [!code-xaml[textdecorationsnippets#TextDecorationSnippets3](~/samples/snippets/csharp/VS_Snippets_Wpf/TextDecorationSnippets/CSharp/Window1.xaml#textdecorationsnippets3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.TextDecoration.PenThicknessUnit" />
      </Docs>
    </Member>
    <Member MemberName="PenOffset">
      <MemberSignature Language="C#" Value="public double PenOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 PenOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.TextDecoration.PenOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property PenOffset As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double PenOffset { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.TextDecoration.Location" /> からの文字装飾のオフセットを取得または設定します。</summary>
        <value>
          <see cref="P:System.Windows.TextDecoration.Location" /> からの文字装飾のオフセット。 既定値は 0 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 負の値は、正の値が低い文字飾りを移動中に、以降では、文字飾りを移動します。 使用して、<xref:System.Windows.TextDecoration.PenOffsetUnit%2A>プロパティをこの値の単位を解釈する方法を指定します。  
  
<a name="dependencyPropertyInfo_PenOffset"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.TextDecoration.PenOffsetProperty>|  
|メタデータ プロパティに設定します。 `true`|なし|  
  
   
  
## Examples  
 <xref:System.Windows.TextDecoration.PenOffset%2A> プロパティを設定する方法を次のコード例に示します。  
  
 [!code-csharp[TextDecorationSnippets#TextDecorationSnippets7](~/samples/snippets/csharp/VS_Snippets_Wpf/TextDecorationSnippets/CSharp/Window1.xaml.cs#textdecorationsnippets7)]
 [!code-vb[TextDecorationSnippets#TextDecorationSnippets7](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextDecorationSnippets/visualbasic/window1.xaml.vb#textdecorationsnippets7)]
 [!code-xaml[TextDecorationSnippets#TextDecorationSnippets7](~/samples/snippets/csharp/VS_Snippets_Wpf/TextDecorationSnippets/CSharp/Window1.xaml#textdecorationsnippets7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.TextDecoration.PenOffsetUnit" />
      </Docs>
    </Member>
    <Member MemberName="PenOffsetProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PenOffsetProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PenOffsetProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.TextDecoration.PenOffsetProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PenOffsetProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PenOffsetProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.TextDecoration.PenOffset" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PenOffsetUnit">
      <MemberSignature Language="C#" Value="public System.Windows.TextDecorationUnit PenOffsetUnit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.TextDecorationUnit PenOffsetUnit" />
      <MemberSignature Language="DocId" Value="P:System.Windows.TextDecoration.PenOffsetUnit" />
      <MemberSignature Language="VB.NET" Value="Public Property PenOffsetUnit As TextDecorationUnit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::TextDecorationUnit PenOffsetUnit { System::Windows::TextDecorationUnit get(); void set(System::Windows::TextDecorationUnit value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.TextDecorationUnit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.TextDecoration.PenOffset" /> の値が表される単位を取得します。</summary>
        <value>
          <see cref="P:System.Windows.TextDecoration.PenOffset" /> の値が表される単位。 既定値は、<see cref="F:System.Windows.TextDecorationUnit.FontRecommended" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_PenOffsetUnit"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.TextDecoration.PenOffsetUnitProperty>|  
|メタデータ プロパティに設定します。 `true`|なし|  
  
   
  
## Examples  
 <xref:System.Windows.TextDecoration.PenOffsetUnit%2A> プロパティを設定する方法を次のコード例に示します。  
  
 [!code-csharp[TextDecorationSnippets#TextDecorationSnippets7](~/samples/snippets/csharp/VS_Snippets_Wpf/TextDecorationSnippets/CSharp/Window1.xaml.cs#textdecorationsnippets7)]
 [!code-vb[TextDecorationSnippets#TextDecorationSnippets7](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextDecorationSnippets/visualbasic/window1.xaml.vb#textdecorationsnippets7)]
 [!code-xaml[TextDecorationSnippets#TextDecorationSnippets7](~/samples/snippets/csharp/VS_Snippets_Wpf/TextDecorationSnippets/CSharp/Window1.xaml#textdecorationsnippets7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PenOffsetUnitProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PenOffsetUnitProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PenOffsetUnitProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.TextDecoration.PenOffsetUnitProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PenOffsetUnitProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PenOffsetUnitProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.TextDecoration.PenOffsetUnit" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PenProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PenProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PenProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.TextDecoration.PenProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PenProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PenProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.TextDecoration.Pen" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PenThicknessUnit">
      <MemberSignature Language="C#" Value="public System.Windows.TextDecorationUnit PenThicknessUnit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.TextDecorationUnit PenThicknessUnit" />
      <MemberSignature Language="DocId" Value="P:System.Windows.TextDecoration.PenThicknessUnit" />
      <MemberSignature Language="VB.NET" Value="Public Property PenThicknessUnit As TextDecorationUnit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::TextDecorationUnit PenThicknessUnit { System::Windows::TextDecorationUnit get(); void set(System::Windows::TextDecorationUnit value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.TextDecorationUnit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>文字装飾の <see cref="P:System.Windows.Media.Pen.Thickness" /> の <see cref="P:System.Windows.TextDecoration.Pen" /> が表される単位を取得します。</summary>
        <value>文字装飾の <see cref="P:System.Windows.Media.Pen.Thickness" /> の <see cref="P:System.Windows.TextDecoration.Pen" /> が表される単位。 既定値は、<see cref="F:System.Windows.TextDecorationUnit.FontRecommended" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_PenThicknessUnit"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.TextDecoration.PenThicknessUnitProperty>|  
|メタデータ プロパティに設定します。 `true`|なし|  
  
   
  
## Examples  
 <xref:System.Windows.TextDecoration.PenThicknessUnit%2A> プロパティを設定する方法を次のコード例に示します。  
  
 [!code-csharp[TextDecorationSnippets#TextDecorationSnippets7](~/samples/snippets/csharp/VS_Snippets_Wpf/TextDecorationSnippets/CSharp/Window1.xaml.cs#textdecorationsnippets7)]
 [!code-vb[TextDecorationSnippets#TextDecorationSnippets7](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextDecorationSnippets/visualbasic/window1.xaml.vb#textdecorationsnippets7)]
 [!code-xaml[TextDecorationSnippets#TextDecorationSnippets7](~/samples/snippets/csharp/VS_Snippets_Wpf/TextDecorationSnippets/CSharp/Window1.xaml#textdecorationsnippets7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PenThicknessUnitProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PenThicknessUnitProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PenThicknessUnitProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.TextDecoration.PenThicknessUnitProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PenThicknessUnitProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PenThicknessUnitProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.TextDecoration.PenThicknessUnit" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>