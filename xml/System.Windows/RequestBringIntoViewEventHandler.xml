<Type Name="RequestBringIntoViewEventHandler" FullName="System.Windows.RequestBringIntoViewEventHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1fabd3e8ca79d0ed50a5a9c8a6f00299e7b8f9dd" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37491196" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void RequestBringIntoViewEventHandler(object sender, RequestBringIntoViewEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed RequestBringIntoViewEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.RequestBringIntoViewEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub RequestBringIntoViewEventHandler(sender As Object, e As RequestBringIntoViewEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void RequestBringIntoViewEventHandler(System::Object ^ sender, RequestBringIntoViewEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type RequestBringIntoViewEventHandler = delegate of obj * RequestBringIntoViewEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Windows.RequestBringIntoViewEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">
      <span data-ttu-id="135ca-101">イベント ハンドラーがアタッチされているオブジェクト。</span>
      <span class="sxs-lookup">
        <span data-stu-id="135ca-101">The object where the event handler is attached.</span>
      </span>
    </param>
    <param name="e">
      <span data-ttu-id="135ca-102">イベントのデータ。</span>
      <span class="sxs-lookup">
        <span data-stu-id="135ca-102">The event data.</span>
      </span>
    </param>
    <summary>
      <span data-ttu-id="135ca-103">
        <see cref="E:System.Windows.FrameworkElement.RequestBringIntoView" /> ルーティング イベントを処理するメソッドを表します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="135ca-103">Represents the method that will handle the <see cref="E:System.Windows.FrameworkElement.RequestBringIntoView" /> routed event.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="135ca-104">このイベントの処理のみ完了、スクロール可能なリージョンをサポートしたり、それ以外の場合意図的に、レンダリング サイズよりも小さく設定、結合された要素内で必要な子要素のコンテンツのサイズは、通常とは意図的に処理することによってのみ実行しますイベントが要素ツリーの上へルーティングし、最初の親に到達するとスクロールのリージョンのサポートを提供します。</span><span class="sxs-lookup"><span data-stu-id="135ca-104">Handling this event is typically only done within elements that support a scrollable region, or otherwise deliberately set their rendering size smaller than the combined desired size of their child element content, and is only done by deliberately handling the event once it has routed upwards in the element tree and has reached the first parent that offers scrolling region support.</span></span> <span data-ttu-id="135ca-105">通常、ユーザー コントロールの望ましい方法でのスクロール領域を処理する既存の実装は<xref:System.Windows.Controls.ScrollViewer>します。</span><span class="sxs-lookup"><span data-stu-id="135ca-105">An existing implementation that handles scrolling regions in a manner that is typically desirable for user controls is <xref:System.Windows.Controls.ScrollViewer>.</span></span> <span data-ttu-id="135ca-106">派生する場合<xref:System.Windows.Controls.ScrollViewer>のクラス ハンドラーを登録する<xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType>イベントの基本クラス処理を補完します。</span><span class="sxs-lookup"><span data-stu-id="135ca-106">If you derive from <xref:System.Windows.Controls.ScrollViewer>, you can register a class handler for <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType> and supplement the base class handling of the event.</span></span> <span data-ttu-id="135ca-107">または、クラス定義のクラス処理を使用しても考慮する必要があります<xref:System.Windows.Controls.ScrollViewer.ScrollChanged>イベントの代わりに<xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="135ca-107">You should also consider using or class-handling the class-defined <xref:System.Windows.Controls.ScrollViewer.ScrollChanged> event instead of <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType>.</span></span> <span data-ttu-id="135ca-108">またはから派生していない完全なカスタム クラスを作成するかどうかは<xref:System.Windows.Controls.ScrollViewer>、呼び出すことで、クラス処理を追加することができます<xref:System.Windows.EventManager.RegisterClassHandler%2A?displayProperty=nameWithType>クラスのインスタンス化にします。</span><span class="sxs-lookup"><span data-stu-id="135ca-108">Alternatively, if you create an entirely custom class that does not derive from <xref:System.Windows.Controls.ScrollViewer>, you can still add class handling by calling <xref:System.Windows.EventManager.RegisterClassHandler%2A?displayProperty=nameWithType> in your class instantiation.</span></span>  <span data-ttu-id="135ca-109">クラス処理の詳細については、次を参照してください。[ルーティング イベントの処理済み、およびクラス処理としてのマーキング](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md)します。</span><span class="sxs-lookup"><span data-stu-id="135ca-109">For details on class handling, see [Marking Routed Events as Handled, and Class Handling](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md).</span></span>  
  
 <span data-ttu-id="135ca-110">コンテンツ要素がそのコンテンツのホストで発生するイベントが発生することができます (を呼び出す<xref:System.Windows.FrameworkContentElement.BringIntoView%2A>と発生<xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType>コンテンツ ホストから)。</span><span class="sxs-lookup"><span data-stu-id="135ca-110">Content elements can cause the event to be raised by their content hosts (through calling <xref:System.Windows.FrameworkContentElement.BringIntoView%2A> and raising <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType> from the content host).</span></span> <span data-ttu-id="135ca-111">同様に、ヘルパー メソッドを使用してビューに読み込む論理ツリーの要素を要求できます<xref:System.Windows.LogicalTreeHelper.BringIntoView%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="135ca-111">Similarly, you can request logical tree elements to be brought into view with the helper method <xref:System.Windows.LogicalTreeHelper.BringIntoView%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="135ca-112">A<xref:System.Windows.Controls.ListBox>関連ですが異なるメソッドを実装する<xref:System.Windows.Controls.ListBox.ScrollIntoView%2A>します。</span><span class="sxs-lookup"><span data-stu-id="135ca-112">A <xref:System.Windows.Controls.ListBox> implements a related but different method <xref:System.Windows.Controls.ListBox.ScrollIntoView%2A>.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.RequestBringIntoViewEventArgs" />
    <altmember cref="P:System.Windows.UIElement.ClipToBounds" />
    <altmember cref="T:System.Windows.Controls.Primitives.ScrollBar" />
    <altmember cref="T:System.Windows.Controls.ScrollViewer" />
    <altmember cref="M:System.Windows.FrameworkElement.BringIntoView(System.Windows.Rect)" />
    <altmember cref="M:System.Windows.LogicalTreeHelper.BringIntoView(System.Windows.DependencyObject)" />
  </Docs>
</Type>