<Type Name="RequestBringIntoViewEventHandler" FullName="System.Windows.RequestBringIntoViewEventHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="29f709ce2f7161f5a13d7d2836d9dadeb6349dcc" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36457655" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void RequestBringIntoViewEventHandler(object sender, RequestBringIntoViewEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed RequestBringIntoViewEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.RequestBringIntoViewEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub RequestBringIntoViewEventHandler(sender As Object, e As RequestBringIntoViewEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void RequestBringIntoViewEventHandler(System::Object ^ sender, RequestBringIntoViewEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type RequestBringIntoViewEventHandler = delegate of obj * RequestBringIntoViewEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Windows.RequestBringIntoViewEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">イベント ハンドラーがアタッチされているオブジェクト。</param>
    <param name="e">イベントのデータ。</param>
    <summary>
      <see cref="E:System.Windows.FrameworkElement.RequestBringIntoView" /> ルーティング イベントを処理するメソッドを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 のみ行う、スクロール可能な領域をサポートしたり、それ以外の場合意図的に描画サイズよりも小さく設定複合要素内で必要な子要素のコンテンツのサイズは、通常このイベントを処理し、意図的に処理することによってのみ行われます、一度が上方向要素ツリーでルーティングし、スクロール領域のサポートを提供する最初の親に達してイベントです。 通常、ユーザー コントロールの適切な方法でスクロール領域を処理する既存の実装は<xref:System.Windows.Controls.ScrollViewer>します。 派生した場合<xref:System.Windows.Controls.ScrollViewer>、クラス ハンドラーを登録できます<xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType>イベントの基本クラス処理を補足するものとします。 または、クラス処理、クラス定義を使用しても考慮する必要があります<xref:System.Windows.Controls.ScrollViewer.ScrollChanged>の代わりにイベント<xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType>です。 代わりに、完全なカスタム クラスから派生していないことを作成するかどうかは<xref:System.Windows.Controls.ScrollViewer>、クラス処理を呼び出すことによって追加できます<xref:System.Windows.EventManager.RegisterClassHandler%2A?displayProperty=nameWithType>クラスのインスタンス化でします。  クラスの処理の詳細については、「 [Handled、クラス処理とルーティング イベントをマーク](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md)です。  
  
 コンテンツの要素には、イベントがそのコンテンツ ホストにより発生する可能性があります (呼び出しを介して<xref:System.Windows.FrameworkContentElement.BringIntoView%2A>と発生<xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType>コンテンツ ホストから)。 同様に、要求内に収めるビュー、ヘルパー メソッドを使用する論理ツリー要素<xref:System.Windows.LogicalTreeHelper.BringIntoView%2A?displayProperty=nameWithType>です。  
  
 A<xref:System.Windows.Controls.ListBox>関連ですが異なるメソッドを実装する<xref:System.Windows.Controls.ListBox.ScrollIntoView%2A>です。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.RequestBringIntoViewEventArgs" />
    <altmember cref="P:System.Windows.UIElement.ClipToBounds" />
    <altmember cref="T:System.Windows.Controls.Primitives.ScrollBar" />
    <altmember cref="T:System.Windows.Controls.ScrollViewer" />
    <altmember cref="M:System.Windows.FrameworkElement.BringIntoView(System.Windows.Rect)" />
    <altmember cref="M:System.Windows.LogicalTreeHelper.BringIntoView(System.Windows.DependencyObject)" />
  </Docs>
</Type>