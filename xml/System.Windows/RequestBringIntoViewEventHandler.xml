<Type Name="RequestBringIntoViewEventHandler" FullName="System.Windows.RequestBringIntoViewEventHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cda95cbf8cf82761ed796773cf82db1b1779f599" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void RequestBringIntoViewEventHandler(object sender, RequestBringIntoViewEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed RequestBringIntoViewEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.RequestBringIntoViewEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub RequestBringIntoViewEventHandler(sender As Object, e As RequestBringIntoViewEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void RequestBringIntoViewEventHandler(System::Object ^ sender, RequestBringIntoViewEventArgs ^ e);" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Windows.RequestBringIntoViewEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">
      <span data-ttu-id="fc7cc-101">イベント ハンドラーがアタッチされているオブジェクト。</span>
      <span class="sxs-lookup">
        <span data-stu-id="fc7cc-101">The object where the event handler is attached.</span>
      </span>
    </param>
    <param name="e">
      <span data-ttu-id="fc7cc-102">イベントのデータ。</span>
      <span class="sxs-lookup">
        <span data-stu-id="fc7cc-102">The event data.</span>
      </span>
    </param>
    <summary>
      <span data-ttu-id="fc7cc-103">
        <see cref="E:System.Windows.FrameworkElement.RequestBringIntoView" /> ルーティング イベントを処理するメソッドを表します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="fc7cc-103">Represents the method that will handle the <see cref="E:System.Windows.FrameworkElement.RequestBringIntoView" /> routed event.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc7cc-104">このイベントを処理して、スクロール可能な領域をサポートしたり、それ以外の場合意図的にサイズの設定、表示、子要素のコンテンツの合計の目的のサイズより小さい要素内でのみ実行は、通常、意図的に一度が上方向要素ツリーでルーティングし、スクロール領域のサポートを提供する最初の親に達してイベントを処理することによってのみ実行されます。</span><span class="sxs-lookup"><span data-stu-id="fc7cc-104">Handling this event is typically only done within elements that support a scrollable region, or otherwise deliberately set their rendering size smaller than the combined desired size of their child element content, and is only done by deliberately handling the event once it has routed upwards in the element tree and has reached the first parent that offers scrolling region support.</span></span> <span data-ttu-id="fc7cc-105">通常、ユーザー コントロールの適切な方法でスクロール領域を処理する既存の実装は<xref:System.Windows.Controls.ScrollViewer>します。</span><span class="sxs-lookup"><span data-stu-id="fc7cc-105">An existing implementation that handles scrolling regions in a manner that is typically desirable for user controls is <xref:System.Windows.Controls.ScrollViewer>.</span></span> <span data-ttu-id="fc7cc-106">派生した場合<xref:System.Windows.Controls.ScrollViewer>、クラス ハンドラーを登録できます<xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType>イベントの基本クラス処理を補足するものとします。</span><span class="sxs-lookup"><span data-stu-id="fc7cc-106">If you derive from <xref:System.Windows.Controls.ScrollViewer>, you can register a class handler for <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType> and supplement the base class handling of the event.</span></span> <span data-ttu-id="fc7cc-107">または、クラス処理、クラス定義を使用しても考慮する必要があります<xref:System.Windows.Controls.ScrollViewer.ScrollChanged>の代わりにイベント<xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="fc7cc-107">You should also consider using or class-handling the class-defined <xref:System.Windows.Controls.ScrollViewer.ScrollChanged> event instead of <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType>.</span></span> <span data-ttu-id="fc7cc-108">代わりに、完全なカスタム クラスから派生していないことを作成するかどうかは<xref:System.Windows.Controls.ScrollViewer>、クラス処理を呼び出すことによって追加できます<xref:System.Windows.EventManager.RegisterClassHandler%2A?displayProperty=nameWithType>クラスのインスタンス化でします。</span><span class="sxs-lookup"><span data-stu-id="fc7cc-108">Alternatively, if you create an entirely custom class that does not derive from <xref:System.Windows.Controls.ScrollViewer>, you can still add class handling by calling <xref:System.Windows.EventManager.RegisterClassHandler%2A?displayProperty=nameWithType> in your class instantiation.</span></span>  <span data-ttu-id="fc7cc-109">クラスの処理の詳細については、「 [Handled、クラス処理とルーティング イベントをマーク](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md)です。</span><span class="sxs-lookup"><span data-stu-id="fc7cc-109">For details on class handling, see [Marking Routed Events as Handled, and Class Handling](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md).</span></span>  
  
 <span data-ttu-id="fc7cc-110">コンテンツの要素には、イベントがそのコンテンツ ホストにより発生する可能性があります (呼び出しを介して<xref:System.Windows.FrameworkContentElement.BringIntoView%2A>と発生<xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType>コンテンツ ホストから)。</span><span class="sxs-lookup"><span data-stu-id="fc7cc-110">Content elements can cause the event to be raised by their content hosts (through calling <xref:System.Windows.FrameworkContentElement.BringIntoView%2A> and raising <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType> from the content host).</span></span> <span data-ttu-id="fc7cc-111">同様に、要求内に収めるビュー、ヘルパー メソッドを使用する論理ツリー要素<xref:System.Windows.LogicalTreeHelper.BringIntoView%2A?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="fc7cc-111">Similarly, you can request logical tree elements to be brought into view with the helper method <xref:System.Windows.LogicalTreeHelper.BringIntoView%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="fc7cc-112">A<xref:System.Windows.Controls.ListBox>関連ですが異なるメソッドを実装する<xref:System.Windows.Controls.ListBox.ScrollIntoView%2A>です。</span><span class="sxs-lookup"><span data-stu-id="fc7cc-112">A <xref:System.Windows.Controls.ListBox> implements a related but different method <xref:System.Windows.Controls.ListBox.ScrollIntoView%2A>.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.RequestBringIntoViewEventArgs" />
    <altmember cref="P:System.Windows.UIElement.ClipToBounds" />
    <altmember cref="T:System.Windows.Controls.Primitives.ScrollBar" />
    <altmember cref="T:System.Windows.Controls.ScrollViewer" />
    <altmember cref="M:System.Windows.FrameworkElement.BringIntoView(System.Windows.Rect)" />
    <altmember cref="M:System.Windows.LogicalTreeHelper.BringIntoView(System.Windows.DependencyObject)" />
  </Docs>
</Type>