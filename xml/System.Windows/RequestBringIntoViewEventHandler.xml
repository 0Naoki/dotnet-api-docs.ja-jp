<Type Name="RequestBringIntoViewEventHandler" FullName="System.Windows.RequestBringIntoViewEventHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1fabd3e8ca79d0ed50a5a9c8a6f00299e7b8f9dd" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37491196" /></Metadata><TypeSignature Language="C#" Value="public delegate void RequestBringIntoViewEventHandler(object sender, RequestBringIntoViewEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed RequestBringIntoViewEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.RequestBringIntoViewEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub RequestBringIntoViewEventHandler(sender As Object, e As RequestBringIntoViewEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void RequestBringIntoViewEventHandler(System::Object ^ sender, RequestBringIntoViewEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type RequestBringIntoViewEventHandler = delegate of obj * RequestBringIntoViewEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Windows.RequestBringIntoViewEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">イベント ハンドラーがアタッチされているオブジェクト。</param>
    <param name="e">イベントのデータ。</param>
    <summary><see cref="E:System.Windows.FrameworkElement.RequestBringIntoView" /> ルーティング イベントを処理するメソッドを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このイベントの処理のみ完了、スクロール可能なリージョンをサポートしたり、それ以外の場合意図的に、レンダリング サイズよりも小さく設定、結合された要素内で必要な子要素のコンテンツのサイズは、通常とは意図的に処理することによってのみ実行しますイベントが要素ツリーの上へルーティングし、最初の親に到達するとスクロールのリージョンのサポートを提供します。 通常、ユーザー コントロールの望ましい方法でのスクロール領域を処理する既存の実装は<xref:System.Windows.Controls.ScrollViewer>します。 派生する場合<xref:System.Windows.Controls.ScrollViewer>のクラス ハンドラーを登録する<xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType>イベントの基本クラス処理を補完します。 または、クラス定義のクラス処理を使用しても考慮する必要があります<xref:System.Windows.Controls.ScrollViewer.ScrollChanged>イベントの代わりに<xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType>します。 またはから派生していない完全なカスタム クラスを作成するかどうかは<xref:System.Windows.Controls.ScrollViewer>、呼び出すことで、クラス処理を追加することができます<xref:System.Windows.EventManager.RegisterClassHandler%2A?displayProperty=nameWithType>クラスのインスタンス化にします。  クラス処理の詳細については、次を参照してください。[ルーティング イベントの処理済み、およびクラス処理としてのマーキング](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md)します。  
  
 コンテンツ要素がそのコンテンツのホストで発生するイベントが発生することができます (を呼び出す<xref:System.Windows.FrameworkContentElement.BringIntoView%2A>と発生<xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType>コンテンツ ホストから)。 同様に、ヘルパー メソッドを使用してビューに読み込む論理ツリーの要素を要求できます<xref:System.Windows.LogicalTreeHelper.BringIntoView%2A?displayProperty=nameWithType>します。  
  
 A<xref:System.Windows.Controls.ListBox>関連ですが異なるメソッドを実装する<xref:System.Windows.Controls.ListBox.ScrollIntoView%2A>します。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.RequestBringIntoViewEventArgs" />
    <altmember cref="P:System.Windows.UIElement.ClipToBounds" />
    <altmember cref="T:System.Windows.Controls.Primitives.ScrollBar" />
    <altmember cref="T:System.Windows.Controls.ScrollViewer" />
    <altmember cref="M:System.Windows.FrameworkElement.BringIntoView(System.Windows.Rect)" />
    <altmember cref="M:System.Windows.LogicalTreeHelper.BringIntoView(System.Windows.DependencyObject)" />
  </Docs>
</Type>