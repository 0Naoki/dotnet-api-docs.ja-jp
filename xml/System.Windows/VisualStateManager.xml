<Type Name="VisualStateManager" FullName="System.Windows.VisualStateManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="62802edb0070bc2002b46dd7fadfc15159e10f8b" />
    <Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="11/29/2018" />
    <Meta Name="ms.locfileid" Value="52594106" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class VisualStateManager : System.Windows.DependencyObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit VisualStateManager extends System.Windows.DependencyObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.VisualStateManager" />
  <TypeSignature Language="VB.NET" Value="Public Class VisualStateManager&#xA;Inherits DependencyObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class VisualStateManager : System::Windows::DependencyObject" />
  <TypeSignature Language="F#" Value="type VisualStateManager = class&#xA;    inherit DependencyObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="b744f-101">コントロールの状態を遷移するための状態とロジックを管理します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="b744f-101">Manages states and the logic for transitioning between states for controls.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b744f-102"><xref:System.Windows.VisualStateManager>と特定の状態にあるときに、コントロールの状態が変更されたときに、コントロール、コントロールの外観の状態を指定することができます。</span><span class="sxs-lookup"><span data-stu-id="b744f-102">The <xref:System.Windows.VisualStateManager> enables you to specify states for a control, the appearance of a control when it is in a certain state, and when a control changes states.</span></span> <span data-ttu-id="b744f-103">たとえば、<xref:System.Windows.Controls.Button>が押されていない場合よりもそれが押されたとき、少し異なる外観があります。</span><span class="sxs-lookup"><span data-stu-id="b744f-103">For example, a <xref:System.Windows.Controls.Button> might have a slightly different appearance when it is pressed than when it is not pressed.</span></span> <span data-ttu-id="b744f-104">2 つの状態、<xref:System.Windows.Controls.Button>定義が押されたときに対応 (`"Pressed"`) ではない場合、(`"Normal"`)。</span><span class="sxs-lookup"><span data-stu-id="b744f-104">Two states that the <xref:System.Windows.Controls.Button> defines correspond to when it is pressed (`"Pressed"`) and when it is not (`"Normal"`).</span></span> <span data-ttu-id="b744f-105">によって状態にあるときにコントロールの外観が定義されている、<xref:System.Windows.VisualState>します。</span><span class="sxs-lookup"><span data-stu-id="b744f-105">The appearance of a control when it is in a state is defined by a <xref:System.Windows.VisualState>.</span></span> <span data-ttu-id="b744f-106">A<xref:System.Windows.VisualState>のコレクションを含む<xref:System.Windows.Media.Animation.Storyboard>コントロールがその状態のときに、コントロールの外観がどのように変化するかを指定するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b744f-106">A <xref:System.Windows.VisualState> contains a collection of <xref:System.Windows.Media.Animation.Storyboard> objects that specify how the control's appearance changes when the control is in that state.</span></span> <span data-ttu-id="b744f-107">コントロールに設定して表示状態を追加する、`VisualStateManager.VisualStateGroups`コントロールのプロパティをアタッチします。</span><span class="sxs-lookup"><span data-stu-id="b744f-107">You add visual states to a control by setting the `VisualStateManager.VisualStateGroups` attached property on the control.</span></span> <span data-ttu-id="b744f-108">各<xref:System.Windows.VisualStateGroup>のコレクションを含む<xref:System.Windows.VisualState>相互に排他的であるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b744f-108">Each <xref:System.Windows.VisualStateGroup> contains a collection of <xref:System.Windows.VisualState> objects that are mutually exclusive.</span></span> <span data-ttu-id="b744f-109">つまり、コントロールは常に 1 つだけ状態の各<xref:System.Windows.VisualStateGroup>します。</span><span class="sxs-lookup"><span data-stu-id="b744f-109">That is, the control is always in exactly one state of in each <xref:System.Windows.VisualStateGroup>.</span></span>  
  
 <span data-ttu-id="b744f-110"><xref:System.Windows.VisualStateManager>コントロールが特定の状態に入ったときに指定することもできます。</span><span class="sxs-lookup"><span data-stu-id="b744f-110">The <xref:System.Windows.VisualStateManager> also enables you to specify when a control enters a specific state.</span></span> <span data-ttu-id="b744f-111">状態の変更を呼び出す必要のあるメソッドは、シナリオによって異なります。</span><span class="sxs-lookup"><span data-stu-id="b744f-111">The method that you should call to change states depends on your scenario.</span></span> <span data-ttu-id="b744f-112">使用するコントロールを作成する場合、<xref:System.Windows.VisualStateManager>でその<xref:System.Windows.Controls.ControlTemplate>を呼び出し、<xref:System.Windows.VisualStateManager.GoToState%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="b744f-112">If you create a control that uses the <xref:System.Windows.VisualStateManager> in its <xref:System.Windows.Controls.ControlTemplate>, call the <xref:System.Windows.VisualStateManager.GoToState%2A> method.</span></span> <span data-ttu-id="b744f-113">作成する方法の詳細については、その使用をコントロールには、<xref:System.Windows.VisualStateManager>を参照してください[外観をカスタマイズできる作成、コントロールを持つ](~/docs/framework/wpf/controls/creating-a-control-that-has-a-customizable-appearance.md)します。</span><span class="sxs-lookup"><span data-stu-id="b744f-113">For more information about how to create controls that use the <xref:System.Windows.VisualStateManager>, see [Creating a Control That Has a Customizable Appearance](~/docs/framework/wpf/controls/creating-a-control-that-has-a-customizable-appearance.md).</span></span> <span data-ttu-id="b744f-114">使用する場合、<xref:System.Windows.VisualStateManager>の外部、 <xref:System.Windows.Controls.ControlTemplate> (を使用する場合など、<xref:System.Windows.VisualStateManager>で、<xref:System.Windows.Controls.UserControl>または単一の要素) を呼び出す、<xref:System.Windows.VisualStateManager.GoToElementState%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="b744f-114">If you use the <xref:System.Windows.VisualStateManager> outside of a <xref:System.Windows.Controls.ControlTemplate> (for example, if you use a <xref:System.Windows.VisualStateManager> in a <xref:System.Windows.Controls.UserControl> or in a single element), call the <xref:System.Windows.VisualStateManager.GoToElementState%2A> method.</span></span> <span data-ttu-id="b744f-115">どちらの場合、<xref:System.Windows.VisualStateManager>適切に開始および関連する状態に関連付けられているストーリー ボードを停止するために必要なロジックを実行します。</span><span class="sxs-lookup"><span data-stu-id="b744f-115">In either case, the <xref:System.Windows.VisualStateManager> performs the logic that is required to appropriately start and stop the storyboards that are associated with the involved state.</span></span> <span data-ttu-id="b744f-116">たとえば、コントロールが、状態を定義する`State1`と`State2`、それぞれが関連付けられているストーリー ボードを持ちます。</span><span class="sxs-lookup"><span data-stu-id="b744f-116">For example, suppose that a control defines the states, `State1` and `State2`, each of which has a storyboard associated with it.</span></span> <span data-ttu-id="b744f-117">場合は、コントロールが`State1`渡す`State2`に<xref:System.Windows.VisualStateManager.GoToState%2A>または<xref:System.Windows.VisualStateManager.GoToElementState%2A>、<xref:System.Windows.VisualStateManager>でストーリー ボードを起動`State2`でストーリー ボードを停止して`State1`します。</span><span class="sxs-lookup"><span data-stu-id="b744f-117">If the control is in `State1` and you pass `State2` to <xref:System.Windows.VisualStateManager.GoToState%2A> or <xref:System.Windows.VisualStateManager.GoToElementState%2A>, the <xref:System.Windows.VisualStateManager> starts the storyboard in `State2` and stops the storyboard in `State1`.</span></span>  
  
 <span data-ttu-id="b744f-118">コントロールに含まれている[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]を使用して、<xref:System.Windows.VisualStateManager>ビジュアル状態を変更します。</span><span class="sxs-lookup"><span data-stu-id="b744f-118">Controls that are included with [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] use the <xref:System.Windows.VisualStateManager> to change visual states.</span></span> <span data-ttu-id="b744f-119">作成するとき、<xref:System.Windows.Controls.ControlTemplate>に含まれているコントロールの[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]、追加することができます<xref:System.Windows.VisualState>オブジェクトをコントロールの<xref:System.Windows.Controls.ControlTemplate>を特定の状態で、コントロールの外観を指定します。</span><span class="sxs-lookup"><span data-stu-id="b744f-119">When you create a <xref:System.Windows.Controls.ControlTemplate> for a control that is included with [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], you can add <xref:System.Windows.VisualState> objects to the control's <xref:System.Windows.Controls.ControlTemplate> to specify the control's appearance in a certain state.</span></span> <span data-ttu-id="b744f-120">含まれているコントロールの視覚的な状態の名前を検索する[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]を参照してください[コントロールのスタイルとテンプレート](~/docs/framework/wpf/controls/control-styles-and-templates.md)します。</span><span class="sxs-lookup"><span data-stu-id="b744f-120">To find the names of the visual states for the controls that are included with [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], see [Control Styles and Templates](~/docs/framework/wpf/controls/control-styles-and-templates.md).</span></span> <span data-ttu-id="b744f-121">コントロールのロジックのハンドルが他にも何もする必要はありませんので、状態を遷移を定義、 <xref:System.Windows.VisualState> 、新しいオブジェクト<xref:System.Windows.Controls.ControlTemplate>します。</span><span class="sxs-lookup"><span data-stu-id="b744f-121">The control's logic handles transitioning between states, so you do not need to do anything other than define the <xref:System.Windows.VisualState> objects in the new <xref:System.Windows.Controls.ControlTemplate>.</span></span> <span data-ttu-id="b744f-122">既存のコントロールのコントロール テンプレートを作成する方法の詳細については、次を参照してください。 [ControlTemplate の作成による既存のコントロールの外観のカスタマイズ](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)します。</span><span class="sxs-lookup"><span data-stu-id="b744f-122">For more information about how to create control templates for existing controls, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  
  
 <span data-ttu-id="b744f-123">継承する必要がありますの状態を遷移するためのロジックを実装する場合は、 <xref:System.Windows.VisualStateManager>、オーバーライド、<xref:System.Windows.VisualStateManager.GoToStateCore%2A>メソッド、およびセット、<xref:System.Windows.VisualStateManager.CustomVisualStateManager%2A?displayProperty=nameWithType>添付プロパティのカスタム ロジックを使用するコントロール。</span><span class="sxs-lookup"><span data-stu-id="b744f-123">If you want to implement your own logic for transitioning between states, you must inherit from <xref:System.Windows.VisualStateManager>, override the <xref:System.Windows.VisualStateManager.GoToStateCore%2A> method, and set the <xref:System.Windows.VisualStateManager.CustomVisualStateManager%2A?displayProperty=nameWithType> attached property on the control that uses the custom logic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b744f-124">次の例では、作成、<xref:System.Windows.Shapes.Rectangle>を追加し、<xref:System.Windows.VisualStateGroup>という名前の`CommonStates`を`VisualStateManager.VisualStatesGroups`添付プロパティ。</span><span class="sxs-lookup"><span data-stu-id="b744f-124">The following example creates a <xref:System.Windows.Shapes.Rectangle> and adds a <xref:System.Windows.VisualStateGroup> named `CommonStates` to the `VisualStateManager.VisualStatesGroups` attached property.</span></span> <span data-ttu-id="b744f-125">例では、定義、`MouseOver`と`Normal`<xref:System.Windows.VisualState>内のオブジェクト、 `CommonStates`<xref:System.Windows.VisualStateGroup>します。</span><span class="sxs-lookup"><span data-stu-id="b744f-125">The example defines the `MouseOver` and `Normal`<xref:System.Windows.VisualState> objects in the `CommonStates`<xref:System.Windows.VisualStateGroup>.</span></span> <span data-ttu-id="b744f-126">ユーザーが経由でマウス ポインターを移動したときに、 <xref:System.Windows.Shapes.Rectangle>、変更赤から緑の 0.5 秒です。</span><span class="sxs-lookup"><span data-stu-id="b744f-126">When the user moves the mouse pointer over the <xref:System.Windows.Shapes.Rectangle>, it changes from red to green over one half second.</span></span> <span data-ttu-id="b744f-127">ユーザーが、四角形からマウスを移動すると、<xref:System.Windows.Controls.Grid>赤に変更がすぐにバックアップします。</span><span class="sxs-lookup"><span data-stu-id="b744f-127">When the user moves the mouse away from the rectangle, the <xref:System.Windows.Controls.Grid> immediately changes back to red.</span></span> <span data-ttu-id="b744f-128">なお、`Normal`状態が定義されていません、<xref:System.Windows.Media.Animation.Storyboard>します。</span><span class="sxs-lookup"><span data-stu-id="b744f-128">Note that the `Normal` state does not define a <xref:System.Windows.Media.Animation.Storyboard>.</span></span> <span data-ttu-id="b744f-129">A<xref:System.Windows.Media.Animation.Storyboard>ため必要はないときに、<xref:System.Windows.Shapes.Rectangle>から遷移、`MouseOver`状態、 `Normal` 、状態、<xref:System.Windows.Media.Animation.Storyboard>の`MouseOver`が停止していると<xref:System.Windows.Media.SolidColorBrush.Color%2A>プロパティを<xref:System.Windows.Media.SolidColorBrush>を返します赤。</span><span class="sxs-lookup"><span data-stu-id="b744f-129">A <xref:System.Windows.Media.Animation.Storyboard> is not required because when the <xref:System.Windows.Shapes.Rectangle> transitions from the `MouseOver` state to the `Normal` state, the <xref:System.Windows.Media.Animation.Storyboard> for `MouseOver` is stopped and the <xref:System.Windows.Media.SolidColorBrush.Color%2A> property for the <xref:System.Windows.Media.SolidColorBrush> returns to red.</span></span>  
  
 [!code-xaml[VSMCustomControl#VSMNoTemplate](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmcustomcontrol/csharp/window1.xaml#vsmnotemplate)]  
  
 <span data-ttu-id="b744f-130">次の例では、イベント ハンドラーの呼び出しと前の例で定義されている、<xref:System.Windows.VisualStateManager.GoToElementState%2A>状態間を遷移するメソッド。</span><span class="sxs-lookup"><span data-stu-id="b744f-130">The following example shows the event handler that is defined in the previous example and calls the <xref:System.Windows.VisualStateManager.GoToElementState%2A> method to transition between states.</span></span> <span data-ttu-id="b744f-131">前の例の四角形の一部であったかどうか、 <xref:System.Windows.Controls.ControlTemplate>、例を呼び出す必要があります、<xref:System.Windows.VisualStateManager.GoToState%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="b744f-131">If the rectangle in the previous example was part of a <xref:System.Windows.Controls.ControlTemplate>, the example would have to call the <xref:System.Windows.VisualStateManager.GoToState%2A> method.</span></span>  
  
 [!code-csharp[VSMCustomControl#GoToElementState](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmcustomcontrol/csharp/window1.xaml.cs#gotoelementstate)]
 [!code-vb[VSMCustomControl#GoToElementState](~/samples/snippets/visualbasic/VS_Snippets_Wpf/vsmcustomcontrol/visualbasic/window1.xaml.vb#gotoelementstate)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VisualStateManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.VisualStateManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VisualStateManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b744f-132">
            <see cref="T:System.Windows.VisualStateManager" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b744f-132">Initializes a new instance of the <see cref="T:System.Windows.VisualStateManager" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomVisualStateManager">
      <MemberSignature Language="C#" Value="see GetCustomVisualStateManager, and SetCustomVisualStateManager" />
      <MemberSignature Language="ILAsm" Value="see GetCustomVisualStateManager, and SetCustomVisualStateManager" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualStateManager.CustomVisualStateManager" />
      <MemberSignature Language="VB.NET" Value="see GetCustomVisualStateManager, and SetCustomVisualStateManager" />
      <MemberSignature Language="F#" Value="see GetCustomVisualStateManager, and SetCustomVisualStateManager" Usage="see GetCustomVisualStateManager, and SetCustomVisualStateManager" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b744f-133">コントロールの状態を遷移させる <see cref="T:System.Windows.VisualStateManager" /> オブジェクトを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b744f-133">Gets or sets the <see cref="T:System.Windows.VisualStateManager" /> object that transitions between the states of a control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b744f-134">場合<xref:System.Windows.VisualStateManager.CustomVisualStateManager%2A>は`null`、<xref:System.Windows.VisualStateManager>状態間の遷移を独自のロジックを使用します。</span><span class="sxs-lookup"><span data-stu-id="b744f-134">If <xref:System.Windows.VisualStateManager.CustomVisualStateManager%2A> is `null`, the <xref:System.Windows.VisualStateManager> uses its own logic to transition between states.</span></span> <span data-ttu-id="b744f-135">継承するクラスの作成状態を遷移するためのロジックを実装する場合は、<xref:System.Windows.VisualStateManager>をオーバーライドし、<xref:System.Windows.VisualStateManager.GoToStateCore%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="b744f-135">If you want to implement your own logic for transitioning between states, create a class that inherits from <xref:System.Windows.VisualStateManager> and override the <xref:System.Windows.VisualStateManager.GoToStateCore%2A> method.</span></span> <span data-ttu-id="b744f-136">カスタム クラスを使用する設定、<xref:System.Windows.VisualStateManager.CustomVisualStateManager%2A>プロパティをカスタム型のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b744f-136">To use the custom class, set the <xref:System.Windows.VisualStateManager.CustomVisualStateManager%2A> property to an object of your custom type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomVisualStateManagerProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CustomVisualStateManagerProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CustomVisualStateManagerProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.VisualStateManager.CustomVisualStateManagerProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CustomVisualStateManagerProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CustomVisualStateManagerProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CustomVisualStateManagerProperty : System.Windows.DependencyProperty" Usage="System.Windows.VisualStateManager.CustomVisualStateManagerProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b744f-137">
            <see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager" /> 依存関係プロパティを識別します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b744f-137">Identifies the <see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomVisualStateManager">
      <MemberSignature Language="C#" Value="public static System.Windows.VisualStateManager GetCustomVisualStateManager (System.Windows.FrameworkElement obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.VisualStateManager GetCustomVisualStateManager(class System.Windows.FrameworkElement obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.VisualStateManager.GetCustomVisualStateManager(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomVisualStateManager (obj As FrameworkElement) As VisualStateManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::VisualStateManager ^ GetCustomVisualStateManager(System::Windows::FrameworkElement ^ obj);" />
      <MemberSignature Language="F#" Value="static member GetCustomVisualStateManager : System.Windows.FrameworkElement -&gt; System.Windows.VisualStateManager" Usage="System.Windows.VisualStateManager.GetCustomVisualStateManager obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.VisualStateManager</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="b744f-138">
            <see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager" /> 添付プロパティの取得元の要素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b744f-138">The element to get the <see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager" /> attached property from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b744f-139">
            <see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager" /> 添付プロパティを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b744f-139">Gets the <see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager" /> attached property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b744f-140">コントロールの状態を切り替える表示状態マネージャー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b744f-140">The visual state manager that transitions between the states of a control.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVisualStateGroups">
      <MemberSignature Language="C#" Value="public static System.Collections.IList GetVisualStateGroups (System.Windows.FrameworkElement obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.IList GetVisualStateGroups(class System.Windows.FrameworkElement obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.VisualStateManager.GetVisualStateGroups(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetVisualStateGroups (obj As FrameworkElement) As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::IList ^ GetVisualStateGroups(System::Windows::FrameworkElement ^ obj);" />
      <MemberSignature Language="F#" Value="static member GetVisualStateGroups : System.Windows.FrameworkElement -&gt; System.Collections.IList" Usage="System.Windows.VisualStateManager.GetVisualStateGroups obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="b744f-141">
            <see cref="P:System.Windows.VisualStateManager.VisualStateGroups" /> 添付プロパティの取得元の要素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b744f-141">The element to get the <see cref="P:System.Windows.VisualStateManager.VisualStateGroups" /> attached property from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b744f-142">
            <see cref="P:System.Windows.VisualStateManager.VisualStateGroups" /> 添付プロパティを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b744f-142">Gets the <see cref="P:System.Windows.VisualStateManager.VisualStateGroups" /> attached property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b744f-143">指定したオブジェクトに関連付けられた <see cref="T:System.Windows.VisualStateGroup" /> オブジェクトのコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b744f-143">The collection of <see cref="T:System.Windows.VisualStateGroup" /> objects that is associated with the specified object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GoToElementState">
      <MemberSignature Language="C#" Value="public static bool GoToElementState (System.Windows.FrameworkElement stateGroupsRoot, string stateName, bool useTransitions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GoToElementState(class System.Windows.FrameworkElement stateGroupsRoot, string stateName, bool useTransitions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.VisualStateManager.GoToElementState(System.Windows.FrameworkElement,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GoToElementState (stateGroupsRoot As FrameworkElement, stateName As String, useTransitions As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool GoToElementState(System::Windows::FrameworkElement ^ stateGroupsRoot, System::String ^ stateName, bool useTransitions);" />
      <MemberSignature Language="F#" Value="static member GoToElementState : System.Windows.FrameworkElement * string * bool -&gt; bool" Usage="System.Windows.VisualStateManager.GoToElementState (stateGroupsRoot, stateName, useTransitions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stateGroupsRoot" Type="System.Windows.FrameworkElement" />
        <Parameter Name="stateName" Type="System.String" />
        <Parameter Name="useTransitions" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stateGroupsRoot">
          <span data-ttu-id="b744f-144">
            <see cref="T:System.Windows.VisualStateManager" /> を含んでいるルート要素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b744f-144">The root element that contains the <see cref="T:System.Windows.VisualStateManager" />.</span>
          </span>
        </param>
        <param name="stateName">
          <span data-ttu-id="b744f-145">切り替え先の状態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b744f-145">The state to transition to.</span>
          </span>
        </param>
        <param name="useTransitions">
          <span data-ttu-id="b744f-146">
            <see cref="T:System.Windows.VisualTransition" /> オブジェクトを使用して状態を遷移させる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b744f-146">
              <see langword="true" /> to use a <see cref="T:System.Windows.VisualTransition" /> object to transition between states; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b744f-147">要素を 2 つの状態の間で遷移させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b744f-147">Transitions the element between two states.</span>
          </span>
          <span data-ttu-id="b744f-148">このメソッドを使用して、コントロールによって定義された状態ではなく、アプリケーションによって定義された状態に遷移します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b744f-148">Use this method to transition states that are defined by an application, rather than defined by a control.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b744f-149">コントロールが新しい状態に正常に遷移した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b744f-149">
              <see langword="true" /> if the control successfully transitioned to the new state; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b744f-150">呼び出す、<xref:System.Windows.VisualStateManager.GoToElementState%2A>外の要素の状態を変更するメソッド、 <xref:System.Windows.Controls.ControlTemplate> (を使用する場合など、<xref:System.Windows.VisualStateManager>で、<xref:System.Windows.DataTemplate>または<xref:System.Windows.Window>)。</span><span class="sxs-lookup"><span data-stu-id="b744f-150">Call the <xref:System.Windows.VisualStateManager.GoToElementState%2A> method to change states on an element outside of a <xref:System.Windows.Controls.ControlTemplate> (for example, if you use a <xref:System.Windows.VisualStateManager> in a <xref:System.Windows.DataTemplate> or <xref:System.Windows.Window>).</span></span> <span data-ttu-id="b744f-151">呼び出す、<xref:System.Windows.VisualStateManager.GoToState%2A>メソッドを使用するコントロールの状態を変更する場合、<xref:System.Windows.VisualStateManager>でその<xref:System.Windows.Controls.ControlTemplate>します。</span><span class="sxs-lookup"><span data-stu-id="b744f-151">Call the <xref:System.Windows.VisualStateManager.GoToState%2A> method if you are changing states in a control that uses the <xref:System.Windows.VisualStateManager> in its <xref:System.Windows.Controls.ControlTemplate>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b744f-152">次の例では、1 から 100 までの数値を推測するユーザーに求める、アプリケーションを作成します。</span><span class="sxs-lookup"><span data-stu-id="b744f-152">The following example creates an application that prompts the user to guess a number between 1 and 100.</span></span>  <span data-ttu-id="b744f-153">数値を入力すると、アプリケーションは推定値が大きすぎる、低すぎる、または適切なのかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="b744f-153">When the user enters a number, the application indicates whether the guess is too high, too low, or correct.</span></span>  <span data-ttu-id="b744f-154">次[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]アプリケーションのユーザー インターフェイスを作成し、4 つの状態を定義します: `TooLow`、 `TooHigh`、 `Correct`、および`Guessing`します。</span><span class="sxs-lookup"><span data-stu-id="b744f-154">The following [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] creates the user interface for the application and defines 4 states: `TooLow`, `TooHigh`, `Correct`, and `Guessing`.</span></span> <span data-ttu-id="b744f-155">アプリケーションの開始時に、`Guessing`状態。</span><span class="sxs-lookup"><span data-stu-id="b744f-155">When the application begins, it is in the `Guessing` state.</span></span> <span data-ttu-id="b744f-156">である必要があります。</span><span class="sxs-lookup"><span data-stu-id="b744f-156">.</span></span>  
  
 [!code-xaml[VSMGoToElementState#GoToElementStateXaml](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmgotoelementstate/csharp/mainwindow.xaml#gotoelementstatexaml)]  
  
 <span data-ttu-id="b744f-157">次のコードでは、アプリケーションのロジックを示します。</span><span class="sxs-lookup"><span data-stu-id="b744f-157">The following code shows the logic of the application.</span></span>  <span data-ttu-id="b744f-158">ユーザーは、数値を入力、ボタンをクリックすると、アプリケーションが呼び出す<xref:System.Windows.VisualStateManager.GoToElementState%2A>に移行する`TooHigh`、 `TooLow`、または`Correct`推定値についてユーザーにフィードバックを提供します。</span><span class="sxs-lookup"><span data-stu-id="b744f-158">When the user enters a number and clicks the button, the application calls <xref:System.Windows.VisualStateManager.GoToElementState%2A> to transition to `TooHigh`, `TooLow`, or `Correct` to provide feedback to the user about the guess.</span></span>  <span data-ttu-id="b744f-159">この例には、呼び出し、`GenerateNumber`メソッド、アプリケーションの開始時にします。</span><span class="sxs-lookup"><span data-stu-id="b744f-159">To try this example, call the `GenerateNumber` method when the application begins.</span></span>  
  
 [!code-csharp[VSMGoToElementState#GoToElementStateCode](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmgotoelementstate/csharp/mainwindow.xaml.cs#gotoelementstatecode)]
 [!code-vb[VSMGoToElementState#GoToElementStateCode](~/samples/snippets/visualbasic/VS_Snippets_Wpf/vsmgotoelementstate/visualbasic/mainwindow.xaml.vb#gotoelementstatecode)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b744f-160">
            <paramref name="stateGroupsRoot" /> は <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b744f-160">
              <paramref name="stateGroupsRoot" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="b744f-161">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="b744f-161">-or-</span>
          </span>
          <span data-ttu-id="b744f-162">
            <paramref name="stateName" /> は <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b744f-162">
              <paramref name="stateName" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GoToState">
      <MemberSignature Language="C#" Value="public static bool GoToState (System.Windows.FrameworkElement control, string stateName, bool useTransitions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GoToState(class System.Windows.FrameworkElement control, string stateName, bool useTransitions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.VisualStateManager.GoToState(System.Windows.FrameworkElement,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GoToState (control As FrameworkElement, stateName As String, useTransitions As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool GoToState(System::Windows::FrameworkElement ^ control, System::String ^ stateName, bool useTransitions);" />
      <MemberSignature Language="F#" Value="static member GoToState : System.Windows.FrameworkElement * string * bool -&gt; bool" Usage="System.Windows.VisualStateManager.GoToState (control, stateName, useTransitions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.FrameworkElement" />
        <Parameter Name="stateName" Type="System.String" />
        <Parameter Name="useTransitions" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="b744f-163">状態を遷移するコントロール。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b744f-163">The control to transition between states.</span>
          </span>
        </param>
        <param name="stateName">
          <span data-ttu-id="b744f-164">切り替え先の状態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b744f-164">The state to transition to.</span>
          </span>
        </param>
        <param name="useTransitions">
          <span data-ttu-id="b744f-165">
            <see cref="T:System.Windows.VisualTransition" /> オブジェクトを使用して状態を遷移させる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b744f-165">
              <see langword="true" /> to use a <see cref="T:System.Windows.VisualTransition" /> object to transition between states; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b744f-166">コントロールを 2 つの状態間で切り替えます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b744f-166">Transitions the control between two states.</span>
          </span>
          <span data-ttu-id="b744f-167">
            <see cref="T:System.Windows.Controls.ControlTemplate" /> を持つコントロールの状態を遷移させるには、このメソッドを使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b744f-167">Use this method to transition states on control that has a <see cref="T:System.Windows.Controls.ControlTemplate" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b744f-168">コントロールが新しい状態に正常に遷移した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b744f-168">
              <see langword="true" /> if the control successfully transitioned to the new state; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b744f-169">呼び出す、<xref:System.Windows.VisualStateManager.GoToState%2A>メソッドを使用するコントロールの状態を変更する場合、<xref:System.Windows.VisualStateManager>でその<xref:System.Windows.Controls.ControlTemplate>します。</span><span class="sxs-lookup"><span data-stu-id="b744f-169">Call the <xref:System.Windows.VisualStateManager.GoToState%2A> method if you are changing states in a control that uses the <xref:System.Windows.VisualStateManager> in its <xref:System.Windows.Controls.ControlTemplate>.</span></span> <span data-ttu-id="b744f-170">呼び出す、<xref:System.Windows.VisualStateManager.GoToElementState%2A>外の要素の状態を変更するメソッド、 <xref:System.Windows.Controls.ControlTemplate> (を使用する場合など、<xref:System.Windows.VisualStateManager>で、<xref:System.Windows.Controls.UserControl>または単一の要素)。</span><span class="sxs-lookup"><span data-stu-id="b744f-170">Call the <xref:System.Windows.VisualStateManager.GoToElementState%2A> method to change states on an element outside of a <xref:System.Windows.Controls.ControlTemplate> (for example, if you use a <xref:System.Windows.VisualStateManager> in a <xref:System.Windows.Controls.UserControl> or in a single element).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b744f-171">次の例で使用するコントロールを<xref:System.Windows.VisualStateManager.GoToState%2A>状態間を遷移するメソッド。</span><span class="sxs-lookup"><span data-stu-id="b744f-171">The following example demonstrates a control that uses the <xref:System.Windows.VisualStateManager.GoToState%2A> method to transition between states.</span></span> <span data-ttu-id="b744f-172">全体の例では、次を参照してください。[外観をカスタマイズできる作成をコントロールに](~/docs/framework/wpf/controls/creating-a-control-that-has-a-customizable-appearance.md)します。</span><span class="sxs-lookup"><span data-stu-id="b744f-172">For the entire example, see [Creating a Control That Has a Customizable Appearance](~/docs/framework/wpf/controls/creating-a-control-that-has-a-customizable-appearance.md).</span></span>  
  
 [!code-csharp[VSMCustomControl#UpdateStates](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmcustomcontrol/csharp/numericupdown.cs#updatestates)]
 [!code-vb[VSMCustomControl#UpdateStates](~/samples/snippets/visualbasic/VS_Snippets_Wpf/vsmcustomcontrol/visualbasic/numericupdown.vb#updatestates)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b744f-173">
            <paramref name="control" /> は <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b744f-173">
              <paramref name="control" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="b744f-174">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="b744f-174">-or-</span>
          </span>
          <span data-ttu-id="b744f-175">
            <paramref name="stateName" /> は <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b744f-175">
              <paramref name="stateName" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GoToStateCore">
      <MemberSignature Language="C#" Value="protected virtual bool GoToStateCore (System.Windows.FrameworkElement control, System.Windows.FrameworkElement stateGroupsRoot, string stateName, System.Windows.VisualStateGroup group, System.Windows.VisualState state, bool useTransitions);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool GoToStateCore(class System.Windows.FrameworkElement control, class System.Windows.FrameworkElement stateGroupsRoot, string stateName, class System.Windows.VisualStateGroup group, class System.Windows.VisualState state, bool useTransitions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.VisualStateManager.GoToStateCore(System.Windows.FrameworkElement,System.Windows.FrameworkElement,System.String,System.Windows.VisualStateGroup,System.Windows.VisualState,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GoToStateCore (control As FrameworkElement, stateGroupsRoot As FrameworkElement, stateName As String, group As VisualStateGroup, state As VisualState, useTransitions As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool GoToStateCore(System::Windows::FrameworkElement ^ control, System::Windows::FrameworkElement ^ stateGroupsRoot, System::String ^ stateName, System::Windows::VisualStateGroup ^ group, System::Windows::VisualState ^ state, bool useTransitions);" />
      <MemberSignature Language="F#" Value="abstract member GoToStateCore : System.Windows.FrameworkElement * System.Windows.FrameworkElement * string * System.Windows.VisualStateGroup * System.Windows.VisualState * bool -&gt; bool&#xA;override this.GoToStateCore : System.Windows.FrameworkElement * System.Windows.FrameworkElement * string * System.Windows.VisualStateGroup * System.Windows.VisualState * bool -&gt; bool" Usage="visualStateManager.GoToStateCore (control, stateGroupsRoot, stateName, group, state, useTransitions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.FrameworkElement" />
        <Parameter Name="stateGroupsRoot" Type="System.Windows.FrameworkElement" />
        <Parameter Name="stateName" Type="System.String" />
        <Parameter Name="group" Type="System.Windows.VisualStateGroup" />
        <Parameter Name="state" Type="System.Windows.VisualState" />
        <Parameter Name="useTransitions" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="b744f-176">状態を遷移するコントロール。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b744f-176">The control to transition between states.</span>
          </span>
        </param>
        <param name="stateGroupsRoot">
          <span data-ttu-id="b744f-177">
            <see cref="T:System.Windows.VisualStateManager" /> を含んでいるルート要素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b744f-177">The root element that contains the <see cref="T:System.Windows.VisualStateManager" />.</span>
          </span>
        </param>
        <param name="stateName">
          <span data-ttu-id="b744f-178">遷移後の状態の名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b744f-178">The name of the state to transition to.</span>
          </span>
        </param>
        <param name="group">
          <span data-ttu-id="b744f-179">状態が属する <see cref="T:System.Windows.VisualStateGroup" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b744f-179">The <see cref="T:System.Windows.VisualStateGroup" /> that the state belongs to.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="b744f-180">遷移後の状態の表現。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b744f-180">The representation of the state to transition to.</span>
          </span>
        </param>
        <param name="useTransitions">
          <span data-ttu-id="b744f-181">
            <see cref="T:System.Windows.VisualTransition" /> オブジェクトを使用して状態を遷移させる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b744f-181">
              <see langword="true" /> to use a <see cref="T:System.Windows.VisualTransition" /> object to transition between states; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b744f-182">コントロールは 2 つの状態の間で遷移します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b744f-182">Transitions a control between states.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b744f-183">コントロールが新しい状態に正常に遷移した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b744f-183">
              <see langword="true" /> if the control successfully transitioned to the new state; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b744f-184"><xref:System.Windows.VisualStateManager.GoToStateCore%2A>メソッドが適切に開始および遷移に関連付けられているストーリー ボードを停止するために必要なロジックを実行します。</span><span class="sxs-lookup"><span data-stu-id="b744f-184">The <xref:System.Windows.VisualStateManager.GoToStateCore%2A> method performs the logic necessary to appropriately start and stop the storyboards that are associated with a transition.</span></span> <span data-ttu-id="b744f-185">コントロールを呼び出すと<xref:System.Windows.VisualStateManager.GoToState%2A>の状態を変更する、<xref:System.Windows.VisualStateManager>は次の処理します。</span><span class="sxs-lookup"><span data-stu-id="b744f-185">When a control calls <xref:System.Windows.VisualStateManager.GoToState%2A> to change its state, the <xref:System.Windows.VisualStateManager> does the following:</span></span>  
  
-   <span data-ttu-id="b744f-186">最初に、場合、<xref:System.Windows.VisualState>コントロールが遷移することが、 <xref:System.Windows.Media.Animation.Storyboard>、ストーリー ボードが開始されます。</span><span class="sxs-lookup"><span data-stu-id="b744f-186">First, if the <xref:System.Windows.VisualState> that the control is transitioning to has a <xref:System.Windows.Media.Animation.Storyboard>, the storyboard begins.</span></span> <span data-ttu-id="b744f-187">場合はその後、<xref:System.Windows.VisualState>からコントロールが送信されたことが、 <xref:System.Windows.Media.Animation.Storyboard>、ストーリー ボードが終了します。</span><span class="sxs-lookup"><span data-stu-id="b744f-187">Then, if the <xref:System.Windows.VisualState> that the control is coming from has a <xref:System.Windows.Media.Animation.Storyboard>, the storyboard ends.</span></span>  
  
-   <span data-ttu-id="b744f-188">場合は、コントロールは既に、`stateName`状態、<xref:System.Windows.VisualStateManager.GoToState%2A>は何も実行し、返します`true`します。</span><span class="sxs-lookup"><span data-stu-id="b744f-188">If the control is already in the `stateName` state, <xref:System.Windows.VisualStateManager.GoToState%2A> takes no action and returns `true`.</span></span>  
  
-   <span data-ttu-id="b744f-189">場合`stateName`に存在しません、<xref:System.Windows.Controls.ControlTemplate>の`control`、<xref:System.Windows.VisualStateManager.GoToState%2A>は何も実行し、返します`false`します。</span><span class="sxs-lookup"><span data-stu-id="b744f-189">If `stateName` does not exist in the <xref:System.Windows.Controls.ControlTemplate> of `control`, <xref:System.Windows.VisualStateManager.GoToState%2A> takes no action and returns `false`.</span></span>  
  
 <span data-ttu-id="b744f-190">独自に実装することができます<xref:System.Windows.VisualStateManager>状態を遷移するための別のロジックを提供します。</span><span class="sxs-lookup"><span data-stu-id="b744f-190">You can implement your own <xref:System.Windows.VisualStateManager> to provide different logic for transitioning between states.</span></span> <span data-ttu-id="b744f-191">たとえば、先ほど説明したロジックを変更するまたはカスタム アニメーションの種類間を遷移するロジックを行うことができます。</span><span class="sxs-lookup"><span data-stu-id="b744f-191">For example, you can change the logic described previously, or you can provide logic to transition between custom animation types.</span></span>  <span data-ttu-id="b744f-192">実装する、<xref:System.Windows.VisualStateManager>から継承するクラスを作成<xref:System.Windows.VisualStateManager>をオーバーライドし、<xref:System.Windows.VisualStateManager.GoToStateCore%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="b744f-192">To implement a <xref:System.Windows.VisualStateManager>, create a class that inherits from <xref:System.Windows.VisualStateManager> and override the <xref:System.Windows.VisualStateManager.GoToStateCore%2A> method.</span></span> <span data-ttu-id="b744f-193">カスタム クラスを使用する設定、<xref:System.Windows.VisualStateManager.CustomVisualStateManager%2A>プロパティをカスタム型のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b744f-193">To use the custom class, set the <xref:System.Windows.VisualStateManager.CustomVisualStateManager%2A> property to an object of your custom type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseCurrentStateChanged">
      <MemberSignature Language="C#" Value="protected void RaiseCurrentStateChanged (System.Windows.VisualStateGroup stateGroup, System.Windows.VisualState oldState, System.Windows.VisualState newState, System.Windows.FrameworkElement control, System.Windows.FrameworkElement stateGroupsRoot);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RaiseCurrentStateChanged(class System.Windows.VisualStateGroup stateGroup, class System.Windows.VisualState oldState, class System.Windows.VisualState newState, class System.Windows.FrameworkElement control, class System.Windows.FrameworkElement stateGroupsRoot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.VisualStateManager.RaiseCurrentStateChanged(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RaiseCurrentStateChanged (stateGroup As VisualStateGroup, oldState As VisualState, newState As VisualState, control As FrameworkElement, stateGroupsRoot As FrameworkElement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RaiseCurrentStateChanged(System::Windows::VisualStateGroup ^ stateGroup, System::Windows::VisualState ^ oldState, System::Windows::VisualState ^ newState, System::Windows::FrameworkElement ^ control, System::Windows::FrameworkElement ^ stateGroupsRoot);" />
      <MemberSignature Language="F#" Value="member this.RaiseCurrentStateChanged : System.Windows.VisualStateGroup * System.Windows.VisualState * System.Windows.VisualState * System.Windows.FrameworkElement * System.Windows.FrameworkElement -&gt; unit" Usage="visualStateManager.RaiseCurrentStateChanged (stateGroup, oldState, newState, control, stateGroupsRoot)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stateGroup" Type="System.Windows.VisualStateGroup" />
        <Parameter Name="oldState" Type="System.Windows.VisualState" />
        <Parameter Name="newState" Type="System.Windows.VisualState" />
        <Parameter Name="control" Type="System.Windows.FrameworkElement" />
        <Parameter Name="stateGroupsRoot" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="stateGroup">
          <span data-ttu-id="b744f-194">
            <see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging" /> イベントが発生したオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b744f-194">The object that the <see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging" /> event occurred on.</span>
          </span>
        </param>
        <param name="oldState">
          <span data-ttu-id="b744f-195">コントロールの遷移元の状態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b744f-195">The state that the control is transitioning from.</span>
          </span>
        </param>
        <param name="newState">
          <span data-ttu-id="b744f-196">コントロールの遷移先の状態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b744f-196">The state that the control is transitioning to.</span>
          </span>
        </param>
        <param name="control">
          <span data-ttu-id="b744f-197">状態が遷移しているコントロール。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b744f-197">The control that is transitioning states.</span>
          </span>
        </param>
        <param name="stateGroupsRoot">
          <span data-ttu-id="b744f-198">
            <see cref="T:System.Windows.VisualStateManager" /> を含んでいるルート要素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b744f-198">The root element that contains the <see cref="T:System.Windows.VisualStateManager" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b744f-199">指定された <see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging" /> オブジェクトで <see cref="T:System.Windows.VisualStateGroup" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b744f-199">Raises the <see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging" /> event on the specified <see cref="T:System.Windows.VisualStateGroup" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b744f-200">ときに、<xref:System.Windows.VisualStateGroup>が設定されて、 <xref:System.Windows.Controls.ControlTemplate> 、コントロールの`control`を所有するコントロールにパラメーターが設定されている<xref:System.Windows.Controls.ControlTemplate>します。</span><span class="sxs-lookup"><span data-stu-id="b744f-200">When the <xref:System.Windows.VisualStateGroup> is set on the <xref:System.Windows.Controls.ControlTemplate> of a control, the `control` parameter is set to the control that owns <xref:System.Windows.Controls.ControlTemplate>.</span></span>  <span data-ttu-id="b744f-201">ときに、<xref:System.Windows.VisualStateGroup>が設定されて、 <xref:System.Windows.FrameworkElement>、`control`は`null`する必要がありますを使用して、`stateGroupsRoot`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="b744f-201">When the <xref:System.Windows.VisualStateGroup> is set on a <xref:System.Windows.FrameworkElement>, `control` is `null` and you should use the `stateGroupsRoot` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b744f-202">
            <paramref name="stateGroupsRoot" /> は <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b744f-202">
              <paramref name="stateGroupsRoot" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="b744f-203">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="b744f-203">-or-</span>
          </span>
          <span data-ttu-id="b744f-204">
            <paramref name="newState" /> は <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b744f-204">
              <paramref name="newState" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="b744f-205">オーバーライドするときに<see cref="M:System.Windows.VisualStateManager.RaiseCurrentStateChanged(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)" />、派生クラスで基底クラスを呼び出すことを確認する<see cref="M:System.Windows.VisualStateManager.RaiseCurrentStateChanged(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)" />デリゲートを登録するためのメソッドがイベントを受信します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="b744f-205">When overriding <see cref="M:System.Windows.VisualStateManager.RaiseCurrentStateChanged(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)" /> in a derived class, be sure to call the base class' <see cref="M:System.Windows.VisualStateManager.RaiseCurrentStateChanged(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="RaiseCurrentStateChanging">
      <MemberSignature Language="C#" Value="protected void RaiseCurrentStateChanging (System.Windows.VisualStateGroup stateGroup, System.Windows.VisualState oldState, System.Windows.VisualState newState, System.Windows.FrameworkElement control, System.Windows.FrameworkElement stateGroupsRoot);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RaiseCurrentStateChanging(class System.Windows.VisualStateGroup stateGroup, class System.Windows.VisualState oldState, class System.Windows.VisualState newState, class System.Windows.FrameworkElement control, class System.Windows.FrameworkElement stateGroupsRoot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.VisualStateManager.RaiseCurrentStateChanging(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RaiseCurrentStateChanging (stateGroup As VisualStateGroup, oldState As VisualState, newState As VisualState, control As FrameworkElement, stateGroupsRoot As FrameworkElement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RaiseCurrentStateChanging(System::Windows::VisualStateGroup ^ stateGroup, System::Windows::VisualState ^ oldState, System::Windows::VisualState ^ newState, System::Windows::FrameworkElement ^ control, System::Windows::FrameworkElement ^ stateGroupsRoot);" />
      <MemberSignature Language="F#" Value="member this.RaiseCurrentStateChanging : System.Windows.VisualStateGroup * System.Windows.VisualState * System.Windows.VisualState * System.Windows.FrameworkElement * System.Windows.FrameworkElement -&gt; unit" Usage="visualStateManager.RaiseCurrentStateChanging (stateGroup, oldState, newState, control, stateGroupsRoot)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stateGroup" Type="System.Windows.VisualStateGroup" />
        <Parameter Name="oldState" Type="System.Windows.VisualState" />
        <Parameter Name="newState" Type="System.Windows.VisualState" />
        <Parameter Name="control" Type="System.Windows.FrameworkElement" />
        <Parameter Name="stateGroupsRoot" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="stateGroup">
          <span data-ttu-id="b744f-206">
            <see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging" /> イベントが発生したオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b744f-206">The object that the <see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging" /> event occurred on.</span>
          </span>
        </param>
        <param name="oldState">
          <span data-ttu-id="b744f-207">コントロールの遷移元の状態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b744f-207">The state that the control is transitioning from.</span>
          </span>
        </param>
        <param name="newState">
          <span data-ttu-id="b744f-208">コントロールの遷移先の状態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b744f-208">The state that the control is transitioning to.</span>
          </span>
        </param>
        <param name="control">
          <span data-ttu-id="b744f-209">状態が遷移しているコントロール。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b744f-209">The control that is transitioning states.</span>
          </span>
        </param>
        <param name="stateGroupsRoot">
          <span data-ttu-id="b744f-210">
            <see cref="T:System.Windows.VisualStateManager" /> を含んでいるルート要素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b744f-210">The root element that contains the <see cref="T:System.Windows.VisualStateManager" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b744f-211">指定された <see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging" /> オブジェクトで <see cref="T:System.Windows.VisualStateGroup" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b744f-211">Raises the <see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging" /> event on the specified <see cref="T:System.Windows.VisualStateGroup" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b744f-212">ときに、<xref:System.Windows.VisualStateGroup>が設定されて、 <xref:System.Windows.Controls.ControlTemplate> 、コントロールの`control`を所有するコントロールにパラメーターが設定されている<xref:System.Windows.Controls.ControlTemplate>します。</span><span class="sxs-lookup"><span data-stu-id="b744f-212">When the <xref:System.Windows.VisualStateGroup> is set on the <xref:System.Windows.Controls.ControlTemplate> of a control, the `control` parameter is set to the control that owns <xref:System.Windows.Controls.ControlTemplate>.</span></span>  <span data-ttu-id="b744f-213">ときに、<xref:System.Windows.VisualStateGroup>が設定されて、 <xref:System.Windows.FrameworkElement>、`control`は`null`する必要がありますを使用して、`stateGroupsRoot`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="b744f-213">When the <xref:System.Windows.VisualStateGroup> is set on a <xref:System.Windows.FrameworkElement>, `control` is `null` and you should use the `stateGroupsRoot` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b744f-214">
            <paramref name="stateGroupsRoot" /> は <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b744f-214">
              <paramref name="stateGroupsRoot" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="b744f-215">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="b744f-215">-or-</span>
          </span>
          <span data-ttu-id="b744f-216">
            <paramref name="newState" /> は <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b744f-216">
              <paramref name="newState" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="b744f-217">オーバーライドするときに<see cref="M:System.Windows.VisualStateManager.RaiseCurrentStateChanging(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)" />、派生クラスで基底クラスを呼び出すことを確認する<see cref="M:System.Windows.VisualStateManager.RaiseCurrentStateChanging(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)" />デリゲートを登録するためのメソッドがイベントを受信します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="b744f-217">When overriding <see cref="M:System.Windows.VisualStateManager.RaiseCurrentStateChanging(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)" /> in a derived class, be sure to call the base class' <see cref="M:System.Windows.VisualStateManager.RaiseCurrentStateChanging(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SetCustomVisualStateManager">
      <MemberSignature Language="C#" Value="public static void SetCustomVisualStateManager (System.Windows.FrameworkElement obj, System.Windows.VisualStateManager value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetCustomVisualStateManager(class System.Windows.FrameworkElement obj, class System.Windows.VisualStateManager value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.VisualStateManager.SetCustomVisualStateManager(System.Windows.FrameworkElement,System.Windows.VisualStateManager)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetCustomVisualStateManager (obj As FrameworkElement, value As VisualStateManager)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetCustomVisualStateManager(System::Windows::FrameworkElement ^ obj, System::Windows::VisualStateManager ^ value);" />
      <MemberSignature Language="F#" Value="static member SetCustomVisualStateManager : System.Windows.FrameworkElement * System.Windows.VisualStateManager -&gt; unit" Usage="System.Windows.VisualStateManager.SetCustomVisualStateManager (obj, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Windows.FrameworkElement" />
        <Parameter Name="value" Type="System.Windows.VisualStateManager" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="b744f-218">プロパティを設定するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b744f-218">The object to set the property on.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="b744f-219">コントロールの状態を切り替える表示状態マネージャー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b744f-219">The visual state manager that transitions between the states of a control.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b744f-220">
            <see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager" /> 添付プロパティを設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b744f-220">Sets the <see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager" /> attached property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisualStateGroupsProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty VisualStateGroupsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty VisualStateGroupsProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.VisualStateManager.VisualStateGroupsProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly VisualStateGroupsProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ VisualStateGroupsProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable VisualStateGroupsProperty : System.Windows.DependencyProperty" Usage="System.Windows.VisualStateManager.VisualStateGroupsProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b744f-221">
            <see cref="P:System.Windows.VisualStateManager.VisualStateGroups" /> 依存関係プロパティを識別します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b744f-221">Identifies the <see cref="P:System.Windows.VisualStateManager.VisualStateGroups" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>