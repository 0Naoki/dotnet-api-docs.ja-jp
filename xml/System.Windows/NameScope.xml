<Type Name="NameScope" FullName="System.Windows.NameScope">
  <TypeSignature Language="C#" Value="public class NameScope : System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;string,object&gt;&gt;, System.Collections.Generic.IDictionary&lt;string,object&gt;, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,object&gt;&gt;, System.Windows.Markup.INameScopeDictionary" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NameScope extends System.Object implements class System.Collections.Generic.ICollection`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;&gt;, class System.Collections.Generic.IDictionary`2&lt;string, object&gt;, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;&gt;, class System.Collections.IEnumerable, class System.Windows.Markup.INameScope, class System.Windows.Markup.INameScopeDictionary" />
  <TypeSignature Language="DocId" Value="T:System.Windows.NameScope" />
  <TypeSignature Language="VB.NET" Value="Public Class NameScope&#xA;Implements ICollection(Of KeyValuePair(Of String, Object)), IDictionary(Of String, Object), IEnumerable(Of KeyValuePair(Of String, Object)), INameScopeDictionary" />
  <TypeSignature Language="C++ CLI" Value="public ref class NameScope : System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt;, System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt;, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt;, System::Windows::Markup::INameScopeDictionary" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Markup.INameScopeDictionary</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("PresentationFramework, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="5ee1f-101">名前とオブジェクトのマッピングを特定の XAML 名前スコープに格納するか、特定の XAML 名前スコープから取得する <see cref="T:System.Windows.Markup.INameScope" /> メソッドの基本 WPF サポートを実装します。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-101">Implements base WPF support for the <see cref="T:System.Windows.Markup.INameScope" /> methods that store or retrieve name-object mappings into a particular XAML namescope.</span></span> <span data-ttu-id="5ee1f-102">XAML 名前スコープの名前を要素レベルで動的に取得または設定しやすくするために、添付プロパティのサポートを追加します。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-102">Adds attached property support to make it simpler to get or set XAML namescope names dynamically at the element level..</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ee1f-103">このクラスは、XAML の WPF 処理を行う組み込みの XAML 名前スコープのサポートを実装します。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-103">This class implements built-in XAML namescope support for WPF treatment of XAML.</span></span> <span data-ttu-id="5ee1f-104"><xref:System.Windows.NameScope> スタイルをインスタンス化するときに、テンプレートなど、XAML の解析中に基づく初期の XAML 名前スコープの作成を支援します。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-104"><xref:System.Windows.NameScope> assists in creation of initial XAML namescopes based on parsing XAML, such as when instantiating styles and templates.</span></span> <span data-ttu-id="5ee1f-105">WPF XAML プロセッサの実装によって、要素の通常の XAML 読み込みの外部で発生するプロセスでの XAML 名前スコープの作成もサポートします。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-105">It also supports creation of XAML namescopes by processes that occur outside of normal XAML loading of elements by the WPF XAML processor implementation.</span></span>  
  
 <span data-ttu-id="5ee1f-106"><xref:System.Windows.NameScope> 通常よりも、XAML 名前空間を操作することをユーザー コードの一般的なシナリオのためのインフラストラクチャを指定することにより充てるです。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-106"><xref:System.Windows.NameScope> is generally more devoted to supplying infrastructure than for common user code scenarios that involve working with a XAML namescope.</span></span> <span data-ttu-id="5ee1f-107">ほとんどのシナリオ、<xref:System.Windows.FrameworkElement.FindName%2A>で公開されているメソッド<xref:System.Windows.FrameworkElement>と<xref:System.Windows.FrameworkContentElement>XAML で定義された名前で要素を検索するために呼び出すより適切なメソッドです。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-107">For most scenarios, the <xref:System.Windows.FrameworkElement.FindName%2A> methods exposed on <xref:System.Windows.FrameworkElement> and <xref:System.Windows.FrameworkContentElement> are more appropriate methods to call to search for elements by XAML-defined name.</span></span> <span data-ttu-id="5ee1f-108"><xref:System.Windows.FrameworkElement.Name%2A>によって公開されるプロパティ<xref:System.Windows.FrameworkElement>と<xref:System.Windows.FrameworkContentElement>マークアップ属性として最初の名前を設定に使用する適切なプロパティです。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-108">The <xref:System.Windows.FrameworkElement.Name%2A> properties exposed by <xref:System.Windows.FrameworkElement> and <xref:System.Windows.FrameworkContentElement> are more appropriate properties to use to set the initial name as markup attributes.</span></span>  
  
 <span data-ttu-id="5ee1f-109">さまざまなメソッド<xref:System.Windows.NameScope>基本要素とサポートするために XAML 名前スコープを維持するその他のクラスで使用される<xref:System.Windows.Markup.INameScope.RegisterName%2A>と<xref:System.Windows.Markup.INameScope.FindName%2A>です。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-109">The various methods of <xref:System.Windows.NameScope> are used by base elements and other classes that maintain XAML namescopes in order to support <xref:System.Windows.Markup.INameScope.RegisterName%2A> and <xref:System.Windows.Markup.INameScope.FindName%2A>.</span></span> <span data-ttu-id="5ee1f-110">通常の API を使用して、<xref:System.Windows.NameScope>クラスを交換またはルート要素とテンプレートを使用するページの残りの部分から別の XAML 名前スコープ) の一部として、XAML ページの XAML 名前スコープの処理方法の基本要素の動作を拡張する場合にのみです。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-110">You generally use the API in the <xref:System.Windows.NameScope> class only if you are replacing or augmenting the base element behavior for how they process XAML namescopes for root elements of a XAML page, and as part of templates (which use a separate XAML namescope from the rest of the page).</span></span>  
  
 <span data-ttu-id="5ee1f-111">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]、<xref:System.Windows.NameScope>を呼び出すことで追加するなど、XAML 名前スコープに保持されている名前のコレクションがアクセスできるように、コレクション インターフェイスの実装を提供する<xref:System.Windows.NameScope.Add%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-111">In [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], <xref:System.Windows.NameScope> provides collection interface implementations such that you can access the collections of names that are held by a XAML namescope, including adding to it through calls to an <xref:System.Windows.NameScope.Add%2A> method.</span></span>  
  
 <span data-ttu-id="5ee1f-112">XAML 名前スコープの概念の詳細については、次を参照してください。 [WPF XAML 名前スコープ](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md)です。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-112">For more information on XAML namescope concepts, see [WPF XAML Namescopes](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md).</span></span>  
  
 <span data-ttu-id="5ee1f-113">XAML 名前スコープ名の入力で使用する文字列を制限する特定の文法を使用する必要があります<xref:System.Windows.NameScope>API です。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-113">Names in a XAML namescope must use a particular grammar that restricts the strings you might use for inputs of <xref:System.Windows.NameScope> API.</span></span> <span data-ttu-id="5ee1f-114">参照してください[XamlName の文法](~/docs/framework/xaml-services/xamlname-grammar.md)です。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-114">See [XamlName Grammar](~/docs/framework/xaml-services/xamlname-grammar.md).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Markup.INameScope" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NameScope ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NameScope();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5ee1f-115"><see cref="T:System.Windows.NameScope" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-115">Initializes a new instance of the <see cref="T:System.Windows.NameScope" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5ee1f-116">項目をコレクションに追加します。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-116">Adds an item to the collection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Collections.Generic.KeyValuePair&lt;string,object&gt; item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (item As KeyValuePair(Of String, Object))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt; item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="5ee1f-117">XAML 名前スコープに追加する名前のマッピングを表す <see cref="T:System.Collections.Generic.KeyValuePair`2" /> (キーは <see cref="T:System.String" />、値は <see cref="T:System.Object" />)。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-117">A <see cref="T:System.Collections.Generic.KeyValuePair`2" /> (key is <see cref="T:System.String" />, value is <see cref="T:System.Object" />) that represents the name mapping to add to the XAML namescope.</span></span></param>
        <summary><span data-ttu-id="5ee1f-118">項目をコレクションに追加します。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-118">Adds an item to the collection.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5ee1f-119"><paramref name="item" /> のいずれかまたは両方のコンポーネントが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-119">Either or both components of <paramref name="item" /> are <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(string key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.Add(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (key As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::String ^ key, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.Add(`0,`1)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="5ee1f-120">追加する XAML 名前スコープ マッピングの名前である文字列キー。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-120">The string key, which is the name of the XAML namescope mapping to add.</span></span></param>
        <param name="value"><span data-ttu-id="5ee1f-121">追加する XAML 名前スコープ マッピングのオブジェクト参照であるオブジェクト値。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-121">The object value, which is the object reference of the XAML namescope mapping to add.</span></span></param>
        <summary><span data-ttu-id="5ee1f-122">項目をコレクションに追加します。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-122">Adds an item to the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ee1f-123">このメソッドは基本的にラップ<xref:System.Windows.NameScope.Add%2A>を含める必要がないように、<xref:System.Collections.Generic.KeyValuePair%602>の使用量を入力します。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-123">This method basically wraps <xref:System.Windows.NameScope.Add%2A> so that it is not necessary to involve the <xref:System.Collections.Generic.KeyValuePair%602> type in your usage.</span></span>  
  
 <span data-ttu-id="5ee1f-124">XAML 名前スコープ名の入力で使用する文字列を制限する特定の文法を使用する必要があります<xref:System.Windows.NameScope>API です。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-124">Names in a XAML namescope must use a particular grammar that restricts the strings you might use for inputs of <xref:System.Windows.NameScope> API.</span></span> <span data-ttu-id="5ee1f-125">参照してください[XamlName の文法](~/docs/framework/xaml-services/xamlname-grammar.md)です。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-125">See [XamlName Grammar](~/docs/framework/xaml-services/xamlname-grammar.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ee1f-126"><paramref name="key" /> または <paramref name="value" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-126"><paramref name="key" /> or <paramref name="value" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5ee1f-127">コレクションからすべての項目を削除します。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-127">Removes all items from the collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Collections.Generic.KeyValuePair&lt;string,object&gt; item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (item As KeyValuePair(Of String, Object)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt; item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="5ee1f-128">コレクション内で検索する項目。<see cref="T:System.Collections.Generic.KeyValuePair`2" /> として指定します (キーは <see cref="T:System.String" />、値は <see cref="T:System.Object" />)。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-128">The item to find in the collection, specified as a <see cref="T:System.Collections.Generic.KeyValuePair`2" /> (key is <see cref="T:System.String" />, value is <see cref="T:System.Object" />).</span></span></param>
        <summary><span data-ttu-id="5ee1f-129">指定された項目がコレクションに含まれているかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-129">Determines whether the collection contains a specified item.</span></span></summary>
        <returns>
          <span data-ttu-id="5ee1f-130">指定した <see cref="T:System.Collections.Generic.KeyValuePair`2" /> がこの <see cref="T:System.Windows.NameScope" /> 内の既存のマッピングを識別する場合は <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-130"><see langword="true" /> if the specified <see cref="T:System.Collections.Generic.KeyValuePair`2" /> identifies an existing mapping in this <see cref="T:System.Windows.NameScope" /> .</span></span> <span data-ttu-id="5ee1f-131">指定した <see cref="T:System.Collections.Generic.KeyValuePair`2" /> が現在の <see cref="T:System.Windows.NameScope" /> に存在しない場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-131"><see langword="false" /> if the specified <see cref="T:System.Collections.Generic.KeyValuePair`2" /> does not exist in the current <see cref="T:System.Windows.NameScope" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ee1f-132">一般に、名前は XAML 名前スコープで既に定義されているかどうかと材料にマップされているどのようなオブジェクト参照の値は関心のあるのみです。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-132">Generally you are only interested in whether a name is already defined in the XAML namescope, and what object reference value it is mapped to is immaterial.</span></span> <span data-ttu-id="5ee1f-133">このシナリオで呼び出せる<xref:System.Windows.NameScope.ContainsKey%2A>代わりにします。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-133">For this scenario, you can call <xref:System.Windows.NameScope.ContainsKey%2A> instead.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5ee1f-134"><paramref name="key" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-134"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public bool ContainsKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.ContainsKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContainsKey (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsKey(System::String ^ key);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="5ee1f-135">検索する文字列キー。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-135">The string key to find.</span></span></param>
        <summary><span data-ttu-id="5ee1f-136">指定した名前がこの <see cref="T:System.Windows.NameScope" /> に存在するかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-136">Returns whether a provided name already exists in this <see cref="T:System.Windows.NameScope" />.</span></span></summary>
        <returns>
          <span data-ttu-id="5ee1f-137">指定した <paramref name="key" /> がこの <see cref="T:System.Windows.NameScope" /> 内の既存のマッピングの名前を識別する場合は <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-137"><see langword="true" /> if the specified <paramref name="key" /> identifies a name for an existing mapping in this <see cref="T:System.Windows.NameScope" />.</span></span> <span data-ttu-id="5ee1f-138">指定した <paramref name="key" /> が現在の <see cref="T:System.Windows.NameScope" /> に存在しない場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-138"><see langword="false" /> if the specified <paramref name="key" /> does not exist in the current <see cref="T:System.Windows.NameScope" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ee1f-139">XAML 名前スコープ名の入力で使用する文字列を制限する特定の文法を使用する必要があります<xref:System.Windows.NameScope>API です。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-139">Names in a XAML namescope must use a particular grammar that restricts the strings you might use for inputs of <xref:System.Windows.NameScope> API.</span></span> <span data-ttu-id="5ee1f-140">参照してください[XamlName の文法](~/docs/framework/xaml-services/xamlname-grammar.md)です。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-140">See [XamlName Grammar](~/docs/framework/xaml-services/xamlname-grammar.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ee1f-141"><paramref name="key" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-141"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Collections.Generic.KeyValuePair&lt;string,object&gt;[] array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;[] array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As KeyValuePair(Of String, Object)(), arrayIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt; ^ array, int arrayIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;[]" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="5ee1f-142">コレクションから要素がコピーされる先の 1 次元配列。配列のインデックス番号は 0 から始まっている必要があります。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-142">The one-dimensional array that is the destination of the elements copied from the collection The array must have zero-based indexing.</span></span></param>
        <param name="arrayIndex"><span data-ttu-id="5ee1f-143">コピーの開始位置となる、<c>array</c> の 0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-143">The zero-based index in <c>array</c> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="5ee1f-144">特定の配列インデックスを開始位置として、配列にコレクションの要素をコピーします。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-144">Copies the elements of the collection to an array, starting at a particular array index.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.NameScope.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5ee1f-145">この <see cref="T:System.Windows.NameScope" /> 内の、マップされた名前のコレクションに含まれる項目の数を返します。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-145">Returns the number of items in the collection of mapped names in this <see cref="T:System.Windows.NameScope" />.</span></span></summary>
        <value><span data-ttu-id="5ee1f-146">コレクション内の項目数。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-146">The number of items in the collection.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindName">
      <MemberSignature Language="C#" Value="public object FindName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object FindName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.FindName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindName (name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ FindName(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.INameScope.FindName(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="5ee1f-147">オブジェクト部分を取得する既存のマッピングの名前部分です。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-147">Name portion of an existing mapping to retrieve the object portion for.</span></span></param>
        <summary><span data-ttu-id="5ee1f-148">指定した名前の文字列に基づいて、この <see cref="T:System.Windows.NameScope" /> で保持されている XAML 名前スコープ内の対応するオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-148">Returns the corresponding object in the XAML namescope maintained by this <see cref="T:System.Windows.NameScope" />, based on a provided name string.</span></span></summary>
        <returns><span data-ttu-id="5ee1f-149"><paramref name="name" /> に対応付けられている、要求されたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-149">The requested object that is mapped with <paramref name="name" />.</span></span> <span data-ttu-id="5ee1f-150"><paramref name="name" /> に <see langword="null" /> または空の文字列が指定されている場合、または一致するオブジェクトが見つからない場合は、<see langword="null" /> が返されることがあります。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-150">Can return <see langword="null" /> if <paramref name="name" /> was provided as <see langword="null" /> or empty string, or if no matching object was found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ee1f-151">いくつかの基本要素 (<xref:System.Windows.FrameworkElement>、 <xref:System.Windows.FrameworkElement>) も公開、`FindName`と同じ機能を持つメソッドです。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-151">Several base elements (<xref:System.Windows.FrameworkElement>, <xref:System.Windows.FrameworkElement>) also expose a `FindName` method with identical functionality.</span></span> <span data-ttu-id="5ee1f-152">基本要素のバージョンでは、ルート要素に向かって、従来の論理ツリー内の XAML 名前スコープの検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-152">The base element versions perform a XAML namescope search within the conventional logical tree, working towards the root element.</span></span> <span data-ttu-id="5ee1f-153">XAML 名前スコープを決定すると、その XAML 名前スコープが要求された名前の照会されます。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-153">Once the XAML namescope is determined, that XAML namescope is queried for the requested name.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FrameworkElement.FindName(System.String)" />
        <altmember cref="M:System.Windows.FrameworkContentElement.FindName(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetNameScope">
      <MemberSignature Language="C#" Value="public static System.Windows.Markup.INameScope GetNameScope (System.Windows.DependencyObject dependencyObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Markup.INameScope GetNameScope(class System.Windows.DependencyObject dependencyObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.GetNameScope(System.Windows.DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Markup::INameScope ^ GetNameScope(System::Windows::DependencyObject ^ dependencyObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.INameScope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyObject" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="dependencyObject"><span data-ttu-id="5ee1f-154">XAML 名前スコープの取得元オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-154">The object to get the XAML namescope from.</span></span></param>
        <summary><span data-ttu-id="5ee1f-155"><see cref="P:System.Windows.NameScope.NameScope" /> 添付プロパティに対して、添付プロパティの get アクセサーを提供します。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-155">Provides the attached property get accessor for the <see cref="P:System.Windows.NameScope.NameScope" /> attached property.</span></span></summary>
        <returns><span data-ttu-id="5ee1f-156"><see cref="T:System.Windows.Markup.INameScope" /> インスタンスとしての XAML 名前スコープ。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-156">A XAML namescope, as an <see cref="T:System.Windows.Markup.INameScope" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ee1f-157">このメソッドの目的は、両方を実装する、`get`アクセサーを使用して<xref:System.Windows.NameScope.NameScope%2A>で XAML の使用方法、およびコードの同等の操作を実行するため、アクセサーを提供する添付プロパティとして。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-157">The purpose of this method is both to implement the `get` accessor for using <xref:System.Windows.NameScope.NameScope%2A> as an attached property in XAML usage, and to provide the accessor for performing the equivalent operation in code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ee1f-158"><paramref name="dependencyObject" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-158"><paramref name="dependencyObject" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Windows.Markup.INameScope" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.NameScope.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5ee1f-159">コレクションが読み取り専用かどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-159">Gets a value indicating whether the collection is read-only.</span></span></summary>
        <value><span data-ttu-id="5ee1f-160">常に <see langword="false" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-160">Always returns <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[string key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.NameScope.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(key As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ key); void set(System::String ^ key, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Item(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="5ee1f-161">取得または設定する XAML 名前マッピングの名前文字列。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-161">The string name for the XAML name mapping to get or set.</span></span></param>
        <summary><span data-ttu-id="5ee1f-162">指定したキーを持つ項目を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-162">Gets or sets the item with the specified key.</span></span></summary>
        <value><span data-ttu-id="5ee1f-163"><paramref name="key" /> として指定された XAML 名に対応付けられるオブジェクトの値。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-163">The value of the object mapped by the XAML name provided as <paramref name="key" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ee1f-164"><paramref name="key" /> は <see langword="null" /> として提供されます。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-164"><paramref name="key" /> is provided as <see langword="null" />.</span></span>  
  
 <span data-ttu-id="5ee1f-165">- または -</span><span class="sxs-lookup"><span data-stu-id="5ee1f-165">-or-</span></span>  
  
 <span data-ttu-id="5ee1f-166"><paramref name="value" /> は、設定操作に対して <see langword="null" /> として提供されます。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-166"><paramref name="value" /> is provided as <see langword="null" /> for a set operation.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;string&gt; Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;string&gt; Keys" />
      <MemberSignature Language="DocId" Value="P:System.Windows.NameScope.Keys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Keys As ICollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;System::String ^&gt; ^ Keys { System::Collections::Generic::ICollection&lt;System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Keys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5ee1f-167"><see cref="T:System.Windows.NameScope" /> ディクショナリのキーのコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-167">Gets a collection of the keys in the <see cref="T:System.Windows.NameScope" /> dictionary.</span></span></summary>
        <value><span data-ttu-id="5ee1f-168"><see cref="T:System.Windows.NameScope" /> ディクショナリのキーのコレクション。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-168">A collection of the keys in the <see cref="T:System.Windows.NameScope" /> dictionary.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NameScope">
      <MemberSignature Language="C#" Value="see GetNameScope, and SetNameScope" />
      <MemberSignature Language="ILAsm" Value="see GetNameScope, and SetNameScope" />
      <MemberSignature Language="DocId" Value="P:System.Windows.NameScope.NameScope" />
      <MemberSignature Language="VB.NET" Value="see GetNameScope, and SetNameScope" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NameScopeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty NameScopeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty NameScopeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.NameScope.NameScopeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly NameScopeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ NameScopeProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5ee1f-169"><see cref="P:System.Windows.NameScope.NameScope" /> 添付プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-169">Identifies the <see cref="P:System.Windows.NameScope.NameScope" /> attached property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterName">
      <MemberSignature Language="C#" Value="public void RegisterName (string name, object scopedElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterName(string name, object scopedElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.RegisterName(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterName (name As String, scopedElement As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterName(System::String ^ name, System::Object ^ scopedElement);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.INameScope.RegisterName(System.String,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="scopedElement" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="5ee1f-170">指定したオブジェクトのマッピングに使用する名前。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-170">The name to use for mapping the given object.</span></span></param>
        <param name="scopedElement"><span data-ttu-id="5ee1f-171">指定された名前にマップするオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-171">The object to be mapped to the provided name.</span></span></param>
        <summary><span data-ttu-id="5ee1f-172">現在の XAML 名前スコープに新しい名前とオブジェクトのペアを登録します。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-172">Registers a new name-object pair into the current XAML namescope.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ee1f-173"><paramref name="name" /> または <paramref name="scopedElement" /> は <see langword="null" /> として提供されました。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-173"><paramref name="name" /> or <paramref name="scopedElement" /> was provided as <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5ee1f-174"><paramref name="name" /> に空の文字列が指定されました</span><span class="sxs-lookup"><span data-stu-id="5ee1f-174"><paramref name="name" /> was provided as empty string</span></span>  
  
 <span data-ttu-id="5ee1f-175">\- または</span><span class="sxs-lookup"><span data-stu-id="5ee1f-175">\- or -</span></span>  
  
 <span data-ttu-id="5ee1f-176">XAML 名として無効な文字が含まれているため、指定した <paramref name="name" /> がパーサーによって拒否されました。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-176"><paramref name="name" /> provided was rejected by the parser, because it contained characters that are invalid for a XAML name</span></span>  
  
 <span data-ttu-id="5ee1f-177">\- または</span><span class="sxs-lookup"><span data-stu-id="5ee1f-177">\- or -</span></span>  
  
 <span data-ttu-id="5ee1f-178">指定した <paramref name="name" /> に、重複する名前の登録が発生します。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-178"><paramref name="name" /> provided would result in a duplicate name registration.</span></span></exception>
        <altmember cref="T:System.Windows.Markup.INameScope" />
        <altmember cref="M:System.Windows.FrameworkElement.RegisterName(System.String,System.Object)" />
        <altmember cref="M:System.Windows.FrameworkContentElement.RegisterName(System.String,System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Remove">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5ee1f-179">特定のオブジェクトをコレクションから削除します。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-179">Removes the specific object from the collection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (System.Collections.Generic.KeyValuePair&lt;string,object&gt; item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (item As KeyValuePair(Of String, Object)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt; item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="5ee1f-180">コレクションから削除するオブジェクト。<see cref="T:System.Collections.Generic.KeyValuePair`2" /> として指定します (キーは <see cref="T:System.String" />、値は <see cref="T:System.Object" />)。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-180">The object to remove from the collection, specified as a <see cref="T:System.Collections.Generic.KeyValuePair`2" /> (key is <see cref="T:System.String" />, value is <see cref="T:System.Object" />).</span></span></param>
        <summary><span data-ttu-id="5ee1f-181">特定のオブジェクトをコレクションから削除します。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-181">Removes the specific object from the collection.</span></span></summary>
        <returns>
          <span data-ttu-id="5ee1f-182">コレクションから項目が正常に削除された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-182"><see langword="true" /> if item was successfully removed from the collection, otherwise <see langword="false" />.</span></span> <span data-ttu-id="5ee1f-183">項目がコレクション内に見つからなかった場合も <see langword="false" /> が返されます。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-183">Also returns <see langword="false" /> if the item was not found in the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ee1f-184"><xref:System.Windows.NameScope>はディクショナリは、最初に見つかった位置のない概念以外の場合は、特定<xref:System.Collections.Generic.KeyValuePair%602>一意のことが保証されます。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-184">Because <xref:System.Windows.NameScope> is a dictionary there is no concept of first occurrence; any given <xref:System.Collections.Generic.KeyValuePair%602> is guaranteed unique.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(System::String ^ key);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="5ee1f-185">削除する XAML 名前スコープ マッピングの名前である文字列キー。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-185">The string key, which is the name of the XAML namescope mapping to remove.</span></span></param>
        <summary><span data-ttu-id="5ee1f-186">指定した名前のマッピングをコレクションから削除します。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-186">Removes a mapping for a specified name from the collection.</span></span></summary>
        <returns>
          <span data-ttu-id="5ee1f-187">コレクションから項目が正常に削除された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-187"><see langword="true" /> if item was successfully removed from the collection, otherwise <see langword="false" />.</span></span> <span data-ttu-id="5ee1f-188">項目がコレクション内に見つからなかった場合も <see langword="false" /> が返されます。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-188">Also returns <see langword="false" /> if the item was not found in the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ee1f-189">このメソッドは基本的にラップ<xref:System.Windows.NameScope.UnregisterName%2A>、返す`false`それ以外の場合が発生している例外である場合に、<xref:System.Windows.NameScope.UnregisterName%2A>です。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-189">This method basically wraps <xref:System.Windows.NameScope.UnregisterName%2A>, returning `false` in cases that otherwise would have raised exceptions in <xref:System.Windows.NameScope.UnregisterName%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetNameScope">
      <MemberSignature Language="C#" Value="public static void SetNameScope (System.Windows.DependencyObject dependencyObject, System.Windows.Markup.INameScope value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetNameScope(class System.Windows.DependencyObject dependencyObject, class System.Windows.Markup.INameScope value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.SetNameScope(System.Windows.DependencyObject,System.Windows.Markup.INameScope)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetNameScope(System::Windows::DependencyObject ^ dependencyObject, System::Windows::Markup::INameScope ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyObject" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Windows.Markup.INameScope" />
      </Parameters>
      <Docs>
        <param name="dependencyObject"><span data-ttu-id="5ee1f-190">XAML 名前スコープを変更する対象のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-190">Object to change XAML namescope for.</span></span></param>
        <param name="value"><span data-ttu-id="5ee1f-191">インターフェイスのキャストを使用した新しい XAML 名前スコープ。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-191">The new XAML namescope, using an interface cast.</span></span></param>
        <summary><span data-ttu-id="5ee1f-192"><see cref="P:System.Windows.NameScope.NameScope" /> 添付プロパティに対して、添付プロパティの set アクセサーを提供します。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-192">Provides the attached property set accessor for the <see cref="P:System.Windows.NameScope.NameScope" /> attached property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ee1f-193">このメソッドの目的は、両方として機能する、`set`アクセサーを使用して<xref:System.Windows.NameScope.NameScope%2A>で XAML の使用方法、およびコードの同等の操作を実行するため、アクセサーを提供する添付プロパティとして。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-193">The purpose of this method is both to act as the `set` accessor for using <xref:System.Windows.NameScope.NameScope%2A> as an attached property in XAML usage, and to provide the accessor for performing the equivalent operation in code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ee1f-194"><paramref name="dependencyObject" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-194"><paramref name="dependencyObject" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Windows.Markup.INameScope" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;string,object&gt;&gt; IEnumerable&lt;KeyValuePair&lt;string,object&gt;&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;&gt; System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.System#Collections#Generic#IEnumerable&lt;System#Collections#Generic#KeyValuePair&lt;System#String,System#Object&gt;&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of KeyValuePair(Of String, Object)) Implements IEnumerable(Of KeyValuePair(Of String, Object)).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt; ^ System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5ee1f-195">コレクションを反復処理する列挙子を返します。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-195">Returns an enumerator that iterates through a collection.</span></span></summary>
        <returns><span data-ttu-id="5ee1f-196">コレクションを反復処理する列挙子。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-196">An enumerator that iterates through a collection.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetValue">
      <MemberSignature Language="C#" Value="public bool TryGetValue (string key, out object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGetValue(string key, [out] object&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.TryGetValue(System.String,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetValue (key As String, ByRef value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryGetValue(System::String ^ key, [Runtime::InteropServices::Out] System::Object ^ % value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="5ee1f-197">取得する値のキー。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-197">The key of the value to get.</span></span></param>
        <param name="value"><span data-ttu-id="5ee1f-198">このメソッドから制御が戻るとき、指定されたキーが見つかった場合は、そのキーに関連付けられている値が格納されます。それ以外の場合は null オブジェクトになります。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-198">When this method returns, contains the value associated with the specified key, if the key is found; otherwise, a null object.</span></span> <span data-ttu-id="5ee1f-199">このパラメーターは初期化せずに渡されます。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-199">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="5ee1f-200">指定したキーに関連付けられている値を取得します。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-200">Gets the value associated with the specified key.</span></span></summary>
        <returns><span data-ttu-id="5ee1f-201"><paramref name="key" /> として指定された名前のマッピングが <see cref="T:System.Windows.NameScope" /> に存在する場合は true。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-201">true if the <see cref="T:System.Windows.NameScope" /> contains a mapping for the name provided as <paramref name="key" />.</span></span> <span data-ttu-id="5ee1f-202">それ以外の場合は false を返します。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-202">Otherwise, false.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterName">
      <MemberSignature Language="C#" Value="public void UnregisterName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnregisterName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.UnregisterName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnregisterName (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UnregisterName(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.INameScope.UnregisterName(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="5ee1f-203">削除するマッピングの名前。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-203">The name of the mapping to remove.</span></span></param>
        <summary><span data-ttu-id="5ee1f-204">XAML 名前スコープから名前とオブジェクトのマッピングを削除します。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-204">Removes a name-object mapping from the XAML namescope.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ee1f-205">このメソッドを呼び出す前に行うこともできます<xref:System.Windows.NameScope.FindName%2A>特定の名前とオブジェクト マッピングが存在するかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-205">Before calling this method, you can use <xref:System.Windows.NameScope.FindName%2A> to determine whether a specific name-object mapping exists.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5ee1f-206"><paramref name="name" /> に空の文字列が指定されました。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-206"><paramref name="name" /> was provided as empty string.</span></span>  
  
 <span data-ttu-id="5ee1f-207">\- または</span><span class="sxs-lookup"><span data-stu-id="5ee1f-207">\- or -</span></span>  
  
 <span data-ttu-id="5ee1f-208">指定した <paramref name="name" /> は登録されていません。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-208"><paramref name="name" /> provided had not been registered.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ee1f-209"><paramref name="name" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-209"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Windows.Markup.INameScope" />
        <altmember cref="M:System.Windows.FrameworkElement.UnregisterName(System.String)" />
        <altmember cref="M:System.Windows.FrameworkContentElement.UnregisterName(System.String)" />
        <altmember cref="M:System.Windows.NameScope.RegisterName(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;object&gt; Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;object&gt; Values" />
      <MemberSignature Language="DocId" Value="P:System.Windows.NameScope.Values" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Values As ICollection(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;System::Object ^&gt; ^ Values { System::Collections::Generic::ICollection&lt;System::Object ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Values</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5ee1f-210"><see cref="T:System.Windows.NameScope" /> ディクショナリの値のコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-210">Gets a collection of the values in the <see cref="T:System.Windows.NameScope" /> dictionary.</span></span></summary>
        <value><span data-ttu-id="5ee1f-211"><see cref="T:System.Windows.NameScope" /> ディクショナリの値のコレクション。</span><span class="sxs-lookup"><span data-stu-id="5ee1f-211">A collection of the values in the <see cref="T:System.Windows.NameScope" /> dictionary.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>