<Type Name="TemplateVisualStateAttribute" FullName="System.Windows.TemplateVisualStateAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="89fe5512f1ba562eaedd460ae03096d59c23ad9f" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69443861" /></Metadata><TypeSignature Language="C#" Value="public sealed class TemplateVisualStateAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TemplateVisualStateAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Windows.TemplateVisualStateAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TemplateVisualStateAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class TemplateVisualStateAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type TemplateVisualStateAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class, AllowMultiple=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>コントロールが取ることのできる状態と、そのコントロールの <see cref="T:System.Windows.VisualState" /> に <see cref="T:System.Windows.Controls.ControlTemplate" /> を追加できることを指定します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コントロールの作成者は<xref:System.Windows.VisualState> 、この属性を使用して、コントロールの<xref:System.Windows.Controls.ControlTemplate>に属するオブジェクトおよび<xref:System.Windows.VisualStateGroup>オブジェクトを指定します。  たとえば、と`Focused`という名前の2つの表示状態を持つ新しいコントロールを作成し、どちらもと`Unfocused`いう<xref:System.Windows.VisualStateGroup>名前`FocusStates`のを持つとします。  これらのビジュアル<xref:System.Windows.Controls.ControlTemplate>状態を使用できることを作成者に指定する<xref:System.Windows.TemplateVisualStateAttribute>には、コントロールのクラスシグネチャに2つの属性を追加します。  <xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A> `Unfocused` `Focused`プロパティがで、もう一方のプロパティがであることを指定します。`FocusStates` <xref:System.Windows.TemplateVisualStateAttribute.Name%2A>  
  
   
  
## Examples  
 次の例は、 `NumericUpDown`コントロールのクラスシグネチャを示しています。  この例では、 `NumericUpDown`コントロールが4つの表示状態を使用するように指定します。  と`Positive` <xref:System.Windows.VisualStateGroup> `ValueStates`という名前の2つの状態は、という名前のに含まれています。 `Negative`  他の2つの状態`Focused` ( `Unfocused`name と) は<xref:System.Windows.VisualStateGroup> 、 `FocusedStates`という名前のに含まれています。  全体の例については、「[カスタマイズ可能な外観を持つコントロールを作成](~/docs/framework/wpf/controls/creating-a-control-that-has-a-customizable-appearance.md)する」を参照してください。  
  
 [!code-csharp[VSMCustomControl#ClassAttributes](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmcustomcontrol/csharp/numericupdown.cs#classattributes)]
 [!code-vb[VSMCustomControl#ClassAttributes](~/samples/snippets/visualbasic/VS_Snippets_Wpf/vsmcustomcontrol/visualbasic/numericupdown.vb#classattributes)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TemplateVisualStateAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TemplateVisualStateAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TemplateVisualStateAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.TemplateVisualStateAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupName">
      <MemberSignature Language="C#" Value="public string GroupName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string GroupName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.TemplateVisualStateAttribute.GroupName" />
      <MemberSignature Language="VB.NET" Value="Public Property GroupName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ GroupName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.GroupName : string with get, set" Usage="System.Windows.TemplateVisualStateAttribute.GroupName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>状態が属するグループの名前を取得または設定します。</summary>
        <value>状態が属する <see cref="T:System.Windows.VisualStateGroup" /> の名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プロパティ<xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A>は、 <xref:System.Windows.VisualStateGroup>オブジェクトの<xref:System.Windows.VisualStateGroup.Name%2A?displayProperty=nameWithType>プロパティに対応します。 <xref:System.Windows.VisualStateGroup>が<xref:System.Windows.VisualState>属するを指定するには、プロパティを設定します。<xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A>  
  
   
  
## Examples  
 次の例は、 `NumericUpDown`コントロールのクラスシグネチャを示しています。  この例では、 `NumericUpDown`コントロールが4つの表示状態を使用するように指定します。  と`Positive` <xref:System.Windows.VisualStateGroup> `ValueStates`という名前の2つの状態は、という名前のに含まれています。 `Negative`  他の2つの状態`Focused` ( `Unfocused`name と) は<xref:System.Windows.VisualStateGroup> 、 `FocusedStates`という名前のに含まれています。  全体の例については、「[カスタマイズ可能な外観を持つコントロールを作成](~/docs/framework/wpf/controls/creating-a-control-that-has-a-customizable-appearance.md)する」を参照してください。  
  
 [!code-csharp[VSMCustomControl#ClassAttributes](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmcustomcontrol/csharp/numericupdown.cs#classattributes)]
 [!code-vb[VSMCustomControl#ClassAttributes](~/samples/snippets/visualbasic/VS_Snippets_Wpf/vsmcustomcontrol/visualbasic/numericupdown.vb#classattributes)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.TemplateVisualStateAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.TemplateVisualStateAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールが取ることのできる状態の名前を取得または設定します。</summary>
        <value>コントロールが取ることのできる状態の名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プロパティ<xref:System.Windows.TemplateVisualStateAttribute.Name%2A?displayProperty=nameWithType>は<xref:System.Windows.VisualState.Name%2A?displayProperty=nameWithType> 、<xref:System.Windows.VisualState>のプロパティに対応します。 コントロールに属する<xref:System.Windows.VisualState>ものを指定するには<xref:System.Windows.TemplateVisualStateAttribute.Name%2A?displayProperty=nameWithType>、プロパティを設定します。 <xref:System.Windows.Controls.ControlTemplate>  
  
   
  
## Examples  
 次の例は、 `NumericUpDown`コントロールのクラスシグネチャを示しています。  この例では、 `NumericUpDown`コントロールが4つの表示状態を使用するように指定します。  と`Positive` <xref:System.Windows.VisualStateGroup> `ValueStates`という名前の2つの状態は、という名前のに含まれています。 `Negative`  他の2つの状態`Focused` ( `Unfocused`name と) は<xref:System.Windows.VisualStateGroup> 、 `FocusedStates`という名前のに含まれています。  全体の例については、「[カスタマイズ可能な外観を持つコントロールを作成](~/docs/framework/wpf/controls/creating-a-control-that-has-a-customizable-appearance.md)する」を参照してください。  
  
 [!code-csharp[VSMCustomControl#ClassAttributes](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmcustomcontrol/csharp/numericupdown.cs#classattributes)]
 [!code-vb[VSMCustomControl#ClassAttributes](~/samples/snippets/visualbasic/VS_Snippets_Wpf/vsmcustomcontrol/visualbasic/numericupdown.vb#classattributes)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
