<Type Name="TemplateVisualStateAttribute" FullName="System.Windows.TemplateVisualStateAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="34a2b829a6052d750428f008471383e2e4a855d1" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55359448" /></Metadata><TypeSignature Language="C#" Value="public sealed class TemplateVisualStateAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TemplateVisualStateAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Windows.TemplateVisualStateAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TemplateVisualStateAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class TemplateVisualStateAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type TemplateVisualStateAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class, AllowMultiple=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>コントロールが取ることのできる状態と、そのコントロールの <see cref="T:System.Windows.VisualState" /> に <see cref="T:System.Windows.Controls.ControlTemplate" /> を追加できることを指定します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コントロールの作成者では、この属性を使用して、<xref:System.Windows.VisualState>と<xref:System.Windows.VisualStateGroup>オブジェクト、コントロールの属する<xref:System.Windows.Controls.ControlTemplate>します。  たとえば、という名前の 2 つのビジュアル状態を持つ新しいコントロールを作成する`Focused`と`Unfocused`、両方に含まれるを<xref:System.Windows.VisualStateGroup>という名前`FocusStates`します。  指定する<xref:System.Windows.Controls.ControlTemplate>作成者がこれらのビジュアル状態を使用できることが 2 つを追加<xref:System.Windows.TemplateVisualStateAttribute>属性をコントロールのクラスのシグネチャ。  指定、<xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A>プロパティは`FocusStates`ことと、<xref:System.Windows.TemplateVisualStateAttribute.Name%2A>プロパティは`Focused`のいずれかと`Unfocused`他の。  
  
   
  
## Examples  
 次の例のクラスのシグネチャ、`NumericUpDown`コントロール。  この例では、ことを指定します、`NumericUpDown`コントロールが 4 つのビジュアル状態を使用します。  という名前の 2 つの状態`Positive`と`Negative`では、<xref:System.Windows.VisualStateGroup>という`ValueStates`します。  その他の 2 つの状態の名前`Focused`と`Unfocused`では、<xref:System.Windows.VisualStateGroup>という名前の`FocusedStates`します。  全体の例では、次を参照してください。[外観をカスタマイズできる作成をコントロールに](~/docs/framework/wpf/controls/creating-a-control-that-has-a-customizable-appearance.md)します。  
  
 [!code-csharp[VSMCustomControl#ClassAttributes](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmcustomcontrol/csharp/numericupdown.cs#classattributes)]
 [!code-vb[VSMCustomControl#ClassAttributes](~/samples/snippets/visualbasic/VS_Snippets_Wpf/vsmcustomcontrol/visualbasic/numericupdown.vb#classattributes)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TemplateVisualStateAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TemplateVisualStateAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TemplateVisualStateAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.TemplateVisualStateAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupName">
      <MemberSignature Language="C#" Value="public string GroupName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string GroupName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.TemplateVisualStateAttribute.GroupName" />
      <MemberSignature Language="VB.NET" Value="Public Property GroupName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ GroupName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.GroupName : string with get, set" Usage="System.Windows.TemplateVisualStateAttribute.GroupName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>状態が属するグループの名前を取得または設定します。</summary>
        <value>状態が属する <see cref="T:System.Windows.VisualStateGroup" /> の名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A>プロパティに対応して、<xref:System.Windows.VisualStateGroup.Name%2A?displayProperty=nameWithType>のプロパティを<xref:System.Windows.VisualStateGroup>オブジェクト。 内容を指定する<xref:System.Windows.VisualStateGroup>、<xref:System.Windows.VisualState>が属している、設定、<xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A>プロパティ。  
  
   
  
## Examples  
 次の例のクラスのシグネチャ、`NumericUpDown`コントロール。  この例では、ことを指定します、`NumericUpDown`コントロールが 4 つのビジュアル状態を使用します。  という名前の 2 つの状態`Positive`と`Negative`では、<xref:System.Windows.VisualStateGroup>という`ValueStates`します。  その他の 2 つの状態の名前`Focused`と`Unfocused`では、<xref:System.Windows.VisualStateGroup>という名前の`FocusedStates`します。  全体の例では、次を参照してください。[外観をカスタマイズできる作成をコントロールに](~/docs/framework/wpf/controls/creating-a-control-that-has-a-customizable-appearance.md)します。  
  
 [!code-csharp[VSMCustomControl#ClassAttributes](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmcustomcontrol/csharp/numericupdown.cs#classattributes)]
 [!code-vb[VSMCustomControl#ClassAttributes](~/samples/snippets/visualbasic/VS_Snippets_Wpf/vsmcustomcontrol/visualbasic/numericupdown.vb#classattributes)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.TemplateVisualStateAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.TemplateVisualStateAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールが取ることのできる状態の名前を取得または設定します。</summary>
        <value>コントロールが取ることのできる状態の名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.TemplateVisualStateAttribute.Name%2A?displayProperty=nameWithType>プロパティに対応して、<xref:System.Windows.VisualState.Name%2A?displayProperty=nameWithType>のプロパティを<xref:System.Windows.VisualState>します。 内容を指定する<xref:System.Windows.VisualState>コントロールの属する<xref:System.Windows.Controls.ControlTemplate>、設定、<xref:System.Windows.TemplateVisualStateAttribute.Name%2A?displayProperty=nameWithType>プロパティ。  
  
   
  
## Examples  
 次の例のクラスのシグネチャ、`NumericUpDown`コントロール。  この例では、ことを指定します、`NumericUpDown`コントロールが 4 つのビジュアル状態を使用します。  という名前の 2 つの状態`Positive`と`Negative`では、<xref:System.Windows.VisualStateGroup>という`ValueStates`します。  その他の 2 つの状態の名前`Focused`と`Unfocused`では、<xref:System.Windows.VisualStateGroup>という名前の`FocusedStates`します。  全体の例では、次を参照してください。[外観をカスタマイズできる作成をコントロールに](~/docs/framework/wpf/controls/creating-a-control-that-has-a-customizable-appearance.md)します。  
  
 [!code-csharp[VSMCustomControl#ClassAttributes](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmcustomcontrol/csharp/numericupdown.cs#classattributes)]
 [!code-vb[VSMCustomControl#ClassAttributes](~/samples/snippets/visualbasic/VS_Snippets_Wpf/vsmcustomcontrol/visualbasic/numericupdown.vb#classattributes)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>