<Type Name="IContentHost" FullName="System.Windows.IContentHost">
  <TypeSignature Language="C#" Value="public interface IContentHost" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IContentHost" />
  <TypeSignature Language="DocId" Value="T:System.Windows.IContentHost" />
  <TypeSignature Language="VB.NET" Value="Public Interface IContentHost" />
  <TypeSignature Language="C++ CLI" Value="public interface class IContentHost" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="1f901-101">このインターフェイスは、<see cref="T:System.Windows.ContentElement" /> をホストするレイアウトによって実装されます。</span><span class="sxs-lookup"><span data-stu-id="1f901-101">This interface is implemented by layouts which host <see cref="T:System.Windows.ContentElement" />.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetRectangles">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Rect&gt; GetRectangles (System.Windows.ContentElement child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;valuetype System.Windows.Rect&gt; GetRectangles(class System.Windows.ContentElement child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.IContentHost.GetRectangles(System.Windows.ContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRectangles (child As ContentElement) As ReadOnlyCollection(Of Rect)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Windows::Rect&gt; ^ GetRectangles(System::Windows::ContentElement ^ child);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Rect&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Windows.ContentElement" />
      </Parameters>
      <Docs>
        <param name="child"><span data-ttu-id="1f901-102">外接する四角形が返される子要素。</span><span class="sxs-lookup"><span data-stu-id="1f901-102">The child element that the bounding rectangles are returned for.</span></span></param>
        <summary><span data-ttu-id="1f901-103">子要素に外接する四角形のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="1f901-103">Returns a collection of bounding rectangles for a child element.</span></span></summary>
        <returns><span data-ttu-id="1f901-104">子要素に外接する四角形のコレクション。</span><span class="sxs-lookup"><span data-stu-id="1f901-104">A collection of bounding rectangles for a child element.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1f901-105">*child* が null である場合。</span><span class="sxs-lookup"><span data-stu-id="1f901-105">If *child* is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1f901-106">要素が直接の子孫ではない場合 (つまり、要素は <see cref="T:System.Windows.IContentHost" /> の子であるか、<see cref="T:System.Windows.ContentElement" /> の直接の子孫である <see cref="T:System.Windows.IContentHost" /> である必要があります)。</span><span class="sxs-lookup"><span data-stu-id="1f901-106">If the element is not a direct descendant (i.e. element must be a child of the <see cref="T:System.Windows.IContentHost" /> or a <see cref="T:System.Windows.ContentElement" /> which is a direct descendant  of the <see cref="T:System.Windows.IContentHost" />).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HostedElements">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;System.Windows.IInputElement&gt; HostedElements { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerator`1&lt;class System.Windows.IInputElement&gt; HostedElements" />
      <MemberSignature Language="DocId" Value="P:System.Windows.IContentHost.HostedElements" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HostedElements As IEnumerator(Of IInputElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerator&lt;System::Windows::IInputElement ^&gt; ^ HostedElements { System::Collections::Generic::IEnumerator&lt;System::Windows::IInputElement ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Windows.IInputElement&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1f901-107">子孫であるすべての <see cref="T:System.Windows.ContentElement" /> 派生クラスと、<see cref="T:System.Windows.UIElement" /> の直接の子孫であるか、またはその子孫 <see cref="T:System.Windows.IContentHost" /> クラスの 1 つであるすべての <see cref="T:System.Windows.ContentElement" /> 派生クラスを格納している列挙体を取得します。</span><span class="sxs-lookup"><span data-stu-id="1f901-107">Gets an enumeration containing all descendant <see cref="T:System.Windows.ContentElement" />-derived classes, as well as all <see cref="T:System.Windows.UIElement" />-derived classes that are a direct descendant of the <see cref="T:System.Windows.IContentHost" /> or one of its descendant <see cref="T:System.Windows.ContentElement" /> classes.</span></span></summary>
        <value><span data-ttu-id="1f901-108">子孫であるすべての <see cref="T:System.Windows.ContentElement" /> 派生クラスと、<see cref="T:System.Windows.UIElement" /> の直接の子孫であるか、またはその子孫 <see cref="T:System.Windows.IContentHost" /> クラスの 1 つであるすべての <see cref="T:System.Windows.ContentElement" /> 派生クラスを格納している列挙体。</span><span class="sxs-lookup"><span data-stu-id="1f901-108">Enumeration containing all descendant <see cref="T:System.Windows.ContentElement" />-derived classes, as well as all <see cref="T:System.Windows.UIElement" />-derived classes that are a direct descendant of the <see cref="T:System.Windows.IContentHost" /> or one of its descendant <see cref="T:System.Windows.ContentElement" /> classes.</span></span> <span data-ttu-id="1f901-109">つまり、<see cref="T:System.Windows.IContentHost" /> が視覚的表現を作成する要素 (<see cref="T:System.Windows.ContentElement" /> 派生クラス)、または <see cref="T:System.Windows.IContentHost" /> がレイアウトを設定する要素 (最初のレベルの子孫 <see cref="T:System.Windows.UIElement" /> 派生クラス)。</span><span class="sxs-lookup"><span data-stu-id="1f901-109">In other words, elements for which the <see cref="T:System.Windows.IContentHost" /> creates a visual representation (<see cref="T:System.Windows.ContentElement" />-derived classes) or whose layout is driven by the <see cref="T:System.Windows.IContentHost" /> (the first-level descendant <see cref="T:System.Windows.UIElement" />-derived classes).</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InputHitTest">
      <MemberSignature Language="C#" Value="public System.Windows.IInputElement InputHitTest (System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.IInputElement InputHitTest(valuetype System.Windows.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.IContentHost.InputHitTest(System.Windows.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::IInputElement ^ InputHitTest(System::Windows::Point point);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="1f901-110">ContentHost に対するマウス座標。</span><span class="sxs-lookup"><span data-stu-id="1f901-110">Mouse coordinates relative to the ContentHost.</span></span></param>
        <summary><span data-ttu-id="1f901-111">子要素のヒット テストを実行します。</span><span class="sxs-lookup"><span data-stu-id="1f901-111">Performs hit-testing for child elements.</span></span></summary>
        <returns><span data-ttu-id="1f901-112"><see cref="T:System.Windows.IInputElement" /> の子孫。そのような要素が存在しない場合は **NULL**。</span><span class="sxs-lookup"><span data-stu-id="1f901-112">A descendant of <see cref="T:System.Windows.IInputElement" />, or **NULL** if no such element exists.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnChildDesiredSizeChanged">
      <MemberSignature Language="C#" Value="public void OnChildDesiredSizeChanged (System.Windows.UIElement child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnChildDesiredSizeChanged(class System.Windows.UIElement child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.IContentHost.OnChildDesiredSizeChanged(System.Windows.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnChildDesiredSizeChanged (child As UIElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnChildDesiredSizeChanged(System::Windows::UIElement ^ child);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="child"><span data-ttu-id="1f901-113"><see cref="P:System.Windows.UIElement.DesiredSize" /> が変更された子要素。</span><span class="sxs-lookup"><span data-stu-id="1f901-113">Child element whose <see cref="P:System.Windows.UIElement.DesiredSize" /> has changed</span></span></param>
        <summary><span data-ttu-id="1f901-114"><see cref="T:System.Windows.UIElement" /> によってホストされる <see cref="T:System.Windows.IContentHost" /> 派生クラスの <see cref="P:System.Windows.UIElement.DesiredSize" /> が変更されたときに呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="1f901-114">Called when a <see cref="T:System.Windows.UIElement" />-derived class which is hosted by a <see cref="T:System.Windows.IContentHost" /> changes its <see cref="P:System.Windows.UIElement.DesiredSize" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1f901-115">*child* が null である場合。</span><span class="sxs-lookup"><span data-stu-id="1f901-115">If *child* is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1f901-116">*child* が直接の子孫ではない場合 (つまり、*child*は <see cref="T:System.Windows.IContentHost" /> の子であるか、<see cref="T:System.Windows.IContentHost" /> の直接の子孫である <see cref="T:System.Windows.ContentElement" /> である必要があります)。</span><span class="sxs-lookup"><span data-stu-id="1f901-116">If *child* is not a direct descendant (i.e. *child* must be a child of the <see cref="T:System.Windows.IContentHost" /> or a <see cref="T:System.Windows.ContentElement" /> which is a direct descendant of the <see cref="T:System.Windows.IContentHost" />).</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>