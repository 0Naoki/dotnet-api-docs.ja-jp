<Type Name="Application" FullName="System.Windows.Application">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b524996378b2882f342e465d834a727cafe277d6" />
    <Meta Name="ms.sourcegitcommit" Value="cc0c87a2e12b0fb9ba9ecdd3d4950f0572524db8" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="05/03/2018" />
    <Meta Name="ms.locfileid" Value="32695089" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Application : System.Windows.Threading.DispatcherObject, System.Windows.Markup.IQueryAmbient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Application extends System.Windows.Threading.DispatcherObject implements class System.Windows.Markup.IQueryAmbient" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Application" />
  <TypeSignature Language="VB.NET" Value="Public Class Application&#xA;Inherits DispatcherObject&#xA;Implements IQueryAmbient" />
  <TypeSignature Language="C++ CLI" Value="public ref class Application : System::Windows::Threading::DispatcherObject, System::Windows::Markup::IQueryAmbient" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Threading.DispatcherObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Markup.IQueryAmbient</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="83137-101">Windows Presentation Foundation アプリケーションをカプセル化します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="83137-101">Encapsulates a Windows Presentation Foundation application.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83137-102"><xref:System.Windows.Application> カプセル化するクラスは、[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]次を含む、アプリケーション固有の機能。</span><span class="sxs-lookup"><span data-stu-id="83137-102"><xref:System.Windows.Application> is a class that encapsulates [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] application-specific functionality, including the following:</span></span>  
  
-   <span data-ttu-id="83137-103">**アプリケーションの有効期間**: <xref:System.Windows.Application.Activated>、 <xref:System.Windows.Application.Current%2A>、 <xref:System.Windows.Application.Deactivated>、 <xref:System.Windows.Application.DispatcherUnhandledException>、 <xref:System.Windows.Application.Exit>、 <xref:System.Windows.Application.Run%2A>、 <xref:System.Windows.Application.SessionEnding>、 <xref:System.Windows.Application.Shutdown%2A>、 <xref:System.Windows.Application.ShutdownMode%2A>、<xref:System.Windows.Application.Startup>です。</span><span class="sxs-lookup"><span data-stu-id="83137-103">**Application Lifetime**: <xref:System.Windows.Application.Activated>, <xref:System.Windows.Application.Current%2A>, <xref:System.Windows.Application.Deactivated>, <xref:System.Windows.Application.DispatcherUnhandledException>, <xref:System.Windows.Application.Exit>, <xref:System.Windows.Application.Run%2A>, <xref:System.Windows.Application.SessionEnding>, <xref:System.Windows.Application.Shutdown%2A>, <xref:System.Windows.Application.ShutdownMode%2A>, <xref:System.Windows.Application.Startup>.</span></span>  
  
-   <span data-ttu-id="83137-104">**アプリケーション スコープ ウィンドウ、プロパティ、およびリソース管理**: <xref:System.Windows.Application.FindResource%2A>、 <xref:System.Windows.Application.GetContentStream%2A>、 <xref:System.Windows.Application.GetResourceStream%2A>、 <xref:System.Windows.Application.LoadComponent%2A>、 <xref:System.Windows.Application.MainWindow%2A>、 <xref:System.Windows.Application.Properties%2A>、 <xref:System.Windows.Application.Resources%2A>、 <xref:System.Windows.Application.StartupUri%2A>、<xref:System.Windows.Application.Windows%2A>です。</span><span class="sxs-lookup"><span data-stu-id="83137-104">**Application-Scope Window, Property, and Resource Management**: <xref:System.Windows.Application.FindResource%2A>, <xref:System.Windows.Application.GetContentStream%2A>, <xref:System.Windows.Application.GetResourceStream%2A>, <xref:System.Windows.Application.LoadComponent%2A>, <xref:System.Windows.Application.MainWindow%2A>, <xref:System.Windows.Application.Properties%2A>, <xref:System.Windows.Application.Resources%2A>, <xref:System.Windows.Application.StartupUri%2A>, <xref:System.Windows.Application.Windows%2A>.</span></span>  
  
-   <span data-ttu-id="83137-105">**コマンド ライン パラメーターおよび終了コード処理**: <xref:System.Windows.Application.Startup?displayProperty=nameWithType>、 <xref:System.Windows.Application.Exit?displayProperty=nameWithType>、<xref:System.Windows.Application.Shutdown%2A?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="83137-105">**Command-Line Parameter and Exit Code Processing**: <xref:System.Windows.Application.Startup?displayProperty=nameWithType>, <xref:System.Windows.Application.Exit?displayProperty=nameWithType>, <xref:System.Windows.Application.Shutdown%2A?displayProperty=nameWithType>.</span></span>  
  
-   <span data-ttu-id="83137-106">**ナビゲーション**: <xref:System.Windows.Application.FragmentNavigation>、 <xref:System.Windows.Application.LoadCompleted>、 <xref:System.Windows.Application.Navigated>、 <xref:System.Windows.Application.Navigating>、 <xref:System.Windows.Application.NavigationProgress>、 <xref:System.Windows.Application.NavigationStopped>、 <xref:System.Windows.Application.NavigationFailed>、 <xref:System.Windows.Application.SetCookie%2A>、<xref:System.Windows.Application.GetCookie%2A>です。</span><span class="sxs-lookup"><span data-stu-id="83137-106">**Navigation**: <xref:System.Windows.Application.FragmentNavigation>, <xref:System.Windows.Application.LoadCompleted>, <xref:System.Windows.Application.Navigated>, <xref:System.Windows.Application.Navigating>, <xref:System.Windows.Application.NavigationProgress>, <xref:System.Windows.Application.NavigationStopped>, <xref:System.Windows.Application.NavigationFailed>, <xref:System.Windows.Application.SetCookie%2A>, <xref:System.Windows.Application.GetCookie%2A>.</span></span>  
  
 <span data-ttu-id="83137-107"><xref:System.Windows.Application> そのウィンドウ、プロパティ、およびリソースのスコープのサービスへの共有アクセスを提供するシングルトン パターンを実装します。</span><span class="sxs-lookup"><span data-stu-id="83137-107"><xref:System.Windows.Application> implements the singleton pattern to provide shared access to its window, property, and resource scope services.</span></span> <span data-ttu-id="83137-108">その結果、1 つだけの<xref:System.Windows.Application>あたりクラスを作成することができます<xref:System.AppDomain>です。</span><span class="sxs-lookup"><span data-stu-id="83137-108">Consequently, only one instance of the <xref:System.Windows.Application> class can be created per <xref:System.AppDomain>.</span></span>  
  
 <span data-ttu-id="83137-109">実装することができます、<xref:System.Windows.Application>マークアップ、マークアップと分離コード、またはコードを使用します。</span><span class="sxs-lookup"><span data-stu-id="83137-109">You can implement an <xref:System.Windows.Application> using markup, markup and code-behind, or code.</span></span> <span data-ttu-id="83137-110">場合<xref:System.Windows.Application>が、マークアップまたはマークアップと分離コードでは、マークアップ ファイルとして構成されているかどうか、マークアップで実装される、 [!INCLUDE[TLA#tla_msbuild](~/includes/tlasharptla-msbuild-md.md)] `ApplicationDefinition`項目。</span><span class="sxs-lookup"><span data-stu-id="83137-110">If <xref:System.Windows.Application> is implemented with markup, whether markup or markup and code-behind, the markup file must be configured as an [!INCLUDE[TLA#tla_msbuild](~/includes/tlasharptla-msbuild-md.md)] `ApplicationDefinition` item.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="83137-111">スタンドアロン アプリケーションに必要ありません、<xref:System.Windows.Application>オブジェクトです。 カスタムを実装することは`static`エントリ ポイント メソッド (`Main`) のインスタンスを作成せずにウィンドウを開く<xref:System.Windows.Application>です。</span><span class="sxs-lookup"><span data-stu-id="83137-111">A standalone application does not require an <xref:System.Windows.Application> object; it is possible to implement a custom `static` entry point method (`Main`) that opens a window without creating an instance of <xref:System.Windows.Application>.</span></span> <span data-ttu-id="83137-112">ただし、[!INCLUDE[TLA#tla_xbap#plural](~/includes/tlasharptla-xbapsharpplural-md.md)]を必要とする<xref:System.Windows.Application>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="83137-112">However, [!INCLUDE[TLA#tla_xbap#plural](~/includes/tlasharptla-xbapsharpplural-md.md)] require an <xref:System.Windows.Application> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83137-113">次の例は、標準的なアプリケーションは、どのようにマークアップのみを使用して定義します。</span><span class="sxs-lookup"><span data-stu-id="83137-113">The following example shows how a standard application is defined using only markup:</span></span>  
  
 [!code-xaml[ApplicationSnippets#ApplicationMARKUP](~/samples/snippets/csharp/VS_Snippets_Wpf/ApplicationSnippets/CSharp/AppMarkup.xaml#applicationmarkup)]  
  
 <span data-ttu-id="83137-114">コードのみを使用する標準的なアプリケーションを定義する方法を例を示します。</span><span class="sxs-lookup"><span data-stu-id="83137-114">The following example shows how a standard application is defined using only code:</span></span>  
  
 [!code-csharp[ApplicationSnippets#ApplicationCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/ApplicationSnippets/CSharp/AppCode.cs#applicationcode)]
 [!code-vb[ApplicationSnippets#ApplicationCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ApplicationSnippets/visualbasic/appcode.vb#applicationcode)]  
  
 <span data-ttu-id="83137-115">次の例は、標準的なアプリケーションのマークアップと分離コードとの組み合わせを使用して定義します。</span><span class="sxs-lookup"><span data-stu-id="83137-115">The following example shows how a standard application is defined using a combination of markup and code-behind.</span></span>  
  
 [!code-xaml[ApplicationSnippets#ApplicationXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/ApplicationSnippets/CSharp/App.xaml#applicationxaml)]  
  
 [!code-csharp[ApplicationSnippets#ApplicationCODEBEHIND](~/samples/snippets/csharp/VS_Snippets_Wpf/ApplicationSnippets/CSharp/App.xaml.cs#applicationcodebehind)]
 [!code-vb[ApplicationSnippets#ApplicationCODEBEHIND](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ApplicationSnippets/visualbasic/application.xaml.vb#applicationcodebehind)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="83137-116">パブリック<see langword="static" />(<see langword="Shared" /> Visual Basic で) この型のメンバーは、スレッド セーフであります。</span>
      <span class="sxs-lookup">
        <span data-stu-id="83137-116">The public <see langword="static" /> (<see langword="Shared" /> in Visual Basic) members of this type are thread safe.</span>
      </span>
      <span data-ttu-id="83137-117">さらに、<see cref="M:System.Windows.Application.FindResource(System.Object)" />と<see cref="M:System.Windows.Application.TryFindResource(System.Object)" />メソッドおよび<see cref="P:System.Windows.Application.Properties" />と<see cref="P:System.Windows.Application.Resources" />プロパティは、スレッド セーフであります。</span>
      <span class="sxs-lookup">
        <span data-stu-id="83137-117">In addition, the <see cref="M:System.Windows.Application.FindResource(System.Object)" /> and <see cref="M:System.Windows.Application.TryFindResource(System.Object)" /> methods and the <see cref="P:System.Windows.Application.Properties" /> and <see cref="P:System.Windows.Application.Resources" /> properties are thread safe.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.Windows.Window" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Application ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Application.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Application();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="83137-118">
            <see cref="T:System.Windows.Application" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-118">Initializes a new instance of the <see cref="T:System.Windows.Application" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83137-119">インスタンスを 1 つだけ、<xref:System.Windows.Application>あたりクラスを作成することができます<xref:System.AppDomain>アプリケーション スコープ ウィンドウ、プロパティ、およびリソース データの単一のセットを共有のアクセスを確実にします。</span><span class="sxs-lookup"><span data-stu-id="83137-119">Only one instance of the <xref:System.Windows.Application> class can be created per <xref:System.AppDomain>, to ensure shared access to a single set of application-scope window, property, and resource data.</span></span> <span data-ttu-id="83137-120">したがって、既定のコンス トラクターの<xref:System.Windows.Application>クラスを検出したかどうか、インスタンスを初期化中に最初のインスタンス、<xref:System.AppDomain>以外の場合、それ以外は、<xref:System.InvalidOperationException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="83137-120">Consequently, the default constructor of the <xref:System.Windows.Application> class detects whether the instance being initialized is the first instance in an <xref:System.AppDomain>; if it is not, an <xref:System.InvalidOperationException> is thrown.</span></span>  
  
 <span data-ttu-id="83137-121"><xref:System.Windows.Application>現在のオブジェクト<xref:System.AppDomain>静的から公開される<xref:System.Windows.Application.Current%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="83137-121">The <xref:System.Windows.Application> object for the current <xref:System.AppDomain> is exposed from the static <xref:System.Windows.Application.Current%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="83137-122">1 つの <see cref="T:System.Windows.Application" /> に対して、<see cref="T:System.AppDomain" /> クラスのインスタンスが複数作成されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-122">More than one instance of the <see cref="T:System.Windows.Application" /> class is created per <see cref="T:System.AppDomain" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Activated">
      <MemberSignature Language="C#" Value="public event EventHandler Activated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Activated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Application.Activated" />
      <MemberSignature Language="VB.NET" Value="Public Event Activated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Activated;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="83137-123">アプリケーションが前面のアプリケーションになったときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-123">Occurs when an application becomes the foreground application.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83137-124">1 つ以上の開いているウィンドウを持つ Windows Presentation Foundation アプリケーションをアクティブ化 (フォア グラウンド アプリケーションになります)、windows のいずれかが有効な場合、最初にアプリケーションが起動されるため、または、windows のいずれかが有効な場合、アプリケーションがアクティブではありません。 具体的には、アクティブ化を行うときに。</span><span class="sxs-lookup"><span data-stu-id="83137-124">A Windows Presentation Foundation application that has one or more open windows is activated (becomes the foreground application) when one of the windows is activated for the first time since the application was launched, or when one of the windows is activated while the application is inactive: Specifically, activation occurs when:</span></span>  
  
-   <span data-ttu-id="83137-125">アプリケーションでは、最初のウィンドウが開きます。</span><span class="sxs-lookup"><span data-stu-id="83137-125">An application opens its first window.</span></span>  
  
-   <span data-ttu-id="83137-126">ユーザーは、ALT + TAB キーを使用して、またはタスク マネージャーを使用して、アプリケーションに切り替えます。</span><span class="sxs-lookup"><span data-stu-id="83137-126">A user switches to the application by using ALT+TAB or by using Task Manager.</span></span>  
  
-   <span data-ttu-id="83137-127">ユーザーは、アプリケーションで windows のいずれかのタスク バー ボタンをクリックします。</span><span class="sxs-lookup"><span data-stu-id="83137-127">A user clicks the taskbar button for one of the windows in an application.</span></span>  
  
 <span data-ttu-id="83137-128">アクティブ化するときを検出するために必要とするアプリケーションが処理できる、<xref:System.Windows.Application.Activated>イベント。</span><span class="sxs-lookup"><span data-stu-id="83137-128">Applications that need to detect when they activate can handle the <xref:System.Windows.Application.Activated> event.</span></span>  
  
 <span data-ttu-id="83137-129">アプリケーションが最初に有効化した後を非アクティブ化され、その有効期間中に何度も再アクティブ化する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="83137-129">After an application is first activated, it may be deactivated and reactivated many times during its lifetime.</span></span> <span data-ttu-id="83137-130">依存する場合、アプリケーションの動作または状態のアクティブ化状態で、両方を処理できる<xref:System.Windows.Application.Activated>と<xref:System.Windows.Application.Deactivated>のイベントがアクティブ化の状態を確認します。</span><span class="sxs-lookup"><span data-stu-id="83137-130">If an application's behavior or state depends on its activation state, it can handle both <xref:System.Windows.Application.Activated> and <xref:System.Windows.Application.Deactivated> events to determine which activation state it's in.</span></span>  
  
 <span data-ttu-id="83137-131">アプリケーションが、アクティブになった時点<xref:System.Windows.Application.Activated>は発生しません。 もう一度、アプリケーションがアクティブなときに、アプリケーション内でウィンドウの数がアクティブ化に関係なく、アプリケーションが非アクティブ化までです。</span><span class="sxs-lookup"><span data-stu-id="83137-131">Once an application becomes active, <xref:System.Windows.Application.Activated> will not be raised again until the application is deactivated, irrespective of how many windows within an application are activated while the application is active.</span></span>  
  
 <span data-ttu-id="83137-132"><xref:System.Windows.Application.Activated> 発生しません[!INCLUDE[TLA#tla_xbap#plural](~/includes/tlasharptla-xbapsharpplural-md.md)]です。</span><span class="sxs-lookup"><span data-stu-id="83137-132"><xref:System.Windows.Application.Activated> is not raised for [!INCLUDE[TLA#tla_xbap#plural](~/includes/tlasharptla-xbapsharpplural-md.md)].</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83137-133">次の例では、スタンドアロンのアプリケーションがアクティブにし、非アクティブ化を検出する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="83137-133">The following example shows how to detect when a standalone application activates and deactivates.</span></span>  
  
 [!code-xaml[ApplicationActivationSnippets#DetectActivationStateXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/ApplicationActivationSnippets/CSharp/App.xaml#detectactivationstatexaml)]  
  
 [!code-csharp[ApplicationActivationSnippets#DetectActivationStateCODEBEHIND](~/samples/snippets/csharp/VS_Snippets_Wpf/ApplicationActivationSnippets/CSharp/App.xaml.cs#detectactivationstatecodebehind)]
 [!code-vb[ApplicationActivationSnippets#DetectActivationStateCODEBEHIND](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ApplicationActivationSnippets/visualbasic/application.xaml.vb#detectactivationstatecodebehind)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Application.OnActivated(System.EventArgs)" />
        <altmember cref="E:System.Windows.Application.Deactivated" />
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public static System.Windows.Application Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Application Current" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Application.Current" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Current As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Application ^ Current { System::Windows::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="83137-134">現在の <see cref="T:System.Windows.Application" /> の <see cref="T:System.AppDomain" /> オブジェクトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-134">Gets the <see cref="T:System.Windows.Application" /> object for the current <see cref="T:System.AppDomain" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="83137-135">現在の <see cref="T:System.Windows.Application" /> の <see cref="T:System.AppDomain" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-135">The <see cref="T:System.Windows.Application" /> object for the current <see cref="T:System.AppDomain" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83137-136"><xref:System.Windows.Application> あたり-<xref:System.AppDomain> 、静的なを実装するシングルトン型<xref:System.Windows.Application.Current%2A>共有のアクセスを提供するプロパティ、<xref:System.Windows.Application>現在のインスタンス<xref:System.AppDomain>です。</span><span class="sxs-lookup"><span data-stu-id="83137-136"><xref:System.Windows.Application> is a per-<xref:System.AppDomain> singleton type that implements the static <xref:System.Windows.Application.Current%2A> property to provide shared access to the <xref:System.Windows.Application> instance for the current <xref:System.AppDomain>.</span></span> <span data-ttu-id="83137-137">この設計によって管理されるその状態を保証する<xref:System.Windows.Application>、共有リソースや状態は、単一の共有の場所から入手できます。</span><span class="sxs-lookup"><span data-stu-id="83137-137">This design guarantees that state managed by <xref:System.Windows.Application>, including shared resources and state, is available from a single, shared location.</span></span>  
  
 <span data-ttu-id="83137-138">このプロパティは、スレッド セーフであるは任意のスレッドから使用できます。</span><span class="sxs-lookup"><span data-stu-id="83137-138">This property is thread safe and is available from any thread.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Deactivated">
      <MemberSignature Language="C#" Value="public event EventHandler Deactivated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Deactivated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Application.Deactivated" />
      <MemberSignature Language="VB.NET" Value="Public Event Deactivated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Deactivated;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="83137-139">アプリケーションが前面のアプリケーションではなくなったときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-139">Occurs when an application stops being the foreground application.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83137-140">Windows Presentation Foundation アプリケーションを 1 つ以上の開いているウィンドウを持つ (前面のアプリケーションを停止) を非アクティブ化ユーザーが、次を実行します。</span><span class="sxs-lookup"><span data-stu-id="83137-140">A Windows Presentation Foundation application that has one or more open windows deactivates (stops being the foreground application) when a user does the following:</span></span>  
  
-   <span data-ttu-id="83137-141">ALT + タブを使用して、またはタスク マネージャーを使用して別のアプリケーションに切り替えます。</span><span class="sxs-lookup"><span data-stu-id="83137-141">Switches to another application by using ALT+TAB or by using Task Manager.</span></span>  
  
-   <span data-ttu-id="83137-142">別のアプリケーションでのウィンドウのタスク バー ボタンをクリックします。</span><span class="sxs-lookup"><span data-stu-id="83137-142">Clicks the taskbar button for a window in another application.</span></span>  
  
 <span data-ttu-id="83137-143">非アクティブ化を処理できるを検出するために必要とするアプリケーション、<xref:System.Windows.Application.Deactivated>イベント。</span><span class="sxs-lookup"><span data-stu-id="83137-143">Applications that need to detect deactivation can handle the <xref:System.Windows.Application.Deactivated> event.</span></span>  
  
 <span data-ttu-id="83137-144">アプリケーションが最初に有効化した後を非アクティブ化され、その有効期間中に何度も再アクティブ化する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="83137-144">After an application is first activated, it may be deactivated and reactivated many times during its lifetime.</span></span> <span data-ttu-id="83137-145">依存する場合、アプリケーションの動作または状態のアクティブ化状態で、両方を処理できる<xref:System.Windows.Application.Deactivated>と<xref:System.Windows.Application.Activated>のイベントがどのような状態を確認します。</span><span class="sxs-lookup"><span data-stu-id="83137-145">If an application's behavior or state depends on its activation state, it can handle both <xref:System.Windows.Application.Deactivated> and <xref:System.Windows.Application.Activated> events to determine which state it's in.</span></span>  
  
 <span data-ttu-id="83137-146"><xref:System.Windows.Application.Deactivated> 発生しません[!INCLUDE[TLA#tla_xbap#plural](~/includes/tlasharptla-xbapsharpplural-md.md)]です。</span><span class="sxs-lookup"><span data-stu-id="83137-146"><xref:System.Windows.Application.Deactivated> is not raised for [!INCLUDE[TLA#tla_xbap#plural](~/includes/tlasharptla-xbapsharpplural-md.md)].</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83137-147">次の例では、スタンドアロンのアプリケーションが非アクティブ化し、アクティブ化を検出する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="83137-147">The following example shows how to detect when a standalone application deactivates and activates.</span></span>  
  
 [!code-xaml[ApplicationActivationSnippets#DetectActivationStateXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/ApplicationActivationSnippets/CSharp/App.xaml#detectactivationstatexaml)]  
  
 [!code-csharp[ApplicationActivationSnippets#DetectActivationStateCODEBEHIND](~/samples/snippets/csharp/VS_Snippets_Wpf/ApplicationActivationSnippets/CSharp/App.xaml.cs#detectactivationstatecodebehind)]
 [!code-vb[ApplicationActivationSnippets#DetectActivationStateCODEBEHIND](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ApplicationActivationSnippets/visualbasic/application.xaml.vb#detectactivationstatecodebehind)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Application.OnDeactivated(System.EventArgs)" />
        <altmember cref="E:System.Windows.Application.Activated" />
      </Docs>
    </Member>
    <Member MemberName="DispatcherUnhandledException">
      <MemberSignature Language="C#" Value="public event System.Windows.Threading.DispatcherUnhandledExceptionEventHandler DispatcherUnhandledException;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Threading.DispatcherUnhandledExceptionEventHandler DispatcherUnhandledException" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Application.DispatcherUnhandledException" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DispatcherUnhandledException As DispatcherUnhandledExceptionEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Threading::DispatcherUnhandledExceptionEventHandler ^ DispatcherUnhandledException;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherUnhandledExceptionEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="83137-148">アプリケーションによってスローされた例外が処理されないときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-148">Occurs when an exception is thrown by an application but not handled.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83137-149">既定では、Windows Presentation Foundation 未処理の例外をキャッチ、(元の報告できる例外) ダイアログ ボックスで、例外のユーザーに通知およびアプリケーションを自動的にシャット ダウンします。</span><span class="sxs-lookup"><span data-stu-id="83137-149">By default, Windows Presentation Foundation catches unhandled exceptions, notifies users of the exception from a dialog box (from which they can report the exception), and automatically shuts down an application.</span></span>  
  
 <span data-ttu-id="83137-150">ただし、処理、アプリケーションを一元化された場所からカスタムのハンドルされない例外の処理を実行する場合は、<xref:System.Windows.Application.DispatcherUnhandledException>です。</span><span class="sxs-lookup"><span data-stu-id="83137-150">However, if an application needs to perform custom unhandled exception processing from a centralized location, you should handle <xref:System.Windows.Application.DispatcherUnhandledException>.</span></span>  
  
 <span data-ttu-id="83137-151"><xref:System.Windows.Application.DispatcherUnhandledException> によって発生した、<xref:System.Windows.Application>メイン UI スレッドで実行されているコードによってハンドルされない例外ごとにします。</span><span class="sxs-lookup"><span data-stu-id="83137-151"><xref:System.Windows.Application.DispatcherUnhandledException> is raised by an <xref:System.Windows.Application> for each exception that is unhandled by code running on the main UI thread.</span></span>  
  
 <span data-ttu-id="83137-152">例外が処理されない場合のいずれかのバック グラウンドの UI スレッド (独自のスレッド<xref:System.Windows.Threading.Dispatcher>) またはバック グラウンド ワーカー スレッド (せず、スレッド、 <xref:System.Windows.Threading.Dispatcher>)、例外が、メイン UI スレッドに転送されません。</span><span class="sxs-lookup"><span data-stu-id="83137-152">If an exception is not handled on either a background UI thread (a thread with its own <xref:System.Windows.Threading.Dispatcher>) or a background worker thread (a thread without a <xref:System.Windows.Threading.Dispatcher>), the exception is not forwarded to the main UI thread.</span></span> <span data-ttu-id="83137-153">その結果、<xref:System.Windows.Application.DispatcherUnhandledException>は発生しません。</span><span class="sxs-lookup"><span data-stu-id="83137-153">Consequently, <xref:System.Windows.Application.DispatcherUnhandledException> is not raised.</span></span> <span data-ttu-id="83137-154">このような場合は、以下を行うコードを記述する必要があります。</span><span class="sxs-lookup"><span data-stu-id="83137-154">In these circumstances, you will need to write code to do the following:</span></span>  
  
1.  <span data-ttu-id="83137-155">バック グラウンド スレッドで例外を処理します。</span><span class="sxs-lookup"><span data-stu-id="83137-155">Handle exceptions on the background thread.</span></span>  
  
2.  <span data-ttu-id="83137-156">これらのメイン UI スレッドへ例外をディスパッチします。</span><span class="sxs-lookup"><span data-stu-id="83137-156">Dispatch those exceptions to the main UI thread.</span></span>  
  
3.  <span data-ttu-id="83137-157">せず処理を許可するためのメイン UI スレッドで再スロー<xref:System.Windows.Application.DispatcherUnhandledException>が発生します。</span><span class="sxs-lookup"><span data-stu-id="83137-157">Rethrow them on the main UI thread without handling them to allow <xref:System.Windows.Application.DispatcherUnhandledException> to be raised.</span></span>  
  
 <span data-ttu-id="83137-158">詳細については、次を参照してください。、[スレッド モデル](~/docs/framework/wpf/advanced/threading-model.md)の概要です。</span><span class="sxs-lookup"><span data-stu-id="83137-158">For more information, see the [Threading Model](~/docs/framework/wpf/advanced/threading-model.md) overview.</span></span>  
  
 <span data-ttu-id="83137-159"><xref:System.Windows.Application.DispatcherUnhandledException>渡されるイベント ハンドラー、<xref:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs>例外に関するコンテキスト情報を含む引数を含みます。</span><span class="sxs-lookup"><span data-stu-id="83137-159">The <xref:System.Windows.Application.DispatcherUnhandledException> event handler is passed a <xref:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs> argument that contains contextual information regarding the exception, including:</span></span>  
  
-   <span data-ttu-id="83137-160">例外 (<xref:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs.Exception%2A>)。</span><span class="sxs-lookup"><span data-stu-id="83137-160">The exception (<xref:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs.Exception%2A>).</span></span>  
  
-   <span data-ttu-id="83137-161"><xref:System.Windows.Threading.Dispatcher>出所から (<xref:System.Windows.Threading.DispatcherEventArgs.Dispatcher%2A>)。</span><span class="sxs-lookup"><span data-stu-id="83137-161">The <xref:System.Windows.Threading.Dispatcher> from which it originated (<xref:System.Windows.Threading.DispatcherEventArgs.Dispatcher%2A>).</span></span>  
  
 <span data-ttu-id="83137-162">この情報を使用するには、例外が回復可能かどうかどうかを判別します。</span><span class="sxs-lookup"><span data-stu-id="83137-162">You can use this information to determine whether an exception is recoverable or not.</span></span> <span data-ttu-id="83137-163">回復可能な例外があります、<xref:System.IO.FileNotFoundException>など、回復不能な例外があります、 <xref:System.StackOverflowException>、例を示します。</span><span class="sxs-lookup"><span data-stu-id="83137-163">A recoverable exception might be a <xref:System.IO.FileNotFoundException>, for example, while an unrecoverable exception might be a <xref:System.StackOverflowException>, for example.</span></span>  
  
 <span data-ttu-id="83137-164">未処理の例外を処理すると<xref:System.Windows.Application.DispatcherUnhandledException>、たく[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]処理を続行するには、設定する必要があります、<xref:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs.Handled%2A>プロパティを`true`です。</span><span class="sxs-lookup"><span data-stu-id="83137-164">When you process an unhandled exception from <xref:System.Windows.Application.DispatcherUnhandledException>, and you don't want [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] to continue processing it, you need to set the <xref:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs.Handled%2A> property to `true`.</span></span>  
  
 <span data-ttu-id="83137-165">他のイベントとは異なりを<xref:System.Windows.Application>発生すると、<xref:System.Windows.Application.DispatcherUnhandledException>しませんが、対応する保護されていない (OnDispatcherUnhandledException) の仮想実装します。</span><span class="sxs-lookup"><span data-stu-id="83137-165">Unlike the other events that <xref:System.Windows.Application> raises, <xref:System.Windows.Application.DispatcherUnhandledException> does not have a matching protected virtual implementation (OnDispatcherUnhandledException).</span></span> <span data-ttu-id="83137-166">そのため、クラスから派生した<xref:System.Windows.Application>を持つイベント ハンドラーは常に登録する必要があります<xref:System.Windows.Application.DispatcherUnhandledException>未処理の例外を処理します。</span><span class="sxs-lookup"><span data-stu-id="83137-166">Consequently, classes that derive from <xref:System.Windows.Application> must always register an event handler with <xref:System.Windows.Application.DispatcherUnhandledException> to process unhandled exceptions.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83137-167">次の例を処理することにより、未処理の例外を処理する方法を示しています、<xref:System.Windows.Application.DispatcherUnhandledException>イベント。</span><span class="sxs-lookup"><span data-stu-id="83137-167">The following example shows how to process unhandled exceptions by handling the <xref:System.Windows.Application.DispatcherUnhandledException> event.</span></span>  
  
 [!code-csharp[ApplicationDispatcherUnhandledExceptionSnippets#HandleDispatcherUnhandledExceptionCODEBEHIND1](~/samples/snippets/csharp/VS_Snippets_Wpf/ApplicationDispatcherUnhandledExceptionSnippets/CSharp/App.xaml.cs#handledispatcherunhandledexceptioncodebehind1)]
 [!code-vb[ApplicationDispatcherUnhandledExceptionSnippets#HandleDispatcherUnhandledExceptionCODEBEHIND1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ApplicationDispatcherUnhandledExceptionSnippets/visualbasic/application.xaml.vb#handledispatcherunhandledexceptioncodebehind1)]  
[!code-csharp[ApplicationDispatcherUnhandledExceptionSnippets#HandleDispatcherUnhandledExceptionCODEBEHIND2](~/samples/snippets/csharp/VS_Snippets_Wpf/ApplicationDispatcherUnhandledExceptionSnippets/CSharp/App.xaml.cs#handledispatcherunhandledexceptioncodebehind2)]
[!code-vb[ApplicationDispatcherUnhandledExceptionSnippets#HandleDispatcherUnhandledExceptionCODEBEHIND2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ApplicationDispatcherUnhandledExceptionSnippets/visualbasic/application.xaml.vb#handledispatcherunhandledexceptioncodebehind2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Exit">
      <MemberSignature Language="C#" Value="public event System.Windows.ExitEventHandler Exit;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.ExitEventHandler Exit" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Application.Exit" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Exit As ExitEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::ExitEventHandler ^ Exit;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ExitEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="83137-168">アプリケーションがシャットダウンする直前に発生し、キャンセルできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-168">Occurs just before an application shuts down, and cannot be canceled.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83137-169">アプリケーションは、次の理由のいずれかのシャット ダウンをできます。</span><span class="sxs-lookup"><span data-stu-id="83137-169">An application can shut down for either of the following reasons:</span></span>  
  
-   <span data-ttu-id="83137-170"><xref:System.Windows.Application.Shutdown%2A>のメソッド、<xref:System.Windows.Application>オブジェクトが呼び出されると、によって明示的にまたは決定される、<xref:System.Windows.Application.ShutdownMode%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="83137-170">The <xref:System.Windows.Application.Shutdown%2A> method of the <xref:System.Windows.Application> object is called, either explicitly or as determined by the <xref:System.Windows.Application.ShutdownMode%2A> property.</span></span>  
  
-   <span data-ttu-id="83137-171">ユーザーは、ログオフまたはシャット ダウンによって、セッションを終了します。</span><span class="sxs-lookup"><span data-stu-id="83137-171">The user ends the session by logging off or shutting down.</span></span>  
  
 <span data-ttu-id="83137-172">処理することにより、アプリケーションのシャット ダウンが発生したときに検出することができます、<xref:System.Windows.Application.Exit>イベント、および必要に応じて、追加の処理を実行します。</span><span class="sxs-lookup"><span data-stu-id="83137-172">You can detect when application shutdown occurs by handling the <xref:System.Windows.Application.Exit> event, and perform any additional processing as required.</span></span>  
  
 <span data-ttu-id="83137-173">処理することも<xref:System.Windows.Application.Exit>を検査またはアプリケーションの終了コードを変更するときに呼び出す必要はありません<xref:System.Windows.Application.Shutdown%2A>明示的にします。</span><span class="sxs-lookup"><span data-stu-id="83137-173">You can also handle <xref:System.Windows.Application.Exit> to inspect or change the application exit code when you don't need to call <xref:System.Windows.Application.Shutdown%2A> explicitly.</span></span> <span data-ttu-id="83137-174">終了コードの公開元である、<xref:System.Windows.ExitEventArgs.ApplicationExitCode%2A>のプロパティ、<xref:System.Windows.ExitEventArgs>に渡される引数、<xref:System.Windows.Application.Exit>イベント ハンドラー。</span><span class="sxs-lookup"><span data-stu-id="83137-174">The exit code is exposed from the <xref:System.Windows.ExitEventArgs.ApplicationExitCode%2A> property of the <xref:System.Windows.ExitEventArgs> argument that's passed to the <xref:System.Windows.Application.Exit> event handler.</span></span> <span data-ttu-id="83137-175">アプリケーションの実行が停止、終了コードは後続の処理のオペレーティング システムに渡されます。</span><span class="sxs-lookup"><span data-stu-id="83137-175">When the application stops running, the exit code is passed to the operating system for subsequent processing.</span></span>  
  
 <span data-ttu-id="83137-176">アプリケーションが処理する場合、<xref:System.Windows.Application.SessionEnding>イベントし、後で、キャンセル<xref:System.Windows.Application.Exit>は発生しませんしによって配布されたシャット ダウン モードで実行されているアプリケーションを続行します。</span><span class="sxs-lookup"><span data-stu-id="83137-176">If your application handles the <xref:System.Windows.Application.SessionEnding> event and subsequently cancels it, <xref:System.Windows.Application.Exit> is not raised and the application continues running in accordance with the shutdown mode.</span></span>  
  
 <span data-ttu-id="83137-177">終了コードから設定できる、[!INCLUDE[TLA#tla_xbap](~/includes/tlasharptla-xbap-md.md)]値は無視されますが、します。</span><span class="sxs-lookup"><span data-stu-id="83137-177">The exit code can be set from an [!INCLUDE[TLA#tla_xbap](~/includes/tlasharptla-xbap-md.md)], although the value is ignored.</span></span>  
  
 <span data-ttu-id="83137-178">[!INCLUDE[TLA2#tla_xbap#plural](~/includes/tla2sharptla-xbapsharpplural-md.md)]、<xref:System.Windows.Application.Exit>は次のような状況で発生します。</span><span class="sxs-lookup"><span data-stu-id="83137-178">For [!INCLUDE[TLA2#tla_xbap#plural](~/includes/tla2sharptla-xbapsharpplural-md.md)], <xref:System.Windows.Application.Exit> is raised in the following circumstances:</span></span>  
  
-   <span data-ttu-id="83137-179">[!INCLUDE[TLA2#tla_xbap](~/includes/tla2sharptla-xbap-md.md)]から移動します。</span><span class="sxs-lookup"><span data-stu-id="83137-179">An [!INCLUDE[TLA2#tla_xbap](~/includes/tla2sharptla-xbap-md.md)] is navigated away from.</span></span>  
  
-   <span data-ttu-id="83137-180">[!INCLUDE[TLA2#tla_ie7](~/includes/tla2sharptla-ie7-md.md)]、ときに、タブをホストしている、[!INCLUDE[TLA2#tla_xbap](~/includes/tla2sharptla-xbap-md.md)]が閉じられます。</span><span class="sxs-lookup"><span data-stu-id="83137-180">In [!INCLUDE[TLA2#tla_ie7](~/includes/tla2sharptla-ie7-md.md)], when the tab that is hosting the [!INCLUDE[TLA2#tla_xbap](~/includes/tla2sharptla-xbap-md.md)] is closed.</span></span>  
  
-   <span data-ttu-id="83137-181">ブラウザーが閉じられた。</span><span class="sxs-lookup"><span data-stu-id="83137-181">When the browser is closed.</span></span>  
  
 <span data-ttu-id="83137-182">値の場合、<xref:System.Windows.ExitEventArgs.ApplicationExitCode%2A>プロパティは無視されます。</span><span class="sxs-lookup"><span data-stu-id="83137-182">In all cases, the value of the <xref:System.Windows.ExitEventArgs.ApplicationExitCode%2A> property is ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83137-183">次の例について説明する方法。</span><span class="sxs-lookup"><span data-stu-id="83137-183">The following example demonstrates how to:</span></span>  
  
-   <span data-ttu-id="83137-184">処理、<xref:System.Windows.Application.Exit>イベント。</span><span class="sxs-lookup"><span data-stu-id="83137-184">Handle the <xref:System.Windows.Application.Exit> event.</span></span>  
  
-   <span data-ttu-id="83137-185">更新を行い、<xref:System.Windows.ExitEventArgs.ApplicationExitCode%2A>のプロパティ、<xref:System.Windows.ExitEventArgs>です。</span><span class="sxs-lookup"><span data-stu-id="83137-185">Inspect and update the <xref:System.Windows.ExitEventArgs.ApplicationExitCode%2A> property of the <xref:System.Windows.ExitEventArgs>.</span></span>  
  
-   <span data-ttu-id="83137-186">分離ストレージでのアプリケーション ログにエントリを記述します。</span><span class="sxs-lookup"><span data-stu-id="83137-186">Write an entry to an application log in isolated storage.</span></span>  
  
-   <span data-ttu-id="83137-187">分離ストレージへのアプリケーション状態を維持します。</span><span class="sxs-lookup"><span data-stu-id="83137-187">Persist the application state to isolated storage.</span></span>  
  
 [!code-xaml[ApplicationExitSnippets#HandleExitXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/ApplicationExitSnippets/CSharp/App.xaml#handleexitxaml)]  
  
 [!code-csharp[ApplicationExitSnippets#HandleExitCODEBEHIND](~/samples/snippets/csharp/VS_Snippets_Wpf/ApplicationExitSnippets/CSharp/App.xaml.cs#handleexitcodebehind)]
 [!code-vb[ApplicationExitSnippets#HandleExitCODEBEHIND](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ApplicationExitSnippets/visualbasic/application.xaml.vb#handleexitcodebehind)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Application.OnExit(System.Windows.ExitEventArgs)" />
        <altmember cref="E:System.Windows.Application.Startup" />
        <altmember cref="T:System.IO.IsolatedStorage.IsolatedStorage" />
      </Docs>
    </Member>
    <Member MemberName="FindResource">
      <MemberSignature Language="C#" Value="public object FindResource (object resourceKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object FindResource(object resourceKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Application.FindResource(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindResource (resourceKey As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ FindResource(System::Object ^ resourceKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceKey" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="resourceKey">
          <span data-ttu-id="83137-188">検索するリソースの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-188">The name of the resource to find.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83137-189">指定したキーを持つ [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] リソース (<see cref="T:System.Windows.Style" /> や <see cref="T:System.Windows.Media.Brush" /> など) を検索します。要求したリソースが見つからない場合は例外がスローされます (「[XAML Resources (XAML リソース)](~/docs/framework/wpf/advanced/xaml-resources.md)」を参照)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-189">Searches for a [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] resource, such as a <see cref="T:System.Windows.Style" /> or <see cref="T:System.Windows.Media.Brush" />, with the specified key, and throws an exception if the requested resource is not found (see [XAML Resources](~/docs/framework/wpf/advanced/xaml-resources.md)).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="83137-190">要求されたリソース オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-190">The requested resource object.</span>
          </span>
          <span data-ttu-id="83137-191">要求したリソースが見つからない場合は、<see cref="T:System.Windows.ResourceReferenceKeyNotFoundException" /> がスローされます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-191">If the requested resource is not found, a <see cref="T:System.Windows.ResourceReferenceKeyNotFoundException" /> is thrown.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83137-192"><xref:System.Windows.Application.FindResource%2A> アプリケーション スコープの指定されたリソースのリソースでは、まずします。</span><span class="sxs-lookup"><span data-stu-id="83137-192"><xref:System.Windows.Application.FindResource%2A> will first look in application-scope resources for the specified resource.</span></span> <span data-ttu-id="83137-193">アプリケーション スコープのリソースで管理されて<xref:System.Windows.Application>から公開されると、<xref:System.Windows.Application.Resources%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="83137-193">Application-scope resources are managed by <xref:System.Windows.Application>, and are exposed from the <xref:System.Windows.Application.Resources%2A> property.</span></span> <span data-ttu-id="83137-194">アプリケーション スコープのリソースのセットに指定されたリソースが見つからない場合<xref:System.Windows.Application.FindResource%2A>次へは、システム リソースを検索します。</span><span class="sxs-lookup"><span data-stu-id="83137-194">If the specified resource is not found in the set of application-scope resources, <xref:System.Windows.Application.FindResource%2A> then next searches the system resources.</span></span> <span data-ttu-id="83137-195">システム リソースは、シェル リソースが、ユーザーが定義されているし、色、フォント、およびシェル構成が含まれます。</span><span class="sxs-lookup"><span data-stu-id="83137-195">System resources are shell resources defined by the user, and include colors, fonts, and shell configurations.</span></span> <span data-ttu-id="83137-196">これらは、 <xref:System.Windows.SystemColors>、 <xref:System.Windows.SystemFonts>、および<xref:System.Windows.SystemParameters>型をそれぞれ、静的なプロパティです。</span><span class="sxs-lookup"><span data-stu-id="83137-196">These are exposed from the <xref:System.Windows.SystemColors>, <xref:System.Windows.SystemFonts>, and <xref:System.Windows.SystemParameters> types, respectively, as static properties.</span></span> <span data-ttu-id="83137-197">使用する<xref:System.Windows.Application.FindResource%2A>を取得するには、これらの型もリソース キー プロパティを公開に渡されるように設計された<xref:System.Windows.Application.FindResource%2A>。 たとえば、<xref:System.Windows.SystemParameters.IconWidthKey%2A>です。</span><span class="sxs-lookup"><span data-stu-id="83137-197">To use <xref:System.Windows.Application.FindResource%2A> to acquire them, these types also expose resource key properties that are designed to be passed to <xref:System.Windows.Application.FindResource%2A>; for example, <xref:System.Windows.SystemParameters.IconWidthKey%2A>.</span></span>  
  
 <span data-ttu-id="83137-198"><xref:System.Windows.Application.FindResource%2A>オブジェクトを返しますリソースが見つかった場合は適切な型に返される値をキャストする必要があります。</span><span class="sxs-lookup"><span data-stu-id="83137-198">Because <xref:System.Windows.Application.FindResource%2A> returns an object, you must cast the returned value to the appropriate type if the resource is found.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="83137-199">見つからないキーのこのメソッドを呼び出すと、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="83137-199">If you call this method for a key that cannot be found, an exception is thrown.</span></span> <span data-ttu-id="83137-200">呼び出し元に起因する例外を処理しないかどうかは<xref:System.Windows.Application.FindResource%2A>、呼び出す<xref:System.Windows.Application.TryFindResource%2A>代わりにします。<xref:System.Windows.Application.TryFindResource%2A>を返します、`null`要求されたリソースが見つからないし、例外をスローしないときに参照します。</span><span class="sxs-lookup"><span data-stu-id="83137-200">If you do not want to handle exceptions that result from calling <xref:System.Windows.Application.FindResource%2A>, call <xref:System.Windows.Application.TryFindResource%2A> instead; <xref:System.Windows.Application.TryFindResource%2A> returns a `null` reference when a requested resource cannot be found, and does not throw an exception.</span></span>  
  
 <span data-ttu-id="83137-201">このメソッドはスレッド セーフであるため、任意のスレッドから呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="83137-201">This method is thread safe and can be called from any thread.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83137-202">次の例は、使用する方法を示しています。<xref:System.Windows.Application.FindResource%2A>のリソースを見つけると、処理する<xref:System.Windows.ResourceReferenceKeyNotFoundException>リソースが見つからない場合。</span><span class="sxs-lookup"><span data-stu-id="83137-202">The following example shows how to use <xref:System.Windows.Application.FindResource%2A> to find a resource, and to handle <xref:System.Windows.ResourceReferenceKeyNotFoundException> if the resource is not found.</span></span>  
  
 [!code-csharp[ApplicationFindResourceSnippets#ApplicationCallFindResourceCODEBEHIND](~/samples/snippets/csharp/VS_Snippets_Wpf/ApplicationFindResourceSnippets/CSharp/MainWindow.xaml.cs#applicationcallfindresourcecodebehind)]
 [!code-vb[ApplicationFindResourceSnippets#ApplicationCallFindResourceCODEBEHIND](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ApplicationFindResourceSnippets/visualbasic/mainwindow.xaml.vb#applicationcallfindresourcecodebehind)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Windows.ResourceReferenceKeyNotFoundException">
          <span data-ttu-id="83137-203">リソースが見つかりません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-203">The resource cannot be found.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Application.TryFindResource(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="FragmentNavigation">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.FragmentNavigationEventHandler FragmentNavigation;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.FragmentNavigationEventHandler FragmentNavigation" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Application.FragmentNavigation" />
      <MemberSignature Language="VB.NET" Value="Public Event FragmentNavigation As FragmentNavigationEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::FragmentNavigationEventHandler ^ FragmentNavigation;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.FragmentNavigationEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="83137-204">アプリケーションのナビゲーターがコンテンツ フラグメントへのナビゲーションを開始すると発生します。ナビゲーションは、目的のフラグメントが現在のコンテンツにある場合はすぐに発生し、目的のフラグメントが別のコンテンツにある場合は、ソース [!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)] コンテンツが読み込まれた後に発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-204">Occurs when a navigator in the application begins navigation to a content fragment, Navigation occurs immediately if the desired fragment is in the current content, or after the source [!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)] content has been loaded if the desired fragment is in different content.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83137-205">ナビゲーターは、<xref:System.Windows.Navigation.NavigationWindow>または<xref:System.Windows.Controls.Frame>です。</span><span class="sxs-lookup"><span data-stu-id="83137-205">A navigator is either a <xref:System.Windows.Navigation.NavigationWindow> or a <xref:System.Windows.Controls.Frame>.</span></span>  
  
 <span data-ttu-id="83137-206">「<xref:System.Windows.Navigation.NavigationService.FragmentNavigation?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="83137-206">See <xref:System.Windows.Navigation.NavigationService.FragmentNavigation?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Application.Navigated" />
        <altmember cref="E:System.Windows.Application.Navigating" />
        <altmember cref="E:System.Windows.Application.LoadCompleted" />
        <altmember cref="E:System.Windows.Application.NavigationProgress" />
        <altmember cref="E:System.Windows.Application.NavigationStopped" />
        <altmember cref="E:System.Windows.Application.NavigationFailed" />
      </Docs>
    </Member>
    <Member MemberName="GetContentStream">
      <MemberSignature Language="C#" Value="public static System.Windows.Resources.StreamResourceInfo GetContentStream (Uri uriContent);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Resources.StreamResourceInfo GetContentStream(class System.Uri uriContent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Application.GetContentStream(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetContentStream (uriContent As Uri) As StreamResourceInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Resources::StreamResourceInfo ^ GetContentStream(Uri ^ uriContent);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Resources.StreamResourceInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uriContent" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uriContent">
          <span data-ttu-id="83137-207">Loose リソースにマッピングする相対 <see cref="T:System.Uri" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-207">The relative <see cref="T:System.Uri" /> that maps to a loose resource.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83137-208">指定した <see cref="T:System.Uri" /> にあるコンテンツ データ ファイル (「[WPF Application Resource, Content, and Data Files (WPF アプリケーション リソース、コンテンツおよびデータ ファイル)](~/docs/framework/wpf/app-development/wpf-application-resource-content-and-data-files.md)」を参照) のリソース ストリームを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-208">Returns a resource stream for a content data file that is located at the specified <see cref="T:System.Uri" /> (see [WPF Application Resource, Content, and Data Files](~/docs/framework/wpf/app-development/wpf-application-resource-content-and-data-files.md)).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="83137-209">指定した <see cref="T:System.Windows.Resources.StreamResourceInfo" /> にあるコンテンツ データ ファイルを格納している <see cref="T:System.Uri" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-209">A <see cref="T:System.Windows.Resources.StreamResourceInfo" /> that contains a content data file that is located at the specified <see cref="T:System.Uri" />.</span>
          </span>
          <span data-ttu-id="83137-210">Loose リソースが見つからない場合は null が返されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-210">If a loose resource is not found, null is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83137-211">このメソッドはスレッド セーフではありません。</span><span class="sxs-lookup"><span data-stu-id="83137-211">This method is not thread safe.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="83137-212">
            <see cref="T:System.Uri" /> に渡される <see cref="M:System.Windows.Application.GetContentStream(System.Uri)" /> は null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-212">The <see cref="T:System.Uri" /> that is passed to <see cref="M:System.Windows.Application.GetContentStream(System.Uri)" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="83137-213">
            <see cref="T:System.Uri" /> に渡される <see cref="M:System.Windows.Application.GetContentStream(System.Uri)" /> は、絶対 <see cref="T:System.Uri" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-213">The <see cref="T:System.Uri" /> that is passed to <see cref="M:System.Windows.Application.GetContentStream(System.Uri)" /> is an absolute <see cref="T:System.Uri" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Application.GetResourceStream(System.Uri)" />
        <altmember cref="M:System.Windows.Application.GetRemoteStream(System.Uri)" />
        <altmember cref="Overload:System.Windows.Application.LoadComponent" />
      </Docs>
    </Member>
    <Member MemberName="GetCookie">
      <MemberSignature Language="C#" Value="public static string GetCookie (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetCookie(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Application.GetCookie(System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetCookie(Uri ^ uri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri">
          <span data-ttu-id="83137-214">クッキーが作成された場所を指定する <see cref="T:System.Uri" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-214">The <see cref="T:System.Uri" /> that specifies the location for which a cookie was created.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83137-215">
            <see cref="T:System.Uri" /> で指定した場所のクッキーを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-215">Retrieves a cookie for the location specified by a <see cref="T:System.Uri" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="83137-216">クッキーが存在する場合は <see cref="T:System.String" /> 値が返されます。それ以外の場合は <see cref="T:System.ComponentModel.Win32Exception" /> がスローされます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-216">A <see cref="T:System.String" /> value, if the cookie exists; otherwise, a <see cref="T:System.ComponentModel.Win32Exception" /> is thrown.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83137-217"><xref:System.Windows.Application.GetCookie%2A> 指定された cookie を取得<xref:System.Uri>です。</span><span class="sxs-lookup"><span data-stu-id="83137-217"><xref:System.Windows.Application.GetCookie%2A> retrieves a cookie for the specified <xref:System.Uri>.</span></span> <span data-ttu-id="83137-218">Cookie を取得できない場合、<xref:System.ComponentModel.Win32Exception>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="83137-218">If the cookie can't be retrieved, a <xref:System.ComponentModel.Win32Exception> is thrown.</span></span> <span data-ttu-id="83137-219">名前/値ペアの一覧に、cookie の文字列を解析するコードを記述する必要があります。</span><span class="sxs-lookup"><span data-stu-id="83137-219">You need to write the code to parse the cookie string into a list of name/value pairs.</span></span>  
  
 <span data-ttu-id="83137-220">クッキーの概要については[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]を参照してください[ナビゲーション概要](~/docs/framework/wpf/app-development/navigation-overview.md)です。</span><span class="sxs-lookup"><span data-stu-id="83137-220">For an overview of cookies in [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)], see [Navigation Overview](~/docs/framework/wpf/app-development/navigation-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">
          <span data-ttu-id="83137-221">指定したクッキーを取得しようとして問題が起きると、(<see cref="M:System.Windows.Application.GetCookie(System.Uri)" /> から呼び出された) <see langword="InternetGetCookie" /> 関数により [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] エラーが発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-221">A [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] error is raised by the <see langword="InternetGetCookie" /> function (called by <see cref="M:System.Windows.Application.GetCookie(System.Uri)" />) if a problem occurs when attempting to retrieve the specified cookie.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="83137-222">ファイル ベースの cookie を取得する<see cref="T:System.Uri" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-222">for getting the cookie for a file-based <see cref="T:System.Uri" />.</span>
          </span>
          <span data-ttu-id="83137-223">関連する列挙。 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-223">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          </span>
        </permission>
        <permission cref="T:System.Net.WebPermission">
          <span data-ttu-id="83137-224">以外のファイル ベースの cookie を取得する<see cref="T:System.Uri" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-224">for getting the cookie for a non-file-based <see cref="T:System.Uri" />.</span>
          </span>
          <span data-ttu-id="83137-225">関連する列挙。 <see cref="P:System.Net.WebPermission.ConnectList" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-225">Associated enumeration: <see cref="P:System.Net.WebPermission.ConnectList" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Windows.Application.SetCookie(System.Uri,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetRemoteStream">
      <MemberSignature Language="C#" Value="public static System.Windows.Resources.StreamResourceInfo GetRemoteStream (Uri uriRemote);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Resources.StreamResourceInfo GetRemoteStream(class System.Uri uriRemote) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Application.GetRemoteStream(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRemoteStream (uriRemote As Uri) As StreamResourceInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Resources::StreamResourceInfo ^ GetRemoteStream(Uri ^ uriRemote);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Resources.StreamResourceInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uriRemote" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uriRemote">
          <span data-ttu-id="83137-226">起点サイトの Loose リソースにマッピングする <see cref="T:System.Uri" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-226">The <see cref="T:System.Uri" /> that maps to a loose resource at the site of origin.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83137-227">指定した <see cref="T:System.Uri" /> にある元のサイトに対するデータ ファイル (「[WPF Application Resource, Content, and Data Files (WPF アプリケーション リソース、コンテンツおよびデータ ファイル)](~/docs/framework/wpf/app-development/wpf-application-resource-content-and-data-files.md)」を参照) のリソース ストリームを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-227">Returns a resource stream for a site-of-origin data file that is located at the specified <see cref="T:System.Uri" /> (see [WPF Application Resource, Content, and Data Files](~/docs/framework/wpf/app-development/wpf-application-resource-content-and-data-files.md)).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="83137-228">指定した <see cref="T:System.Windows.Resources.StreamResourceInfo" /> にある起点サイト データ ファイルのリソース ストリームを格納している <see cref="T:System.Uri" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-228">A <see cref="T:System.Windows.Resources.StreamResourceInfo" /> that contains a resource stream for a site-of-origin data file that is located at the specified <see cref="T:System.Uri" />.</span>
          </span>
          <span data-ttu-id="83137-229">Loose リソースが見つからない場合は <see langword="null" /> が返されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-229">If the loose resource is not found, <see langword="null" /> is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83137-230">このメソッドはスレッド セーフではありません。</span><span class="sxs-lookup"><span data-stu-id="83137-230">This method is not thread safe.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="83137-231">
            <see cref="T:System.Uri" /> に渡される <see cref="M:System.Windows.Application.GetRemoteStream(System.Uri)" /> は null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-231">The <see cref="T:System.Uri" /> that is passed to <see cref="M:System.Windows.Application.GetRemoteStream(System.Uri)" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="83137-232">
            <see cref="M:System.Windows.Application.GetRemoteStream(System.Uri)" /> に渡される <see cref="T:System.Uri" /> は相対参照ではなく絶対参照の形式ですが、<c>pack://siteoforigin:,,,/</c> の形式ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-232">The <see cref="T:System.Uri" /> that is passed to <see cref="M:System.Windows.Application.GetRemoteStream(System.Uri)" /> is either not relative, or is absolute but not in the <c>pack://siteoforigin:,,,/</c> form.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Application.GetContentStream(System.Uri)" />
        <altmember cref="M:System.Windows.Application.GetResourceStream(System.Uri)" />
        <altmember cref="Overload:System.Windows.Application.LoadComponent" />
      </Docs>
    </Member>
    <Member MemberName="GetResourceStream">
      <MemberSignature Language="C#" Value="public static System.Windows.Resources.StreamResourceInfo GetResourceStream (Uri uriResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Resources.StreamResourceInfo GetResourceStream(class System.Uri uriResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Application.GetResourceStream(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetResourceStream (uriResource As Uri) As StreamResourceInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Resources::StreamResourceInfo ^ GetResourceStream(Uri ^ uriResource);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Resources.StreamResourceInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uriResource" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uriResource">
          <span data-ttu-id="83137-233">埋め込みリソースにマッピングする <see cref="T:System.Uri" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-233">The <see cref="T:System.Uri" /> that maps to an embedded resource.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83137-234">指定した <see cref="T:System.Uri" /> にあるリソース データ ファイル (「[WPF Application Resource, Content, and Data Files (WPF アプリケーション リソース、コンテンツおよびデータ ファイル)](~/docs/framework/wpf/app-development/wpf-application-resource-content-and-data-files.md)」を参照) のリソース ストリームを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-234">Returns a resource stream for a resource data file that is located at the specified <see cref="T:System.Uri" /> (see [WPF Application Resource, Content, and Data Files](~/docs/framework/wpf/app-development/wpf-application-resource-content-and-data-files.md)).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="83137-235">指定した <see cref="T:System.Windows.Resources.StreamResourceInfo" /> にあるリソース データ ファイルのリソース ストリームを格納している <see cref="T:System.Uri" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-235">A <see cref="T:System.Windows.Resources.StreamResourceInfo" /> that contains a resource stream for resource data file that is located at the specified <see cref="T:System.Uri" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83137-236">このメソッドはスレッド セーフではありません。</span><span class="sxs-lookup"><span data-stu-id="83137-236">This method is not thread safe.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="83137-237">
            <see cref="T:System.Uri" /> に渡される <see cref="M:System.Windows.Application.GetResourceStream(System.Uri)" /> は null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-237">The <see cref="T:System.Uri" /> that is passed to <see cref="M:System.Windows.Application.GetResourceStream(System.Uri)" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="83137-238">
            <see cref="M:System.Windows.Application.GetResourceStream(System.Uri)" /> に渡される <see cref="T:System.Uri" /> は相対参照ではなく絶対参照の形式ですが、<c>pack://application:,,,/</c> の形式ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-238">The <see cref="T:System.Uri" /> that is passed to <see cref="M:System.Windows.Application.GetResourceStream(System.Uri)" /> is either not relative, or is absolute but not in the <c>pack://application:,,,/</c> form.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="83137-239">
            <see cref="T:System.Uri" /> に渡される <see cref="M:System.Windows.Application.GetResourceStream(System.Uri)" /> が見つかりません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-239">The <see cref="T:System.Uri" /> that is passed to <see cref="M:System.Windows.Application.GetResourceStream(System.Uri)" /> cannot be found.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Application.GetContentStream(System.Uri)" />
        <altmember cref="M:System.Windows.Application.GetRemoteStream(System.Uri)" />
        <altmember cref="Overload:System.Windows.Application.LoadComponent" />
      </Docs>
    </Member>
    <Member MemberName="LoadCompleted">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.LoadCompletedEventHandler LoadCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.LoadCompletedEventHandler LoadCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Application.LoadCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Event LoadCompleted As LoadCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::LoadCompletedEventHandler ^ LoadCompleted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.LoadCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="83137-240">アプリケーションのナビゲーターによる移動先のコンテンツが読み込まれ、解析されて、レンダリングが開始されると発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-240">Occurs when content that was navigated to by a navigator in the application has been loaded, parsed, and has begun rendering.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83137-241">ナビゲーターは、<xref:System.Windows.Navigation.NavigationWindow>または<xref:System.Windows.Controls.Frame>です。</span><span class="sxs-lookup"><span data-stu-id="83137-241">A navigator is either a <xref:System.Windows.Navigation.NavigationWindow> or a <xref:System.Windows.Controls.Frame>.</span></span>  
  
 <span data-ttu-id="83137-242">「<xref:System.Windows.Navigation.NavigationService.LoadCompleted?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="83137-242">See <xref:System.Windows.Navigation.NavigationService.LoadCompleted?displayProperty=nameWithType>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="83137-243">などの移動、コンテンツに対するイベントのリッスン、<xref:System.Windows.FrameworkElement.Loaded>でイベントを<xref:System.Windows.Controls.Page>移動のコンテンツのプロパティにアクセスする前にします。</span><span class="sxs-lookup"><span data-stu-id="83137-243">Listen for events on the navigated content such as the <xref:System.Windows.FrameworkElement.Loaded> event on <xref:System.Windows.Controls.Page> before you access properties of the navigated content.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Application.Navigated" />
        <altmember cref="E:System.Windows.Application.Navigating" />
        <altmember cref="E:System.Windows.Application.NavigationProgress" />
        <altmember cref="E:System.Windows.Application.NavigationStopped" />
        <altmember cref="E:System.Windows.Application.NavigationFailed" />
        <altmember cref="E:System.Windows.Application.FragmentNavigation" />
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadComponent">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="83137-244">指定した[!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)] にある [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] ファイルを読み込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-244">Loads a [!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)] file that is located at the specified [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)].</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83137-245">[!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)]ファイルは、アプリケーション コード ファイルを使用できます (として構成されている、[!INCLUDE[TLA#tla_msbuild](~/includes/tlasharptla-msbuild-md.md)]ページ アイテム) やアプリケーション データ ファイル (リソース ファイル、コンテンツ ファイルは、またはサイトの元のファイルは、参照してください[WPF アプリケーションのリソース、コンテンツ、およびデータ ファイル](~/docs/framework/wpf/app-development/wpf-application-resource-content-and-data-files.md))。</span><span class="sxs-lookup"><span data-stu-id="83137-245">The [!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)] file can be an application code file (configured as an [!INCLUDE[TLA#tla_msbuild](~/includes/tlasharptla-msbuild-md.md)] Page item) or an application data file (a resource file, content file, or site-of-origin file; see [WPF Application Resource, Content, and Data Files](~/docs/framework/wpf/app-development/wpf-application-resource-content-and-data-files.md)).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="83137-246">このメソッドはスレッド セーフではありません。</span><span class="sxs-lookup"><span data-stu-id="83137-246">This method is not thread-safe.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Application.GetResourceStream(System.Uri)" />
        <altmember cref="M:System.Windows.Application.GetContentStream(System.Uri)" />
        <altmember cref="M:System.Windows.Application.GetRemoteStream(System.Uri)" />
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadComponent">
      <MemberSignature Language="C#" Value="public static object LoadComponent (Uri resourceLocator);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object LoadComponent(class System.Uri resourceLocator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Application.LoadComponent(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LoadComponent (resourceLocator As Uri) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ LoadComponent(Uri ^ resourceLocator);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceLocator" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="resourceLocator">
          <span data-ttu-id="83137-247">相対 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] ファイルにマップする <see cref="T:System.Uri" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-247">A <see cref="T:System.Uri" /> that maps to a relative [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83137-248">指定した[!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)] にある [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] ファイルを読み込み、[!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)] ファイルのルート要素で指定されているオブジェクトのインスタンスに変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-248">Loads a [!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)] file that is located at the specified [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)], and converts it to an instance of the object that is specified by the root element of the [!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)] file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="83137-249">読み込まれた XAML ファイルに指定されているルート要素のインスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-249">An instance of the root element specified by the XAML file loaded.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83137-250">ルート要素と同じ型を戻り値を明示的に変換する必要があります、[!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)]ファイル。</span><span class="sxs-lookup"><span data-stu-id="83137-250">You must explicitly convert the return value to the same type as the root element of the [!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)] file.</span></span>  
  
 <span data-ttu-id="83137-251">[!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)]ファイルは、アプリケーション コード ファイルを使用できます (として構成されている、[!INCLUDE[TLA#tla_msbuild](~/includes/tlasharptla-msbuild-md.md)]ページ アイテム) やアプリケーション データ ファイル (リソース ファイル、コンテンツ ファイルは、またはサイトの元のファイルは、参照してください[WPF アプリケーションのリソース、コンテンツ、およびデータ ファイル](~/docs/framework/wpf/app-development/wpf-application-resource-content-and-data-files.md))。</span><span class="sxs-lookup"><span data-stu-id="83137-251">The [!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)] file can be an application code file (configured as an [!INCLUDE[TLA#tla_msbuild](~/includes/tlasharptla-msbuild-md.md)] Page item) or an application data file (a resource file, content file, or site-of-origin file; see [WPF Application Resource, Content, and Data Files](~/docs/framework/wpf/app-development/wpf-application-resource-content-and-data-files.md)).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="83137-252">このメソッドはスレッド セーフではありません。</span><span class="sxs-lookup"><span data-stu-id="83137-252">This method is not thread-safe.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="83137-253">
            <paramref name="resourceLocator" /> が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-253">
              <paramref name="resourceLocator" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="83137-254">
            <paramref name="resourceLocator" /> は絶対 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-254">The <paramref name="resourceLocator" /> is an absolute [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)].</span>
          </span>
        </exception>
        <exception cref="T:System.Exception">
          <span data-ttu-id="83137-255">ファイルが [!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)] ファイルではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-255">The file is not a [!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)] file.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Application.GetResourceStream(System.Uri)" />
        <altmember cref="M:System.Windows.Application.GetContentStream(System.Uri)" />
        <altmember cref="M:System.Windows.Application.GetRemoteStream(System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="LoadComponent">
      <MemberSignature Language="C#" Value="public static void LoadComponent (object component, Uri resourceLocator);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LoadComponent(object component, class System.Uri resourceLocator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Application.LoadComponent(System.Object,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub LoadComponent (component As Object, resourceLocator As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void LoadComponent(System::Object ^ component, Uri ^ resourceLocator);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="resourceLocator" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="83137-256">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] ファイルのルート要素と同じ型のオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-256">An object of the same type as the root element of the [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] file.</span>
          </span>
        </param>
        <param name="resourceLocator">
          <span data-ttu-id="83137-257">相対 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] ファイルにマップする <see cref="T:System.Uri" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-257">A <see cref="T:System.Uri" /> that maps to a relative [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83137-258">指定した [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] にある [!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)] ファイルを読み込んで、[!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)] ファイルのルート要素で指定したオブジェクトのインスタンスに変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-258">Loads a [!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)] file that is located at the specified [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] and converts it to an instance of the object that is specified by the root element of the [!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)] file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83137-259">[!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)]ファイルは、アプリケーション コード ファイルを使用できます (として構成されている、[!INCLUDE[TLA#tla_msbuild](~/includes/tlasharptla-msbuild-md.md)]ページ アイテム) やアプリケーション データ ファイル (リソース ファイル、コンテンツ ファイルは、またはサイトの元のファイルは、参照してください[WPF アプリケーションのリソース、コンテンツ、およびデータ ファイル](~/docs/framework/wpf/app-development/wpf-application-resource-content-and-data-files.md))。</span><span class="sxs-lookup"><span data-stu-id="83137-259">The [!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)] file can be an application code file (configured as an [!INCLUDE[TLA#tla_msbuild](~/includes/tlasharptla-msbuild-md.md)] Page item) or an application data file (a resource file, content file, or site-of-origin file; see [WPF Application Resource, Content, and Data Files](~/docs/framework/wpf/app-development/wpf-application-resource-content-and-data-files.md)).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="83137-260">このメソッドはスレッド セーフではありません。</span><span class="sxs-lookup"><span data-stu-id="83137-260">This method is not thread-safe.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="83137-261">
            <paramref name="resourceLocator" /> が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-261">
              <paramref name="resourceLocator" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="83137-262">
            <paramref name="resourceLocator" /> は絶対 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-262">The <paramref name="resourceLocator" /> is an absolute [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)].</span>
          </span>
        </exception>
        <exception cref="T:System.Exception">
          <span data-ttu-id="83137-263">
            <paramref name="component" /> は、[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] ファイルのルート要素に一致しない型です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-263">
              <paramref name="component" /> is of a type that does not match the root element of the [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] file.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Application.GetResourceStream(System.Uri)" />
        <altmember cref="M:System.Windows.Application.GetContentStream(System.Uri)" />
        <altmember cref="M:System.Windows.Application.GetRemoteStream(System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="MainWindow">
      <MemberSignature Language="C#" Value="public System.Windows.Window MainWindow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Window MainWindow" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Application.MainWindow" />
      <MemberSignature Language="VB.NET" Value="Public Property MainWindow As Window" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Window ^ MainWindow { System::Windows::Window ^ get(); void set(System::Windows::Window ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Window</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="83137-264">アプリケーションのメイン ウィンドウを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-264">Gets or sets the main window of the application.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="83137-265">メイン アプリケーション ウィンドウとして指定される <see cref="T:System.Windows.Window" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-265">A <see cref="T:System.Windows.Window" /> that is designated as the main application window.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83137-266"><xref:System.Windows.Application.MainWindow%2A> 最初への参照で自動的に設定されている<xref:System.Windows.Window>でインスタンス化するオブジェクト、<xref:System.AppDomain>です。</span><span class="sxs-lookup"><span data-stu-id="83137-266"><xref:System.Windows.Application.MainWindow%2A> is automatically set with a reference to the first <xref:System.Windows.Window> object to be instantiated in the <xref:System.AppDomain>.</span></span>  
  
 <span data-ttu-id="83137-267">設定して、別のメイン ウィンドウを指定できます<xref:System.Windows.Application.MainWindow%2A>別の割り当て<xref:System.Windows.Application.Windows%2A>オブジェクトを<xref:System.Windows.Application.MainWindow%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="83137-267">You can specify a different main window by setting <xref:System.Windows.Application.MainWindow%2A> assigning another <xref:System.Windows.Application.Windows%2A> object to the <xref:System.Windows.Application.MainWindow%2A> property.</span></span>  
  
 <span data-ttu-id="83137-268">場合、<xref:System.Windows.Application.ShutdownMode%2A>のプロパティ、<xref:System.Windows.Application>にオブジェクトが設定されている<xref:System.Windows.ShutdownMode.OnMainWindowClose>、メイン ウィンドウを閉じると、アプリケーションをシャット ダウンします。</span><span class="sxs-lookup"><span data-stu-id="83137-268">If the <xref:System.Windows.Application.ShutdownMode%2A> property of the <xref:System.Windows.Application> object is set to <xref:System.Windows.ShutdownMode.OnMainWindowClose>, closing the main window causes the application to shut down.</span></span>  
  
 <span data-ttu-id="83137-269">設定することは、<xref:System.Windows.Application.MainWindow%2A>プロパティから[!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)]、アプリケーションのメイン ウィンドウは、設定によって生成されるウィンドウではない場合、<xref:System.Windows.Application.StartupUri%2A>プロパティに[!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)]です。</span><span class="sxs-lookup"><span data-stu-id="83137-269">It is possible to set the <xref:System.Windows.Application.MainWindow%2A> property from [!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)], if an application's main window is not the window that is produced by setting the <xref:System.Windows.Application.StartupUri%2A> property in [!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)].</span></span> <span data-ttu-id="83137-270">2 つの制限、[!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)]アプローチは。</span><span class="sxs-lookup"><span data-stu-id="83137-270">The two limitations of the [!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)] approach are:</span></span>  
  
-   <span data-ttu-id="83137-271">どちらかを指定することができます、 [!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)]-のみ<xref:System.Windows.Window>または[!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)]-のみ<xref:System.Windows.Navigation.NavigationWindow>メイン ウィンドウとします。</span><span class="sxs-lookup"><span data-stu-id="83137-271">You can specify either a [!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)]-only <xref:System.Windows.Window> or a [!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)]-only <xref:System.Windows.Navigation.NavigationWindow> as the main window.</span></span>  
  
-   <span data-ttu-id="83137-272">設定する必要があります、<xref:System.Windows.UIElement.Visibility%2A>ウィンドウのプロパティを指定して、それ以外の場合に表示されません。</span><span class="sxs-lookup"><span data-stu-id="83137-272">You must set the <xref:System.Windows.UIElement.Visibility%2A> property of the window you specify, otherwise it won't be shown.</span></span>  
  
 <span data-ttu-id="83137-273">最初に参照<xref:System.Windows.Window>インスタンス化されるオブジェクトが最初の項目としても追加、<xref:System.Windows.Application.Windows%2A>コレクション。</span><span class="sxs-lookup"><span data-stu-id="83137-273">The reference to the first <xref:System.Windows.Window> object to be instantiated is also added as the first item to the <xref:System.Windows.Application.Windows%2A> collection.</span></span> <span data-ttu-id="83137-274">場合<xref:System.Windows.Application.MainWindow%2A>を別の参照に設定した場合は、 <xref:System.Windows.Window>、内の項目の順序の中に、メイン ウィンドウへの参照を持つ項目の位置が変更される<xref:System.Windows.Application.Windows%2A>は変わりません。</span><span class="sxs-lookup"><span data-stu-id="83137-274">If <xref:System.Windows.Application.MainWindow%2A> is subsequently set with a reference to a different <xref:System.Windows.Window>, the position of the item with the reference to the main window will change, while the order of items in <xref:System.Windows.Application.Windows%2A> remains the same.</span></span> <span data-ttu-id="83137-275">そのため、常に使用<xref:System.Windows.Application.MainWindow%2A>の最初の項目ではなくメイン ウィンドウを参照する<xref:System.Windows.Application.Windows%2A>です。</span><span class="sxs-lookup"><span data-stu-id="83137-275">Consequently, always use <xref:System.Windows.Application.MainWindow%2A> to refer to the main window instead of the first item in <xref:System.Windows.Application.Windows%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="83137-276">メイン ウィンドウがある場合、<xref:System.Windows.Navigation.NavigationWindow>へのアクセスを必要と<xref:System.Windows.Navigation.NavigationWindow>、メンバーの値をキャストする必要が<xref:System.Windows.Application.MainWindow%2A>に<xref:System.Windows.Navigation.NavigationWindow>です。</span><span class="sxs-lookup"><span data-stu-id="83137-276">If the main window is a <xref:System.Windows.Navigation.NavigationWindow>, and you need specific access to <xref:System.Windows.Navigation.NavigationWindow> members, you will need to cast the value of <xref:System.Windows.Application.MainWindow%2A> to <xref:System.Windows.Navigation.NavigationWindow>.</span></span>  
>   
>  <span data-ttu-id="83137-277">このプロパティは、作成したスレッドからのみ使用可能な<xref:System.Windows.Application>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="83137-277">This property is available only from the thread that created the <xref:System.Windows.Application> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83137-278">次の例では、アプリケーションのメイン ウィンドウを見つける方法を示します。</span><span class="sxs-lookup"><span data-stu-id="83137-278">The following example shows how to find the main application window.</span></span>  
  
 [!code-csharp[ApplicationMainWindowSnippets#GetApplicationMainWindowCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/ApplicationMainWindowSnippets/CSharp/App.xaml.cs#getapplicationmainwindowcode)]
 [!code-vb[ApplicationMainWindowSnippets#GetApplicationMainWindowCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ApplicationMainWindowSnippets/visualbasic/application.xaml.vb#getapplicationmainwindowcode)]  
  
 <span data-ttu-id="83137-279">次の例は、設定する方法を示します<xref:System.Windows.Application.MainWindow%2A>を使用して[!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)]です。</span><span class="sxs-lookup"><span data-stu-id="83137-279">The following example shows how to set <xref:System.Windows.Application.MainWindow%2A> using [!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)].</span></span>  
  
 [!code-xaml[ApplicationMainWindowSnippets#SetApplicationMainWindowXAML](~/samples/snippets/xaml/VS_Snippets_Wpf/ApplicationMainWindowSnippets/XAML/App.xaml#setapplicationmainwindowxaml)]  
  
 <span data-ttu-id="83137-280">次の例を示しています、<xref:System.Windows.Application.MainWindow%2A>のアプリケーションの起動中にコードにします。</span><span class="sxs-lookup"><span data-stu-id="83137-280">The following example shows how to instantiate the <xref:System.Windows.Application.MainWindow%2A> in code during application startup.</span></span>  
  
 [!code-csharp[HOWTOWindowManagementSnippets#FirstWindowUsingCodeCODEBEHIND](~/samples/snippets/csharp/VS_Snippets_Wpf/HOWTOWindowManagementSnippets/CSharp/App.xaml.cs#firstwindowusingcodecodebehind)]
 [!code-vb[HOWTOWindowManagementSnippets#FirstWindowUsingCodeCODEBEHIND](~/samples/snippets/visualbasic/VS_Snippets_Wpf/HOWTOWindowManagementSnippets/visualbasic/application.xaml.vb#firstwindowusingcodecodebehind)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="83137-281">
            <see cref="P:System.Windows.Application.MainWindow" /> は、ブラウザーでホストされるアプリケーション ([!INCLUDE[TLA#tla_xbap#plural](~/includes/tlasharptla-xbapsharpplural-md.md)] など) から設定されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-281">
              <see cref="P:System.Windows.Application.MainWindow" /> is set from an application that's hosted in a browser, such as an [!INCLUDE[TLA#tla_xbap#plural](~/includes/tlasharptla-xbapsharpplural-md.md)].</span>
          </span>
        </exception>
        <altmember cref="E:System.Windows.Application.Exit" />
      </Docs>
    </Member>
    <Member MemberName="Navigated">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.NavigatedEventHandler Navigated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.NavigatedEventHandler Navigated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Application.Navigated" />
      <MemberSignature Language="VB.NET" Value="Public Event Navigated As NavigatedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::NavigatedEventHandler ^ Navigated;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigatedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="83137-282">アプリケーションのナビゲーターによる移動先のコンテンツが見つかったときに発生します。ただし、読み込みはまだ完了していない可能性があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-282">Occurs when the content that is being navigated to by a navigator in the application has been found, although it may not have completed loading.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83137-283">ナビゲーターは、<xref:System.Windows.Navigation.NavigationWindow>または<xref:System.Windows.Controls.Frame>です。</span><span class="sxs-lookup"><span data-stu-id="83137-283">A navigator is either a <xref:System.Windows.Navigation.NavigationWindow> or a <xref:System.Windows.Controls.Frame>.</span></span>  
  
 <span data-ttu-id="83137-284">「<xref:System.Windows.Navigation.NavigationService.NavigationFailed?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="83137-284">See <xref:System.Windows.Navigation.NavigationService.NavigationFailed?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Application.Navigating" />
        <altmember cref="E:System.Windows.Application.LoadCompleted" />
        <altmember cref="E:System.Windows.Application.NavigationProgress" />
        <altmember cref="E:System.Windows.Application.NavigationStopped" />
        <altmember cref="E:System.Windows.Application.NavigationFailed" />
        <altmember cref="E:System.Windows.Application.FragmentNavigation" />
      </Docs>
    </Member>
    <Member MemberName="Navigating">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.NavigatingCancelEventHandler Navigating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.NavigatingCancelEventHandler Navigating" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Application.Navigating" />
      <MemberSignature Language="VB.NET" Value="Public Event Navigating As NavigatingCancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::NavigatingCancelEventHandler ^ Navigating;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigatingCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="83137-285">アプリケーションのナビゲーターによって新しいナビゲーションが要求されたときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-285">Occurs when a new navigation is requested by a navigator in the application.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83137-286">ナビゲーターは、<xref:System.Windows.Navigation.NavigationWindow>または<xref:System.Windows.Controls.Frame>です。</span><span class="sxs-lookup"><span data-stu-id="83137-286">A navigator is either a <xref:System.Windows.Navigation.NavigationWindow> or a <xref:System.Windows.Controls.Frame>.</span></span>  
  
 <span data-ttu-id="83137-287">「<xref:System.Windows.Navigation.NavigationService.Navigating?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="83137-287">See <xref:System.Windows.Navigation.NavigationService.Navigating?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Application.Navigated" />
        <altmember cref="E:System.Windows.Application.LoadCompleted" />
        <altmember cref="E:System.Windows.Application.NavigationProgress" />
        <altmember cref="E:System.Windows.Application.NavigationStopped" />
        <altmember cref="E:System.Windows.Application.NavigationFailed" />
        <altmember cref="E:System.Windows.Application.FragmentNavigation" />
      </Docs>
    </Member>
    <Member MemberName="NavigationFailed">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.NavigationFailedEventHandler NavigationFailed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.NavigationFailedEventHandler NavigationFailed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Application.NavigationFailed" />
      <MemberSignature Language="VB.NET" Value="Public Event NavigationFailed As NavigationFailedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::NavigationFailedEventHandler ^ NavigationFailed;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigationFailedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="83137-288">アプリケーションのナビゲーターが要求されたコンテンツに移動する際にエラーが発生したときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-288">Occurs when an error occurs while a navigator in the application is navigating to the requested content.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83137-289">ナビゲーターは、<xref:System.Windows.Navigation.NavigationWindow>または<xref:System.Windows.Controls.Frame>です。</span><span class="sxs-lookup"><span data-stu-id="83137-289">A navigator is either a <xref:System.Windows.Navigation.NavigationWindow> or a <xref:System.Windows.Controls.Frame>.</span></span>  
  
 <span data-ttu-id="83137-290">「<xref:System.Windows.Navigation.NavigationService.NavigationFailed?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="83137-290">See <xref:System.Windows.Navigation.NavigationService.NavigationFailed?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Application.Navigated" />
        <altmember cref="E:System.Windows.Application.Navigating" />
        <altmember cref="E:System.Windows.Application.LoadCompleted" />
        <altmember cref="E:System.Windows.Application.NavigationProgress" />
        <altmember cref="E:System.Windows.Application.NavigationStopped" />
        <altmember cref="E:System.Windows.Application.FragmentNavigation" />
      </Docs>
    </Member>
    <Member MemberName="NavigationProgress">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.NavigationProgressEventHandler NavigationProgress;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.NavigationProgressEventHandler NavigationProgress" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Application.NavigationProgress" />
      <MemberSignature Language="VB.NET" Value="Public Event NavigationProgress As NavigationProgressEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::NavigationProgressEventHandler ^ NavigationProgress;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigationProgressEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="83137-291">アプリケーションのナビゲーターによって管理されているダウンロード中に定期的に発生して、ナビゲーションの進行状況に関する情報を提供します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-291">Occurs periodically during a download that is being managed by a navigator in the application to provide navigation progress information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83137-292">ナビゲーターは、<xref:System.Windows.Navigation.NavigationWindow>または<xref:System.Windows.Controls.Frame>です。</span><span class="sxs-lookup"><span data-stu-id="83137-292">A navigator is either a <xref:System.Windows.Navigation.NavigationWindow> or a <xref:System.Windows.Controls.Frame>.</span></span>  
  
 <span data-ttu-id="83137-293">「<xref:System.Windows.Navigation.NavigationService.NavigationProgress?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="83137-293">See <xref:System.Windows.Navigation.NavigationService.NavigationProgress?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Application.Navigating" />
        <altmember cref="E:System.Windows.Application.Navigated" />
        <altmember cref="E:System.Windows.Application.LoadCompleted" />
        <altmember cref="E:System.Windows.Application.NavigationStopped" />
        <altmember cref="E:System.Windows.Application.NavigationFailed" />
        <altmember cref="E:System.Windows.Application.FragmentNavigation" />
      </Docs>
    </Member>
    <Member MemberName="NavigationStopped">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.NavigationStoppedEventHandler NavigationStopped;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.NavigationStoppedEventHandler NavigationStopped" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Application.NavigationStopped" />
      <MemberSignature Language="VB.NET" Value="Public Event NavigationStopped As NavigationStoppedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::NavigationStoppedEventHandler ^ NavigationStopped;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigationStoppedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="83137-294">アプリケーションのナビゲーターの <see langword="StopLoading" /> メソッドが呼び出されたとき、または現在のナビゲーションの進行中にナビゲーターによって新しいナビゲーションが要求されたときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-294">Occurs when the <see langword="StopLoading" /> method of a navigator in the application is called, or when a new navigation is requested by a navigator while a current navigation is in progress.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83137-295">ナビゲーターは、<xref:System.Windows.Navigation.NavigationWindow>または<xref:System.Windows.Controls.Frame>です。</span><span class="sxs-lookup"><span data-stu-id="83137-295">A navigator is either a <xref:System.Windows.Navigation.NavigationWindow> or a <xref:System.Windows.Controls.Frame>.</span></span>  
  
 <span data-ttu-id="83137-296">「<xref:System.Windows.Navigation.NavigationService.NavigationStopped?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="83137-296">See <xref:System.Windows.Navigation.NavigationService.NavigationStopped?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Application.Navigated" />
        <altmember cref="E:System.Windows.Application.Navigating" />
        <altmember cref="E:System.Windows.Application.LoadCompleted" />
        <altmember cref="E:System.Windows.Application.NavigationProgress" />
        <altmember cref="E:System.Windows.Application.NavigationFailed" />
        <altmember cref="E:System.Windows.Application.FragmentNavigation" />
      </Docs>
    </Member>
    <Member MemberName="OnActivated">
      <MemberSignature Language="C#" Value="protected virtual void OnActivated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnActivated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Application.OnActivated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnActivated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnActivated(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="83137-297">イベント データを格納している <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-297">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83137-298">
            <see cref="E:System.Windows.Application.Activated" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-298">Raises the <see cref="E:System.Windows.Application.Activated" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83137-299"><xref:System.Windows.Application.OnActivated%2A> は、<xref:System.Windows.Application.Activated> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="83137-299"><xref:System.Windows.Application.OnActivated%2A> raises the <xref:System.Windows.Application.Activated> event.</span></span>  
  
 <span data-ttu-id="83137-300">派生する型<xref:System.Windows.Application>よりも優先<xref:System.Windows.Application.OnActivated%2A>です。</span><span class="sxs-lookup"><span data-stu-id="83137-300">A type that derives from <xref:System.Windows.Application> may override <xref:System.Windows.Application.OnActivated%2A>.</span></span> <span data-ttu-id="83137-301">オーバーライドされたメソッドを呼び出す必要があります<xref:System.Windows.Application.OnActivated%2A>基本クラスの場合は<xref:System.Windows.Application.Activated>を発生させる必要があります。</span><span class="sxs-lookup"><span data-stu-id="83137-301">The overridden method must call <xref:System.Windows.Application.OnActivated%2A> in the base class if <xref:System.Windows.Application.Activated> needs to be raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Application.OnDeactivated(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnDeactivated">
      <MemberSignature Language="C#" Value="protected virtual void OnDeactivated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDeactivated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Application.OnDeactivated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDeactivated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDeactivated(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="83137-302">イベント データを格納している <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-302">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83137-303">
            <see cref="E:System.Windows.Application.Deactivated" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-303">Raises the <see cref="E:System.Windows.Application.Deactivated" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83137-304"><xref:System.Windows.Application.OnDeactivated%2A> は、<xref:System.Windows.Application.Deactivated> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="83137-304"><xref:System.Windows.Application.OnDeactivated%2A> raises the <xref:System.Windows.Application.Deactivated> event.</span></span>  
  
 <span data-ttu-id="83137-305">派生する型<xref:System.Windows.Application>よりも優先<xref:System.Windows.Application.OnDeactivated%2A>です。</span><span class="sxs-lookup"><span data-stu-id="83137-305">A type that derives from <xref:System.Windows.Application> may override <xref:System.Windows.Application.OnDeactivated%2A>.</span></span> <span data-ttu-id="83137-306">オーバーライドされたメソッドを呼び出す必要があります<xref:System.Windows.Application.OnDeactivated%2A>基本クラスの場合は<xref:System.Windows.Application.Deactivated>を発生させる必要があります。</span><span class="sxs-lookup"><span data-stu-id="83137-306">The overridden method must call <xref:System.Windows.Application.OnDeactivated%2A> in the base class if <xref:System.Windows.Application.Deactivated> needs to be raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Application.OnActivated(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnExit">
      <MemberSignature Language="C#" Value="protected virtual void OnExit (System.Windows.ExitEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnExit(class System.Windows.ExitEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Application.OnExit(System.Windows.ExitEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnExit (e As ExitEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnExit(System::Windows::ExitEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.ExitEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="83137-307">イベント データを格納している <see cref="T:System.Windows.ExitEventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-307">An <see cref="T:System.Windows.ExitEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83137-308">
            <see cref="E:System.Windows.Application.Exit" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-308">Raises the <see cref="E:System.Windows.Application.Exit" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83137-309"><xref:System.Windows.Application.OnExit%2A> は、<xref:System.Windows.Application.Exit> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="83137-309"><xref:System.Windows.Application.OnExit%2A> raises the <xref:System.Windows.Application.Exit> event.</span></span>  
  
 <span data-ttu-id="83137-310">派生する型<xref:System.Windows.Application>よりも優先、<xref:System.Windows.Application.OnExit%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="83137-310">A type that derives from <xref:System.Windows.Application> may override the <xref:System.Windows.Application.OnExit%2A> method.</span></span> <span data-ttu-id="83137-311">オーバーライドされたメソッドを呼び出す必要があります<xref:System.Windows.Application.OnExit%2A>基本クラスの場合は<xref:System.Windows.Application.Exit>を発生させる必要があります。</span><span class="sxs-lookup"><span data-stu-id="83137-311">The overridden method must call <xref:System.Windows.Application.OnExit%2A> in the base class if <xref:System.Windows.Application.Exit> needs to be raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Application.OnStartup(System.Windows.StartupEventArgs)" />
        <altmember cref="M:System.Windows.Application.OnSessionEnding(System.Windows.SessionEndingCancelEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnFragmentNavigation">
      <MemberSignature Language="C#" Value="protected virtual void OnFragmentNavigation (System.Windows.Navigation.FragmentNavigationEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFragmentNavigation(class System.Windows.Navigation.FragmentNavigationEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Application.OnFragmentNavigation(System.Windows.Navigation.FragmentNavigationEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnFragmentNavigation (e As FragmentNavigationEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFragmentNavigation(System::Windows::Navigation::FragmentNavigationEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Navigation.FragmentNavigationEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="83137-312">イベント データを格納している <see cref="T:System.Windows.Navigation.FragmentNavigationEventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-312">A <see cref="T:System.Windows.Navigation.FragmentNavigationEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83137-313">
            <see cref="E:System.Windows.Application.FragmentNavigation" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-313">Raises the <see cref="E:System.Windows.Application.FragmentNavigation" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83137-314"><xref:System.Windows.Application.OnFragmentNavigation%2A> は、<xref:System.Windows.Application.FragmentNavigation> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="83137-314"><xref:System.Windows.Application.OnFragmentNavigation%2A> raises the <xref:System.Windows.Application.FragmentNavigation> event.</span></span>  
  
 <span data-ttu-id="83137-315">派生する型<xref:System.Windows.Application>よりも優先<xref:System.Windows.Application.OnFragmentNavigation%2A>です。</span><span class="sxs-lookup"><span data-stu-id="83137-315">A type that derives from <xref:System.Windows.Application> may override <xref:System.Windows.Application.OnFragmentNavigation%2A>.</span></span> <span data-ttu-id="83137-316">オーバーライドされたメソッドを呼び出す必要があります<xref:System.Windows.Application.OnFragmentNavigation%2A>基本クラスの場合は<xref:System.Windows.Application.FragmentNavigation>を発生させる必要があります。</span><span class="sxs-lookup"><span data-stu-id="83137-316">The overridden method must call <xref:System.Windows.Application.OnFragmentNavigation%2A> in the base class if <xref:System.Windows.Application.FragmentNavigation> needs to be raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Application.OnNavigationFailed(System.Windows.Navigation.NavigationFailedEventArgs)" />
        <altmember cref="M:System.Windows.Application.OnLoadCompleted(System.Windows.Navigation.NavigationEventArgs)" />
        <altmember cref="M:System.Windows.Application.OnNavigated(System.Windows.Navigation.NavigationEventArgs)" />
        <altmember cref="M:System.Windows.Application.OnNavigating(System.Windows.Navigation.NavigatingCancelEventArgs)" />
        <altmember cref="M:System.Windows.Application.OnNavigationProgress(System.Windows.Navigation.NavigationProgressEventArgs)" />
        <altmember cref="M:System.Windows.Application.OnNavigationStopped(System.Windows.Navigation.NavigationEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnLoadCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnLoadCompleted (System.Windows.Navigation.NavigationEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLoadCompleted(class System.Windows.Navigation.NavigationEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Application.OnLoadCompleted(System.Windows.Navigation.NavigationEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLoadCompleted (e As NavigationEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLoadCompleted(System::Windows::Navigation::NavigationEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Navigation.NavigationEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="83137-317">イベント データを格納している <see cref="T:System.Windows.Navigation.NavigationEventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-317">A <see cref="T:System.Windows.Navigation.NavigationEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83137-318">
            <see cref="E:System.Windows.Application.LoadCompleted" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-318">Raises the <see cref="E:System.Windows.Application.LoadCompleted" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83137-319"><xref:System.Windows.Application.OnLoadCompleted%2A> は、<xref:System.Windows.Application.LoadCompleted> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="83137-319"><xref:System.Windows.Application.OnLoadCompleted%2A> raises the <xref:System.Windows.Application.LoadCompleted> event.</span></span>  
  
 <span data-ttu-id="83137-320">派生する型<xref:System.Windows.Application>よりも優先<xref:System.Windows.Application.OnLoadCompleted%2A>です。</span><span class="sxs-lookup"><span data-stu-id="83137-320">A type that derives from <xref:System.Windows.Application> may override <xref:System.Windows.Application.OnLoadCompleted%2A>.</span></span> <span data-ttu-id="83137-321">オーバーライドされたメソッドを呼び出す必要があります<xref:System.Windows.Application.OnLoadCompleted%2A>基本クラスの場合は<xref:System.Windows.Application.LoadCompleted>を発生させる必要があります。</span><span class="sxs-lookup"><span data-stu-id="83137-321">The overridden method must call <xref:System.Windows.Application.OnLoadCompleted%2A> in the base class if <xref:System.Windows.Application.LoadCompleted> needs to be raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Application.OnNavigationFailed(System.Windows.Navigation.NavigationFailedEventArgs)" />
        <altmember cref="M:System.Windows.Application.OnFragmentNavigation(System.Windows.Navigation.FragmentNavigationEventArgs)" />
        <altmember cref="M:System.Windows.Application.OnNavigated(System.Windows.Navigation.NavigationEventArgs)" />
        <altmember cref="M:System.Windows.Application.OnNavigating(System.Windows.Navigation.NavigatingCancelEventArgs)" />
        <altmember cref="M:System.Windows.Application.OnNavigationProgress(System.Windows.Navigation.NavigationProgressEventArgs)" />
        <altmember cref="M:System.Windows.Application.OnNavigationStopped(System.Windows.Navigation.NavigationEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnNavigated">
      <MemberSignature Language="C#" Value="protected virtual void OnNavigated (System.Windows.Navigation.NavigationEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnNavigated(class System.Windows.Navigation.NavigationEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Application.OnNavigated(System.Windows.Navigation.NavigationEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnNavigated (e As NavigationEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnNavigated(System::Windows::Navigation::NavigationEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Navigation.NavigationEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="83137-322">イベント データを格納している <see cref="T:System.Windows.Navigation.NavigationEventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-322">A <see cref="T:System.Windows.Navigation.NavigationEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83137-323">
            <see cref="E:System.Windows.Application.Navigated" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-323">Raises the <see cref="E:System.Windows.Application.Navigated" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83137-324"><xref:System.Windows.Application.OnNavigated%2A> は、<xref:System.Windows.Application.Navigated> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="83137-324"><xref:System.Windows.Application.OnNavigated%2A> raises the <xref:System.Windows.Application.Navigated> event.</span></span>  
  
 <span data-ttu-id="83137-325">派生する型<xref:System.Windows.Application>よりも優先<xref:System.Windows.Application.OnNavigated%2A>です。</span><span class="sxs-lookup"><span data-stu-id="83137-325">A type that derives from <xref:System.Windows.Application> may override <xref:System.Windows.Application.OnNavigated%2A>.</span></span> <span data-ttu-id="83137-326">オーバーライドされたメソッドを呼び出す必要があります<xref:System.Windows.Application.OnNavigated%2A>基本クラスの場合は<xref:System.Windows.Application.Navigated>を発生させる必要があります。</span><span class="sxs-lookup"><span data-stu-id="83137-326">The overridden method must call <xref:System.Windows.Application.OnNavigated%2A> in the base class if <xref:System.Windows.Application.Navigated> needs to be raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Application.OnNavigationFailed(System.Windows.Navigation.NavigationFailedEventArgs)" />
        <altmember cref="M:System.Windows.Application.OnFragmentNavigation(System.Windows.Navigation.FragmentNavigationEventArgs)" />
        <altmember cref="M:System.Windows.Application.OnLoadCompleted(System.Windows.Navigation.NavigationEventArgs)" />
        <altmember cref="M:System.Windows.Application.OnNavigating(System.Windows.Navigation.NavigatingCancelEventArgs)" />
        <altmember cref="M:System.Windows.Application.OnNavigationProgress(System.Windows.Navigation.NavigationProgressEventArgs)" />
        <altmember cref="M:System.Windows.Application.OnNavigationStopped(System.Windows.Navigation.NavigationEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnNavigating">
      <MemberSignature Language="C#" Value="protected virtual void OnNavigating (System.Windows.Navigation.NavigatingCancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnNavigating(class System.Windows.Navigation.NavigatingCancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Application.OnNavigating(System.Windows.Navigation.NavigatingCancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnNavigating (e As NavigatingCancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnNavigating(System::Windows::Navigation::NavigatingCancelEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Navigation.NavigatingCancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="83137-327">イベント データを格納している <see cref="T:System.Windows.Navigation.NavigatingCancelEventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-327">A <see cref="T:System.Windows.Navigation.NavigatingCancelEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83137-328">
            <see cref="E:System.Windows.Application.Navigating" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-328">Raises the <see cref="E:System.Windows.Application.Navigating" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83137-329"><xref:System.Windows.Application.OnNavigating%2A> は、<xref:System.Windows.Application.Navigating> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="83137-329"><xref:System.Windows.Application.OnNavigating%2A> raises the <xref:System.Windows.Application.Navigating> event.</span></span>  
  
 <span data-ttu-id="83137-330">派生する型<xref:System.Windows.Application>よりも優先<xref:System.Windows.Application.OnNavigating%2A>です。</span><span class="sxs-lookup"><span data-stu-id="83137-330">A type that derives from <xref:System.Windows.Application> may override <xref:System.Windows.Application.OnNavigating%2A>.</span></span> <span data-ttu-id="83137-331">オーバーライドされたメソッドを呼び出す必要があります<xref:System.Windows.Application.OnNavigating%2A>基本クラスの場合は<xref:System.Windows.Application.Navigating>を発生させる必要があります。</span><span class="sxs-lookup"><span data-stu-id="83137-331">The overridden method must call <xref:System.Windows.Application.OnNavigating%2A> in the base class if <xref:System.Windows.Application.Navigating> needs to be raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Application.OnNavigationFailed(System.Windows.Navigation.NavigationFailedEventArgs)" />
        <altmember cref="M:System.Windows.Application.OnFragmentNavigation(System.Windows.Navigation.FragmentNavigationEventArgs)" />
        <altmember cref="M:System.Windows.Application.OnLoadCompleted(System.Windows.Navigation.NavigationEventArgs)" />
        <altmember cref="M:System.Windows.Application.OnNavigated(System.Windows.Navigation.NavigationEventArgs)" />
        <altmember cref="M:System.Windows.Application.OnNavigationProgress(System.Windows.Navigation.NavigationProgressEventArgs)" />
        <altmember cref="M:System.Windows.Application.OnNavigationStopped(System.Windows.Navigation.NavigationEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnNavigationFailed">
      <MemberSignature Language="C#" Value="protected virtual void OnNavigationFailed (System.Windows.Navigation.NavigationFailedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnNavigationFailed(class System.Windows.Navigation.NavigationFailedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Application.OnNavigationFailed(System.Windows.Navigation.NavigationFailedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnNavigationFailed (e As NavigationFailedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnNavigationFailed(System::Windows::Navigation::NavigationFailedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Navigation.NavigationFailedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="83137-332">イベント データを格納している <see cref="T:System.Windows.Navigation.NavigationFailedEventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-332">A <see cref="T:System.Windows.Navigation.NavigationFailedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83137-333">
            <see cref="E:System.Windows.Application.NavigationFailed" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-333">Raises the <see cref="E:System.Windows.Application.NavigationFailed" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83137-334"><xref:System.Windows.Application.OnNavigationFailed%2A> は、<xref:System.Windows.Application.NavigationFailed> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="83137-334"><xref:System.Windows.Application.OnNavigationFailed%2A> raises the <xref:System.Windows.Application.NavigationFailed> event.</span></span>  
  
 <span data-ttu-id="83137-335">派生する型<xref:System.Windows.Application>よりも優先<xref:System.Windows.Application.OnNavigationFailed%2A>です。</span><span class="sxs-lookup"><span data-stu-id="83137-335">A type that derives from <xref:System.Windows.Application> may override <xref:System.Windows.Application.OnNavigationFailed%2A>.</span></span> <span data-ttu-id="83137-336">オーバーライドされたメソッドを呼び出す必要があります<xref:System.Windows.Application.OnNavigationFailed%2A>基本クラスの場合は<xref:System.Windows.Application.NavigationFailed>を発生させる必要があります。</span><span class="sxs-lookup"><span data-stu-id="83137-336">The overridden method must call <xref:System.Windows.Application.OnNavigationFailed%2A> in the base class if <xref:System.Windows.Application.NavigationFailed> needs to be raised.</span></span>  
  
   
  
## Examples  
 <xref:System.Windows.Application.OnFragmentNavigation%2A>  
  
 <xref:System.Windows.Application.OnLoadCompleted%2A>  
  
 <xref:System.Windows.Application.OnNavigating%2A>  
  
 <xref:System.Windows.Application.OnNavigated%2A>  
  
 <xref:System.Windows.Application.OnNavigationProgress%2A>  
  
 <xref:System.Windows.Application.OnNavigationStopped%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnNavigationProgress">
      <MemberSignature Language="C#" Value="protected virtual void OnNavigationProgress (System.Windows.Navigation.NavigationProgressEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnNavigationProgress(class System.Windows.Navigation.NavigationProgressEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Application.OnNavigationProgress(System.Windows.Navigation.NavigationProgressEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnNavigationProgress (e As NavigationProgressEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnNavigationProgress(System::Windows::Navigation::NavigationProgressEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Navigation.NavigationProgressEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="83137-337">イベント データを格納している <see cref="T:System.Windows.Navigation.NavigationProgressEventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-337">A <see cref="T:System.Windows.Navigation.NavigationProgressEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83137-338">
            <see cref="E:System.Windows.Application.NavigationProgress" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-338">Raises the <see cref="E:System.Windows.Application.NavigationProgress" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83137-339"><xref:System.Windows.Application.OnNavigationProgress%2A> は、<xref:System.Windows.Application.NavigationProgress> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="83137-339"><xref:System.Windows.Application.OnNavigationProgress%2A> raises the <xref:System.Windows.Application.NavigationProgress> event.</span></span>  
  
 <span data-ttu-id="83137-340">派生する型<xref:System.Windows.Application>よりも優先<xref:System.Windows.Application.OnNavigationProgress%2A>です。</span><span class="sxs-lookup"><span data-stu-id="83137-340">A type that derives from <xref:System.Windows.Application> may override <xref:System.Windows.Application.OnNavigationProgress%2A>.</span></span> <span data-ttu-id="83137-341">オーバーライドされたメソッドを明示的に呼び出す必要があります<xref:System.Windows.Application.OnNavigationProgress%2A>基本クラスの場合は<xref:System.Windows.Application.NavigationProgress>を発生させる必要があります。</span><span class="sxs-lookup"><span data-stu-id="83137-341">The overridden method must explicitly call <xref:System.Windows.Application.OnNavigationProgress%2A> in the base class if <xref:System.Windows.Application.NavigationProgress> needs to be raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Application.OnNavigationFailed(System.Windows.Navigation.NavigationFailedEventArgs)" />
        <altmember cref="M:System.Windows.Application.OnFragmentNavigation(System.Windows.Navigation.FragmentNavigationEventArgs)" />
        <altmember cref="M:System.Windows.Application.OnLoadCompleted(System.Windows.Navigation.NavigationEventArgs)" />
        <altmember cref="M:System.Windows.Application.OnNavigated(System.Windows.Navigation.NavigationEventArgs)" />
        <altmember cref="M:System.Windows.Application.OnNavigating(System.Windows.Navigation.NavigatingCancelEventArgs)" />
        <altmember cref="M:System.Windows.Application.OnNavigationStopped(System.Windows.Navigation.NavigationEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnNavigationStopped">
      <MemberSignature Language="C#" Value="protected virtual void OnNavigationStopped (System.Windows.Navigation.NavigationEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnNavigationStopped(class System.Windows.Navigation.NavigationEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Application.OnNavigationStopped(System.Windows.Navigation.NavigationEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnNavigationStopped (e As NavigationEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnNavigationStopped(System::Windows::Navigation::NavigationEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Navigation.NavigationEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="83137-342">イベント データを格納している <see cref="T:System.Windows.Navigation.NavigationEventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-342">A <see cref="T:System.Windows.Navigation.NavigationEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83137-343">
            <see cref="E:System.Windows.Application.NavigationStopped" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-343">Raises the <see cref="E:System.Windows.Application.NavigationStopped" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83137-344"><xref:System.Windows.Application.OnNavigationStopped%2A> は、<xref:System.Windows.Application.NavigationStopped> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="83137-344"><xref:System.Windows.Application.OnNavigationStopped%2A> raises the <xref:System.Windows.Application.NavigationStopped> event.</span></span>  
  
 <span data-ttu-id="83137-345">派生する型<xref:System.Windows.Application>よりも優先<xref:System.Windows.Application.OnNavigationStopped%2A>です。</span><span class="sxs-lookup"><span data-stu-id="83137-345">A type that derives from <xref:System.Windows.Application> may override <xref:System.Windows.Application.OnNavigationStopped%2A>.</span></span> <span data-ttu-id="83137-346">オーバーライドされたメソッドを呼び出す必要があります<xref:System.Windows.Application.OnNavigationStopped%2A>基本クラスの場合は<xref:System.Windows.Application.NavigationStopped>を発生させる必要があります。</span><span class="sxs-lookup"><span data-stu-id="83137-346">The overridden method must call <xref:System.Windows.Application.OnNavigationStopped%2A> in the base class if <xref:System.Windows.Application.NavigationStopped> needs to be raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Application.OnFragmentNavigation(System.Windows.Navigation.FragmentNavigationEventArgs)" />
        <altmember cref="M:System.Windows.Application.OnLoadCompleted(System.Windows.Navigation.NavigationEventArgs)" />
        <altmember cref="M:System.Windows.Application.OnNavigated(System.Windows.Navigation.NavigationEventArgs)" />
        <altmember cref="M:System.Windows.Application.OnNavigating(System.Windows.Navigation.NavigatingCancelEventArgs)" />
        <altmember cref="M:System.Windows.Application.OnNavigationProgress(System.Windows.Navigation.NavigationProgressEventArgs)" />
        <altmember cref="M:System.Windows.Application.OnNavigationFailed(System.Windows.Navigation.NavigationFailedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSessionEnding">
      <MemberSignature Language="C#" Value="protected virtual void OnSessionEnding (System.Windows.SessionEndingCancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSessionEnding(class System.Windows.SessionEndingCancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Application.OnSessionEnding(System.Windows.SessionEndingCancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSessionEnding (e As SessionEndingCancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSessionEnding(System::Windows::SessionEndingCancelEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.SessionEndingCancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="83137-347">イベント データを格納している <see cref="T:System.Windows.SessionEndingCancelEventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-347">A <see cref="T:System.Windows.SessionEndingCancelEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83137-348">
            <see cref="E:System.Windows.Application.SessionEnding" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-348">Raises the <see cref="E:System.Windows.Application.SessionEnding" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83137-349"><xref:System.Windows.Application.OnSessionEnding%2A> は、<xref:System.Windows.Application.SessionEnding> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="83137-349"><xref:System.Windows.Application.OnSessionEnding%2A> raises the <xref:System.Windows.Application.SessionEnding> event.</span></span>  
  
 <span data-ttu-id="83137-350">派生する型<xref:System.Windows.Application>よりも優先<xref:System.Windows.Application.OnSessionEnding%2A>です。</span><span class="sxs-lookup"><span data-stu-id="83137-350">A type that derives from <xref:System.Windows.Application> may override <xref:System.Windows.Application.OnSessionEnding%2A>.</span></span> <span data-ttu-id="83137-351">オーバーライドされたメソッドを呼び出す必要があります<xref:System.Windows.Application.OnSessionEnding%2A>基本クラスの場合は<xref:System.Windows.Application.SessionEnding>を発生させる必要があります。</span><span class="sxs-lookup"><span data-stu-id="83137-351">The overridden method must call <xref:System.Windows.Application.OnSessionEnding%2A> in the base class if <xref:System.Windows.Application.SessionEnding> needs to be raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Application.OnStartup(System.Windows.StartupEventArgs)" />
        <altmember cref="M:System.Windows.Application.OnExit(System.Windows.ExitEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnStartup">
      <MemberSignature Language="C#" Value="protected virtual void OnStartup (System.Windows.StartupEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStartup(class System.Windows.StartupEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Application.OnStartup(System.Windows.StartupEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStartup (e As StartupEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStartup(System::Windows::StartupEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.StartupEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="83137-352">イベント データを格納している <see cref="T:System.Windows.StartupEventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-352">A <see cref="T:System.Windows.StartupEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83137-353">
            <see cref="E:System.Windows.Application.Startup" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-353">Raises the <see cref="E:System.Windows.Application.Startup" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83137-354"><xref:System.Windows.Application.OnStartup%2A> は、<xref:System.Windows.Application.Startup> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="83137-354"><xref:System.Windows.Application.OnStartup%2A> raises the <xref:System.Windows.Application.Startup> event.</span></span>  
  
 <span data-ttu-id="83137-355">派生する型<xref:System.Windows.Application>よりも優先<xref:System.Windows.Application.OnStartup%2A>です。</span><span class="sxs-lookup"><span data-stu-id="83137-355">A type that derives from <xref:System.Windows.Application> may override <xref:System.Windows.Application.OnStartup%2A>.</span></span> <span data-ttu-id="83137-356">オーバーライドされたメソッドを呼び出す必要があります<xref:System.Windows.Application.OnStartup%2A>基本クラスの場合、<xref:System.Windows.Application.Startup>イベントを発生させる必要があります。</span><span class="sxs-lookup"><span data-stu-id="83137-356">The overridden method must call <xref:System.Windows.Application.OnStartup%2A> in the base class if the <xref:System.Windows.Application.Startup> event needs to be raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Application.OnSessionEnding(System.Windows.SessionEndingCancelEventArgs)" />
        <altmember cref="M:System.Windows.Application.OnExit(System.Windows.ExitEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionary Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IDictionary Properties" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Application.Properties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Properties As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IDictionary ^ Properties { System::Collections::IDictionary ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="83137-357">アプリケーション スコープのプロパティのコレクションを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-357">Gets a collection of application-scope properties.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="83137-358">アプリケーション スコープのプロパティを格納している <see cref="T:System.Collections.IDictionary" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-358">An <see cref="T:System.Collections.IDictionary" /> that contains the application-scope properties.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83137-359"><xref:System.Windows.Application> 使用してディクショナリを公開する<xref:System.Windows.Application.Properties%2A>アプリケーション スコープのプロパティの保存に使用できます。</span><span class="sxs-lookup"><span data-stu-id="83137-359"><xref:System.Windows.Application> exposes a dictionary via <xref:System.Windows.Application.Properties%2A> which you can use to store application-scope properties.</span></span> <span data-ttu-id="83137-360">これによりのすべてのコードの間で状態を共有する、<xref:System.AppDomain>スレッド セーフである的に、状態コードを記述する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="83137-360">This allows you to share state amongst all code in an <xref:System.AppDomain> in a thread-safe fashion, without the need to write your own state code.</span></span>  
  
 <span data-ttu-id="83137-361">格納されているプロパティ<xref:System.Windows.Application.Properties%2A>返される適切な型に変換する必要があります。</span><span class="sxs-lookup"><span data-stu-id="83137-361">Properties stored in <xref:System.Windows.Application.Properties%2A> must be converted to the appropriate type returned.</span></span>  
  
 <span data-ttu-id="83137-362"><xref:System.Windows.Application.Properties%2A>プロパティは、スレッド セーフであるとはどのスレッドから使用できます。</span><span class="sxs-lookup"><span data-stu-id="83137-362">The <xref:System.Windows.Application.Properties%2A> property is thread safe and is available from any thread.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83137-363">作成およびアプリケーション スコープのプロパティを使用して、使用する方法の例を次に<xref:System.Windows.Application.Properties%2A>です。</span><span class="sxs-lookup"><span data-stu-id="83137-363">The following example shows how create and use an application-scope property using <xref:System.Windows.Application.Properties%2A>.</span></span>  
  
 [!code-xaml[ApplicationPropertiesSnippets#HandleStartupXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/ApplicationPropertiesSnippets/CSharp/App.xaml#handlestartupxaml)]  
  
 [!code-csharp[ApplicationPropertiesSnippets#HandleStartupCODEBEHIND](~/samples/snippets/csharp/VS_Snippets_Wpf/ApplicationPropertiesSnippets/CSharp/App.xaml.cs#handlestartupcodebehind)]
 [!code-vb[ApplicationPropertiesSnippets#HandleStartupCODEBEHIND](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ApplicationPropertiesSnippets/visualbasic/application.xaml.vb#handlestartupcodebehind)]  
  
 [!code-xaml[ApplicationPropertiesSnippets#MainWindowGetPropertyXAML1](~/samples/snippets/csharp/VS_Snippets_Wpf/ApplicationPropertiesSnippets/CSharp/MainWindow.xaml#mainwindowgetpropertyxaml1)]  
[!code-xaml[ApplicationPropertiesSnippets#MainWindowGetPropertyXAML2](~/samples/snippets/csharp/VS_Snippets_Wpf/ApplicationPropertiesSnippets/CSharp/MainWindow.xaml#mainwindowgetpropertyxaml2)]  
  
 [!code-csharp[ApplicationPropertiesSnippets#MainWindowGetPropertyCODEBEHIND](~/samples/snippets/csharp/VS_Snippets_Wpf/ApplicationPropertiesSnippets/CSharp/MainWindow.xaml.cs#mainwindowgetpropertycodebehind)]
 [!code-vb[ApplicationPropertiesSnippets#MainWindowGetPropertyCODEBEHIND](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ApplicationPropertiesSnippets/visualbasic/mainwindow.xaml.vb#mainwindowgetpropertycodebehind)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Application.Startup" />
      </Docs>
    </Member>
    <Member MemberName="ResourceAssembly">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly ResourceAssembly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Reflection.Assembly ResourceAssembly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Application.ResourceAssembly" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ResourceAssembly As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Reflection::Assembly ^ ResourceAssembly { System::Reflection::Assembly ^ get(); void set(System::Reflection::Assembly ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="83137-364">[!INCLUDE[TLA#tla_uri#plural](~/includes/tlasharptla-urisharpplural-md.md)] アプリケーションのリソース用のパッケージの [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] を提供する <see cref="T:System.Reflection.Assembly" /> を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-364">Gets or sets the <see cref="T:System.Reflection.Assembly" /> that provides the pack [!INCLUDE[TLA#tla_uri#plural](~/includes/tlasharptla-urisharpplural-md.md)] for resources in a [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] application.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="83137-365">[!INCLUDE[TLA#tla_uri#plural](~/includes/tlasharptla-urisharpplural-md.md)] アプリケーションのリソース用のパッケージの [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] を提供する <see cref="T:System.Reflection.Assembly" /> への参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-365">A reference to the <see cref="T:System.Reflection.Assembly" /> that provides the pack [!INCLUDE[TLA#tla_uri#plural](~/includes/tlasharptla-urisharpplural-md.md)] for resources in a [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] application.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83137-366">既定では、[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]から返される値によって識別されるエントリのアセンブリに対して実行時にリソースが解決される、<xref:System.Reflection.Assembly.GetEntryAssembly%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="83137-366">By default, [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] resources are resolved at run time with respect to the entry assembly, which is identified by the value returned from the <xref:System.Reflection.Assembly.GetEntryAssembly%2A> method.</span></span>  
  
 <span data-ttu-id="83137-367">入力アセンブリがによって返されるアセンブリ<xref:System.Reflection.Assembly.GetEntryAssembly%2A>し、次にある可能性があります。</span><span class="sxs-lookup"><span data-stu-id="83137-367">The entry assembly is the assembly that is returned by <xref:System.Reflection.Assembly.GetEntryAssembly%2A> and could be the following:</span></span>  
  
-   <span data-ttu-id="83137-368">既定のアプリケーション ドメインで実行可能アセンブリ。</span><span class="sxs-lookup"><span data-stu-id="83137-368">The executable assembly in the default application domain.</span></span>  
  
-   <span data-ttu-id="83137-369">呼び出すことによって実行される最初のアセンブリ<xref:System.AppDomain.ExecuteAssembly%2A>です。</span><span class="sxs-lookup"><span data-stu-id="83137-369">The first assembly to be executed by calling <xref:System.AppDomain.ExecuteAssembly%2A>.</span></span>  
  
 <span data-ttu-id="83137-370">次の場合、ただし、[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]アセンブリは、入力アセンブリへの参照を取得できません。</span><span class="sxs-lookup"><span data-stu-id="83137-370">In the following cases, however, a [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] assembly cannot get a reference to the entry assembly:</span></span>  
  
-   <span data-ttu-id="83137-371">アンマネージ (ネイティブ) アプリケーション ホスト、[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]アセンブリ。</span><span class="sxs-lookup"><span data-stu-id="83137-371">An unmanaged (native) application hosts the [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] assembly.</span></span>  
  
-   <span data-ttu-id="83137-372">マネージ アプリケーションのホスト、[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]以外のメソッドを使用して、新しいアプリケーション ドメインに読み込むことによってアセンブリ<xref:System.AppDomain.ExecuteAssembly%2A>です。</span><span class="sxs-lookup"><span data-stu-id="83137-372">A managed application hosts the [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] assembly by loading it into a new application domain using a method other than <xref:System.AppDomain.ExecuteAssembly%2A>.</span></span>  
  
 <span data-ttu-id="83137-373">このような場合の両方で<xref:System.Reflection.Assembly.GetEntryAssembly%2A>を返します`null`、および[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]アセンブリのリソースを解決することはできません。</span><span class="sxs-lookup"><span data-stu-id="83137-373">In both of these cases, <xref:System.Reflection.Assembly.GetEntryAssembly%2A> returns `null`, and the [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] assembly's resources cannot be resolved.</span></span> <span data-ttu-id="83137-374">このような場合は、 <xref:System.Windows.Application.ResourceAssembly%2A> 1 度だけ、リソースの解決に使用するアセンブリへの参照で設定できます。</span><span class="sxs-lookup"><span data-stu-id="83137-374">In these cases, <xref:System.Windows.Application.ResourceAssembly%2A> can be set, once only, with a reference to the assembly that should be used to resolve resources.</span></span>  
  
 <span data-ttu-id="83137-375"><xref:System.Windows.Application.ResourceAssembly%2A> のみ設定できます 1 回の後に、リソース アセンブリが変更されること可能性は高くありませんので、[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]アセンブリが読み込まれています。</span><span class="sxs-lookup"><span data-stu-id="83137-375"><xref:System.Windows.Application.ResourceAssembly%2A> can only be set once because it is unlikely that the resource assembly will change after the [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] assembly is loaded.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="83137-376"><xref:System.Windows.Application.ResourceAssembly%2A> 場合を設定することはできません、[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]アセンブリは、入力アセンブリを検出できる — されているときに、<xref:System.Reflection.Assembly.GetEntryAssembly%2A>アセンブリへの参照を返しますのではなく`null`です。</span><span class="sxs-lookup"><span data-stu-id="83137-376"><xref:System.Windows.Application.ResourceAssembly%2A> cannot be set when a [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] assembly can discover the entry assembly—that is, when <xref:System.Reflection.Assembly.GetEntryAssembly%2A> returns a reference to an assembly rather than `null`.</span></span>  
  
 <span data-ttu-id="83137-377">このプロパティは、スレッド セーフであるは任意のスレッドから使用できます。</span><span class="sxs-lookup"><span data-stu-id="83137-377">This property is thread safe and is available from any thread.</span></span>  
  
 <span data-ttu-id="83137-378"><xref:System.Windows.Application.ResourceAssembly%2A> .NET Framework version 3.5 で導入されました。</span><span class="sxs-lookup"><span data-stu-id="83137-378"><xref:System.Windows.Application.ResourceAssembly%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="83137-379">詳細については、「[.NET Framework のバージョンおよび依存関係](~/docs/framework/migration-guide/versions-and-dependencies.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="83137-379">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="83137-380">[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] アプリケーションに入力アセンブリがあるか、<see cref="P:System.Windows.Application.ResourceAssembly" /> が既に設定されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-380">A [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] application has an entry assembly, or <see cref="P:System.Windows.Application.ResourceAssembly" /> has already been set.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Resources">
      <MemberSignature Language="C#" Value="public System.Windows.ResourceDictionary Resources { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.ResourceDictionary Resources" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Application.Resources" />
      <MemberSignature Language="VB.NET" Value="Public Property Resources As ResourceDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::ResourceDictionary ^ Resources { System::Windows::ResourceDictionary ^ get(); void set(System::Windows::ResourceDictionary ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Markup.IHaveResources.Resources</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.Markup.Ambient</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="83137-381">スタイルやブラシなど、アプリケーション スコープ リソースのコレクションを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-381">Gets or sets a collection of application-scope resources, such as styles and brushes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="83137-382">0 個以上のアプリケーション スコープ リソースが格納された <see cref="T:System.Windows.ResourceDictionary" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-382">A <see cref="T:System.Windows.ResourceDictionary" /> object that contains zero or more application-scope resources.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83137-383"><xref:System.Windows.Application.Resources%2A> Windows およびアプリケーションの要素の間でリソースを共有するプロパティを使用できます。</span><span class="sxs-lookup"><span data-stu-id="83137-383">The <xref:System.Windows.Application.Resources%2A> property can be used to share resources across the windows and elements of an application.</span></span> <span data-ttu-id="83137-384">さらに、<xref:System.Windows.Application.Resources%2A>は次の順序で走査リソース参照パスのプロパティが含まれています。</span><span class="sxs-lookup"><span data-stu-id="83137-384">Additionally, the <xref:System.Windows.Application.Resources%2A> property is included in the resource lookup path, which is traversed in the following order:</span></span>  
  
1.  <span data-ttu-id="83137-385">Elements</span><span class="sxs-lookup"><span data-stu-id="83137-385">Elements</span></span>  
  
2.  <span data-ttu-id="83137-386">Windows</span><span class="sxs-lookup"><span data-stu-id="83137-386">Windows</span></span>  
  
3.  <xref:System.Windows.Application.Resources%2A?displayProperty=nameWithType>  
  
4.  <span data-ttu-id="83137-387">システム</span><span class="sxs-lookup"><span data-stu-id="83137-387">System</span></span>  
  
 <span data-ttu-id="83137-388">その結果、[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]要素は、アプリケーション スコープのリソースにバインドできます。</span><span class="sxs-lookup"><span data-stu-id="83137-388">Consequently, [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] elements can bind to application-scope resources.</span></span> <span data-ttu-id="83137-389">さらに、リソースが変更された場合、リソース システムにより、その要素の変更を反映するようにそれらのリソースにバインドされているプロパティが自動的に更新します。</span><span class="sxs-lookup"><span data-stu-id="83137-389">Additionally, if resources change, the resource system ensures that element properties which are bound to those resources are automatically updated to reflect the change.</span></span>  
  
 <span data-ttu-id="83137-390">アプリケーション スコープのリソースは、アプリケーション間で一貫性のあるテーマをサポートする簡単な方法を提供します。</span><span class="sxs-lookup"><span data-stu-id="83137-390">Application-scope resources provide a simple way to support a consistent theme across your application.</span></span> <span data-ttu-id="83137-391">テーマを簡単に作成できます[!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)]を使用して、`Application.Resources`タグ。</span><span class="sxs-lookup"><span data-stu-id="83137-391">You can easily create a theme in [!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)] by using the `Application.Resources` tag.</span></span> <span data-ttu-id="83137-392">ただし、アプリケーションは、多数のテーマの要素を含むことが、複数のテーマをサポートしている場合ありますいずれかを使用してそれらを管理しやすい<xref:System.Windows.ResourceDictionary>各テーマのインスタンス。</span><span class="sxs-lookup"><span data-stu-id="83137-392">However, if your application supports multiple themes, which may contain a large number of theme elements, it might be easier to manage them using one <xref:System.Windows.ResourceDictionary> instance for each theme.</span></span> <span data-ttu-id="83137-393">これにより、新しいテーマを適用して適切なリソースのプロパティを設定して<xref:System.Windows.ResourceDictionary>です。</span><span class="sxs-lookup"><span data-stu-id="83137-393">In this way, a new theme can be applied by setting the Resources property to the appropriate <xref:System.Windows.ResourceDictionary>.</span></span>  
  
 <span data-ttu-id="83137-394">2 つの考慮事項を使用する場合がある<xref:System.Windows.Application.Resources%2A>です。</span><span class="sxs-lookup"><span data-stu-id="83137-394">There are two considerations to make when using <xref:System.Windows.Application.Resources%2A>.</span></span> <span data-ttu-id="83137-395">まず、ディクショナリ*キー*が、オブジェクトを設定およびプロパティの値 (文字列を使用するときに、キーが大文字小文字を区別であることに注意してください) を取得するときに正確に同じオブジェクト インスタンスを使用する必要があるためです。</span><span class="sxs-lookup"><span data-stu-id="83137-395">First, the dictionary *key* is an object, so you need to use exactly the same object instance when both setting and getting a property value (note that the key is case-sensitive when using a string).</span></span> <span data-ttu-id="83137-396">2 番目、ディクショナリ*値*オブジェクトはプロパティの値を取得するときに、目的の型に値を変換する必要があります。</span><span class="sxs-lookup"><span data-stu-id="83137-396">Second, the dictionary *value* is an object, so you will need to convert the value to the desired type when getting a property value.</span></span>  
  
 <span data-ttu-id="83137-397"><xref:System.Windows.Application.Resources%2A> スレッド セーフであるは、任意のスレッドから使用します。</span><span class="sxs-lookup"><span data-stu-id="83137-397"><xref:System.Windows.Application.Resources%2A> is thread safe and is available from any thread.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83137-398">この例は、使用する方法を示しています。[!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)]アプリケーション スコープのリソースを一貫した外観を作成するとします。</span><span class="sxs-lookup"><span data-stu-id="83137-398">This example illustrates how to use [!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)] together with application-scope resources to create a consistent visual appearance.</span></span>  
  
 [!code-xaml[ApplicationResourcesSnippets#ResourcesPropertyXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/ApplicationResourcesSnippets/CS/App.xaml#resourcespropertyxaml)]  
  
 [!code-xaml[ApplicationResourcesSnippets#WindowBackgroundPropertyXAML1](~/samples/snippets/csharp/VS_Snippets_Wpf/ApplicationResourcesSnippets/CS/MainWindow.xaml#windowbackgroundpropertyxaml1)]  
[!code-xaml[ApplicationResourcesSnippets#WindowBackgroundPropertyXAML2](~/samples/snippets/csharp/VS_Snippets_Wpf/ApplicationResourcesSnippets/CS/MainWindow.xaml#windowbackgroundpropertyxaml2)]  
  
 <span data-ttu-id="83137-399">次の例では、コードと XAML でアプリケーションのリソースを設定する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="83137-399">The following example shows how to set an application resource in code and XAML.</span></span>  
  
 [!code-csharp[HOWTOApplicationModelSnippets#SetApplicationScopeResourceCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/HOWTOApplicationModelSnippets/CSharp/ApplicationPropertiesSnippet.xaml.cs#setapplicationscoperesourcecode)]
 [!code-vb[HOWTOApplicationModelSnippets#SetApplicationScopeResourceCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/HOWTOApplicationModelSnippets/visualbasic/applicationpropertiessnippet.xaml.vb#setapplicationscoperesourcecode)]  
  
 [!code-xaml[HOWTOApplicationModelSnippets#SetApplicationScopeResourceXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/HOWTOApplicationModelSnippets/CSharp/App.xaml#setapplicationscoperesourcexaml)]  
  
 <span data-ttu-id="83137-400">次の例では、コードで、アプリケーションのリソースを取得する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="83137-400">The following example shows how to get an application resource in code.</span></span>  
  
 [!code-csharp[HOWTOApplicationModelSnippets#GetApplicationScopeResourceCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/HOWTOApplicationModelSnippets/CSharp/ApplicationPropertiesSnippet.xaml.cs#getapplicationscoperesourcecode)]
 [!code-vb[HOWTOApplicationModelSnippets#GetApplicationScopeResourceCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/HOWTOApplicationModelSnippets/visualbasic/applicationpropertiessnippet.xaml.vb#getapplicationscoperesourcecode)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Run">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="83137-401">Windows Presentation Foundation アプリケーションを開始します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-401">Starts a Windows Presentation Foundation application.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public int Run ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Run() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Application.Run" />
      <MemberSignature Language="VB.NET" Value="Public Function Run () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Run();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="83137-402">Windows Presentation Foundation アプリケーションを開始します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-402">Starts a Windows Presentation Foundation application.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="83137-403">アプリケーションのシャットダウン時にオペレーティング システムに返される <see cref="T:System.Int32" /> アプリケーション終了コード。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-403">The <see cref="T:System.Int32" /> application exit code that is returned to the operating system when the application shuts down.</span>
          </span>
          <span data-ttu-id="83137-404">終了コードの既定値は 0 です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-404">By default, the exit code value is 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83137-405"><xref:System.Windows.Application.Run%2A> 開始するために呼び出される、[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]アプリケーションです。</span><span class="sxs-lookup"><span data-stu-id="83137-405"><xref:System.Windows.Application.Run%2A> is called to start a [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] application.</span></span> <span data-ttu-id="83137-406">定義した場合、<xref:System.Windows.Application>マークアップ、またはマークアップと分離コードを使用して<xref:System.Windows.Application.Run%2A>が暗黙的に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="83137-406">If you define your <xref:System.Windows.Application> using markup, or markup and code-behind, <xref:System.Windows.Application.Run%2A> will be called implicitly.</span></span> <span data-ttu-id="83137-407">ただし、定義した場合、<xref:System.Windows.Application>コードを使用して、次のように明示的に呼び出す必要がある<xref:System.Windows.Application.Run%2A>です。</span><span class="sxs-lookup"><span data-stu-id="83137-407">However, if you define your <xref:System.Windows.Application> using code, you will need to explicitly call <xref:System.Windows.Application.Run%2A>.</span></span>  
  
 <span data-ttu-id="83137-408">ときに<xref:System.Windows.Application.Run%2A>が呼び出されると、<xref:System.Windows.Application>新しいアタッチ<xref:System.Windows.Threading.Dispatcher>UI スレッドへのインスタンス。</span><span class="sxs-lookup"><span data-stu-id="83137-408">When <xref:System.Windows.Application.Run%2A> is called, <xref:System.Windows.Application> attaches a new <xref:System.Windows.Threading.Dispatcher> instance to the UI thread.</span></span> <span data-ttu-id="83137-409">次に、<xref:System.Windows.Threading.Dispatcher>オブジェクトの<xref:System.Windows.Threading.Dispatcher.Run%2A>メソッドは、windows メッセージを処理するメッセージ ポンプを開始します。</span><span class="sxs-lookup"><span data-stu-id="83137-409">Next, the <xref:System.Windows.Threading.Dispatcher> object's <xref:System.Windows.Threading.Dispatcher.Run%2A> method is called, which starts a message pump to process windows messages.</span></span> <span data-ttu-id="83137-410">最後に、<xref:System.Windows.Threading.Dispatcher>オブジェクトの呼び出し、<xref:System.Windows.Application>オブジェクトの<xref:System.Windows.Application.OnStartup%2A>メソッドを<xref:System.Windows.Application.Startup>イベント。</span><span class="sxs-lookup"><span data-stu-id="83137-410">Finally, the <xref:System.Windows.Threading.Dispatcher> object calls the <xref:System.Windows.Application> object's the <xref:System.Windows.Application.OnStartup%2A> method to raise the <xref:System.Windows.Application.Startup> event.</span></span> <span data-ttu-id="83137-411">その結果、アプリケーションの実行モデルが確立されたらを処理する時間<xref:System.Windows.Application.Startup>アプリケーションが実行されている時点です。</span><span class="sxs-lookup"><span data-stu-id="83137-411">Consequently, the application execution model has been established by the time you handle <xref:System.Windows.Application.Startup>, at which point the application is considered to be running.</span></span>  
  
 <span data-ttu-id="83137-412">アプリケーションの停止時に実行して<xref:System.Windows.Application.Shutdown%2A>が呼び出されます。 の値、<xref:System.Windows.Application.ShutdownMode%2A>タイミングを決定するプロパティ<xref:System.Windows.Application.Shutdown%2A>が呼び出され、自動的に行われますか、明示的にする必要があるかどうかを呼び出すことです。</span><span class="sxs-lookup"><span data-stu-id="83137-412">An application stops running when <xref:System.Windows.Application.Shutdown%2A> is called; the value of the <xref:System.Windows.Application.ShutdownMode%2A> property determines when <xref:System.Windows.Application.Shutdown%2A> is called, and whether it happens automatically or you need to explicitly call it.</span></span>  
  
 <span data-ttu-id="83137-413"><xref:System.Windows.Application.Run%2A> 作成したスレッドからのみ呼び出すことができます、<xref:System.Windows.Application>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="83137-413"><xref:System.Windows.Application.Run%2A> can be called only from the thread that creates the <xref:System.Windows.Application> object.</span></span> <span data-ttu-id="83137-414">また、<xref:System.Windows.Application.Run%2A>から呼び出すことはできません、[!INCLUDE[TLA2#tla_xbap](~/includes/tla2sharptla-xbap-md.md)]です。</span><span class="sxs-lookup"><span data-stu-id="83137-414">Also, <xref:System.Windows.Application.Run%2A> cannot be called from a [!INCLUDE[TLA2#tla_xbap](~/includes/tla2sharptla-xbap-md.md)].</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83137-415">次の例は、ユーザー設定を使用するアプリケーションを<xref:System.Windows.Application>明示的に呼び出す必要がありますので、<xref:System.Windows.Application.Run%2A>です。</span><span class="sxs-lookup"><span data-stu-id="83137-415">The following example shows an application that uses a custom <xref:System.Windows.Application> and must therefore explicitly call <xref:System.Windows.Application.Run%2A>.</span></span>  
  
 [!code-csharp[ApplicationRunSnippets#CustomEntryPointAndRunCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/ApplicationRunSnippets/CSharp/App.cs#customentrypointandruncode)]
 [!code-vb[ApplicationRunSnippets#CustomEntryPointAndRunCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ApplicationRunSnippets/visualbasic/app.vb#customentrypointandruncode)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="83137-416">
            <see cref="M:System.Windows.Application.Run" /> は、ブラウザーによってホストされるアプリケーション ([!INCLUDE[TLA#tla_xbap](~/includes/tlasharptla-xbap-md.md)] など) から呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-416">
              <see cref="M:System.Windows.Application.Run" /> is called from a browser-hosted application (for example, an [!INCLUDE[TLA#tla_xbap](~/includes/tlasharptla-xbap-md.md)]).</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Application.Run(System.Windows.Window)" />
        <altmember cref="M:System.Windows.Application.Shutdown(System.Int32)" />
        <altmember cref="E:System.Windows.Application.Exit" />
      </Docs>
    </Member>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public int Run (System.Windows.Window window);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Run(class System.Windows.Window window) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Application.Run(System.Windows.Window)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Run(System::Windows::Window ^ window);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="window" Type="System.Windows.Window" />
      </Parameters>
      <Docs>
        <param name="window">
          <span data-ttu-id="83137-417">アプリケーションの起動時に自動的に開く <see cref="T:System.Windows.Window" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-417">A <see cref="T:System.Windows.Window" /> that opens automatically when an application starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83137-418">Windows Presentation Foundation アプリケーションを開始し、指定したウィンドウを開きます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-418">Starts a Windows Presentation Foundation application and opens the specified window.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="83137-419">アプリケーションのシャットダウン時にオペレーティング システムに返される <see cref="T:System.Int32" /> アプリケーション終了コード。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-419">The <see cref="T:System.Int32" /> application exit code that is returned to the operating system when the application shuts down.</span>
          </span>
          <span data-ttu-id="83137-420">終了コードの既定値は 0 です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-420">By default, the exit code value is 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83137-421">このオーバー ロードを拡張、<xref:System.Windows.Application.Run%2A>をアプリケーションの実行が開始した後に指定されたウィンドウを開くメソッドです。</span><span class="sxs-lookup"><span data-stu-id="83137-421">This overload extends the <xref:System.Windows.Application.Run%2A> method to open the specified window after an application starts running.</span></span>  
  
 <span data-ttu-id="83137-422">コードを定義する場合<xref:System.Windows.Application>ウィンドウが開きを実行開始時に、明示的に呼び出す<xref:System.Windows.Application.Run%2A>です。</span><span class="sxs-lookup"><span data-stu-id="83137-422">If you define a code <xref:System.Windows.Application> that opens a window when it starts running, you explicitly call <xref:System.Windows.Application.Run%2A>.</span></span>  
  
 <span data-ttu-id="83137-423">作成する場合、<xref:System.Windows.Application>マークアップ、またはマークアップと分離コードを使用して、自動的にウィンドウを開き、次の手法のいずれかを使用中には。</span><span class="sxs-lookup"><span data-stu-id="83137-423">If you create your <xref:System.Windows.Application> using markup, or markup and code-behind, you can automatically open a window during using either of the following techniques:</span></span>  
  
-   <span data-ttu-id="83137-424">設定することによって宣言によって、<xref:System.Windows.Application.StartupUri%2A>です。</span><span class="sxs-lookup"><span data-stu-id="83137-424">Declaratively, by setting <xref:System.Windows.Application.StartupUri%2A>.</span></span>  
  
-   <span data-ttu-id="83137-425">処理することにより、プログラムによって<xref:System.Windows.Application.Startup>です。</span><span class="sxs-lookup"><span data-stu-id="83137-425">Programmatically, by handling <xref:System.Windows.Application.Startup>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83137-426">次の例は、インスタンス化する手動で作成された静的エントリ ポイント メソッドを使用してアプリケーションを示します<xref:System.Windows.Application>を呼び出す前に<xref:System.Windows.Application.Run%2A>です。</span><span class="sxs-lookup"><span data-stu-id="83137-426">The following example shows an application with a manually-created static entry point method that instantiates <xref:System.Windows.Application>, before calling <xref:System.Windows.Application.Run%2A>.</span></span>  
  
 [!code-csharp[ApplicationRunOL1Snippets#CustomEntryPointAndRunOL1CODE](~/samples/snippets/csharp/VS_Snippets_Wpf/ApplicationRunOL1Snippets/CSharp/App.cs#customentrypointandrunol1code)]
 [!code-vb[ApplicationRunOL1Snippets#CustomEntryPointAndRunOL1CODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ApplicationRunOL1Snippets/visualbasic/app.vb#customentrypointandrunol1code)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="83137-427">
            <see cref="M:System.Windows.Application.Run" /> は、ブラウザーによってホストされるアプリケーション ([!INCLUDE[TLA#tla_xbap](~/includes/tlasharptla-xbap-md.md)] など) から呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-427">
              <see cref="M:System.Windows.Application.Run" /> is called from a browser-hosted application (for example, an [!INCLUDE[TLA#tla_xbap](~/includes/tlasharptla-xbap-md.md)]).</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Application.Shutdown" />
        <altmember cref="M:System.Windows.Application.Shutdown(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="SessionEnding">
      <MemberSignature Language="C#" Value="public event System.Windows.SessionEndingCancelEventHandler SessionEnding;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.SessionEndingCancelEventHandler SessionEnding" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Application.SessionEnding" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SessionEnding As SessionEndingCancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::SessionEndingCancelEventHandler ^ SessionEnding;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.SessionEndingCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="83137-428">ユーザーがログオフするかオペレーティング システムをシャットダウンして、Windows セッションを終了するときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-428">Occurs when the user ends the Windows session by logging off or shutting down the operating system.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83137-429">既定では、アプリケーションのシャット ダウン時に、ユーザーがログオフまたはシャット ダウン時に行われる Windows セッションが終了します。</span><span class="sxs-lookup"><span data-stu-id="83137-429">By default, an application shuts down when the Windows session ends, which occurs when a user logs off or shuts down.</span></span> <span data-ttu-id="83137-430">この場合、Windows は、各アプリケーションをシャット ダウンを要求します。</span><span class="sxs-lookup"><span data-stu-id="83137-430">When this happens, Windows asks each open application to shut down.</span></span> <span data-ttu-id="83137-431">ただしは、アプリケーションがシャット ダウンこのエラーが発生する準備ができていない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="83137-431">However, it is possible that an application may not be ready to shut down when this occurs.</span></span> <span data-ttu-id="83137-432">たとえば、アプリケーションには、実行時間の長い操作中または不整合な状態であるデータがあります。</span><span class="sxs-lookup"><span data-stu-id="83137-432">For example, an application may have data that is in an inconsistent state, or in the middle of a long-running operation.</span></span> <span data-ttu-id="83137-433">これらの状況で、セッションの終了を防ぐことが望ましい場合がありますしてセッションを終了させるかどうかを決定するオプションをユーザーに許可するが望ましい場合があります。</span><span class="sxs-lookup"><span data-stu-id="83137-433">In these situations, it may be desirable to prevent the session from ending, and may be more desirable to allow users the option to decide whether or not to let the session to end.</span></span>  
  
 <span data-ttu-id="83137-434">処理することにより、セッションが終了したときに検出することができます、<xref:System.Windows.Application.SessionEnding>イベント。</span><span class="sxs-lookup"><span data-stu-id="83137-434">You can detect when a session ends by handling the <xref:System.Windows.Application.SessionEnding> event.</span></span> <span data-ttu-id="83137-435">アプリケーションは、セッションの終了を防ぐ必要がある場合、<xref:System.Windows.SessionEndingCancelEventArgs>イベント ハンドラーに渡される引数を公開、<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>設定した`true`(既定値は`false`)。</span><span class="sxs-lookup"><span data-stu-id="83137-435">If an application needs to prevent the session from ending, the <xref:System.Windows.SessionEndingCancelEventArgs> argument that is passed to the event handler exposes the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> that you set to `true` (the default value is `false`).</span></span>  
  
 <span data-ttu-id="83137-436">場合<xref:System.Windows.Application.SessionEnding>が、処理されないか、取り消されてなしで処理される<xref:System.Windows.Application.Shutdown%2A>が呼び出されたと<xref:System.Windows.Application.Exit>イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="83137-436">If <xref:System.Windows.Application.SessionEnding> is unhandled, or is handled without being cancelled, <xref:System.Windows.Application.Shutdown%2A> is called and the <xref:System.Windows.Application.Exit> event is raised.</span></span>  
  
 <span data-ttu-id="83137-437">詳細については、セッションが終了する理由を取得するアプリケーションを調査できます<xref:System.Windows.SessionEndingCancelEventArgs.ReasonSessionEnding%2A>の 1 つである、<xref:System.Windows.ReasonSessionEnding>値 (<xref:System.Windows.ReasonSessionEnding.Logoff?displayProperty=nameWithType>と<xref:System.Windows.ReasonSessionEnding.Shutdown?displayProperty=nameWithType>)。</span><span class="sxs-lookup"><span data-stu-id="83137-437">To obtain more information about why the session is ending, an application can inspect <xref:System.Windows.SessionEndingCancelEventArgs.ReasonSessionEnding%2A>, which is one of the <xref:System.Windows.ReasonSessionEnding> values (<xref:System.Windows.ReasonSessionEnding.Logoff?displayProperty=nameWithType> and <xref:System.Windows.ReasonSessionEnding.Shutdown?displayProperty=nameWithType>).</span></span>  
  
 <span data-ttu-id="83137-438"><xref:System.Windows.Application.SessionEnding> コンソール アプリケーションでは発生しません。</span><span class="sxs-lookup"><span data-stu-id="83137-438"><xref:System.Windows.Application.SessionEnding> is not raised by console applications.</span></span>  
  
 <span data-ttu-id="83137-439"><xref:System.Windows.Application.SessionEnding> 作成したスレッドでのみが発生した、<xref:System.Windows.Application>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="83137-439"><xref:System.Windows.Application.SessionEnding> is raised only on the thread that creates the <xref:System.Windows.Application> object.</span></span>  
  
 <span data-ttu-id="83137-440"><xref:System.Windows.Application.SessionEnding> XAML ブラウザー アプリケーション (Xbap) は発生しません。</span><span class="sxs-lookup"><span data-stu-id="83137-440"><xref:System.Windows.Application.SessionEnding> is not raised for XAML browser applications (XBAPs).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83137-441">次の例は、処理する方法を示します、<xref:System.Windows.Application.SessionEnding>イベントと、ユーザーがそれをキャンセルできるようにします。</span><span class="sxs-lookup"><span data-stu-id="83137-441">The following example demonstrates how to handle the <xref:System.Windows.Application.SessionEnding> event and allow the user to cancel it.</span></span>  
  
 [!code-xaml[ApplicationSessionEndingSnippets#HandlingSessionEndingXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/ApplicationSessionEndingSnippets/CSharp/App.xaml#handlingsessionendingxaml)]  
  
 [!code-csharp[ApplicationSessionEndingSnippets#HandlingSessionEndingCODEBEHIND](~/samples/snippets/csharp/VS_Snippets_Wpf/ApplicationSessionEndingSnippets/CSharp/App.xaml.cs#handlingsessionendingcodebehind)]
 [!code-vb[ApplicationSessionEndingSnippets#HandlingSessionEndingCODEBEHIND](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ApplicationSessionEndingSnippets/visualbasic/application.xaml.vb#handlingsessionendingcodebehind)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Application.OnSessionEnding(System.Windows.SessionEndingCancelEventArgs)" />
        <altmember cref="E:System.Windows.Application.Startup" />
      </Docs>
    </Member>
    <Member MemberName="SetCookie">
      <MemberSignature Language="C#" Value="public static void SetCookie (Uri uri, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetCookie(class System.Uri uri, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Application.SetCookie(System.Uri,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetCookie(Uri ^ uri, System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri">
          <span data-ttu-id="83137-442">クッキーを作成する場所を指定する <see cref="T:System.Uri" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-442">The <see cref="T:System.Uri" /> that specifies the location for which the cookie should be created.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="83137-443">クッキー データを格納している <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-443">The <see cref="T:System.String" /> that contains the cookie data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83137-444">
            <see cref="T:System.Uri" /> で指定した場所にクッキーを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-444">Creates a cookie for the location specified by a <see cref="T:System.Uri" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83137-445">Cookie とは、アプリケーションのセッション (セッション cookie) 中、またはアプリケーション セッション (永続的な cookie) 間でクライアント コンピューターで、アプリケーションで格納できるデータの任意の部分です。</span><span class="sxs-lookup"><span data-stu-id="83137-445">A cookie is an arbitrary piece of data that can be stored by an application on the client machine during application sessions (session cookies) or across application sessions (persistent cookies).</span></span> <span data-ttu-id="83137-446">両方の種類の cookie を作成するには呼び出すことによって<xref:System.Windows.Application.SetCookie%2A>です。</span><span class="sxs-lookup"><span data-stu-id="83137-446">You can create both types of cookies by calling <xref:System.Windows.Application.SetCookie%2A>.</span></span>  
  
 <span data-ttu-id="83137-447">通常、cookie のデータは、次の形式で名前/値ペアの形式をとります。</span><span class="sxs-lookup"><span data-stu-id="83137-447">Cookie data typically takes the form of a name/value pair in the following format:</span></span>  
  
 `Name=Value`  
  
 <span data-ttu-id="83137-448">この形式の文字列を渡す<xref:System.Windows.Application.SetCookie%2A>、と共に、<xref:System.Uri>の cookie を設定する場所 (通常は、アプリケーション ドメイン)。</span><span class="sxs-lookup"><span data-stu-id="83137-448">You pass a string of this format to <xref:System.Windows.Application.SetCookie%2A>, along with the <xref:System.Uri> of the location for which the cookie should be set (typically, the application domain).</span></span>  
  
 <span data-ttu-id="83137-449">Cookie とは、セッションの cookie、または永続的な cookie が cookie の文字列をするかどうかに依存するかどうかに渡す<xref:System.Windows.Application.SetCookie%2A>有効期限日が含まれています。</span><span class="sxs-lookup"><span data-stu-id="83137-449">Whether a cookie is a session cookie or a persistent cookie depends on whether the cookie string that you pass to <xref:System.Windows.Application.SetCookie%2A> includes an expiry date.</span></span> <span data-ttu-id="83137-450">セッション cookie の文字列では、有効期限日は含まれません。</span><span class="sxs-lookup"><span data-stu-id="83137-450">The string for a session cookie does not include an expiry date.</span></span> <span data-ttu-id="83137-451">永続的な cookie の文字列は、次の形式にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="83137-451">The string for a persistent cookie does, and must be in the following format:</span></span>  
  
 `NAME=VALUE; expires=DAY, DD-MMM-YYYY HH:MM:SS GMT`  
  
 <span data-ttu-id="83137-452">現在の永続的な cookie が格納されている[!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)]期限が切れるまで、削除された場合に、インストールのインターネット一時ファイル フォルダーです。</span><span class="sxs-lookup"><span data-stu-id="83137-452">Persistent cookies are stored in the current [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] installation's Temporary Internet Files folder until they expire, in which case they are deleted.</span></span> <span data-ttu-id="83137-453">アプリケーションから永続的な cookie を削除するには、過去の日付/時刻値に、有効期限を設定します。</span><span class="sxs-lookup"><span data-stu-id="83137-453">You can delete a persistent cookie from your application by setting its expiry date to a date/time value that is in the past.</span></span>  
  
 <span data-ttu-id="83137-454">クッキーの概要については[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]を参照してください[ナビゲーション概要](~/docs/framework/wpf/app-development/navigation-overview.md)です。</span><span class="sxs-lookup"><span data-stu-id="83137-454">For an overview of cookies in [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)], see [Navigation Overview](~/docs/framework/wpf/app-development/navigation-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">
          <span data-ttu-id="83137-455">指定したクッキー作成の試行中に問題が起きると、(<see cref="M:System.Windows.Application.SetCookie(System.Uri,System.String)" /> から呼び出された) <see langword="InternetSetCookie" /> 関数により [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] エラーが発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-455">A [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] error is raised by the <see langword="InternetSetCookie" /> function (called by <see cref="M:System.Windows.Application.SetCookie(System.Uri,System.String)" />) if a problem occurs when attempting to create the specified cookie.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="83137-456">ファイル ベースの cookie を取得する<see cref="T:System.Uri" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-456">for getting the cookie for a file-based <see cref="T:System.Uri" />.</span>
          </span>
          <span data-ttu-id="83137-457">関連する列挙。 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-457">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          </span>
        </permission>
        <permission cref="T:System.Net.WebPermission">
          <span data-ttu-id="83137-458">以外のファイル ベースの cookie を取得する<see cref="T:System.Uri" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-458">for getting the cookie for a non-file-based <see cref="T:System.Uri" />.</span>
          </span>
          <span data-ttu-id="83137-459">関連する列挙。 <see cref="F:System.Net.NetworkAccess.Connect" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-459">Associated enumeration: <see cref="F:System.Net.NetworkAccess.Connect" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Windows.Application.GetCookie(System.Uri)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Shutdown">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="83137-460">アプリケーションをシャットダウンします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-460">Shuts down an application.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Shutdown">
      <MemberSignature Language="C#" Value="public void Shutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Shutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Application.Shutdown" />
      <MemberSignature Language="VB.NET" Value="Public Sub Shutdown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Shutdown();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="83137-461">アプリケーションをシャットダウンします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-461">Shuts down an application.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83137-462">ときに<xref:System.Windows.Application.Shutdown%2A>が呼び出されると、アプリケーションの実行を停止します。</span><span class="sxs-lookup"><span data-stu-id="83137-462">When <xref:System.Windows.Application.Shutdown%2A> is called, an application stops running.</span></span> <span data-ttu-id="83137-463">処理することができます、<xref:System.Windows.Application.Exit>イベント、アプリケーションが実行を停止しようとする、適切な処理を実行するタイミングを検出します。</span><span class="sxs-lookup"><span data-stu-id="83137-463">You can handle the <xref:System.Windows.Application.Exit> event to detect when an application is about to stop running, to perform any appropriate processing.</span></span>  
  
 <span data-ttu-id="83137-464"><xref:System.Windows.Application.Shutdown%2A> 暗黙的に呼び出さ Windows Presentation Foundation で、次の状況で。</span><span class="sxs-lookup"><span data-stu-id="83137-464"><xref:System.Windows.Application.Shutdown%2A> is implicitly called by Windows Presentation Foundation in the following situations:</span></span>  
  
-   <span data-ttu-id="83137-465">ときに<xref:System.Windows.Application.ShutdownMode%2A>に設定されている<xref:System.Windows.ShutdownMode.OnLastWindowClose>です。</span><span class="sxs-lookup"><span data-stu-id="83137-465">When <xref:System.Windows.Application.ShutdownMode%2A> is set to <xref:System.Windows.ShutdownMode.OnLastWindowClose>.</span></span>  
  
-   <span data-ttu-id="83137-466">ときに、<xref:System.Windows.Application.ShutdownMode%2A>に設定されている<xref:System.Windows.ShutdownMode.OnMainWindowClose>です。</span><span class="sxs-lookup"><span data-stu-id="83137-466">When the <xref:System.Windows.Application.ShutdownMode%2A> is set to <xref:System.Windows.ShutdownMode.OnMainWindowClose>.</span></span>  
  
-   <span data-ttu-id="83137-467">ユーザーがセッションを終了して、<xref:System.Windows.Application.SessionEnding>イベントがハンドルされていないとき、またはキャンセルせずに、処理します。</span><span class="sxs-lookup"><span data-stu-id="83137-467">When a user ends a session and the <xref:System.Windows.Application.SessionEnding> event is either unhandled, or handled without cancellation.</span></span>  
  
 <span data-ttu-id="83137-468">呼び出す<xref:System.Windows.Application.Shutdown%2A>シャット ダウン、アプリケーションを明示的にによりに関係なく、<xref:System.Windows.Application.ShutdownMode%2A>設定します。</span><span class="sxs-lookup"><span data-stu-id="83137-468">Calling <xref:System.Windows.Application.Shutdown%2A> explicitly causes an application to shut down, regardless of the <xref:System.Windows.Application.ShutdownMode%2A> setting.</span></span> <span data-ttu-id="83137-469">ただし場合、<xref:System.Windows.Application.ShutdownMode%2A>に設定されている<xref:System.Windows.ShutdownMode.OnExplicitShutdown>、呼び出す必要があります<xref:System.Windows.Application.Shutdown%2A>アプリケーションをシャット ダウンします。</span><span class="sxs-lookup"><span data-stu-id="83137-469">However, if <xref:System.Windows.Application.ShutdownMode%2A> is set to <xref:System.Windows.ShutdownMode.OnExplicitShutdown>, you must call <xref:System.Windows.Application.Shutdown%2A> to shut down an application.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="83137-470">ときに<xref:System.Windows.Application.Shutdown%2A>が呼び出されると、アプリケーションが停止したかどうかに関係なく、<xref:System.Windows.Window.Closing>開いているウィンドウのイベントが取り消されました。</span><span class="sxs-lookup"><span data-stu-id="83137-470">When <xref:System.Windows.Application.Shutdown%2A> is called, the application will shut down irrespective of whether the <xref:System.Windows.Window.Closing> event of any open windows is canceled.</span></span>  
  
 <span data-ttu-id="83137-471">このメソッドは、作成したスレッドからのみ呼び出すことが、<xref:System.Windows.Application>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="83137-471">This method can be called only from the thread that created the <xref:System.Windows.Application> object.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="83137-472">すべての windows とユーザー入力イベントを制限なく使用する権限です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-472">for permission to use all windows and user input events without restriction.</span>
          </span>
          <span data-ttu-id="83137-473">関連する列挙。 <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-473">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Windows.Application.Shutdown(System.Int32)" />
        <altmember cref="P:System.Windows.Application.ShutdownMode" />
        <altmember cref="E:System.Windows.Application.SessionEnding" />
        <altmember cref="M:System.Windows.Application.Run" />
        <altmember cref="M:System.Windows.Application.Run(System.Windows.Window)" />
      </Docs>
    </Member>
    <Member MemberName="Shutdown">
      <MemberSignature Language="C#" Value="public void Shutdown (int exitCode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Shutdown(int32 exitCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Application.Shutdown(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Shutdown (exitCode As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Shutdown(int exitCode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exitCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="exitCode">
          <span data-ttu-id="83137-474">アプリケーションの整数型終了コード。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-474">An integer exit code for an application.</span>
          </span>
          <span data-ttu-id="83137-475">既定の終了コードは 0 です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-475">The default exit code is 0.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83137-476">アプリケーションをシャットダウンして、指定した終了コードをオペレーティング システムに返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-476">Shuts down an application that returns the specified exit code to the operating system.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83137-477">処理することができます、<xref:System.Windows.Application.Exit>終了コードを設定するイベントです。</span><span class="sxs-lookup"><span data-stu-id="83137-477">You can handle the <xref:System.Windows.Application.Exit> event to set an exit code.</span></span> <span data-ttu-id="83137-478">ただし、明示的に呼び出す場合<xref:System.Windows.Application.Shutdown%2A>、および処理する<xref:System.Windows.Application.Exit>だけで、終了コードを設定するに呼び出せる<xref:System.Windows.Application.Shutdown%2A>代わりにします。</span><span class="sxs-lookup"><span data-stu-id="83137-478">However, if you explicitly call <xref:System.Windows.Application.Shutdown%2A>, and you handle <xref:System.Windows.Application.Exit> only to set an exit code, you can call <xref:System.Windows.Application.Shutdown%2A> instead.</span></span>  
  
 <span data-ttu-id="83137-479">このメソッドは、作成したスレッドからのみ呼び出すことが、<xref:System.Windows.Application>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="83137-479">This method can be called only from the thread that created the <xref:System.Windows.Application> object.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="83137-480">すべての windows とユーザー入力イベントを制限なく使用する権限です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-480">for permission to use all windows and user input events without restriction.</span>
          </span>
          <span data-ttu-id="83137-481">関連する列挙。 <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-481">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          </span>
        </permission>
        <altmember cref="Overload:System.Windows.Application.Run" />
      </Docs>
    </Member>
    <Member MemberName="ShutdownMode">
      <MemberSignature Language="C#" Value="public System.Windows.ShutdownMode ShutdownMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.ShutdownMode ShutdownMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Application.ShutdownMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ShutdownMode As ShutdownMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::ShutdownMode ShutdownMode { System::Windows::ShutdownMode get(); void set(System::Windows::ShutdownMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ShutdownMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="83137-482">
            <see cref="M:System.Windows.Application.Shutdown" /> メソッドが呼び出される条件を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-482">Gets or sets the condition that causes the <see cref="M:System.Windows.Application.Shutdown" /> method to be called.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="83137-483">
            <see cref="T:System.Windows.ShutdownMode" /> 列挙値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-483">A <see cref="T:System.Windows.ShutdownMode" /> enumeration value.</span>
          </span>
          <span data-ttu-id="83137-484">既定値は <see cref="F:System.Windows.ShutdownMode.OnLastWindowClose" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-484">The default value is <see cref="F:System.Windows.ShutdownMode.OnLastWindowClose" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83137-485">アプリケーションが停止される場合にのみを実行している、<xref:System.Windows.Application.Shutdown%2A>アプリケーションのメソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="83137-485">Applications stop running only when the <xref:System.Windows.Application.Shutdown%2A> method of the Application is called.</span></span> <span data-ttu-id="83137-486">暗黙的または明示的の値を指定して、シャット ダウンが発生することが、<xref:System.Windows.Application.ShutdownMode%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="83137-486">Shut down can occur implicitly or explicitly, as specified by the value of the <xref:System.Windows.Application.ShutdownMode%2A> property.</span></span>  
  
 <span data-ttu-id="83137-487">設定した場合<xref:System.Windows.Application.ShutdownMode%2A>に<xref:System.Windows.ShutdownMode.OnLastWindowClose>、Windows Presentation Foundation (WPF) が暗黙的に呼び出す<xref:System.Windows.Application.Shutdown%2A>アプリケーションの最後のウィンドウが閉じたときに、メイン ウィンドウとして、現在インスタンス化されたウィンドウが設定されている場合でも (を参照してください<xref:System.Windows.Application.MainWindow%2A>)。</span><span class="sxs-lookup"><span data-stu-id="83137-487">If you set <xref:System.Windows.Application.ShutdownMode%2A> to <xref:System.Windows.ShutdownMode.OnLastWindowClose>, Windows Presentation Foundation (WPF) implicitly calls <xref:System.Windows.Application.Shutdown%2A> when the last window in an application closes, even if any currently instantiated windows are set as the main window (see <xref:System.Windows.Application.MainWindow%2A>).</span></span>  
  
 <span data-ttu-id="83137-488">A<xref:System.Windows.Application.ShutdownMode%2A>の<xref:System.Windows.ShutdownMode.OnMainWindowClose>wpf が暗黙的に呼び出す<xref:System.Windows.Application.Shutdown%2A>ときに、<xref:System.Windows.Application.MainWindow%2A>場合でも、現在開いている他のウィンドウを閉じます。</span><span class="sxs-lookup"><span data-stu-id="83137-488">A <xref:System.Windows.Application.ShutdownMode%2A> of <xref:System.Windows.ShutdownMode.OnMainWindowClose> causes WPF to implicitly call <xref:System.Windows.Application.Shutdown%2A> when the <xref:System.Windows.Application.MainWindow%2A> closes, even if other windows are currently open.</span></span>  
  
 <span data-ttu-id="83137-489">一部のアプリケーションの有効期間は、メイン ウィンドウまたは最後のウィンドウが閉じるか、またはできない可能性があります windows に依存するすべての場合に依存できない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="83137-489">The lifetime of some applications may not be dependent on when the main window or last window is closed, or may not be dependent on windows at all.</span></span> <span data-ttu-id="83137-490">このようなシナリオを設定する必要があります、<xref:System.Windows.Application.ShutdownMode%2A>プロパティを<xref:System.Windows.ShutdownMode.OnExplicitShutdown>がありますが、明示的な<xref:System.Windows.Application.Shutdown%2A>メソッドの呼び出し、アプリケーションを停止します。</span><span class="sxs-lookup"><span data-stu-id="83137-490">For these scenarios you need to set the <xref:System.Windows.Application.ShutdownMode%2A> property to <xref:System.Windows.ShutdownMode.OnExplicitShutdown>, which requires an explicit <xref:System.Windows.Application.Shutdown%2A> method call to stop the application.</span></span> <span data-ttu-id="83137-491">それ以外の場合、アプリケーションは引き続きバック グラウンドで実行されます。</span><span class="sxs-lookup"><span data-stu-id="83137-491">Otherwise, the application continues running in the background.</span></span>  
  
 <span data-ttu-id="83137-492"><xref:System.Windows.Application.ShutdownMode%2A> 宣言によって構成できます[!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)]またはプログラムによってコード。</span><span class="sxs-lookup"><span data-stu-id="83137-492"><xref:System.Windows.Application.ShutdownMode%2A> can be configured declaratively from [!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)] or programmatically from code.</span></span>  
  
 <span data-ttu-id="83137-493">このプロパティは、作成したスレッドからのみ使用可能な<xref:System.Windows.Application>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="83137-493">This property is available only from the thread that created the <xref:System.Windows.Application> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83137-494">次の例は、構成する方法を示しています。<xref:System.Windows.Application.ShutdownMode%2A>アプリケーションを明示的に閉じる必要がありますを指定します。</span><span class="sxs-lookup"><span data-stu-id="83137-494">The following example shows how to configure <xref:System.Windows.Application.ShutdownMode%2A> to specify that an application must be closed explicitly.</span></span>  
  
 [!code-xaml[ApplicationShutdownModeSnippets#SetShutdownModeXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/ApplicationShutdownModeSnippets/CS/App.xaml#setshutdownmodexaml)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.ShutdownMode" />
        <altmember cref="E:System.Windows.Application.Exit" />
      </Docs>
    </Member>
    <Member MemberName="Startup">
      <MemberSignature Language="C#" Value="public event System.Windows.StartupEventHandler Startup;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.StartupEventHandler Startup" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Application.Startup" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Startup As StartupEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::StartupEventHandler ^ Startup;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.StartupEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="83137-495">
            <see cref="M:System.Windows.Application.Run" /> オブジェクトの <see cref="T:System.Windows.Application" /> メソッドが呼び出されると発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-495">Occurs when the <see cref="M:System.Windows.Application.Run" /> method of the <see cref="T:System.Windows.Application" /> object is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83137-496">など、開始時に、一般的な Windows Presentation Foundation アプリケーションでは、さまざまな初期化タスクを実行可能性があります。</span><span class="sxs-lookup"><span data-stu-id="83137-496">A typical Windows Presentation Foundation application may perform a variety of initialization tasks when it starts up, including:</span></span>  
  
-   <span data-ttu-id="83137-497">コマンド ライン パラメーターを処理しています。</span><span class="sxs-lookup"><span data-stu-id="83137-497">Processing command-line parameters.</span></span>  
  
-   <span data-ttu-id="83137-498">メイン ウィンドウを開いています。</span><span class="sxs-lookup"><span data-stu-id="83137-498">Opening the main window.</span></span>  
  
-   <span data-ttu-id="83137-499">アプリケーション スコープのリソースを初期化します。</span><span class="sxs-lookup"><span data-stu-id="83137-499">Initializing application-scope resources.</span></span>  
  
-   <span data-ttu-id="83137-500">アプリケーション スコープのプロパティを初期化します。</span><span class="sxs-lookup"><span data-stu-id="83137-500">Initializing application-scope properties.</span></span>  
  
 <span data-ttu-id="83137-501">メイン ウィンドウとアプリケーション スコープのリソースを使用して宣言によって指定できます[!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)](<xref:System.Windows.Application.StartupUri%2A>と<xref:System.Windows.Application.Resources%2A>、それぞれ)。</span><span class="sxs-lookup"><span data-stu-id="83137-501">You can declaratively specify the main window and application-scope resources using [!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)] (<xref:System.Windows.Application.StartupUri%2A> and <xref:System.Windows.Application.Resources%2A>, respectively).</span></span> <span data-ttu-id="83137-502">場合によっては、ただし、リソースや、アプリケーションのメイン ウィンドウできますのみするプログラムで実行時に決定します。</span><span class="sxs-lookup"><span data-stu-id="83137-502">Sometimes, however, the resources or main window of your application can only be determined programmatically at run time.</span></span> <span data-ttu-id="83137-503">さらに、アプリケーション スコープのプロパティとコマンド ライン パラメーターのみするプログラムにより使用できます。</span><span class="sxs-lookup"><span data-stu-id="83137-503">Additionally, application-scope properties and command-line parameters can only be used programmatically.</span></span> <span data-ttu-id="83137-504">プログラムによる初期化を処理することにより実行できます、<xref:System.Windows.Application.Startup>次を含むイベント。</span><span class="sxs-lookup"><span data-stu-id="83137-504">Programmatic initialization can be performed by handling the <xref:System.Windows.Application.Startup> event, including the following:</span></span>  
  
-   <span data-ttu-id="83137-505">使用できるコマンド ライン パラメーターを取得および処理、<xref:System.Windows.StartupEventArgs.Args%2A>のプロパティ、<xref:System.Windows.StartupEventArgs>クラスに渡される、<xref:System.Windows.Application.Startup>イベント ハンドラー。</span><span class="sxs-lookup"><span data-stu-id="83137-505">Acquire and process command-line parameters, which are available from the <xref:System.Windows.StartupEventArgs.Args%2A> property of the <xref:System.Windows.StartupEventArgs> class that is passed to the <xref:System.Windows.Application.Startup> event handler.</span></span>  
  
-   <span data-ttu-id="83137-506">使用してアプリケーション スコープのリソースを初期化、<xref:System.Windows.Application.Resources%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="83137-506">Initialize application-scope resources by using the <xref:System.Windows.Application.Resources%2A> property.</span></span>  
  
-   <span data-ttu-id="83137-507">使用してアプリケーション スコープのプロパティを初期化、<xref:System.Windows.Application.Properties%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="83137-507">Initialize application-scope properties by using the <xref:System.Windows.Application.Properties%2A> property.</span></span>  
  
-   <span data-ttu-id="83137-508">インスタンスを作成し、1 つ (以上) のウィンドウを表示します。</span><span class="sxs-lookup"><span data-stu-id="83137-508">Instantiate and show one (or more) windows.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="83137-509">コマンド ライン パラメーターは、静的なを呼び出すことによって取得することも<xref:System.Environment.GetCommandLineArgs%2A>のメソッド、<xref:System.Environment>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="83137-509">Command-line parameters can also be acquired by calling the static <xref:System.Environment.GetCommandLineArgs%2A> method of the <xref:System.Environment> object.</span></span> <span data-ttu-id="83137-510">ただし、<xref:System.Environment.GetCommandLineArgs%2A>を実行する完全な信頼が必要です。</span><span class="sxs-lookup"><span data-stu-id="83137-510">However, <xref:System.Environment.GetCommandLineArgs%2A> requires full trust to execute.</span></span>  
  
 <span data-ttu-id="83137-511">設定した場合<xref:System.Windows.Application.StartupUri%2A>を使用して[!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)]、作成されるメイン ウィンドウからは使用できないか、<xref:System.Windows.Application.MainWindow%2A>プロパティまたは<xref:System.Windows.Application.Windows%2A>のプロパティ、<xref:System.Windows.Application>後まで、オブジェクト、<xref:System.Windows.Application.Startup>イベントを処理します。</span><span class="sxs-lookup"><span data-stu-id="83137-511">If you set <xref:System.Windows.Application.StartupUri%2A> using [!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)], the main window that is created is not available from either the <xref:System.Windows.Application.MainWindow%2A> property or the <xref:System.Windows.Application.Windows%2A> property of the <xref:System.Windows.Application> object until after the <xref:System.Windows.Application.Startup> event is processed.</span></span> <span data-ttu-id="83137-512">起動中にメイン ウィンドウへのアクセスを必要がある場合は新しいウィンドウのオブジェクトを手動で作成する必要があります、<xref:System.Windows.Application.Startup>イベント ハンドラー。</span><span class="sxs-lookup"><span data-stu-id="83137-512">If you need access to the main window during startup, you need to manually create a new window object from your <xref:System.Windows.Application.Startup> event handler.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="83137-513">アプリケーションで使用する場合<xref:System.Net.AuthenticationManager.CredentialPolicy%2A>資格情報のポリシーを指定するには、設定する必要があります<xref:System.Net.AuthenticationManager.CredentialPolicy%2A>後<xref:System.Windows.Application.Startup>が発生した場合[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]既定内部ポリシーに直接後設定、<xref:System.Windows.Application.Startup>イベントが発生しました。</span><span class="sxs-lookup"><span data-stu-id="83137-513">If your application uses <xref:System.Net.AuthenticationManager.CredentialPolicy%2A> to specify a credential policy, you need to set <xref:System.Net.AuthenticationManager.CredentialPolicy%2A> after <xref:System.Windows.Application.Startup> is raised; otherwise, [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] sets it to a default internal policy directly after the <xref:System.Windows.Application.Startup> event has been raised.</span></span>  
  
 <span data-ttu-id="83137-514">渡されるコマンドライン引数、<xref:System.Windows.Application.Startup>イベント ハンドラーと同じではない、[!INCLUDE[TLA#tla_url](~/includes/tlasharptla-url-md.md)]クエリ文字列パラメーターに渡される、[!INCLUDE[TLA#tla_xbap](~/includes/tlasharptla-xbap-md.md)]です。</span><span class="sxs-lookup"><span data-stu-id="83137-514">The command-line arguments that are passed to the <xref:System.Windows.Application.Startup> event handler are not the same as the [!INCLUDE[TLA#tla_url](~/includes/tlasharptla-url-md.md)] query string parameters that are passed to an [!INCLUDE[TLA#tla_xbap](~/includes/tlasharptla-xbap-md.md)].</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83137-515">次の例では、取得およびスタンドアロン アプリケーションからコマンド ライン オプションを処理する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="83137-515">The following example shows how to acquire and process command-line options from a standalone application.</span></span> <span data-ttu-id="83137-516">場合、 **/StartMinimized**コマンド ライン パラメーターが指定されて、最小化された状態で、アプリケーションが、メイン ウィンドウを開きます。</span><span class="sxs-lookup"><span data-stu-id="83137-516">If the **/StartMinimized** command-line parameter was provided, the application opens the main window in a minimized state.</span></span>  
  
 [!code-xaml[ApplicationStartupSnippets#HandleStartupXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/ApplicationStartupSnippets/CSharp/App.xaml#handlestartupxaml)]  
  
 [!code-csharp[ApplicationStartupSnippets#HandleStartupCODEBEHIND](~/samples/snippets/csharp/VS_Snippets_Wpf/ApplicationStartupSnippets/CSharp/App.xaml.cs#handlestartupcodebehind)]
 [!code-vb[ApplicationStartupSnippets#HandleStartupCODEBEHIND](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ApplicationStartupSnippets/visualbasic/application.xaml.vb#handlestartupcodebehind)]  
  
 [!INCLUDE[TLA#tla_xbap#plural](~/includes/tlasharptla-xbapsharpplural-md.md)]<span data-ttu-id="83137-517"> 取得しを起動するためにコマンドライン引数を処理できません[!INCLUDE[TLA#tla_clickonce](~/includes/tlasharptla-clickonce-md.md)]展開 (を参照してください[WPF アプリケーション (WPF) を展開する](~/docs/framework/wpf/app-development/deploying-a-wpf-application-wpf.md))。</span><span class="sxs-lookup"><span data-stu-id="83137-517"> cannot retrieve and process command-line arguments because they are launched with [!INCLUDE[TLA#tla_clickonce](~/includes/tlasharptla-clickonce-md.md)] deployment (see [Deploying a WPF Application (WPF)](~/docs/framework/wpf/app-development/deploying-a-wpf-application-wpf.md)).</span></span> <span data-ttu-id="83137-518">ただし、起動に使用される URL のクエリ文字列パラメーターを取得して処理することはできます。</span><span class="sxs-lookup"><span data-stu-id="83137-518">However, they can retrieve and process query string parameters from the URLs that are used to launch them.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Application.OnStartup(System.Windows.StartupEventArgs)" />
        <altmember cref="E:System.Windows.Application.Exit" />
      </Docs>
    </Member>
    <Member MemberName="StartupUri">
      <MemberSignature Language="C#" Value="public Uri StartupUri { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri StartupUri" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Application.StartupUri" />
      <MemberSignature Language="VB.NET" Value="Public Property StartupUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ StartupUri { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="83137-519">アプリケーションの起動時に自動的に表示される UI を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-519">Gets or sets a UI that is automatically shown when an application starts.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="83137-520">A<see cref="T:System.Uri" />アプリケーションの起動時に自動的に表示される UI を参照します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-520">A <see cref="T:System.Uri" /> that refers to the UI that automatically opens when an application starts.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83137-521">使用することができます<xref:System.Windows.Application.StartupUri%2A>をアプリケーションの起動時に自動的に UI リソースを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="83137-521">You can use <xref:System.Windows.Application.StartupUri%2A> to automatically load a UI resource when an application starts.</span></span>  
  
 <span data-ttu-id="83137-522">次の表は、読み込むことができる UI リソースの種類やに開かれたウィンドウの種類として設定できます。 これらのリソース アプリケーションの種類、<xref:System.Windows.Application.StartupUri%2A>です。</span><span class="sxs-lookup"><span data-stu-id="83137-522">The following table shows the types of UI resources that can be loaded, the type of window they are opened into, and the type of application that these resources can be set as the <xref:System.Windows.Application.StartupUri%2A>.</span></span>  
  
|<span data-ttu-id="83137-523">型</span><span class="sxs-lookup"><span data-stu-id="83137-523">Type</span></span>|<span data-ttu-id="83137-524">ウィンドウ</span><span class="sxs-lookup"><span data-stu-id="83137-524">Window</span></span>|<span data-ttu-id="83137-525">アプリケーションの種類</span><span class="sxs-lookup"><span data-stu-id="83137-525">Application type</span></span>|  
|----------|------------|----------------------|  
|<xref:System.Windows.Window>|<xref:System.Windows.Window>|<span data-ttu-id="83137-526">スタンドアロンのみ</span><span class="sxs-lookup"><span data-stu-id="83137-526">Standalone only</span></span>|  
|<xref:System.Windows.Navigation.NavigationWindow>|<xref:System.Windows.Navigation.NavigationWindow>|<span data-ttu-id="83137-527">スタンドアロンのみ</span><span class="sxs-lookup"><span data-stu-id="83137-527">Standalone only</span></span>|  
|<xref:System.Windows.Controls.Page>|<xref:System.Windows.Navigation.NavigationWindow>|<span data-ttu-id="83137-528">スタンドアロン/ブラウザーでホストされます。</span><span class="sxs-lookup"><span data-stu-id="83137-528">Standalone/browser-hosted</span></span>|  
|<xref:System.Windows.Controls.UserControl>|<xref:System.Windows.Navigation.NavigationWindow>|<span data-ttu-id="83137-529">スタンドアロン/ブラウザーでホストされます。</span><span class="sxs-lookup"><span data-stu-id="83137-529">Standalone/browser-hosted</span></span>|  
|<xref:System.Windows.Documents.FlowDocument>|<xref:System.Windows.Navigation.NavigationWindow>|<span data-ttu-id="83137-530">スタンドアロン/ブラウザーでホストされます。</span><span class="sxs-lookup"><span data-stu-id="83137-530">Standalone/browser-hosted</span></span>|  
|<xref:System.Windows.Navigation.PageFunction%601>|<xref:System.Windows.Navigation.NavigationWindow>|<span data-ttu-id="83137-531">スタンドアロン/ブラウザーでホストされます。</span><span class="sxs-lookup"><span data-stu-id="83137-531">Standalone/browser-hosted</span></span>|  
  
 <span data-ttu-id="83137-532">通常、設定、<xref:System.Windows.Application.StartupUri%2A>プロパティ宣言で[!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)]です。</span><span class="sxs-lookup"><span data-stu-id="83137-532">Typically, you set the <xref:System.Windows.Application.StartupUri%2A> property declaratively in [!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)].</span></span> <span data-ttu-id="83137-533">ただし、設定することができます<xref:System.Windows.Application.StartupUri%2A>プログラムからこのような<xref:System.Windows.Application.Startup>イベント ハンドラーは、実行時に必要な UI リソースを読み込むことができますのみアプリケーションの場合に便利です。</span><span class="sxs-lookup"><span data-stu-id="83137-533">However, you can set <xref:System.Windows.Application.StartupUri%2A> programmatically, such as from a <xref:System.Windows.Application.Startup> event handler, which is useful if for applications that can only load the necessary UI resources at run time.</span></span> <span data-ttu-id="83137-534">たとえば、アプリケーションは、UI リソースの名前が構成ファイルに格納されている場合、そのリソースを読み込むために実行時まで待つことがあります。</span><span class="sxs-lookup"><span data-stu-id="83137-534">For example, an application might wait until run time to load its resources if the name of the UI resource is stored in a configuration file.</span></span>  
  
 <span data-ttu-id="83137-535">設定するかどうか<xref:System.Windows.Application.StartupUri%2A>まで対応する UI リソースが読み込まれていません宣言またはプログラムによって、後に、<xref:System.Windows.Application.Startup>イベントを処理します。</span><span class="sxs-lookup"><span data-stu-id="83137-535">Whether you set <xref:System.Windows.Application.StartupUri%2A> declaratively or programmatically, the corresponding UI resource is not loaded until after the <xref:System.Windows.Application.Startup> event is handled.</span></span> <span data-ttu-id="83137-536">その結果、する必要はありませんアクセスされたウィンドウから、<xref:System.Windows.Application.Windows%2A>プロパティまたは<xref:System.Windows.Application.MainWindow%2A>プロパティを処理するとき<xref:System.Windows.Application.Startup>です。</span><span class="sxs-lookup"><span data-stu-id="83137-536">Consequently, you won't have access to the resulting window from either the <xref:System.Windows.Application.Windows%2A> property or the <xref:System.Windows.Application.MainWindow%2A> property when handling <xref:System.Windows.Application.Startup>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="83137-537">
            <see cref="P:System.Windows.Application.StartupUri" /> に null の値が設定されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-537">
              <see cref="P:System.Windows.Application.StartupUri" /> is set with a value of null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable">
      <MemberSignature Language="C#" Value="bool IQueryAmbient.IsAmbientPropertyAvailable (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Application.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function IsAmbientPropertyAvailable (propertyName As String) As Boolean Implements IQueryAmbient.IsAmbientPropertyAvailable" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(System::String ^ propertyName) = System::Windows::Markup::IQueryAmbient::IsAmbientPropertyAvailable;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">
          <span data-ttu-id="83137-538">要求されたアンビエント プロパティの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-538">The name of the requested ambient property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83137-539">指定されたアンビエント プロパティを現在のスコープで使用できるかどうかを照会します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-539">Queries for whether a specified ambient property is available in the current scope.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="83137-540">要求されたアンビエント プロパティを使用できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-540">
              <see langword="true" /> if the requested ambient property is available; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83137-541">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="83137-541">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="83137-542">これは、<xref:System.Windows.Application> のインスタンスが <xref:System.Windows.Markup.IQueryAmbient> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="83137-542">It can be used only when the <xref:System.Windows.Application> instance is cast to an <xref:System.Windows.Markup.IQueryAmbient> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Markup.IQueryAmbient" />
      </Docs>
    </Member>
    <Member MemberName="TryFindResource">
      <MemberSignature Language="C#" Value="public object TryFindResource (object resourceKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object TryFindResource(object resourceKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Application.TryFindResource(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFindResource (resourceKey As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ TryFindResource(System::Object ^ resourceKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceKey" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="resourceKey">
          <span data-ttu-id="83137-543">検索するリソースの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-543">The name of the resource to find.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83137-544">指定したリソースを検索します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-544">Searches for the specified resource.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="83137-545">要求されたリソース オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-545">The requested resource object.</span>
          </span>
          <span data-ttu-id="83137-546">要求したリソースが見つからない場合は、null 参照が返されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-546">If the requested resource is not found, a null reference is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83137-547"><xref:System.Windows.Application.TryFindResource%2A> アプリケーション スコープの指定されたリソースのリソースでは、まずします。</span><span class="sxs-lookup"><span data-stu-id="83137-547"><xref:System.Windows.Application.TryFindResource%2A> will first look in application-scope resources for the specified resource.</span></span> <span data-ttu-id="83137-548">アプリケーション スコープのリソースで管理されて<xref:System.Windows.Application>から公開されると、<xref:System.Windows.Application.Resources%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="83137-548">Application-scope resources are managed by <xref:System.Windows.Application>, and are exposed from the <xref:System.Windows.Application.Resources%2A> property.</span></span> <span data-ttu-id="83137-549">アプリケーション スコープのリソースのセットに指定されたリソースが見つからない場合<xref:System.Windows.Application.TryFindResource%2A>次へは、システム リソースを検索します。</span><span class="sxs-lookup"><span data-stu-id="83137-549">If the specified resource is not found in the set of application-scope resources, <xref:System.Windows.Application.TryFindResource%2A> then next searches the system resources.</span></span> <span data-ttu-id="83137-550">システム リソースは、シェル リソースが、ユーザーが定義されているし、色、フォント、およびシェル構成が含まれます。</span><span class="sxs-lookup"><span data-stu-id="83137-550">System resources are shell resources defined by the user, and include colors, fonts, and shell configurations.</span></span> <span data-ttu-id="83137-551">これらは、 <xref:System.Windows.SystemColors>、 <xref:System.Windows.SystemFonts>、および<xref:System.Windows.SystemParameters>型をそれぞれ、静的なプロパティです。</span><span class="sxs-lookup"><span data-stu-id="83137-551">These are exposed from the <xref:System.Windows.SystemColors>, <xref:System.Windows.SystemFonts>, and <xref:System.Windows.SystemParameters> types, respectively, as static properties.</span></span> <span data-ttu-id="83137-552">使用する<xref:System.Windows.Application.TryFindResource%2A>を取得するには、これらの型もリソース キー プロパティを公開に渡されるように設計された<xref:System.Windows.Application.TryFindResource%2A>。 たとえば、<xref:System.Windows.SystemParameters.IconWidthKey%2A>です。</span><span class="sxs-lookup"><span data-stu-id="83137-552">To use <xref:System.Windows.Application.TryFindResource%2A> to acquire them, these types also expose resource key properties that are designed to be passed to <xref:System.Windows.Application.TryFindResource%2A>; for example, <xref:System.Windows.SystemParameters.IconWidthKey%2A>.</span></span>  
  
 <span data-ttu-id="83137-553"><xref:System.Windows.Application.TryFindResource%2A>オブジェクトを返しますリソースが見つかった場合は適切な型に返される値をキャストする必要があります。</span><span class="sxs-lookup"><span data-stu-id="83137-553">Because <xref:System.Windows.Application.TryFindResource%2A> returns an object, you must cast the returned value to the appropriate type if the resource is found.</span></span>  
  
 <span data-ttu-id="83137-554">このメソッドはスレッド セーフであるため、任意のスレッドから呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="83137-554">This method is thread safe and can be called from any thread.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83137-555">次の例は、使用する方法を示しています。<xref:System.Windows.Application.TryFindResource%2A>リソースを取得します。</span><span class="sxs-lookup"><span data-stu-id="83137-555">The following example shows how to use <xref:System.Windows.Application.TryFindResource%2A> to acquire a resource.</span></span>  
  
 [!code-xaml[ApplicationTryFindResourceSnippets#ApplicationCallTryFindResourceXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/ApplicationTryFindResourceSnippets/CSharp/App.xaml#applicationcalltryfindresourcexaml)]  
  
 [!code-csharp[ApplicationTryFindResourceSnippets#ApplicationCallTryFindResourceCODEBEHIND1](~/samples/snippets/csharp/VS_Snippets_Wpf/ApplicationTryFindResourceSnippets/CSharp/MainWindow.xaml.cs#applicationcalltryfindresourcecodebehind1)]
 [!code-vb[ApplicationTryFindResourceSnippets#ApplicationCallTryFindResourceCODEBEHIND1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ApplicationTryFindResourceSnippets/visualbasic/mainwindow.xaml.vb#applicationcalltryfindresourcecodebehind1)]  
[!code-csharp[ApplicationTryFindResourceSnippets#ApplicationCallTryFindResourceCODEBEHIND2](~/samples/snippets/csharp/VS_Snippets_Wpf/ApplicationTryFindResourceSnippets/CSharp/MainWindow.xaml.cs#applicationcalltryfindresourcecodebehind2)]
[!code-vb[ApplicationTryFindResourceSnippets#ApplicationCallTryFindResourceCODEBEHIND2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ApplicationTryFindResourceSnippets/visualbasic/mainwindow.xaml.vb#applicationcalltryfindresourcecodebehind2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Application.FindResource(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Windows">
      <MemberSignature Language="C#" Value="public System.Windows.WindowCollection Windows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.WindowCollection Windows" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Application.Windows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Windows As WindowCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::WindowCollection ^ Windows { System::Windows::WindowCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.WindowCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="83137-556">アプリケーションでインスタンス化されたウィンドウを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-556">Gets the instantiated windows in an application.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="83137-557">現在の <see cref="T:System.Windows.WindowCollection" /> のすべてのウィンドウ オブジェクトへの参照を格納している <see cref="T:System.AppDomain" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="83137-557">A <see cref="T:System.Windows.WindowCollection" /> that contains references to all window objects in the current <see cref="T:System.AppDomain" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83137-558">A<xref:System.Windows.Window>に参照が自動的に追加<xref:System.Windows.Application.Windows%2A>でウィンドウがインスタンス化するとすぐに、[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]スレッド以外のスレッドが追加されませんワーカーによって作成されたウィンドウです。</span><span class="sxs-lookup"><span data-stu-id="83137-558">A <xref:System.Windows.Window> reference is automatically added to <xref:System.Windows.Application.Windows%2A> as soon as a window is instantiated on the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] thread; windows that are created by worker threads are not added.</span></span> <span data-ttu-id="83137-559">A<xref:System.Windows.Window>参照が自動的に削除後、<xref:System.Windows.Window.Closing>イベントが処理されたとする前にその<xref:System.Windows.Window.Closed>イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="83137-559">A <xref:System.Windows.Window> reference is automatically removed after its <xref:System.Windows.Window.Closing> event has been handled and before its <xref:System.Windows.Window.Closed> event is raised.</span></span>  
  
 <span data-ttu-id="83137-560">既定では、最初の項目を追加する、<xref:System.Windows.Application.Windows%2A>プロパティになります、<xref:System.Windows.Application.MainWindow%2A>です。</span><span class="sxs-lookup"><span data-stu-id="83137-560">By default, the first item added to the <xref:System.Windows.Application.Windows%2A> property becomes the <xref:System.Windows.Application.MainWindow%2A>.</span></span>  
  
 <span data-ttu-id="83137-561">このプロパティは、作成したスレッドからのみ使用可能な<xref:System.Windows.Application>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="83137-561">This property is available only from the thread that created the <xref:System.Windows.Application> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83137-562">次の例では、列挙、<xref:System.Windows.Application.Windows%2A>に共通する最上位レベルの Windows メニューをビルド プロパティ[!INCLUDE[TLA#tla_mdi](~/includes/tlasharptla-mdi-md.md)]のようなアプリケーション[!INCLUDE[TLA#tla_xl](~/includes/tlasharptla-xl-md.md)]などの複数インスタンスのシングル ドキュメント インターフェイス (SDI) アプリケーションまたは[!INCLUDE[TLA#tla_word](~/includes/tlasharptla-word-md.md)].</span><span class="sxs-lookup"><span data-stu-id="83137-562">The following example demonstrates how to enumerate the <xref:System.Windows.Application.Windows%2A> property to build a top-level Windows menu, which is common to [!INCLUDE[TLA#tla_mdi](~/includes/tlasharptla-mdi-md.md)] applications like [!INCLUDE[TLA#tla_xl](~/includes/tlasharptla-xl-md.md)], or multiple-instance Single Document Interface (SDI) applications like [!INCLUDE[TLA#tla_word](~/includes/tlasharptla-word-md.md)].</span></span>  
  
 [!code-csharp[ApplicationWindowsSnippets#WindowMenuItemCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/ApplicationWindowsSnippets/CSharp/WindowMenuItem.cs#windowmenuitemcode)]
 [!code-vb[ApplicationWindowsSnippets#WindowMenuItemCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ApplicationWindowsSnippets/visualbasic/windowmenuitem.vb#windowmenuitemcode)]  
  
 [!code-xaml[ApplicationWindowsSnippets#MainWindowSetWindowsXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/ApplicationWindowsSnippets/CSharp/MainWindow.xaml#mainwindowsetwindowsxaml)]  
  
 [!code-csharp[ApplicationWindowsSnippets#MainWindowSetWindowsCODEBEHIND1](~/samples/snippets/csharp/VS_Snippets_Wpf/ApplicationWindowsSnippets/CSharp/MainWindow.xaml.cs#mainwindowsetwindowscodebehind1)]
 [!code-vb[ApplicationWindowsSnippets#MainWindowSetWindowsCODEBEHIND1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ApplicationWindowsSnippets/visualbasic/mainwindow.xaml.vb#mainwindowsetwindowscodebehind1)]  
[!code-csharp[ApplicationWindowsSnippets#MainWindowSetWindowsCODEBEHIND2](~/samples/snippets/csharp/VS_Snippets_Wpf/ApplicationWindowsSnippets/CSharp/MainWindow.xaml.cs#mainwindowsetwindowscodebehind2)]
[!code-vb[ApplicationWindowsSnippets#MainWindowSetWindowsCODEBEHIND2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ApplicationWindowsSnippets/visualbasic/mainwindow.xaml.vb#mainwindowsetwindowscodebehind2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Window" />
      </Docs>
    </Member>
  </Members>
</Type>