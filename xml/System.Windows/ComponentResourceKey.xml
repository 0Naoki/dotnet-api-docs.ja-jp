<Type Name="ComponentResourceKey" FullName="System.Windows.ComponentResourceKey">
  <TypeSignature Language="C#" Value="public class ComponentResourceKey : System.Windows.ResourceKey" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ComponentResourceKey extends System.Windows.ResourceKey" />
  <TypeSignature Language="DocId" Value="T:System.Windows.ComponentResourceKey" />
  <TypeSignature Language="VB.NET" Value="Public Class ComponentResourceKey&#xA;Inherits ResourceKey" />
  <TypeSignature Language="C++ CLI" Value="public ref class ComponentResourceKey : System::Windows::ResourceKey" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.ResourceKey</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Markup.ComponentResourceKeyConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="d0451-101">外部アセンブリ内のクラス名、および追加識別子に基づいてリソース キーを定義または参照します。</span><span class="sxs-lookup"><span data-stu-id="d0451-101">Defines or references resource keys based on class names in external assemblies, as well as an additional identifier.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0451-102">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]についてを参照してください[ComponentResourceKey マークアップ拡張機能](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md)します。</span><span class="sxs-lookup"><span data-stu-id="d0451-102">For [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] information, see [ComponentResourceKey Markup Extension](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md).</span></span>  
  
 <span data-ttu-id="d0451-103">このクラスは、アセンブリと識別子の型に基づいたキーを作成するために便利ですが、オブジェクトの種類を実装します。</span><span class="sxs-lookup"><span data-stu-id="d0451-103">This class implements an object type that is useful for creating keys that are based on types in assemblies plus an identifier.</span></span> <span data-ttu-id="d0451-104">定義または型を参照しているため、特定の要求する必要はありません<xref:System.Windows.ResourceDictionary>、リソースの 1 つ以上のセットがそれぞれの型によって差別化されたアセンブリであり、<xref:System.Windows.ComponentResourceKey>です。</span><span class="sxs-lookup"><span data-stu-id="d0451-104">Because you define or reference the type, you do not need to request a specific <xref:System.Windows.ResourceDictionary>, and more than one set of resources can exist in the assembly, each differentiated by the type of their <xref:System.Windows.ComponentResourceKey>.</span></span>  
  
 <span data-ttu-id="d0451-105">2 つの方法を定義する、<xref:System.Windows.ComponentResourceKey>です。</span><span class="sxs-lookup"><span data-stu-id="d0451-105">There are two ways to define a <xref:System.Windows.ComponentResourceKey>.</span></span>  
  
 <span data-ttu-id="d0451-106">返す、コントロール クラス コードに静的なプロパティを定義するには、簡単にアクセスできるキーにする場合は、<xref:System.Windows.ComponentResourceKey>で構築された、<xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A>外部リソース アセンブリに存在して、<xref:System.Windows.ComponentResourceKey.ResourceId%2A>です。</span><span class="sxs-lookup"><span data-stu-id="d0451-106">If you want an easily accessible key, you can define a static property on your control class code that returns a <xref:System.Windows.ComponentResourceKey>, constructed with a <xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A> that exists in the external resource assembly, and a <xref:System.Windows.ComponentResourceKey.ResourceId%2A>.</span></span> <span data-ttu-id="d0451-107">アセンブリでは、カスタムの元の外部リソース アセンブリをスワップしてコントロールの代替の既定のスタイルを定義するため、キーを使用できます。</span><span class="sxs-lookup"><span data-stu-id="d0451-107">The key can be used for defining alternate default styles for controls in an assembly, by swapping the original external resource assembly for a custom one.</span></span> <span data-ttu-id="d0451-108">大きなコントロール スタイルまたはテンプレートのカスタマイズのエントリ ポイントを公開する内で名前付きリソースの一部を定義することもできます。</span><span class="sxs-lookup"><span data-stu-id="d0451-108">You can also define a named resource part within a larger control style or template to expose a customization entry point.</span></span> <span data-ttu-id="d0451-109">これは、コントロールのテーマのリソース ディクショナリを定義している場合に特に便利です。</span><span class="sxs-lookup"><span data-stu-id="d0451-109">This is particularly useful if you are defining a theme resource dictionary for your control.</span></span>  
  
 <span data-ttu-id="d0451-110">使用することも、 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] [ComponentResourceKey マークアップ拡張機能](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md)キーの厳密でないインスタンスを作成するには、直接冗語構文にします。</span><span class="sxs-lookup"><span data-stu-id="d0451-110">You can also use the [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] [ComponentResourceKey Markup Extension](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md) in verbose syntax directly to create a loose instance of the key.</span></span> <span data-ttu-id="d0451-111">これは、カスタマイズに見つけにくい、他のアセンブリのプライベート リソースを宣言する場合に便利です。</span><span class="sxs-lookup"><span data-stu-id="d0451-111">This is useful if you want to declare private resources from other assemblies that are less discoverable to customize.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d0451-112"><see cref="T:System.Windows.ComponentResourceKey" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="d0451-112">Initializes a new instance of the <see cref="T:System.Windows.ComponentResourceKey" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComponentResourceKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ComponentResourceKey.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ComponentResourceKey();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d0451-113"><see cref="T:System.Windows.ComponentResourceKey" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="d0451-113">Initializes a new instance of the <see cref="T:System.Windows.ComponentResourceKey" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0451-114">既定のコンス トラクターを一般的に使用しないため、<xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A>値および<xref:System.Windows.ComponentResourceKey.ResourceId%2A>値が必要なの適切な初期化します。</span><span class="sxs-lookup"><span data-stu-id="d0451-114">The default constructor is not generally used, because a <xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A> value and <xref:System.Windows.ComponentResourceKey.ResourceId%2A> value are required for proper initialization.</span></span> <span data-ttu-id="d0451-115">サポートするには、主に既定のコンス トラクターが存在する[ComponentResourceKey マークアップ拡張機能](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md)名前付きパラメーターの形式で XAML を使用します。</span><span class="sxs-lookup"><span data-stu-id="d0451-115">The default constructor exists primarily to support [ComponentResourceKey Markup Extension](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md) XAML usage in named parameter form.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComponentResourceKey (Type typeInTargetAssembly, object resourceId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type typeInTargetAssembly, object resourceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ComponentResourceKey.#ctor(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeInTargetAssembly As Type, resourceId As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ComponentResourceKey(Type ^ typeInTargetAssembly, System::Object ^ resourceId);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeInTargetAssembly" Type="System.Type" />
        <Parameter Name="resourceId" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="typeInTargetAssembly"><span data-ttu-id="d0451-116">リソース キーを定義する型。</span><span class="sxs-lookup"><span data-stu-id="d0451-116">The type that defines the resource key.</span></span></param>
        <param name="resourceId"><span data-ttu-id="d0451-117">この <see cref="T:System.Windows.ComponentResourceKey" /> を <c>typeInTargetAssembly</c> 型に関連付けられた他のキーと区別する一意の識別子。</span><span class="sxs-lookup"><span data-stu-id="d0451-117">A unique identifier to differentiate this <see cref="T:System.Windows.ComponentResourceKey" /> from others associated with the <c>typeInTargetAssembly</c> type.</span></span></param>
        <summary><span data-ttu-id="d0451-118">キーを定義する <see cref="T:System.Windows.ComponentResourceKey" /> と、追加のリソース識別子として使用するオブジェクトを指定して、<see cref="T:System.Type" /> の新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="d0451-118">Initializes a new instance of a <see cref="T:System.Windows.ComponentResourceKey" /> , specifying the <see cref="T:System.Type" /> that defines the key, and an object to use as an additional resource identifier.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0451-119">このコンス トラクターは、最初の中で最も重要なシナリオで、2 つのシナリオに対して存在します。</span><span class="sxs-lookup"><span data-stu-id="d0451-119">This constructor exist for two scenarios, with the first scenario being the most important:</span></span>  
  
-   <span data-ttu-id="d0451-120">作成をサポートしている、<xref:System.Windows.ComponentResourceKey>し、カスタム コントロール クラスにパブリックな静的フィールドとして公開されます。</span><span class="sxs-lookup"><span data-stu-id="d0451-120">Supports creating a <xref:System.Windows.ComponentResourceKey> that is then exposed as a public static field on a custom control class.</span></span> <span data-ttu-id="d0451-121">これが簡略化から、テンプレートで定義されているリソースへのアクセス制御の`{x:Static}`テンプレート プロパティの値の使用法。</span><span class="sxs-lookup"><span data-stu-id="d0451-121">This simplifies a control's access to its own defined resources in the template through `{x:Static}` usages for template property values.</span></span>  
  
-   <span data-ttu-id="d0451-122">サポート[ComponentResourceKey マークアップ拡張機能](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md)コンポーネント リソースを参照するサード パーティの使用可能な 1 つの方法は、位置指定パラメーター形式で XAML を使用します。</span><span class="sxs-lookup"><span data-stu-id="d0451-122">Supports [ComponentResourceKey Markup Extension](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md) XAML usage in positional parameter form, which is one technique available for third parties that reference a component resource.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d0451-123">次の例を作成、<xref:System.Windows.ComponentResourceKey>スタイルのカスタマイズのエントリ ポイントを提供する、コントロール クラスの静的なキーとして、公開されています。</span><span class="sxs-lookup"><span data-stu-id="d0451-123">The following example creates a <xref:System.Windows.ComponentResourceKey> that is then exposed as a static key of a control class to provide a style customization entry point.</span></span>  
  
 [!code-csharp[CorePseudocode#CRKCode](~/samples/snippets/csharp/VS_Snippets_Wpf/CorePseudocode/CSharp/corepseudocode.cs#crkcode)]
 [!code-vb[CorePseudocode#CRKCode](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CorePseudocode/visualbasic/corepseudocode.vb#crkcode)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Assembly">
      <MemberSignature Language="C#" Value="public override System.Reflection.Assembly Assembly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Assembly Assembly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ComponentResourceKey.Assembly" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Assembly As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::Assembly ^ Assembly { System::Reflection::Assembly ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d0451-124">このキーに関連付けられている値を検索するアセンブリのディクショナリを示すアセンブリ オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="d0451-124">Gets the assembly object that indicates which assembly's dictionary to look in for the value associated with this key.</span></span></summary>
        <value><span data-ttu-id="d0451-125">リフレクション クラスとして取得されたアセンブリ。</span><span class="sxs-lookup"><span data-stu-id="d0451-125">The retrieved assembly, as a reflection class.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ComponentResourceKey.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="d0451-126">現在の <see cref="T:System.Windows.ComponentResourceKey" /> と比較するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d0451-126">Object to compare with the current <see cref="T:System.Windows.ComponentResourceKey" />.</span></span></param>
        <summary><span data-ttu-id="d0451-127">指定されたオブジェクトが現在の <see cref="T:System.Windows.ComponentResourceKey" /> と等しいかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="d0451-127">Determines whether the provided object is equal to the current <see cref="T:System.Windows.ComponentResourceKey" />.</span></span></summary>
        <returns>
          <span data-ttu-id="d0451-128">オブジェクトが等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d0451-128"><see langword="true" /> if the objects are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0451-129">2 つのキーは、同じ値をすべてイミディ エイト設定可能なプロパティがある場合、等しい (<xref:System.Windows.ComponentResourceKey.ResourceId%2A>、 <xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A>)。</span><span class="sxs-lookup"><span data-stu-id="d0451-129">Two keys are equal if they both have the same values for all their immediate settable properties (<xref:System.Windows.ComponentResourceKey.ResourceId%2A>, <xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A>).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ComponentResourceKey.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d0451-130">この <see cref="T:System.Windows.ComponentResourceKey" /> のハッシュ コードを返します。</span><span class="sxs-lookup"><span data-stu-id="d0451-130">Returns a hash code for this <see cref="T:System.Windows.ComponentResourceKey" />.</span></span></summary>
        <returns><span data-ttu-id="d0451-131">符号付き 32 ビット整数値。</span><span class="sxs-lookup"><span data-stu-id="d0451-131">A signed 32-bit integer value.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResourceId">
      <MemberSignature Language="C#" Value="public object ResourceId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ResourceId" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ComponentResourceKey.ResourceId" />
      <MemberSignature Language="VB.NET" Value="Public Property ResourceId As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ResourceId { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d0451-132">このキーをこの型に関連付けられている他のキーと区別する、一意の識別子を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="d0451-132">Gets or sets a unique identifier to differentiate this key from others associated with this type.</span></span></summary>
        <value><span data-ttu-id="d0451-133">一意の識別子。</span><span class="sxs-lookup"><span data-stu-id="d0451-133">A unique identifier.</span></span> <span data-ttu-id="d0451-134">通常、これは文字列です。</span><span class="sxs-lookup"><span data-stu-id="d0451-134">Typically this is a string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0451-135">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]についてを参照してください[ComponentResourceKey マークアップ拡張機能](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md)します。</span><span class="sxs-lookup"><span data-stu-id="d0451-135">For [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] information, see [ComponentResourceKey Markup Extension](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md).</span></span>  
  
 <span data-ttu-id="d0451-136">使用する文字列、通常、<xref:System.Windows.ComponentResourceKey.ResourceId%2A>に準拠している値、 [XamlName の文法](~/docs/framework/xaml-services/xamlname-grammar.md)です。</span><span class="sxs-lookup"><span data-stu-id="d0451-136">Typically, the string used for a <xref:System.Windows.ComponentResourceKey.ResourceId%2A> value conforms to the [XamlName Grammar](~/docs/framework/xaml-services/xamlname-grammar.md).</span></span>  
  
## Examples  
 <span data-ttu-id="d0451-137">次の例を使用する方法を示しています、<xref:System.Windows.ComponentResourceKey.ResourceId%2A>この型に関連付けられている他のユーザーからこのキーを区別するためにします。</span><span class="sxs-lookup"><span data-stu-id="d0451-137">The following example shows how to use the <xref:System.Windows.ComponentResourceKey.ResourceId%2A> to differentiate this key from others associated with this type.</span></span>  
  
 [!code-xaml[ColorPicker_snip#SliderStyle](~/samples/snippets/csharp/VS_Snippets_Wpf/ColorPicker_snip/CSharp/ColorPickerLib/Themes/generic.xaml#sliderstyle)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ComponentResourceKey.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d0451-138"><see cref="T:System.Windows.ComponentResourceKey" /> の文字列表現を取得します。</span><span class="sxs-lookup"><span data-stu-id="d0451-138">Gets the string representation of a <see cref="T:System.Windows.ComponentResourceKey" />.</span></span></summary>
        <returns><span data-ttu-id="d0451-139">文字列表現。</span><span class="sxs-lookup"><span data-stu-id="d0451-139">The string representation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeInTargetAssembly">
      <MemberSignature Language="C#" Value="public Type TypeInTargetAssembly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type TypeInTargetAssembly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ComponentResourceKey.TypeInTargetAssembly" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeInTargetAssembly As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ TypeInTargetAssembly { Type ^ get(); void set(Type ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d0451-140">リソース キーを定義する <see cref="T:System.Type" /> を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="d0451-140">Gets or sets the <see cref="T:System.Type" /> that defines the resource key.</span></span></summary>
        <value><span data-ttu-id="d0451-141">リソース キーを定義する型。</span><span class="sxs-lookup"><span data-stu-id="d0451-141">The type that defines the resource key.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0451-142">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]についてを参照してください[ComponentResourceKey マークアップ拡張機能](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md)します。</span><span class="sxs-lookup"><span data-stu-id="d0451-142">For [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] information, see [ComponentResourceKey Markup Extension](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md).</span></span>  
  
 <span data-ttu-id="d0451-143"><xref:System.Windows.ComponentResourceKey>外部アセンブリ、型を含むアセンブリをターゲット設定に基づくからアクセスされるリソースのキーを定義するカスタム コンポーネントで使用される要素。</span><span class="sxs-lookup"><span data-stu-id="d0451-143">The <xref:System.Windows.ComponentResourceKey> element is used by custom components to define keys for resources that are accessed from external assemblies, based on targeting an assembly that contains the type.</span></span> <span data-ttu-id="d0451-144">カスタム コンポーネントは、多くの場合、リソースがあるアセンブリに含める必要がありますのある新しい型を定義します。</span><span class="sxs-lookup"><span data-stu-id="d0451-144">Custom components often define new types which must be in the assembly where the resource is located.</span></span> <span data-ttu-id="d0451-145">通常、これらの型が他の実装を持っていないのルックアップの要件を満たすために、型にのみ存在、<xref:System.Windows.ComponentResourceKey>です。</span><span class="sxs-lookup"><span data-stu-id="d0451-145">Generally these types have no other implementation, the types only exist in order to satisfy the lookup requirements of a <xref:System.Windows.ComponentResourceKey>.</span></span>  
  
## Examples  
 <span data-ttu-id="d0451-146">次の例は、定義する方法を示します、<xref:System.Windows.ComponentResourceKey>など<xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A>と<xref:System.Windows.ComponentResourceKey.ResourceId%2A>を使用して、 [ComponentResourceKey マークアップ拡張機能](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md)します。</span><span class="sxs-lookup"><span data-stu-id="d0451-146">The following example shows how to define a <xref:System.Windows.ComponentResourceKey> including <xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A> and <xref:System.Windows.ComponentResourceKey.ResourceId%2A> using the [ComponentResourceKey Markup Extension](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md).</span></span> <span data-ttu-id="d0451-147">このリソース、外部アセンブリに配置し、アクセスできるにも同様に使用して、リソースを要求するキーを使用して<xref:System.Windows.ComponentResourceKey>要求にします。</span><span class="sxs-lookup"><span data-stu-id="d0451-147">This resource can then be placed in an external assembly and accessed by a key usage that requests the resource using an analogous <xref:System.Windows.ComponentResourceKey> in the request.</span></span>  
  
 [!code-xaml[ColorPicker_snip#SliderStyle](~/samples/snippets/csharp/VS_Snippets_Wpf/ColorPicker_snip/CSharp/ColorPickerLib/Themes/generic.xaml#sliderstyle)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>