<Type Name="ComponentResourceKey" FullName="System.Windows.ComponentResourceKey">
  <Metadata><Meta Name="ms.openlocfilehash" Value="968ee4b5d529d6a1783fc19e217d284f1d8c6591" /><Meta Name="ms.sourcegitcommit" Value="e7974886b08aa83a8fb461e8550f31a7d4331ee3" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="07/23/2019" /><Meta Name="ms.locfileid" Value="68399458" /></Metadata><TypeSignature Language="C#" Value="public class ComponentResourceKey : System.Windows.ResourceKey" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ComponentResourceKey extends System.Windows.ResourceKey" />
  <TypeSignature Language="DocId" Value="T:System.Windows.ComponentResourceKey" />
  <TypeSignature Language="VB.NET" Value="Public Class ComponentResourceKey&#xA;Inherits ResourceKey" />
  <TypeSignature Language="C++ CLI" Value="public ref class ComponentResourceKey : System::Windows::ResourceKey" />
  <TypeSignature Language="F#" Value="type ComponentResourceKey = class&#xA;    inherit ResourceKey" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.ResourceKey</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Markup.ComponentResourceKeyConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>外部アセンブリ内のクラス名、および追加識別子に基づいてリソース キーを定義または参照します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 詳細[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]については、「 [ComponentResourceKey Markup Extension](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md)」を参照してください。  
  
 このクラスは、アセンブリ内の型および識別子を基にしたキーの作成に役立つオブジェクト型を実装します。 型を定義または参照するため、特定<xref:System.Windows.ResourceDictionary>のを要求する必要はなく、アセンブリ内に複数のリソースのセットが存在し、それぞれ<xref:System.Windows.ComponentResourceKey>の型で区別されます。  
  
 を定義するには、 <xref:System.Windows.ComponentResourceKey>2 つの方法があります。  
  
 アクセスしやすいキーが必要な場合は、外部リソースアセンブリに存在するを<xref:System.Windows.ComponentResourceKey> <xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A>使用して構築されたを返すコントロールクラスコードの静的プロパティと、 <xref:System.Windows.ComponentResourceKey.ResourceId%2A>を定義できます。 キーを使用すると、アセンブリ内のコントロールに対して、カスタムの外部リソースアセンブリを交換することによって、代替の既定のスタイルを定義できます。 また、カスタマイズエントリポイントを公開するために、より大きなコントロールスタイルまたはテンプレート内に名前付きリソースパーツを定義することもできます。 これは、コントロールのテーマリソースディクショナリを定義する場合に特に便利です。  
  
 また、 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] [ComponentResourceKey マークアップ拡張機能](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md)を詳細構文で直接使用して、キーの緩いインスタンスを作成することもできます。 これは、カスタマイズするために探索が少ない他のアセンブリからプライベートリソースを宣言する場合に便利です。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Windows.ComponentResourceKey" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComponentResourceKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ComponentResourceKey.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ComponentResourceKey();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.ComponentResourceKey" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 パラメーターなしのコンストラクターは、適切な初期化に<xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A>値と<xref:System.Windows.ComponentResourceKey.ResourceId%2A>値が必要であるため、通常は使用されません。 パラメーターなしのコンストラクターは、主に、名前付きパラメーター形式での[ComponentResourceKey マークアップ拡張機能](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md)の XAML の使用をサポートするために存在します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComponentResourceKey (Type typeInTargetAssembly, object resourceId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type typeInTargetAssembly, object resourceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ComponentResourceKey.#ctor(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeInTargetAssembly As Type, resourceId As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ComponentResourceKey(Type ^ typeInTargetAssembly, System::Object ^ resourceId);" />
      <MemberSignature Language="F#" Value="new System.Windows.ComponentResourceKey : Type * obj -&gt; System.Windows.ComponentResourceKey" Usage="new System.Windows.ComponentResourceKey (typeInTargetAssembly, resourceId)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeInTargetAssembly" Type="System.Type" />
        <Parameter Name="resourceId" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="typeInTargetAssembly">リソース キーを定義する型。</param>
        <param name="resourceId">この <see cref="T:System.Windows.ComponentResourceKey" /> を <paramref name="typeInTargetAssembly" /> 型に関連付けられている他のキーと区別する一意の識別子。</param>
        <summary>キーを定義する <see cref="T:System.Windows.ComponentResourceKey" /> と、追加のリソース識別子として使用するオブジェクトを指定して、<see cref="T:System.Type" /> の新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンストラクターは2つのシナリオに存在し、最初のシナリオは最も重要です。  
  
-   カスタムコントロールクラス<xref:System.Windows.ComponentResourceKey>のパブリック静的フィールドとして公開されるの作成をサポートします。 これにより、テンプレートプロパティ値の使用によって`{x:Static}` 、テンプレート内の独自に定義されたリソースに対するコントロールのアクセスが簡単になります。  
  
-   位置指定パラメーター形式での[ComponentResourceKey マークアップ拡張](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md)XAML の使用をサポートします。これは、コンポーネントリソースを参照するサードパーティが使用できる1つの手法です。  
  
   
  
## Examples  
 次の例では<xref:System.Windows.ComponentResourceKey> 、スタイルのカスタマイズエントリポイントを提供するために、コントロールクラスの静的キーとして公開されるを作成します。  
  
 [!code-csharp[CorePseudocode#CRKCode](~/samples/snippets/csharp/VS_Snippets_Wpf/CorePseudocode/CSharp/corepseudocode.cs#crkcode)]
 [!code-vb[CorePseudocode#CRKCode](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CorePseudocode/visualbasic/corepseudocode.vb#crkcode)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Assembly">
      <MemberSignature Language="C#" Value="public override System.Reflection.Assembly Assembly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Assembly Assembly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ComponentResourceKey.Assembly" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Assembly As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::Assembly ^ Assembly { System::Reflection::Assembly ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Assembly : System.Reflection.Assembly" Usage="System.Windows.ComponentResourceKey.Assembly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このキーに関連付けられている値を検索するアセンブリのディクショナリを示すアセンブリ オブジェクトを取得します。</summary>
        <value>リフレクション クラスとして取得されたアセンブリ。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ComponentResourceKey.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="componentResourceKey.Equals o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">現在の <see cref="T:System.Windows.ComponentResourceKey" /> と比較するオブジェクト。</param>
        <summary>指定されたオブジェクトが現在の <see cref="T:System.Windows.ComponentResourceKey" /> と等しいかどうかを判断します。</summary>
        <returns>オブジェクトが等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 2つのキーは、すべての直接の設定可能なプロパティ (<xref:System.Windows.ComponentResourceKey.ResourceId%2A>、 <xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A>) に対して同じ値を持つ場合に等しくなります。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ComponentResourceKey.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="componentResourceKey.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>この <see cref="T:System.Windows.ComponentResourceKey" /> のハッシュ コードを返します。</summary>
        <returns>符号付き 32 ビット整数値。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResourceId">
      <MemberSignature Language="C#" Value="public object ResourceId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ResourceId" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ComponentResourceKey.ResourceId" />
      <MemberSignature Language="VB.NET" Value="Public Property ResourceId As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ResourceId { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ResourceId : obj with get, set" Usage="System.Windows.ComponentResourceKey.ResourceId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このキーをこの型に関連付けられている他のキーと区別する、一意の識別子を取得または設定します。</summary>
        <value>一意の識別子。 通常、これは文字列です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 詳細[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]については、「 [ComponentResourceKey Markup Extension](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md)」を参照してください。  
  
 通常、 <xref:System.Windows.ComponentResourceKey.ResourceId%2A>値に使用される文字列は、 [XamlName 文法](~/docs/framework/xaml-services/xamlname-grammar.md)に準拠しています。  
  
## Examples  
 次の例は、を使用し<xref:System.Windows.ComponentResourceKey.ResourceId%2A>て、このキーをこの型に関連付けられている他のキーと区別する方法を示しています。  
  
 [!code-xaml[ColorPicker_snip#SliderStyle](~/samples/snippets/csharp/VS_Snippets_Wpf/ColorPicker_snip/CSharp/ColorPickerLib/Themes/generic.xaml#sliderstyle)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ComponentResourceKey.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="componentResourceKey.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.ComponentResourceKey" /> の文字列表現を取得します。</summary>
        <returns>文字列表現。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeInTargetAssembly">
      <MemberSignature Language="C#" Value="public Type TypeInTargetAssembly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type TypeInTargetAssembly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ComponentResourceKey.TypeInTargetAssembly" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeInTargetAssembly As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ TypeInTargetAssembly { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TypeInTargetAssembly : Type with get, set" Usage="System.Windows.ComponentResourceKey.TypeInTargetAssembly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>リソース キーを定義する <see cref="T:System.Type" /> を取得または設定します。</summary>
        <value>リソース キーを定義する型。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 詳細[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]については、「 [ComponentResourceKey Markup Extension](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md)」を参照してください。  
  
 <xref:System.Windows.ComponentResourceKey>要素は、外部アセンブリからアクセスされるリソースのキーを定義するためにカスタムコンポーネントによって使用されます。これは、その型を含むアセンブリを対象とすることに基づいて行われます。 カスタムコンポーネントでは、多くの場合、リソースが配置されているアセンブリ内に存在する必要がある新しい型を定義します。 通常、これらの型には他の実装はありません。型は、 <xref:System.Windows.ComponentResourceKey>の参照要件を満たすためにのみ存在します。  
  
## Examples  
 次の<xref:System.Windows.ComponentResourceKey>例は、 [ComponentResourceKey マークアップ拡張機能](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md) <xref:System.Windows.ComponentResourceKey.ResourceId%2A>を使用して、を含む<xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A>を定義する方法を示しています。 このリソースは外部アセンブリに配置され、要求で類似<xref:System.Windows.ComponentResourceKey>したを使用してリソースを要求するキー使用法によってアクセスされます。  
  
 [!code-xaml[ColorPicker_snip#SliderStyle](~/samples/snippets/csharp/VS_Snippets_Wpf/ColorPicker_snip/CSharp/ColorPickerLib/Themes/generic.xaml#sliderstyle)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>