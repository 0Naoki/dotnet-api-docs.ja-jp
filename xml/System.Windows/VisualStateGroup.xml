<Type Name="VisualStateGroup" FullName="System.Windows.VisualStateGroup">
  <Metadata><Meta Name="ms.openlocfilehash" Value="99374b25565fd88ac0348a8ba3946202e9ec050a" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69432768" /></Metadata><TypeSignature Language="C#" Value="public class VisualStateGroup : System.Windows.DependencyObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit VisualStateGroup extends System.Windows.DependencyObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.VisualStateGroup" />
  <TypeSignature Language="VB.NET" Value="Public Class VisualStateGroup&#xA;Inherits DependencyObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class VisualStateGroup : System::Windows::DependencyObject" />
  <TypeSignature Language="F#" Value="type VisualStateGroup = class&#xA;    inherit DependencyObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("States")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.RuntimeNameProperty("Name")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="06c81-101">一度に 1 つしか選択できない <see cref="T:System.Windows.VisualState" /> オブジェクトと、ある状態から別の状態に遷移するために使用する <see cref="T:System.Windows.VisualTransition" /> オブジェクトを格納します。</span><span class="sxs-lookup"><span data-stu-id="06c81-101">Contains mutually exclusive <see cref="T:System.Windows.VisualState" /> objects and <see cref="T:System.Windows.VisualTransition" /> objects that are used to move from one state to another.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06c81-102">各<xref:System.Windows.VisualStateGroup>には、オブジェクト<xref:System.Windows.VisualState>のコレクションが含まれています。</span><span class="sxs-lookup"><span data-stu-id="06c81-102">Each <xref:System.Windows.VisualStateGroup> contains a collection of <xref:System.Windows.VisualState> objects.</span></span> <span data-ttu-id="06c81-103">に<xref:System.Windows.VisualState>は、コントロールが<xref:System.Windows.Media.Animation.Storyboard>特定の状態にある場合に、コントロールの外観がどのように変化するかを指定するオブジェクトのコレクションが格納されます。</span><span class="sxs-lookup"><span data-stu-id="06c81-103">A <xref:System.Windows.VisualState> contains a collection of <xref:System.Windows.Media.Animation.Storyboard> objects that specify how the control's appearance changes when the control is in a certain state.</span></span> <span data-ttu-id="06c81-104">たとえば、が押さ<xref:System.Windows.Controls.Button>れているときとは異なる方法で押されていると、が若干異なる場合があります。</span><span class="sxs-lookup"><span data-stu-id="06c81-104">For example, a <xref:System.Windows.Controls.Button> might have a slightly different appearance when it is pressed than when it is not pressed.</span></span> <span data-ttu-id="06c81-105">が押された<xref:System.Windows.Controls.Button>とき (`"Pressed"`) と (`"Normal"`) ではない場合に、が定義する2つの状態。</span><span class="sxs-lookup"><span data-stu-id="06c81-105">Two states that the <xref:System.Windows.Controls.Button> defines correspond to when it is pressed (`"Pressed"`) and when it is not (`"Normal"`).</span></span>  
  
 <span data-ttu-id="06c81-106">コントロールに<xref:System.Windows.VisualState>を追加するには、 `VisualStateManager.VisualStateGroups`コントロールの添付プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="06c81-106">You add <xref:System.Windows.VisualState> to a control by setting the `VisualStateManager.VisualStateGroups` attached property on the control.</span></span> <span data-ttu-id="06c81-107">相互に排他的な状態を同じ<xref:System.Windows.VisualStateGroup>に配置します。</span><span class="sxs-lookup"><span data-stu-id="06c81-107">You put states that are mutually exclusive to each other in the same <xref:System.Windows.VisualStateGroup>.</span></span> <span data-ttu-id="06c81-108">たとえば<xref:System.Windows.Controls.CheckBox> 、には、2 <xref:System.Windows.VisualStateGroup>つのオブジェクトがあります。</span><span class="sxs-lookup"><span data-stu-id="06c81-108">For example, the <xref:System.Windows.Controls.CheckBox> has two <xref:System.Windows.VisualStateGroup> objects.</span></span> <span data-ttu-id="06c81-109">1つには、 `Normal`、 `MouseOver`、 `Pressed`、、 `Disabled`およびの各状態が含まれます。</span><span class="sxs-lookup"><span data-stu-id="06c81-109">One contains the states, `Normal`, `MouseOver`, `Pressed`, and `Disabled`.</span></span> <span data-ttu-id="06c81-110">もう1つは、、 `Checked`、 `UnChecked`、および`Indeterminate`の各状態を格納します。</span><span class="sxs-lookup"><span data-stu-id="06c81-110">The other contains the states, `Checked`, `UnChecked`, and `Indeterminate`.</span></span> <span data-ttu-id="06c81-111">は<xref:System.Windows.Controls.CheckBox> 、 `MouseOver` `MouseOver` `Pressed`状態でも同時にでもかまいませんが、との状態に同時に配置することはできません。`UnChecked`</span><span class="sxs-lookup"><span data-stu-id="06c81-111">The <xref:System.Windows.Controls.CheckBox> can be in states `MouseOver` and `UnChecked` at the same time, but it cannot be in the `MouseOver` and `Pressed` states at the same time.</span></span>  
  
 <span data-ttu-id="06c81-112">任意の要素に<xref:System.Windows.VisualState>オブジェクトを追加できますが、他のユーザーがの視覚的な<xref:System.Windows.Controls.Control>動作を再定義できるようにするには、特に便利な方法です。</span><span class="sxs-lookup"><span data-stu-id="06c81-112">Although you can add <xref:System.Windows.VisualState> objects to any element, they are a particularly useful way to enable others to redefine the visual behavior of a <xref:System.Windows.Controls.Control>.</span></span> <span data-ttu-id="06c81-113">を<xref:System.Windows.Controls.ControlTemplate>使用するカスタムコントロールを作成する場合は、そのクラス定義にを<xref:System.Windows.TemplateVisualStateAttribute>追加することによって、コントロールの状態を指定できます。</span><span class="sxs-lookup"><span data-stu-id="06c81-113">If you create a custom control that uses a <xref:System.Windows.Controls.ControlTemplate>, you can specify which states that control can be in by adding a <xref:System.Windows.TemplateVisualStateAttribute> on its class definition.</span></span> <span data-ttu-id="06c81-114">コントロールに新しい<xref:System.Windows.Controls.ControlTemplate>を作成するすべてのユーザーは、 <xref:System.Windows.VisualState>テンプレートにオブジェクトを追加できます。</span><span class="sxs-lookup"><span data-stu-id="06c81-114">Then anyone who creates a new <xref:System.Windows.Controls.ControlTemplate> for your control can add <xref:System.Windows.VisualState> objects to the template.</span></span> <span data-ttu-id="06c81-115">で<xref:System.Windows.TemplateVisualStateAttribute>は、Expression Blend などのデザイナーツールを使用して、コントロールの状態を公開できます。</span><span class="sxs-lookup"><span data-stu-id="06c81-115">The <xref:System.Windows.TemplateVisualStateAttribute> enables designer tools, such as Expression Blend, to expose the control's states.</span></span> <span data-ttu-id="06c81-116">同じ<xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=nameWithType>を持つ状態が同じ<xref:System.Windows.VisualStateGroup>に属しています。</span><span class="sxs-lookup"><span data-stu-id="06c81-116">States with the same <xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=nameWithType> belong in the same <xref:System.Windows.VisualStateGroup>.</span></span>  
  
 <span data-ttu-id="06c81-117">でオブジェクトを使用<xref:System.Windows.VisualStateGroup>する方法の詳細については[](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md) 、「ControlTemplateを作成して既存のコントロールの外観をカスタマイズする」を参照して<xref:System.Windows.Controls.ControlTemplate>ください。</span><span class="sxs-lookup"><span data-stu-id="06c81-117">For more information about how to use <xref:System.Windows.VisualStateGroup> objects in a <xref:System.Windows.Controls.ControlTemplate>, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span> <span data-ttu-id="06c81-118">を使用<xref:System.Windows.VisualStateManager>するコントロールを作成する方法の詳細については、「[カスタマイズ可能な外観を持つコントロールの作成](~/docs/framework/wpf/controls/creating-a-control-that-has-a-customizable-appearance.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="06c81-118">For more information about how to create controls that use the <xref:System.Windows.VisualStateManager>, see [Creating a Control That Has a Customizable Appearance](~/docs/framework/wpf/controls/creating-a-control-that-has-a-customizable-appearance.md).</span></span>  
  
 <span data-ttu-id="06c81-119">プロパティ<xref:System.Windows.VisualStateGroup.Transitions%2A>は、 <xref:System.Windows.VisualTransition> で定義されている状態の間でコントロールが遷移するときに適用されるオブジェクトを<xref:System.Windows.VisualStateGroup>格納します。</span><span class="sxs-lookup"><span data-stu-id="06c81-119">The <xref:System.Windows.VisualStateGroup.Transitions%2A> property contains <xref:System.Windows.VisualTransition> objects that are applied when the control transition between states that are defined in the <xref:System.Windows.VisualStateGroup>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06c81-120">次の例では、 <xref:System.Windows.Controls.ControlTemplate> 1 つ<xref:System.Windows.Controls.Button> <xref:System.Windows.Controls.Grid>のを含むの単純なを作成します。</span><span class="sxs-lookup"><span data-stu-id="06c81-120">The following example creates a simple <xref:System.Windows.Controls.ControlTemplate> for a <xref:System.Windows.Controls.Button> that contains one <xref:System.Windows.Controls.Grid>.</span></span> <span data-ttu-id="06c81-121">また<xref:System.Windows.VisualStateGroup> 、と`CommonStates` `MouseOver`の状態を定義するという名前のが含まれています。`Normal`</span><span class="sxs-lookup"><span data-stu-id="06c81-121">It also contains a <xref:System.Windows.VisualStateGroup> named `CommonStates`, which defines the `MouseOver` and `Normal` states.</span></span> <span data-ttu-id="06c81-122">また<xref:System.Windows.VisualStateGroup> 、には<xref:System.Windows.VisualTransition> 、ユーザーがマウスポインターをの<xref:System.Windows.Controls.Button>上に移動<xref:System.Windows.Controls.Grid>したときに、が緑から赤に変化するように指定するがあります。</span><span class="sxs-lookup"><span data-stu-id="06c81-122">The <xref:System.Windows.VisualStateGroup> also has a <xref:System.Windows.VisualTransition> that specifies that it takes one half second for the <xref:System.Windows.Controls.Grid> to change from green to red when the user moves the mouse pointer over the <xref:System.Windows.Controls.Button>.</span></span>  
  
 [!code-xaml[VSMButtonTemplate#11](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/window1.xaml#11)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VisualStateGroup ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.VisualStateGroup.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VisualStateGroup();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="06c81-123"><see cref="T:System.Windows.VisualStateGroup" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="06c81-123">Initializes a new instance of the <see cref="T:System.Windows.VisualStateGroup" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentState">
      <MemberSignature Language="C#" Value="public System.Windows.VisualState CurrentState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.VisualState CurrentState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualStateGroup.CurrentState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentState As VisualState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::VisualState ^ CurrentState { System::Windows::VisualState ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentState : System.Windows.VisualState" Usage="System.Windows.VisualStateGroup.CurrentState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.VisualState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="06c81-124">コントロールに現在適用されている <see cref="T:System.Windows.VisualState" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="06c81-124">Gets the <see cref="T:System.Windows.VisualState" /> that is currently applied to the control.</span></span></summary>
        <value><span data-ttu-id="06c81-125">コントロールに現在適用されている <see cref="T:System.Windows.VisualState" />。</span><span class="sxs-lookup"><span data-stu-id="06c81-125">The <see cref="T:System.Windows.VisualState" /> that is currently applied to the control.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentStateChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.VisualStateChangedEventArgs&gt; CurrentStateChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.VisualStateChangedEventArgs&gt; CurrentStateChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.VisualStateGroup.CurrentStateChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event CurrentStateChanged As EventHandler(Of VisualStateChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::VisualStateChangedEventArgs ^&gt; ^ CurrentStateChanged;" />
      <MemberSignature Language="F#" Value="member this.CurrentStateChanged : EventHandler&lt;System.Windows.VisualStateChangedEventArgs&gt; " Usage="member this.CurrentStateChanged : System.EventHandler&lt;System.Windows.VisualStateChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.VisualStateChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="06c81-126">コントロールが別の状態に遷移した後に発生します。</span><span class="sxs-lookup"><span data-stu-id="06c81-126">Occurs after a control transitions to a different state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06c81-127">このイベントは<xref:System.Windows.VisualStateGroup.CurrentStateChanging> 、コントロールが新しい状態に遷移し、イベントが発生した後に発生します。</span><span class="sxs-lookup"><span data-stu-id="06c81-127">This event occurs after the control transitions to a new state and the <xref:System.Windows.VisualStateGroup.CurrentStateChanging> event occurs.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentStateChanging">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.VisualStateChangedEventArgs&gt; CurrentStateChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.VisualStateChangedEventArgs&gt; CurrentStateChanging" />
      <MemberSignature Language="DocId" Value="E:System.Windows.VisualStateGroup.CurrentStateChanging" />
      <MemberSignature Language="VB.NET" Value="Public Event CurrentStateChanging As EventHandler(Of VisualStateChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::VisualStateChangedEventArgs ^&gt; ^ CurrentStateChanging;" />
      <MemberSignature Language="F#" Value="member this.CurrentStateChanging : EventHandler&lt;System.Windows.VisualStateChangedEventArgs&gt; " Usage="member this.CurrentStateChanging : System.EventHandler&lt;System.Windows.VisualStateChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.VisualStateChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="06c81-128">コントロールが別の状態への遷移を開始したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="06c81-128">Occurs when a control starts transitioning to a different state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06c81-129">イベントは、コントロールが状態の遷移を開始するときに発生します。</span><span class="sxs-lookup"><span data-stu-id="06c81-129">The event occurs when the control begins to transition states.</span></span> <span data-ttu-id="06c81-130"><xref:System.Windows.VisualTransition>が状態変更に適用されている場合、このイベントは遷移の開始時に発生します。</span><span class="sxs-lookup"><span data-stu-id="06c81-130">If a <xref:System.Windows.VisualTransition> is applied to the state change, this event occurs when the transition begins.</span></span> <span data-ttu-id="06c81-131">が適用されていない場合、このイベントは、コントロールが新しい状態に遷移した<xref:System.Windows.VisualStateGroup.CurrentStateChanged>後、イベントの前に発生します。 <xref:System.Windows.VisualTransition></span><span class="sxs-lookup"><span data-stu-id="06c81-131">If a <xref:System.Windows.VisualTransition> is not applied, this event occurs after the control transitions to the new state, but before the <xref:System.Windows.VisualStateGroup.CurrentStateChanged> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualStateGroup.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.VisualStateGroup.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="06c81-132"><see cref="T:System.Windows.VisualStateGroup" /> の名前を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="06c81-132">Gets or sets the name of the <see cref="T:System.Windows.VisualStateGroup" />.</span></span></summary>
        <value><span data-ttu-id="06c81-133"><see cref="T:System.Windows.VisualStateGroup" /> の名前。</span><span class="sxs-lookup"><span data-stu-id="06c81-133">The name of the <see cref="T:System.Windows.VisualStateGroup" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06c81-134">コントロールの作成者は、そのクラス定義にを<xref:System.Windows.TemplateVisualStateAttribute>追加することによって、コントロールの状態を指定します。</span><span class="sxs-lookup"><span data-stu-id="06c81-134">Control authors specify which states the control can be in by adding a <xref:System.Windows.TemplateVisualStateAttribute> on its class definition.</span></span> <span data-ttu-id="06c81-135">同じ<xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=nameWithType>を持つ状態が同じ<xref:System.Windows.VisualStateGroup>に属しています。</span><span class="sxs-lookup"><span data-stu-id="06c81-135">States with the same <xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=nameWithType> belong in the same <xref:System.Windows.VisualStateGroup>.</span></span> <span data-ttu-id="06c81-136">のを<xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=nameWithType>プロパティの値に設定します。<xref:System.Windows.VisualStateGroup> <xref:System.Windows.VisualStateGroup.Name%2A></span><span class="sxs-lookup"><span data-stu-id="06c81-136">Set the <xref:System.Windows.VisualStateGroup.Name%2A> of the <xref:System.Windows.VisualStateGroup> to the value of the <xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06c81-137">次の例では<xref:System.Windows.VisualStateGroup> 、とと`FocusStates`いう`CommonStates`名前の2つのオブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="06c81-137">The following example creates two <xref:System.Windows.VisualStateGroup> objects that are named `CommonStates` and `FocusStates`.</span></span> <span data-ttu-id="06c81-138">コントロールは常に、常に1つの<xref:System.Windows.VisualStateGroup>状態になります。</span><span class="sxs-lookup"><span data-stu-id="06c81-138">The control will be in exactly one state from each <xref:System.Windows.VisualStateGroup> at all times.</span></span> <span data-ttu-id="06c81-139">全体の例については、「 [ControlTemplate を作成して既存のコントロールの外観をカスタマイズ](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)する」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="06c81-139">For the entire example, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  
  
 [!code-xaml[VSMButtonTemplate#5](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/skinnedbutton.xaml#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="States">
      <MemberSignature Language="C#" Value="public System.Collections.IList States { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList States" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualStateGroup.States" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property States As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IList ^ States { System::Collections::IList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.States : System.Collections.IList" Usage="System.Windows.VisualStateGroup.States" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="06c81-140">同時に指定できない <see cref="T:System.Windows.VisualState" /> オブジェクトのコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="06c81-140">Gets the collection of mutually exclusive <see cref="T:System.Windows.VisualState" /> objects.</span></span></summary>
        <value><span data-ttu-id="06c81-141">同時に指定できない <see cref="T:System.Windows.VisualState" /> オブジェクトのコレクション。</span><span class="sxs-lookup"><span data-stu-id="06c81-141">The collection of mutually exclusive <see cref="T:System.Windows.VisualState" /> objects.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="06c81-142">次の例では、 <xref:System.Windows.Controls.ControlTemplate> 1 つ<xref:System.Windows.Controls.Button> <xref:System.Windows.Controls.Grid>のを含むの単純なを作成します。</span><span class="sxs-lookup"><span data-stu-id="06c81-142">The following example creates a simple <xref:System.Windows.Controls.ControlTemplate> for a <xref:System.Windows.Controls.Button> that contains one <xref:System.Windows.Controls.Grid>.</span></span> <span data-ttu-id="06c81-143">また<xref:System.Windows.VisualStateGroup> 、と`CommonStates` `MouseOver`の状態を定義するという名前のが含まれています。`Normal`</span><span class="sxs-lookup"><span data-stu-id="06c81-143">It also contains a <xref:System.Windows.VisualStateGroup> named `CommonStates`, which defines the `MouseOver` and `Normal` states.</span></span> <span data-ttu-id="06c81-144">また<xref:System.Windows.VisualStateGroup> 、には<xref:System.Windows.VisualTransition> 、ユーザーがマウスポインターをの<xref:System.Windows.Controls.Button>上に移動<xref:System.Windows.Controls.Grid>したときに、が緑から赤に変化するように指定するがあります。</span><span class="sxs-lookup"><span data-stu-id="06c81-144">The <xref:System.Windows.VisualStateGroup> also has a <xref:System.Windows.VisualTransition> that specifies that it takes one half second for the <xref:System.Windows.Controls.Grid> to change from green to red when the user moves the mouse pointer over the <xref:System.Windows.Controls.Button>.</span></span>  
  
 [!code-xaml[VSMButtonTemplate#11](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/window1.xaml#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transitions">
      <MemberSignature Language="C#" Value="public System.Collections.IList Transitions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList Transitions" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualStateGroup.Transitions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Transitions As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IList ^ Transitions { System::Collections::IList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Transitions : System.Collections.IList" Usage="System.Windows.VisualStateGroup.Transitions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="06c81-145"><see cref="T:System.Windows.VisualTransition" /> オブジェクトのコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="06c81-145">Gets the collection of <see cref="T:System.Windows.VisualTransition" /> objects.</span></span></summary>
        <value><span data-ttu-id="06c81-146"><see cref="T:System.Windows.VisualTransition" /> オブジェクトのコレクション。</span><span class="sxs-lookup"><span data-stu-id="06c81-146">The collection of <see cref="T:System.Windows.VisualTransition" /> objects.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06c81-147"><xref:System.Windows.VisualStateGroup>内<xref:System.Windows.VisualTransition> の<xref:System.Windows.VisualStateGroup.Transitions%2A>オブジェクトは、で定義されている状態の間でコントロールが遷移するときに適用されます。</span><span class="sxs-lookup"><span data-stu-id="06c81-147">The <xref:System.Windows.VisualTransition> objects in <xref:System.Windows.VisualStateGroup.Transitions%2A> are applied when the control transition between states that are defined in the <xref:System.Windows.VisualStateGroup>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06c81-148">次の例では、 <xref:System.Windows.Controls.ControlTemplate> 1 つ<xref:System.Windows.Controls.Button> <xref:System.Windows.Controls.Grid>のを含むの単純なを作成します。</span><span class="sxs-lookup"><span data-stu-id="06c81-148">The following example creates a simple <xref:System.Windows.Controls.ControlTemplate> for a <xref:System.Windows.Controls.Button> that contains one <xref:System.Windows.Controls.Grid>.</span></span> <span data-ttu-id="06c81-149">また<xref:System.Windows.VisualStateGroup> 、と`CommonStates` `MouseOver`の状態を定義するという名前のが含まれています。`Normal`</span><span class="sxs-lookup"><span data-stu-id="06c81-149">It also contains a <xref:System.Windows.VisualStateGroup> named `CommonStates`, which defines the `MouseOver` and `Normal` states.</span></span> <span data-ttu-id="06c81-150">また<xref:System.Windows.VisualStateGroup> 、には<xref:System.Windows.VisualTransition> 、ユーザーがマウスポインターをの<xref:System.Windows.Controls.Button>上に移動<xref:System.Windows.Controls.Grid>したときに、が緑から赤に変化するように指定するがあります。</span><span class="sxs-lookup"><span data-stu-id="06c81-150">The <xref:System.Windows.VisualStateGroup> also has a <xref:System.Windows.VisualTransition> that specifies that it takes one half second for the <xref:System.Windows.Controls.Grid> to change from green to red when the user moves the mouse pointer over the <xref:System.Windows.Controls.Button>.</span></span>  
  
 [!code-xaml[VSMButtonTemplate#11](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/window1.xaml#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
