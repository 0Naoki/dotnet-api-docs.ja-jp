<Type Name="VisualStateGroup" FullName="System.Windows.VisualStateGroup">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1b36f0b3371970a9b31a5839131ba6ded82d2bd8" /><Meta Name="ms.sourcegitcommit" Value="a22d0855bbf24d893f43605f8b7e3a44bd9551a5" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70370963" /></Metadata><TypeSignature Language="C#" Value="public class VisualStateGroup : System.Windows.DependencyObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit VisualStateGroup extends System.Windows.DependencyObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.VisualStateGroup" />
  <TypeSignature Language="VB.NET" Value="Public Class VisualStateGroup&#xA;Inherits DependencyObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class VisualStateGroup : System::Windows::DependencyObject" />
  <TypeSignature Language="F#" Value="type VisualStateGroup = class&#xA;    inherit DependencyObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("States")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.RuntimeNameProperty("Name")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>一度に 1 つしか選択できない <see cref="T:System.Windows.VisualState" /> オブジェクトと、ある状態から別の状態に遷移するために使用する <see cref="T:System.Windows.VisualTransition" /> オブジェクトを格納します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 各<xref:System.Windows.VisualStateGroup>には、オブジェクト<xref:System.Windows.VisualState>のコレクションが含まれています。 に<xref:System.Windows.VisualState>は、コントロールが<xref:System.Windows.Media.Animation.Storyboard>特定の状態にある場合に、コントロールの外観がどのように変化するかを指定するオブジェクトのコレクションが格納されます。 たとえば、が押さ<xref:System.Windows.Controls.Button>れているときとは異なる方法で押されていると、が若干異なる場合があります。 が押された<xref:System.Windows.Controls.Button>とき (`"Pressed"`) と (`"Normal"`) ではない場合に、が定義する2つの状態。  
  
 コントロールに<xref:System.Windows.VisualState>を追加するには、 `VisualStateManager.VisualStateGroups`コントロールの添付プロパティを設定します。 相互に排他的な状態を同じ<xref:System.Windows.VisualStateGroup>に配置します。 たとえば<xref:System.Windows.Controls.CheckBox> 、には、2 <xref:System.Windows.VisualStateGroup>つのオブジェクトがあります。 1つには、 `Normal`、 `MouseOver`、 `Pressed`、、 `Disabled`およびの各状態が含まれます。 もう1つは、、 `Checked`、 `UnChecked`、および`Indeterminate`の各状態を格納します。 は<xref:System.Windows.Controls.CheckBox> 、 `MouseOver` `MouseOver` `Pressed`状態でも同時にでもかまいませんが、との状態に同時に配置することはできません。`UnChecked`  
  
 任意の要素に<xref:System.Windows.VisualState>オブジェクトを追加できますが、他のユーザーがの視覚的な<xref:System.Windows.Controls.Control>動作を再定義できるようにするには、特に便利な方法です。 を<xref:System.Windows.Controls.ControlTemplate>使用するカスタムコントロールを作成する場合は、そのクラス定義にを<xref:System.Windows.TemplateVisualStateAttribute>追加することによって、コントロールの状態を指定できます。 コントロールに新しい<xref:System.Windows.Controls.ControlTemplate>を作成するすべてのユーザーは、 <xref:System.Windows.VisualState>テンプレートにオブジェクトを追加できます。 で<xref:System.Windows.TemplateVisualStateAttribute>は、Expression Blend などのデザイナーツールを使用して、コントロールの状態を公開できます。 同じ<xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=nameWithType>を持つ状態が同じ<xref:System.Windows.VisualStateGroup>に属しています。  
  
 でオブジェクトを使用<xref:System.Windows.VisualStateGroup>する方法の詳細については[](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md) 、「ControlTemplateを作成して既存のコントロールの外観をカスタマイズする」を参照して<xref:System.Windows.Controls.ControlTemplate>ください。 を使用<xref:System.Windows.VisualStateManager>するコントロールを作成する方法の詳細については、「[カスタマイズ可能な外観を持つコントロールの作成](~/docs/framework/wpf/controls/creating-a-control-that-has-a-customizable-appearance.md)」を参照してください。  
  
 プロパティ<xref:System.Windows.VisualStateGroup.Transitions%2A>は、 <xref:System.Windows.VisualTransition> で定義されている状態の間でコントロールが遷移するときに適用されるオブジェクトを<xref:System.Windows.VisualStateGroup>格納します。  
  
   
  
## Examples  
 次の例では、 <xref:System.Windows.Controls.ControlTemplate> 1 つ<xref:System.Windows.Controls.Button> <xref:System.Windows.Controls.Grid>のを含むの単純なを作成します。 また<xref:System.Windows.VisualStateGroup> 、と`CommonStates` `MouseOver`の状態を定義するという名前のが含まれています。`Normal` また<xref:System.Windows.VisualStateGroup> 、には<xref:System.Windows.VisualTransition> 、ユーザーがマウスポインターをの<xref:System.Windows.Controls.Button>上に移動<xref:System.Windows.Controls.Grid>したときに、が緑から赤に変化するように指定するがあります。  
  
 [!code-xaml[VSMButtonTemplate#11](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/window1.xaml#11)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VisualStateGroup ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.VisualStateGroup.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VisualStateGroup();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.VisualStateGroup" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentState">
      <MemberSignature Language="C#" Value="public System.Windows.VisualState CurrentState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.VisualState CurrentState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualStateGroup.CurrentState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentState As VisualState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::VisualState ^ CurrentState { System::Windows::VisualState ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentState : System.Windows.VisualState" Usage="System.Windows.VisualStateGroup.CurrentState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.VisualState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールに現在適用されている <see cref="T:System.Windows.VisualState" /> を取得します。</summary>
        <value>コントロールに現在適用されている <see cref="T:System.Windows.VisualState" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentStateChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.VisualStateChangedEventArgs&gt; CurrentStateChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.VisualStateChangedEventArgs&gt; CurrentStateChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.VisualStateGroup.CurrentStateChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CurrentStateChanged As EventHandler(Of VisualStateChangedEventArgs) " FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::VisualStateChangedEventArgs ^&gt; ^ CurrentStateChanged;" />
      <MemberSignature Language="F#" Value="member this.CurrentStateChanged : EventHandler&lt;System.Windows.VisualStateChangedEventArgs&gt; " Usage="member this.CurrentStateChanged : System.EventHandler&lt;System.Windows.VisualStateChangedEventArgs&gt; " />
      <MemberSignature Language="VB.NET" Value="Public Event CurrentStateChanged As EventHandler(Of VisualStateChangedEventArgs) " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.VisualStateChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールが別の状態に遷移した後に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このイベントは<xref:System.Windows.VisualStateGroup.CurrentStateChanging> 、コントロールが新しい状態に遷移し、イベントが発生した後に発生します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentStateChanging">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.VisualStateChangedEventArgs&gt; CurrentStateChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.VisualStateChangedEventArgs&gt; CurrentStateChanging" />
      <MemberSignature Language="DocId" Value="E:System.Windows.VisualStateGroup.CurrentStateChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CurrentStateChanging As EventHandler(Of VisualStateChangedEventArgs) " FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::VisualStateChangedEventArgs ^&gt; ^ CurrentStateChanging;" />
      <MemberSignature Language="F#" Value="member this.CurrentStateChanging : EventHandler&lt;System.Windows.VisualStateChangedEventArgs&gt; " Usage="member this.CurrentStateChanging : System.EventHandler&lt;System.Windows.VisualStateChangedEventArgs&gt; " />
      <MemberSignature Language="VB.NET" Value="Public Event CurrentStateChanging As EventHandler(Of VisualStateChangedEventArgs) " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.VisualStateChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールが別の状態への遷移を開始したときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントは、コントロールが状態の遷移を開始するときに発生します。 <xref:System.Windows.VisualTransition>が状態変更に適用されている場合、このイベントは遷移の開始時に発生します。 が適用されていない場合、このイベントは、コントロールが新しい状態に遷移した<xref:System.Windows.VisualStateGroup.CurrentStateChanged>後、イベントの前に発生します。 <xref:System.Windows.VisualTransition>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualStateGroup.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.VisualStateGroup.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.VisualStateGroup" /> の名前を取得または設定します。</summary>
        <value><see cref="T:System.Windows.VisualStateGroup" /> の名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コントロールの作成者は、そのクラス定義にを<xref:System.Windows.TemplateVisualStateAttribute>追加することによって、コントロールの状態を指定します。 同じ<xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=nameWithType>を持つ状態が同じ<xref:System.Windows.VisualStateGroup>に属しています。 のを<xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=nameWithType>プロパティの値に設定します。<xref:System.Windows.VisualStateGroup> <xref:System.Windows.VisualStateGroup.Name%2A>  
  
   
  
## Examples  
 次の例では<xref:System.Windows.VisualStateGroup> 、とと`FocusStates`いう`CommonStates`名前の2つのオブジェクトを作成します。 コントロールは常に、常に1つの<xref:System.Windows.VisualStateGroup>状態になります。 全体の例については、「 [ControlTemplate を作成して既存のコントロールの外観をカスタマイズ](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)する」を参照してください。  
  
 [!code-xaml[VSMButtonTemplate#5](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/skinnedbutton.xaml#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="States">
      <MemberSignature Language="C#" Value="public System.Collections.IList States { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList States" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualStateGroup.States" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property States As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IList ^ States { System::Collections::IList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.States : System.Collections.IList" Usage="System.Windows.VisualStateGroup.States" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>同時に指定できない <see cref="T:System.Windows.VisualState" /> オブジェクトのコレクションを取得します。</summary>
        <value>同時に指定できない <see cref="T:System.Windows.VisualState" /> オブジェクトのコレクション。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例では、 <xref:System.Windows.Controls.ControlTemplate> 1 つ<xref:System.Windows.Controls.Button> <xref:System.Windows.Controls.Grid>のを含むの単純なを作成します。 また<xref:System.Windows.VisualStateGroup> 、と`CommonStates` `MouseOver`の状態を定義するという名前のが含まれています。`Normal` また<xref:System.Windows.VisualStateGroup> 、には<xref:System.Windows.VisualTransition> 、ユーザーがマウスポインターをの<xref:System.Windows.Controls.Button>上に移動<xref:System.Windows.Controls.Grid>したときに、が緑から赤に変化するように指定するがあります。  
  
 [!code-xaml[VSMButtonTemplate#11](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/window1.xaml#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transitions">
      <MemberSignature Language="C#" Value="public System.Collections.IList Transitions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList Transitions" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualStateGroup.Transitions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Transitions As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IList ^ Transitions { System::Collections::IList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Transitions : System.Collections.IList" Usage="System.Windows.VisualStateGroup.Transitions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.VisualTransition" /> オブジェクトのコレクションを取得します。</summary>
        <value><see cref="T:System.Windows.VisualTransition" /> オブジェクトのコレクション。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.VisualStateGroup>内<xref:System.Windows.VisualTransition> の<xref:System.Windows.VisualStateGroup.Transitions%2A>オブジェクトは、で定義されている状態の間でコントロールが遷移するときに適用されます。  
  
   
  
## Examples  
 次の例では、 <xref:System.Windows.Controls.ControlTemplate> 1 つ<xref:System.Windows.Controls.Button> <xref:System.Windows.Controls.Grid>のを含むの単純なを作成します。 また<xref:System.Windows.VisualStateGroup> 、と`CommonStates` `MouseOver`の状態を定義するという名前のが含まれています。`Normal` また<xref:System.Windows.VisualStateGroup> 、には<xref:System.Windows.VisualTransition> 、ユーザーがマウスポインターをの<xref:System.Windows.Controls.Button>上に移動<xref:System.Windows.Controls.Grid>したときに、が緑から赤に変化するように指定するがあります。  
  
 [!code-xaml[VSMButtonTemplate#11](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/window1.xaml#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
