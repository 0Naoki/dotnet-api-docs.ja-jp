<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Cer.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5ac470bff59f11addb66604e46af25f3ade4f4d27.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ac470bff59f11addb66604e46af25f3ade4f4d27</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.ConstrainedExecution.Cer">
          <source>Specifies a method's behavior when called within a constrained execution region.</source>
          <target state="translated">制約された実行領域内で呼び出されたときのメソッドの動作を指定します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ConstrainedExecution.Cer">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.ConstrainedExecution.Cer&gt;</ph> enumeration specifies the behavior of a method, type, or assembly within a constrained execution region (CER).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.ConstrainedExecution.Cer&gt;</ph>列挙体は、メソッド、型、または制約された実行領域 (CER) 内にあるアセンブリの動作を指定します。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ConstrainedExecution.Cer">
          <source>Use one of the three available values to indicate that the entity will succeed, has no knowledge of a CER, or might (deterministically) be able to report success or failure.</source>
          <target state="translated">エンティティが成功になっていることを示すために使用できる 3 つの値のいずれかの使用は、CER の知識がないかを成功または失敗をレポートできなくなる可能性があります (確定的に)。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ConstrainedExecution.Cer">
          <source>A CER provides guarantees that the region of code will execute uninterrupted even if an asynchronous exception such as an aborted thread out-of-memory exception, or stack overflow is raised.</source>
          <target state="translated">CER コード領域に実行される保証は、中断のない中止されたスレッドのメモリ不足の例外、またはスタック オーバーフローなど、非同期例外が発生した場合でもです。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ConstrainedExecution.Cer">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.Runtime.ConstrainedExecution.Cer&gt;</ph> enumeration when specifying a constrained execution region for a method.</source>
          <target state="translated">使用を次のコード例に示します、<ph id="ph1">&lt;xref:System.Runtime.ConstrainedExecution.Cer&gt;</ph>列挙メソッドの制約された実行領域を指定する場合。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ConstrainedExecution.Cer">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute.%23ctor%2A&gt;</ph> constructor.</source>
          <target state="translated">このコード例に示されている例の一部である、<ph id="ph1">&lt;xref:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute.%23ctor%2A&gt;</ph>コンス トラクターです。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="F:System.Runtime.ConstrainedExecution.Cer.MayFail">
          <source>In the face of exceptional conditions, the method might fail.</source>
          <target state="translated">例外条件が発生した場合、メソッドが失敗する可能性があります。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="F:System.Runtime.ConstrainedExecution.Cer.MayFail">
          <source>In this case, the method will report back to the calling method whether it succeeded or failed.</source>
          <target state="translated">この場合、メソッドは、成功したか失敗したかの報告を呼び出し元のメソッドに戻します。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="F:System.Runtime.ConstrainedExecution.Cer.MayFail">
          <source>The method must have a CER around the method body to ensure that it can report the return value.</source>
          <target state="translated">このメソッドで確実に戻り値を報告できるようにするためには、メソッド本体を CER 内に含める必要があります。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="F:System.Runtime.ConstrainedExecution.Cer.None">
          <source>The method, type, or assembly has no concept of a CER.</source>
          <target state="translated">メソッド、型、またはアセンブリには、CER の概念はありません。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="F:System.Runtime.ConstrainedExecution.Cer.None">
          <source>It does not take advantage of CER guarantees.</source>
          <target state="translated">この値では、CER の保証を利用しません。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="F:System.Runtime.ConstrainedExecution.Cer.None">
          <source>This implies the following:</source>
          <target state="translated">これは以下を意味します。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.ConstrainedExecution.Cer.None">
          <source>In the face of exceptional conditions the method might fail.</source>
          <target state="translated">例外条件は、メソッドが失敗します。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.ConstrainedExecution.Cer.None">
          <source>The method might or might not report that it failed (it is non-deterministic).</source>
          <target state="translated">メソッドは、可能性がありますか、失敗したレポートしない可能性があります (これは、非決定的です)。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.ConstrainedExecution.Cer.None">
          <source>The method is not written with CERs in mind (which is the most likely scenario).</source>
          <target state="translated">メソッドを念頭に置いては、最も可能性の高いシナリオ) Cer に書き込まれません。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.ConstrainedExecution.Cer.None">
          <source>If a method, type, or assembly is not explicitly marked to succeed, it is implicitly marked as <ph id="ph1">`Cer.None`</ph>.</source>
          <target state="translated">暗黙的に設定されているメソッド、型、またはアセンブリが明示的にマークされていない場合は成功、<ph id="ph1">`Cer.None`</ph>です。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="F:System.Runtime.ConstrainedExecution.Cer.Success">
          <source>In the face of exceptional conditions, the method is guaranteed to succeed.</source>
          <target state="translated">例外条件が発生しても、メソッドは必ず成功します。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="F:System.Runtime.ConstrainedExecution.Cer.Success">
          <source>You should always construct a CER around the method that is called, even when it is called from within a non-CER region.</source>
          <target state="translated">非 CER 領域内から呼び出された場合でも、呼び出されるメソッドの周囲には常に CER を構築する必要があります。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="F:System.Runtime.ConstrainedExecution.Cer.Success">
          <source>A method is successful if it accomplishes what is intended.</source>
          <target state="translated">期待どおりに実行された場合、メソッドは成功です。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="F:System.Runtime.ConstrainedExecution.Cer.Success">
          <source>For example, marking <ph id="ph1">&lt;see cref="P:System.Collections.ArrayList.Count" /&gt;</ph> with <bpt id="p1">&lt;c&gt;</bpt>ReliabilityContractAttribute(Cer.Success)<ept id="p1">&lt;/c&gt;</ept> implies that when it is run under a CER, it always returns a count of the number of elements in the <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> and it can never leave the internal fields in an undetermined state.</source>
          <target state="translated">たとえば、<ph id="ph1">&lt;see cref="P:System.Collections.ArrayList.Count" /&gt;</ph> を <bpt id="p1">&lt;c&gt;</bpt>ReliabilityContractAttribute(Cer.Success)<ept id="p1">&lt;/c&gt;</ept> とマークすると、CER で実行された場合に常に <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> の要素数を返し、内部フィールドを未確定の状態にしておけないことを意味します。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>