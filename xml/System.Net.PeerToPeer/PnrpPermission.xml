<Type Name="PnrpPermission" FullName="System.Net.PeerToPeer.PnrpPermission">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c06029e02b2a75639a57690c9790e9711f1f28fb" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53476128" /></Metadata><TypeSignature Language="C#" Value="public sealed class PnrpPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit PnrpPermission extends System.Security.CodeAccessPermission implements class System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.PnrpPermission" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PnrpPermission&#xA;Inherits CodeAccessPermission&#xA;Implements IUnrestrictedPermission" />
  <TypeSignature Language="C++ CLI" Value="public ref class PnrpPermission sealed : System::Security::CodeAccessPermission, System::Security::Permissions::IUnrestrictedPermission" />
  <TypeSignature Language="F#" Value="type PnrpPermission = class&#xA;    inherit CodeAccessPermission&#xA;    interface IUnrestrictedPermission" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.CodeAccessPermission</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.Permissions.IUnrestrictedPermission</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="d9d2e-101"><see cref="N:System.Net.PeerToPeer" /> オブジェクトのアクセス許可で使用される値を指定します。</span><span class="sxs-lookup"><span data-stu-id="d9d2e-101">Specifies the values that are used in <see cref="N:System.Net.PeerToPeer" /> object permissions.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9d2e-102">既定のアクセス許可は、すべてのローカルおよび PNRP サービスにアクセスするイントラネット ゾーンのアプリケーションです。</span><span class="sxs-lookup"><span data-stu-id="d9d2e-102">The default permissions allow all local and Intranet zone applications to access PNRP services.</span></span> <span data-ttu-id="d9d2e-103">既定のアクセス許可が変更されていない場合、すべてのリンク ローカルおよびサイト ローカル アプリケーション、ピア ツー ピア サービスにアクセスできますが、グローバル (インターネット) アプリケーションからはアクセスできません。</span><span class="sxs-lookup"><span data-stu-id="d9d2e-103">If the default permissions are not changed, all link-local and site-local applications have access to Peer-to-Peer services, but global (internet) applications have no access.</span></span>  
  
 <span data-ttu-id="d9d2e-104">この型のインスタンスがある 2 つのアクセス許可の状態: これらのリソースに無制限にフル アクセスまたはか、アクセス許可によって保護されているリソースへのアクセスを持っていません。</span><span class="sxs-lookup"><span data-stu-id="d9d2e-104">Instances of this type have two permission states: they either have no access to the resource(s) protected by the permission, or they have unrestricted full access to those resources.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
    <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)" />
    <altmember cref="T:System.Net.PeerToPeer.PnrpPermissionAttribute" />
    <altmember cref="N:System.Security.Permissions" />
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink?LinkID=92731"><span data-ttu-id="d9d2e-105">PNRP Namespace プロバイダー API</span><span class="sxs-lookup"><span data-stu-id="d9d2e-105">PNRP Namespace Provider API</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PnrpPermission (System.Security.Permissions.PermissionState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.PermissionState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As PermissionState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PnrpPermission(System::Security::Permissions::PermissionState state);" />
      <MemberSignature Language="F#" Value="new System.Net.PeerToPeer.PnrpPermission : System.Security.Permissions.PermissionState -&gt; System.Net.PeerToPeer.PnrpPermission" Usage="new System.Net.PeerToPeer.PnrpPermission state" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" />
      </Parameters>
      <Docs>
        <param name="state"><span data-ttu-id="d9d2e-106"><see cref="T:System.Security.Permissions.PermissionState" /> 列挙値の値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="d9d2e-106">One of the values in the <see cref="T:System.Security.Permissions.PermissionState" /> enumeration.</span></span></param>
        <summary><span data-ttu-id="d9d2e-107">指定した初期アクセス許可状態を使用して、<see cref="T:System.Net.PeerToPeer.PnrpPermission" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="d9d2e-107">Initializes a new instance of the <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> class with the supplied initial permission state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9d2e-108">この型のインスタンスがある 2 つのアクセス許可の状態: これらのリソースに無制限にフル アクセスまたはか、アクセス許可によって保護されているリソースへのアクセスを持っていません。</span><span class="sxs-lookup"><span data-stu-id="d9d2e-108">Instances of this type have two permission states: they either have no access to the resource(s) protected by the permission, or they have unrestricted full access to those resources.</span></span>  
  
 <span data-ttu-id="d9d2e-109">場合`state`は PnrpPermission インスタンス無制限、すべての要求を渡します。</span><span class="sxs-lookup"><span data-stu-id="d9d2e-109">If `state` is Unrestricted, the PnrpPermission instance passes all demands.</span></span> <span data-ttu-id="d9d2e-110">場合`state`、他の値を含む PnrpPermission インスタンスがすべての要求が失敗します。</span><span class="sxs-lookup"><span data-stu-id="d9d2e-110">If `state` contains any other value, the PnrpPermission instance fails all demands.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.IsUnrestricted" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
        <altmember cref="T:System.Net.PeerToPeer.PnrpPermissionAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Copy () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Copy();" />
      <MemberSignature Language="F#" Value="override this.Copy : unit -&gt; System.Security.IPermission" Usage="pnrpPermission.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d9d2e-111">現在の <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> のコピーを作成して返します。</span><span class="sxs-lookup"><span data-stu-id="d9d2e-111">Creates and returns an identical copy of the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" />.</span></span></summary>
        <returns><span data-ttu-id="d9d2e-112">インスタンスに <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> の現在のインスタンスのコピーを格納している、IPermission インターフェイスを持つオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d9d2e-112">An object with an IPermission interface, whose instance contains a copy of the current instance of <see cref="T:System.Net.PeerToPeer.PnrpPermission" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9d2e-113">アクセス許可のコピーを元のアクセス許可リソースに対して同じアクセス権を表します。</span><span class="sxs-lookup"><span data-stu-id="d9d2e-113">A copy of a permission represents the same access to resources as the original permission.</span></span>  
  
 <span data-ttu-id="d9d2e-114">この型のインスタンスがある 2 つのアクセス許可の状態: これらのリソースに無制限にフル アクセスまたはか、アクセス許可によって保護されているリソースへのアクセスを持っていません。</span><span class="sxs-lookup"><span data-stu-id="d9d2e-114">Instances of this type have two permission states: they either have no access to the resource(s) protected by the permission, or they have unrestricted full access to those resources.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d9d2e-115">-   パラメーターが、有効な <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> 要素ではありません。</span><span class="sxs-lookup"><span data-stu-id="d9d2e-115">-   The parameter is not a valid <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> element.</span></span>  
  
<span data-ttu-id="d9d2e-116">-   パラメーターのバージョン番号は、サポートされていません。</span><span class="sxs-lookup"><span data-stu-id="d9d2e-116">-   The parameter's version number is not supported.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d9d2e-117">パラメーターが <see langword="null" /> 参照 (Visual Basic の場合は <see langword="Nothing" />) です。</span><span class="sxs-lookup"><span data-stu-id="d9d2e-117">The parameter is a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink?LinkID=92731"><span data-ttu-id="d9d2e-118">PNRP Namespace プロバイダー API</span><span class="sxs-lookup"><span data-stu-id="d9d2e-118">PNRP Namespace Provider API</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public override void FromXml (System.Security.SecurityElement e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void FromXml(class System.Security.SecurityElement e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub FromXml (e As SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void FromXml(System::Security::SecurityElement ^ e);" />
      <MemberSignature Language="F#" Value="override this.FromXml : System.Security.SecurityElement -&gt; unit" Usage="pnrpPermission.FromXml e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="d9d2e-119">アクセス許可の再構築に使用する XML エンコード。</span><span class="sxs-lookup"><span data-stu-id="d9d2e-119">The XML encoding to use to reconstruct the permission.</span></span></param>
        <summary><span data-ttu-id="d9d2e-120">XML エンコードから指定された状態で、セキュリティ オブジェクトを再構築します。</span><span class="sxs-lookup"><span data-stu-id="d9d2e-120">Reconstructs a security object with a specified state from an XML encoding.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9d2e-121">セキュリティ オブジェクトのエンコーディングの XML オブジェクト モデルを表します。</span><span class="sxs-lookup"><span data-stu-id="d9d2e-121">Represents the XML object model for encoding security objects.</span></span> <span data-ttu-id="d9d2e-122">このクラスは継承できません。</span><span class="sxs-lookup"><span data-stu-id="d9d2e-122">This class cannot be inherited.</span></span>  
  
 <span data-ttu-id="d9d2e-123">このクラスは、されません一般的な XML オブジェクト モデルとして使用するため、セキュリティ システム内で使用するための単純な XML オブジェクト モデルの軽量な実装を対象としています。</span><span class="sxs-lookup"><span data-stu-id="d9d2e-123">This class is intended to be a lightweight implementation of a simple XML object model for use within the security system, and not for use as a general XML object model.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d9d2e-124">-   パラメーターが、有効な <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> 要素ではありません。</span><span class="sxs-lookup"><span data-stu-id="d9d2e-124">-   The parameter is not a valid <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> element.</span></span>  
  
<span data-ttu-id="d9d2e-125">-   パラメーターのバージョン番号は、サポートされていません。</span><span class="sxs-lookup"><span data-stu-id="d9d2e-125">-   The parameter's version number is not supported.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d9d2e-126">パラメーターが <see langword="null" /> 参照 (Visual Basic の場合は <see langword="Nothing" />) です。</span><span class="sxs-lookup"><span data-stu-id="d9d2e-126">The parameter is a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
        <altmember cref="T:System.Security.SecurityElement" />
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Intersect (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Intersect(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Intersect (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Intersect(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="override this.Intersect : System.Security.IPermission -&gt; System.Security.IPermission" Usage="pnrpPermission.Intersect target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="d9d2e-127">現在のアクセス許可との <see cref="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" /> を実行するアクセス許可。</span><span class="sxs-lookup"><span data-stu-id="d9d2e-127">A permission to <see cref="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" /> with the current permission.</span></span> <span data-ttu-id="d9d2e-128">これは、現在のアクセス許可と同じ型であることが必要です。</span><span class="sxs-lookup"><span data-stu-id="d9d2e-128">It must be of the same type as the current permission.</span></span></param>
        <summary><span data-ttu-id="d9d2e-129">現在の <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> と指定したアクセス許可の積集合を表すアクセス許可を作成して返します。</span><span class="sxs-lookup"><span data-stu-id="d9d2e-129">Creates and returns a permission that is the intersection of the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> and the specified permission.</span></span></summary>
        <returns><span data-ttu-id="d9d2e-130">現在の <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> と指定したアクセス許可の積集合を表す新しいアクセス許可。</span><span class="sxs-lookup"><span data-stu-id="d9d2e-130">A new permission that represents the intersection of the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> and the specified permission.</span></span> <span data-ttu-id="d9d2e-131">積集合が空の場合、この新しいアクセス許可は <see langword="null" /> 参照 (Visual Basic の場合は <see langword="Nothing" />) になります。</span><span class="sxs-lookup"><span data-stu-id="d9d2e-131">This new permission is a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic) if the intersection is empty.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9d2e-132">2 つのアクセス許可の積集合は、両方に共通する操作のセットを説明する権限です。</span><span class="sxs-lookup"><span data-stu-id="d9d2e-132">The intersection of two permissions is a permission that describes the set of operations they both describe in common.</span></span> <span data-ttu-id="d9d2e-133">元の両方の権限を通過する要求だけでは、積集合を渡します。</span><span class="sxs-lookup"><span data-stu-id="d9d2e-133">Only a demand that passes both original permissions will pass the intersection.</span></span>  
  
 <span data-ttu-id="d9d2e-134">次のステートメントは、する必要がある`true`Intersect メソッドのすべての実装。</span><span class="sxs-lookup"><span data-stu-id="d9d2e-134">The following statements are required to be `true` for all implementations of the Intersect method.</span></span> <span data-ttu-id="d9d2e-135">X と Y の表す<xref:System.Security.IPermission>れていないオブジェクト参照を`null`参照 (Visual Basic では Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="d9d2e-135">X and Y represent <xref:System.Security.IPermission> object references that are not a `null` reference (Nothing in Visual Basic).</span></span>  
  
-   <span data-ttu-id="d9d2e-136">X.Intersect(X) は、X と等しい値を返します。</span><span class="sxs-lookup"><span data-stu-id="d9d2e-136">X.Intersect(X) returns a value equal to X.</span></span>  
  
-   <span data-ttu-id="d9d2e-137">X.Intersect(Y) は、Y.Intersect(X) と同じ値を返します。</span><span class="sxs-lookup"><span data-stu-id="d9d2e-137">X.Intersect(Y) returns the same value as Y.Intersect(X).</span></span>  
  
-   <span data-ttu-id="d9d2e-138">X.Intersect (、`null`参照 (`Nothing` Visual basic)) を返します、`null`参照 (`Nothing` Visual Basic で)。</span><span class="sxs-lookup"><span data-stu-id="d9d2e-138">X.Intersect(a `null` reference (`Nothing` in Visual Basic)) returns a `null` reference (`Nothing` in Visual Basic).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d9d2e-139">指定するパラメーターが <see langword="null" /> 参照 (Visual Basic の場合は <see langword="Nothing" />) ではなく、現在のアクセス許可と同じクラスのインスタンスではありません。</span><span class="sxs-lookup"><span data-stu-id="d9d2e-139">The target parameter is not a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic) and is not an instance of the same class as the current permission.</span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.IsSubsetOf(System.Security.IPermission)" />
        <altmember cref="T:System.Net.PeerToPeer.PnrpPermissionAttribute" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" />
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public override bool IsSubsetOf (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsSubsetOf(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.IsSubsetOf(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsSubsetOf (target As IPermission) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsSubsetOf(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="override this.IsSubsetOf : System.Security.IPermission -&gt; bool" Usage="pnrpPermission.IsSubsetOf target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="d9d2e-140">サブセット リレーションシップをテストするアクセス許可。</span><span class="sxs-lookup"><span data-stu-id="d9d2e-140">A permission that is to be tested for the subset relationship.</span></span> <span data-ttu-id="d9d2e-141">このアクセス許可は、現在のアクセス許可と同じ型であることが必要です。</span><span class="sxs-lookup"><span data-stu-id="d9d2e-141">This permission must be of the same type as the current permission.</span></span></param>
        <summary><span data-ttu-id="d9d2e-142">現在の <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> が、指定したアクセス許可のサブセットかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="d9d2e-142">Determines whether the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> is a subset of the specified permission.</span></span></summary>
        <returns><span data-ttu-id="d9d2e-143">現在の <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> が、指定したアクセス許可のサブセットである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d9d2e-143"><see langword="true" /> if the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> is a subset of the specified permission; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9d2e-144">現在<xref:System.Net.PeerToPeer.PnrpPermission>指定したアクセス許可のサブセットである場合、現在のアクセス許可を指定した権限によって完全に含まれる一連の操作を指定します。</span><span class="sxs-lookup"><span data-stu-id="d9d2e-144">The current <xref:System.Net.PeerToPeer.PnrpPermission> is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained by the specified permission.</span></span> <span data-ttu-id="d9d2e-145">アクセスを表すアクセス許可などの"*C:\example.txt*「へのアクセスを表すアクセス許可のサブセットは」*c:\\*"。</span><span class="sxs-lookup"><span data-stu-id="d9d2e-145">For example, a permission that represents access to "*C:\example.txt*" is a subset of a permission that represents access to "*C:\\*".</span></span> <span data-ttu-id="d9d2e-146">このメソッドが戻る場合`true`、現在のアクセス許可がない以上へのアクセスが保護されたリソースは、指定した権限を表します。</span><span class="sxs-lookup"><span data-stu-id="d9d2e-146">If this method returns `true`, the current permission represents no more access to the protected resource than does the specified permission.</span></span>  
  
 <span data-ttu-id="d9d2e-147">次のステートメントは、する必要がある`true`IsSubsetOf メソッドのすべての実装。</span><span class="sxs-lookup"><span data-stu-id="d9d2e-147">The following statements are required to be `true` for all implementations of the IsSubsetOf method.</span></span> <span data-ttu-id="d9d2e-148">X、Y、および Z の表す<xref:System.Security.IPermission>はないオブジェクトを`null`参照 (`Nothing` Visual Basic で)。</span><span class="sxs-lookup"><span data-stu-id="d9d2e-148">X, Y, and Z represent <xref:System.Security.IPermission> objects that are not a `null` reference (`Nothing` in Visual Basic).</span></span>  
  
-   <span data-ttu-id="d9d2e-149">X.IsSubsetOf(X) 返します`true`します。</span><span class="sxs-lookup"><span data-stu-id="d9d2e-149">X.IsSubsetOf(X) returns `true`.</span></span>  
  
-   <span data-ttu-id="d9d2e-150">X および Y が同じアクセス許可のセットを表す場合にのみ、X.IsSubsetOf(Y) は Y.IsSubsetOf(X) と同じ値を返します。</span><span class="sxs-lookup"><span data-stu-id="d9d2e-150">X.IsSubsetOf(Y) returns the same value as Y.IsSubsetOf(X) if and only if X and Y represent the same set of permissions.</span></span>  
  
-   <span data-ttu-id="d9d2e-151">X.IsSubsetOf(Y) と Y.IsSubsetOf(Z) 両方を返す場合`true`、X.IsSubsetOf(Z) 返します`true`します。</span><span class="sxs-lookup"><span data-stu-id="d9d2e-151">If X.IsSubsetOf(Y) and Y.IsSubsetOf(Z) both return `true`, X.IsSubsetOf(Z) returns `true`.</span></span>  
  
-  
  
 <span data-ttu-id="d9d2e-152">X がのアクセス許可の状態を持つ空 IPermission オブジェクトを表すかどうか*None* Y が IPermission のオブジェクトを表し、`null`参照 (`Nothing` Visual Basic で)、X.IsSubsetOf(Y) を返します`true`します。</span><span class="sxs-lookup"><span data-stu-id="d9d2e-152">If X represents an empty IPermission object with a permission state of *None* and Y represents an IPermission object that is a `null` reference (`Nothing` in Visual Basic), X.IsSubsetOf(Y) returns `true`.</span></span> <span data-ttu-id="d9d2e-153">Z が空のアクセス許可もある場合、複合設定操作 X.Union(Z) です。IsSubsetOf(Y) も返します`true`ため、<xref:System.Net.PeerToPeer.PnrpPermission.Union%2A>空のアクセス許可は、2 つの空のアクセス許可。</span><span class="sxs-lookup"><span data-stu-id="d9d2e-153">If Z is also an empty permission, the compound set operation X.Union(Z).IsSubsetOf(Y) also returns `true` because the <xref:System.Net.PeerToPeer.PnrpPermission.Union%2A> of two empty permissions is an empty permission.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d9d2e-154">指定するパラメーターが <see langword="null" /> 参照 (Visual Basic の場合は <see langword="Nothing" />) ではなく、現在のアクセス許可と同じクラスのインスタンスではありません。</span><span class="sxs-lookup"><span data-stu-id="d9d2e-154">The target parameter is not a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic) and is not an instance of the same class as the current permission.</span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
      </Docs>
    </Member>
    <Member MemberName="IsUnrestricted">
      <MemberSignature Language="C#" Value="public bool IsUnrestricted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsUnrestricted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.IsUnrestricted" />
      <MemberSignature Language="VB.NET" Value="Public Function IsUnrestricted () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsUnrestricted();" />
      <MemberSignature Language="F#" Value="abstract member IsUnrestricted : unit -&gt; bool&#xA;override this.IsUnrestricted : unit -&gt; bool" Usage="pnrpPermission.IsUnrestricted " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.Permissions.IUnrestrictedPermission.IsUnrestricted</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d9d2e-155">現在の <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> が無制限かどうかを指定する値を返します。</span><span class="sxs-lookup"><span data-stu-id="d9d2e-155">Returns a value specifying whether the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> is unrestricted.</span></span></summary>
        <returns><span data-ttu-id="d9d2e-156">現在のアクセス許可が無制限である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d9d2e-156"><see langword="true" /> if the current permission is unrestricted; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9d2e-157">無制限のアクセス許可は、アクセス許可によって保護されているすべてのリソースへのアクセスを表します。</span><span class="sxs-lookup"><span data-stu-id="d9d2e-157">An unrestricted permission represents access to any and all resources protected by the permission.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
        <altmember cref="T:System.Net.PeerToPeer.PnrpPermissionAttribute" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" />
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public override System.Security.SecurityElement ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.SecurityElement ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToXml () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::SecurityElement ^ ToXml();" />
      <MemberSignature Language="F#" Value="override this.ToXml : unit -&gt; System.Security.SecurityElement" Usage="pnrpPermission.ToXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d9d2e-158"><see cref="T:System.Net.PeerToPeer.PnrpPermission" /> とその現在の状態を表す XML エンコーディングを作成します。</span><span class="sxs-lookup"><span data-stu-id="d9d2e-158">Creates an XML encoding of the <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> and its current state.</span></span></summary>
        <returns><span data-ttu-id="d9d2e-159">アクセス許可のステータス情報を含むアクセス許可の XML エンコーディングを格納している <see cref="T:System.Security.SecurityElement" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d9d2e-159">A <see cref="T:System.Security.SecurityElement" /> object that contains an XML encoding of the permission, including any state information.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)" />
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Union (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Union(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Union (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Union(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="override this.Union : System.Security.IPermission -&gt; System.Security.IPermission" Usage="pnrpPermission.Union target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="d9d2e-160">現在のアクセス許可と結合するアクセス許可。</span><span class="sxs-lookup"><span data-stu-id="d9d2e-160">A permission to combine with the current permission.</span></span> <span data-ttu-id="d9d2e-161">これは、現在のアクセス許可と同じ型であることが必要です。</span><span class="sxs-lookup"><span data-stu-id="d9d2e-161">It must be of the same type as the current permission.</span></span></param>
        <summary><span data-ttu-id="d9d2e-162">現在の <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> と指定したアクセス許可の和集合を表すアクセス許可を作成します。</span><span class="sxs-lookup"><span data-stu-id="d9d2e-162">Creates a permission that is the union of the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> and the specified permission.</span></span></summary>
        <returns><span data-ttu-id="d9d2e-163">現在の <see cref="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" /> と指定したアクセス許可の <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> を表す新しいアクセス許可。</span><span class="sxs-lookup"><span data-stu-id="d9d2e-163">A new permission that represents the <see cref="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" /> of the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> and the specified permission.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9d2e-164">呼び出しの結果<xref:System.Net.PeerToPeer.PnrpPermission.Union%2A>アクセス許可が現在の両方によって表されるすべての操作を表す<xref:System.Net.PeerToPeer.PnrpPermission>と指定したアクセス許可。</span><span class="sxs-lookup"><span data-stu-id="d9d2e-164">The result of a call to <xref:System.Net.PeerToPeer.PnrpPermission.Union%2A> is a permission that represents all the operations represented by both the current <xref:System.Net.PeerToPeer.PnrpPermission> and the specified permission.</span></span> <span data-ttu-id="d9d2e-165">いずれかのアクセス許可に適合する要求は、その共用体を渡します。</span><span class="sxs-lookup"><span data-stu-id="d9d2e-165">Any demand that passes either permission passes their union.</span></span>  
  
 <span data-ttu-id="d9d2e-166">次のステートメントは、する必要がある`true`共用体のメソッドのすべての実装。</span><span class="sxs-lookup"><span data-stu-id="d9d2e-166">The following statements are required to be `true` for all implementations of the Union method.</span></span> <span data-ttu-id="d9d2e-167">X と Y の表す<xref:System.Security.IPermission>はないオブジェクトを`null`参照 (`Nothing` Visual Basic で)。</span><span class="sxs-lookup"><span data-stu-id="d9d2e-167">X and Y represent <xref:System.Security.IPermission> objects that are not a `null` reference (`Nothing` in Visual Basic).</span></span>  
  
-   <span data-ttu-id="d9d2e-168">X.Union(X) では、X と同じ値を持つオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="d9d2e-168">X.Union(X) returns an object that has the same value as X.</span></span>  
  
-   <span data-ttu-id="d9d2e-169">X.Union(Y) は、Y.Union(X) によって返されるオブジェクトと同じ値を持つオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="d9d2e-169">X.Union(Y) returns an object that has the same value as the object returned by Y.Union(X).</span></span>  
  
-   <span data-ttu-id="d9d2e-170">X.Union (、`null`参照 (`Nothing` Visual basic)) を同じ X 値を持つオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="d9d2e-170">X.Union(a `null` reference (`Nothing` in Visual Basic)) returns an object that has the same value as X.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d9d2e-171"><paramref name="target" /> パラメーターが無効です。</span><span class="sxs-lookup"><span data-stu-id="d9d2e-171"><paramref name="target" /> parameter is invalid.</span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.IsSubsetOf(System.Security.IPermission)" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.IsUnrestricted" />
      </Docs>
    </Member>
  </Members>
</Type>