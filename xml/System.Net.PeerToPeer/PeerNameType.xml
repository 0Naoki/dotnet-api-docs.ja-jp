<Type Name="PeerNameType" FullName="System.Net.PeerToPeer.PeerNameType">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8d2d303bbbec3ed8107d9ae6389a7b6bf78fa5b3" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37477144" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum PeerNameType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed PeerNameType extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.PeerNameType" />
  <TypeSignature Language="VB.NET" Value="Public Enum PeerNameType" />
  <TypeSignature Language="C++ CLI" Value="public enum class PeerNameType" />
  <TypeSignature Language="F#" Value="type PeerNameType = " />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>作成する <see cref="T:System.Net.PeerToPeer.PeerName" /> の種類を定義します。 <span data-ttu-id="d589f-102">ピア名には、セキュリティ保護されたピア名と、セキュリティ保護されていないピア名があります。</span><span class="sxs-lookup"><span data-stu-id="d589f-102">A peer name is either secured or unsecured.</span></span><span data-ttu-id="d589f-103">セキュリティ保護されたピア名では、名前の所有権が証明されます。</span><span class="sxs-lookup"><span data-stu-id="d589f-103">A secured peer name provides a proof of ownership of the name.</span></span><span data-ttu-id="d589f-104">セキュリティ保護されていないピア名には、ID が関連付けられていません。</span><span class="sxs-lookup"><span data-stu-id="d589f-104">An unsecured peer name has no identity associated.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d589f-105">ノードは、公開キーに関連付けられている秘密キーへのアクセスが必要、セキュリティで保護された作成に使用される<xref:System.Net.PeerToPeer.PeerName>の所有権を証明するために、します。</span><span class="sxs-lookup"><span data-stu-id="d589f-105">A node must have access to the private key associated with the public key, used in creating the secured <xref:System.Net.PeerToPeer.PeerName>, in order to prove ownership.</span></span> <span data-ttu-id="d589f-106">ノードには、公開キーとの関係はありません。</span><span class="sxs-lookup"><span data-stu-id="d589f-106">The node does not have a relationship to a public key.</span></span>  
  
 <span data-ttu-id="d589f-107">ピア名の形式: *Authority.Classifier*します。</span><span class="sxs-lookup"><span data-stu-id="d589f-107">The format of a peer name is: *Authority.Classifier*.</span></span> <span data-ttu-id="d589f-108">値<xref:System.Net.PeerToPeer.PeerName.Authority%2A>名前は、セキュリティで保護されたピア名またはセキュリティ保護されていないピア名かどうかによって異なります。</span><span class="sxs-lookup"><span data-stu-id="d589f-108">The value of <xref:System.Net.PeerToPeer.PeerName.Authority%2A> depends on whether the name is a secured peer name or an unsecured peer name.</span></span> <span data-ttu-id="d589f-109"><xref:System.Net.PeerToPeer.PeerName.Classifier%2A>名の一部を 15 個以下の Unicode 文字を含む任意の文字列に設定することができます、`null`ターミネータです。</span><span class="sxs-lookup"><span data-stu-id="d589f-109">The <xref:System.Net.PeerToPeer.PeerName.Classifier%2A> part of the name can be set to any string that contains 15 or fewer Unicode characters, including the `null` terminator.</span></span> <span data-ttu-id="d589f-110">1 回、 <xref:System.Net.PeerToPeer.PeerName.Authority%2A>、<xref:System.Net.PeerToPeer.PeerName.Classifier%2A>相対名またはホスト名でピアを参照することができますも、ピアのセキュリティ レベルが確立されています。</span><span class="sxs-lookup"><span data-stu-id="d589f-110">Once the <xref:System.Net.PeerToPeer.PeerName.Authority%2A>, <xref:System.Net.PeerToPeer.PeerName.Classifier%2A> and security level of a peer have been established, a peer can also be referred to with a relative name or a host name.</span></span>  
  
 <span data-ttu-id="d589f-111">所有者、またはピアのホストでセキュリティで保護されたピア名を登録できます、 [PNRP Namespace プロバイダー API](http://go.microsoft.com/fwlink?LinkID=92731)します。</span><span class="sxs-lookup"><span data-stu-id="d589f-111">Only the owner, or peer host, can register a secure peer name with the [PNRP Namespace Provider API](http://go.microsoft.com/fwlink?LinkID=92731).</span></span> <span data-ttu-id="d589f-112">任意のノードは、セキュリティ保護されていないいずれかに所有権を主張できます<xref:System.Net.PeerToPeer.PeerName>します。</span><span class="sxs-lookup"><span data-stu-id="d589f-112">Any node can claim ownership to any unsecured <xref:System.Net.PeerToPeer.PeerName>.</span></span>  
  
 <span data-ttu-id="d589f-113">**注**をセキュリティで保護されたを使用して<xref:System.Net.PeerToPeer.PeerName>ネットワー キング アプリケーションの全体的なセキュリティは確保されません。</span><span class="sxs-lookup"><span data-stu-id="d589f-113">**Note** Using a secured <xref:System.Net.PeerToPeer.PeerName> does not ensure the overall security of a networking application.</span></span> <span data-ttu-id="d589f-114">アプリケーションのセキュリティは、実装によって異なります。</span><span class="sxs-lookup"><span data-stu-id="d589f-114">Security of the application is implementation-dependent.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Net.PeerToPeer.PeerName.CreateFromPeerHostName(System.String)" />
    <altmember cref="M:System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)" />
    <altmember cref="P:System.Net.PeerToPeer.PeerName.IsSecured" />
  </Docs>
  <Members>
    <Member MemberName="Secured">
      <MemberSignature Language="C#" Value="Secured" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.PeerToPeer.PeerNameType Secured = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Net.PeerToPeer.PeerNameType.Secured" />
      <MemberSignature Language="VB.NET" Value="Secured" />
      <MemberSignature Language="C++ CLI" Value="Secured" />
      <MemberSignature Language="F#" Value="Secured = 0" Usage="System.Net.PeerToPeer.PeerNameType.Secured" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerNameType</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="d589f-115">現在のユーザーの ID を使用して、セキュリティ保護された <see cref="T:System.Net.PeerToPeer.PeerName" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d589f-115">Create a secured <see cref="T:System.Net.PeerToPeer.PeerName" /> using the identity of current user.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Unsecured">
      <MemberSignature Language="C#" Value="Unsecured" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.PeerToPeer.PeerNameType Unsecured = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Net.PeerToPeer.PeerNameType.Unsecured" />
      <MemberSignature Language="VB.NET" Value="Unsecured" />
      <MemberSignature Language="C++ CLI" Value="Unsecured" />
      <MemberSignature Language="F#" Value="Unsecured = 1" Usage="System.Net.PeerToPeer.PeerNameType.Unsecured" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerNameType</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="d589f-116">現在のユーザーの ID を使用して、セキュリティ保護されていない <see cref="T:System.Net.PeerToPeer.PeerName" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d589f-116">Create an unsecured <see cref="T:System.Net.PeerToPeer.PeerName" /> using the identity of current user.</span>
          </span>
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>