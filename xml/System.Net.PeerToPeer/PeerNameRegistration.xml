<Type Name="PeerNameRegistration" FullName="System.Net.PeerToPeer.PeerNameRegistration">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0bd2051dca34ce4b11d08176e59a988cb621edf8" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55380287" /></Metadata><TypeSignature Language="C#" Value="public class PeerNameRegistration : IDisposable, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable PeerNameRegistration extends System.Object implements class System.IDisposable, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.PeerNameRegistration" />
  <TypeSignature Language="VB.NET" Value="Public Class PeerNameRegistration&#xA;Implements IDisposable, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class PeerNameRegistration : IDisposable, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type PeerNameRegistration = class&#xA;    interface IDisposable&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> またはクラウドのセットに <see cref="T:System.Net.PeerToPeer.Cloud" /> を登録します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 登録を作成します (または更新) に関連付けられているすべての情報を<xref:System.Net.PeerToPeer.PeerName>ピア クラウドまたはクラウドで。  
  
 複数存在することは<xref:System.Net.PeerToPeer.PeerNameRegistration>ピア同名のオブジェクト。 このような場合は、ピア名は、セキュリティ保護されている場合は、各インスタンスを表します<xref:System.Net.PeerToPeer.PeerNameRegistration>別のクラウドで。 ただし、ピア名が保護されていない場合、回登録できます同じクラウド複数、各登録が、別のプロセスからのものを提供します。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PeerNameRegistration ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PeerNameRegistration();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> クラスの新しい既定のインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 型の新しい既定インスタンスを返す<xref:System.Net.PeerToPeer.PeerNameRegistration>します。 構築時にピア名の登録を行うことはできません。  
  
 このコンス トラクターを持つオブジェクトをインスタンス化した後、呼び出し元が呼び出す前に、インスタンス内の該当フィールドを設定する必要があります<xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A>または<xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A>します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PeerNameRegistration (System.Net.PeerToPeer.PeerName name, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.PeerToPeer.PeerName name, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As PeerName, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PeerNameRegistration(System::Net::PeerToPeer::PeerName ^ name, int port);" />
      <MemberSignature Language="F#" Value="new System.Net.PeerToPeer.PeerNameRegistration : System.Net.PeerToPeer.PeerName * int -&gt; System.Net.PeerToPeer.PeerNameRegistration" Usage="new System.Net.PeerToPeer.PeerNameRegistration (name, port)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="name" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name">登録する <see cref="T:System.Net.PeerToPeer.PeerName" /> オブジェクト。</param>
        <param name="port">登録するポート番号を指定する整数値。</param>
        <summary>指定した名前とポート番号を使用して、<see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 すべてのソース アドレス (ipv6 と IPv4 の両方) を登録するために使用するインスタンスを作成するこのコンス トラクターを呼び出すと、ピアが現在参加しているすべてのクラウドの指定されたポート。  オブジェクトが正常に構築される場合、指定した<xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A>と<xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A>が設定されます。  
  
 ピア名が、セキュリティで保護されで以前に登録されたかどうか、<xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>ピアが、現在参加している、<xref:System.Net.PeerToPeer.PeerToPeerException>がスローされます。  
  
 このコンス トラクターを作成するだけ、<xref:System.Net.PeerToPeer.PeerNameRegistration>インスタンスです。 登録は行われません。 このコンス トラクターで登録オブジェクトをインスタンス化し、そのフィールドに入力したら後で、アプリケーションを呼び出す必要があります<xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A>実際の登録を実行します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="name" /> パラメーターとして <see langword="null" /> を使用することはできません。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">指定したポート番号が 0 未満です。  ポート番号は 0 以上で、65,535 (0xFFFF) 未満である必要があります。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">-   指定した <see cref="T:System.Net.PeerToPeer.PeerName" /> はこのホストから既に登録されています。  
  
-   リモート ピアには、指定した <see cref="T:System.Net.PeerToPeer.PeerName" /> オブジェクトに対する <see cref="P:System.Net.PeerToPeer.PeerName.Authority" /> がありません。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PeerNameRegistration (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PeerNameRegistration(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Net.PeerToPeer.PeerNameRegistration : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Net.PeerToPeer.PeerNameRegistration" Usage="new System.Net.PeerToPeer.PeerNameRegistration (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">このインスタンスの逆シリアル化に必要なデータを格納するオブジェクトへの参照。</param>
        <param name="context">データを逆シリアル化するための手段を提供するコンテキスト。 シリアル化されたデータのソースとも呼ばれます。</param>
        <summary>新しくシリアル化可能な <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> オブジェクトを初期化します。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="N:System.Runtime.Serialization" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
        <altmember cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PeerNameRegistration (System.Net.PeerToPeer.PeerName name, int port, System.Net.PeerToPeer.Cloud cloud);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.PeerToPeer.PeerName name, int32 port, class System.Net.PeerToPeer.Cloud cloud) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PeerNameRegistration(System::Net::PeerToPeer::PeerName ^ name, int port, System::Net::PeerToPeer::Cloud ^ cloud);" />
      <MemberSignature Language="F#" Value="new System.Net.PeerToPeer.PeerNameRegistration : System.Net.PeerToPeer.PeerName * int * System.Net.PeerToPeer.Cloud -&gt; System.Net.PeerToPeer.PeerNameRegistration" Usage="new System.Net.PeerToPeer.PeerNameRegistration (name, port, cloud)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="cloud" Type="System.Net.PeerToPeer.Cloud" />
      </Parameters>
      <Docs>
        <param name="name">登録する <see cref="T:System.Net.PeerToPeer.PeerName" /> オブジェクト。</param>
        <param name="port">登録するポート番号を指定する整数値。</param>
        <param name="cloud">ピア名を登録する <see cref="T:System.Net.PeerToPeer.Cloud" />。</param>
        <summary>指定したピア名、ポート番号、<see cref="T:System.Net.PeerToPeer.Cloud" /> を使用して、<see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンス トラクターを呼び出すすべてのソース アドレス (IPv6 と IPv4 の両方)、指定されたポート、および指定した登録に使用されるインスタンスを作成します<xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>します。  プロパティを設定するオブジェクトが正常に構築される場合、指定した<xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A>、<xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A>と<xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>します。  
  
 クラウドのパラメーターがある場合`null`を使用して名前を登録、<xref:System.Net.PeerToPeer.Cloud.Available>ショートカットで、既定値を初期化します、 <xref:System.Net.PeerToPeer.Cloud.Name%2A>、 <xref:System.Net.PeerToPeer.Cloud.Scope%2A>、および<xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>します。  
  
 インスタンス化した後、<xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A>を登録するメソッドを呼び出す必要があります、<xref:System.Net.PeerToPeer.PeerName>します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="name" /> パラメーターとして <see langword="null" /> を使用することはできません。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">指定したポート番号が 0 未満です。  ポート番号は 0 以上で、65,535 (0xFFFF) 未満である必要があります。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">-   指定した <see cref="T:System.Net.PeerToPeer.PeerName" /> はこのホストから既に登録されています。  
  
-   リモート ピアには、指定した <see cref="T:System.Net.PeerToPeer.PeerName" /> オブジェクトに対する <see cref="P:System.Net.PeerToPeer.PeerName.Authority" /> がありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="Cloud">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Cloud Cloud { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.PeerToPeer.Cloud Cloud" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" />
      <MemberSignature Language="VB.NET" Value="Public Property Cloud As Cloud" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::PeerToPeer::Cloud ^ Cloud { System::Net::PeerToPeer::Cloud ^ get(); void set(System::Net::PeerToPeer::Cloud ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Cloud : System.Net.PeerToPeer.Cloud with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.Cloud" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Cloud</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /> オブジェクトを登録する <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> 内の情報を取得または設定します。</summary>
        <value>この登録を定義するピア クラウドを指定する <see cref="T:System.Net.PeerToPeer.Cloud" /> 型のオブジェクト。 既定では、このプロパティは <see langword="null" /> に設定されます。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Comment">
      <MemberSignature Language="C#" Value="public string Comment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Comment" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.Comment" />
      <MemberSignature Language="VB.NET" Value="Public Property Comment As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Comment { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Comment : string with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.Comment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Net.PeerToPeer.PeerName" /> に登録する <see cref="T:System.Net.PeerToPeer.Cloud" /> オブジェクトに関する追加情報を取得または設定します。</summary>
        <value><see cref="T:System.Net.PeerToPeer.PeerName" /> に関連付ける <see cref="T:System.Net.PeerToPeer.Cloud" /> に関する追加情報を含んでいるコメント。 既定では、このプロパティは <see langword="null" /> に設定されます。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">指定した文字列値は、39 文字を超える Unicode 文字です。</exception>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public byte[] Data { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Data" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.Data" />
      <MemberSignature Language="VB.NET" Value="Public Property Data As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ Data { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Data : byte[] with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> オブジェクトのアプリケーション定義のバイナリ データを取得または設定します。</summary>
        <value>エントリに関連付けられているバイナリ データを保持するバイト配列。 既定では、このプロパティは <see langword="null" /> に設定されます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 最大量<xref:System.Net.PeerToPeer.PeerNameRegistration.Data%2A>を指定することは 4,096 バイトです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定した <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Data" /> が 4096 バイトを超えています。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> オブジェクトによって使用されているリソースを解放します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ピアから離したときに、 <xref:System.Net.PeerToPeer.Cloud>、クラウドが不要、<xref:System.Net.PeerToPeer.PeerNameRegistration>ピアに関連付けられているオブジェクト。  登録オブジェクトを停止または破棄するかどうかは、クラウドがこのピアまたは別のピアを登録するオブジェクトを再利用するかどうかによって異なります。 通信するために使用するピア ホストが期待どおりの登録オブジェクト内で他の任意のエンドポイントがある場合は、停止、またはこのオブジェクトを破棄する前に発生する必要があります、クラウド内でそれらのエンドポイントを登録します。  
  
 複数のピアを登録する、クラウドが必要とする場合、<xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A>メソッドが推奨されています。 クラウドでメモリが不要になった場合は、経由でオペレーティング システムに返される必要があります、<xref:System.Net.PeerToPeer.PeerNameRegistration.Dispose%2A>メソッド。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="peerNameRegistration.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>この <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> オブジェクトによって使用されているすべてのリソースを解放します。</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="usage"><para>lways が破棄する前に、Dispose メソッドを呼び出し、<see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />オブジェクト。</para></block>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="peerNameRegistration.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
        <summary>アンマネージド リソースを解放します。オプションで <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> オブジェクトによって使用されているマネージド リソースも解放できます。</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="usage"><para>最後の参照を解放する前に常に Dispose メソッドを呼び出す、<see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />オブジェクト。</para></block>
      </Docs>
    </Member>
    <Member MemberName="EndPointCollection">
      <MemberSignature Language="C#" Value="public System.Net.IPEndPointCollection EndPointCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IPEndPointCollection EndPointCollection" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EndPointCollection As IPEndPointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::IPEndPointCollection ^ EndPointCollection { System::Net::IPEndPointCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EndPointCollection : System.Net.IPEndPointCollection" Usage="System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPEndPointCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>関連付けられているピア名が登録されたネットワーク エンドポイントのコレクションを取得します。</summary>
        <value>関連付けられているピア名が登録されたネットワーク エンドポイントを格納している <see cref="P:System.Net.PeerToPeer.PeerNameRecord.EndPointCollection" /> オブジェクト。 明示的に指定しない場合、すべてのプロパティの既定値は、参照型では <see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net>名前空間、 <xref:System.Net.IPEndPoint> IP アドレスとポート番号として、ネットワーク エンドポイントを表します。  PNRP では、各エンドポイントの IP アドレスとポート値を提供する必要があります。  指定できるエンドポイントの最大数は、10 です。 このパラメーターがの場合、アドレスの自動選択が使用される`null`します。  
  
 登録するアドレスを自動的に選択される登録メソッドを使用する場合、ピア名が登録されているアドレスを確認する方法はありません。  つまり、<xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A>プロパティが選択されているアドレスを反映するように更新されません。  
  
 1 つ以上のノードのピア名が登録されているときに各<xref:System.Net.PeerToPeer.PeerNameRegistration>が異なると<xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A>異なる各登録インスタンスで定義されたプロパティになります。 <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A>が 1 つ以上に登録されている<xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>、各登録が distinct およびエンドポイントのコレクションをインスタンスごとに異なる通常になります。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para>このピアが通信するエンドポイントの一覧は、異なる方法で格納されているこのピア名が認識されるエンドポイントの一覧と同じではありません。</para></block>
        <altmember cref="T:System.Net.IPEndPointCollection" />
        <altmember cref="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="protected virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="peerNameRegistration.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> オブジェクトに関連付けられたシリアル化データを保持します。</param>
        <param name="context"><see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> オブジェクトに関連付けられたシリアル化ストリームの転送先を格納します。</param>
        <summary>シリアル化情報オブジェクトを、<see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> インスタンスのシリアル化に必要なデータで事前設定します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRegistered">
      <MemberSignature Language="C#" Value="public bool IsRegistered ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsRegistered() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.IsRegistered" />
      <MemberSignature Language="VB.NET" Value="Public Function IsRegistered () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsRegistered();" />
      <MemberSignature Language="F#" Value="member this.IsRegistered : unit -&gt; bool" Usage="peerNameRegistration.IsRegistered " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> プロパティで指定されているピア名が、ホスト上の特定の <see cref="T:System.Net.PeerToPeer.Cloud" /> に登録されているかどうかを取得または設定します。</summary>
        <returns>ピア名がピア ホストの <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /> に登録されている場合は <see langword="true" />。 <see langword="false" /> の場合、<see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Start" /> を使用して登録プロセスを開始できます。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">既に破棄されているオブジェクトは登録できません。</exception>
        <altmember cref="T:System.Net.PeerToPeer.PeerNameResolver" />
      </Docs>
    </Member>
    <Member MemberName="PeerName">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerName PeerName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.PeerToPeer.PeerName PeerName" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" />
      <MemberSignature Language="VB.NET" Value="Public Property PeerName As PeerName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::PeerToPeer::PeerName ^ PeerName { System::Net::PeerToPeer::PeerName ^ get(); void set(System::Net::PeerToPeer::PeerName ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PeerName : System.Net.PeerToPeer.PeerName with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.PeerName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ピア クラウドに登録するピア名を取得または設定します。</summary>
        <value>この <see cref="T:System.Net.PeerToPeer.PeerName" /> オブジェクトに関連付けられた値が格納されている <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 型のオブジェクト。 明示的に指定しない場合、すべてのプロパティの既定値は、参照型では <see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ピア名は、1 つ以上のノードに登録できます。各<xref:System.Net.PeerToPeer.PeerNameRegistration>インスタンスは異なります。 <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A>プロパティに関連付けられた対応する各<xref:System.Net.PeerToPeer.PeerName>インスタンスが異なる。 また、ノードが; に接続されている 1 つ以上のクラウドのピア名を登録することはこれらの登録の各機能は異なります。 ピア名の<xref:System.Net.IPEndPointCollection>これらの各インスタンスに異なるものになります。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.PeerName.CreateFromPeerHostName(System.String)" />
        <altmember cref="M:System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Port">
      <MemberSignature Language="C#" Value="public int Port { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Port" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.Port" />
      <MemberSignature Language="VB.NET" Value="Public Property Port As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Port { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Port : int with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.Port" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> オブジェクトに登録するピアが使用する [TCP/IP](https://go.microsoft.com/fwlink?LinkID=98458) ポート番号を取得または設定します。</summary>
        <value><see cref="T:System.Net.IPEndPoint" /> の TCP ポート番号を示す整数値。 明示的に指定しない場合、このプロパティの既定値は 0 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定のポートを使って、<xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A>メソッド エンドポイントが指定されていない場合にのみです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定したポート値が 0 未満です。  ポート番号は 0 以上で、65,535 (0xFFFF) 未満である必要があります。</exception>
        <altmember cref="M:System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)" />
        <altmember cref="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" />
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start();" />
      <MemberSignature Language="F#" Value="member this.Start : unit -&gt; unit" Usage="peerNameRegistration.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> を <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /> に登録します。 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" /> がまったく指定されないと、<see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Port" /> プロパティで指定したポート値を使用して、自動アドレス選択が使用されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メソッドで指定されたピア名の登録、<xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A>すべてのソース アドレスを持つプロパティと<xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A>コンス トラクターで指定します。 既定のポートは、エンドポイントが指定されていない場合にのみ、このメソッドによって使用されます。  
  
 場合、<xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>プロパティは`null`、このメソッドで指定されたピア名の登録、<xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A>プロパティを使用して、<xref:System.Net.PeerToPeer.Cloud.Available>フィールドで、既定値を初期化します、 <xref:System.Net.PeerToPeer.Cloud.Name%2A>、 <xref:System.Net.PeerToPeer.Cloud.Scope%2A>、および<xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.  
  
 後に、<xref:System.Net.PeerToPeer.PeerNameRegistration>オブジェクトが開始されたら、<xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A>保護を停止するメソッドを使用します。  
  
 登録を更新する、<xref:System.Net.PeerToPeer.PeerNameRegistration.Update%2A>メソッドを使用する必要があります。  
  
   
  
## Examples  
 次のコード例を作成、<xref:System.Net.PeerToPeer.PeerName>指定されたメタデータと共にし登録します。  
  
 [!code-csharp[NCLPNRPRegisterPeerName#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPNRPRegisterPeerName/CS/RegisterPeerName.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> プロパティが <see langword="null" /> に設定されている。</exception>
        <exception cref="T:System.ObjectDisposedException">このオブジェクトでは、Dispose() が既に呼び出されました。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">-   指定した <see cref="T:System.Net.PeerToPeer.PeerName" /> は既に登録されています。 登録を更新するには、<see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" /> メソッドを使用する必要があります。  
  
-   リモート ピアに、指定した <see cref="P:System.Net.PeerToPeer.PeerName.Authority" /> の <see cref="T:System.Net.PeerToPeer.PeerName" /> がありません。  
  
-   <see cref="T:System.Net.PeerToPeer.PeerName" /> と <see cref="P:System.Net.PeerToPeer.PeerNameRecord.Data" /> がどちらも指定されていません。少なくとも 1 つを指定する必要があります。  
  
-   メッセージまたはデータ要素が無効です。 または、<see cref="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" /> が設定されておらず、データ BLOB または <see cref="T:System.Net.IPEndPoint" /> が指定されていません。</exception>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="peerNameRegistration.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> プロパティで指定されたピア名の登録を、登録されていたすべてのクラウドから解除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 登録プロセスを停止すると後、登録オブジェクトの状態は、状態、既定のコンス トラクターによって構築された直後後です。 この状態で、そのすべてのプロパティには値がないと見なされます。 <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A>再起動するメソッドを使用する可能性があります。  
  
 同じピア名の複数の登録オブジェクトを含めることは可能になります。  このような場合は、ピア名がセキュリティで保護された各インスタンスがそのさまざまな PNRP クラウド内の登録を表します。  ただし、ピア名が保護されていない場合、ことができますに同じクラウド複数回登録。  
  
 このインスタンスは既に停止されている場合は、このメソッドを呼び出しても効果はありません。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> プロパティは登録されていません。 これは、<see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> オブジェクトが空のコンストラクターを使用して構築されている場合に発生します。 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> を呼び出す前に、このインスタンスで <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Start" /> プロパティを設定する必要があります。</exception>
        <exception cref="T:System.ObjectDisposedException">このオブジェクトでは、Dispose() が既に呼び出されました。</exception>
        <altmember cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> インスタンスに関連付けられているシリアル化データを保持します。</param>
        <param name="context"><see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> インスタンスに関連付けられているシリアル化ストリームの転送先を格納します。</param>
        <summary><see cref="T:System.Runtime.Serialization.ISerializable" /> インターフェイスを実装し、<see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> インスタンスをシリアル化するために必要なデータを返します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public void Update ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Update() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Update" />
      <MemberSignature Language="VB.NET" Value="Public Sub Update ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Update();" />
      <MemberSignature Language="F#" Value="member this.Update : unit -&gt; unit" Usage="peerNameRegistration.Update " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>特定の <see cref="T:System.Net.PeerToPeer.Cloud" /> に登録されたノードの <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> を更新します。 プロパティで指定された情報を使用して更新が実行されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このクラウドに、すべての情報に登録されている<xref:System.Net.PeerToPeer.PeerName>呼び出しの前に完全に破棄されます。  既存の登録には、新しいデータが組み合わされていません。  更新する、 <xref:System.Net.PeerToPeer.PeerNameRegistration>、最初にこのインスタンスのプロパティを更新して、このメソッドを呼び出します。  
  
 後に、<xref:System.Net.PeerToPeer.PeerNameRecord>が登録されている、<xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A>プロパティを更新できません。  レコード内の他のすべてのフィールドを更新することがあります。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> プロパティが <see langword="null" /> に設定されている。</exception>
        <exception cref="T:System.ObjectDisposedException">-   <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> プロパティがまだ登録されていません。 <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" /> プロパティで指定されたピア名が 1 つ以上のクラウドに登録されるまで、<see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> メソッドを呼び出すことはできません。  
  
-   <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> プロパティで指定されたピア名が、対応する <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> の登録以降に変更されています。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">既に破棄されているオブジェクトは登録できません。</exception>
        <exception cref="T:System.ArgumentNullException"><see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> プロパティが <see langword="null" /> に設定されています。</exception>
      </Docs>
    </Member>
    <Member MemberName="UseAutoEndPointSelection">
      <MemberSignature Language="C#" Value="public bool UseAutoEndPointSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseAutoEndPointSelection" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" />
      <MemberSignature Language="VB.NET" Value="Public Property UseAutoEndPointSelection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseAutoEndPointSelection { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseAutoEndPointSelection : bool with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ピア メッシュまたは <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /> を走査するときにエンドポイントの自動選択を使用するかどうかを指定する値を取得または設定します。</summary>
        <value>エンドポイントの自動選択を使用する場合は <see langword="true" />。それ以外の方法でエンドポイントを決定する場合は <see langword="false" />。 既定値は <see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 自動のエンドポイントの選択を使用する場合 (このプロパティに設定`true`) エンドポイント情報が指定の開始前、<xref:System.Net.PeerToPeer.PeerNameRegistration>システムは、個々 のエンドポイントを選択し、すべてに関連付けられているピア名には発行使用可能なクラウド。  自動選択が 0 として、ポートが指定されていない場合、<xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A>します。  
  
 設定すると`false`、前述のように、自動選択は実行されません。  これにより、データ blob と共にピア名を公開する登録プロセス (で指定されたとおり、<xref:System.Net.PeerToPeer.PeerNameRecord.Data%2A>プロパティ)。 エンドポイントの名前に関連付けがありません。  
  
 登録するアドレスを自動的に選択される登録メソッドを使用する場合をどのようなアドレスを決定する方法はありません、<xref:System.Net.PeerToPeer.PeerName>オブジェクトが登録されています。  つまり、<xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A>プロパティが選択されているアドレスを反映するように更新されません。  
  
 ピア名の登録が開始した後、このプロパティを更新しても効果はありません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>