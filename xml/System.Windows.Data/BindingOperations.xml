<Type Name="BindingOperations" FullName="System.Windows.Data.BindingOperations">
  <Metadata><Meta Name="ms.openlocfilehash" Value="03659029ec57d98d9016e938004b9020468d5614" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69211298" /></Metadata><TypeSignature Language="C#" Value="public static class BindingOperations" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit BindingOperations extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.BindingOperations" />
  <TypeSignature Language="VB.NET" Value="Public Class BindingOperations" />
  <TypeSignature Language="C++ CLI" Value="public ref class BindingOperations abstract sealed" />
  <TypeSignature Language="F#" Value="type BindingOperations = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="8c575-101"><see cref="T:System.Windows.Data.Binding" />、<see cref="T:System.Windows.Data.MultiBinding" />、<see cref="T:System.Windows.Data.PriorityBinding" /> オブジェクトなどのバインディングを操作するための静的メソッドを提供します。</span><span class="sxs-lookup"><span data-stu-id="8c575-101">Provides static methods to manipulate bindings, including <see cref="T:System.Windows.Data.Binding" />, <see cref="T:System.Windows.Data.MultiBinding" />, and <see cref="T:System.Windows.Data.PriorityBinding" /> objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c575-102">このクラスは、データバインディングのヘルパー操作として機能する静的メソッドのセットを公開します。</span><span class="sxs-lookup"><span data-stu-id="8c575-102">This class exposes a set of static methods that serve as helper operations for data bindings.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AccessCollection">
      <MemberSignature Language="C#" Value="public static void AccessCollection (System.Collections.IEnumerable collection, Action accessMethod, bool writeAccess);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AccessCollection(class System.Collections.IEnumerable collection, class System.Action accessMethod, bool writeAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.AccessCollection(System.Collections.IEnumerable,System.Action,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AccessCollection (collection As IEnumerable, accessMethod As Action, writeAccess As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AccessCollection(System::Collections::IEnumerable ^ collection, Action ^ accessMethod, bool writeAccess);" />
      <MemberSignature Language="F#" Value="static member AccessCollection : System.Collections.IEnumerable * Action * bool -&gt; unit" Usage="System.Windows.Data.BindingOperations.AccessCollection (collection, accessMethod, writeAccess)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.IEnumerable" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="accessMethod" Type="System.Action" Index="1" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="writeAccess" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="8c575-103">アクセスするコレクション。</span><span class="sxs-lookup"><span data-stu-id="8c575-103">The collection to access.</span></span></param>
        <param name="accessMethod"><span data-ttu-id="8c575-104">コレクション上で実行するアクション。</span><span class="sxs-lookup"><span data-stu-id="8c575-104">The action to perform on the collection.</span></span></param>
        <param name="writeAccess"><span data-ttu-id="8c575-105"><paramref name="accessMethod" /> がコレクションに記述する場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8c575-105"><see langword="true" /> if <paramref name="accessMethod" /> will write to the collection; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="8c575-106">EnableCollectionSynchronization を呼び出したときに指定されるアプリケーション同期機構を使用してコレクションへのアクセスを提供します。</span><span class="sxs-lookup"><span data-stu-id="8c575-106">Provides access to a collection by using the synchronization mechanism that the application specified when it called EnableCollectionSynchronization.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearAllBindings">
      <MemberSignature Language="C#" Value="public static void ClearAllBindings (System.Windows.DependencyObject target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClearAllBindings(class System.Windows.DependencyObject target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.ClearAllBindings(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ClearAllBindings (target As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ClearAllBindings(System::Windows::DependencyObject ^ target);" />
      <MemberSignature Language="F#" Value="static member ClearAllBindings : System.Windows.DependencyObject -&gt; unit" Usage="System.Windows.Data.BindingOperations.ClearAllBindings target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="8c575-107">バインディングが削除されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8c575-107">The object from which to remove bindings.</span></span></param>
        <summary><span data-ttu-id="8c575-108">種類が <see cref="T:System.Windows.Data.Binding" />、<see cref="T:System.Windows.Data.MultiBinding" />、および <see cref="T:System.Windows.Data.PriorityBinding" /> のバインディングを含むすべてのバインディングを、指定した <see cref="T:System.Windows.DependencyObject" /> から削除します。</span><span class="sxs-lookup"><span data-stu-id="8c575-108">Removes all bindings, including bindings of type <see cref="T:System.Windows.Data.Binding" />, <see cref="T:System.Windows.Data.MultiBinding" />, and <see cref="T:System.Windows.Data.PriorityBinding" />, from the specified <see cref="T:System.Windows.DependencyObject" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c575-109">指定されたオブジェクトがデータバインドされていない場合、このメソッドによる影響はありません。</span><span class="sxs-lookup"><span data-stu-id="8c575-109">If the specified object is not data-bound, this method has no effect.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c575-110"><paramref name="target" /> が <see langword="null" /> の場合。</span><span class="sxs-lookup"><span data-stu-id="8c575-110">If <paramref name="target" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ClearBinding">
      <MemberSignature Language="C#" Value="public static void ClearBinding (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClearBinding(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.ClearBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ClearBinding (target As DependencyObject, dp As DependencyProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ClearBinding(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="static member ClearBinding : System.Windows.DependencyObject * System.Windows.DependencyProperty -&gt; unit" Usage="System.Windows.Data.BindingOperations.ClearBinding (target, dp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="8c575-111">バインドを削除するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8c575-111">The object from which to remove the binding.</span></span></param>
        <param name="dp"><span data-ttu-id="8c575-112">バインドを削除する依存関係プロパティ。</span><span class="sxs-lookup"><span data-stu-id="8c575-112">The dependency property from which to remove the binding.</span></span></param>
        <summary><span data-ttu-id="8c575-113">プロパティからバインドを削除します (存在する場合)。</span><span class="sxs-lookup"><span data-stu-id="8c575-113">Removes the binding from a property if there is one.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c575-114">指定されたプロパティが<xref:System.Windows.Data.Binding>、 <xref:System.Windows.Data.PriorityBinding>、または<xref:System.Windows.Data.MultiBinding>を使用してデータバインドされている場合、このメソッドは対応するバインディング式を削除し、プロパティの値を、バインディングによってローカル値が設定される前の値に復元します。</span><span class="sxs-lookup"><span data-stu-id="8c575-114">If the given property is data-bound with a <xref:System.Windows.Data.Binding>, <xref:System.Windows.Data.PriorityBinding>, or <xref:System.Windows.Data.MultiBinding>, this method removes the corresponding binding expression and restores the value of the property to what it was before any local value was set through the binding.</span></span>  
  
 <span data-ttu-id="8c575-115">指定されたプロパティがデータバインドされていない場合、このメソッドによる影響はありません。</span><span class="sxs-lookup"><span data-stu-id="8c575-115">If the given property is not data-bound, this method has no effect.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c575-116"><paramref name="target" /> パラメーターと <paramref name="dp" /> パラメーターを <see langword="null" /> にすることはできません。</span><span class="sxs-lookup"><span data-stu-id="8c575-116">The <paramref name="target" /> and <paramref name="dp" /> parameters cannot be <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CollectionRegistering">
      <MemberSignature Language="C#" Value="public static event EventHandler&lt;System.Windows.Data.CollectionRegisteringEventArgs&gt; CollectionRegistering;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Data.CollectionRegisteringEventArgs&gt; CollectionRegistering" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Data.BindingOperations.CollectionRegistering" />
      <MemberSignature Language="VB.NET" Value="Public Shared Event CollectionRegistering As EventHandler(Of CollectionRegisteringEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler&lt;System::Windows::Data::CollectionRegisteringEventArgs ^&gt; ^ CollectionRegistering;" />
      <MemberSignature Language="F#" Value="member this.CollectionRegistering : EventHandler&lt;System.Windows.Data.CollectionRegisteringEventArgs&gt; " Usage="member this.CollectionRegistering : System.EventHandler&lt;System.Windows.Data.CollectionRegisteringEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Data.CollectionRegisteringEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8c575-117">データ バインディングのシステムがコレクションを確認すると発生します。</span><span class="sxs-lookup"><span data-stu-id="8c575-117">Occurs when the data-binding system notices a collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CollectionViewRegistering">
      <MemberSignature Language="C#" Value="public static event EventHandler&lt;System.Windows.Data.CollectionViewRegisteringEventArgs&gt; CollectionViewRegistering;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Data.CollectionViewRegisteringEventArgs&gt; CollectionViewRegistering" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Data.BindingOperations.CollectionViewRegistering" />
      <MemberSignature Language="VB.NET" Value="Public Shared Event CollectionViewRegistering As EventHandler(Of CollectionViewRegisteringEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler&lt;System::Windows::Data::CollectionViewRegisteringEventArgs ^&gt; ^ CollectionViewRegistering;" />
      <MemberSignature Language="F#" Value="member this.CollectionViewRegistering : EventHandler&lt;System.Windows.Data.CollectionViewRegisteringEventArgs&gt; " Usage="member this.CollectionViewRegistering : System.EventHandler&lt;System.Windows.Data.CollectionViewRegisteringEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Data.CollectionViewRegisteringEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8c575-118">データ バインディングのシステムがコレクション ビューを確認すると発生します。</span><span class="sxs-lookup"><span data-stu-id="8c575-118">Occurs when the data-binding system notices a collection view.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableCollectionSynchronization">
      <MemberSignature Language="C#" Value="public static void DisableCollectionSynchronization (System.Collections.IEnumerable collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DisableCollectionSynchronization(class System.Collections.IEnumerable collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.DisableCollectionSynchronization(System.Collections.IEnumerable)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DisableCollectionSynchronization (collection As IEnumerable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DisableCollectionSynchronization(System::Collections::IEnumerable ^ collection);" />
      <MemberSignature Language="F#" Value="static member DisableCollectionSynchronization : System.Collections.IEnumerable -&gt; unit" Usage="System.Windows.Data.BindingOperations.DisableCollectionSynchronization collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.IEnumerable" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="8c575-119">同期アクセスを削除するコレクション。</span><span class="sxs-lookup"><span data-stu-id="8c575-119">The collection to remove synchronized access from.</span></span></param>
        <summary><span data-ttu-id="8c575-120">指定されたコレクションについて登録されている同期を削除します。</span><span class="sxs-lookup"><span data-stu-id="8c575-120">Remove the synchronization registered for the specified collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisconnectedSource">
      <MemberSignature Language="C#" Value="public static object DisconnectedSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property object DisconnectedSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingOperations.DisconnectedSource" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DisconnectedSource As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Object ^ DisconnectedSource { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DisconnectedSource : obj" Usage="System.Windows.Data.BindingOperations.DisconnectedSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8c575-121">項目コンテナーがビジュアル ツリーから削除された場合に <see cref="P:System.Windows.FrameworkElement.DataContext" /> を置換するオブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="8c575-121">Gets an object that replaces the <see cref="P:System.Windows.FrameworkElement.DataContext" /> when an item container is removed from the visual tree.</span></span></summary>
        <value><span data-ttu-id="8c575-122">項目コンテナーがビジュアル ツリーから削除された場合に <see cref="P:System.Windows.FrameworkElement.DataContext" /> を置換するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8c575-122">An object that replaces the <see cref="P:System.Windows.FrameworkElement.DataContext" /> when an item container is removed from the visual tree.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c575-123">項目コンテナーのを処理する必要がある場合<xref:System.Windows.FrameworkElement.DataContext%2A>は、このプロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="8c575-123">Use this property if you need to deal with the <xref:System.Windows.FrameworkElement.DataContext%2A> of an item container.</span></span>  <span data-ttu-id="8c575-124">項目コンテナーは、<xref:System.Windows.Controls.ItemsControl> に項目を表示する UI 要素です。</span><span class="sxs-lookup"><span data-stu-id="8c575-124">An item container is the UI element that displays an item in an <xref:System.Windows.Controls.ItemsControl>.</span></span>  <span data-ttu-id="8c575-125"><xref:System.Windows.Controls.ItemsControl> がコレクションにバインドされたデータの場合、項目コンテナーは項目ごとに生成されます。</span><span class="sxs-lookup"><span data-stu-id="8c575-125">When an <xref:System.Windows.Controls.ItemsControl> is data bound to a collection, an item container is generated for each item.</span></span>  <span data-ttu-id="8c575-126">場合によっては、項目コンテナーがビジュアル ツリーから削除されます。</span><span class="sxs-lookup"><span data-stu-id="8c575-126">In some cases, item containers are removed from the visual tree.</span></span>  <span data-ttu-id="8c575-127">項目コンテナーが削除される 2 つの一般的なケースは、項目が基になるコレクションから削除されたときと、仮想化が <xref:System.Windows.Controls.ItemsControl> で有効になっているときです。</span><span class="sxs-lookup"><span data-stu-id="8c575-127">Two typical cases where an item container is removed are when an item is removed from the underlying collection and when virtualization is enabled on the <xref:System.Windows.Controls.ItemsControl>.</span></span>  <span data-ttu-id="8c575-128">このような場合、 <xref:System.Windows.FrameworkElement.DataContext%2A>項目コンテナーのプロパティは<xref:System.Windows.Data.BindingOperations.DisconnectedSource%2A>プロパティに設定されます。項目の<xref:System.Windows.FrameworkElement.DataContextChanged>イベント<xref:System.Windows.FrameworkElement.DataContext%2A>で<xref:System.Windows.FrameworkElement.DataContext%2A>にアクセス<xref:System.Windows.Data.BindingOperations.DisconnectedSource%2A>する前に、がと等しいかどうかを確認する必要があります。ある.</span><span class="sxs-lookup"><span data-stu-id="8c575-128">In these cases, the <xref:System.Windows.FrameworkElement.DataContext%2A> property of the item container will be set to the <xref:System.Windows.Data.BindingOperations.DisconnectedSource%2A> property  You should check whether the <xref:System.Windows.FrameworkElement.DataContext%2A> is equal to the <xref:System.Windows.Data.BindingOperations.DisconnectedSource%2A> before accessing the <xref:System.Windows.FrameworkElement.DataContext%2A> in the <xref:System.Windows.FrameworkElement.DataContextChanged> event for item containers.</span></span> <span data-ttu-id="8c575-129">項目コンテナーと仮想化の詳細については、 <xref:System.Windows.Controls.VirtualizingStackPanel>クラスの「解説」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="8c575-129">For more information about item containers and virtualization, see the remarks in the <xref:System.Windows.Controls.VirtualizingStackPanel> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="EnableCollectionSynchronization">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8c575-130"><see cref="T:System.Windows.Data.CollectionView" /> オブジェクトが、複数のスレッドで使用されるコレクションへの同期アクセスに参加できるようにします。</span><span class="sxs-lookup"><span data-stu-id="8c575-130">Enables a <see cref="T:System.Windows.Data.CollectionView" /> object to participate in synchronized access to a collection that is used on multiple threads.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="8c575-131">WPF アプリケーション<xref:System.Windows.Controls.ItemsControl>では、またはそのサブクラス ( <xref:System.Windows.Controls.ListView><xref:System.Windows.Controls.ListBox>、 <xref:System.Windows.Controls.DataGrid> <xref:System.Windows.Controls.TreeView>、、など) のいずれかを使用して、データのコレクションを表示できます。</span><span class="sxs-lookup"><span data-stu-id="8c575-131">A WPF application can display a collection of data using an <xref:System.Windows.Controls.ItemsControl> or one of its subclasses (<xref:System.Windows.Controls.ListBox>, <xref:System.Windows.Controls.DataGrid>, <xref:System.Windows.Controls.TreeView>, <xref:System.Windows.Controls.ListView>, etc.).</span></span><span data-ttu-id="8c575-132"> WPF は、のサブクラスを使用して、コレクション<xref:System.Windows.Data.CollectionView>へのすべてのアクセスを行います。</span><span class="sxs-lookup"><span data-stu-id="8c575-132"> WPF channels all its access to the collection through a subclass of <xref:System.Windows.Data.CollectionView>.</span></span><span data-ttu-id="8c575-133"> との両方に、 <xref:System.Windows.Controls.ItemsControl>が作成されたスレッドとの関係があります。つまり、別のスレッドでそれらを使用することは禁止されており、例外をスローします。<xref:System.Windows.Data.CollectionView> <xref:System.Windows.Controls.ItemsControl></span><span class="sxs-lookup"><span data-stu-id="8c575-133"> Both the <xref:System.Windows.Controls.ItemsControl> and the <xref:System.Windows.Data.CollectionView> have affinity to the thread on which the <xref:System.Windows.Controls.ItemsControl> was created, meaning that using them on a different thread is forbidden and throws an exception.</span></span><span data-ttu-id="8c575-134"> 実際には、この制限はコレクションにも適用されます。</span><span class="sxs-lookup"><span data-stu-id="8c575-134"> In effect, this restriction applies to the collection as well.</span></span>
 
<span data-ttu-id="8c575-135">複数のスレッドでコレクションを使用することもできます。</span><span class="sxs-lookup"><span data-stu-id="8c575-135">You may want to use the collection on multiple threads.</span></span><span data-ttu-id="8c575-136">   たとえば、"ユーザーインターフェイス" スレッドに対して結果を表示しながら、"データ収集" スレッドでコレクション (項目の追加または削除) を更新し、データ収集が行われている間は UI の応答性を維持する必要があるとします。</span><span class="sxs-lookup"><span data-stu-id="8c575-136">   For example, you want to update the collection (add or remove items) on a "data-gathering" thread, while displaying the results on a "user interface" thread, so that the UI remains responsive while data-gathering is happening.</span></span><span data-ttu-id="8c575-137"> このような状況では、コレクションへの同期された ("スレッドセーフ" の) アクセスを保証する責任があります。</span><span class="sxs-lookup"><span data-stu-id="8c575-137"> In such a situation, you are responsible for ensuring synchronized ("thread-safe") access to the collection.</span></span><span data-ttu-id="8c575-138">   これは通常、単純なロックメカニズムを使用するか、セマフォやイベントのリセットなどのより複雑な同期機構を使用して行います。 アプリケーションのアクセスをコレクションに同期する必要がありますが、WPF (からの<xref:System.Windows.Data.CollectionView>) からのアクセスが同じ同期機構に参加することを保証する必要もあります。</span><span class="sxs-lookup"><span data-stu-id="8c575-138">   This is typically done using either a simple lock mechanism or a more elaborate synchronization mechanism such as semaphores, reset events, etc.   While you must synchronize your application's access to the collection, you must also guarantee that access from WPF (specifically from <xref:System.Windows.Data.CollectionView>) participates in the same synchronization mechanism.</span></span><span data-ttu-id="8c575-139">  これを行うには、<xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="8c575-139">  You do this by calling the <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A> method.</span></span>
 
<span data-ttu-id="8c575-140">を所有<xref:System.Windows.Controls.ItemsControl>する UI スレッドである複数のスレッドでコレクションを使用するには、アプリケーションに次の役割があります。</span><span class="sxs-lookup"><span data-stu-id="8c575-140">To use a collection on multiple threads, one of which is the UI thread that owns the <xref:System.Windows.Controls.ItemsControl>, an application has the following responsibilities:</span></span>

1. <span data-ttu-id="8c575-141">同期メカニズムを選択します。</span><span class="sxs-lookup"><span data-stu-id="8c575-141">Choose a synchronization mechanism.</span></span>

1. <span data-ttu-id="8c575-142">そのメカニズムを使用して、アプリケーションからコレクションへのすべてのアクセスを同期します。</span><span class="sxs-lookup"><span data-stu-id="8c575-142">Synchronize all access from the application to the collection using that mechanism.</span></span>

1. <span data-ttu-id="8c575-143">を<xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A>呼び出して、機構を WPF に通知します。</span><span class="sxs-lookup"><span data-stu-id="8c575-143">Call <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A> to inform WPF of the mechanism.</span></span>

   - <span data-ttu-id="8c575-144">この呼び出しは、UI スレッドで実行する必要があります。</span><span class="sxs-lookup"><span data-stu-id="8c575-144">The call must occur on the UI thread.</span></span>

   - <span data-ttu-id="8c575-145">この呼び出しは、別のスレッドでコレクションを使用する前<xref:System.Windows.Controls.ItemsControl>、またはコレクションをにアタッチする前に行う必要があります (どちらか後)。</span><span class="sxs-lookup"><span data-stu-id="8c575-145">The call must occur before using the collection on a different thread or before attaching the collection to the <xref:System.Windows.Controls.ItemsControl>, whichever is later.</span></span>

   - <span data-ttu-id="8c575-146">単純な<xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)>ロック機構を使用する場合は、オーバーロードを<xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)>呼び出します。より複雑な機構を使用する場合は、オーバーロードを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="8c575-146">Call the <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)> overload if using a simple lock mechanism; call the <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)> overload if using a more elaborate mechanism.</span></span>

1. <span data-ttu-id="8c575-147">コレクションへの変更とその変更の通知 (からまで<xref:System.Collections.Specialized.INotifyCollectionChanged>) がアトミックであることを確認します。他のスレッドからのアクセスを介入することはできません。</span><span class="sxs-lookup"><span data-stu-id="8c575-147">Ensure that a change to the collection and the notification of that change (through <xref:System.Collections.Specialized.INotifyCollectionChanged>) are atomic; no access from other threads can intervene.</span></span><span data-ttu-id="8c575-148">  (通常は無料です。</span><span class="sxs-lookup"><span data-stu-id="8c575-148">  (This is usually free.</span></span> <span data-ttu-id="8c575-149">たとえば、は<xref:System.Collections.ObjectModel.ObservableCollection%601> 、すべての変更が同期によって保護されている場合に、このことを保証します。)</span><span class="sxs-lookup"><span data-stu-id="8c575-149">For instance, <xref:System.Collections.ObjectModel.ObservableCollection%601> guarantees this, provided that all changes are protected by synchronization.)</span></span>

1. <span data-ttu-id="8c575-150">を呼び出し <xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>た場合、その呼び出しは UI スレッドでも発生する必要があります。</span><span class="sxs-lookup"><span data-stu-id="8c575-150">If you call <xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>, that call must also occur on the UI thread.</span></span>

1. <span data-ttu-id="8c575-151">複数の ui スレッドで同じコレクションを使用する場合は、各 ui スレッド<xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A>で個別<xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>に (必要に応じて) を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="8c575-151">If you want to use the same collection on multiple UI threads, you must call <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A> (and <xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>, if needed) separately on each UI thread.</span></span>

1. <span data-ttu-id="8c575-152">デッドロックを回避します。</span><span class="sxs-lookup"><span data-stu-id="8c575-152">Avoid deadlock.</span></span><span data-ttu-id="8c575-153">  同期を使用することを選択した場合、これは既にアプリケーションの役割ですが、次の段落で説明されているように、WPF の同期への参加も考慮する必要があります。</span><span class="sxs-lookup"><span data-stu-id="8c575-153">  This is already the application's responsibility once it chooses to use synchronization, but it must also take into account WPF's participation in the synchronization, as discussed in the following paragraph.</span></span>

<span data-ttu-id="8c575-154">その結果、WPF は次の動作を提供します。</span><span class="sxs-lookup"><span data-stu-id="8c575-154">In return, WPF provides the following behavior:</span></span>

- <span data-ttu-id="8c575-155">は<xref:System.Windows.Data.CollectionView> 、指定された同期機構を使用してコレクションにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="8c575-155">The <xref:System.Windows.Data.CollectionView> accesses the collection using the given synchronization mechanism.</span></span>

- <span data-ttu-id="8c575-156">は<xref:System.Windows.Data.CollectionView> 、UI スレッドで使用するコレクションの "シャドウコピー" を保持します。</span><span class="sxs-lookup"><span data-stu-id="8c575-156">The <xref:System.Windows.Data.CollectionView> maintains a "shadow copy" of the collection for use on the UI thread.</span></span>

- <span data-ttu-id="8c575-157"><xref:System.Windows.Data.CollectionView.CollectionChanged>イベントは、受信時にキューに登録されます (任意のスレッド)。</span><span class="sxs-lookup"><span data-stu-id="8c575-157"><xref:System.Windows.Data.CollectionView.CollectionChanged> events are queued up as they arrive (on any thread).</span></span>

- <span data-ttu-id="8c575-158">保留中のイベントは、そのような場合に、UI スレッドで非同期にシャドウコピーに適用されます。</span><span class="sxs-lookup"><span data-stu-id="8c575-158">Pending events are applied to the shadow copy asynchronously on the UI thread when it has the opportunity to do so.</span></span>

- <span data-ttu-id="8c575-159">は<xref:System.Windows.Data.CollectionView> 、アプリケーションに表示される他の同期機構を直接使用しません。</span><span class="sxs-lookup"><span data-stu-id="8c575-159">The <xref:System.Windows.Data.CollectionView> won't directly use any other synchronization mechanism visible to the application.</span></span> <span data-ttu-id="8c575-160">これは、デッドロックを回避する WPF の方法です (前の項目7を参照)。</span><span class="sxs-lookup"><span data-stu-id="8c575-160">This is WPF's way of helping to avoid deadlock (see the previous item 7).</span></span>   

<span data-ttu-id="8c575-161">実質的には、任意のスレッドでコレクションを変更することができ、UI スレッドに " <xref:System.Windows.Controls.ItemsControl>キャッチアップ" の時間があると、これらの変更は最終的にに表示されます。</span><span class="sxs-lookup"><span data-stu-id="8c575-161">The net effect is that you can change the collection on any thread, and those changes eventually appear in the <xref:System.Windows.Controls.ItemsControl> when the UI thread has time to "catch up".</span></span><span data-ttu-id="8c575-162">  実装は、バックグラウンドスレッドによる UI スレッドの飽和状態を維持し、通常のユーザー入力への応答を確保するために、UI スレッドに変更が流れる速度を調整するように調整されています。</span><span class="sxs-lookup"><span data-stu-id="8c575-162">  The implementation has been tuned to throttle the rate that changes flow into the UI thread to keep background threads from saturating the UI thread and starving the response to normal user input.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="EnableCollectionSynchronization">
      <MemberSignature Language="C#" Value="public static void EnableCollectionSynchronization (System.Collections.IEnumerable collection, object lockObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EnableCollectionSynchronization(class System.Collections.IEnumerable collection, object lockObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub EnableCollectionSynchronization (collection As IEnumerable, lockObject As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void EnableCollectionSynchronization(System::Collections::IEnumerable ^ collection, System::Object ^ lockObject);" />
      <MemberSignature Language="F#" Value="static member EnableCollectionSynchronization : System.Collections.IEnumerable * obj -&gt; unit" Usage="System.Windows.Data.BindingOperations.EnableCollectionSynchronization (collection, lockObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.IEnumerable" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="lockObject" Type="System.Object" Index="1" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="8c575-163">同期アクセスが必要なコレクション。</span><span class="sxs-lookup"><span data-stu-id="8c575-163">The collection that needs synchronized access.</span></span></param>
        <param name="lockObject"><span data-ttu-id="8c575-164">コレクションにアクセスするときにロックするオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8c575-164">The object to lock when accessing the collection.</span></span></param>
        <summary><span data-ttu-id="8c575-165"><see cref="T:System.Windows.Data.CollectionView" /> オブジェクトが、単純なロック メカニズムを使用して複数のスレッドで使用されるコレクションへの同期アクセスに参加できるようにします。</span><span class="sxs-lookup"><span data-stu-id="8c575-165">Enables a <see cref="T:System.Windows.Data.CollectionView" /> object to participate in synchronized access to a collection used on multiple threads by using a simple locking mechanism.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  

## Remarks

<span data-ttu-id="8c575-166">WPF アプリケーション<xref:System.Windows.Controls.ItemsControl>では、またはそのサブクラス ( <xref:System.Windows.Controls.ListView><xref:System.Windows.Controls.ListBox>、 <xref:System.Windows.Controls.DataGrid> <xref:System.Windows.Controls.TreeView>、、など) のいずれかを使用して、データのコレクションを表示できます。</span><span class="sxs-lookup"><span data-stu-id="8c575-166">A WPF application can display a collection of data using an <xref:System.Windows.Controls.ItemsControl> or one of its subclasses (<xref:System.Windows.Controls.ListBox>, <xref:System.Windows.Controls.DataGrid>, <xref:System.Windows.Controls.TreeView>, <xref:System.Windows.Controls.ListView>, etc.).</span></span><span data-ttu-id="8c575-167"> WPF は、のサブクラスを使用して、コレクション<xref:System.Windows.Data.CollectionView>へのすべてのアクセスを行います。</span><span class="sxs-lookup"><span data-stu-id="8c575-167"> WPF channels all its access to the collection through a subclass of <xref:System.Windows.Data.CollectionView>.</span></span><span data-ttu-id="8c575-168"> との両方に、 <xref:System.Windows.Controls.ItemsControl>が作成されたスレッドとの関係があります。つまり、別のスレッドでそれらを使用することは禁止されており、例外をスローします。<xref:System.Windows.Data.CollectionView> <xref:System.Windows.Controls.ItemsControl></span><span class="sxs-lookup"><span data-stu-id="8c575-168"> Both the <xref:System.Windows.Controls.ItemsControl> and the <xref:System.Windows.Data.CollectionView> have affinity to the thread on which the <xref:System.Windows.Controls.ItemsControl> was created, meaning that using them on a different thread is forbidden and throws an exception.</span></span><span data-ttu-id="8c575-169"> 実際には、この制限はコレクションにも適用されます。</span><span class="sxs-lookup"><span data-stu-id="8c575-169"> In effect, this restriction applies to the collection as well.</span></span>
 
<span data-ttu-id="8c575-170">複数のスレッドでコレクションを使用することもできます。</span><span class="sxs-lookup"><span data-stu-id="8c575-170">You may want to use the collection on multiple threads.</span></span><span data-ttu-id="8c575-171">   たとえば、"ユーザーインターフェイス" スレッドに対して結果を表示しながら、"データ収集" スレッドでコレクション (項目の追加または削除) を更新し、データ収集が行われている間は UI の応答性を維持する必要があるとします。</span><span class="sxs-lookup"><span data-stu-id="8c575-171">   For example, you want to update the collection (add or remove items) on a "data-gathering" thread, while displaying the results on a "user interface" thread, so that the UI remains responsive while data-gathering is happening.</span></span><span data-ttu-id="8c575-172"> このような状況では、コレクションへの同期された ("スレッドセーフ" の) アクセスを保証し、WPF (からの<xref:System.Windows.Data.CollectionView>) からのアクセスが同じ同期機構に参加することを保証する責任があります。</span><span class="sxs-lookup"><span data-stu-id="8c575-172"> In such a situation, you are responsible for ensuring synchronized ("thread-safe") access to the collection and for guaranteeing that access from WPF (specifically from <xref:System.Windows.Data.CollectionView>) participates in the same synchronization mechanism.</span></span><span data-ttu-id="8c575-173"> <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)>メソッドを呼び出すことにより、単純なロックメカニズムを使用してこれを行うことができます。</span><span class="sxs-lookup"><span data-stu-id="8c575-173"> By calling the <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)> method, you can do this by using a simple lock mechanism.</span></span> 
 
<span data-ttu-id="8c575-174">を所有<xref:System.Windows.Controls.ItemsControl>する UI スレッドである複数のスレッドでコレクションを使用するには、次の操作を行う必要があります。</span><span class="sxs-lookup"><span data-stu-id="8c575-174">To use a collection on multiple threads, one of which is the UI thread that owns the <xref:System.Windows.Controls.ItemsControl>, you must do the following:</span></span>

1. <span data-ttu-id="8c575-175">コレクションにアクセスするときにロックするオブジェクトをインスタンス化します。</span><span class="sxs-lookup"><span data-stu-id="8c575-175">Instantiate an object to lock when accessing the collection.</span></span>

1. <span data-ttu-id="8c575-176">オブジェクトをロックして、アプリケーションからコレクションへのすべてのアクセスを同期します。</span><span class="sxs-lookup"><span data-stu-id="8c575-176">Synchronize all access from the application to the collection by locking that object.</span></span>

1. <span data-ttu-id="8c575-177">を<xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)>呼び出して、単純なロックメカニズムを使用していることを WPF に通知します。</span><span class="sxs-lookup"><span data-stu-id="8c575-177">Call <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)> to inform WPF that you are using a simple lock mechanism.</span></span>

   - <span data-ttu-id="8c575-178">この呼び出しは、UI スレッドで実行する必要があります。</span><span class="sxs-lookup"><span data-stu-id="8c575-178">The call must occur on the UI thread.</span></span>

   - <span data-ttu-id="8c575-179">この呼び出しは、別のスレッドでコレクションを使用する前<xref:System.Windows.Controls.ItemsControl>、またはコレクションをにアタッチする前に行う必要があります (どちらか後)。</span><span class="sxs-lookup"><span data-stu-id="8c575-179">The call must occur before using the collection on a different thread or before attaching the collection to the <xref:System.Windows.Controls.ItemsControl>, whichever is later.</span></span>

1. <span data-ttu-id="8c575-180">コレクションへの変更とその変更の通知 (からまで<xref:System.Collections.Specialized.INotifyCollectionChanged>) がアトミックであることを確認します。他のスレッドからのアクセスを介入することはできません。</span><span class="sxs-lookup"><span data-stu-id="8c575-180">Ensure that a change to the collection and the notification of that change (through <xref:System.Collections.Specialized.INotifyCollectionChanged>) are atomic; no access from other threads can intervene.</span></span><span data-ttu-id="8c575-181">  (通常は無料です。</span><span class="sxs-lookup"><span data-stu-id="8c575-181">  (This is usually free.</span></span> <span data-ttu-id="8c575-182">たとえば、は<xref:System.Collections.ObjectModel.ObservableCollection%601> 、すべての変更が同期によって保護されている場合に、このことを保証します。)</span><span class="sxs-lookup"><span data-stu-id="8c575-182">For instance, <xref:System.Collections.ObjectModel.ObservableCollection%601> guarantees this, provided that all changes are protected by synchronization.)</span></span>

1. <span data-ttu-id="8c575-183">を呼び出し <xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>た場合、その呼び出しは UI スレッドでも発生する必要があります。</span><span class="sxs-lookup"><span data-stu-id="8c575-183">If you call <xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>, that call must also occur on the UI thread.</span></span>

1. <span data-ttu-id="8c575-184">複数の ui スレッドで同じコレクションを使用する場合は、各 ui スレッド<xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A>で個別<xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>に (必要に応じて) を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="8c575-184">If you want to use the same collection on multiple UI threads, you must call <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A> (and <xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>, if needed) separately on each UI thread.</span></span>

1. <span data-ttu-id="8c575-185">デッドロックを回避します。</span><span class="sxs-lookup"><span data-stu-id="8c575-185">Avoid deadlock.</span></span><span data-ttu-id="8c575-186">  同期を使用することを選択した場合、これは既にアプリケーションの役割ですが、その場合も WPF の同期への参加を考慮する必要があります。</span><span class="sxs-lookup"><span data-stu-id="8c575-186">  This is already the application's responsibility once it chooses to use synchronization, but it must also take into account WPF's participation in the synchronization.</span></span><span data-ttu-id="8c575-187"> (詳細については、以下を参照してください。)</span><span class="sxs-lookup"><span data-stu-id="8c575-187"> (See more, below.)</span></span>

<span data-ttu-id="8c575-188">その結果、WPF は次の動作を提供します。</span><span class="sxs-lookup"><span data-stu-id="8c575-188">In return, WPF provides the following behavior:</span></span>

- <span data-ttu-id="8c575-189">は<xref:System.Windows.Data.CollectionView> 、ロック機構を使用してコレクションにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="8c575-189">The <xref:System.Windows.Data.CollectionView> accesses the collection using the locking mechanism.</span></span>

- <span data-ttu-id="8c575-190">は<xref:System.Windows.Data.CollectionView> 、UI スレッドで使用するコレクションの "シャドウコピー" を保持します。</span><span class="sxs-lookup"><span data-stu-id="8c575-190">The <xref:System.Windows.Data.CollectionView> maintains a "shadow copy" of the collection for use on the UI thread.</span></span>

- <span data-ttu-id="8c575-191"><xref:System.Windows.Data.CollectionView.CollectionChanged>イベントは、受信時にキューに登録されます (任意のスレッド)。</span><span class="sxs-lookup"><span data-stu-id="8c575-191"><xref:System.Windows.Data.CollectionView.CollectionChanged> events are queued up as they arrive (on any thread).</span></span>

- <span data-ttu-id="8c575-192">保留中のイベントは、そのような場合に、UI スレッドで非同期にシャドウコピーに適用されます。</span><span class="sxs-lookup"><span data-stu-id="8c575-192">Pending events are applied to the shadow copy asynchronously on the UI thread when it has the opportunity to do so.</span></span>

- <span data-ttu-id="8c575-193">は<xref:System.Windows.Data.CollectionView> 、アプリケーションに表示される他の同期機構を直接使用しません。</span><span class="sxs-lookup"><span data-stu-id="8c575-193">The <xref:System.Windows.Data.CollectionView> will not directly use any other synchronization mechanism visible to the application.</span></span> <span data-ttu-id="8c575-194">これは、デッドロックを回避する WPF の方法です (前の項目7を参照)。</span><span class="sxs-lookup"><span data-stu-id="8c575-194">This is WPF's way of helping to avoid deadlock (see the previous item 7).</span></span>   

<span data-ttu-id="8c575-195">実質的には、任意のスレッドでコレクションを変更することができ、UI スレッドに " <xref:System.Windows.Controls.ItemsControl>キャッチアップ" の時間があると、これらの変更は最終的にに表示されます。</span><span class="sxs-lookup"><span data-stu-id="8c575-195">The net effect is that you can change the collection on any thread, and those changes eventually appear in the <xref:System.Windows.Controls.ItemsControl> when the UI thread has time to "catch up".</span></span><span data-ttu-id="8c575-196">  実装は、バックグラウンドスレッドによる UI スレッドの飽和状態を維持し、通常のユーザー入力への応答を確保するために、UI スレッドに変更が流れる速度を調整するように調整されています。</span><span class="sxs-lookup"><span data-stu-id="8c575-196">  The implementation has been tuned to throttle the rate that changes flow into the UI thread to keep background threads from saturating the UI thread and starving the response to normal user input.</span></span>
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableCollectionSynchronization">
      <MemberSignature Language="C#" Value="public static void EnableCollectionSynchronization (System.Collections.IEnumerable collection, object context, System.Windows.Data.CollectionSynchronizationCallback synchronizationCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EnableCollectionSynchronization(class System.Collections.IEnumerable collection, object context, class System.Windows.Data.CollectionSynchronizationCallback synchronizationCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub EnableCollectionSynchronization (collection As IEnumerable, context As Object, synchronizationCallback As CollectionSynchronizationCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void EnableCollectionSynchronization(System::Collections::IEnumerable ^ collection, System::Object ^ context, System::Windows::Data::CollectionSynchronizationCallback ^ synchronizationCallback);" />
      <MemberSignature Language="F#" Value="static member EnableCollectionSynchronization : System.Collections.IEnumerable * obj * System.Windows.Data.CollectionSynchronizationCallback -&gt; unit" Usage="System.Windows.Data.BindingOperations.EnableCollectionSynchronization (collection, context, synchronizationCallback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.IEnumerable" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="context" Type="System.Object" Index="1" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="synchronizationCallback" Type="System.Windows.Data.CollectionSynchronizationCallback" Index="2" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="8c575-197">同期アクセスが必要なコレクション。</span><span class="sxs-lookup"><span data-stu-id="8c575-197">The collection that needs synchronized access.</span></span></param>
        <param name="context"><span data-ttu-id="8c575-198">コールバックに渡されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8c575-198">An object that is passed to the callback.</span></span></param>
        <param name="synchronizationCallback"><span data-ttu-id="8c575-199">コレクションへのアクセスが必要なときに呼び出されるコールバック。</span><span class="sxs-lookup"><span data-stu-id="8c575-199">The callback that is invoked whenever access to the collection is required.</span></span> <span data-ttu-id="8c575-200">これを使用して、一度に 1 つのスレッドでコレクションにアクセスできるようにします。</span><span class="sxs-lookup"><span data-stu-id="8c575-200">You can use it to ensure that the collection is accessed by one thread at a time.</span></span></param>
        <summary><span data-ttu-id="8c575-201"><see cref="T:System.Windows.Data.CollectionView" /> オブジェクトが、単純なロック以外のメカニズムを使用して複数のスレッドで使用されるコレクションへの同期アクセスに参加できるようにします。</span><span class="sxs-lookup"><span data-stu-id="8c575-201">Enables a <see cref="T:System.Windows.Data.CollectionView" /> object to participate in synchronized access to a collection used on multiple threads by using a mechanism other than a simple lock.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="8c575-202">WPF アプリケーション<xref:System.Windows.Controls.ItemsControl>では、またはそのサブクラス ( <xref:System.Windows.Controls.ListView><xref:System.Windows.Controls.ListBox>、 <xref:System.Windows.Controls.DataGrid> <xref:System.Windows.Controls.TreeView>、、など) のいずれかを使用して、データのコレクションを表示できます。</span><span class="sxs-lookup"><span data-stu-id="8c575-202">A WPF application can display a collection of data using an <xref:System.Windows.Controls.ItemsControl> or one of its subclasses (<xref:System.Windows.Controls.ListBox>, <xref:System.Windows.Controls.DataGrid>, <xref:System.Windows.Controls.TreeView>, <xref:System.Windows.Controls.ListView>, etc.).</span></span><span data-ttu-id="8c575-203"> WPF は、のサブクラスを使用して、コレクション<xref:System.Windows.Data.CollectionView>へのすべてのアクセスを行います。</span><span class="sxs-lookup"><span data-stu-id="8c575-203"> WPF channels all its access to the collection through a subclass of <xref:System.Windows.Data.CollectionView>.</span></span><span data-ttu-id="8c575-204"> との両方に、 <xref:System.Windows.Controls.ItemsControl>が作成されたスレッドとの関係があります。つまり、別のスレッドでそれらを使用することは禁止されており、例外をスローします。<xref:System.Windows.Data.CollectionView> <xref:System.Windows.Controls.ItemsControl></span><span class="sxs-lookup"><span data-stu-id="8c575-204"> Both the <xref:System.Windows.Controls.ItemsControl> and the <xref:System.Windows.Data.CollectionView> have affinity to the thread on which the <xref:System.Windows.Controls.ItemsControl> was created, meaning that using them on a different thread is forbidden and throws an exception.</span></span><span data-ttu-id="8c575-205"> 実際には、この制限はコレクションにも適用されます。</span><span class="sxs-lookup"><span data-stu-id="8c575-205"> In effect, this restriction applies to the collection as well.</span></span>
 
<span data-ttu-id="8c575-206">複数のスレッドでコレクションを使用することもできます。</span><span class="sxs-lookup"><span data-stu-id="8c575-206">You may want to use the collection on multiple threads.</span></span><span data-ttu-id="8c575-207">   たとえば、"ユーザーインターフェイス" スレッドに対して結果を表示しながら、"データ収集" スレッドでコレクション (項目の追加または削除) を更新し、データ収集が行われている間は UI の応答性を維持する必要があるとします。</span><span class="sxs-lookup"><span data-stu-id="8c575-207">   For example, you want to update the collection (add or remove items) on a "data-gathering" thread, while displaying the results on a "user interface" thread, so that the UI remains responsive while data-gathering is happening.</span></span><span data-ttu-id="8c575-208"> このような状況では、コレクションへの同期された ("スレッドセーフ" の) アクセスを保証し、WPF (からの<xref:System.Windows.Data.CollectionView>) からのアクセスが同じ同期機構に参加することを保証する責任があります。</span><span class="sxs-lookup"><span data-stu-id="8c575-208"> In such a situation, you are responsible for ensuring synchronized ("thread-safe") access to the collection and for guaranteeing that access from WPF (specifically from <xref:System.Windows.Data.CollectionView>) participates in the same synchronization mechanism.</span></span> <span data-ttu-id="8c575-209"><xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)>メソッドを呼び出すことにより、セマフォ、reset イベントなどの同期機構を使用してこれを行うことができます。 を所有<xref:System.Windows.Controls.ItemsControl>する UI スレッドである複数のスレッドでコレクションを使用するには、次の操作を行う必要があります。</span><span class="sxs-lookup"><span data-stu-id="8c575-209">By calling the <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)> method, you can do this by using a synchronization mechanism such as a semaphores, a reset event, etc.   To use a collection on multiple threads, one of which is the UI thread that owns the <xref:System.Windows.Controls.ItemsControl>, you must do the following:</span></span>

1. <span data-ttu-id="8c575-210">同期メカニズムを選択します。</span><span class="sxs-lookup"><span data-stu-id="8c575-210">Choose a synchronization mechanism.</span></span>

1. <span data-ttu-id="8c575-211">そのメカニズムを使用して、アプリケーションからコレクションへのすべてのアクセスを同期します。</span><span class="sxs-lookup"><span data-stu-id="8c575-211">Synchronize all access from the application to the collection using that mechanism.</span></span>

1. <span data-ttu-id="8c575-212">オーバーロードを<xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)>呼び出して、単純なロック以外のメカニズムを使用していることを WPF に通知します。</span><span class="sxs-lookup"><span data-stu-id="8c575-212">Call the <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)> overload to inform WPF that you are using a mechanism other than simple locking.</span></span>

   - <span data-ttu-id="8c575-213">この呼び出しは、UI スレッドで実行する必要があります。</span><span class="sxs-lookup"><span data-stu-id="8c575-213">The call must occur on the UI thread.</span></span>

   - <span data-ttu-id="8c575-214">この呼び出しは、別のスレッドでコレクションを使用する前<xref:System.Windows.Controls.ItemsControl>、またはコレクションをにアタッチする前に行う必要があります (どちらか後)。</span><span class="sxs-lookup"><span data-stu-id="8c575-214">The call must occur before using the collection on a different thread or before attaching the collection to the <xref:System.Windows.Controls.ItemsControl>, whichever is later.</span></span>

1. <span data-ttu-id="8c575-215">コレクションへの変更とその変更の通知 (からまで<xref:System.Collections.Specialized.INotifyCollectionChanged>) がアトミックであることを確認します。他のスレッドからのアクセスを介入することはできません。</span><span class="sxs-lookup"><span data-stu-id="8c575-215">Ensure that a change to the collection and the notification of that change (through <xref:System.Collections.Specialized.INotifyCollectionChanged>) are atomic; no access from other threads can intervene.</span></span><span data-ttu-id="8c575-216">  (通常は無料です。</span><span class="sxs-lookup"><span data-stu-id="8c575-216">  (This is usually free.</span></span> <span data-ttu-id="8c575-217">たとえば、は<xref:System.Collections.ObjectModel.ObservableCollection%601> 、すべての変更が同期によって保護されている場合に、このことを保証します。)</span><span class="sxs-lookup"><span data-stu-id="8c575-217">For instance, <xref:System.Collections.ObjectModel.ObservableCollection%601> guarantees this, provided that all changes are protected by synchronization.)</span></span>

1. <span data-ttu-id="8c575-218">を呼び出し <xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>た場合、その呼び出しは UI スレッドでも発生する必要があります。</span><span class="sxs-lookup"><span data-stu-id="8c575-218">If you call <xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>, that call must also occur on the UI thread.</span></span>

1. <span data-ttu-id="8c575-219">複数の ui スレッドで同じコレクションを使用する場合は、各 ui スレッド<xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A>で個別<xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>に (必要に応じて) を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="8c575-219">If you want to use the same collection on multiple UI threads, you must call <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A> (and <xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>, if needed) separately on each UI thread.</span></span>

1. <span data-ttu-id="8c575-220">デッドロックを回避します。</span><span class="sxs-lookup"><span data-stu-id="8c575-220">Avoid deadlock.</span></span><span data-ttu-id="8c575-221">  同期を使用することを選択した場合、これは既にアプリケーションの役割ですが、その場合も WPF の同期への参加を考慮する必要があります。</span><span class="sxs-lookup"><span data-stu-id="8c575-221">  This is already the application's responsibility once it chooses to use synchronization, but it must also take into account WPF's participation in the synchronization.</span></span><span data-ttu-id="8c575-222"> (詳細については、以下を参照してください。)</span><span class="sxs-lookup"><span data-stu-id="8c575-222"> (See more, below.)</span></span>

<span data-ttu-id="8c575-223">その結果、WPF は次の動作を提供します。</span><span class="sxs-lookup"><span data-stu-id="8c575-223">In return, WPF provides the following behavior:</span></span>

- <span data-ttu-id="8c575-224">は<xref:System.Windows.Data.CollectionView> 、次の引数を使用し<xref:System.Windows.Data.CollectionSynchronizationCallback>て登録されたを呼び出すことによって、コレクションにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="8c575-224">The <xref:System.Windows.Data.CollectionView> accesses the collection by calling the registered <xref:System.Windows.Data.CollectionSynchronizationCallback> with the following arguments:</span></span>

   - <span data-ttu-id="8c575-225">`collection`: 対象のコレクション。</span><span class="sxs-lookup"><span data-stu-id="8c575-225">`collection`: the collection of interest.</span></span>
   - <span data-ttu-id="8c575-226">`context`: 登録されているコンテキストオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8c575-226">`context`: the registered context object.</span></span>
   - <span data-ttu-id="8c575-227">`accessMethod`: 実際のアクセスを実行するデリゲート。</span><span class="sxs-lookup"><span data-stu-id="8c575-227">`accessMethod`: a delegate that performs the actual access.</span></span>
   - <span data-ttu-id="8c575-228">`writeAccess`: `true`デリゲートがコレクションを変更する場合は。`false`それ以外の場合は。</span><span class="sxs-lookup"><span data-stu-id="8c575-228">`writeAccess`: `true` if the delegate will modify the collection; `false` otherwise.</span></span>

   <span data-ttu-id="8c575-229">では、必要に応じて`context`オブジェクトと`writeAccess` `accessMethod`値を使用して、コレクションに対する同期を確立し、を呼び出してから、リリース同期を行う必要があります。<xref:System.Windows.Data.CollectionSynchronizationCallback></span><span class="sxs-lookup"><span data-stu-id="8c575-229">Your <xref:System.Windows.Data.CollectionSynchronizationCallback> should establish synchronization on the collection (using the `context` object and the `writeAccess` value, as appropriate), call the `accessMethod`, then release synchronization.</span></span>

- <span data-ttu-id="8c575-230">は<xref:System.Windows.Data.CollectionView> 、UI スレッドで使用するコレクションの "シャドウコピー" を保持します。</span><span class="sxs-lookup"><span data-stu-id="8c575-230">The <xref:System.Windows.Data.CollectionView> maintains a "shadow copy" of the collection for use on the UI thread.</span></span>

- <span data-ttu-id="8c575-231"><xref:System.Windows.Data.CollectionView.CollectionChanged>イベントは、受信時にキューに登録されます (任意のスレッド)。</span><span class="sxs-lookup"><span data-stu-id="8c575-231"><xref:System.Windows.Data.CollectionView.CollectionChanged> events are queued up as they arrive (on any thread).</span></span>

- <span data-ttu-id="8c575-232">保留中のイベントは、そのような場合に、UI スレッドで非同期にシャドウコピーに適用されます。</span><span class="sxs-lookup"><span data-stu-id="8c575-232">Pending events are applied to the shadow copy asynchronously on the UI thread when it has the opportunity to do so.</span></span>

- <span data-ttu-id="8c575-233">は<xref:System.Windows.Data.CollectionView> 、アプリケーションに表示される他の同期機構を直接使用しません。</span><span class="sxs-lookup"><span data-stu-id="8c575-233">The <xref:System.Windows.Data.CollectionView> will not directly use any other synchronization mechanism visible to the application.</span></span> <span data-ttu-id="8c575-234">これは、デッドロックを回避する WPF の方法です (前の項目7を参照)。</span><span class="sxs-lookup"><span data-stu-id="8c575-234">This is WPF's way of helping to avoid deadlock (see the previous item 7).</span></span>   

<span data-ttu-id="8c575-235">実質的には、任意のスレッドでコレクションを変更することができ、UI スレッドに " <xref:System.Windows.Controls.ItemsControl>キャッチアップ" の時間があると、これらの変更は最終的にに表示されます。</span><span class="sxs-lookup"><span data-stu-id="8c575-235">The net effect is that you can change the collection on any thread, and those changes eventually appear in the <xref:System.Windows.Controls.ItemsControl> when the UI thread has time to "catch up".</span></span><span data-ttu-id="8c575-236">  実装は、バックグラウンドスレッドによる UI スレッドの飽和状態を維持し、通常のユーザー入力への応答を確保するために、UI スレッドに変更が流れる速度を調整するように調整されています。</span><span class="sxs-lookup"><span data-stu-id="8c575-236">  The implementation has been tuned to throttle the rate that changes flow into the UI thread to keep background threads from saturating the UI thread and starving the response to normal user input.</span></span>

 <span data-ttu-id="8c575-237">パラメーターは、 `callback`に渡される任意のオブジェクトです。 `context`</span><span class="sxs-lookup"><span data-stu-id="8c575-237">The `context` parameter is an arbitrary object that is passed to the `callback`.</span></span> <span data-ttu-id="8c575-238">このメソッドを使用して、へ`collection`のアクセスを制御するために使用する同期機構を決定できます。</span><span class="sxs-lookup"><span data-stu-id="8c575-238">You can use it to determine the synchronization mechanism used to control access to `collection`.</span></span> <span data-ttu-id="8c575-239">`Context`にする`null`ことができます。</span><span class="sxs-lookup"><span data-stu-id="8c575-239">`Context` can be `null`.</span></span>  
 
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBinding">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.Binding GetBinding (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Data.Binding GetBinding(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.GetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBinding (target As DependencyObject, dp As DependencyProperty) As Binding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Data::Binding ^ GetBinding(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="static member GetBinding : System.Windows.DependencyObject * System.Windows.DependencyProperty -&gt; System.Windows.Data.Binding" Usage="System.Windows.Data.BindingOperations.GetBinding (target, dp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.Binding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="8c575-240"><paramref name="dp" /> が存在するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8c575-240">The object where <paramref name="dp" /> is.</span></span></param>
        <param name="dp"><span data-ttu-id="8c575-241">バインディングの取得元となるバインディング ターゲット プロパティ。</span><span class="sxs-lookup"><span data-stu-id="8c575-241">The binding target property from which to retrieve the binding.</span></span></param>
        <summary><span data-ttu-id="8c575-242">指定したプロパティに設定されている <see cref="T:System.Windows.Data.Binding" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="8c575-242">Retrieves the <see cref="T:System.Windows.Data.Binding" /> object that is set on the specified property.</span></span></summary>
        <returns><span data-ttu-id="8c575-243">指定したプロパティに設定された <see cref="T:System.Windows.Data.Binding" /> オブジェクト。<see cref="T:System.Windows.Data.Binding" /> オブジェクトが設定されていない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8c575-243">The <see cref="T:System.Windows.Data.Binding" /> object set on the given property or <see langword="null" /> if no <see cref="T:System.Windows.Data.Binding" /> object has been set.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c575-244"><paramref name="target" /> パラメーターと <paramref name="dp" /> パラメーターに null を指定することはできません。</span><span class="sxs-lookup"><span data-stu-id="8c575-244">The <paramref name="target" /> and <paramref name="dp" /> parameters cannot be null.</span></span></exception>
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetMultiBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetPriorityBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="GetBindingBase">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.BindingBase GetBindingBase (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Data.BindingBase GetBindingBase(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.GetBindingBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBindingBase (target As DependencyObject, dp As DependencyProperty) As BindingBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Data::BindingBase ^ GetBindingBase(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="static member GetBindingBase : System.Windows.DependencyObject * System.Windows.DependencyProperty -&gt; System.Windows.Data.BindingBase" Usage="System.Windows.Data.BindingOperations.GetBindingBase (target, dp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="8c575-245"><paramref name="dp" /> が存在するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8c575-245">The object where <paramref name="dp" /> is.</span></span></param>
        <param name="dp"><span data-ttu-id="8c575-246"><see cref="T:System.Windows.Data.BindingBase" /> オブジェクトの取得元となるバインディング ターゲット プロパティ。</span><span class="sxs-lookup"><span data-stu-id="8c575-246">The binding target property from which to retrieve the <see cref="T:System.Windows.Data.BindingBase" /> object.</span></span></param>
        <summary><span data-ttu-id="8c575-247">指定したプロパティに設定されている <see cref="T:System.Windows.Data.BindingBase" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="8c575-247">Retrieves the <see cref="T:System.Windows.Data.BindingBase" /> object that is set on the specified property.</span></span></summary>
        <returns><span data-ttu-id="8c575-248">指定したプロパティに設定された <see cref="T:System.Windows.Data.BindingBase" /> オブジェクト。バインディング オブジェクトが設定されていない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8c575-248">The <see cref="T:System.Windows.Data.BindingBase" /> object that is set on the given property or <see langword="null" /> if no binding object has been set.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c575-249">クラスは<xref:System.Windows.Data.Binding>、 、<xref:System.Windows.Data.PriorityBinding>、および<xref:System.Windows.Data.MultiBinding>の各クラスの共通の基本クラスです。 <xref:System.Windows.Data.BindingBase></span><span class="sxs-lookup"><span data-stu-id="8c575-249">The <xref:System.Windows.Data.BindingBase> class is the common base class for the <xref:System.Windows.Data.Binding>, <xref:System.Windows.Data.PriorityBinding>, and <xref:System.Windows.Data.MultiBinding> classes.</span></span> <span data-ttu-id="8c575-250">プロパティに設定さ<xref:System.Windows.Data.BindingOperations.GetBinding%2A>れ<xref:System.Windows.Data.BindingOperations.GetPriorityBinding%2A>ているバインディングの型を事前に把握している場合は、、、および<xref:System.Windows.Data.BindingOperations.GetMultiBinding%2A>の各メソッドを使用できます。</span><span class="sxs-lookup"><span data-stu-id="8c575-250">You can use the <xref:System.Windows.Data.BindingOperations.GetBinding%2A>, <xref:System.Windows.Data.BindingOperations.GetPriorityBinding%2A>, and <xref:System.Windows.Data.BindingOperations.GetMultiBinding%2A> methods if you know in advance the type of binding that is set on the property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c575-251"><paramref name="target" /> パラメーターと <paramref name="dp" /> パラメーターを <see langword="null" /> にすることはできません。</span><span class="sxs-lookup"><span data-stu-id="8c575-251">The <paramref name="target" /> and <paramref name="dp" /> parameters cannot be <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingExpressionBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="GetBindingExpression">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.BindingExpression GetBindingExpression (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Data.BindingExpression GetBindingExpression(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.GetBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBindingExpression (target As DependencyObject, dp As DependencyProperty) As BindingExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Data::BindingExpression ^ GetBindingExpression(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="static member GetBindingExpression : System.Windows.DependencyObject * System.Windows.DependencyProperty -&gt; System.Windows.Data.BindingExpression" Usage="System.Windows.Data.BindingOperations.GetBindingExpression (target, dp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="8c575-252"><paramref name="dp" /> が存在するバインディング ターゲット オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8c575-252">The binding target object where <paramref name="dp" /> is.</span></span></param>
        <param name="dp"><span data-ttu-id="8c575-253"><see cref="T:System.Windows.Data.BindingExpression" /> オブジェクトの取得元となるバインディング ターゲット プロパティ。</span><span class="sxs-lookup"><span data-stu-id="8c575-253">The binding target property from which to retrieve the <see cref="T:System.Windows.Data.BindingExpression" /> object.</span></span></param>
        <summary><span data-ttu-id="8c575-254">指定されたオブジェクト上の指定されたバインディング ターゲット プロパティに関連付けられた <see cref="T:System.Windows.Data.BindingExpression" /> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="8c575-254">Returns the <see cref="T:System.Windows.Data.BindingExpression" /> object associated with the specified binding target property on the specified object.</span></span></summary>
        <returns><span data-ttu-id="8c575-255">指定したプロパティに関連付けられた <see cref="T:System.Windows.Data.BindingExpression" /> オブジェクト。関連付けられたオブジェクトが存在しない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8c575-255">The <see cref="T:System.Windows.Data.BindingExpression" /> object associated with the given property or <see langword="null" /> if none exists.</span></span> <span data-ttu-id="8c575-256"><see cref="T:System.Windows.Data.PriorityBindingExpression" /> オブジェクトがプロパティに設定されている場合は、<see cref="P:System.Windows.Data.PriorityBindingExpression.ActiveBindingExpression" /> が返されます。</span><span class="sxs-lookup"><span data-stu-id="8c575-256">If a <see cref="T:System.Windows.Data.PriorityBindingExpression" /> object is set on the property, the <see cref="P:System.Windows.Data.PriorityBindingExpression.ActiveBindingExpression" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c575-257">オブジェクト<xref:System.Windows.Data.BindingExpression>は、バインディングソースとバインディングターゲットの間の接続を維持します。</span><span class="sxs-lookup"><span data-stu-id="8c575-257">The <xref:System.Windows.Data.BindingExpression> object maintains the connection between the binding source and the binding target.</span></span> <span data-ttu-id="8c575-258"><xref:System.Windows.Data.BindingExpression>オブジェクトを取得するには、この静的メソッドを呼び出すか<xref:System.Windows.FrameworkElement.GetBindingExpression%2A> 、データバインド<xref:System.Windows.FrameworkElement>または<xref:System.Windows.FrameworkContentElement>オブジェクトに対してメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="8c575-258">You can obtain the <xref:System.Windows.Data.BindingExpression> object by calling this static method or by calling the <xref:System.Windows.FrameworkElement.GetBindingExpression%2A> method on a data-bound <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8c575-259">次<xref:System.Windows.Controls.Primitives.ButtonBase.Click>の例は、 <xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A>メソッドを使用してを取得<xref:System.Windows.Data.BindingExpression>し、 <xref:System.Windows.Data.BindingExpression.DataItem%2A>プロパティを呼び出してバインディングソースオブジェクトにアクセスするイベントハンドラーの実装を示しています。</span><span class="sxs-lookup"><span data-stu-id="8c575-259">The following example shows the implementation of a <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event handler that uses the <xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A> method to obtain the <xref:System.Windows.Data.BindingExpression> and then calls the <xref:System.Windows.Data.BindingExpression.DataItem%2A> property to access the binding source object.</span></span>  
  
 <span data-ttu-id="8c575-260">はバインディングターゲットオブジェクト<xref:System.Windows.Controls.TextBlock.Text%2A>であり、はバインディングターゲットプロパティです。 <xref:System.Windows.Controls.TextBlock> `SavingsText`</span><span class="sxs-lookup"><span data-stu-id="8c575-260">The <xref:System.Windows.Controls.TextBlock>`SavingsText` is the binding target object and <xref:System.Windows.Controls.TextBlock.Text%2A> is the binding target property.</span></span>  
  
 [!code-csharp[DirectionalBinding#OnRentRaise](~/samples/snippets/csharp/VS_Snippets_Wpf/DirectionalBinding/CSharp/Page1.xaml.cs#onrentraise)]
 [!code-vb[DirectionalBinding#OnRentRaise](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DirectionalBinding/VisualBasic/DirectionalBinding.vb#onrentraise)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c575-261"><paramref name="target" /> パラメーターと <paramref name="dp" /> パラメーターを <see langword="null" /> にすることはできません。</span><span class="sxs-lookup"><span data-stu-id="8c575-261">The <paramref name="target" /> and <paramref name="dp" /> parameters cannot be <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Windows.Data.BindingOperations.GetMultiBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetPriorityBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingExpressionBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="GetBindingExpressionBase">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.BindingExpressionBase GetBindingExpressionBase (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Data.BindingExpressionBase GetBindingExpressionBase(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.GetBindingExpressionBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBindingExpressionBase (target As DependencyObject, dp As DependencyProperty) As BindingExpressionBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Data::BindingExpressionBase ^ GetBindingExpressionBase(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="static member GetBindingExpressionBase : System.Windows.DependencyObject * System.Windows.DependencyProperty -&gt; System.Windows.Data.BindingExpressionBase" Usage="System.Windows.Data.BindingOperations.GetBindingExpressionBase (target, dp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingExpressionBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="8c575-262"><paramref name="dp" /> が存在するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8c575-262">The object where <paramref name="dp" /> is.</span></span></param>
        <param name="dp"><span data-ttu-id="8c575-263"><see cref="T:System.Windows.Data.BindingExpressionBase" /> オブジェクトの取得元となるバインディング ターゲット プロパティ。</span><span class="sxs-lookup"><span data-stu-id="8c575-263">The binding target property from which to retrieve the <see cref="T:System.Windows.Data.BindingExpressionBase" /> object.</span></span></param>
        <summary><span data-ttu-id="8c575-264">指定したプロパティに設定されている <see cref="T:System.Windows.Data.BindingExpressionBase" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="8c575-264">Retrieves the <see cref="T:System.Windows.Data.BindingExpressionBase" /> object that is set on the specified property.</span></span></summary>
        <returns><span data-ttu-id="8c575-265">指定したプロパティに設定された <see cref="T:System.Windows.Data.BindingExpressionBase" /> オブジェクト。バインディング オブジェクトが設定されていない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8c575-265">The <see cref="T:System.Windows.Data.BindingExpressionBase" /> object that is set on the given property or <see langword="null" /> if no binding object has been set.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c575-266">クラスは<xref:System.Windows.Data.BindingExpression>、 、<xref:System.Windows.Data.PriorityBindingExpression>、および<xref:System.Windows.Data.MultiBindingExpression>の各クラスの共通の基本クラスです。 <xref:System.Windows.Data.BindingExpressionBase></span><span class="sxs-lookup"><span data-stu-id="8c575-266">The <xref:System.Windows.Data.BindingExpressionBase> class is the common base class for the <xref:System.Windows.Data.BindingExpression>, <xref:System.Windows.Data.PriorityBindingExpression>, and <xref:System.Windows.Data.MultiBindingExpression> classes.</span></span> <span data-ttu-id="8c575-267">プロパティに設定さ<xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A>れ<xref:System.Windows.Data.BindingOperations.GetPriorityBindingExpression%2A>ているバインディングの種類が事前にわかっている場合は、、、および<xref:System.Windows.Data.BindingOperations.GetMultiBindingExpression%2A>の各メソッドを使用できます。</span><span class="sxs-lookup"><span data-stu-id="8c575-267">You can use the <xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A>, <xref:System.Windows.Data.BindingOperations.GetPriorityBindingExpression%2A>, and <xref:System.Windows.Data.BindingOperations.GetMultiBindingExpression%2A> methods if you know in advance type of binding that is set on the property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c575-268"><paramref name="target" /> パラメーターと <paramref name="dp" /> パラメーターに null を指定することはできません。</span><span class="sxs-lookup"><span data-stu-id="8c575-268">The <paramref name="target" /> and <paramref name="dp" /> parameters cannot be null.</span></span></exception>
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="GetMultiBinding">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.MultiBinding GetMultiBinding (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Data.MultiBinding GetMultiBinding(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.GetMultiBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMultiBinding (target As DependencyObject, dp As DependencyProperty) As MultiBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Data::MultiBinding ^ GetMultiBinding(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="static member GetMultiBinding : System.Windows.DependencyObject * System.Windows.DependencyProperty -&gt; System.Windows.Data.MultiBinding" Usage="System.Windows.Data.BindingOperations.GetMultiBinding (target, dp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.MultiBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="8c575-269"><paramref name="dp" /> が存在するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8c575-269">The object where <paramref name="dp" /> is.</span></span></param>
        <param name="dp"><span data-ttu-id="8c575-270">バインディングの取得元となるバインディング ターゲット プロパティ。</span><span class="sxs-lookup"><span data-stu-id="8c575-270">The binding target property from which to retrieve the binding.</span></span></param>
        <summary><span data-ttu-id="8c575-271">指定したプロパティに設定されている <see cref="T:System.Windows.Data.MultiBinding" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="8c575-271">Retrieves the <see cref="T:System.Windows.Data.MultiBinding" /> object that is set on the specified property.</span></span></summary>
        <returns><span data-ttu-id="8c575-272">指定したプロパティに設定された <see cref="T:System.Windows.Data.MultiBinding" /> オブジェクト。<see cref="T:System.Windows.Data.MultiBinding" /> オブジェクトが設定されていない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8c575-272">The <see cref="T:System.Windows.Data.MultiBinding" /> object set on the given property or <see langword="null" /> if no <see cref="T:System.Windows.Data.MultiBinding" /> object has been set.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c575-273"><paramref name="target" /> パラメーターと <paramref name="dp" /> パラメーターに null を指定することはできません。</span><span class="sxs-lookup"><span data-stu-id="8c575-273">The <paramref name="target" /> and <paramref name="dp" /> parameters cannot be null.</span></span></exception>
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="GetMultiBindingExpression">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.MultiBindingExpression GetMultiBindingExpression (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Data.MultiBindingExpression GetMultiBindingExpression(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.GetMultiBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMultiBindingExpression (target As DependencyObject, dp As DependencyProperty) As MultiBindingExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Data::MultiBindingExpression ^ GetMultiBindingExpression(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="static member GetMultiBindingExpression : System.Windows.DependencyObject * System.Windows.DependencyProperty -&gt; System.Windows.Data.MultiBindingExpression" Usage="System.Windows.Data.BindingOperations.GetMultiBindingExpression (target, dp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.MultiBindingExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="8c575-274"><paramref name="dp" /> が存在するバインディング ターゲット オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8c575-274">The binding target object where <paramref name="dp" /> is.</span></span></param>
        <param name="dp"><span data-ttu-id="8c575-275"><see cref="T:System.Windows.Data.MultiBindingExpression" /> オブジェクトの取得元となるバインディング ターゲット プロパティ。</span><span class="sxs-lookup"><span data-stu-id="8c575-275">The binding target property from which to retrieve the <see cref="T:System.Windows.Data.MultiBindingExpression" /> object.</span></span></param>
        <summary><span data-ttu-id="8c575-276">指定されたオブジェクト上の指定されたバインディング ターゲット プロパティに関連付けられた <see cref="T:System.Windows.Data.MultiBindingExpression" /> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="8c575-276">Returns the <see cref="T:System.Windows.Data.MultiBindingExpression" /> object associated with the specified binding target property on the specified object.</span></span></summary>
        <returns><span data-ttu-id="8c575-277">指定したプロパティに関連付けられた <see cref="T:System.Windows.Data.MultiBindingExpression" /> オブジェクト。関連付けられたオブジェクトが存在しない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8c575-277">The <see cref="T:System.Windows.Data.MultiBindingExpression" /> object associated with the given property or <see langword="null" /> if none exists.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c575-278">指定したプロパティに関連付けられた <xref:System.Windows.Data.MultiBindingExpression> オブジェクト。関連付けられたオブジェクトが存在しない場合は `null`。</span><span class="sxs-lookup"><span data-stu-id="8c575-278">The <xref:System.Windows.Data.MultiBindingExpression> object associated with the given property or `null` if none exists.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c575-279"><paramref name="target" /> パラメーターと <paramref name="dp" /> パラメーターを <see langword="null" /> にすることはできません。</span><span class="sxs-lookup"><span data-stu-id="8c575-279">The <paramref name="target" /> and <paramref name="dp" /> parameters cannot be <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingExpressionBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetMultiBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="GetPriorityBinding">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.PriorityBinding GetPriorityBinding (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Data.PriorityBinding GetPriorityBinding(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.GetPriorityBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPriorityBinding (target As DependencyObject, dp As DependencyProperty) As PriorityBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Data::PriorityBinding ^ GetPriorityBinding(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="static member GetPriorityBinding : System.Windows.DependencyObject * System.Windows.DependencyProperty -&gt; System.Windows.Data.PriorityBinding" Usage="System.Windows.Data.BindingOperations.GetPriorityBinding (target, dp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.PriorityBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="8c575-280"><paramref name="dp" /> が存在するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8c575-280">The object where <paramref name="dp" /> is.</span></span></param>
        <param name="dp"><span data-ttu-id="8c575-281">バインディングの取得元となるバインディング ターゲット プロパティ。</span><span class="sxs-lookup"><span data-stu-id="8c575-281">The binding target property from which to retrieve the binding.</span></span></param>
        <summary><span data-ttu-id="8c575-282">指定したプロパティに設定されている <see cref="T:System.Windows.Data.PriorityBinding" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="8c575-282">Retrieves the <see cref="T:System.Windows.Data.PriorityBinding" /> object that is set on the specified property.</span></span></summary>
        <returns><span data-ttu-id="8c575-283">指定したプロパティに設定された <see cref="T:System.Windows.Data.PriorityBinding" /> オブジェクト。<see cref="T:System.Windows.Data.PriorityBinding" /> オブジェクトが設定されていない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8c575-283">The <see cref="T:System.Windows.Data.PriorityBinding" /> object set on the given property or <see langword="null" /> if no <see cref="T:System.Windows.Data.PriorityBinding" /> object has been set.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c575-284"><paramref name="target" /> パラメーターと <paramref name="dp" /> パラメーターに null を指定することはできません。</span><span class="sxs-lookup"><span data-stu-id="8c575-284">The <paramref name="target" /> and <paramref name="dp" /> parameters cannot be null.</span></span></exception>
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="GetPriorityBindingExpression">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.PriorityBindingExpression GetPriorityBindingExpression (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Data.PriorityBindingExpression GetPriorityBindingExpression(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.GetPriorityBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPriorityBindingExpression (target As DependencyObject, dp As DependencyProperty) As PriorityBindingExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Data::PriorityBindingExpression ^ GetPriorityBindingExpression(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="static member GetPriorityBindingExpression : System.Windows.DependencyObject * System.Windows.DependencyProperty -&gt; System.Windows.Data.PriorityBindingExpression" Usage="System.Windows.Data.BindingOperations.GetPriorityBindingExpression (target, dp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.PriorityBindingExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="8c575-285"><paramref name="dp" /> が存在するバインディング ターゲット オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8c575-285">The binding target object where <paramref name="dp" /> is.</span></span></param>
        <param name="dp"><span data-ttu-id="8c575-286"><see cref="T:System.Windows.Data.PriorityBindingExpression" /> オブジェクトの取得元となるバインディング ターゲット プロパティ。</span><span class="sxs-lookup"><span data-stu-id="8c575-286">The binding target property from which to retrieve the <see cref="T:System.Windows.Data.PriorityBindingExpression" /> object.</span></span></param>
        <summary><span data-ttu-id="8c575-287">指定されたオブジェクト上の指定されたバインディング ターゲット プロパティに関連付けられた <see cref="T:System.Windows.Data.PriorityBindingExpression" /> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="8c575-287">Returns the <see cref="T:System.Windows.Data.PriorityBindingExpression" /> object associated with the specified binding target property on the specified object.</span></span></summary>
        <returns><span data-ttu-id="8c575-288">指定したプロパティに関連付けられた <see cref="T:System.Windows.Data.PriorityBindingExpression" /> オブジェクト。関連付けられたオブジェクトが存在しない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8c575-288">The <see cref="T:System.Windows.Data.PriorityBindingExpression" /> object associated with the given property or <see langword="null" /> if none exists.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c575-289"><paramref name="target" /> パラメーターと <paramref name="dp" /> パラメーターを <see langword="null" /> にすることはできません。</span><span class="sxs-lookup"><span data-stu-id="8c575-289">The <paramref name="target" /> and <paramref name="dp" /> parameters cannot be <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingExpressionBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetPriorityBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="GetSourceUpdatingBindingGroups">
      <MemberSignature Language="C#" Value="public static System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Data.BindingGroup&gt; GetSourceUpdatingBindingGroups (System.Windows.DependencyObject root);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Windows.Data.BindingGroup&gt; GetSourceUpdatingBindingGroups(class System.Windows.DependencyObject root) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.GetSourceUpdatingBindingGroups(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSourceUpdatingBindingGroups (root As DependencyObject) As ReadOnlyCollection(Of BindingGroup)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Windows::Data::BindingGroup ^&gt; ^ GetSourceUpdatingBindingGroups(System::Windows::DependencyObject ^ root);" />
      <MemberSignature Language="F#" Value="static member GetSourceUpdatingBindingGroups : System.Windows.DependencyObject -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Data.BindingGroup&gt;" Usage="System.Windows.Data.BindingOperations.GetSourceUpdatingBindingGroups root" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Data.BindingGroup&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="root" Type="System.Windows.DependencyObject" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="root"><span data-ttu-id="8c575-290">バインディング グループを取得するためのルート <see cref="T:System.Windows.UIElement" />。</span><span class="sxs-lookup"><span data-stu-id="8c575-290">The root <see cref="T:System.Windows.UIElement" /> to get binding groups for.</span></span>  <span data-ttu-id="8c575-291">このメソッドは、この要素または子孫要素に関連付けられた <see cref="T:System.Windows.Data.BindingGroup" /> のオブジェクトを戻します。</span><span class="sxs-lookup"><span data-stu-id="8c575-291">This method returns <see cref="T:System.Windows.Data.BindingGroup" /> objects that are associated with this element or its descendant elements.</span></span></param>
        <summary><span data-ttu-id="8c575-292">無効な値がある、またはターゲット値がソースを更新していない <see cref="T:System.Windows.Data.BindingGroup" /> オブジェクトをすべて取得します。</span><span class="sxs-lookup"><span data-stu-id="8c575-292">Gets all <see cref="T:System.Windows.Data.BindingGroup" /> objects that have invalid values or target values have not been updated the source.</span></span></summary>
        <returns><span data-ttu-id="8c575-293">指定された要素に関連付けられ、無効な値を持つかターゲット値がソースを更新していない <see cref="T:System.Windows.Data.BindingGroup" /> オブジェクトのコレクション。</span><span class="sxs-lookup"><span data-stu-id="8c575-293">A collection of <see cref="T:System.Windows.Data.BindingGroup" /> objects that are associated with the specified element and have invalid values or target values have not been updated the source.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c575-294">が`root` <xref:System.Windows.Data.BindingOperations.GetSourceUpdatingBindingGroups%2A> <xref:System.Windows.Data.BindingGroup>の場合は、無効であるか更新されていないすべてのオブジェクトを返します。 `null`</span><span class="sxs-lookup"><span data-stu-id="8c575-294">If `root` is `null`, <xref:System.Windows.Data.BindingOperations.GetSourceUpdatingBindingGroups%2A> returns all <xref:System.Windows.Data.BindingGroup> objects that are invalid or have not been updated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSourceUpdatingBindings">
      <MemberSignature Language="C#" Value="public static System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Data.BindingExpressionBase&gt; GetSourceUpdatingBindings (System.Windows.DependencyObject root);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Windows.Data.BindingExpressionBase&gt; GetSourceUpdatingBindings(class System.Windows.DependencyObject root) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.GetSourceUpdatingBindings(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSourceUpdatingBindings (root As DependencyObject) As ReadOnlyCollection(Of BindingExpressionBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Windows::Data::BindingExpressionBase ^&gt; ^ GetSourceUpdatingBindings(System::Windows::DependencyObject ^ root);" />
      <MemberSignature Language="F#" Value="static member GetSourceUpdatingBindings : System.Windows.DependencyObject -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Data.BindingExpressionBase&gt;" Usage="System.Windows.Data.BindingOperations.GetSourceUpdatingBindings root" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Data.BindingExpressionBase&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="root" Type="System.Windows.DependencyObject" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="root"><span data-ttu-id="8c575-295">バインディング グループを取得するためのルート <see cref="T:System.Windows.UIElement" />。</span><span class="sxs-lookup"><span data-stu-id="8c575-295">The root <see cref="T:System.Windows.UIElement" /> to get binding groups for.</span></span>  <span data-ttu-id="8c575-296">このメソッドは、この要素または子孫要素に関連付けられた <see cref="T:System.Windows.Data.BindingExpressionBase" /> のオブジェクトを戻します。</span><span class="sxs-lookup"><span data-stu-id="8c575-296">This method returns <see cref="T:System.Windows.Data.BindingExpressionBase" /> objects that are associated with this element or its descendant elements.</span></span></param>
        <summary><span data-ttu-id="8c575-297">無効な値がある、またはターゲット値がソースを更新していない <see cref="T:System.Windows.Data.BindingExpressionBase" /> オブジェクトをすべて取得します。</span><span class="sxs-lookup"><span data-stu-id="8c575-297">Gets all <see cref="T:System.Windows.Data.BindingExpressionBase" /> objects that have invalid values or target values have not been updated the source.</span></span></summary>
        <returns><span data-ttu-id="8c575-298">指定された要素に関連付けられ、無効な値を持つかターゲット値がソースを更新していない <see cref="T:System.Windows.Data.BindingExpressionBase" /> オブジェクトのコレクション。</span><span class="sxs-lookup"><span data-stu-id="8c575-298">A collection of <see cref="T:System.Windows.Data.BindingExpressionBase" /> objects that are associated with the specified element and have invalid values or target values have not been updated the source.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c575-299">が`root` <xref:System.Windows.Data.BindingOperations.GetSourceUpdatingBindings%2A> <xref:System.Windows.Data.BindingExpressionBase>の場合は、無効であるか更新されていないすべてのオブジェクトを返します。 `null`</span><span class="sxs-lookup"><span data-stu-id="8c575-299">If `root` is `null`, <xref:System.Windows.Data.BindingOperations.GetSourceUpdatingBindings%2A> returns all <xref:System.Windows.Data.BindingExpressionBase> objects that are invalid or have not been updated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDataBound">
      <MemberSignature Language="C#" Value="public static bool IsDataBound (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDataBound(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.IsDataBound(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDataBound (target As DependencyObject, dp As DependencyProperty) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDataBound(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="static member IsDataBound : System.Windows.DependencyObject * System.Windows.DependencyProperty -&gt; bool" Usage="System.Windows.Data.BindingOperations.IsDataBound (target, dp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="8c575-300"><paramref name="dp" /> が存在するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8c575-300">The object where <paramref name="dp" /> is.</span></span></param>
        <param name="dp"><span data-ttu-id="8c575-301">照合する対象の依存関係プロパティ。</span><span class="sxs-lookup"><span data-stu-id="8c575-301">The dependency property to check.</span></span></param>
        <summary><span data-ttu-id="8c575-302">指定したプロパティが現在データ バインドされているかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="8c575-302">Returns a value that indicates whether the specified property is currently data-bound.</span></span></summary>
        <returns><span data-ttu-id="8c575-303">指定したプロパティがデータ バインドされている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8c575-303"><see langword="true" /> if the specified property is data-bound; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c575-304"><paramref name="target" /> が <see langword="null" /> の場合。</span><span class="sxs-lookup"><span data-stu-id="8c575-304">If <paramref name="target" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetBinding">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.BindingExpressionBase SetBinding (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp, System.Windows.Data.BindingBase binding);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Data.BindingExpressionBase SetBinding(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp, class System.Windows.Data.BindingBase binding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.SetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.Data.BindingBase)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SetBinding (target As DependencyObject, dp As DependencyProperty, binding As BindingBase) As BindingExpressionBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Data::BindingExpressionBase ^ SetBinding(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp, System::Windows::Data::BindingBase ^ binding);" />
      <MemberSignature Language="F#" Value="static member SetBinding : System.Windows.DependencyObject * System.Windows.DependencyProperty * System.Windows.Data.BindingBase -&gt; System.Windows.Data.BindingExpressionBase" Usage="System.Windows.Data.BindingOperations.SetBinding (target, dp, binding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingExpressionBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="binding" Type="System.Windows.Data.BindingBase" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="8c575-305">バインディングのバインディング ターゲット。</span><span class="sxs-lookup"><span data-stu-id="8c575-305">The binding target of the binding.</span></span></param>
        <param name="dp"><span data-ttu-id="8c575-306">バインディングのターゲット プロパティ。</span><span class="sxs-lookup"><span data-stu-id="8c575-306">The target property of the binding.</span></span></param>
        <param name="binding"><span data-ttu-id="8c575-307">バインディングを記述する <see cref="T:System.Windows.Data.BindingBase" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8c575-307">The <see cref="T:System.Windows.Data.BindingBase" /> object that describes the binding.</span></span></param>
        <summary><span data-ttu-id="8c575-308"><see cref="T:System.Windows.Data.BindingExpressionBase" /> の新しいインスタンスを作成し、指定したバインディング ターゲット プロパティと関連付けます。</span><span class="sxs-lookup"><span data-stu-id="8c575-308">Creates and associates a new instance of <see cref="T:System.Windows.Data.BindingExpressionBase" /> with the specified binding target property.</span></span></summary>
        <returns><span data-ttu-id="8c575-309">指定したプロパティに対して作成され関連付けられた <see cref="T:System.Windows.Data.BindingExpressionBase" /> のインスタンス。</span><span class="sxs-lookup"><span data-stu-id="8c575-309">The instance of <see cref="T:System.Windows.Data.BindingExpressionBase" /> created for and associated with the specified property.</span></span> <span data-ttu-id="8c575-310"><see cref="T:System.Windows.Data.BindingExpressionBase" /> クラスは、<see cref="T:System.Windows.Data.BindingExpression" />、<see cref="T:System.Windows.Data.MultiBindingExpression" />、および <see cref="T:System.Windows.Data.PriorityBindingExpression" /> の基本クラスです。</span><span class="sxs-lookup"><span data-stu-id="8c575-310">The <see cref="T:System.Windows.Data.BindingExpressionBase" /> class is the base class of <see cref="T:System.Windows.Data.BindingExpression" />, <see cref="T:System.Windows.Data.MultiBindingExpression" />, and <see cref="T:System.Windows.Data.PriorityBindingExpression" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c575-311">このメソッドは、 <xref:System.Windows.Data.BindingExpressionBase>の新しいインスタンスを作成し、指定したオブジェクトの指定した依存関係プロパティにインスタンスを関連付けます。</span><span class="sxs-lookup"><span data-stu-id="8c575-311">This method creates a new instance of a <xref:System.Windows.Data.BindingExpressionBase> and associates the instance with the given dependency property of the given object.</span></span> <span data-ttu-id="8c575-312">このメソッドは、独自の setbinding メソッドを公開し<xref:System.Windows.DependencyObject>ない可能性のある任意のにバインドをアタッチする方法です。</span><span class="sxs-lookup"><span data-stu-id="8c575-312">This method is the way to attach a binding to an arbitrary <xref:System.Windows.DependencyObject> that may not expose its own SetBinding method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8c575-313">次の例は、このメソッドを使用してバインディングを設定する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="8c575-313">The following example shows how to use this method to set a binding.</span></span> <span data-ttu-id="8c575-314">この例で<xref:System.Windows.Data.Binding>は`myNewBindDef` 、はバインディングを記述するオブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="8c575-314">In this example, `myNewBindDef` is a <xref:System.Windows.Data.Binding> object that describes the binding.</span></span> <span data-ttu-id="8c575-315">バインディングターゲットは、 `myDateText` <xref:System.Windows.Controls.TextBlock>クラスのインスタンスです。</span><span class="sxs-lookup"><span data-stu-id="8c575-315">The binding target is `myDateText`, an instance of the <xref:System.Windows.Controls.TextBlock> class.</span></span>  
  
 [!code-csharp[BindConversion#BOSetBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/BindConversion/CSharp/Window1.xaml.cs#bosetbinding)]
 [!code-vb[BindConversion#BOSetBinding](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindConversion/visualbasic/window1.xaml.vb#bosetbinding)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c575-316"><paramref name="binding" /> パラメーターとして <see langword="null" /> を使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="8c575-316">The <paramref name="binding" /> parameter cannot be <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
