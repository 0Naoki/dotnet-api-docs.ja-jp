<Type Name="BindingOperations" FullName="System.Windows.Data.BindingOperations">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="92b113f334992708d2a2faaedc39e7bed7220632" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36564651" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class BindingOperations" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit BindingOperations extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.BindingOperations" />
  <TypeSignature Language="VB.NET" Value="Public Class BindingOperations" />
  <TypeSignature Language="C++ CLI" Value="public ref class BindingOperations abstract sealed" />
  <TypeSignature Language="F#" Value="type BindingOperations = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="T:System.Windows.Data.Binding" />、<see cref="T:System.Windows.Data.MultiBinding" />、<see cref="T:System.Windows.Data.PriorityBinding" /> オブジェクトなどのバインディングを操作するための静的メソッドを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このクラスは、データ バインディング用のヘルパー操作として機能する静的メソッドのセットを公開します。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AccessCollection">
      <MemberSignature Language="C#" Value="public static void AccessCollection (System.Collections.IEnumerable collection, Action accessMethod, bool writeAccess);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AccessCollection(class System.Collections.IEnumerable collection, class System.Action accessMethod, bool writeAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.AccessCollection(System.Collections.IEnumerable,System.Action,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AccessCollection (collection As IEnumerable, accessMethod As Action, writeAccess As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AccessCollection(System::Collections::IEnumerable ^ collection, Action ^ accessMethod, bool writeAccess);" />
      <MemberSignature Language="F#" Value="static member AccessCollection : System.Collections.IEnumerable * Action * bool -&gt; unit" Usage="System.Windows.Data.BindingOperations.AccessCollection (collection, accessMethod, writeAccess)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.IEnumerable" />
        <Parameter Name="accessMethod" Type="System.Action" />
        <Parameter Name="writeAccess" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="collection">アクセスするコレクション。</param>
        <param name="accessMethod">コレクション上で実行するアクション。</param>
        <param name="writeAccess">
          <c>accessMethod</c> でコレクションへの書き込みを行う場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</param>
        <summary>EnableCollectionSynchronization を呼び出したときに指定されるアプリケーション同期機構を使用してコレクションへのアクセスを提供します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearAllBindings">
      <MemberSignature Language="C#" Value="public static void ClearAllBindings (System.Windows.DependencyObject target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClearAllBindings(class System.Windows.DependencyObject target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.ClearAllBindings(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ClearAllBindings (target As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ClearAllBindings(System::Windows::DependencyObject ^ target);" />
      <MemberSignature Language="F#" Value="static member ClearAllBindings : System.Windows.DependencyObject -&gt; unit" Usage="System.Windows.Data.BindingOperations.ClearAllBindings target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="target">バインドを削除するオブジェクト。</param>
        <summary>種類が <see cref="T:System.Windows.Data.Binding" />、<see cref="T:System.Windows.Data.MultiBinding" />、および <see cref="T:System.Windows.Data.PriorityBinding" /> のバインディングを含むすべてのバインディングを、指定した <see cref="T:System.Windows.DependencyObject" /> から削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 指定したオブジェクトがデータ バインドでない場合は、このメソッドは影響を与えません。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="target" /> が <see langword="null" /> の場合。</exception>
      </Docs>
    </Member>
    <Member MemberName="ClearBinding">
      <MemberSignature Language="C#" Value="public static void ClearBinding (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClearBinding(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.ClearBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ClearBinding (target As DependencyObject, dp As DependencyProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ClearBinding(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="static member ClearBinding : System.Windows.DependencyObject * System.Windows.DependencyProperty -&gt; unit" Usage="System.Windows.Data.BindingOperations.ClearBinding (target, dp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="target">バインドを削除するオブジェクト。</param>
        <param name="dp">バインドを削除する依存関係プロパティ。</param>
        <summary>プロパティからバインドを削除します (存在する場合)。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 指定されたプロパティは、データ バインドの場合、 <xref:System.Windows.Data.Binding>、 <xref:System.Windows.Data.PriorityBinding>、または<xref:System.Windows.Data.MultiBinding>、このメソッドは、対応するバインディング式および復元すると、ローカルの値は前に、のプロパティの値をバインディングによって設定されたを削除します。  
  
 指定されたプロパティがデータ バインドでない場合は、このメソッドは影響を与えません。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="target" /> パラメーターと <paramref name="dp" /> パラメーターを <see langword="null" /> にすることはできません。</exception>
      </Docs>
    </Member>
    <Member MemberName="CollectionRegistering">
      <MemberSignature Language="C#" Value="public static event EventHandler&lt;System.Windows.Data.CollectionRegisteringEventArgs&gt; CollectionRegistering;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Data.CollectionRegisteringEventArgs&gt; CollectionRegistering" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Data.BindingOperations.CollectionRegistering" />
      <MemberSignature Language="VB.NET" Value="Public Shared Event CollectionRegistering As EventHandler(Of CollectionRegisteringEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler&lt;System::Windows::Data::CollectionRegisteringEventArgs ^&gt; ^ CollectionRegistering;" />
      <MemberSignature Language="F#" Value="member this.CollectionRegistering : EventHandler&lt;System.Windows.Data.CollectionRegisteringEventArgs&gt; " Usage="member this.CollectionRegistering : System.EventHandler&lt;System.Windows.Data.CollectionRegisteringEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Data.CollectionRegisteringEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ バインディングのシステムがコレクションを確認すると発生します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CollectionViewRegistering">
      <MemberSignature Language="C#" Value="public static event EventHandler&lt;System.Windows.Data.CollectionViewRegisteringEventArgs&gt; CollectionViewRegistering;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Data.CollectionViewRegisteringEventArgs&gt; CollectionViewRegistering" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Data.BindingOperations.CollectionViewRegistering" />
      <MemberSignature Language="VB.NET" Value="Public Shared Event CollectionViewRegistering As EventHandler(Of CollectionViewRegisteringEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler&lt;System::Windows::Data::CollectionViewRegisteringEventArgs ^&gt; ^ CollectionViewRegistering;" />
      <MemberSignature Language="F#" Value="member this.CollectionViewRegistering : EventHandler&lt;System.Windows.Data.CollectionViewRegisteringEventArgs&gt; " Usage="member this.CollectionViewRegistering : System.EventHandler&lt;System.Windows.Data.CollectionViewRegisteringEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Data.CollectionViewRegisteringEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ バインディングのシステムがコレクション ビューを確認すると発生します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableCollectionSynchronization">
      <MemberSignature Language="C#" Value="public static void DisableCollectionSynchronization (System.Collections.IEnumerable collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DisableCollectionSynchronization(class System.Collections.IEnumerable collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.DisableCollectionSynchronization(System.Collections.IEnumerable)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DisableCollectionSynchronization (collection As IEnumerable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DisableCollectionSynchronization(System::Collections::IEnumerable ^ collection);" />
      <MemberSignature Language="F#" Value="static member DisableCollectionSynchronization : System.Collections.IEnumerable -&gt; unit" Usage="System.Windows.Data.BindingOperations.DisableCollectionSynchronization collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.IEnumerable" />
      </Parameters>
      <Docs>
        <param name="collection">同期アクセスを削除するコレクション。</param>
        <summary>指定されたコレクションについて登録されている同期を削除します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisconnectedSource">
      <MemberSignature Language="C#" Value="public static object DisconnectedSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property object DisconnectedSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingOperations.DisconnectedSource" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DisconnectedSource As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Object ^ DisconnectedSource { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DisconnectedSource : obj" Usage="System.Windows.Data.BindingOperations.DisconnectedSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>項目コンテナーがビジュアル ツリーから削除された場合に <see cref="P:System.Windows.FrameworkElement.DataContext" /> を置換するオブジェクトを取得します。</summary>
        <value>項目コンテナーがビジュアル ツリーから削除された場合に <see cref="P:System.Windows.FrameworkElement.DataContext" /> を置換するオブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 対処する必要がある場合は、このプロパティを使用して、<xref:System.Windows.FrameworkElement.DataContext%2A>項目コンテナーのです。  項目コンテナーは、<xref:System.Windows.Controls.ItemsControl> に項目を表示する UI 要素です。  <xref:System.Windows.Controls.ItemsControl> がコレクションにバインドされたデータの場合、項目コンテナーは項目ごとに生成されます。  場合によっては、項目コンテナーがビジュアル ツリーから削除されます。  項目コンテナーが削除される 2 つの一般的なケースは、項目が基になるコレクションから削除されたときと、仮想化が <xref:System.Windows.Controls.ItemsControl> で有効になっているときです。  このような場合、<xref:System.Windows.FrameworkElement.DataContext%2A>項目コンテナーのプロパティ設定されます、<xref:System.Windows.Data.BindingOperations.DisconnectedSource%2A>プロパティを確認してくださいかどうか、<xref:System.Windows.FrameworkElement.DataContext%2A>と等しい、<xref:System.Windows.Data.BindingOperations.DisconnectedSource%2A>アクセスする前に、<xref:System.Windows.FrameworkElement.DataContext%2A>で、<xref:System.Windows.FrameworkElement.DataContextChanged>項目のイベントコンテナーです。 項目コンテナーと仮想化の詳細についてで「解説」を参照してください、<xref:System.Windows.Controls.VirtualizingStackPanel>クラスです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="EnableCollectionSynchronization">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Data.CollectionView" /> オブジェクトが、複数のスレッドで使用されるコレクションへの同期アクセスに参加できるようにします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

WPF アプリケーションを使用してデータのコレクションを表示できる、<xref:System.Windows.Controls.ItemsControl>またはそのサブクラスのいずれか (<xref:System.Windows.Controls.ListBox>、 <xref:System.Windows.Controls.DataGrid>、 <xref:System.Windows.Controls.TreeView>、 <xref:System.Windows.Controls.ListView>, などです。)。 WPF のサブクラスでコレクションへのアクセスをすべてのチャンネル<xref:System.Windows.Data.CollectionView>です。 両方の<xref:System.Windows.Controls.ItemsControl>と<xref:System.Windows.Data.CollectionView>をスレッドにアフィニティを持つ、<xref:System.Windows.Controls.ItemsControl>が作成された、つまり、別のスレッドで使用が禁止されています、例外をスローします。 実際には、この制限は、コレクションにもに適用されます。
 
複数のスレッドでコレクションを使用することがあります。   コレクションを更新するなど、追加 (アイテムを削除)「データの収集」のスレッドで、「ユーザー インターフェイス」スレッドで、結果を表示するときに、UI が中に応答できるようにデータ収集が行われています。 このような状況で、コレクションへの同期 (「スレッド セーフである」) アクセスを担当しています。   これは、通常セマフォなどを使用して単純ロック機構またはより複雑な同期メカニズムのいずれかと、イベントなどをリセットします。 
 
WPF からそのアクセスを保証する必要がありますも中に、コレクションへのアプリケーションのアクセスを同期する必要があります (特にから<xref:System.Windows.Data.CollectionView>) が同じ同期機構に参加します。  これを行うには、<xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A> メソッドを呼び出します。
 
使用してコレクション複数のスレッドのうちの 1 つを所有する UI スレッド、<xref:System.Windows.Controls.ItemsControl>アプリケーションには、次の責任を負います。

1. 同期メカニズムを選択します。

1. このメカニズムを使用して、コレクションにアプリケーションからのすべてのアクセスを同期します。

1. 呼び出す<xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A>機構の WPF を通知するためにします。

   - 呼び出しは、UI スレッドで行う必要があります。

   - 別のスレッドのコレクションを使用する前に、またはコレクションをアタッチする前に呼び出しを行う必要があります、 <xref:System.Windows.Controls.ItemsControl>、自動的に整理します。

   - 呼び出す、<xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)>単純ロック メカニズムを使用した場合、オーバー ロード; 呼び出し、<xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)>オーバー ロードの場合はより複雑なメカニズムを使用します。

1. コレクションとその変更の通知への変更を確認してください (を通じて<xref:System.Collections.Specialized.INotifyCollectionChanged>) はアトミックです。 他のスレッドからのアクセスに対処できますありません。  (これは、通常無料です。 For instance、<xref:System.Collections.ObjectModel.ObservableCollection%601>同期で保護されているすべての変更をこのことを保証します)。

1. 呼び出す場合<xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>呼び出しが UI スレッドで行う必要がありますもします。

1. 複数の UI スレッドで同じコレクションを使用する場合は、呼び出す必要があります<xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A>(および<xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>、必要に応じて) UI スレッドごとに個別にします。

1. デッドロックを回避します。  これは既に、アプリケーションの責任、同期を使用するが、これも考慮する必要があります、同期アカウント WPF への参加にしたら、次の段落で説明したようです。

代わりに、WPF には、次の動作が用意されています。

- <xref:System.Windows.Data.CollectionView>特定の同期機構を使用してコレクションにアクセスします。

- <xref:System.Windows.Data.CollectionView> "シャドウのコピーを保持"コレクションを使用するため、UI スレッドでします。

- <xref:System.Windows.Data.CollectionView.CollectionChanged> イベントは、キューに登録 (スレッド) で受信したとき。

- 保留中のイベントに適用されます、UI スレッドで非同期的にシャドウ コピーする機会があるとします。

- <xref:System.Windows.Data.CollectionView>アプリケーションに表示されている同期機構を直接使用されません。 これは、WPF の方法を回避することができのデッドロック (7 の前の項目を参照してください)。   

Net の効果は、任意のスレッドのコレクションを変更してにそれらの変更が最終的に表示されます、 <xref:System.Windows.Controls.ItemsControl> UI スレッドが"の遅れを取り戻す"時刻を持つ場合です。  実装では、調整されているため変更がバック グラウンドを保持する UI スレッドにフローするレートが飽和状態になる UI スレッドと通常のユーザー入力に応答を不足からスレッドを調整します。

 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="EnableCollectionSynchronization">
      <MemberSignature Language="C#" Value="public static void EnableCollectionSynchronization (System.Collections.IEnumerable collection, object lockObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EnableCollectionSynchronization(class System.Collections.IEnumerable collection, object lockObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub EnableCollectionSynchronization (collection As IEnumerable, lockObject As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void EnableCollectionSynchronization(System::Collections::IEnumerable ^ collection, System::Object ^ lockObject);" />
      <MemberSignature Language="F#" Value="static member EnableCollectionSynchronization : System.Collections.IEnumerable * obj -&gt; unit" Usage="System.Windows.Data.BindingOperations.EnableCollectionSynchronization (collection, lockObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.IEnumerable" />
        <Parameter Name="lockObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="collection">同期アクセスが必要なコレクション。</param>
        <param name="lockObject">コレクションにアクセスするときにロックするオブジェクト。</param>
        <summary>
          <see cref="T:System.Windows.Data.CollectionView" /> オブジェクトが、単純なロック メカニズムを使用して複数のスレッドで使用されるコレクションへの同期アクセスに参加できるようにします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  

## Remarks

WPF アプリケーションを使用してデータのコレクションを表示できる、<xref:System.Windows.Controls.ItemsControl>またはそのサブクラスのいずれか (<xref:System.Windows.Controls.ListBox>、 <xref:System.Windows.Controls.DataGrid>、 <xref:System.Windows.Controls.TreeView>、 <xref:System.Windows.Controls.ListView>, などです。)。 WPF のサブクラスでコレクションへのアクセスをすべてのチャンネル<xref:System.Windows.Data.CollectionView>です。 両方の<xref:System.Windows.Controls.ItemsControl>と<xref:System.Windows.Data.CollectionView>をスレッドにアフィニティを持つ、<xref:System.Windows.Controls.ItemsControl>が作成された、つまり、別のスレッドで使用が禁止されています、例外をスローします。 実際には、この制限は、コレクションにもに適用されます。
 
複数のスレッドでコレクションを使用することがあります。   コレクションを更新するなど、追加 (アイテムを削除)「データの収集」のスレッドで、「ユーザー インターフェイス」スレッドで、結果を表示するときに、UI が中に応答できるようにデータ収集が行われています。 このような状況で、必要があります (「スレッド セーフである」) のアクセスとは、WPF から確実にアクセスするコレクションを同期されていることを確認の (特にから<xref:System.Windows.Data.CollectionView>) が同じ同期機構に参加します。 呼び出して、<xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)>メソッド、これを行う単純ロック メカニズムを使用しています。 
 
使用してコレクション複数のスレッドのうちの 1 つを所有する UI スレッド、<xref:System.Windows.Controls.ItemsControl>次を行う必要があります。

1. コレクションにアクセスする際にロックするオブジェクトのインスタンスを作成します。

1. そのオブジェクトをロックすることにより、アプリケーションから、コレクションへのすべてのアクセスを同期します。

1. 呼び出す<xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)>WPF 単純ロック メカニズムを使用することを通知するためにします。

   - 呼び出しは、UI スレッドで行う必要があります。

   - 別のスレッドのコレクションを使用する前に、またはコレクションをアタッチする前に呼び出しを行う必要があります、 <xref:System.Windows.Controls.ItemsControl>、自動的に整理します。

1. コレクションとその変更の通知への変更を確認してください (を通じて<xref:System.Collections.Specialized.INotifyCollectionChanged>) はアトミックです。 他のスレッドからのアクセスに対処できますありません。  (これは、通常無料です。 For instance、<xref:System.Collections.ObjectModel.ObservableCollection%601>同期で保護されているすべての変更をこのことを保証します)。

1. 呼び出す場合<xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>呼び出しが UI スレッドで行う必要がありますもします。

1. 複数の UI スレッドで同じコレクションを使用する場合は、呼び出す必要があります<xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A>(および<xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>、必要に応じて) UI スレッドごとに個別にします。

1. デッドロックを回避します。  、同期を使用するが、その必要がありますも考慮に入れる同期 WPF への参加が既にアプリケーションの責任になります。 (参照の詳細は、下)。

代わりに、WPF には、次の動作が用意されています。

- <xref:System.Windows.Data.CollectionView>ロック メカニズムを使用してコレクションにアクセスします。

- <xref:System.Windows.Data.CollectionView> "シャドウのコピーを保持"コレクションを使用するため、UI スレッドでします。

- <xref:System.Windows.Data.CollectionView.CollectionChanged> イベントは、キューに登録 (スレッド) で受信したとき。

- 保留中のイベントに適用されます、UI スレッドで非同期的にシャドウ コピーする機会があるとします。

- <xref:System.Windows.Data.CollectionView>アプリケーションに表示されている同期機構直接使用されます。 これは、WPF の方法を回避することができのデッドロック (7 の前の項目を参照してください)。   

Net の効果は、任意のスレッドのコレクションを変更してにそれらの変更が最終的に表示されます、 <xref:System.Windows.Controls.ItemsControl> UI スレッドが"の遅れを取り戻す"時刻を持つ場合です。  実装では、調整されているため変更がバック グラウンドを保持する UI スレッドにフローするレートが飽和状態になる UI スレッドと通常のユーザー入力に応答を不足からスレッドを調整します。
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableCollectionSynchronization">
      <MemberSignature Language="C#" Value="public static void EnableCollectionSynchronization (System.Collections.IEnumerable collection, object context, System.Windows.Data.CollectionSynchronizationCallback synchronizationCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EnableCollectionSynchronization(class System.Collections.IEnumerable collection, object context, class System.Windows.Data.CollectionSynchronizationCallback synchronizationCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub EnableCollectionSynchronization (collection As IEnumerable, context As Object, synchronizationCallback As CollectionSynchronizationCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void EnableCollectionSynchronization(System::Collections::IEnumerable ^ collection, System::Object ^ context, System::Windows::Data::CollectionSynchronizationCallback ^ synchronizationCallback);" />
      <MemberSignature Language="F#" Value="static member EnableCollectionSynchronization : System.Collections.IEnumerable * obj * System.Windows.Data.CollectionSynchronizationCallback -&gt; unit" Usage="System.Windows.Data.BindingOperations.EnableCollectionSynchronization (collection, context, synchronizationCallback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.IEnumerable" />
        <Parameter Name="context" Type="System.Object" />
        <Parameter Name="synchronizationCallback" Type="System.Windows.Data.CollectionSynchronizationCallback" />
      </Parameters>
      <Docs>
        <param name="collection">同期アクセスが必要なコレクション。</param>
        <param name="context">コールバックに渡されるオブジェクト。</param>
        <param name="synchronizationCallback">コレクションへのアクセスが必要なときに呼び出されるコールバック。 これを使用して、一度に 1 つのスレッドでコレクションにアクセスできるようにします。</param>
        <summary>
          <see cref="T:System.Windows.Data.CollectionView" /> オブジェクトが、単純なロック以外のメカニズムを使用して複数のスレッドで使用されるコレクションへの同期アクセスに参加できるようにします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

WPF アプリケーションを使用してデータのコレクションを表示できる、<xref:System.Windows.Controls.ItemsControl>またはそのサブクラスのいずれか (<xref:System.Windows.Controls.ListBox>、 <xref:System.Windows.Controls.DataGrid>、 <xref:System.Windows.Controls.TreeView>、 <xref:System.Windows.Controls.ListView>, などです。)。 WPF のサブクラスでコレクションへのアクセスをすべてのチャンネル<xref:System.Windows.Data.CollectionView>です。 両方の<xref:System.Windows.Controls.ItemsControl>と<xref:System.Windows.Data.CollectionView>をスレッドにアフィニティを持つ、<xref:System.Windows.Controls.ItemsControl>が作成された、つまり、別のスレッドで使用が禁止されています、例外をスローします。 実際には、この制限は、コレクションにもに適用されます。
 
複数のスレッドでコレクションを使用することがあります。   コレクションを更新するなど、追加 (アイテムを削除)「データの収集」のスレッドで、「ユーザー インターフェイス」スレッドで、結果を表示するときに、UI が中に応答できるようにデータ収集が行われています。 このような状況で、必要があります (「スレッド セーフである」) のアクセスとは、WPF から確実にアクセスするコレクションを同期されていることを確認の (特にから<xref:System.Windows.Data.CollectionView>) が同じ同期機構に参加します。 呼び出して、<xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)>メソッド、これを行うなど、セマフォ、リセット イベントなどの同期機構を使用します。 
 
使用してコレクション複数のスレッドのうちの 1 つを所有する UI スレッド、<xref:System.Windows.Controls.ItemsControl>次を行う必要があります。

1. 同期メカニズムを選択します。

1. このメカニズムを使用して、コレクションにアプリケーションからのすべてのアクセスを同期します。

1. 呼び出す、 <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)> WPF 単純ロック以外のメカニズムを使用していることを通知するためにオーバー ロードします。

   - 呼び出しは、UI スレッドで行う必要があります。

   - 別のスレッドのコレクションを使用する前に、またはコレクションをアタッチする前に呼び出しを行う必要があります、 <xref:System.Windows.Controls.ItemsControl>、自動的に整理します。

1. コレクションとその変更の通知への変更を確認してください (を通じて<xref:System.Collections.Specialized.INotifyCollectionChanged>) はアトミックです。 他のスレッドからのアクセスに対処できますありません。  (これは、通常無料です。 For instance、<xref:System.Collections.ObjectModel.ObservableCollection%601>同期で保護されているすべての変更をこのことを保証します)。

1. 呼び出す場合<xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>呼び出しが UI スレッドで行う必要がありますもします。

1. 複数の UI スレッドで同じコレクションを使用する場合は、呼び出す必要があります<xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A>(および<xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>、必要に応じて) UI スレッドごとに個別にします。

1. デッドロックを回避します。  、同期を使用するが、その必要がありますも考慮に入れる同期 WPF への参加が既にアプリケーションの責任になります。 (参照の詳細は、下)。

代わりに、WPF には、次の動作が用意されています。

- <xref:System.Windows.Data.CollectionView>を呼び出して、登録されているコレクションにアクセスする<xref:System.Windows.Data.CollectionSynchronizationCallback>次の引数で。

   - `collection`: 関心のあるコレクション。
   - `context`: 登録されているコンテキスト オブジェクト。
   - `accessMethod`: 実際のアクセスを実行するデリゲート。
   - `writeAccess`:`true`デリゲートは、コレクションを変更する場合`false`それ以外の場合。

   <xref:System.Windows.Data.CollectionSynchronizationCallback>コレクションでの同期を確立する必要があります (を使用して、`context`オブジェクトおよび`writeAccess`では、適切な値)、呼び出す、`accessMethod`同期を解放します。

- <xref:System.Windows.Data.CollectionView> "シャドウのコピーを保持"コレクションを使用するため、UI スレッドでします。

- <xref:System.Windows.Data.CollectionView.CollectionChanged> イベントは、キューに登録 (スレッド) で受信したとき。

- 保留中のイベントに適用されます、UI スレッドで非同期的にシャドウ コピーする機会があるとします。

- <xref:System.Windows.Data.CollectionView>アプリケーションに表示されている同期機構直接使用されます。 これは、WPF の方法を回避することができのデッドロック (7 の前の項目を参照してください)。   

Net の効果は、任意のスレッドのコレクションを変更してにそれらの変更が最終的に表示されます、 <xref:System.Windows.Controls.ItemsControl> UI スレッドが"の遅れを取り戻す"時刻を持つ場合です。  実装では、調整されているため変更がバック グラウンドを保持する UI スレッドにフローするレートが飽和状態になる UI スレッドと通常のユーザー入力に応答を不足からスレッドを調整します。

 `context`パラメーターは、任意のオブジェクトに渡される、`callback`です。 アクセスを制御するために使用する同期メカニズムの決定を行うこともできます`collection`です。 `Context` 指定できます`null`です。  
 
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBinding">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.Binding GetBinding (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Data.Binding GetBinding(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.GetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBinding (target As DependencyObject, dp As DependencyProperty) As Binding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Data::Binding ^ GetBinding(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="static member GetBinding : System.Windows.DependencyObject * System.Windows.DependencyProperty -&gt; System.Windows.Data.Binding" Usage="System.Windows.Data.BindingOperations.GetBinding (target, dp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.Binding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="target">
          <c>dp</c> が存在するオブジェクト。</param>
        <param name="dp">バインディングの取得元となるバインディング ターゲット プロパティ。</param>
        <summary>指定したプロパティに設定されている <see cref="T:System.Windows.Data.Binding" /> オブジェクトを取得します。</summary>
        <returns>指定したプロパティに設定された <see cref="T:System.Windows.Data.Binding" /> オブジェクト。<see cref="T:System.Windows.Data.Binding" /> オブジェクトが設定されていない場合は <see langword="null" />。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="target" /> パラメーターと <paramref name="dp" /> パラメーターに null を指定することはできません。</exception>
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetMultiBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetPriorityBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="GetBindingBase">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.BindingBase GetBindingBase (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Data.BindingBase GetBindingBase(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.GetBindingBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBindingBase (target As DependencyObject, dp As DependencyProperty) As BindingBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Data::BindingBase ^ GetBindingBase(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="static member GetBindingBase : System.Windows.DependencyObject * System.Windows.DependencyProperty -&gt; System.Windows.Data.BindingBase" Usage="System.Windows.Data.BindingOperations.GetBindingBase (target, dp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="target">
          <c>dp</c> が存在するオブジェクト。</param>
        <param name="dp">
          <see cref="T:System.Windows.Data.BindingBase" /> オブジェクトの取得元となるバインディング ターゲット プロパティ。</param>
        <summary>指定したプロパティに設定されている <see cref="T:System.Windows.Data.BindingBase" /> オブジェクトを取得します。</summary>
        <returns>指定したプロパティに設定された <see cref="T:System.Windows.Data.BindingBase" /> オブジェクト。バインディング オブジェクトが設定されていない場合は <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Data.BindingBase>クラスは、共通の基本クラス、 <xref:System.Windows.Data.Binding>、 <xref:System.Windows.Data.PriorityBinding>、および<xref:System.Windows.Data.MultiBinding>クラスです。 使用することができます、 <xref:System.Windows.Data.BindingOperations.GetBinding%2A>、 <xref:System.Windows.Data.BindingOperations.GetPriorityBinding%2A>、および<xref:System.Windows.Data.BindingOperations.GetMultiBinding%2A>メソッド、つまりバインディングの種類が事前にわかっている場合は、プロパティに設定します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="target" /> パラメーターと <paramref name="dp" /> パラメーターを <see langword="null" /> にすることはできません。</exception>
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingExpressionBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="GetBindingExpression">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.BindingExpression GetBindingExpression (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Data.BindingExpression GetBindingExpression(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.GetBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBindingExpression (target As DependencyObject, dp As DependencyProperty) As BindingExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Data::BindingExpression ^ GetBindingExpression(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="static member GetBindingExpression : System.Windows.DependencyObject * System.Windows.DependencyProperty -&gt; System.Windows.Data.BindingExpression" Usage="System.Windows.Data.BindingOperations.GetBindingExpression (target, dp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="target">
          <c>dp</c> が存在するバインディング ターゲット オブジェクト。</param>
        <param name="dp">
          <see cref="T:System.Windows.Data.BindingExpression" /> オブジェクトの取得元となるバインディング ターゲット プロパティ。</param>
        <summary>指定されたオブジェクト上の指定されたバインディング ターゲット プロパティに関連付けられた <see cref="T:System.Windows.Data.BindingExpression" /> オブジェクトを返します。</summary>
        <returns>指定したプロパティに関連付けられた <see cref="T:System.Windows.Data.BindingExpression" /> オブジェクト。関連付けられたオブジェクトが存在しない場合は <see langword="null" />。 <see cref="T:System.Windows.Data.PriorityBindingExpression" /> オブジェクトがプロパティに設定されている場合は、<see cref="P:System.Windows.Data.PriorityBindingExpression.ActiveBindingExpression" /> が返されます。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Data.BindingExpression>オブジェクトは、バインディング ソースとバインド ターゲットの間の接続を維持します。 取得することができます、<xref:System.Windows.Data.BindingExpression>オブジェクトをこの静的メソッドを呼び出すかを呼び出して、<xref:System.Windows.FrameworkElement.GetBindingExpression%2A>メソッドをデータにバインドされた<xref:System.Windows.FrameworkElement>または<xref:System.Windows.FrameworkContentElement>オブジェクト。  
  
   
  
## Examples  
 次の例の実装を示しています、<xref:System.Windows.Controls.Primitives.ButtonBase.Click>イベント ハンドラーを使用する、<xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A>を取得するメソッド、<xref:System.Windows.Data.BindingExpression>しを呼び出して、<xref:System.Windows.Data.BindingExpression.DataItem%2A>バインド ソース オブジェクトにアクセスするプロパティです。  
  
 <xref:System.Windows.Controls.TextBlock> `SavingsText`バインディング ターゲット オブジェクトと<xref:System.Windows.Controls.TextBlock.Text%2A>バインディング ターゲット プロパティです。  
  
 [!code-csharp[DirectionalBinding#OnRentRaise](~/samples/snippets/csharp/VS_Snippets_Wpf/DirectionalBinding/CSharp/Page1.xaml.cs#onrentraise)]
 [!code-vb[DirectionalBinding#OnRentRaise](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DirectionalBinding/VisualBasic/DirectionalBinding.vb#onrentraise)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="target" /> パラメーターと <paramref name="dp" /> パラメーターを <see langword="null" /> にすることはできません。</exception>
        <altmember cref="M:System.Windows.Data.BindingOperations.GetMultiBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetPriorityBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingExpressionBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="GetBindingExpressionBase">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.BindingExpressionBase GetBindingExpressionBase (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Data.BindingExpressionBase GetBindingExpressionBase(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.GetBindingExpressionBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBindingExpressionBase (target As DependencyObject, dp As DependencyProperty) As BindingExpressionBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Data::BindingExpressionBase ^ GetBindingExpressionBase(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="static member GetBindingExpressionBase : System.Windows.DependencyObject * System.Windows.DependencyProperty -&gt; System.Windows.Data.BindingExpressionBase" Usage="System.Windows.Data.BindingOperations.GetBindingExpressionBase (target, dp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingExpressionBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="target">
          <c>dp</c> が存在するオブジェクト。</param>
        <param name="dp">
          <see cref="T:System.Windows.Data.BindingExpressionBase" /> オブジェクトの取得元となるバインディング ターゲット プロパティ。</param>
        <summary>指定したプロパティに設定されている <see cref="T:System.Windows.Data.BindingExpressionBase" /> オブジェクトを取得します。</summary>
        <returns>指定したプロパティに設定された <see cref="T:System.Windows.Data.BindingExpressionBase" /> オブジェクト。バインディング オブジェクトが設定されていない場合は <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Data.BindingExpressionBase>クラスは、共通の基本クラス、 <xref:System.Windows.Data.BindingExpression>、 <xref:System.Windows.Data.PriorityBindingExpression>、および<xref:System.Windows.Data.MultiBindingExpression>クラスです。 使用することができます、 <xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A>、 <xref:System.Windows.Data.BindingOperations.GetPriorityBindingExpression%2A>、および<xref:System.Windows.Data.BindingOperations.GetMultiBindingExpression%2A>メソッドの場合は事前にわかっているバインディングの種類が、プロパティに設定します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="target" /> パラメーターと <paramref name="dp" /> パラメーターに null を指定することはできません。</exception>
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="GetMultiBinding">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.MultiBinding GetMultiBinding (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Data.MultiBinding GetMultiBinding(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.GetMultiBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMultiBinding (target As DependencyObject, dp As DependencyProperty) As MultiBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Data::MultiBinding ^ GetMultiBinding(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="static member GetMultiBinding : System.Windows.DependencyObject * System.Windows.DependencyProperty -&gt; System.Windows.Data.MultiBinding" Usage="System.Windows.Data.BindingOperations.GetMultiBinding (target, dp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.MultiBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="target">
          <c>dp</c> が存在するオブジェクト。</param>
        <param name="dp">バインディングの取得元となるバインディング ターゲット プロパティ。</param>
        <summary>指定したプロパティに設定されている <see cref="T:System.Windows.Data.MultiBinding" /> オブジェクトを取得します。</summary>
        <returns>指定したプロパティに設定された <see cref="T:System.Windows.Data.MultiBinding" /> オブジェクト。<see cref="T:System.Windows.Data.MultiBinding" /> オブジェクトが設定されていない場合は <see langword="null" />。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="target" /> パラメーターと <paramref name="dp" /> パラメーターに null を指定することはできません。</exception>
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="GetMultiBindingExpression">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.MultiBindingExpression GetMultiBindingExpression (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Data.MultiBindingExpression GetMultiBindingExpression(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.GetMultiBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMultiBindingExpression (target As DependencyObject, dp As DependencyProperty) As MultiBindingExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Data::MultiBindingExpression ^ GetMultiBindingExpression(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="static member GetMultiBindingExpression : System.Windows.DependencyObject * System.Windows.DependencyProperty -&gt; System.Windows.Data.MultiBindingExpression" Usage="System.Windows.Data.BindingOperations.GetMultiBindingExpression (target, dp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.MultiBindingExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="target">
          <c>dp</c> が存在するバインディング ターゲット オブジェクト。</param>
        <param name="dp">
          <see cref="T:System.Windows.Data.MultiBindingExpression" /> オブジェクトの取得元となるバインディング ターゲット プロパティ。</param>
        <summary>指定されたオブジェクト上の指定されたバインディング ターゲット プロパティに関連付けられた <see cref="T:System.Windows.Data.MultiBindingExpression" /> オブジェクトを返します。</summary>
        <returns>指定したプロパティに関連付けられた <see cref="T:System.Windows.Data.MultiBindingExpression" /> オブジェクト。関連付けられたオブジェクトが存在しない場合は <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 指定したプロパティに関連付けられた <xref:System.Windows.Data.MultiBindingExpression> オブジェクト。関連付けられたオブジェクトが存在しない場合は `null`。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="target" /> パラメーターと <paramref name="dp" /> パラメーターを <see langword="null" /> にすることはできません。</exception>
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingExpressionBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetMultiBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="GetPriorityBinding">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.PriorityBinding GetPriorityBinding (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Data.PriorityBinding GetPriorityBinding(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.GetPriorityBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPriorityBinding (target As DependencyObject, dp As DependencyProperty) As PriorityBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Data::PriorityBinding ^ GetPriorityBinding(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="static member GetPriorityBinding : System.Windows.DependencyObject * System.Windows.DependencyProperty -&gt; System.Windows.Data.PriorityBinding" Usage="System.Windows.Data.BindingOperations.GetPriorityBinding (target, dp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.PriorityBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="target">
          <c>dp</c> が存在するオブジェクト。</param>
        <param name="dp">バインディングの取得元となるバインディング ターゲット プロパティ。</param>
        <summary>指定したプロパティに設定されている <see cref="T:System.Windows.Data.PriorityBinding" /> オブジェクトを取得します。</summary>
        <returns>指定したプロパティに設定された <see cref="T:System.Windows.Data.PriorityBinding" /> オブジェクト。<see cref="T:System.Windows.Data.PriorityBinding" /> オブジェクトが設定されていない場合は <see langword="null" />。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="target" /> パラメーターと <paramref name="dp" /> パラメーターに null を指定することはできません。</exception>
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="GetPriorityBindingExpression">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.PriorityBindingExpression GetPriorityBindingExpression (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Data.PriorityBindingExpression GetPriorityBindingExpression(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.GetPriorityBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPriorityBindingExpression (target As DependencyObject, dp As DependencyProperty) As PriorityBindingExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Data::PriorityBindingExpression ^ GetPriorityBindingExpression(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="static member GetPriorityBindingExpression : System.Windows.DependencyObject * System.Windows.DependencyProperty -&gt; System.Windows.Data.PriorityBindingExpression" Usage="System.Windows.Data.BindingOperations.GetPriorityBindingExpression (target, dp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.PriorityBindingExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="target">
          <c>dp</c> が存在するバインディング ターゲット オブジェクト。</param>
        <param name="dp">
          <see cref="T:System.Windows.Data.PriorityBindingExpression" /> オブジェクトの取得元となるバインディング ターゲット プロパティ。</param>
        <summary>指定されたオブジェクト上の指定されたバインディング ターゲット プロパティに関連付けられた <see cref="T:System.Windows.Data.PriorityBindingExpression" /> オブジェクトを返します。</summary>
        <returns>指定したプロパティに関連付けられた <see cref="T:System.Windows.Data.PriorityBindingExpression" /> オブジェクト。関連付けられたオブジェクトが存在しない場合は <see langword="null" />。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="target" /> パラメーターと <paramref name="dp" /> パラメーターを <see langword="null" /> にすることはできません。</exception>
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingExpressionBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetPriorityBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="GetSourceUpdatingBindingGroups">
      <MemberSignature Language="C#" Value="public static System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Data.BindingGroup&gt; GetSourceUpdatingBindingGroups (System.Windows.DependencyObject root);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Windows.Data.BindingGroup&gt; GetSourceUpdatingBindingGroups(class System.Windows.DependencyObject root) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.GetSourceUpdatingBindingGroups(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSourceUpdatingBindingGroups (root As DependencyObject) As ReadOnlyCollection(Of BindingGroup)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Windows::Data::BindingGroup ^&gt; ^ GetSourceUpdatingBindingGroups(System::Windows::DependencyObject ^ root);" />
      <MemberSignature Language="F#" Value="static member GetSourceUpdatingBindingGroups : System.Windows.DependencyObject -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Data.BindingGroup&gt;" Usage="System.Windows.Data.BindingOperations.GetSourceUpdatingBindingGroups root" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Data.BindingGroup&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="root" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="root">バインディング グループを取得するためのルート <see cref="T:System.Windows.UIElement" />。  このメソッドは、この要素または子孫要素に関連付けられた <see cref="T:System.Windows.Data.BindingGroup" /> のオブジェクトを戻します。</param>
        <summary>無効な値がある、またはターゲット値がソースを更新していない <see cref="T:System.Windows.Data.BindingGroup" /> オブジェクトをすべて取得します。</summary>
        <returns>指定された要素に関連付けられ、無効な値を持つかターゲット値がソースを更新していない <see cref="T:System.Windows.Data.BindingGroup" /> オブジェクトのコレクション。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合`root`は`null`、<xref:System.Windows.Data.BindingOperations.GetSourceUpdatingBindingGroups%2A>すべてを返します<xref:System.Windows.Data.BindingGroup>が無効か、更新されていないオブジェクトです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSourceUpdatingBindings">
      <MemberSignature Language="C#" Value="public static System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Data.BindingExpressionBase&gt; GetSourceUpdatingBindings (System.Windows.DependencyObject root);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Windows.Data.BindingExpressionBase&gt; GetSourceUpdatingBindings(class System.Windows.DependencyObject root) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.GetSourceUpdatingBindings(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSourceUpdatingBindings (root As DependencyObject) As ReadOnlyCollection(Of BindingExpressionBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Windows::Data::BindingExpressionBase ^&gt; ^ GetSourceUpdatingBindings(System::Windows::DependencyObject ^ root);" />
      <MemberSignature Language="F#" Value="static member GetSourceUpdatingBindings : System.Windows.DependencyObject -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Data.BindingExpressionBase&gt;" Usage="System.Windows.Data.BindingOperations.GetSourceUpdatingBindings root" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Data.BindingExpressionBase&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="root" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="root">バインディング グループを取得するためのルート <see cref="T:System.Windows.UIElement" />。  このメソッドは、この要素または子孫要素に関連付けられた <see cref="T:System.Windows.Data.BindingExpressionBase" /> のオブジェクトを戻します。</param>
        <summary>無効な値がある、またはターゲット値がソースを更新していない <see cref="T:System.Windows.Data.BindingExpressionBase" /> オブジェクトをすべて取得します。</summary>
        <returns>指定された要素に関連付けられ、無効な値を持つかターゲット値がソースを更新していない <see cref="T:System.Windows.Data.BindingExpressionBase" /> オブジェクトのコレクション。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合`root`は`null`、<xref:System.Windows.Data.BindingOperations.GetSourceUpdatingBindings%2A>すべてを返します<xref:System.Windows.Data.BindingExpressionBase>が無効か、更新されていないオブジェクトです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDataBound">
      <MemberSignature Language="C#" Value="public static bool IsDataBound (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDataBound(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.IsDataBound(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDataBound (target As DependencyObject, dp As DependencyProperty) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDataBound(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="static member IsDataBound : System.Windows.DependencyObject * System.Windows.DependencyProperty -&gt; bool" Usage="System.Windows.Data.BindingOperations.IsDataBound (target, dp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="target">
          <c>dp</c> が存在するオブジェクト。</param>
        <param name="dp">照合する対象の依存関係プロパティ。</param>
        <summary>指定したプロパティが現在データ バインドされているかどうかを示す値を返します。</summary>
        <returns>指定したプロパティがデータ バインドされている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="target" /> が <see langword="null" /> の場合。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetBinding">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.BindingExpressionBase SetBinding (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp, System.Windows.Data.BindingBase binding);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Data.BindingExpressionBase SetBinding(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp, class System.Windows.Data.BindingBase binding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.SetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.Data.BindingBase)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SetBinding (target As DependencyObject, dp As DependencyProperty, binding As BindingBase) As BindingExpressionBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Data::BindingExpressionBase ^ SetBinding(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp, System::Windows::Data::BindingBase ^ binding);" />
      <MemberSignature Language="F#" Value="static member SetBinding : System.Windows.DependencyObject * System.Windows.DependencyProperty * System.Windows.Data.BindingBase -&gt; System.Windows.Data.BindingExpressionBase" Usage="System.Windows.Data.BindingOperations.SetBinding (target, dp, binding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingExpressionBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="binding" Type="System.Windows.Data.BindingBase" />
      </Parameters>
      <Docs>
        <param name="target">バインディングのバインディング ターゲット。</param>
        <param name="dp">バインディングのターゲット プロパティ。</param>
        <param name="binding">バインディングを記述する <see cref="T:System.Windows.Data.BindingBase" /> オブジェクト。</param>
        <summary>
          <see cref="T:System.Windows.Data.BindingExpressionBase" /> の新しいインスタンスを作成し、指定したバインディング ターゲット プロパティと関連付けます。</summary>
        <returns>指定したプロパティに対して作成され関連付けられた <see cref="T:System.Windows.Data.BindingExpressionBase" /> のインスタンス。 <see cref="T:System.Windows.Data.BindingExpressionBase" /> クラスは、<see cref="T:System.Windows.Data.BindingExpression" />、<see cref="T:System.Windows.Data.MultiBindingExpression" />、および <see cref="T:System.Windows.Data.PriorityBindingExpression" /> の基本クラスです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、の新しいインスタンスを作成、<xref:System.Windows.Data.BindingExpressionBase>し、指定したオブジェクトの指定された依存関係プロパティを持つインスタンスを関連付けます。 このメソッドは任意にバインディングをアタッチする方法は、<xref:System.Windows.DependencyObject>独自 SetBinding メソッドを公開する可能性がありますされません。  
  
   
  
## Examples  
 次の例では、このメソッドを使用してバインディングを設定する方法を示します。 この例では`myNewBindDef`は、<xref:System.Windows.Data.Binding>バインディングを記述するオブジェクト。 バインディング ターゲット`myDateText`のインスタンス、<xref:System.Windows.Controls.TextBlock>クラスです。  
  
 [!code-csharp[BindConversion#BOSetBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/BindConversion/CSharp/Window1.xaml.cs#bosetbinding)]
 [!code-vb[BindConversion#BOSetBinding](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindConversion/visualbasic/window1.xaml.vb#bosetbinding)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="binding" /> パラメーターとして <see langword="null" /> を使用することはできません。</exception>
      </Docs>
    </Member>
  </Members>
</Type>