<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="BindingBase.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac56871bcc8808192513fe5930b08bd4db0522bbb17.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6871bcc8808192513fe5930b08bd4db0522bbb17</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Data.BindingBase">
          <source>Defines the common characteristics of the <ph id="ph1">&lt;see cref="T:System.Windows.Data.Binding" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Windows.Data.PriorityBinding" /&gt;</ph>, and <ph id="ph3">&lt;see cref="T:System.Windows.Data.MultiBinding" /&gt;</ph> classes.</source>
          
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingBase">
          <source>Because the <ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.ProvideValue%2A?displayProperty=nameWithType&gt;</ph> method is sealed, a custom binding class that derives from <ph id="ph2">&lt;xref:System.Windows.Data.BindingBase&gt;</ph> will not function correctly as a <ph id="ph3">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph> markup extension.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.ProvideValue%2A?displayProperty=nameWithType&gt;</ph>メソッドがシールされている、カスタム バインディングから派生するクラス<ph id="ph2">&lt;xref:System.Windows.Data.BindingBase&gt;</ph>として正しく機能しません、<ph id="ph3">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph>マークアップ拡張機能です。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="P:System.Windows.Data.BindingBase.BindingGroupName">
          <source>Gets or sets the name of the <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingGroup" /&gt;</ph> to which this binding belongs.</source>
          
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.BindingGroupName">
          <source>The name of the <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingGroup" /&gt;</ph> to which this binding belongs.</source>
          <target state="translated">名前、<ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingGroup" /&gt;</ph>このバインディングが属しています。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.BindingGroupName">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.BindingGroupName%2A&gt;</ph> is not set, the binding belongs to a <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> only if the binding's source and the <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph> of the parent element that has the <ph id="ph4">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> are the same object.</source>
          <target state="translated">場合<ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.BindingGroupName%2A&gt;</ph>が、バインディングが属する、設定されていない、<ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph>場合にのみ、バインディングのソースと<ph id="ph3">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph>を持つ親要素の<ph id="ph4">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph>同じオブジェクトです。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.BindingGroupName">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.BindingGroupName%2A&gt;</ph> is set to a value, the binding belongs to a <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> if the following conditions are true:</source>
          <target state="translated">場合<ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.BindingGroupName%2A&gt;</ph>設定されているバインディングが属するに値を<ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph>次の条件に該当する場合。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.BindingGroupName">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup.Name%2A&gt;</ph> of the <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Data.BindingBase.BindingGroupName%2A&gt;</ph> are equal.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup.Name%2A&gt;</ph>の<ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph>と<ph id="ph3">&lt;xref:System.Windows.Data.BindingBase.BindingGroupName%2A&gt;</ph>が等しい。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.BindingGroupName">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> belongs to a parent element of the binding's target element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph>バインディングのターゲット要素の親要素に所属します。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.BindingGroupName">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.BindingGroupName%2A&gt;</ph> is set to <ph id="ph2">`null`</ph>, the binding is never a part of a <ph id="ph3">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph>.</source>
          <target state="translated">場合<ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.BindingGroupName%2A&gt;</ph>に設定されている<ph id="ph2">`null`</ph>、バインディングがの一部であることはありません、<ph id="ph3">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.BindingGroupName">
          <source>You can include bindings that have a source that is different from the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph> of the parent element that has the <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> by setting <ph id="ph3">&lt;xref:System.Windows.Data.BindingGroup.Name%2A&gt;</ph> of the <ph id="ph4">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> and the <ph id="ph5">&lt;xref:System.Windows.Data.BindingBase.BindingGroupName%2A&gt;</ph> property of a binding to the same value.</source>
          <target state="translated">異なるソースのバインドを含めることができます、<ph id="ph1">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph>の親を持つ要素を<ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph>を設定して<ph id="ph3">&lt;xref:System.Windows.Data.BindingGroup.Name%2A&gt;</ph>の<ph id="ph4">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph>と<ph id="ph5">&lt;xref:System.Windows.Data.BindingBase.BindingGroupName%2A&gt;</ph>同じ値にバインディングのプロパティです。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.BindingGroupName">
          <source>You can exclude bindings that have the same source as <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph> of the parent element that has the <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> by setting <ph id="ph3">&lt;xref:System.Windows.Data.BindingGroup.Name%2A&gt;</ph> of the <ph id="ph4">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> and the <ph id="ph5">&lt;xref:System.Windows.Data.BindingBase.BindingGroupName%2A&gt;</ph> property of a binding to different values.</source>
          <target state="translated">同じソースのバインドを除外する<ph id="ph1">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph>を持つ親要素の<ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph>を設定して<ph id="ph3">&lt;xref:System.Windows.Data.BindingGroup.Name%2A&gt;</ph>の<ph id="ph4">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph>と<ph id="ph5">&lt;xref:System.Windows.Data.BindingBase.BindingGroupName%2A&gt;</ph>ごとに異なる値のバインドのプロパティです。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.BindingGroupName">
          <source>The following examples are part of an application that checks whether the user has set the properties of two objects to equal values.</source>
          <target state="translated">次の例は、ユーザーが同じ値に 2 つのオブジェクトのプロパティに設定するかどうかを確認するアプリケーションの一部です。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.BindingGroupName">
          <source>The first example creates two <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> controls, each of which is data bound to a different source: The binding of the first <ph id="ph2">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> is part of the <ph id="ph3">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> because the <ph id="ph4">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> inherits the <ph id="ph5">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph> and <ph id="ph6">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> from its parent <ph id="ph7">&lt;xref:System.Windows.Controls.StackPanel&gt;</ph></source>
          <target state="translated">最初の例では、2 つ作成されます<ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>コントロール、それぞれが別のソースにバインドされたデータ: 最初のバインド<ph id="ph2">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>の一部である、<ph id="ph3">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph>ため、<ph id="ph4">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>継承、<ph id="ph5">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph>と<ph id="ph6">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph>からその親 <ph id="ph7">&lt;xref:System.Windows.Controls.StackPanel&gt;</ph></target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.BindingGroupName">
          <source>The binding on the second <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> is part of the <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> because the <ph id="ph3">&lt;xref:System.Windows.Data.BindingGroup.Name%2A&gt;</ph> of the <ph id="ph4">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> and the <ph id="ph5">&lt;xref:System.Windows.Data.BindingBase.BindingGroupName%2A&gt;</ph> of the <ph id="ph6">&lt;xref:System.Windows.Data.Binding&gt;</ph> are both set to <ph id="ph7">`bindingGroup`</ph>.</source>
          <target state="translated">2 番目のバインド<ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>の一部である、<ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph>ため、<ph id="ph3">&lt;xref:System.Windows.Data.BindingGroup.Name%2A&gt;</ph>の<ph id="ph4">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph>と<ph id="ph5">&lt;xref:System.Windows.Data.BindingBase.BindingGroupName%2A&gt;</ph>の<ph id="ph6">&lt;xref:System.Windows.Data.Binding&gt;</ph>に設定されて<ph id="ph7">`bindingGroup`</ph>です。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.BindingGroupName">
          <source>The following example shows the <ph id="ph1">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph> that the previous example uses.</source>
          <target state="translated">次の例は、<ph id="ph1">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph>前の例を使用します。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.BindingGroupName">
          <source>In the <ph id="ph1">&lt;xref:System.Windows.Controls.ValidationRule.Validate%2A&gt;</ph> method, the example gets each source object from the <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> and checks whether the properties of the objects are equal.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.ValidationRule.Validate%2A&gt;</ph>メソッドから、ソース オブジェクトを取得する例では、<ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph>し、オブジェクトのプロパティが等しいかどうかを確認します。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="P:System.Windows.Data.BindingBase.Delay">
          <source>Gets or sets the amount of time, in milliseconds, to wait before updating the binding source after the value on the target changes.</source>
          
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.Delay">
          <source>The amount of time, in milliseconds, to wait before updating the binding source.</source>
          <target state="translated">バインディング ソースを更新する前に待機するミリ秒単位の時間数。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.Delay">
          <source>When you use a binding to update the binding source whenever the value of the property changes on the target, you set the <ph id="ph1">&lt;xref:System.Windows.Data.Binding.Mode%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.Windows.Data.BindingMode.TwoWay&gt;</ph> and the <ph id="ph3">&lt;xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A&gt;</ph> to <ph id="ph4">&lt;xref:System.Windows.Data.UpdateSourceTrigger.PropertyChanged&gt;</ph>.</source>
          <target state="translated">設定するターゲットのプロパティの値が変更されるたびに、バインディング ソースを更新するバインドを使用するときに、<ph id="ph1">&lt;xref:System.Windows.Data.Binding.Mode%2A&gt;</ph>プロパティを<ph id="ph2">&lt;xref:System.Windows.Data.BindingMode.TwoWay&gt;</ph>と<ph id="ph3">&lt;xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A&gt;</ph>に<ph id="ph4">&lt;xref:System.Windows.Data.UpdateSourceTrigger.PropertyChanged&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.Delay">
          <source>In this situation, you can use the <ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.Delay%2A&gt;</ph> property to specify whether there should be a time delay between when the target is changed and when the source is updated.</source>
          <target state="translated">このような状況で使用できます、<ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.Delay%2A&gt;</ph>プロパティ ターゲットが変更されたときと、ソースが更新されたときの間の遅延時間が存在するかどうかを指定します。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.Delay">
          <source>This is useful when you want to enable users to change a property on a source object but you don't want each change to be immediately committed to the source.</source>
          <target state="translated">これは、機能は、ソース オブジェクトのプロパティを変更するユーザーを有効にするがソースにすぐにコミットするには、各変更したくない場合に便利です。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.Delay">
          <source>For example, suppose that you have a text box that is data two-way bound to a property of a data object.</source>
          <target state="translated">たとえば、双方向にデータ バインドされたデータ オブジェクトのプロパティをテキスト ボックスがあるとします。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.Delay">
          <source>When the user changes the value in the text box, the source gets updated.</source>
          <target state="translated">ユーザーには、テキスト ボックスに値が変更された、ときに、ソースの更新を取得します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.Delay">
          <source>To enable this scenario, you set the <ph id="ph1">&lt;xref:System.Windows.Data.Binding.Mode%2A&gt;</ph> property on the <ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph> to <ph id="ph3">&lt;xref:System.Windows.Data.BindingMode.TwoWay&gt;</ph> and the <ph id="ph4">&lt;xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A&gt;</ph> to <ph id="ph5">&lt;xref:System.Windows.Data.UpdateSourceTrigger.PropertyChanged&gt;</ph>.</source>
          <target state="translated">このシナリオを有効にするに設定する、<ph id="ph1">&lt;xref:System.Windows.Data.Binding.Mode%2A&gt;</ph>プロパティを<ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph>に<ph id="ph3">&lt;xref:System.Windows.Data.BindingMode.TwoWay&gt;</ph>と<ph id="ph4">&lt;xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A&gt;</ph>に<ph id="ph5">&lt;xref:System.Windows.Data.UpdateSourceTrigger.PropertyChanged&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.Delay">
          <source>To avoid updating the source object with every keystroke, set the <ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.Delay%2A&gt;</ph> property to a reasonable value to cause the binding to update only after that amount of time has elapsed since the user stopped typing.</source>
          <target state="translated">すべてのキーストロークで、ソース オブジェクトを更新しないように、設定、<ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.Delay%2A&gt;</ph>プロパティ バインディングを入力するユーザーによって中止されたために、期間が経過した後に更新する適切な値にします。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="P:System.Windows.Data.BindingBase.FallbackValue">
          <source>Gets or sets the value to use when the binding is unable to return a value.</source>
          
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.FallbackValue">
          <source>The default value is <ph id="ph1">&lt;see cref="F:System.Windows.DependencyProperty.UnsetValue" /&gt;</ph>.</source>
          <target state="translated">既定値は <ph id="ph1">&lt;see cref="F:System.Windows.DependencyProperty.UnsetValue" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.FallbackValue">
          <source>A binding returns a value successfully if:</source>
          <target state="translated">バインディング場合、正常に値を返します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.FallbackValue">
          <source>The path to the binding source resolves successfully.</source>
          <target state="translated">バインディング ソースへのパスを正常に解決します。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.FallbackValue">
          <source>The value converter, if any, is able to convert the resulting value.</source>
          <target state="translated">値コンバーター、存在する場合は、結果の値を変換することです。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.FallbackValue">
          <source>The resulting value is valid for the binding target (target) property.</source>
          <target state="translated">結果の値は、バインディング ターゲット (ターゲット) プロパティに対して無効です。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.FallbackValue">
          <source>If 1 and 2 return <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=nameWithType&gt;</ph>, the target property is set to the value of the <ph id="ph2">&lt;xref:System.Windows.Data.BindingBase.FallbackValue%2A&gt;</ph>, if one is available.</source>
          <target state="translated">1 と 2 を返す場合<ph id="ph1">&lt;xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=nameWithType&gt;</ph>、ターゲット プロパティの値に、<ph id="ph2">&lt;xref:System.Windows.Data.BindingBase.FallbackValue%2A&gt;</ph>が利用可能な場合です。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.FallbackValue">
          <source>If there is no <ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.FallbackValue%2A&gt;</ph>, the default value of the target property is used.</source>
          <target state="translated">ある場合ありません<ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.FallbackValue%2A&gt;</ph>、ターゲット プロパティの既定値が使用されます。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.FallbackValue">
          <source>The value <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=nameWithType&gt;</ph> is not considered a successful return value.</source>
          <target state="translated">値<ph id="ph1">&lt;xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=nameWithType&gt;</ph>成功の戻り値とは見なされません。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.FallbackValue">
          <source>XAML Text Usage</source>
          <target state="translated">XAML テキストの使用方法</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.FallbackValue">
          <source><bpt id="p1">**</bpt>- or –<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>- または -<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.FallbackValue">
          <source>XAML Values</source>
          <target state="translated">XAML 値</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.FallbackValue">
          <source><bpt id="p1">*</bpt>fallbackValue<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>fallbackValue<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.FallbackValue">
          <source>An attribute or object element value of the same type as the target property.</source>
          <target state="translated">属性またはオブジェクト要素の値の対象となるプロパティと同じ型。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.FallbackValue">
          <source>See that type's documentation for XAML usage information.</source>
          <target state="translated">XAML の使用方法については、その型のドキュメントを参照してください。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.FallbackValue">
          <source>That type may or may not support attribute syntax for its values, or may or may not support object element syntax (which requires a default constructor on that type).</source>
          <target state="translated">その種類可能性があります、その値に対して属性の構文をサポートしない可能性がありますまたは可能性があります、またはオブジェクトの要素の構文を必要とする型に既定のコンス トラクター) をサポートしていません。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.FallbackValue">
          <source>The target property type will therefore influence which syntax you use for the value of the <ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.FallbackValue%2A&gt;</ph> property.</source>
          <target state="translated">ターゲット プロパティの型の値を使用する構文の影響を与えるため、<ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.FallbackValue%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)">
          <source>The object that can provide services for the markup extension.</source>
          
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)">
          <source>May be <ph id="ph1">&lt;see langword="null" /&gt;</ph>;</source>
          
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)">
          <source>Returns an object that should be set on the property where this binding and extension are applied.</source>
          
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)">
          <source>The value to set on the binding target property.</source>
          
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)">
          <source>This implementation provides the base syntax support for binding through <ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph> for all provided practical derived classes (<ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Data.PriorityBinding&gt;</ph>, and <ph id="ph4">&lt;xref:System.Windows.Data.MultiBinding&gt;</ph>).</source>
          <target state="translated">この実装を提供をバインドの基本構文サポート<ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph>実用的な派生クラスが提供されるすべての (<ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph>、 <ph id="ph3">&lt;xref:System.Windows.Data.PriorityBinding&gt;</ph>、および<ph id="ph4">&lt;xref:System.Windows.Data.MultiBinding&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Data.BindingBase&gt;</ph> class implementation of this method is expected to return an expression object that is the result of a binding.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Data.BindingBase&gt;</ph>このメソッドのクラスの実装がバインディングの結果である式オブジェクトを取得するが必要です。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)">
          <source>Binding a property works by targeting a given <ph id="ph1">&lt;xref:System.Windows.DependencyProperty&gt;</ph> on a given <ph id="ph2">&lt;xref:System.Windows.DependencyObject&gt;</ph>.</source>
          <target state="translated">プロパティのバインドでは、対象とする、指定された<ph id="ph1">&lt;xref:System.Windows.DependencyProperty&gt;</ph>で、指定された<ph id="ph2">&lt;xref:System.Windows.DependencyObject&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)">
          <source>These two pieces of information are transmitted by querying for an <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph> implementation on the <ph id="ph2">`serviceProvider`</ph>, which the <ph id="ph3">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> <ph id="ph4">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> reader makes available during parsing of a binding.</source>
          <target state="translated">クエリを実行してこれらの 2 つの情報は送信、<ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph>上の実装、 <ph id="ph2">`serviceProvider`</ph>、どの、 <ph id="ph3">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> <ph id="ph4">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>リーダーは、バインディングの解析中に使用できるようにします。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)">
          <source>This base class implementation is responsible for checking for a valid <ph id="ph1">&lt;xref:System.Windows.DependencyProperty&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.DependencyObject&gt;</ph>.</source>
          <target state="translated">この基本クラス実装は、有効なためチェックを<ph id="ph1">&lt;xref:System.Windows.DependencyProperty&gt;</ph>と<ph id="ph2">&lt;xref:System.Windows.DependencyObject&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)">
          <source>If these are found, the actual implementation of returning a binding expression falls to various derived classes, as implemented by having the base class call an internal abstract method.</source>
          <target state="translated">これらが見つからない場合は、バインド式を返すの実際の実装は、基本クラスの呼び出し内部抽象メソッドを持つによって実装されるさまざまな派生クラスになります。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)">
          <source>Otherwise, the extension returns the binding object itself.</source>
          <target state="translated">それ以外の場合、拡張機能には、バインディング オブジェクト自体が返されます。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)">
          <source>Returning the binding itself results in a type mismatch error, but this should not occur under normal circumstances.</source>
          <target state="translated">型の不一致エラーの結果、バインディング自体を返すことが、これは通常の状況で発生しません。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)">
          <source>Because the syntax for binding through <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> as implemented in this method relies on implementing an internal override, and because <ph id="ph2">&lt;xref:System.Windows.Data.BindingBase.ProvideValue%2A?displayProperty=nameWithType&gt;</ph> itself is sealed, a custom binding class that derives from <ph id="ph3">&lt;xref:System.Windows.Data.BindingBase&gt;</ph> will not function correctly as a <ph id="ph4">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> markup extension.</source>
          <target state="translated">を通じてバインドの構文<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>このメソッドは、内部のオーバーライドを実装に実装されているため、<ph id="ph2">&lt;xref:System.Windows.Data.BindingBase.ProvideValue%2A?displayProperty=nameWithType&gt;</ph>自体がシールされている、カスタム バインディングから派生するクラス<ph id="ph3">&lt;xref:System.Windows.Data.BindingBase&gt;</ph>として正しく機能しません、<ph id="ph4">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>マークアップ拡張機能です。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingBase.ShouldSerializeFallbackValue">
          <source>Returns a value that indicates whether serialization processes should serialize the effective value of the <ph id="ph1">&lt;see cref="P:System.Windows.Data.BindingBase.FallbackValue" /&gt;</ph> property on instances of this class.</source>
          
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingBase.ShouldSerializeFallbackValue">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="P:System.Windows.Data.BindingBase.FallbackValue" /&gt;</ph> property value should be serialized; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingBase.ShouldSerializeTargetNullValue">
          <source>Returns a value that indicates whether the <ph id="ph1">&lt;see cref="P:System.Windows.Data.BindingBase.TargetNullValue" /&gt;</ph> property should be serialized.</source>
          
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingBase.ShouldSerializeTargetNullValue">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="P:System.Windows.Data.BindingBase.TargetNullValue" /&gt;</ph> property should be serialized; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="P:System.Windows.Data.BindingBase.StringFormat">
          <source>Gets or sets a string that specifies how to format the binding if it displays the bound value as a string.</source>
          
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.StringFormat">
          <source>A string that specifies how to format the binding if it displays the bound value as a string.</source>
          <target state="translated">バインドされた値を文字列として表示される場合、バインディングの書式を設定する方法を指定する文字列。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.StringFormat">
          <source><ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.StringFormat%2A&gt;</ph> can be a predefined, composite, or custom string format.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.StringFormat%2A&gt;</ph> 定義済み、複合、またはカスタムの文字列形式にすることができます。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.StringFormat">
          <source>For more information about string formats, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">文字列形式の詳細については、次を参照してください。<bpt id="p1">[</bpt>型の書式設定<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.StringFormat">
          <source>If you set the <ph id="ph1">&lt;xref:System.Windows.Data.Binding.Converter%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Data.BindingBase.StringFormat%2A&gt;</ph> properties, the converter is applied to the data value first, and then the <ph id="ph3">&lt;xref:System.Windows.Data.BindingBase.StringFormat%2A&gt;</ph> is applied.</source>
          <target state="translated">設定した場合、<ph id="ph1">&lt;xref:System.Windows.Data.Binding.Converter%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Windows.Data.BindingBase.StringFormat%2A&gt;</ph>コンバーターのプロパティが最初のデータ値に適用するし、<ph id="ph3">&lt;xref:System.Windows.Data.BindingBase.StringFormat%2A&gt;</ph>を適用します。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.StringFormat">
          <source>When you set the <ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.StringFormat%2A&gt;</ph> on a <ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph> to a composite string format, you can specify only one parameter.</source>
          <target state="translated">設定すると、<ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.StringFormat%2A&gt;</ph>上、<ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph>複合文字列の形式では、1 つだけのパラメーターを指定できます。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.StringFormat">
          <source>When you use a <ph id="ph1">&lt;xref:System.Windows.Data.MultiBinding&gt;</ph>, the <ph id="ph2">&lt;xref:System.Windows.Data.BindingBase.StringFormat%2A&gt;</ph> property applies only when it is set on the <ph id="ph3">&lt;xref:System.Windows.Data.MultiBinding&gt;</ph>.</source>
          <target state="translated">使用すると、 <ph id="ph1">&lt;xref:System.Windows.Data.MultiBinding&gt;</ph>、<ph id="ph2">&lt;xref:System.Windows.Data.BindingBase.StringFormat%2A&gt;</ph>のみに設定されている場合にプロパティが適用されます、<ph id="ph3">&lt;xref:System.Windows.Data.MultiBinding&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.StringFormat">
          <source>The value of <ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.StringFormat%2A&gt;</ph> that is set on any child <ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph> objects is ignored.</source>
          <target state="translated">値<ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.StringFormat%2A&gt;</ph>任意の子に設定されている<ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph>オブジェクトは無視されます。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.StringFormat">
          <source>The number of parameters in a composite string format cannot exceed the number of child <ph id="ph1">&lt;xref:System.Windows.Data.Binding&gt;</ph> objects in the <ph id="ph2">&lt;xref:System.Windows.Data.MultiBinding&gt;</ph>.</source>
          <target state="translated">複合文字列の形式でパラメーターの数は、子の数を超えることはできません<ph id="ph1">&lt;xref:System.Windows.Data.Binding&gt;</ph>内のオブジェクト、<ph id="ph2">&lt;xref:System.Windows.Data.MultiBinding&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.StringFormat">
          <source>When you use a <ph id="ph1">&lt;xref:System.Windows.Data.PriorityBinding&gt;</ph>, you can set the <ph id="ph2">&lt;xref:System.Windows.Data.BindingBase.StringFormat%2A&gt;</ph> on the <ph id="ph3">&lt;xref:System.Windows.Data.PriorityBinding&gt;</ph>, on child binding objects, or both.</source>
          <target state="translated">使用する場合、 <ph id="ph1">&lt;xref:System.Windows.Data.PriorityBinding&gt;</ph>、設定することができます、<ph id="ph2">&lt;xref:System.Windows.Data.BindingBase.StringFormat%2A&gt;</ph>上、<ph id="ph3">&lt;xref:System.Windows.Data.PriorityBinding&gt;</ph>バインディングの子オブジェクト、またはその両方でします。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.StringFormat">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.StringFormat%2A&gt;</ph> is set on the child binding that is applied, that value is used.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.StringFormat%2A&gt;</ph>セットのバインドされている子で適用すると、値が使用されます。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.StringFormat">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.StringFormat%2A&gt;</ph> is not set on the child binding that is applied, the <ph id="ph2">&lt;xref:System.Windows.Data.BindingBase.StringFormat%2A&gt;</ph> of the <ph id="ph3">&lt;xref:System.Windows.Data.PriorityBinding&gt;</ph> is applied if it is set.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.StringFormat%2A&gt;</ph>適用すると、子のバインドでは設定されず、<ph id="ph2">&lt;xref:System.Windows.Data.BindingBase.StringFormat%2A&gt;</ph>の<ph id="ph3">&lt;xref:System.Windows.Data.PriorityBinding&gt;</ph>設定されている場合に適用します。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.StringFormat">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.StringFormat%2A&gt;</ph> property to convert <ph id="ph2">`Price`</ph>, which is a <ph id="ph3">&lt;xref:System.Double&gt;</ph>, to a string that represents a currency.</source>
          <target state="translated">次の例では、<ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.StringFormat%2A&gt;</ph>プロパティに変換する<ph id="ph2">`Price`</ph>、これは、<ph id="ph3">&lt;xref:System.Double&gt;</ph>通貨を表す文字列にします。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.StringFormat">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.StringFormat%2A&gt;</ph> property on a <ph id="ph2">&lt;xref:System.Windows.Data.MultiBinding&gt;</ph> to build a string that includes the <ph id="ph3">`Description`</ph> and <ph id="ph4">`Price`</ph> of each item in a <ph id="ph5">&lt;xref:System.Windows.Controls.ListBox&gt;</ph>.</source>
          <target state="translated">次の例では、<ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.StringFormat%2A&gt;</ph>プロパティを<ph id="ph2">&lt;xref:System.Windows.Data.MultiBinding&gt;</ph>を含む文字列を作成する、<ph id="ph3">`Description`</ph>と<ph id="ph4">`Price`</ph>内の各項目の<ph id="ph5">&lt;xref:System.Windows.Controls.ListBox&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="P:System.Windows.Data.BindingBase.TargetNullValue">
          <source>Gets or sets the value that is used in the target when the value of the source is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.TargetNullValue">
          <source>The value that is used in the target when the value of the source is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">ソースの値が、ターゲットで使用されている値<ph id="ph1">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.TargetNullValue">
          <source>XAML Text Usage</source>
          <target state="translated">XAML テキストの使用方法</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.TargetNullValue">
          <source><bpt id="p1">**</bpt>- or –<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>- または -<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.TargetNullValue">
          <source>XAML Values</source>
          <target state="translated">XAML 値</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.TargetNullValue">
          <source><bpt id="p1">*</bpt>nullValue<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>nullValue<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.TargetNullValue">
          <source>An attribute or object element value of the same type as the target property.</source>
          <target state="translated">属性またはオブジェクト要素の値の対象となるプロパティと同じ型。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.TargetNullValue">
          <source>See that type's documentation for XAML usage information.</source>
          <target state="translated">XAML の使用方法については、その型のドキュメントを参照してください。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.TargetNullValue">
          <source>That type may or may not support attribute syntax for its values, or may or may not support object element syntax (which requires a default constructor on that type).</source>
          <target state="translated">その種類可能性があります、その値に対して属性の構文をサポートしない可能性がありますまたは可能性があります、またはオブジェクトの要素の構文を必要とする型に既定のコンス トラクター) をサポートしていません。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.TargetNullValue">
          <source>The following example binds a <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> to a property of an object.</source>
          <target state="translated">次の例ではバインド、<ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>オブジェクトのプロパティにします。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.TargetNullValue">
          <source>If the property is <ph id="ph1">`null`</ph>, the <ph id="ph2">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> displays "please enter a string."</source>
          <target state="translated">プロパティが場合<ph id="ph1">`null`</ph>、<ph id="ph2">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>表示「を入力してください (string)」。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>