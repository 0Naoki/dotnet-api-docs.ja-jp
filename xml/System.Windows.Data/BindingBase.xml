<Type Name="BindingBase" FullName="System.Windows.Data.BindingBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6f4cba6380639a312e87fdfd851116d0cdfb7d7f" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69211125" /></Metadata><TypeSignature Language="C#" Value="public abstract class BindingBase : System.Windows.Markup.MarkupExtension" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract BindingBase extends System.Windows.Markup.MarkupExtension" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.BindingBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BindingBase&#xA;Inherits MarkupExtension" />
  <TypeSignature Language="C++ CLI" Value="public ref class BindingBase abstract : System::Windows::Markup::MarkupExtension" />
  <TypeSignature Language="F#" Value="type BindingBase = class&#xA;    inherit MarkupExtension" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Markup.MarkupExtension</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Modifiability=System.Windows.Modifiability.Unmodifiable, Readability=System.Windows.Readability.Unreadable)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.MarkupExtensionReturnType(typeof(System.Object))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><see cref="T:System.Windows.Data.Binding" />、<see cref="T:System.Windows.Data.PriorityBinding" />、および <see cref="T:System.Windows.Data.MultiBinding" /> の各クラスに共通する特性を定義します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メソッドはシールされているため、から<xref:System.Windows.Data.BindingBase>派生するカスタムバインドクラスは、 [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]マークアップ拡張機能として正しく機能しません。 <xref:System.Windows.Data.BindingBase.ProvideValue%2A?displayProperty=nameWithType>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BindingGroupName">
      <MemberSignature Language="C#" Value="public string BindingGroupName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BindingGroupName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingBase.BindingGroupName" />
      <MemberSignature Language="VB.NET" Value="Public Property BindingGroupName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BindingGroupName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BindingGroupName : string with get, set" Usage="System.Windows.Data.BindingBase.BindingGroupName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>そのバインディングが属している <see cref="T:System.Windows.Data.BindingGroup" /> の名前を取得または設定します。</summary>
        <value>そのバインディングが属している <see cref="T:System.Windows.Data.BindingGroup" /> の名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 が<xref:System.Windows.Data.BindingBase.BindingGroupName%2A>設定されていない場合、バインディング<xref:System.Windows.Data.BindingGroup>のソースおよび<xref:System.Windows.FrameworkElement.DataContext%2A>がある親要素<xref:System.Windows.Data.BindingGroup>のが同じオブジェクトである場合にのみ、バインディングはに属します。  
  
 が<xref:System.Windows.Data.BindingBase.BindingGroupName%2A>値に設定されている場合、次の<xref:System.Windows.Data.BindingGroup>条件に該当する場合、バインディングはに属します。  
  
-   と<xref:System.Windows.Data.BindingGroup> のが<xref:System.Windows.Data.BindingGroup.Name%2A>等価です <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> 。  
  
-   は<xref:System.Windows.Data.BindingGroup> 、バインディングの target 要素の親要素に属しています。  
  
 が<xref:System.Windows.Data.BindingBase.BindingGroupName%2A>に`null`設定されている場合、バインディングはの一部<xref:System.Windows.Data.BindingGroup>ではありません。  
  
 を<xref:System.Windows.FrameworkElement.DataContext%2A> <xref:System.Windows.Data.BindingGroup.Name%2A> <xref:System.Windows.Data.BindingGroup>持つ親要素のとは異なるソースを持つバインディングを含めることができます。これには、バインドのと<xref:System.Windows.Data.BindingBase.BindingGroupName%2A>のプロパティを同じ値に設定します。 <xref:System.Windows.Data.BindingGroup>  を<xref:System.Windows.FrameworkElement.DataContext%2A> <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> <xref:System.Windows.Data.BindingGroup> <xref:System.Windows.Data.BindingGroup.Name%2A>持つ親要素のと同じソースを持つバインディングを除外するには、バインディングのプロパティを別の値に設定します。 <xref:System.Windows.Data.BindingGroup>  
  
   
  
## Examples  
 次の例は、ユーザーが2つのオブジェクトのプロパティを等しい値に設定したかどうかを確認するアプリケーションの一部です。 最初の例では<xref:System.Windows.Controls.TextBox> 、次の2つのコントロールを作成し、それぞれが異なるソースにデータをバインドします。<xref:System.Windows.Controls.TextBox>は<xref:System.Windows.FrameworkElement.DataContext%2A> 、その<xref:System.Windows.Data.BindingGroup>親からと<xref:System.Windows.Data.BindingGroup>を継承するため、最初ののバインドはに含まれています。 <xref:System.Windows.Controls.TextBox><xref:System.Windows.Controls.StackPanel>  
  
 の<xref:System.Windows.Data.BindingGroup>とのは両方<xref:System.Windows.Controls.TextBox> <xref:System.Windows.Data.BindingGroup> <xref:System.Windows.Data.BindingGroup.Name%2A>とも<xref:System.Windows.Data.BindingBase.BindingGroupName%2A>に設定されているため、2番目ののバインディングはの一部です。<xref:System.Windows.Data.Binding> `bindingGroup`  
  
 [!code-xaml[BindingGroupSnippets#BindingGroupName](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#bindinggroupname)]  
[!code-xaml[BindingGroupSnippets#ValidationAdornerSite](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#validationadornersite)]  
  
 次の例は、 <xref:System.Windows.Controls.ValidationRule>前の例で使用しているを示しています。  メソッドでは、 <xref:System.Windows.Data.BindingGroup>から各ソースオブジェクトを取得し、オブジェクトのプロパティが等しいかどうかを確認します。 <xref:System.Windows.Controls.ValidationRule.Validate%2A>  
  
 [!code-csharp[BindingGroupSnippets#BindingGroupNameValidationRule](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml.cs#bindinggroupnamevalidationrule)]
 [!code-vb[BindingGroupSnippets#BindingGroupNameValidationRule](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window3.xaml.vb#bindinggroupnamevalidationrule)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delay">
      <MemberSignature Language="C#" Value="public int Delay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Delay" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingBase.Delay" />
      <MemberSignature Language="VB.NET" Value="Public Property Delay As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Delay { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Delay : int with get, set" Usage="System.Windows.Data.BindingBase.Delay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ターゲット上の値が変更された後でバインディング ソースを更新する前に待機する時間 (ミリ秒単位) を取得または設定します。</summary>
        <value>バインディング ソースが更新されるまで待機する、ミリ秒単位の時間。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 バインディングを使用して、ターゲットでプロパティの値が変更されるたびにバインディングソースを更新する場合は<xref:System.Windows.Data.Binding.Mode%2A> 、 <xref:System.Windows.Data.BindingMode.TwoWay>プロパティ<xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>をに、 <xref:System.Windows.Data.UpdateSourceTrigger.PropertyChanged>をに設定します。  このような状況では、 <xref:System.Windows.Data.BindingBase.Delay%2A>プロパティを使用して、ターゲットが変更されてからソースが更新されるまでの時間の遅延があるかどうかを指定できます。  これは、ユーザーがソースオブジェクトのプロパティを変更できるようにし、各変更をすぐにソースにコミットしないようにする場合に便利です。  たとえば、データオブジェクトのプロパティに双方向でバインドされたデータのテキストボックスがあるとします。  ユーザーがテキストボックスの値を変更すると、ソースが更新されます。  このシナリオを有効にするには<xref:System.Windows.Data.Binding.Mode%2A> 、の<xref:System.Windows.Data.Binding>プロパティを<xref:System.Windows.Data.BindingMode.TwoWay>に<xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> 、を<xref:System.Windows.Data.UpdateSourceTrigger.PropertyChanged>に設定します。  すべてのキーストロークを使用してソースオブジェクトを更新<xref:System.Windows.Data.BindingBase.Delay%2A>しないようにするには、プロパティを適切な値に設定します。これにより、ユーザーが入力を停止してから、その時間が経過した後にのみバインドが更新されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FallbackValue">
      <MemberSignature Language="C#" Value="public object FallbackValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object FallbackValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingBase.FallbackValue" />
      <MemberSignature Language="VB.NET" Value="Public Property FallbackValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ FallbackValue { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FallbackValue : obj with get, set" Usage="System.Windows.Data.BindingBase.FallbackValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>バインドが値を返すことができないときに使用する値を取得または設定します。</summary>
        <value>既定値は <see cref="F:System.Windows.DependencyProperty.UnsetValue" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 バインドは、次の場合に値を正常に返します。  
  
1.  バインディングソースへのパスが正常に解決されます。  
  
2.  値コンバーター (存在する場合) は、結果の値を変換できます。  
  
3.  結果の値は、バインディングターゲット (ターゲット) プロパティに対して有効です。  
  
 1と2がを<xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=nameWithType>返す場合、target プロパティはの値<xref:System.Windows.Data.BindingBase.FallbackValue%2A>に設定されます (使用可能な場合)。 がない<xref:System.Windows.Data.BindingBase.FallbackValue%2A>場合は、target プロパティの既定値が使用されます。  
  
 値<xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=nameWithType>は、正常な戻り値とは見なされません。  
  
<a name="xamlTextUsage_FallbackValue"></a>   
## <a name="xaml-text-usage"></a>XAML テキストの使用  
  
```  
<object FallbackValue="fallbackValue" />  
```  
  
 **もしくは**  
  
```  
<object>  
  <object.FallbackValue>  
    fallbackValue  
    </object.FallbackValue>  
</object>  
```  
  
<a name="xamlValues_FallbackValue"></a>   
## <a name="xaml-values"></a>XAML 値  
 *fallbackValue*  
 ターゲットプロパティと同じ型の属性またはオブジェクト要素の値。 XAML の使用情報については、その型のドキュメントを参照してください。 その型は、その値の属性構文をサポートしているか、またはサポートしていないか、またはオブジェクト要素構文 (その型のパラメーターなしのコンストラクターを必要とする) をサポートしていない可能性があります。 したがって、ターゲットプロパティの型は、 <xref:System.Windows.Data.BindingBase.FallbackValue%2A>プロパティの値に使用する構文に影響します。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Data.IValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" />
      </Docs>
    </Member>
    <Member MemberName="ProvideValue">
      <MemberSignature Language="C#" Value="public override sealed object ProvideValue (IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ProvideValue(class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Function ProvideValue (serviceProvider As IServiceProvider) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ProvideValue(IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="override this.ProvideValue : IServiceProvider -&gt; obj" Usage="bindingBase.ProvideValue serviceProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">マークアップ拡張機能のサービスを提供できるオブジェクト。 <see langword="null" /> である可能性があります。</param>
        <summary>このバインディングおよび拡張機能の適用先のプロパティに設定されるオブジェクトを返します。</summary>
        <returns>バインディング ターゲット プロパティに設定する値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この実装は、指定されたすべての[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]実用的な派生クラス (<xref:System.Windows.Data.Binding>、 <xref:System.Windows.Data.PriorityBinding>、および<xref:System.Windows.Data.MultiBinding>) に対してバインディングを行うための基本構文をサポートします。  
  
 この<xref:System.Windows.Data.BindingBase>メソッドのクラス実装は、バインディングの結果である式オブジェクトを返すことが想定されています。 プロパティのバインドは、特定<xref:System.Windows.DependencyProperty> <xref:System.Windows.DependencyObject>ので指定されたを対象とすることによって機能します。 この2つの<xref:System.Windows.Markup.IProvideValueTarget>情報は、の`serviceProvider`実装を照会することによって送信[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]されます。これは、バインディングの解析中にリーダーが[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]使用できるようにします。 この基本クラスの実装は、有効<xref:System.Windows.DependencyProperty>なおよび<xref:System.Windows.DependencyObject>を確認する役割を担います。 これらが見つかった場合は、基底クラスが内部抽象メソッドを呼び出すことによって実装されているように、バインディング式を返す実際の実装がさまざまな派生クラスに分類されます。 それ以外の場合、拡張機能はバインドオブジェクト自体を返します。 バインディング自体を返すと、型の不一致エラーが発生しますが、通常の状況では発生しません。  
  
> [!IMPORTANT]
>  このメソッドに実装され[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]ているとしてのバインディングの構文は、内部オーバーライドの<xref:System.Windows.Data.BindingBase.ProvideValue%2A?displayProperty=nameWithType>実装に依存します。また、それ自体が<xref:System.Windows.Data.BindingBase>シールされているため、から派生するカスタムバインドクラスは、次のように正しく機能しません。[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]マークアップ拡張機能。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeFallbackValue">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeFallbackValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeFallbackValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingBase.ShouldSerializeFallbackValue" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeFallbackValue () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeFallbackValue();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeFallbackValue : unit -&gt; bool" Usage="bindingBase.ShouldSerializeFallbackValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>シリアル化プロセスが、このクラスのインスタンスの <see cref="P:System.Windows.Data.BindingBase.FallbackValue" /> プロパティの有効値をシリアル化する必要があるかどうかを示す値を返します。</summary>
        <returns><see langword="true" /> プロパティ値をシリアル化する必要がある場合は <see cref="P:System.Windows.Data.BindingBase.FallbackValue" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeTargetNullValue">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeTargetNullValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeTargetNullValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingBase.ShouldSerializeTargetNullValue" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeTargetNullValue () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeTargetNullValue();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeTargetNullValue : unit -&gt; bool" Usage="bindingBase.ShouldSerializeTargetNullValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="P:System.Windows.Data.BindingBase.TargetNullValue" /> プロパティをシリアル化する必要があるかどうかを示す値を返します。</summary>
        <returns><see cref="P:System.Windows.Data.BindingBase.TargetNullValue" /> プロパティをシリアル化する必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StringFormat">
      <MemberSignature Language="C#" Value="public string StringFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StringFormat" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingBase.StringFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property StringFormat As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StringFormat { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StringFormat : string with get, set" Usage="System.Windows.Data.BindingBase.StringFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>バインドされている値が文字列として表示される場合に、バインディングの書式を指定する文字列を取得または設定します。</summary>
        <value>バインドされている値が文字列として表示される場合に、バインディングの書式を指定する文字列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Data.BindingBase.StringFormat%2A>は、定義済み、複合、またはカスタムの文字列形式にすることができます。 文字列形式の詳細については、「[型の書式設定](~/docs/standard/base-types/formatting-types.md)」を参照してください。  
  
 プロパティ<xref:System.Windows.Data.Binding.Converter%2A> <xref:System.Windows.Data.BindingBase.StringFormat%2A>と<xref:System.Windows.Data.BindingBase.StringFormat%2A>プロパティを設定すると、最初にコンバーターがデータ値に適用されてから、が適用されます。  
  
 でを複合文字列形式に設定すると、パラメーターを1つだけ指定できます。 <xref:System.Windows.Data.Binding> <xref:System.Windows.Data.BindingBase.StringFormat%2A>  
  
 を<xref:System.Windows.Data.MultiBinding>使用する場合、プロパティ<xref:System.Windows.Data.BindingBase.StringFormat%2A>はに設定され<xref:System.Windows.Data.MultiBinding>ている場合にのみ適用されます。  <xref:System.Windows.Data.BindingBase.StringFormat%2A> 子<xref:System.Windows.Data.Binding>オブジェクトに設定されているの値は無視されます。  複合文字列形式のパラメーターの数は、 <xref:System.Windows.Data.Binding> <xref:System.Windows.Data.MultiBinding>内の子オブジェクトの数を超えることはできません。  
  
 を使用<xref:System.Windows.Data.PriorityBinding>する場合は、、子バインドオブジェクト、 <xref:System.Windows.Data.PriorityBinding>またはその両方<xref:System.Windows.Data.BindingBase.StringFormat%2A>でを設定できます。  <xref:System.Windows.Data.BindingBase.StringFormat%2A>が適用される子バインディングにが設定されている場合、その値が使用されます。  が適用される子バインディングでが設定されていない場合は<xref:System.Windows.Data.PriorityBinding> 、が設定されていると、のが適用されます。<xref:System.Windows.Data.BindingBase.StringFormat%2A> <xref:System.Windows.Data.BindingBase.StringFormat%2A>  
  
   
  
## Examples  
 次の例では<xref:System.Windows.Data.BindingBase.StringFormat%2A> 、プロパティを`Price`使用して、 <xref:System.Double>を、通貨を表す文字列に変換します。  
  
 [!code-xaml[ContentStringSnippets#Binding](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentStringSnippets/CSharp/Window1.xaml#binding)]  
  
 次の例では<xref:System.Windows.Data.BindingBase.StringFormat%2A> 、のプロパティ<xref:System.Windows.Data.MultiBinding>を使用して、内<xref:System.Windows.Controls.ListBox>の`Description`各`Price`項目のおよびを含む文字列を作成します。  
  
 [!code-xaml[ContentStringSnippets#MultiBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentStringSnippets/CSharp/Window1.xaml#multibinding)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetNullValue">
      <MemberSignature Language="C#" Value="public object TargetNullValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TargetNullValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingBase.TargetNullValue" />
      <MemberSignature Language="VB.NET" Value="Public Property TargetNullValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ TargetNullValue { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TargetNullValue : obj with get, set" Usage="System.Windows.Data.BindingBase.TargetNullValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ソースの値が <see langword="null" /> のときにターゲットで使用される値を取得または設定します。</summary>
        <value>ソースの値が <see langword="null" /> のときにターゲットで使用される値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlTextUsage_TargetNullValue"></a>   
## <a name="xaml-text-usage"></a>XAML テキストの使用  
  
```  
<object TargetNullValue="nullValue" />  
```  
  
 **もしくは**  
  
```  
<object>  
  <object.TargetNullValue>  
    nullValue  
    </object.TargetNullValue>  
</object>  
```  
  
<a name="xamlValues_TargetNullValue"></a>   
## <a name="xaml-values"></a>XAML 値  
 *nullValue*  
 ターゲットプロパティと同じ型の属性またはオブジェクト要素の値。 XAML の使用情報については、その型のドキュメントを参照してください。 その型は、その値の属性構文をサポートしているか、またはサポートしていないか、またはオブジェクト要素構文 (その型のパラメーターなしのコンストラクターを必要とする) をサポートしていない可能性があります。  
  
   
  
## Examples  
 次の例では<xref:System.Windows.Controls.TextBox> 、をオブジェクトのプロパティにバインドしています。  プロパティが`null` <xref:System.Windows.Controls.TextBox>の場合は、"文字列を入力してください。" と表示されます。  
  
 [!code-xaml[BindingGroupSnippets#TargetNullValue](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#targetnullvalue)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
