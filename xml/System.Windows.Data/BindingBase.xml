<Type Name="BindingBase" FullName="System.Windows.Data.BindingBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a621138e6b1f285d48a5acfbe22eee6c9f9487dd" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56361152" /></Metadata><TypeSignature Language="C#" Value="public abstract class BindingBase : System.Windows.Markup.MarkupExtension" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract BindingBase extends System.Windows.Markup.MarkupExtension" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.BindingBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BindingBase&#xA;Inherits MarkupExtension" />
  <TypeSignature Language="C++ CLI" Value="public ref class BindingBase abstract : System::Windows::Markup::MarkupExtension" />
  <TypeSignature Language="F#" Value="type BindingBase = class&#xA;    inherit MarkupExtension" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Markup.MarkupExtension</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Modifiability=System.Windows.Modifiability.Unmodifiable, Readability=System.Windows.Readability.Unreadable)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.MarkupExtensionReturnType(typeof(System.Object))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="47a01-101"><see cref="T:System.Windows.Data.Binding" />、<see cref="T:System.Windows.Data.PriorityBinding" />、および <see cref="T:System.Windows.Data.MultiBinding" /> の各クラスに共通する特性を定義します。</span><span class="sxs-lookup"><span data-stu-id="47a01-101">Defines the common characteristics of the <see cref="T:System.Windows.Data.Binding" />, <see cref="T:System.Windows.Data.PriorityBinding" />, and <see cref="T:System.Windows.Data.MultiBinding" /> classes.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47a01-102"><xref:System.Windows.Data.BindingBase.ProvideValue%2A?displayProperty=nameWithType>メソッドはシールから派生するカスタム バインド クラス<xref:System.Windows.Data.BindingBase>として正しく機能しません、[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]マークアップ拡張機能。</span><span class="sxs-lookup"><span data-stu-id="47a01-102">Because the <xref:System.Windows.Data.BindingBase.ProvideValue%2A?displayProperty=nameWithType> method is sealed, a custom binding class that derives from <xref:System.Windows.Data.BindingBase> will not function correctly as a [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] markup extension.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BindingGroupName">
      <MemberSignature Language="C#" Value="public string BindingGroupName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BindingGroupName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingBase.BindingGroupName" />
      <MemberSignature Language="VB.NET" Value="Public Property BindingGroupName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BindingGroupName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BindingGroupName : string with get, set" Usage="System.Windows.Data.BindingBase.BindingGroupName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="47a01-103">そのバインディングが属している <see cref="T:System.Windows.Data.BindingGroup" /> の名前を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="47a01-103">Gets or sets the name of the <see cref="T:System.Windows.Data.BindingGroup" /> to which this binding belongs.</span></span></summary>
        <value><span data-ttu-id="47a01-104">そのバインディングが属している <see cref="T:System.Windows.Data.BindingGroup" /> の名前。</span><span class="sxs-lookup"><span data-stu-id="47a01-104">The name of the <see cref="T:System.Windows.Data.BindingGroup" /> to which this binding belongs.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47a01-105">場合<xref:System.Windows.Data.BindingBase.BindingGroupName%2A>バインディングが属するが設定されている、<xref:System.Windows.Data.BindingGroup>場合にのみ、バインディングのソースと<xref:System.Windows.FrameworkElement.DataContext%2A>を持つ親要素の<xref:System.Windows.Data.BindingGroup>同じオブジェクトします。</span><span class="sxs-lookup"><span data-stu-id="47a01-105">If <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> is not set, the binding belongs to a <xref:System.Windows.Data.BindingGroup> only if the binding's source and the <xref:System.Windows.FrameworkElement.DataContext%2A> of the parent element that has the <xref:System.Windows.Data.BindingGroup> are the same object.</span></span>  
  
 <span data-ttu-id="47a01-106">場合<xref:System.Windows.Data.BindingBase.BindingGroupName%2A>設定されているバインディングが属するに値を<xref:System.Windows.Data.BindingGroup>次の条件に該当する場合。</span><span class="sxs-lookup"><span data-stu-id="47a01-106">If <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> is set to a value, the binding belongs to a <xref:System.Windows.Data.BindingGroup> if the following conditions are true:</span></span>  
  
-   <span data-ttu-id="47a01-107"><xref:System.Windows.Data.BindingGroup.Name%2A>の<xref:System.Windows.Data.BindingGroup>と<xref:System.Windows.Data.BindingBase.BindingGroupName%2A>が等しい。</span><span class="sxs-lookup"><span data-stu-id="47a01-107">The <xref:System.Windows.Data.BindingGroup.Name%2A> of the <xref:System.Windows.Data.BindingGroup> and <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> are equal.</span></span>  
  
-   <span data-ttu-id="47a01-108"><xref:System.Windows.Data.BindingGroup>バインディングのターゲット要素の親要素に属しています。</span><span class="sxs-lookup"><span data-stu-id="47a01-108">The <xref:System.Windows.Data.BindingGroup> belongs to a parent element of the binding's target element.</span></span>  
  
 <span data-ttu-id="47a01-109">場合<xref:System.Windows.Data.BindingBase.BindingGroupName%2A>に設定されている`null`、バインディングがの一部ではありません、<xref:System.Windows.Data.BindingGroup>します。</span><span class="sxs-lookup"><span data-stu-id="47a01-109">If <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> is set to `null`, the binding is never a part of a <xref:System.Windows.Data.BindingGroup>.</span></span>  
  
 <span data-ttu-id="47a01-110">異なるソースのバインドを含めることができます、<xref:System.Windows.FrameworkElement.DataContext%2A>を持つ親要素の<xref:System.Windows.Data.BindingGroup>を設定して<xref:System.Windows.Data.BindingGroup.Name%2A>の<xref:System.Windows.Data.BindingGroup>、<xref:System.Windows.Data.BindingBase.BindingGroupName%2A>同じ値へのバインドのプロパティ。</span><span class="sxs-lookup"><span data-stu-id="47a01-110">You can include bindings that have a source that is different from the <xref:System.Windows.FrameworkElement.DataContext%2A> of the parent element that has the <xref:System.Windows.Data.BindingGroup> by setting <xref:System.Windows.Data.BindingGroup.Name%2A> of the <xref:System.Windows.Data.BindingGroup> and the <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> property of a binding to the same value.</span></span>  <span data-ttu-id="47a01-111">同じソースのバインドを除外する<xref:System.Windows.FrameworkElement.DataContext%2A>を持つ親要素の<xref:System.Windows.Data.BindingGroup>を設定して<xref:System.Windows.Data.BindingGroup.Name%2A>の<xref:System.Windows.Data.BindingGroup>と<xref:System.Windows.Data.BindingBase.BindingGroupName%2A>ごとに異なる値のバインドのプロパティ。</span><span class="sxs-lookup"><span data-stu-id="47a01-111">You can exclude bindings that have the same source as <xref:System.Windows.FrameworkElement.DataContext%2A> of the parent element that has the <xref:System.Windows.Data.BindingGroup> by setting <xref:System.Windows.Data.BindingGroup.Name%2A> of the <xref:System.Windows.Data.BindingGroup> and the <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> property of a binding to different values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47a01-112">次の例は、ユーザーに同じ値を 2 つのオブジェクトのプロパティを設定するかどうかを確認するアプリケーションの一部です。</span><span class="sxs-lookup"><span data-stu-id="47a01-112">The following examples are part of an application that checks whether the user has set the properties of two objects to equal values.</span></span> <span data-ttu-id="47a01-113">最初の例では、2 つ作成されます<xref:System.Windows.Controls.TextBox>それぞれが別のソースにバインドされたデータ コントロール。最初のバインド<xref:System.Windows.Controls.TextBox>の一部である、<xref:System.Windows.Data.BindingGroup>ため、<xref:System.Windows.Controls.TextBox>継承、<xref:System.Windows.FrameworkElement.DataContext%2A>と<xref:System.Windows.Data.BindingGroup>その親から <xref:System.Windows.Controls.StackPanel></span><span class="sxs-lookup"><span data-stu-id="47a01-113">The first example creates two <xref:System.Windows.Controls.TextBox> controls, each of which is data bound to a different source: The binding of the first <xref:System.Windows.Controls.TextBox> is part of the <xref:System.Windows.Data.BindingGroup> because the <xref:System.Windows.Controls.TextBox> inherits the <xref:System.Windows.FrameworkElement.DataContext%2A> and <xref:System.Windows.Data.BindingGroup> from its parent <xref:System.Windows.Controls.StackPanel></span></span>  
  
 <span data-ttu-id="47a01-114">2 番目のバインド<xref:System.Windows.Controls.TextBox>の一部である、<xref:System.Windows.Data.BindingGroup>ため、<xref:System.Windows.Data.BindingGroup.Name%2A>の<xref:System.Windows.Data.BindingGroup>と<xref:System.Windows.Data.BindingBase.BindingGroupName%2A>の<xref:System.Windows.Data.Binding>に設定されて`bindingGroup`します。</span><span class="sxs-lookup"><span data-stu-id="47a01-114">The binding on the second <xref:System.Windows.Controls.TextBox> is part of the <xref:System.Windows.Data.BindingGroup> because the <xref:System.Windows.Data.BindingGroup.Name%2A> of the <xref:System.Windows.Data.BindingGroup> and the <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> of the <xref:System.Windows.Data.Binding> are both set to `bindingGroup`.</span></span>  
  
 [!code-xaml[BindingGroupSnippets#BindingGroupName](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#bindinggroupname)]  
[!code-xaml[BindingGroupSnippets#ValidationAdornerSite](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#validationadornersite)]  
  
 <span data-ttu-id="47a01-115">次の例は、<xref:System.Windows.Controls.ValidationRule>前の例を使用します。</span><span class="sxs-lookup"><span data-stu-id="47a01-115">The following example shows the <xref:System.Windows.Controls.ValidationRule> that the previous example uses.</span></span>  <span data-ttu-id="47a01-116"><xref:System.Windows.Controls.ValidationRule.Validate%2A>メソッドからには、各ソース オブジェクトを取得する例では、<xref:System.Windows.Data.BindingGroup>オブジェクトのプロパティが等しいかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="47a01-116">In the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method, the example gets each source object from the <xref:System.Windows.Data.BindingGroup> and checks whether the properties of the objects are equal.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#BindingGroupNameValidationRule](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml.cs#bindinggroupnamevalidationrule)]
 [!code-vb[BindingGroupSnippets#BindingGroupNameValidationRule](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window3.xaml.vb#bindinggroupnamevalidationrule)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delay">
      <MemberSignature Language="C#" Value="public int Delay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Delay" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingBase.Delay" />
      <MemberSignature Language="VB.NET" Value="Public Property Delay As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Delay { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Delay : int with get, set" Usage="System.Windows.Data.BindingBase.Delay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="47a01-117">ターゲット上の値が変更された後でバインディング ソースを更新する前に待機する時間 (ミリ秒単位) を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="47a01-117">Gets or sets the amount of time, in milliseconds, to wait before updating the binding source after the value on the target changes.</span></span></summary>
        <value><span data-ttu-id="47a01-118">バインディング ソースが更新されるまで待機する、ミリ秒単位の時間。</span><span class="sxs-lookup"><span data-stu-id="47a01-118">The amount of time, in milliseconds, to wait before updating the binding source.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47a01-119">設定したバインドを使用して、ターゲットでプロパティの値が変更されるたびに、バインディング ソースを更新するときに、<xref:System.Windows.Data.Binding.Mode%2A>プロパティを<xref:System.Windows.Data.BindingMode.TwoWay>と<xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>に<xref:System.Windows.Data.UpdateSourceTrigger.PropertyChanged>します。</span><span class="sxs-lookup"><span data-stu-id="47a01-119">When you use a binding to update the binding source whenever the value of the property changes on the target, you set the <xref:System.Windows.Data.Binding.Mode%2A> property to <xref:System.Windows.Data.BindingMode.TwoWay> and the <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> to <xref:System.Windows.Data.UpdateSourceTrigger.PropertyChanged>.</span></span>  <span data-ttu-id="47a01-120">このような状況で使用することができます、<xref:System.Windows.Data.BindingBase.Delay%2A>プロパティ ターゲットが変更されたときとソースが更新されたときの間の遅延時間が存在するかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="47a01-120">In this situation, you can use the <xref:System.Windows.Data.BindingBase.Delay%2A> property to specify whether there should be a time delay between when the target is changed and when the source is updated.</span></span>  <span data-ttu-id="47a01-121">これは、機能は、ソース オブジェクトのプロパティを変更するユーザーを有効にしたいが、ソースにすぐにコミットするには、各変更をしたくない場合に便利です。</span><span class="sxs-lookup"><span data-stu-id="47a01-121">This is useful when you want to enable users to change a property on a source object but you don't want each change to be immediately committed to the source.</span></span>  <span data-ttu-id="47a01-122">たとえば、データ オブジェクトのプロパティにバインドされたデータの双方向のテキスト ボックスがあるとします。</span><span class="sxs-lookup"><span data-stu-id="47a01-122">For example, suppose that you have a text box that is data two-way bound to a property of a data object.</span></span>  <span data-ttu-id="47a01-123">テキスト ボックスに値を変更するとき、ソースの更新を取得します。</span><span class="sxs-lookup"><span data-stu-id="47a01-123">When the user changes the value in the text box, the source gets updated.</span></span>  <span data-ttu-id="47a01-124">このシナリオを有効にするには設定、<xref:System.Windows.Data.Binding.Mode%2A>プロパティを<xref:System.Windows.Data.Binding>に<xref:System.Windows.Data.BindingMode.TwoWay>と<xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>に<xref:System.Windows.Data.UpdateSourceTrigger.PropertyChanged>します。</span><span class="sxs-lookup"><span data-stu-id="47a01-124">To enable this scenario, you set the <xref:System.Windows.Data.Binding.Mode%2A> property on the <xref:System.Windows.Data.Binding> to <xref:System.Windows.Data.BindingMode.TwoWay> and the <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> to <xref:System.Windows.Data.UpdateSourceTrigger.PropertyChanged>.</span></span>  <span data-ttu-id="47a01-125">すべてのキーストロークで、ソース オブジェクトを更新しないように、設定、<xref:System.Windows.Data.BindingBase.Delay%2A>プロパティ バインディングをユーザー入力を停止してから、量が時間が経過後にのみ更新する適切な値にします。</span><span class="sxs-lookup"><span data-stu-id="47a01-125">To avoid updating the source object with every keystroke, set the <xref:System.Windows.Data.BindingBase.Delay%2A> property to a reasonable value to cause the binding to update only after that amount of time has elapsed since the user stopped typing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FallbackValue">
      <MemberSignature Language="C#" Value="public object FallbackValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object FallbackValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingBase.FallbackValue" />
      <MemberSignature Language="VB.NET" Value="Public Property FallbackValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ FallbackValue { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FallbackValue : obj with get, set" Usage="System.Windows.Data.BindingBase.FallbackValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="47a01-126">バインドが値を返すことができないときに使用する値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="47a01-126">Gets or sets the value to use when the binding is unable to return a value.</span></span></summary>
        <value><span data-ttu-id="47a01-127">既定値は <see cref="F:System.Windows.DependencyProperty.UnsetValue" /> です。</span><span class="sxs-lookup"><span data-stu-id="47a01-127">The default value is <see cref="F:System.Windows.DependencyProperty.UnsetValue" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47a01-128">場合は、正常に値を返します、バインドします。</span><span class="sxs-lookup"><span data-stu-id="47a01-128">A binding returns a value successfully if:</span></span>  
  
1.  <span data-ttu-id="47a01-129">バインディング ソースへのパスを正常に解決します。</span><span class="sxs-lookup"><span data-stu-id="47a01-129">The path to the binding source resolves successfully.</span></span>  
  
2.  <span data-ttu-id="47a01-130">値コンバーターである場合は、結果の値に変換できません。</span><span class="sxs-lookup"><span data-stu-id="47a01-130">The value converter, if any, is able to convert the resulting value.</span></span>  
  
3.  <span data-ttu-id="47a01-131">バインド ターゲット (ターゲット) プロパティに対して有効では、結果の値です。</span><span class="sxs-lookup"><span data-stu-id="47a01-131">The resulting value is valid for the binding target (target) property.</span></span>  
  
 <span data-ttu-id="47a01-132">1 と 2 を返す場合<xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=nameWithType>、ターゲット プロパティの値に、<xref:System.Windows.Data.BindingBase.FallbackValue%2A>がある場合、します。</span><span class="sxs-lookup"><span data-stu-id="47a01-132">If 1 and 2 return <xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=nameWithType>, the target property is set to the value of the <xref:System.Windows.Data.BindingBase.FallbackValue%2A>, if one is available.</span></span> <span data-ttu-id="47a01-133">存在する場合ありません<xref:System.Windows.Data.BindingBase.FallbackValue%2A>、ターゲット プロパティの既定値が使用されます。</span><span class="sxs-lookup"><span data-stu-id="47a01-133">If there is no <xref:System.Windows.Data.BindingBase.FallbackValue%2A>, the default value of the target property is used.</span></span>  
  
 <span data-ttu-id="47a01-134">値<xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=nameWithType>成功の戻り値とは見なされません。</span><span class="sxs-lookup"><span data-stu-id="47a01-134">The value <xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=nameWithType> is not considered a successful return value.</span></span>  
  
<a name="xamlTextUsage_FallbackValue"></a>   
## <a name="xaml-text-usage"></a><span data-ttu-id="47a01-135">XAML テキストの使用状況</span><span class="sxs-lookup"><span data-stu-id="47a01-135">XAML Text Usage</span></span>  
  
```  
<object FallbackValue="fallbackValue" />  
```  
  
 <span data-ttu-id="47a01-136">**- または -**</span><span class="sxs-lookup"><span data-stu-id="47a01-136">**- or -**</span></span>  
  
```  
<object>  
  <object.FallbackValue>  
    fallbackValue  
    </object.FallbackValue>  
</object>  
```  
  
<a name="xamlValues_FallbackValue"></a>   
## <a name="xaml-values"></a><span data-ttu-id="47a01-137">XAML 値</span><span class="sxs-lookup"><span data-stu-id="47a01-137">XAML Values</span></span>  
 <span data-ttu-id="47a01-138">*fallbackValue*</span><span class="sxs-lookup"><span data-stu-id="47a01-138">*fallbackValue*</span></span>  
 <span data-ttu-id="47a01-139">属性またはオブジェクト要素型の値を同じターゲット プロパティとして。</span><span class="sxs-lookup"><span data-stu-id="47a01-139">An attribute or object element value of the same type as the target property.</span></span> <span data-ttu-id="47a01-140">XAML の使用方法については、その型のドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="47a01-140">See that type's documentation for XAML usage information.</span></span> <span data-ttu-id="47a01-141">その型可能性があります、その値に対して属性構文をサポートしない可能性がありますまたは可能性があります。 または可能性があります (これは、その型に対する既定のコンス トラクターが必要です)、オブジェクト要素構文をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="47a01-141">That type may or may not support attribute syntax for its values, or may or may not support object element syntax (which requires a default constructor on that type).</span></span> <span data-ttu-id="47a01-142">ターゲット プロパティの型の値を使用する構文の影響を与えるため、<xref:System.Windows.Data.BindingBase.FallbackValue%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="47a01-142">The target property type will therefore influence which syntax you use for the value of the <xref:System.Windows.Data.BindingBase.FallbackValue%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Data.IValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" />
      </Docs>
    </Member>
    <Member MemberName="ProvideValue">
      <MemberSignature Language="C#" Value="public override sealed object ProvideValue (IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ProvideValue(class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Function ProvideValue (serviceProvider As IServiceProvider) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ProvideValue(IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="override this.ProvideValue : IServiceProvider -&gt; obj" Usage="bindingBase.ProvideValue serviceProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="serviceProvider"><span data-ttu-id="47a01-143">マークアップ拡張機能のサービスを提供できるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="47a01-143">The object that can provide services for the markup extension.</span></span> <span data-ttu-id="47a01-144"><see langword="null" /> である可能性があります。</span><span class="sxs-lookup"><span data-stu-id="47a01-144">May be <see langword="null" />;</span></span></param>
        <summary><span data-ttu-id="47a01-145">このバインディングおよび拡張機能の適用先のプロパティに設定されるオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="47a01-145">Returns an object that should be set on the property where this binding and extension are applied.</span></span></summary>
        <returns><span data-ttu-id="47a01-146">バインディング ターゲット プロパティに設定する値。</span><span class="sxs-lookup"><span data-stu-id="47a01-146">The value to set on the binding target property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47a01-147">この実装は、使用するとバインドの基本構文サポートを提供します。[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]実用的な派生クラスが提供されるすべての (<xref:System.Windows.Data.Binding>、 <xref:System.Windows.Data.PriorityBinding>、および<xref:System.Windows.Data.MultiBinding>)。</span><span class="sxs-lookup"><span data-stu-id="47a01-147">This implementation provides the base syntax support for binding through [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] for all provided practical derived classes (<xref:System.Windows.Data.Binding>, <xref:System.Windows.Data.PriorityBinding>, and <xref:System.Windows.Data.MultiBinding>).</span></span>  
  
 <span data-ttu-id="47a01-148"><xref:System.Windows.Data.BindingBase>バインディングの結果を表す式オブジェクトを返すこのメソッドのクラスの実装が必要です。</span><span class="sxs-lookup"><span data-stu-id="47a01-148">The <xref:System.Windows.Data.BindingBase> class implementation of this method is expected to return an expression object that is the result of a binding.</span></span> <span data-ttu-id="47a01-149">プロパティのバインドでは、対象とする、指定された<xref:System.Windows.DependencyProperty>で、指定された<xref:System.Windows.DependencyObject>します。</span><span class="sxs-lookup"><span data-stu-id="47a01-149">Binding a property works by targeting a given <xref:System.Windows.DependencyProperty> on a given <xref:System.Windows.DependencyObject>.</span></span> <span data-ttu-id="47a01-150">クエリを実行してこれらの 2 つの情報が送信される、<xref:System.Windows.Markup.IProvideValueTarget>の実装、`serviceProvider`を[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)][!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]バインディングの解析中にリーダーが使用できるようにします。</span><span class="sxs-lookup"><span data-stu-id="47a01-150">These two pieces of information are transmitted by querying for an <xref:System.Windows.Markup.IProvideValueTarget> implementation on the `serviceProvider`, which the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] reader makes available during parsing of a binding.</span></span> <span data-ttu-id="47a01-151">有効な確認するため、この基本クラス実装は<xref:System.Windows.DependencyProperty>と<xref:System.Windows.DependencyObject>します。</span><span class="sxs-lookup"><span data-stu-id="47a01-151">This base class implementation is responsible for checking for a valid <xref:System.Windows.DependencyProperty> and <xref:System.Windows.DependencyObject>.</span></span> <span data-ttu-id="47a01-152">これらが見つかった場合は、内部の抽象メソッドの基本クラスの呼び出しのことで実装される、バインド式を返すの実際の実装はさまざまな派生クラスにします。</span><span class="sxs-lookup"><span data-stu-id="47a01-152">If these are found, the actual implementation of returning a binding expression falls to various derived classes, as implemented by having the base class call an internal abstract method.</span></span> <span data-ttu-id="47a01-153">それ以外の場合、拡張機能は、バインド オブジェクト自体を返します。</span><span class="sxs-lookup"><span data-stu-id="47a01-153">Otherwise, the extension returns the binding object itself.</span></span> <span data-ttu-id="47a01-154">バインド自体を返す型の不一致エラーの結果が、通常の状況では発生しません。</span><span class="sxs-lookup"><span data-stu-id="47a01-154">Returning the binding itself results in a type mismatch error, but this should not occur under normal circumstances.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="47a01-155">経由のバインドの構文[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]このメソッドは、内部のオーバーライドの実装に依存していますに実装されているため、<xref:System.Windows.Data.BindingBase.ProvideValue%2A?displayProperty=nameWithType>自体がシールされているカスタムのバインディング クラスから派生した<xref:System.Windows.Data.BindingBase>として正しく機能しません、[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]マークアップ拡張機能。</span><span class="sxs-lookup"><span data-stu-id="47a01-155">Because the syntax for binding through [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] as implemented in this method relies on implementing an internal override, and because <xref:System.Windows.Data.BindingBase.ProvideValue%2A?displayProperty=nameWithType> itself is sealed, a custom binding class that derives from <xref:System.Windows.Data.BindingBase> will not function correctly as a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] markup extension.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeFallbackValue">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeFallbackValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeFallbackValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingBase.ShouldSerializeFallbackValue" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeFallbackValue () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeFallbackValue();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeFallbackValue : unit -&gt; bool" Usage="bindingBase.ShouldSerializeFallbackValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="47a01-156">シリアル化プロセスが、このクラスのインスタンスの <see cref="P:System.Windows.Data.BindingBase.FallbackValue" /> プロパティの有効値をシリアル化する必要があるかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="47a01-156">Returns a value that indicates whether serialization processes should serialize the effective value of the <see cref="P:System.Windows.Data.BindingBase.FallbackValue" /> property on instances of this class.</span></span></summary>
        <returns><span data-ttu-id="47a01-157"><see langword="true" /> プロパティ値をシリアル化する必要がある場合は <see cref="P:System.Windows.Data.BindingBase.FallbackValue" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="47a01-157"><see langword="true" /> if the <see cref="P:System.Windows.Data.BindingBase.FallbackValue" /> property value should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeTargetNullValue">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeTargetNullValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeTargetNullValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingBase.ShouldSerializeTargetNullValue" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeTargetNullValue () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeTargetNullValue();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeTargetNullValue : unit -&gt; bool" Usage="bindingBase.ShouldSerializeTargetNullValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="47a01-158"><see cref="P:System.Windows.Data.BindingBase.TargetNullValue" /> プロパティをシリアル化する必要があるかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="47a01-158">Returns a value that indicates whether the <see cref="P:System.Windows.Data.BindingBase.TargetNullValue" /> property should be serialized.</span></span></summary>
        <returns><span data-ttu-id="47a01-159"><see cref="P:System.Windows.Data.BindingBase.TargetNullValue" /> プロパティをシリアル化する必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="47a01-159"><see langword="true" /> if the <see cref="P:System.Windows.Data.BindingBase.TargetNullValue" /> property should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StringFormat">
      <MemberSignature Language="C#" Value="public string StringFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StringFormat" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingBase.StringFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property StringFormat As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StringFormat { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StringFormat : string with get, set" Usage="System.Windows.Data.BindingBase.StringFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="47a01-160">バインドされている値が文字列として表示される場合に、バインディングの書式を指定する文字列を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="47a01-160">Gets or sets a string that specifies how to format the binding if it displays the bound value as a string.</span></span></summary>
        <value><span data-ttu-id="47a01-161">バインドされている値が文字列として表示される場合に、バインディングの書式を指定する文字列。</span><span class="sxs-lookup"><span data-stu-id="47a01-161">A string that specifies how to format the binding if it displays the bound value as a string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47a01-162"><xref:System.Windows.Data.BindingBase.StringFormat%2A> 定義済み、複合、またはカスタムの文字列形式を指定できます。</span><span class="sxs-lookup"><span data-stu-id="47a01-162"><xref:System.Windows.Data.BindingBase.StringFormat%2A> can be a predefined, composite, or custom string format.</span></span> <span data-ttu-id="47a01-163">文字列形式の詳細については、次を参照してください。[型の書式設定](~/docs/standard/base-types/formatting-types.md)します。</span><span class="sxs-lookup"><span data-stu-id="47a01-163">For more information about string formats, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="47a01-164">設定した場合、<xref:System.Windows.Data.Binding.Converter%2A>と<xref:System.Windows.Data.BindingBase.StringFormat%2A>プロパティ、コンバーターが最初に、データ値を適用し、<xref:System.Windows.Data.BindingBase.StringFormat%2A>が適用されます。</span><span class="sxs-lookup"><span data-stu-id="47a01-164">If you set the <xref:System.Windows.Data.Binding.Converter%2A> and <xref:System.Windows.Data.BindingBase.StringFormat%2A> properties, the converter is applied to the data value first, and then the <xref:System.Windows.Data.BindingBase.StringFormat%2A> is applied.</span></span>  
  
 <span data-ttu-id="47a01-165">設定すると、<xref:System.Windows.Data.BindingBase.StringFormat%2A>上、<xref:System.Windows.Data.Binding>複合文字列の形式には、1 つだけのパラメーターを指定することができます。</span><span class="sxs-lookup"><span data-stu-id="47a01-165">When you set the <xref:System.Windows.Data.BindingBase.StringFormat%2A> on a <xref:System.Windows.Data.Binding> to a composite string format, you can specify only one parameter.</span></span>  
  
 <span data-ttu-id="47a01-166">使用すると、 <xref:System.Windows.Data.MultiBinding>、<xref:System.Windows.Data.BindingBase.StringFormat%2A>のみ設定されている場合にプロパティが適用される、<xref:System.Windows.Data.MultiBinding>します。</span><span class="sxs-lookup"><span data-stu-id="47a01-166">When you use a <xref:System.Windows.Data.MultiBinding>, the <xref:System.Windows.Data.BindingBase.StringFormat%2A> property applies only when it is set on the <xref:System.Windows.Data.MultiBinding>.</span></span>  <span data-ttu-id="47a01-167">値<xref:System.Windows.Data.BindingBase.StringFormat%2A>任意の子に対して設定されている<xref:System.Windows.Data.Binding>オブジェクトは無視されます。</span><span class="sxs-lookup"><span data-stu-id="47a01-167">The value of <xref:System.Windows.Data.BindingBase.StringFormat%2A> that is set on any child <xref:System.Windows.Data.Binding> objects is ignored.</span></span>  <span data-ttu-id="47a01-168">複合文字列の形式でパラメーターの数は、子の数を超えることはできません<xref:System.Windows.Data.Binding>内のオブジェクト、<xref:System.Windows.Data.MultiBinding>します。</span><span class="sxs-lookup"><span data-stu-id="47a01-168">The number of parameters in a composite string format cannot exceed the number of child <xref:System.Windows.Data.Binding> objects in the <xref:System.Windows.Data.MultiBinding>.</span></span>  
  
 <span data-ttu-id="47a01-169">使用すると、 <xref:System.Windows.Data.PriorityBinding>、設定することができます、<xref:System.Windows.Data.BindingBase.StringFormat%2A>で、 <xref:System.Windows.Data.PriorityBinding>、子オブジェクトのバインド、またはその両方でします。</span><span class="sxs-lookup"><span data-stu-id="47a01-169">When you use a <xref:System.Windows.Data.PriorityBinding>, you can set the <xref:System.Windows.Data.BindingBase.StringFormat%2A> on the <xref:System.Windows.Data.PriorityBinding>, on child binding objects, or both.</span></span>  <span data-ttu-id="47a01-170">場合、<xref:System.Windows.Data.BindingBase.StringFormat%2A>にバインドされている子設定適用すると、値が使用されます。</span><span class="sxs-lookup"><span data-stu-id="47a01-170">If the <xref:System.Windows.Data.BindingBase.StringFormat%2A> is set on the child binding that is applied, that value is used.</span></span>  <span data-ttu-id="47a01-171">場合、<xref:System.Windows.Data.BindingBase.StringFormat%2A>適用されている子のバインディングが設定されておらず、<xref:System.Windows.Data.BindingBase.StringFormat%2A>の<xref:System.Windows.Data.PriorityBinding>設定されている場合に適用されます。</span><span class="sxs-lookup"><span data-stu-id="47a01-171">If the <xref:System.Windows.Data.BindingBase.StringFormat%2A> is not set on the child binding that is applied, the <xref:System.Windows.Data.BindingBase.StringFormat%2A> of the <xref:System.Windows.Data.PriorityBinding> is applied if it is set.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47a01-172">次の例では、<xref:System.Windows.Data.BindingBase.StringFormat%2A>プロパティに変換する`Price`、これは、<xref:System.Double>通貨を表す文字列にします。</span><span class="sxs-lookup"><span data-stu-id="47a01-172">The following example uses the <xref:System.Windows.Data.BindingBase.StringFormat%2A> property to convert `Price`, which is a <xref:System.Double>, to a string that represents a currency.</span></span>  
  
 [!code-xaml[ContentStringSnippets#Binding](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentStringSnippets/CSharp/Window1.xaml#binding)]  
  
 <span data-ttu-id="47a01-173">次の例では、<xref:System.Windows.Data.BindingBase.StringFormat%2A>プロパティを<xref:System.Windows.Data.MultiBinding>を含む文字列を作成する、`Description`と`Price`内の各項目の<xref:System.Windows.Controls.ListBox>します。</span><span class="sxs-lookup"><span data-stu-id="47a01-173">The following example uses the <xref:System.Windows.Data.BindingBase.StringFormat%2A> property on a <xref:System.Windows.Data.MultiBinding> to build a string that includes the `Description` and `Price` of each item in a <xref:System.Windows.Controls.ListBox>.</span></span>  
  
 [!code-xaml[ContentStringSnippets#MultiBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentStringSnippets/CSharp/Window1.xaml#multibinding)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetNullValue">
      <MemberSignature Language="C#" Value="public object TargetNullValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TargetNullValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingBase.TargetNullValue" />
      <MemberSignature Language="VB.NET" Value="Public Property TargetNullValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ TargetNullValue { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TargetNullValue : obj with get, set" Usage="System.Windows.Data.BindingBase.TargetNullValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="47a01-174">ソースの値が <see langword="null" /> のときにターゲットで使用される値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="47a01-174">Gets or sets the value that is used in the target when the value of the source is <see langword="null" />.</span></span></summary>
        <value><span data-ttu-id="47a01-175">ソースの値が <see langword="null" /> のときにターゲットで使用される値。</span><span class="sxs-lookup"><span data-stu-id="47a01-175">The value that is used in the target when the value of the source is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlTextUsage_TargetNullValue"></a>   
## <a name="xaml-text-usage"></a><span data-ttu-id="47a01-176">XAML テキストの使用状況</span><span class="sxs-lookup"><span data-stu-id="47a01-176">XAML Text Usage</span></span>  
  
```  
<object TargetNullValue="nullValue" />  
```  
  
 <span data-ttu-id="47a01-177">**- または -**</span><span class="sxs-lookup"><span data-stu-id="47a01-177">**- or -**</span></span>  
  
```  
<object>  
  <object.TargetNullValue>  
    nullValue  
    </object.TargetNullValue>  
</object>  
```  
  
<a name="xamlValues_TargetNullValue"></a>   
## <a name="xaml-values"></a><span data-ttu-id="47a01-178">XAML 値</span><span class="sxs-lookup"><span data-stu-id="47a01-178">XAML Values</span></span>  
 <span data-ttu-id="47a01-179">*nullValue*</span><span class="sxs-lookup"><span data-stu-id="47a01-179">*nullValue*</span></span>  
 <span data-ttu-id="47a01-180">属性またはオブジェクト要素型の値を同じターゲット プロパティとして。</span><span class="sxs-lookup"><span data-stu-id="47a01-180">An attribute or object element value of the same type as the target property.</span></span> <span data-ttu-id="47a01-181">XAML の使用方法については、その型のドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="47a01-181">See that type's documentation for XAML usage information.</span></span> <span data-ttu-id="47a01-182">その型可能性があります、その値に対して属性構文をサポートしない可能性がありますまたは可能性があります。 または可能性があります (これは、その型に対する既定のコンス トラクターが必要です)、オブジェクト要素構文をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="47a01-182">That type may or may not support attribute syntax for its values, or may or may not support object element syntax (which requires a default constructor on that type).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47a01-183">次の例では、バインド、<xref:System.Windows.Controls.TextBox>オブジェクトのプロパティにします。</span><span class="sxs-lookup"><span data-stu-id="47a01-183">The following example binds a <xref:System.Windows.Controls.TextBox> to a property of an object.</span></span>  <span data-ttu-id="47a01-184">プロパティが場合`null`、<xref:System.Windows.Controls.TextBox>表示「を入力してください文字列です」。</span><span class="sxs-lookup"><span data-stu-id="47a01-184">If the property is `null`, the <xref:System.Windows.Controls.TextBox> displays "please enter a string."</span></span>  
  
 [!code-xaml[BindingGroupSnippets#TargetNullValue](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#targetnullvalue)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>