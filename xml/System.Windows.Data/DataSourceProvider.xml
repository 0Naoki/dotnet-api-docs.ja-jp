<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DataSourceProvider.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">73cd4428-9abd-4836-b1ef-ba70fe2e0b72b69b026e4c25cdaac8db8887e388b431180c5d47.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b69b026e4c25cdaac8db8887e388b431180c5d47</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cc0c87a2e12b0fb9ba9ecdd3d4950f0572524db8</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Data.DataSourceProvider">
          <source>Common base class and contract for <ph id="ph1">&lt;see cref="T:System.Windows.Data.DataSourceProvider" /&gt;</ph> objects, which are factories that execute some queries to produce a single object or a list of objects that you can use as binding source objects.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Data.DataSourceProvider" /&gt;</ph> オブジェクトの共通の基底クラスおよびコントラクトです。このオブジェクトは、バインド ソース オブジェクトとして使用可能な 1 つのオブジェクトまたはオブジェクトの一覧を生成するためにいくつかのクエリを実行するファクトリです。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.DataSourceProvider">
          <source><ph id="ph1">&lt;xref:System.Windows.Data.DataSourceProvider&gt;</ph> is a convenience wrapper around an existing data model; it does not replace any data model.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Data.DataSourceProvider&gt;</ph> 利便性のためのラッパーです。 既存のデータ モデルには任意のデータ モデルは置換されません。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.DataSourceProvider">
          <source>A data provider does not attempt to condense the complexity and versatility of a data model such as ADO into one single object with a few properties.</source>
          <target state="translated">複雑さや ADO など、いくつかのプロパティを持つ 1 つのオブジェクトへのデータ モデルの用途のためには、データ プロバイダーが行われません。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.DataSourceProvider">
          <source><ph id="ph1">&lt;xref:System.Windows.Data.DataSourceProvider&gt;</ph> is an abstract class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Data.DataSourceProvider&gt;</ph> は抽象クラスです。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.DataSourceProvider">
          <source>Use one of the derived classes, which are <ph id="ph1">&lt;xref:System.Windows.Data.XmlDataProvider&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Data.ObjectDataProvider&gt;</ph>.</source>
          <target state="translated">派生クラスのいずれかを使用して<ph id="ph1">&lt;xref:System.Windows.Data.XmlDataProvider&gt;</ph>と<ph id="ph2">&lt;xref:System.Windows.Data.ObjectDataProvider&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.DataSourceProvider">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Data.DataSourceProvider&gt;</ph> is aware of the <ph id="ph2">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> threading and dispatcher model.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Data.DataSourceProvider&gt;</ph>を認識して、<ph id="ph2">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph>スレッドとディスパッチャーのモデル。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.DataSourceProvider">
          <source>It assumes the thread at creation time to be the <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> thread.</source>
          <target state="translated">作成時に、スレッドを想定しています、<ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph>スレッドです。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.DataSourceProvider">
          <source>Events will get marshaled from a worker thread to the UI thread of the application.</source>
          <target state="translated">イベントは、アプリケーションの UI スレッドへのワーカー スレッドからマーシャ リングが取得されます。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.DataSourceProvider.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Data.DataSourceProvider" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Data.DataSourceProvider" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.DataSourceProvider.#ctor">
          <source>This is a protected constructor.</source>
          <target state="translated">これは保護されたコンストラクターです。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.DataSourceProvider.BeginInit">
          <source>Indicates that initialization of this object is about to begin; no implicit <ph id="ph1">&lt;see cref="M:System.Windows.Data.DataSourceProvider.Refresh" /&gt;</ph> occurs until the matched <ph id="ph2">&lt;see cref="M:System.Windows.Data.DataSourceProvider.EndInit" /&gt;</ph> method is called.</source>
          <target state="translated">このオブジェクトの初期化が開始されようとしていることを示します。一致する <ph id="ph1">&lt;see cref="M:System.Windows.Data.DataSourceProvider.Refresh" /&gt;</ph> メソッドが呼び出されるまで暗黙の <ph id="ph2">&lt;see cref="M:System.Windows.Data.DataSourceProvider.EndInit" /&gt;</ph> は発生しません。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.DataSourceProvider.BeginQuery">
          <source>When overridden in a derived class, this base class calls this method when <ph id="ph1">&lt;see cref="M:System.Windows.Data.DataSourceProvider.InitialLoad" /&gt;</ph> or <ph id="ph2">&lt;see cref="M:System.Windows.Data.DataSourceProvider.Refresh" /&gt;</ph> has been called.</source>
          <target state="translated">派生クラスでオーバーライドされると、この基本クラスは、<ph id="ph1">&lt;see cref="M:System.Windows.Data.DataSourceProvider.InitialLoad" /&gt;</ph> または <ph id="ph2">&lt;see cref="M:System.Windows.Data.DataSourceProvider.Refresh" /&gt;</ph> が呼び出されたときにこのメソッドを呼び出します。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.DataSourceProvider.BeginQuery">
          <source>The base class delays the call if refresh is deferred or initial load is disabled.</source>
          <target state="translated">更新が遅延される場合、または最初の読み込みが無効になっている場合は、基本クラスによって呼び出しが遅延されます。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.DataSourceProvider.BeginQuery">
          <source><bpt id="p1">**</bpt>Notes to Implementers:<ept id="p1">**</ept> You can choose to execute the query on the same thread or on a background thread or using <ph id="ph1">`IsAsynchronous`</ph>.</source>
          <target state="translated"><bpt id="p1">**</bpt>実装時の注意:<ept id="p1">**</ept>または背景上で同じスレッドでクエリを実行することもできますスレッドまたはを使用して<ph id="ph1">`IsAsynchronous`</ph>です。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.DataSourceProvider.BeginQuery">
          <source>When the query is complete, call <ph id="ph1">&lt;xref:System.Windows.Data.DataSourceProvider.OnQueryFinished%2A&gt;</ph> to have the public properties updated.</source>
          <target state="translated">クエリが完了したら、呼び出す<ph id="ph1">&lt;xref:System.Windows.Data.DataSourceProvider.OnQueryFinished%2A&gt;</ph>にパブリック プロパティが更新されました。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="P:System.Windows.Data.DataSourceProvider.Data">
          <source>Gets the underlying data object.</source>
          <target state="translated">基になるデータ オブジェクトを取得します。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.DataSourceProvider.Data">
          <source>A value of type <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that is the underlying data object.</source>
          <target state="translated">データ オブジェクトの基になる型 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> の値。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.DataSourceProvider.Data">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Data.DataSourceProvider&gt;</ph> is used as the source of a binding, this is the resulting binding source object.</source>
          <target state="translated">ときに、<ph id="ph1">&lt;xref:System.Windows.Data.DataSourceProvider&gt;</ph>使用が結果として得られるバインド ソース オブジェクトは、このバインディングのソースとして。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="E:System.Windows.Data.DataSourceProvider.DataChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Data.DataSourceProvider.Data" /&gt;</ph> property has a new value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Data.DataSourceProvider.Data" /&gt;</ph> プロパティに新しい値が設定された場合に発生します。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Data.DataSourceProvider.DataChanged">
          <source><bpt id="p1">**</bpt>Notes to implementers:<ept id="p1">**</ept> Raise this event when a new data object becomes available on the <ph id="ph1">&lt;xref:System.Windows.Data.DataSourceProvider.Data%2A&gt;</ph> property.</source>
          <target state="translated"><bpt id="p1">**</bpt>実装時の注意:<ept id="p1">**</ept>新しいデータ オブジェクトが 利用可能になったら、このイベントを発生させる、<ph id="ph1">&lt;xref:System.Windows.Data.DataSourceProvider.Data%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.DataSourceProvider.DeferRefresh">
          <source>Enters a defer cycle that you can use to change properties of the provider and delay automatic refresh.</source>
          <target state="translated">プロバイダーのプロパティを変更し、自動更新を遅延させるために使用できる遅延サイクルを入力します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.DataSourceProvider.DeferRefresh">
          <source>An <ph id="ph1">&lt;see cref="T:System.IDisposable" /&gt;</ph> object that you can use to dispose of the calling object.</source>
          <target state="translated">呼び出し元のオブジェクトを破棄するために使用できる <ph id="ph1">&lt;see cref="T:System.IDisposable" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.DataSourceProvider.DeferRefresh">
          <source>The typical usage is to create a <ph id="ph1">`using`</ph> scope with this method and then place multiple property changes within the scope.</source>
          <target state="translated">一般的な用途を作成するには、<ph id="ph1">`using`</ph>このメソッドを使用してスコープを設定して、スコープ内で複数のプロパティの変更を配置します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.DataSourceProvider.DeferRefresh">
          <source>This delays automatic refresh until the defer cycle is exited.</source>
          <target state="translated">これにより、遅延サイクルが終了するまで、自動更新が遅延します。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="P:System.Windows.Data.DataSourceProvider.Dispatcher">
          <source>Gets or sets the current <ph id="ph1">&lt;see cref="T:System.Windows.Threading.Dispatcher" /&gt;</ph> object to the <ph id="ph2">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> thread to use.</source>
          <target state="translated">使用する <ph id="ph2">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> スレッドに対する現在の <ph id="ph1">&lt;see cref="T:System.Windows.Threading.Dispatcher" /&gt;</ph> オブジェクトを取得または設定します。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.DataSourceProvider.Dispatcher">
          <source>The current <ph id="ph1">&lt;see cref="T:System.Windows.Threading.Dispatcher" /&gt;</ph> object to the <ph id="ph2">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> thread to use.</source>
          <target state="translated">現在<ph id="ph1">&lt;see cref="T:System.Windows.Threading.Dispatcher" /&gt;</ph>オブジェクトを<ph id="ph2">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph>を使用するスレッド。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.DataSourceProvider.Dispatcher">
          <source>By default, this is the <ph id="ph1">&lt;see cref="T:System.Windows.Threading.Dispatcher" /&gt;</ph> object that is associated with the thread on which this instance was created.</source>
          <target state="translated">既定では、これは、このインスタンスの作成時にスレッドに関連付けられた <ph id="ph1">&lt;see cref="T:System.Windows.Threading.Dispatcher" /&gt;</ph> オブジェクトです。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.DataSourceProvider.EndInit">
          <source>Indicates that the initialization of this object has completed; this causes a <ph id="ph1">&lt;see cref="M:System.Windows.Data.DataSourceProvider.Refresh" /&gt;</ph> if no other <ph id="ph2">&lt;see cref="M:System.Windows.Data.DataSourceProvider.DeferRefresh" /&gt;</ph> is outstanding.</source>
          <target state="translated">このオブジェクトの初期化が完了したことを示します。これにより、保留状態の <ph id="ph1">&lt;see cref="M:System.Windows.Data.DataSourceProvider.Refresh" /&gt;</ph> が他にない場合は <ph id="ph2">&lt;see cref="M:System.Windows.Data.DataSourceProvider.DeferRefresh" /&gt;</ph> が発生します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="P:System.Windows.Data.DataSourceProvider.Error">
          <source>Gets the error of the last query operation.</source>
          <target state="translated">最後のクエリ操作のエラーを取得します。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.DataSourceProvider.Error">
          <source>A value of type <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph> that is the error of the last query operation, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if there was no error.</source>
          <target state="translated">最後のクエリ操作のエラーである <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph> 型の値。エラーがなかった場合は <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.DataSourceProvider.InitialLoad">
          <source>Starts the initial query to the underlying data model.</source>
          <target state="translated">基になるデータ モデルに対する最初のクエリを開始します。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.DataSourceProvider.InitialLoad">
          <source>The result is returned on the <ph id="ph1">&lt;see cref="P:System.Windows.Data.DataSourceProvider.Data" /&gt;</ph> property.</source>
          <target state="translated">結果は <ph id="ph1">&lt;see cref="P:System.Windows.Data.DataSourceProvider.Data" /&gt;</ph> プロパティに返されます。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.DataSourceProvider.InitialLoad">
          <source>This method is typically called by the binding engine when dependent data bindings are activated.</source>
          <target state="translated">このメソッドは、依存データ バインディングがアクティブになったときに通常バインディング エンジンによって呼び出されます。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.DataSourceProvider.InitialLoad">
          <source>Set <ph id="ph1">&lt;xref:System.Windows.Data.DataSourceProvider.IsInitialLoadEnabled%2A&gt;</ph> to <ph id="ph2">`false`</ph> to prevent or delay the automatic loading of data.</source>
          <target state="translated">設定<ph id="ph1">&lt;xref:System.Windows.Data.DataSourceProvider.IsInitialLoadEnabled%2A&gt;</ph>に<ph id="ph2">`false`</ph>を回避またはデータの自動読み込みを遅延します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.DataSourceProvider.InitialLoad">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Data.DataSourceProvider.InitialLoad%2A&gt;</ph> method can be called multiple times.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Data.DataSourceProvider.InitialLoad%2A&gt;</ph>メソッドは、複数回呼び出すことができます。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.DataSourceProvider.InitialLoad">
          <source>The provider ignores subsequent calls once it is busy executing the initial query; the provider does not restart an already running query when <ph id="ph1">&lt;xref:System.Windows.Data.DataSourceProvider.InitialLoad%2A&gt;</ph> is called again.</source>
          <target state="translated">プロバイダーがビジー状態です。 最初のクエリを実行する後続の呼び出しは無視されます。プロバイダーは、既に実行されているを再起動していないときにクエリ<ph id="ph1">&lt;xref:System.Windows.Data.DataSourceProvider.InitialLoad%2A&gt;</ph>が再度呼び出されます。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.DataSourceProvider.InitialLoad">
          <source>When the query finishes successfully, any <ph id="ph1">&lt;xref:System.Windows.Data.DataSourceProvider.InitialLoad%2A&gt;</ph> call still does not re-query data.</source>
          <target state="translated">ときに、クエリが正常に完了、いずれかの<ph id="ph1">&lt;xref:System.Windows.Data.DataSourceProvider.InitialLoad%2A&gt;</ph>呼び出しもは再度データをクエリできません。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.DataSourceProvider.InitialLoad">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Data.DataSourceProvider.InitialLoad%2A&gt;</ph> operation is typically asynchronous, a <ph id="ph2">&lt;xref:System.Windows.Data.DataSourceProvider.DataChanged&gt;</ph> event is raised when the <ph id="ph3">&lt;xref:System.Windows.Data.DataSourceProvider.Data%2A&gt;</ph> property assumed a new value.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Data.DataSourceProvider.InitialLoad%2A&gt;</ph>操作は、一般的な非同期、<ph id="ph2">&lt;xref:System.Windows.Data.DataSourceProvider.DataChanged&gt;</ph>イベントが発生したときに、<ph id="ph3">&lt;xref:System.Windows.Data.DataSourceProvider.Data%2A&gt;</ph>プロパティが新しい値と見なされます。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.DataSourceProvider.InitialLoad">
          <source>The application calls <ph id="ph1">&lt;xref:System.Windows.Data.DataSourceProvider.Refresh%2A&gt;</ph> to cause a refresh of the data.</source>
          <target state="translated">アプリケーションの呼び出し<ph id="ph1">&lt;xref:System.Windows.Data.DataSourceProvider.Refresh%2A&gt;</ph>データの更新が発生します。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="P:System.Windows.Data.DataSourceProvider.IsInitialLoadEnabled">
          <source>Gets or sets a value that indicates whether to prevent or delay the automatic loading of data.</source>
          <target state="translated">データの自動読み込みを回避または遅延するかどうかを示す値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.DataSourceProvider.IsInitialLoadEnabled">
          <source><ph id="ph1">&lt;see langword="false" /&gt;</ph> to prevent or delay the automatic loading of data; otherwise, <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">データの自動読み込みを回避または遅延する場合は <ph id="ph1">&lt;see langword="false" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.DataSourceProvider.IsInitialLoadEnabled">
          <source>The default value is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">既定値は <ph id="ph1">&lt;see langword="true" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.DataSourceProvider.IsInitialLoadEnabled">
          <source>Typically the <ph id="ph1">&lt;xref:System.Windows.Data.DataSourceProvider&gt;</ph> runs its query and sets its <ph id="ph2">&lt;xref:System.Windows.Data.DataSourceProvider.Data%2A&gt;</ph> property the first time it is used by a binding or a <ph id="ph3">&lt;xref:System.Windows.Data.CollectionViewSource&gt;</ph>.</source>
          <target state="translated">通常、<ph id="ph1">&lt;xref:System.Windows.Data.DataSourceProvider&gt;</ph>そのクエリを実行し、設定、<ph id="ph2">&lt;xref:System.Windows.Data.DataSourceProvider.Data%2A&gt;</ph>プロパティ初めて、バインドによって使われるとき、または<ph id="ph3">&lt;xref:System.Windows.Data.CollectionViewSource&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.DataSourceProvider.IsInitialLoadEnabled">
          <source>You can omit this step by setting the <ph id="ph1">&lt;xref:System.Windows.Data.DataSourceProvider.IsInitialLoadEnabled%2A&gt;</ph> property to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">この手順を省略すると設定して、<ph id="ph1">&lt;xref:System.Windows.Data.DataSourceProvider.IsInitialLoadEnabled%2A&gt;</ph>プロパティを<ph id="ph2">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.DataSourceProvider.IsInitialLoadEnabled">
          <source>In this case, the application must explicitly call <ph id="ph1">&lt;xref:System.Windows.Data.DataSourceProvider.Refresh%2A&gt;</ph> to cause the provider to obtain its data.</source>
          <target state="translated">この場合、アプリケーションを呼び出す必要があります明示的に<ph id="ph1">&lt;xref:System.Windows.Data.DataSourceProvider.Refresh%2A&gt;</ph>がプロバイダーをそのデータを取得します。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="P:System.Windows.Data.DataSourceProvider.IsRefreshDeferred">
          <source>Gets a value that indicates whether there is an outstanding <ph id="ph1">&lt;see cref="M:System.Windows.Data.DataSourceProvider.DeferRefresh" /&gt;</ph> in use.</source>
          <target state="translated">保留状態の <ph id="ph1">&lt;see cref="M:System.Windows.Data.DataSourceProvider.DeferRefresh" /&gt;</ph> が使用されているかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.DataSourceProvider.IsRefreshDeferred">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if there is an outstanding <ph id="ph2">&lt;see cref="M:System.Windows.Data.DataSourceProvider.DeferRefresh" /&gt;</ph> in use; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">保留状態の <ph id="ph2">&lt;see cref="M:System.Windows.Data.DataSourceProvider.DeferRefresh" /&gt;</ph> が使用されている場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.DataSourceProvider.IsRefreshDeferred">
          <source><bpt id="p1">**</bpt>Notes to implementers:<ept id="p1">**</ept> To get the best use out of refresh deferral, do not call <ph id="ph1">&lt;xref:System.Windows.Data.DataSourceProvider.Refresh%2A&gt;</ph> when this property is <ph id="ph2">`true`</ph>.</source>
          <target state="translated"><bpt id="p1">**</bpt>実装時の注意:<ept id="p1">**</ept>の更新の遅延を取得するには呼び出す必要はありません<ph id="ph1">&lt;xref:System.Windows.Data.DataSourceProvider.Refresh%2A&gt;</ph>ときに、このプロパティは<ph id="ph2">`true`</ph>します。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.DataSourceProvider.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
          <source>Arguments of the event being raised.</source>
          <target state="translated">発生するイベントの引数。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.DataSourceProvider.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Data.DataSourceProvider.PropertyChanged" /&gt;</ph> event with the provided arguments.</source>
          <target state="translated">指定された引数を使用して、<ph id="ph1">&lt;see cref="E:System.Windows.Data.DataSourceProvider.PropertyChanged" /&gt;</ph> イベントを発生させます。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="T:System.Windows.Data.DataSourceProvider">
          <source>Derived classes call this method to indicate that a query has finished.</source>
          <target state="translated">派生クラスは、このメソッドを呼び出してクエリが終了したことを示します。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.DataSourceProvider.OnQueryFinished(System.Object)">
          <source>The data that is the result of the query.</source>
          <target state="translated">クエリの結果を表すデータ。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.DataSourceProvider.OnQueryFinished(System.Object)">
          <source>Derived classes call this method to indicate that a query has finished.</source>
          <target state="translated">派生クラスは、このメソッドを呼び出してクエリが終了したことを示します。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.DataSourceProvider.OnQueryFinished(System.Object)">
          <source>This callback can be called from any thread.</source>
          <target state="translated">このコールバックは、任意のスレッドから呼び出すことができます。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.DataSourceProvider.OnQueryFinished(System.Object)">
          <source>This implementation marshals back the result to the <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> thread before setting any of the public properties and before raising any events.</source>
          <target state="translated">この実装は再マーシャ リング結果を<ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph>スレッドのパブリック プロパティを設定する前にあり、すべてのイベントを発生させる前にします。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.DataSourceProvider.OnQueryFinished(System.Object,System.Exception,System.Windows.Threading.DispatcherOperationCallback,System.Object)">
          <source>The data that is the result of the query.</source>
          <target state="translated">クエリの結果を表すデータ。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.DataSourceProvider.OnQueryFinished(System.Object,System.Exception,System.Windows.Threading.DispatcherOperationCallback,System.Object)">
          <source>The error that occurred while running the query.</source>
          <target state="translated">クエリの実行中に発生したエラー。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.DataSourceProvider.OnQueryFinished(System.Object,System.Exception,System.Windows.Threading.DispatcherOperationCallback,System.Object)">
          <source>This value is <ph id="ph1">&lt;see langword="null" /&gt;</ph> if there is no error.</source>
          <target state="translated">エラーがない場合、この値は <ph id="ph1">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.DataSourceProvider.OnQueryFinished(System.Object,System.Exception,System.Windows.Threading.DispatcherOperationCallback,System.Object)">
          <source>Optional delegate that is used to execute completion work on the <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> thread, for example, to set additional properties.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> スレッドで追加のプロパティの設定などの完了作業を実行するために使用される省略可能なデリゲート。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.DataSourceProvider.OnQueryFinished(System.Object,System.Exception,System.Windows.Threading.DispatcherOperationCallback,System.Object)">
          <source>Optional arguments to send as a parameter with the <bpt id="p1">&lt;c&gt;</bpt>completionWork<ept id="p1">&lt;/c&gt;</ept> delegate.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>completionWork<ept id="p1">&lt;/c&gt;</ept> デリゲートのパラメーターとして送信する省略可能な引数。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.DataSourceProvider.OnQueryFinished(System.Object,System.Exception,System.Windows.Threading.DispatcherOperationCallback,System.Object)">
          <source>Derived classes call this method to indicate that a query has finished.</source>
          <target state="translated">派生クラスは、このメソッドを呼び出してクエリが終了したことを示します。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.DataSourceProvider.OnQueryFinished(System.Object,System.Exception,System.Windows.Threading.DispatcherOperationCallback,System.Object)">
          <source>This callback can be called from any thread.</source>
          <target state="translated">このコールバックは、任意のスレッドから呼び出すことができます。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.DataSourceProvider.OnQueryFinished(System.Object,System.Exception,System.Windows.Threading.DispatcherOperationCallback,System.Object)">
          <source>This implementation marshals back the result to the <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> thread before setting any of the public properties and before raising any events.</source>
          <target state="translated">この実装は再マーシャ リング結果を<ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph>スレッドのパブリック プロパティを設定する前にあり、すべてのイベントを発生させる前にします。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="E:System.Windows.Data.DataSourceProvider.PropertyChanged">
          <source>Occurs when a property value changes.</source>
          <target state="translated">プロパティ値が変更するときに発生します。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.DataSourceProvider.Refresh">
          <source>Initiates a refresh operation to the underlying data model.</source>
          <target state="translated">基になるデータ モデルに対する更新操作を開始します。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.DataSourceProvider.Refresh">
          <source>The result is returned on the <ph id="ph1">&lt;see cref="P:System.Windows.Data.DataSourceProvider.Data" /&gt;</ph> property.</source>
          <target state="translated">結果は <ph id="ph1">&lt;see cref="P:System.Windows.Data.DataSourceProvider.Data" /&gt;</ph> プロパティに返されます。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.DataSourceProvider.Refresh">
          <source>A refresh operation is typically asynchronous, a <ph id="ph1">&lt;xref:System.Windows.Data.DataSourceProvider.DataChanged&gt;</ph> event is raised when the <ph id="ph2">&lt;xref:System.Windows.Data.DataSourceProvider.Data%2A&gt;</ph> property assumed a new value.</source>
          <target state="translated">更新操作は、一般的な非同期、<ph id="ph1">&lt;xref:System.Windows.Data.DataSourceProvider.DataChanged&gt;</ph>イベントが発生したときに、<ph id="ph2">&lt;xref:System.Windows.Data.DataSourceProvider.Data%2A&gt;</ph>プロパティが新しい値と見なされます。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.DataSourceProvider.Refresh">
          <source>If the refresh operation fails, the <ph id="ph1">&lt;xref:System.Windows.Data.DataSourceProvider.Data%2A&gt;</ph> property is set to <ph id="ph2">`null`</ph>; the <ph id="ph3">&lt;xref:System.Windows.Data.DataSourceProvider.Error%2A&gt;</ph> property is set with the error exception.</source>
          <target state="translated">更新操作に失敗した場合、<ph id="ph1">&lt;xref:System.Windows.Data.DataSourceProvider.Data%2A&gt;</ph>プロパティに設定されている<ph id="ph2">`null`</ph>;<ph id="ph3">&lt;xref:System.Windows.Data.DataSourceProvider.Error%2A&gt;</ph>プロパティは、エラーの例外。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.DataSourceProvider.Refresh">
          <source>The application can call <ph id="ph1">&lt;xref:System.Windows.Data.DataSourceProvider.Refresh%2A&gt;</ph> while a previous refresh is still underway.</source>
          <target state="translated">アプリケーションが呼び出すことができます<ph id="ph1">&lt;xref:System.Windows.Data.DataSourceProvider.Refresh%2A&gt;</ph>がまだ進行中で、前の更新中にします。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.DataSourceProvider.Refresh">
          <source>Calling <ph id="ph1">&lt;xref:System.Windows.Data.DataSourceProvider.Refresh%2A&gt;</ph> twice raises the <ph id="ph2">&lt;xref:System.Windows.Data.DataSourceProvider.DataChanged&gt;</ph> event twice.</source>
          <target state="translated">呼び出す<ph id="ph1">&lt;xref:System.Windows.Data.DataSourceProvider.Refresh%2A&gt;</ph>2 回発生、<ph id="ph2">&lt;xref:System.Windows.Data.DataSourceProvider.DataChanged&gt;</ph>イベントを 2 回クリックします。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.DataSourceProvider.System#ComponentModel#ISupportInitialize#BeginInit">
          <source>This member supports the <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> infrastructure and is not intended to be used directly from your code.</source>
          <target state="translated">このメンバーは、<ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> インフラストラクチャをサポートしますが、独自に作成したコードから直接使用するためのものではありません。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.DataSourceProvider.System#ComponentModel#ISupportInitialize#EndInit">
          <source>This member supports the <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> infrastructure and is not intended to be used directly from your code.</source>
          <target state="translated">このメンバーは、<ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> インフラストラクチャをサポートしますが、独自に作成したコードから直接使用するためのものではありません。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>