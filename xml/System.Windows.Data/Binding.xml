<Type Name="Binding" FullName="System.Windows.Data.Binding">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b494c904e9e37c94748406bd0f7931b61046db17" />
    <Meta Name="ms.sourcegitcommit" Value="f9e3295b6cc303a611a73a84c4b27f9da792ad0d" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/26/2018" />
    <Meta Name="ms.locfileid" Value="31911084" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Binding : System.Windows.Data.BindingBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Binding extends System.Windows.Data.BindingBase" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.Binding" />
  <TypeSignature Language="VB.NET" Value="Public Class Binding&#xA;Inherits BindingBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class Binding : System::Windows::Data::BindingBase" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Data.BindingBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="f9c1f-101">バインドの定義に高レベルでアクセスします。バインドは、バインド ターゲット オブジェクト (通常は、WPF 要素) のプロパティと任意のデータ ソース (データベース、XML ファイル、データを格納している任意のオブジェクトなど) とを接続します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="f9c1f-101">Provides high-level access to the definition of a binding, which connects the properties of binding target objects (typically, WPF elements), and any data source (for example, a database, an XML file, or any object that contains data).</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]<span data-ttu-id="f9c1f-102"> データ バインディングは、アプリケーションがデータを提示し、データと対話するための簡単で一貫性のある方法を提供します。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-102"> data binding provides a simple and consistent way for applications to present and interact with data.</span></span> <span data-ttu-id="f9c1f-103">データ バインディングでは、2 つのオブジェクトのプロパティの値を同期することができます。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-103">Data binding enables you to synchronize the values of the properties of two different objects.</span></span>  
  
 <span data-ttu-id="f9c1f-104">確立するために、バインディングを使用して、<xref:System.Windows.Data.Binding>クラスまたは他のクラスを継承する 1 つ<xref:System.Windows.Data.BindingBase>です。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-104">To establish a binding, use the <xref:System.Windows.Data.Binding> class or one of the other classes that inherit <xref:System.Windows.Data.BindingBase>.</span></span> <span data-ttu-id="f9c1f-105">どのようなオブジェクトに関係なくをバインドして、データ ソースの種類、各バインディングに依存して次の図に示されているモデル。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-105">Regardless of what object you are binding and the nature of your data source, each binding follows the model illustrated by the following figure.</span></span>  
  
 <span data-ttu-id="f9c1f-106">![基本的なデータ バインディング ダイアグラム](~/add/media/databindingmostbasic.png "基本的なデータ バインディング ダイアグラム")</span><span class="sxs-lookup"><span data-stu-id="f9c1f-106">![Basic data binding diagram](~/add/media/databindingmostbasic.png "Basic data binding diagram")</span></span>  
  
 <span data-ttu-id="f9c1f-107">図で次の基本型を示します[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]データ バインディングの概念です。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-107">The figure demonstrates the following fundamental [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] data binding concepts.</span></span>  
  
-   <span data-ttu-id="f9c1f-108">各バインドは通常これら 4 つのコンポーネントを持つ: バインディング ターゲット オブジェクト、ターゲット プロパティ、バインディング ソースと<xref:System.Windows.Data.Binding.Path%2A>で使用するバインディング ソースの値にします。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-108">Each binding typically has these four components: a binding target object, a target property, a binding source, and a <xref:System.Windows.Data.Binding.Path%2A> to the value in the binding source to use.</span></span> <span data-ttu-id="f9c1f-109">内容をバインドする場合など、 <xref:System.Windows.Controls.TextBox> 、ターゲット オブジェクトは、従業員のオブジェクトのプロパティの名前、 <xref:System.Windows.Controls.TextBox>、target プロパティが、<xref:System.Windows.Controls.TextBox.Text%2A>プロパティを使用する値は、名とソース オブジェクトは、従業員オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-109">For example, if you want to bind the content of a <xref:System.Windows.Controls.TextBox> to the Name property of an Employee object, your target object is the <xref:System.Windows.Controls.TextBox>, the target property is the <xref:System.Windows.Controls.TextBox.Text%2A> property, the value to use is Name, and the source object is the Employee object.</span></span>  
  
-   <span data-ttu-id="f9c1f-110">ターゲット プロパティは、依存関係プロパティである必要があります。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-110">The target property must be a dependency property.</span></span> <span data-ttu-id="f9c1f-111">また、フィールドを連結することはできません。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-111">This also means that you cannot bind a field.</span></span> <span data-ttu-id="f9c1f-112">ほとんどのプロパティの<xref:System.Windows.UIElement>オブジェクトが依存関係プロパティと読み取り専用のものを除く、ほとんどの依存関係プロパティが既定ではデータ バインディングをサポートします。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-112">Most properties of <xref:System.Windows.UIElement> objects are dependency properties and most dependency properties, except read-only ones, support data binding by default.</span></span> <span data-ttu-id="f9c1f-113">(だけ<xref:System.Windows.DependencyObject>依存関係プロパティとそのすべての種類を定義できます<xref:System.Windows.UIElement>オブジェクトから取得<xref:System.Windows.DependencyObject>)。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-113">(Only <xref:System.Windows.DependencyObject> types can define dependency properties and all <xref:System.Windows.UIElement> objects derive from <xref:System.Windows.DependencyObject>.)</span></span>  
  
-   <span data-ttu-id="f9c1f-114">図では指定されていませんが、バインディング ソース オブジェクトはカスタム [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] オブジェクトに制限されないことに注意してください。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-114">Although not specified in the figure, it should be noted that the binding source object is not restricted to being a custom [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] object.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="f9c1f-115"> データ バインディングは、[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] オブジェクトおよび [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] の形式でデータをサポートします。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-115"> data binding supports data in the form of [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] objects and [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)].</span></span> <span data-ttu-id="f9c1f-116">いくつかの例を提供する場合、バインディング ソースがあります、 <xref:System.Windows.UIElement>、任意のリスト オブジェクト、[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]オブジェクトに関連付けられている[!INCLUDE[TLA#tla_adonet](~/includes/tlasharptla-adonet-md.md)]データまたは Web サービス、またはを含む XmlNode、[!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)]データ。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-116">To provide some examples, your binding source may be a <xref:System.Windows.UIElement>, any list object, a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] object that is associated with [!INCLUDE[TLA#tla_adonet](~/includes/tlasharptla-adonet-md.md)] data or Web Services, or an XmlNode that contains your [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] data.</span></span>  
  
 <span data-ttu-id="f9c1f-117">使用して、<xref:System.Windows.Data.Binding.Mode%2A>プロパティをデータ フローの方向を指定します。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-117">Use the <xref:System.Windows.Data.Binding.Mode%2A> property to specify the direction of the data flow.</span></span> <span data-ttu-id="f9c1f-118">一方向または双方向のバインドのソースの変更を検出するために、ソース実装しなければなりませんに適切なプロパティの変更通知のメカニズムなど<xref:System.ComponentModel.INotifyPropertyChanged>です。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-118">To detect source changes in one-way or two-way bindings, the source must implement a suitable property change notification mechanism such as <xref:System.ComponentModel.INotifyPropertyChanged>.</span></span> <span data-ttu-id="f9c1f-119">例については、次を参照してください。[する方法: 実装プロパティの変更通知](~/docs/framework/wpf/data/how-to-implement-property-change-notification.md)です。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-119">For an example, see [How to: Implement Property Change Notification](~/docs/framework/wpf/data/how-to-implement-property-change-notification.md).</span></span> <span data-ttu-id="f9c1f-120"><xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>プロパティは、ソースの更新のタイミングを指定します。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-120">The <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> property specifies the timing of source updates.</span></span> <span data-ttu-id="f9c1f-121">詳細については、「基本的なデータ バインディング概念」を参照してください[データ バインディングの概要](~/docs/framework/wpf/data/data-binding-overview.md)です。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-121">For more information, see "Basic Data Binding Concepts" in [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
<a name="xamlAttributeUsage_PriorityBinding"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="f9c1f-122">XAML 属性の使用方法</span><span class="sxs-lookup"><span data-stu-id="f9c1f-122">XAML Attribute Usage</span></span>  
  
```  
<object property="{Binding  declaration}"/>  
```  
  
<a name="xamlValues_PriorityBinding"></a>   
## <a name="xaml-values"></a><span data-ttu-id="f9c1f-123">XAML 値</span><span class="sxs-lookup"><span data-stu-id="f9c1f-123">XAML Values</span></span>  
 <span data-ttu-id="f9c1f-124">*declaration*</span><span class="sxs-lookup"><span data-stu-id="f9c1f-124">*declaration*</span></span>  
 <span data-ttu-id="f9c1f-125">コンマ (,) で区切られた 0 個以上の属性の割り当て句。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-125">Zero or more attribute-assignment clauses separated by commas (,).</span></span> <span data-ttu-id="f9c1f-126">詳細については、次を参照してください。[マークアップ拡張機能のバインド](~/docs/framework/wpf/advanced/binding-markup-extension.md)または[バインディング宣言の概要](~/docs/framework/wpf/data/binding-declarations-overview.md)です。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-126">For more information, see [Binding Markup Extension](~/docs/framework/wpf/advanced/binding-markup-extension.md) or [Binding Declarations Overview](~/docs/framework/wpf/data/binding-declarations-overview.md).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Data.MultiBinding" />
    <altmember cref="T:System.Windows.Data.PriorityBinding" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f9c1f-127">
            <see cref="T:System.Windows.Data.Binding" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-127">Initializes a new instance of the <see cref="T:System.Windows.Data.Binding" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Binding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Binding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f9c1f-128">
            <see cref="T:System.Windows.Data.Binding" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-128">Initializes a new instance of the <see cref="T:System.Windows.Data.Binding" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Binding (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Binding(System::String ^ path);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="f9c1f-129">バインディングの初期 <see cref="P:System.Windows.Data.Binding.Path" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-129">The initial <see cref="P:System.Windows.Data.Binding.Path" /> for the binding.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9c1f-130">初期パスを指定して、<see cref="T:System.Windows.Data.Binding" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-130">Initializes a new instance of the <see cref="T:System.Windows.Data.Binding" /> class with an initial path.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddSourceUpdatedHandler">
      <MemberSignature Language="C#" Value="public static void AddSourceUpdatedHandler (System.Windows.DependencyObject element, EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddSourceUpdatedHandler(class System.Windows.DependencyObject element, class System.EventHandler`1&lt;class System.Windows.Data.DataTransferEventArgs&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.AddSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddSourceUpdatedHandler (element As DependencyObject, handler As EventHandler(Of DataTransferEventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddSourceUpdatedHandler(System::Windows::DependencyObject ^ element, EventHandler&lt;System::Windows::Data::DataTransferEventArgs ^&gt; ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="f9c1f-131">イベントをリッスンする <see cref="T:System.Windows.UIElement" /> または <see cref="T:System.Windows.ContentElement" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-131">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to the event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="f9c1f-132">追加するハンドラー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-132">The handler to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9c1f-133">
            <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> 添付イベントのハンドラーを追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-133">Adds a handler for the <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9c1f-134">このメソッドはサポートで添付イベントの使用状況[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]です。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-134">This method supports attached event usage in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTargetUpdatedHandler">
      <MemberSignature Language="C#" Value="public static void AddTargetUpdatedHandler (System.Windows.DependencyObject element, EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddTargetUpdatedHandler(class System.Windows.DependencyObject element, class System.EventHandler`1&lt;class System.Windows.Data.DataTransferEventArgs&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.AddTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddTargetUpdatedHandler (element As DependencyObject, handler As EventHandler(Of DataTransferEventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddTargetUpdatedHandler(System::Windows::DependencyObject ^ element, EventHandler&lt;System::Windows::Data::DataTransferEventArgs ^&gt; ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="f9c1f-135">イベントをリッスンする <see cref="T:System.Windows.UIElement" /> または <see cref="T:System.Windows.ContentElement" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-135">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to the event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="f9c1f-136">追加するハンドラー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-136">The handler to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9c1f-137">
            <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> 添付イベントのハンドラーを追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-137">Adds a handler for the <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9c1f-138">このメソッドはサポートで添付イベントの使用状況[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]です。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-138">This method supports attached event usage in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AsyncState">
      <MemberSignature Language="C#" Value="public object AsyncState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object AsyncState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.AsyncState" />
      <MemberSignature Language="VB.NET" Value="Public Property AsyncState As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ AsyncState { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9c1f-139">非同期データ ディスパッチャーに渡される非透過データを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-139">Gets or sets opaque data passed to the asynchronous data dispatcher.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9c1f-140">非同期データ ディスパッチャーに渡されるデータ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-140">Data passed to the asynchronous data dispatcher.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Data.Binding.IsAsync" />
        <altmember cref="P:System.Windows.Data.ObjectDataProvider.IsAsynchronous" />
        <altmember cref="P:System.Windows.Data.XmlDataProvider.IsAsynchronous" />
      </Docs>
    </Member>
    <Member MemberName="BindsDirectlyToSource">
      <MemberSignature Language="C#" Value="public bool BindsDirectlyToSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BindsDirectlyToSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.BindsDirectlyToSource" />
      <MemberSignature Language="VB.NET" Value="Public Property BindsDirectlyToSource As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool BindsDirectlyToSource { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9c1f-141">
            <see cref="P:System.Windows.Data.Binding.Path" /> を評価するときに、データ項目を基準とするか、<see cref="T:System.Windows.Data.DataSourceProvider" /> オブジェクトを基準とするかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-141">Gets or sets a value that indicates whether to evaluate the <see cref="P:System.Windows.Data.Binding.Path" /> relative to the data item or the <see cref="T:System.Windows.Data.DataSourceProvider" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9c1f-142">データ項目自体を基準としてパスを評価する場合は <see langword="false" />。それ以外の場合は <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-142">
              <see langword="false" /> to evaluate the path relative to the data item itself; otherwise, <see langword="true" />.</span>
          </span>
          <span data-ttu-id="f9c1f-143">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-143">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9c1f-144">通常の動作 (ときに、このプロパティは`false`) 用の特別な処理が含まれています<xref:System.Windows.Data.DataSourceProvider>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-144">The normal behavior (when this property is `false`) includes special treatment for <xref:System.Windows.Data.DataSourceProvider> objects.</span></span> <span data-ttu-id="f9c1f-145">この例では、バインディング エンジンが評価される、<xref:System.Windows.Data.Binding.Path%2A>から取得したオブジェクトを基準とした、<xref:System.Windows.Data.DataSourceProvider.Data%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-145">In this case, the binding engine evaluates the <xref:System.Windows.Data.Binding.Path%2A> relative to the object obtained from the <xref:System.Windows.Data.DataSourceProvider.Data%2A> property.</span></span> <span data-ttu-id="f9c1f-146">バインドをさらに、リッスン、<xref:System.Windows.Data.DataSourceProvider.DataChanged>イベントし、それに従って動作します。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-146">In addition, the binding listens for the <xref:System.Windows.Data.DataSourceProvider.DataChanged> event and reacts accordingly.</span></span> <span data-ttu-id="f9c1f-147">このプロパティを設定`true`この動作をオーバーライドしのプロパティへのバインドのアクセスを提供、<xref:System.Windows.Data.DataSourceProvider>オブジェクト自体です。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-147">Setting this property to `true` overrides this behavior and gives the binding access to properties of the <xref:System.Windows.Data.DataSourceProvider> object itself.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Data.ObjectDataProvider" />
        <altmember cref="T:System.Windows.Data.XmlDataProvider" />
      </Docs>
    </Member>
    <Member MemberName="Converter">
      <MemberSignature Language="C#" Value="public System.Windows.Data.IValueConverter Converter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.IValueConverter Converter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.Converter" />
      <MemberSignature Language="VB.NET" Value="Public Property Converter As IValueConverter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::IValueConverter ^ Converter { System::Windows::Data::IValueConverter ^ get(); void set(System::Windows::Data::IValueConverter ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.IValueConverter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9c1f-148">使用するコンバーターを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-148">Gets or sets the converter to use.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9c1f-149">
            <see cref="T:System.Windows.Data.IValueConverter" /> 型の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-149">A value of type <see cref="T:System.Windows.Data.IValueConverter" />.</span>
          </span>
          <span data-ttu-id="f9c1f-150">既定値は、<see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-150">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9c1f-151">バインディングは、元の値とターゲット値の間の型変換を実行しようとする既定のコンバーターを暗黙的に使用します。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-151">A binding implicitly uses a default converter that tries to do a type conversion between the source value and the target value.</span></span> <span data-ttu-id="f9c1f-152">変換を実行できない場合、既定のコンバーターは `null` を返します。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-152">If a conversion cannot be made, the default converter returns `null`.</span></span>  
  
 <span data-ttu-id="f9c1f-153">バインディングにカスタム値コンバーターを関連付ける場合を実装するクラスを作成する必要があります、<xref:System.Windows.Data.IValueConverter>インターフェイスし、実装を提供、<xref:System.Windows.Data.IValueConverter.Convert%2A>と<xref:System.Windows.Data.IValueConverter.ConvertBack%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-153">If you want to associate a custom value converter with a binding, you should create a class that implements the <xref:System.Windows.Data.IValueConverter> interface and supply implementations for the <xref:System.Windows.Data.IValueConverter.Convert%2A> and <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> methods.</span></span> <span data-ttu-id="f9c1f-154">値コンバーターでは、別の 1 つの型にデータを変更する、文字セットなど、カルチャの詳細の間の変換、または、プレゼンテーションの他の側面を変更できます。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-154">Value converters can change data from one type to another, translate between cultural details such as character sets, or modify other aspects of their presentation.</span></span> <span data-ttu-id="f9c1f-155">変換の一般的なシナリオの例については、「データの変換」を参照してください、[データ バインディングの概要](~/docs/framework/wpf/data/data-binding-overview.md)です。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-155">For examples of typical conversion scenarios, see "Data Conversion" in the [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
<a name="xamlAttributeUsage_Converter"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="f9c1f-156">XAML 属性の使用方法</span><span class="sxs-lookup"><span data-stu-id="f9c1f-156">XAML Attribute Usage</span></span>  
  
```  
<object Converter="myConverter"/>  
```  
  
<a name="xamlValues_Converter"></a>   
## <a name="xaml-values"></a><span data-ttu-id="f9c1f-157">XAML 値</span><span class="sxs-lookup"><span data-stu-id="f9c1f-157">XAML Values</span></span>  
 <span data-ttu-id="f9c1f-158">*myConverter*</span><span class="sxs-lookup"><span data-stu-id="f9c1f-158">*myConverter*</span></span>  
 <span data-ttu-id="f9c1f-159">リソース参照を実装するクラスを<xref:System.Windows.Data.IValueConverter>インターフェイスの実装が含まれています、<xref:System.Windows.Data.IValueConverter.Convert%2A>と<xref:System.Windows.Data.IValueConverter.ConvertBack%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-159">A resource reference to a class that implements the <xref:System.Windows.Data.IValueConverter> interface, which includes implementations of the <xref:System.Windows.Data.IValueConverter.Convert%2A> and <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> methods.</span></span> <span data-ttu-id="f9c1f-160">値コンバーター、参照を使用して、 [StaticResource マークアップ拡張機能](~/docs/framework/wpf/advanced/staticresource-markup-extension.md)します。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-160">To refer to a value converter, use the [StaticResource Markup Extension](~/docs/framework/wpf/advanced/staticresource-markup-extension.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConverterCulture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo ConverterCulture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo ConverterCulture" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.ConverterCulture" />
      <MemberSignature Language="VB.NET" Value="Public Property ConverterCulture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ ConverterCulture { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.CultureInfoIetfLanguageTagConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9c1f-161">コンバーターを評価するカルチャを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-161">Gets or sets the culture in which to evaluate the converter.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9c1f-162">既定値は、<see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-162">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9c1f-163">バインディング エンジンを使用してこのプロパティを設定しない場合、`Language`バインディング ターゲット オブジェクトのプロパティです。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-163">If you do not set this property, the binding engine uses the `Language` property of the binding target object.</span></span> <span data-ttu-id="f9c1f-164">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]この既定値は"EN-US"または明示的に設定されている場合、ページのルート要素 (または任意の要素) から値を継承します。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-164">In [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] this defaults to "en-US" or inherits the value from the root element (or any element) of the page, if one has been explicitly set.</span></span>  
  
 <span data-ttu-id="f9c1f-165">データ変換については、データ変換のセクションを参照してください、[データ バインディングの概要](~/docs/framework/wpf/data/data-binding-overview.md)です。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-165">For information about data conversion, see the Data Conversion section in the [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConverterParameter">
      <MemberSignature Language="C#" Value="public object ConverterParameter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ConverterParameter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.ConverterParameter" />
      <MemberSignature Language="VB.NET" Value="Public Property ConverterParameter As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ConverterParameter { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9c1f-166">
            <see cref="P:System.Windows.Data.Binding.Converter" /> に渡すパラメーターを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-166">Gets or sets the parameter to pass to the <see cref="P:System.Windows.Data.Binding.Converter" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9c1f-167">
            <see cref="P:System.Windows.Data.Binding.Converter" /> に渡すパラメーター。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-167">The parameter to pass to the <see cref="P:System.Windows.Data.Binding.Converter" />.</span>
          </span>
          <span data-ttu-id="f9c1f-168">既定値は、<see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-168">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9c1f-169">使用することができます、<xref:System.Windows.Data.Binding.ConverterParameter%2A>プロパティ オブジェクトを変換する方法を指定します。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-169">You can use the <xref:System.Windows.Data.Binding.ConverterParameter%2A> property to specify how an object is converted.</span></span>  <span data-ttu-id="f9c1f-170">このプロパティは、追加の情報をバインディングで使用するコンバーターを渡します。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-170">This property passes additional information to a converter that you use on a binding.</span></span>  <span data-ttu-id="f9c1f-171">指定すると、<xref:System.Windows.Data.Binding.ConverterParameter%2A>に値が渡される、<xref:System.Windows.Data.IValueConverter.Convert%2A>と<xref:System.Windows.Data.IValueConverter.ConvertBack%2A>メソッドとして、`parameter`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-171">When you specify a <xref:System.Windows.Data.Binding.ConverterParameter%2A>, the value is passed to the <xref:System.Windows.Data.IValueConverter.Convert%2A> and <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> methods as the `parameter` parameter.</span></span>  
  
 <span data-ttu-id="f9c1f-172">例については、次を参照してください。[する方法: 値を基にしたバインド品目の一覧を生成](~/docs/framework/wpf/data/how-to-produce-a-value-based-on-a-list-of-bound-items.md)です。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-172">For an example, see [How to: Produce a Value Based on a List of Bound Items](~/docs/framework/wpf/data/how-to-produce-a-value-based-on-a-list-of-bound-items.md).</span></span> <span data-ttu-id="f9c1f-173">実装の例を<xref:System.Windows.Data.IMultiValueConverter>が、使用状況が引き続き適用されます。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-173">That example shows an implementation of an <xref:System.Windows.Data.IMultiValueConverter> but the usage still applies.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DoNothing">
      <MemberSignature Language="C#" Value="public static readonly object DoNothing;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly object DoNothing" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Data.Binding.DoNothing" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DoNothing As Object " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Object ^ DoNothing;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9c1f-174">バインディング エンジンにアクションを実行しないように指示するために、戻り値として使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-174">Used as a returned value to instruct the binding engine not to perform any action.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9c1f-175">バインディング ソース プロパティまたはコンバーターが返すことができます<xref:System.Windows.Data.Binding.DoNothing?displayProperty=nameWithType>バインディング エンジンを任意のアクションを実行しないように指示します。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-175">A binding source property or a converter can return <xref:System.Windows.Data.Binding.DoNothing?displayProperty=nameWithType> to instruct the binding engine not to perform any action.</span></span> <span data-ttu-id="f9c1f-176">例については、値を次に移動しますが、バインディング ターゲットに転送していないバインディング エンジンに指示する<xref:System.Windows.Data.Binding>で、 <xref:System.Windows.Data.PriorityBinding>、使用しないか、`FallBackValue`または既定値です。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-176">For example, to instruct the binding engine not to transfer a value to the binding target, not to move to the next <xref:System.Windows.Data.Binding> in a <xref:System.Windows.Data.PriorityBinding>, or not to use the `FallBackValue` or default value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ElementName">
      <MemberSignature Language="C#" Value="public string ElementName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ElementName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.ElementName" />
      <MemberSignature Language="VB.NET" Value="Public Property ElementName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ElementName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9c1f-177">バインド ソース オブジェクトとして使用する要素の名前を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-177">Gets or sets the name of the element to use as the binding source object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9c1f-178">値、<see langword="Name" />プロパティまたは[X:name ディレクティブ](~/docs/framework/xaml-services/x-name-directive.md)の関心のある要素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-178">The value of the <see langword="Name" /> property or [x:Name Directive](~/docs/framework/xaml-services/x-name-directive.md) of the element of interest.</span>
          </span>
          <span data-ttu-id="f9c1f-179">コード内で要素を参照できるのは、目的の要素が <see langword="RegisterName" /> を使用して適切な <see cref="T:System.Windows.NameScope" /> に登録されている場合に限ります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-179">You can refer to elements in code only if they are registered to the appropriate <see cref="T:System.Windows.NameScope" /> through <see langword="RegisterName" />.</span>
          </span>
          <span data-ttu-id="f9c1f-180">詳細については、次を参照してください。 [WPF XAML 名前スコープ](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md)です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-180">For more information, see [WPF XAML Namescopes](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md).</span>
          </span>
          <span data-ttu-id="f9c1f-181">既定値は、<see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-181">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9c1f-182">このプロパティは、アプリケーションで別の要素のプロパティにバインドするときに便利です。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-182">This property is useful when you want to bind to the property of another element in your application.</span></span> <span data-ttu-id="f9c1f-183">使用する場合など、 <xref:System.Windows.Controls.Slider> 、アプリケーションの他のコントロールの高さを制御する、またはバインドする場合、 <xref:System.Windows.Controls.ContentControl.Content%2A> 、コントロールを<xref:System.Windows.Controls.Primitives.Selector.SelectedValue%2A>のプロパティ、<xref:System.Windows.Controls.ListBox>コントロール。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-183">For example, if you want to use a <xref:System.Windows.Controls.Slider> to control the height of another control in your application, or if you want to bind the <xref:System.Windows.Controls.ContentControl.Content%2A> of your control to the <xref:System.Windows.Controls.Primitives.Selector.SelectedValue%2A> property of your <xref:System.Windows.Controls.ListBox> control.</span></span>  
  
 <span data-ttu-id="f9c1f-184">既定では、バインドがで指定されたデータ コンテキストを継承、`DataContext`いずれかが設定されている場合は、プロパティです。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-184">By default, bindings inherit the data context specified by the `DataContext` property, if one has been set.</span></span> <span data-ttu-id="f9c1f-185">ただし、<xref:System.Windows.Data.Binding.ElementName%2A>プロパティは、のいずれかのソースを明示的に設定することができます、<xref:System.Windows.Data.Binding>し、継承されたデータ コンテキストをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-185">However, the <xref:System.Windows.Data.Binding.ElementName%2A> property is one of the ways you can explicitly set the source of a <xref:System.Windows.Data.Binding> and override the inherited data context.</span></span> <span data-ttu-id="f9c1f-186">詳細については、次を参照してください。[する方法: バインド ソースを指定して](~/docs/framework/wpf/data/how-to-specify-the-binding-source.md)です。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-186">For more information, see [How to: Specify the Binding Source](~/docs/framework/wpf/data/how-to-specify-the-binding-source.md).</span></span>  
  
 <span data-ttu-id="f9c1f-187"><xref:System.Windows.Data.Binding.Source%2A>と<xref:System.Windows.Data.Binding.RelativeSource%2A>のプロパティ、<xref:System.Windows.Data.Binding>クラスも有効にするバインディングのソースの設定を明示的にします。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-187">The <xref:System.Windows.Data.Binding.Source%2A> and <xref:System.Windows.Data.Binding.RelativeSource%2A> properties of the <xref:System.Windows.Data.Binding> class also enable you to set the source of the binding explicitly.</span></span> <span data-ttu-id="f9c1f-188">ただし、3 つのプロパティの 1 つだけ<xref:System.Windows.Data.Binding.ElementName%2A>、 <xref:System.Windows.Data.Binding.Source%2A>、および<xref:System.Windows.Data.Binding.RelativeSource%2A>、する必要がありますセットごとにバインドする、または競合が発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-188">However, only one of the three properties, <xref:System.Windows.Data.Binding.ElementName%2A>, <xref:System.Windows.Data.Binding.Source%2A>, and <xref:System.Windows.Data.Binding.RelativeSource%2A>, should be set for each binding, or a conflict might occur.</span></span> <span data-ttu-id="f9c1f-189">このプロパティは、バインディング ソースの競合がある場合に例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-189">This property throws an exception if there is a binding source conflict.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXmlNamespaceManager">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlNamespaceManager GetXmlNamespaceManager (System.Windows.DependencyObject target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlNamespaceManager GetXmlNamespaceManager(class System.Windows.DependencyObject target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.GetXmlNamespaceManager(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetXmlNamespaceManager (target As DependencyObject) As XmlNamespaceManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlNamespaceManager ^ GetXmlNamespaceManager(System::Windows::DependencyObject ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNamespaceManager</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="f9c1f-190">名前空間情報の取得元となるオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-190">The object from which to get namespace information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9c1f-191">指定したオブジェクトにアタッチされているバインドによって使用される [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] 名前空間マネージャー オブジェクトを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-191">Returns an [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] namespace manager object used by the binding attached to the specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9c1f-192">渡されたオブジェクト要素でのバインディングに関連する [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] 名前空間の表示に使用されるオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-192">A returned object used for viewing [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] namespaces that relate to the binding on the passed object element.</span>
          </span>
          <span data-ttu-id="f9c1f-193">このオブジェクトは、<see cref="T:System.Xml.XmlNamespaceManager" /> としてキャストする必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-193">This object should be cast as <see cref="T:System.Xml.XmlNamespaceManager" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9c1f-194">このメソッドの添付プロパティの使用をサポートする、<xref:System.Windows.Data.Binding.XmlNamespaceManager%2A>添付プロパティ。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-194">This method supports attached property usage for the <xref:System.Windows.Data.Binding.XmlNamespaceManager%2A> attached property.</span></span>  
  
 [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)]<span data-ttu-id="f9c1f-195"> 名前空間マネージャーが、バインドでデータの出所場合にのみ、[!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)]バインディング ソース (<xref:System.Windows.Data.XmlDataProvider>オブジェクト)。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-195"> namespace managers are relevant only if the data in the binding came from an [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] binding source (<xref:System.Windows.Data.XmlDataProvider> object).</span></span>  
  
 <span data-ttu-id="f9c1f-196">名前空間マネージャーが具体的には適用されていない場合、元のデータ ソースを作成または、後で呼び出すことによって<xref:System.Windows.Data.Binding.SetXmlNamespaceManager%2A>バインドで、このメソッドは`null`します。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-196">If a namespace manager was not specifically applied either in the original data source creation or by subsequently calling <xref:System.Windows.Data.Binding.SetXmlNamespaceManager%2A> on the binding, then this method will return `null`.</span></span>  
  
 <span data-ttu-id="f9c1f-197">このメソッドは常に返します`null`バインドの背後にデータがない場合[!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)]です。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-197">This method will always return `null` if the data behind the binding is not [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)].</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9c1f-198">
            <paramref name="target" /> パラメーターとして <see langword="null" /> を使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-198">The <paramref name="target" /> parameter cannot be <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IndexerName">
      <MemberSignature Language="C#" Value="public const string IndexerName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string IndexerName" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Data.Binding.IndexerName" />
      <MemberSignature Language="VB.NET" Value="Public Const IndexerName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ IndexerName;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9c1f-199">
            <see cref="P:System.ComponentModel.PropertyChangedEventArgs.PropertyName" /> の <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> として使用され、インデクサー プロパティが変更されたことを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-199">Used as the <see cref="P:System.ComponentModel.PropertyChangedEventArgs.PropertyName" /> of <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> to indicate that an indexer property has changed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAsync">
      <MemberSignature Language="C#" Value="public bool IsAsync { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAsync" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.IsAsync" />
      <MemberSignature Language="VB.NET" Value="Public Property IsAsync As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAsync { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9c1f-200">
            <see cref="T:System.Windows.Data.Binding" /> が非同期的に値を取得および設定する必要があるかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-200">Gets or sets a value that indicates whether the <see cref="T:System.Windows.Data.Binding" /> should get and set values asynchronously.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9c1f-201">既定値は、<see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-201">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9c1f-202">使用して、<xref:System.Windows.Data.Binding.IsAsync%2A>プロパティと、`get`バインディング ソースのプロパティのアクセサー時間がかかる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-202">Use the <xref:System.Windows.Data.Binding.IsAsync%2A> property when the `get` accessor of your binding source property might take a long time.</span></span> <span data-ttu-id="f9c1f-203">1 つの例は、イメージのプロパティで、 `get` Web からダウンロードするアクセサー。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-203">One example is an image property with a `get` accessor that downloads from the Web.</span></span> <span data-ttu-id="f9c1f-204">設定<xref:System.Windows.Data.Binding.IsAsync%2A>に`true`ブロッキングを回避できます、[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]ダウンロードが実行中にします。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-204">Setting <xref:System.Windows.Data.Binding.IsAsync%2A> to `true` avoids blocking the [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] while the download occurs.</span></span>  
  
 <span data-ttu-id="f9c1f-205">バインディングがレポートに到達する値を待っている間に、 <xref:System.Windows.Data.BindingBase.FallbackValue%2A>、いずれかが使用可能なまたは、バインディングの既定値はターゲット プロパティ。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-205">While waiting for the value to arrive, the binding reports the <xref:System.Windows.Data.BindingBase.FallbackValue%2A>, if one is available, or the default value of the binding target property.</span></span>  
  
 <span data-ttu-id="f9c1f-206">ただしがないことを使用する必要がある多くのシナリオ、<xref:System.Windows.Data.Binding.IsAsync%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-206">However, there should not be many scenarios where you need to use the <xref:System.Windows.Data.Binding.IsAsync%2A> property.</span></span> <span data-ttu-id="f9c1f-207">[!INCLUDE[TLA2#tla_net](~/includes/tla2sharptla-net-md.md)]ガイドライン推奨桁違いフィールド セットよりも低速であるプロパティを定義します。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-207">The [!INCLUDE[TLA2#tla_net](~/includes/tla2sharptla-net-md.md)] guidelines recommend against defining properties that are orders of magnitude slower than a field set would be.</span></span> <span data-ttu-id="f9c1f-208">クラスを作成する場合は、処理以外の操作を非常に遅いことを検討してください、`get`アクセサー、結果をキャッシュします。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-208">When you are creating your class, consider handling extremely slow operations outside of the `get` accessor and caching the result.</span></span> <span data-ttu-id="f9c1f-209">詳細については、次を参照してください。 [NIB: プロパティとの間の選択とメソッド](http://msdn.microsoft.com/library/55825e8f-7e2e-448a-9505-7217cc91b1af)です。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-209">For more information, see [NIB: Choosing Between Properties and Methods](http://msdn.microsoft.com/library/55825e8f-7e2e-448a-9505-7217cc91b1af).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Data.Binding.AsyncState" />
        <altmember cref="P:System.Windows.Data.ObjectDataProvider.IsAsynchronous" />
        <altmember cref="P:System.Windows.Data.XmlDataProvider.IsAsynchronous" />
        <altmember cref="T:System.Windows.PropertyChangedCallback" />
      </Docs>
    </Member>
    <Member MemberName="Mode">
      <MemberSignature Language="C#" Value="public System.Windows.Data.BindingMode Mode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Data.BindingMode Mode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.Mode" />
      <MemberSignature Language="VB.NET" Value="Public Property Mode As BindingMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::BindingMode Mode { System::Windows::Data::BindingMode get(); void set(System::Windows::Data::BindingMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9c1f-210">バインドのデータ フローの方向を示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-210">Gets or sets a value that indicates the direction of the data flow in the binding.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9c1f-211">
            <see cref="T:System.Windows.Data.BindingMode" /> 値のいずれか 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-211">One of the <see cref="T:System.Windows.Data.BindingMode" /> values.</span>
          </span>
          <span data-ttu-id="f9c1f-212">既定値は<see cref="F:System.Windows.Data.BindingMode.Default" />、ターゲット依存関係プロパティの既定のバインド モード値が返されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-212">The default is <see cref="F:System.Windows.Data.BindingMode.Default" />, which returns the default binding mode value of the target dependency property.</span>
          </span>
          <span data-ttu-id="f9c1f-213">ただし、既定値は各依存関係プロパティによって異なります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-213">However, the default value varies for each dependency property.</span>
          </span>
          <span data-ttu-id="f9c1f-214">一般に、ユーザーが編集できる、テキスト ボックスやチェック ボックスなどのコントロール プロパティは既定で双方向のバインディングであり、それ以外のほとんどのプロパティは既定で一方向のバインドになります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-214">In general, user-editable control properties, such as those of text boxes and check boxes, default to two-way bindings, whereas most other properties default to one-way bindings.</span>
          </span>
          <span data-ttu-id="f9c1f-215">依存関係プロパティが既定で一方向と双方向のどちらでバインドされるかをプログラムで判断する 1 つの方法として、<see cref="M:System.Windows.DependencyProperty.GetMetadata(System.Type)" /> を使用してそのプロパティのプロパティ メタデータを取得してから、<see cref="P:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault" /> プロパティのブール値を確認することがきます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-215">A programmatic way to determine whether a dependency property binds one-way or two-way by default is to get the property metadata of the property using <see cref="M:System.Windows.DependencyProperty.GetMetadata(System.Type)" /> and then check the Boolean value of the <see cref="P:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault" /> property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9c1f-216">サポートする<xref:System.Windows.Data.BindingMode.OneWay>と<xref:System.Windows.Data.BindingMode.TwoWay>基になるデータのバインドを実装する必要があります<xref:System.ComponentModel.INotifyPropertyChanged>です。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-216">To support <xref:System.Windows.Data.BindingMode.OneWay> and <xref:System.Windows.Data.BindingMode.TwoWay> bindings, the underlying data must implement <xref:System.ComponentModel.INotifyPropertyChanged>.</span></span> <span data-ttu-id="f9c1f-217">詳細については、「[する方法: 実装プロパティの変更通知](~/docs/framework/wpf/data/how-to-implement-property-change-notification.md)です。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-217">For details, see [How to: Implement Property Change Notification](~/docs/framework/wpf/data/how-to-implement-property-change-notification.md).</span></span>  
  
 <span data-ttu-id="f9c1f-218"><xref:System.Windows.Data.BindingMode.TwoWay>または<xref:System.Windows.Data.BindingMode.OneWayToSource>バインドを設定して、ターゲットからソースへの更新プログラムを制御することができます、<xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-218">For <xref:System.Windows.Data.BindingMode.TwoWay> or <xref:System.Windows.Data.BindingMode.OneWayToSource> bindings, you can control the target-to-source updates by setting the <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> property.</span></span> <span data-ttu-id="f9c1f-219">詳細については、「<xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-219">For more information, see <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>.</span></span>  
  
 <span data-ttu-id="f9c1f-220">異なるバインディング モードの詳細については、次を参照してください。[データ バインディングの概要](~/docs/framework/wpf/data/data-binding-overview.md)です。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-220">For more information on the different binding modes, see [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyOnSourceUpdated">
      <MemberSignature Language="C#" Value="public bool NotifyOnSourceUpdated { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NotifyOnSourceUpdated" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.NotifyOnSourceUpdated" />
      <MemberSignature Language="VB.NET" Value="Public Property NotifyOnSourceUpdated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NotifyOnSourceUpdated { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9c1f-221">バインディング ターゲットからバインディング ソースへ値が転送されたときに、<see cref="E:System.Windows.Data.Binding.SourceUpdated" /> イベントを発生させるかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-221">Gets or sets a value that indicates whether to raise the <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> event when a value is transferred from the binding target to the binding source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9c1f-222">
            <see langword="true" /> 場合、<see cref="E:System.Windows.Data.Binding.SourceUpdated" />バインディング ソースの値が更新された、それ以外の場合は、イベントを発生させるか<see langword="false" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-222">
              <see langword="true" /> if the <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> event should be raised when the binding source value is updated; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="f9c1f-223">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-223">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Data.BindingExpression.UpdateSource" />
      </Docs>
    </Member>
    <Member MemberName="NotifyOnTargetUpdated">
      <MemberSignature Language="C#" Value="public bool NotifyOnTargetUpdated { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NotifyOnTargetUpdated" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.NotifyOnTargetUpdated" />
      <MemberSignature Language="VB.NET" Value="Public Property NotifyOnTargetUpdated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NotifyOnTargetUpdated { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9c1f-224">バインディング ソースからバインディング ターゲットへ値が転送されたときに <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> イベントを発生させるかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-224">Gets or sets a value that indicates whether to raise the <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> event when a value is transferred from the binding source to the binding target.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9c1f-225">
            <see langword="true" /> 場合、<see cref="E:System.Windows.Data.Binding.TargetUpdated" />バインディング ターゲットの値が更新された、それ以外の場合は、イベントを発生させるか<see langword="false" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-225">
              <see langword="true" /> if the <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> event should be raised when the binding target value is updated; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="f9c1f-226">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-226">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Data.BindingExpression.UpdateTarget" />
      </Docs>
    </Member>
    <Member MemberName="NotifyOnValidationError">
      <MemberSignature Language="C#" Value="public bool NotifyOnValidationError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NotifyOnValidationError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.NotifyOnValidationError" />
      <MemberSignature Language="VB.NET" Value="Public Property NotifyOnValidationError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NotifyOnValidationError { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9c1f-227">バインドされたオブジェクトに対して <see cref="E:System.Windows.Controls.Validation.Error" /> 添付イベントを発生させるかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-227">Gets or sets a value that indicates whether to raise the <see cref="E:System.Windows.Controls.Validation.Error" /> attached event on the bound object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9c1f-228">
            <see langword="true" /> 場合、<see cref="E:System.Windows.Controls.Validation.Error" />添付イベントが、それ以外のソースの更新中に検証エラーがあるときにバインドされたオブジェクトに対して発生する必要があります<see langword="false" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-228">
              <see langword="true" /> if the <see cref="E:System.Windows.Controls.Validation.Error" /> attached event should be raised on the bound object when there is a validation error during source updates; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="f9c1f-229">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-229">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9c1f-230">バインディングの場合<xref:System.Windows.Data.Binding.ValidationRules%2A>関連付けられているバインディング エンジンを確認のたびに各規則は、ソース プロパティにターゲット プロパティの値を転送します。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-230">If the binding has <xref:System.Windows.Data.Binding.ValidationRules%2A> associated with it, the binding engine checks each rule each time it transfers the target property value to the source property.</span></span> <span data-ttu-id="f9c1f-231">ルールには、値が無効になります、バインド エンジンを作成します、<xref:System.Windows.Controls.ValidationError>オブジェクトを追加して、<xref:System.Windows.Controls.Validation>です。<xref:System.Windows.Controls.Validation.Errors%2A></span><span class="sxs-lookup"><span data-stu-id="f9c1f-231">If a rule invalidates a value, the binding engine creates a <xref:System.Windows.Controls.ValidationError> object and adds it to the <xref:System.Windows.Controls.Validation>.<xref:System.Windows.Controls.Validation.Errors%2A></span></span> <span data-ttu-id="f9c1f-232">バインドされたオブジェクトのコレクションです。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-232">collection of the bound object.</span></span> <span data-ttu-id="f9c1f-233">ときに、<xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType>プロパティは空でなく、<xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=nameWithType>アタッチされたオブジェクトのプロパティが`true`です。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-233">When the <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> property is not empty, the <xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=nameWithType> attached property of the object is set to `true`.</span></span> <span data-ttu-id="f9c1f-234">場合、<xref:System.Windows.Data.Binding.NotifyOnValidationError%2A>のプロパティ、<xref:System.Windows.Data.Binding>に設定されている`true`、バインディング エンジンが発生し、<xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType>オブジェクトのイベントをアタッチします。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-234">If the <xref:System.Windows.Data.Binding.NotifyOnValidationError%2A> property of the <xref:System.Windows.Data.Binding> is set to `true`, then the binding engine raises the <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> attached event on the object.</span></span>  
  
 <span data-ttu-id="f9c1f-235">検証プロセスの詳細については、データの検証」セクションを参照してください、[データ バインディングの概要](~/docs/framework/wpf/data/data-binding-overview.md)です。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-235">For a detailed discussion of the validation process, see the Data Validation section in the [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public System.Windows.PropertyPath Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.PropertyPath Path" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As PropertyPath" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::PropertyPath ^ Path { System::Windows::PropertyPath ^ get(); void set(System::Windows::PropertyPath ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.PropertyPath</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9c1f-236">バインディング ソース プロパティへのパスを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-236">Gets or sets the path to the binding source property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9c1f-237">バインディング ソース プロパティへのパス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-237">The path to the binding source.</span>
          </span>
          <span data-ttu-id="f9c1f-238">既定値は、<see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-238">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9c1f-239">各バインドは通常これら 4 つのコンポーネントを持つ: バインディング ターゲット オブジェクト、ターゲット プロパティ、バインディング ソース、およびで使用するバインディング ソースの値へのパス。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-239">Each binding typically has these four components: a binding target object, a target property, a binding source, and a path to the value in the binding source to use.</span></span> <span data-ttu-id="f9c1f-240">これらのデータ バインディング概念の詳細については、次を参照してください。[データ バインディングの概要](~/docs/framework/wpf/data/data-binding-overview.md)です。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-240">For more information about these data binding concepts, see [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
 <span data-ttu-id="f9c1f-241">使用して、<xref:System.Windows.Data.Binding.Path%2A>プロパティにバインドするソースの値を指定します。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-241">Use the <xref:System.Windows.Data.Binding.Path%2A> property to specify the source value you want to bind to:</span></span>  
  
-   <span data-ttu-id="f9c1f-242">最も簡単なケースで、<xref:System.Windows.Data.Binding.Path%2A>プロパティの値などを使用して、バインディングのソース オブジェクトのプロパティの名前は、`Path=PropertyName`です。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-242">In the simplest case, the <xref:System.Windows.Data.Binding.Path%2A> property value is the name of the property of the source object to use for the binding, such as `Path=PropertyName`.</span></span>  
  
-   <span data-ttu-id="f9c1f-243">プロパティのサブプロパティは、c# で使用されるような構文で指定できます。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-243">Subproperties of a property can be specified by a syntax similar to that used in C#.</span></span> <span data-ttu-id="f9c1f-244">たとえば、句 `Path=ShoppingCart.Order` は、バインディングをオブジェクトのサブプロパティ `Order` またはプロパティ `ShoppingCart` に設定します。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-244">For instance, the clause `Path=ShoppingCart.Order` sets the binding to the subproperty `Order` of the object or property `ShoppingCart`.</span></span>  
  
-   <span data-ttu-id="f9c1f-245">添付プロパティにバインドするには、添付プロパティをかっこで囲みます。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-245">To bind to an attached property, place parentheses around the attached property.</span></span> <span data-ttu-id="f9c1f-246">例については、添付プロパティをバインドする<xref:System.Windows.Controls.DockPanel.Dock%2A?displayProperty=nameWithType>、構文は`Path=(DockPanel.Dock)`します。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-246">For example, to bind to the attached property <xref:System.Windows.Controls.DockPanel.Dock%2A?displayProperty=nameWithType>, the syntax is `Path=(DockPanel.Dock)`.</span></span>  
  
-   <span data-ttu-id="f9c1f-247">プロパティのインデクサーは、インデクサーが適用されているプロパティ名の後ろの角かっこ内に指定できます。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-247">Indexers of a property can be specified within square brackets following the property name where the indexer is applied.</span></span> <span data-ttu-id="f9c1f-248">たとえば、句 `Path=ShoppingCart[0]` は、プロパティの内部インデックスがリテラル文字列「0」を処理する方法に対応するインデックスへのバインディングを設定します。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-248">For instance, the clause `Path=ShoppingCart[0]` sets the binding to the index that corresponds to how your property's internal indexing handles the literal string "0".</span></span> <span data-ttu-id="f9c1f-249">複数のインデクサーもサポートされます。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-249">Multiple indexers are also supported.</span></span>  
  
-   <span data-ttu-id="f9c1f-250">`Path` 句ではインデクサーとサブプロパティを混在させることができます。例: `Path=ShoppingCart.ShippingInfo[MailingAddress,Street].`</span><span class="sxs-lookup"><span data-stu-id="f9c1f-250">Indexers and subproperties can be mixed in a `Path` clause; for example, `Path=ShoppingCart.ShippingInfo[MailingAddress,Street].`</span></span>  
  
-   <span data-ttu-id="f9c1f-251">インデクサーの内側には、コンマ (,) で区切られた複数のインデクサー パラメーターを設定できます。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-251">Inside indexers you can have multiple indexer parameters separated by commas (,).</span></span> <span data-ttu-id="f9c1f-252">各パラメーターの型は、かっこで指定できます。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-252">The type of each parameter can be specified with parentheses.</span></span> <span data-ttu-id="f9c1f-253">たとえば、ことが`Path="[(sys:Int32)42,(sys:Int32)24]"`ここで、`sys`にマップされて、`System`名前空間。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-253">For example, you can have `Path="[(sys:Int32)42,(sys:Int32)24]"`, where `sys` is mapped to the `System` namespace.</span></span>  
  
-   <span data-ttu-id="f9c1f-254">ソース コレクション ビューがある場合は、スラッシュ (/) を現在の項目を指定できます。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-254">When the source is a collection view, the current item can be specified with a slash (/).</span></span> <span data-ttu-id="f9c1f-255">たとえば、この句`Path=/`ビューの現在のアイテムにバインディングを設定します。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-255">For example, the clause `Path=/` sets the binding to the current item in the view.</span></span> <span data-ttu-id="f9c1f-256">ソースがコレクションである場合は、この構文は、既定のコレクション ビューの現在の項目を指定します。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-256">When the source is a collection, this syntax specifies the current item of the default collection view.</span></span>  
  
-   <span data-ttu-id="f9c1f-257">プロパティは、コレクションを走査するプロパティの名前とスラッシュを組み合わせることができます。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-257">Property names and slashes can be combined to traverse properties that are collections.</span></span> <span data-ttu-id="f9c1f-258">たとえば、`Path=/Offices/ManagerName`を含むソース コレクションの現在の項目を指定します、`Offices`コレクションであるプロパティ。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-258">For example, `Path=/Offices/ManagerName` specifies the current item of the source collection, which contains an `Offices` property that is also a collection.</span></span> <span data-ttu-id="f9c1f-259">現在のアイテムが格納しているオブジェクト、`ManagerName`プロパティです。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-259">Its current item is an object that contains a `ManagerName` property.</span></span>  
  
-   <span data-ttu-id="f9c1f-260">必要に応じて、現在のソースにバインドする、ピリオド (.) のパスを使用できます。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-260">Optionally, a period (.) path can be used to bind to the current source.</span></span> <span data-ttu-id="f9c1f-261">たとえば、`Text="{Binding}"` は、`Text="{Binding Path=.}"` と同じです。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-261">For example, `Text="{Binding}"` is equivalent to `Text="{Binding Path=.}"`.</span></span>  
  
 <span data-ttu-id="f9c1f-262">パスの構文については、次を参照してください。[バインディング宣言の概要](~/docs/framework/wpf/data/binding-declarations-overview.md)または[PropertyPath 構文は XAML](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md)です。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-262">For information about path syntax, see [Binding Declarations Overview](~/docs/framework/wpf/data/binding-declarations-overview.md) or [PropertyPath XAML Syntax](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md).</span></span>  
  
 <span data-ttu-id="f9c1f-263">[!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)]バインド」を参照してください、<xref:System.Windows.Data.Binding.XPath%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-263">For [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] bindings, see the <xref:System.Windows.Data.Binding.XPath%2A> property.</span></span>  
  
 <span data-ttu-id="f9c1f-264">オブジェクト全体にバインドするにを指定する必要はありません、<xref:System.Windows.Data.Binding.Path%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-264">To bind to an entire object, you do not need to specify the <xref:System.Windows.Data.Binding.Path%2A> property.</span></span> <span data-ttu-id="f9c1f-265">詳細についてを参照してください「を指定する、パスに、値」[データ バインディングの概要](~/docs/framework/wpf/data/data-binding-overview.md)です。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-265">For more information, see "Specifying the Path to the Value" in [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9c1f-266">次の例は、スタイルのトリガーを作成する、<xref:System.Windows.Controls.ToolTip>検証エラー メッセージを報告します。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-266">The following example shows a style trigger that creates a <xref:System.Windows.Controls.ToolTip> that reports a validation error message.</span></span> <span data-ttu-id="f9c1f-267">現在のエラーの内容に、set アクセス操作子の値をバインド<xref:System.Windows.Controls.TextBox>(、<xref:System.Windows.Controls.TextBox>スタイルを使用) を使用して、<xref:System.Windows.Data.Binding.RelativeSource%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-267">The value of the setter binds to the error content of the current <xref:System.Windows.Controls.TextBox> (the <xref:System.Windows.Controls.TextBox> using the style) using the <xref:System.Windows.Data.Binding.RelativeSource%2A> property.</span></span> <span data-ttu-id="f9c1f-268">この例の詳細については、次を参照してください。[する方法: バインド検証を実装する](~/docs/framework/wpf/data/how-to-implement-binding-validation.md)です。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-268">For more information on this example, see [How to: Implement Binding Validation](~/docs/framework/wpf/data/how-to-implement-binding-validation.md).</span></span>  
  
 [!code-xaml[BindValidation#5](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/Window1.xaml#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RelativeSource">
      <MemberSignature Language="C#" Value="public System.Windows.Data.RelativeSource RelativeSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.RelativeSource RelativeSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.RelativeSource" />
      <MemberSignature Language="VB.NET" Value="Public Property RelativeSource As RelativeSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::RelativeSource ^ RelativeSource { System::Windows::Data::RelativeSource ^ get(); void set(System::Windows::Data::RelativeSource ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.RelativeSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9c1f-269">バインディング ターゲットの位置に対して相対的な位置を指定することにより、バインディング ソースを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-269">Gets or sets the binding source by specifying its location relative to the position of the binding target.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9c1f-270">A<see cref="T:System.Windows.Data.RelativeSource" />オブジェクトを使用するバインディング ソースの相対的な位置を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-270">A <see cref="T:System.Windows.Data.RelativeSource" /> object specifying the relative location of the binding source to use.</span>
          </span>
          <span data-ttu-id="f9c1f-271">既定値は、<see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-271">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9c1f-272">このプロパティは通常、オブジェクトの 1 つのプロパティは、同一のオブジェクトの別のプロパティにバインドしたり、バインディング、スタイルまたはテンプレートで定義するに使用します。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-272">This property is commonly used to bind one property of an object to another property of the same object, or to define a binding in a style or template.</span></span>  
  
 <span data-ttu-id="f9c1f-273">既定では、バインドがで指定されたデータ コンテキストを継承、`DataContext`いずれかが設定されている場合は、プロパティです。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-273">By default, bindings inherit the data context specified by the `DataContext` property, if one has been set.</span></span> <span data-ttu-id="f9c1f-274">ただし、<xref:System.Windows.Data.Binding.RelativeSource%2A>プロパティは、のいずれかのソースを明示的に設定することができます、<xref:System.Windows.Data.Binding>し、継承されたデータ コンテキストをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-274">However, the <xref:System.Windows.Data.Binding.RelativeSource%2A> property is one of the ways you can explicitly set the source of a <xref:System.Windows.Data.Binding> and override the inherited data context.</span></span> <span data-ttu-id="f9c1f-275">詳細については、次を参照してください。[する方法: バインド ソースを指定して](~/docs/framework/wpf/data/how-to-specify-the-binding-source.md)です。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-275">For more information, see [How to: Specify the Binding Source](~/docs/framework/wpf/data/how-to-specify-the-binding-source.md).</span></span>  
  
 <span data-ttu-id="f9c1f-276"><xref:System.Windows.Data.Binding.ElementName%2A?displayProperty=nameWithType>と<xref:System.Windows.Data.Binding.Source%2A?displayProperty=nameWithType>プロパティも有効にするバインディングのソースの設定を明示的にします。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-276">The <xref:System.Windows.Data.Binding.ElementName%2A?displayProperty=nameWithType> and <xref:System.Windows.Data.Binding.Source%2A?displayProperty=nameWithType> properties also enable you to set the source of the binding explicitly.</span></span> <span data-ttu-id="f9c1f-277">ただし、3 つのプロパティの 1 つだけ<xref:System.Windows.Data.Binding.ElementName%2A>、 <xref:System.Windows.Data.Binding.Source%2A>、および<xref:System.Windows.Data.Binding.RelativeSource%2A>、くださいセットごとにバインドする、または競合が発生することができます。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-277">However, only one of the three properties, <xref:System.Windows.Data.Binding.ElementName%2A>, <xref:System.Windows.Data.Binding.Source%2A>, and <xref:System.Windows.Data.Binding.RelativeSource%2A>, should be set for each binding, or a conflict can occur.</span></span> <span data-ttu-id="f9c1f-278">このプロパティは、バインディング ソースの競合がある場合に例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-278">This property throws an exception if there is a binding source conflict.</span></span>  
  
 <span data-ttu-id="f9c1f-279">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]についてを参照してください[RelativeSource MarkupExtension](~/docs/framework/wpf/advanced/relativesource-markupextension.md)です。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-279">For [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] information, see [RelativeSource MarkupExtension](~/docs/framework/wpf/advanced/relativesource-markupextension.md).</span></span>  
    
## Examples  
 <span data-ttu-id="f9c1f-280">次の例は、スタイルのトリガーを作成する、<xref:System.Windows.Controls.ToolTip>検証エラー メッセージを報告します。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-280">The following example shows a style trigger that creates a <xref:System.Windows.Controls.ToolTip> that reports a validation error message.</span></span> <span data-ttu-id="f9c1f-281">現在のエラーの内容に、set アクセス操作子の値をバインド<xref:System.Windows.Controls.TextBox>(、<xref:System.Windows.Controls.TextBox>スタイルを使用) を使用して、<xref:System.Windows.Data.Binding.RelativeSource%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-281">The value of the setter binds to the error content of the current <xref:System.Windows.Controls.TextBox> (the <xref:System.Windows.Controls.TextBox> using the style) using the <xref:System.Windows.Data.Binding.RelativeSource%2A> property.</span></span> <span data-ttu-id="f9c1f-282">この例の詳細については、次を参照してください。[する方法: バインド検証を実装する](~/docs/framework/wpf/data/how-to-implement-binding-validation.md)です。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-282">For more information on this example, see [How to: Implement Binding Validation](~/docs/framework/wpf/data/how-to-implement-binding-validation.md).</span></span>  
  
 [!code-xaml[BindValidation#5](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/Window1.xaml#5)]  
  
 <span data-ttu-id="f9c1f-283">完全なサンプル コードを参照してください[のバインドの検証のサンプル](http://go.microsoft.com/fwlink/?LinkID=159972)です。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-283">To see the full example, see [Binding Validation Sample](http://go.microsoft.com/fwlink/?LinkID=159972).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Data.Binding.Source" />
      </Docs>
    </Member>
    <Member MemberName="RemoveSourceUpdatedHandler">
      <MemberSignature Language="C#" Value="public static void RemoveSourceUpdatedHandler (System.Windows.DependencyObject element, EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveSourceUpdatedHandler(class System.Windows.DependencyObject element, class System.EventHandler`1&lt;class System.Windows.Data.DataTransferEventArgs&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.RemoveSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveSourceUpdatedHandler (element As DependencyObject, handler As EventHandler(Of DataTransferEventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveSourceUpdatedHandler(System::Windows::DependencyObject ^ element, EventHandler&lt;System::Windows::Data::DataTransferEventArgs ^&gt; ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="f9c1f-284">イベントをリッスンする <see cref="T:System.Windows.UIElement" /> または <see cref="T:System.Windows.ContentElement" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-284">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to the event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="f9c1f-285">削除するハンドラー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-285">The handler to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9c1f-286">
            <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> 添付イベントのハンドラーを削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-286">Removes a handler for the <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9c1f-287">このメソッドはサポートで添付イベントの使用状況[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]です。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-287">This method supports attached event usage in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveTargetUpdatedHandler">
      <MemberSignature Language="C#" Value="public static void RemoveTargetUpdatedHandler (System.Windows.DependencyObject element, EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveTargetUpdatedHandler(class System.Windows.DependencyObject element, class System.EventHandler`1&lt;class System.Windows.Data.DataTransferEventArgs&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.RemoveTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveTargetUpdatedHandler (element As DependencyObject, handler As EventHandler(Of DataTransferEventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveTargetUpdatedHandler(System::Windows::DependencyObject ^ element, EventHandler&lt;System::Windows::Data::DataTransferEventArgs ^&gt; ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="f9c1f-288">イベントをリッスンする <see cref="T:System.Windows.UIElement" /> または <see cref="T:System.Windows.ContentElement" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-288">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to the event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="f9c1f-289">削除するハンドラー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-289">The handler to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9c1f-290">
            <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> 添付イベントのハンドラーを削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-290">Removes a handler for the <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9c1f-291">このメソッドはサポートで添付イベントの使用状況[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]です。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-291">This method supports attached event usage in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetXmlNamespaceManager">
      <MemberSignature Language="C#" Value="public static void SetXmlNamespaceManager (System.Windows.DependencyObject target, System.Xml.XmlNamespaceManager value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetXmlNamespaceManager(class System.Windows.DependencyObject target, class System.Xml.XmlNamespaceManager value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.SetXmlNamespaceManager(System.Windows.DependencyObject,System.Xml.XmlNamespaceManager)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetXmlNamespaceManager (target As DependencyObject, value As XmlNamespaceManager)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetXmlNamespaceManager(System::Windows::DependencyObject ^ target, System::Xml::XmlNamespaceManager ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Xml.XmlNamespaceManager" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="f9c1f-292">名前空間情報の取得元となるオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-292">The object from which to get namespace information.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="f9c1f-293">渡された要素での名前空間の評価に使用する <see cref="T:System.Xml.XmlNamespaceManager" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-293">The <see cref="T:System.Xml.XmlNamespaceManager" /> to use for namespace evaluation in the passed element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9c1f-294">指定した要素にアタッチされているバインドによって使用される名前空間マネージャー オブジェクトを設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-294">Sets a namespace manager object used by the binding attached to the provided element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9c1f-295">このメソッドの添付プロパティの使用をサポートする、<xref:System.Windows.Data.Binding.XmlNamespaceManager%2A>添付プロパティ。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-295">This method supports attached property usage for the <xref:System.Windows.Data.Binding.XmlNamespaceManager%2A> attached property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9c1f-296">
            <paramref name="target" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-296">
              <paramref name="target" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializePath">
      <MemberSignature Language="C#" Value="public bool ShouldSerializePath ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializePath() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.ShouldSerializePath" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializePath () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializePath();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f9c1f-297">
            <see cref="P:System.Windows.Data.Binding.Path" /> プロパティを永続化する必要があるかどうかを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-297">Indicates whether the <see cref="P:System.Windows.Data.Binding.Path" /> property should be persisted.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9c1f-298">プロパティの値が既定値から変更されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-298">
              <see langword="true" /> if the property value has changed from its default; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9c1f-299">これは、`ShouldSerialize`ためメソッドが用意されて、<xref:System.Windows.Data.Binding.Path%2A>プロパティには、単純な既定値にありません。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-299">This `ShouldSerialize` method is provided because the <xref:System.Windows.Data.Binding.Path%2A> property does not have a simple default value.</span></span> <span data-ttu-id="f9c1f-300">このメソッドは、既定値から、プロパティが変更されたかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-300">This method indicates whether the property has changed from its default value.</span></span> <span data-ttu-id="f9c1f-301">いずれかをデザイナーを開発している場合に通常、このメソッドが呼び出す、<xref:System.Windows.Data.Binding>やコントロールを組み込む独自の開発、<xref:System.Windows.Data.Binding>です。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-301">You typically invoke this method if you are either developing a designer for the <xref:System.Windows.Data.Binding> or developing your own control incorporating the <xref:System.Windows.Data.Binding>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeSource">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeSource() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.ShouldSerializeSource" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeSource () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeSource();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f9c1f-302">
            <see cref="P:System.Windows.Data.Binding.Source" /> プロパティを永続化する必要があるかどうかを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-302">Indicates whether the <see cref="P:System.Windows.Data.Binding.Source" /> property should be persisted.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9c1f-303">プロパティの値が既定値から変更されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-303">
              <see langword="true" /> if the property value has changed from its default; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9c1f-304">これは、`ShouldSerialize`ためメソッドが用意されて、<xref:System.Windows.Data.Binding.Source%2A>プロパティには、単純な既定値にありません。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-304">This `ShouldSerialize` method is provided because the <xref:System.Windows.Data.Binding.Source%2A> property does not have a simple default value.</span></span> <span data-ttu-id="f9c1f-305">このメソッドは、既定値から、プロパティが変更されたかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-305">This method indicates whether the property has changed from its default value.</span></span> <span data-ttu-id="f9c1f-306">いずれかをデザイナーを開発している場合に通常、このメソッドが呼び出す、<xref:System.Windows.Data.Binding>やコントロールを組み込む独自の開発、<xref:System.Windows.Data.Binding>です。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-306">You typically invoke this method if you are either developing a designer for the <xref:System.Windows.Data.Binding> or developing your own control incorporating the <xref:System.Windows.Data.Binding>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeValidationRules">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeValidationRules ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeValidationRules() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.ShouldSerializeValidationRules" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeValidationRules () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeValidationRules();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f9c1f-307">
            <see cref="P:System.Windows.Data.Binding.ValidationRules" /> プロパティを永続化する必要があるかどうかを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-307">Indicates whether the <see cref="P:System.Windows.Data.Binding.ValidationRules" /> property should be persisted.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9c1f-308">プロパティの値が既定値から変更されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-308">
              <see langword="true" /> if the property value has changed from its default; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9c1f-309">これは、`ShouldSerialize`ためメソッドが用意されて、<xref:System.Windows.Data.Binding.ValidationRules%2A>プロパティには、単純な既定値にありません。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-309">This `ShouldSerialize` method is provided because the <xref:System.Windows.Data.Binding.ValidationRules%2A> property does not have a simple default value.</span></span> <span data-ttu-id="f9c1f-310">このメソッドは、既定値から、プロパティが変更されたかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-310">This method indicates whether the property has changed from its default value.</span></span> <span data-ttu-id="f9c1f-311">いずれかをデザイナーを開発している場合に通常、このメソッドが呼び出す、<xref:System.Windows.Data.Binding>やコントロールを組み込む独自の開発、<xref:System.Windows.Data.Binding>です。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-311">You typically invoke this method if you are either developing a designer for the <xref:System.Windows.Data.Binding> or developing your own control incorporating the <xref:System.Windows.Data.Binding>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public object Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Source" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.Source" />
      <MemberSignature Language="VB.NET" Value="Public Property Source As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Source { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9c1f-312">バインド ソースとして使用されるオブジェクトを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-312">Gets or sets the object to use as the binding source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9c1f-313">バインド ソースとして使用されるオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-313">The object to use as the binding source.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9c1f-314">既定では、バインドがで指定されたデータ コンテキストを継承、`DataContext`いずれかが設定されている場合は、プロパティです。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-314">By default, bindings inherit the data context specified by the `DataContext` property, if one has been set.</span></span> <span data-ttu-id="f9c1f-315">ただし、<xref:System.Windows.Data.Binding.Source%2A>プロパティは、のいずれかのソースを明示的に設定することができます、<xref:System.Windows.Data.Binding>し、継承されたデータ コンテキストをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-315">However, the <xref:System.Windows.Data.Binding.Source%2A> property is one of the ways you can explicitly set the source of a <xref:System.Windows.Data.Binding> and override the inherited data context.</span></span> <span data-ttu-id="f9c1f-316">いくつかのプロパティは、同じデータ コンテキストを継承でスコープを確立するの機能を必要としない場合は、使用することができます、<xref:System.Windows.Data.Binding.Source%2A>プロパティの代わりに、`DataContext`プロパティです。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-316">If you do not need the functionality of establishing a scope in which several properties inherit the same data context, you can use the <xref:System.Windows.Data.Binding.Source%2A> property instead of the `DataContext` property.</span></span>  
  
 <span data-ttu-id="f9c1f-317"><xref:System.Windows.Data.Binding.ElementName%2A?displayProperty=nameWithType>と<xref:System.Windows.Data.Binding.RelativeSource%2A?displayProperty=nameWithType>プロパティも有効にするバインディングのソースの設定を明示的にします。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-317">The <xref:System.Windows.Data.Binding.ElementName%2A?displayProperty=nameWithType> and <xref:System.Windows.Data.Binding.RelativeSource%2A?displayProperty=nameWithType> properties also enable you to set the source of the binding explicitly.</span></span> <span data-ttu-id="f9c1f-318">ただし、3 つのプロパティの 1 つだけ<xref:System.Windows.Data.Binding.ElementName%2A>、 <xref:System.Windows.Data.Binding.Source%2A>、および<xref:System.Windows.Data.Binding.RelativeSource%2A>、くださいセットごとにバインドする、または競合が発生することができます。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-318">However, only one of the three properties, <xref:System.Windows.Data.Binding.ElementName%2A>, <xref:System.Windows.Data.Binding.Source%2A>, and <xref:System.Windows.Data.Binding.RelativeSource%2A>, should be set for each binding, or a conflict can occur.</span></span> <span data-ttu-id="f9c1f-319">このプロパティは、バインディング ソースの競合がある場合に例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-319">This property throws an exception if there is a binding source conflict.</span></span>  
  
 <span data-ttu-id="f9c1f-320">このプロパティをクリアするには、設定<xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-320">To clear this property, set it to <xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=nameWithType>.</span></span>  
  
<a name="xamlAttributeUsage_Source"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="f9c1f-321">XAML 属性の使用方法</span><span class="sxs-lookup"><span data-stu-id="f9c1f-321">XAML Attribute Usage</span></span>  
  
```  
<object Source="object"/>  
```  
  
<a name="xamlValues_Source"></a>   
## <a name="xaml-values"></a><span data-ttu-id="f9c1f-322">XAML 値</span><span class="sxs-lookup"><span data-stu-id="f9c1f-322">XAML Values</span></span>  
 <span data-ttu-id="f9c1f-323">*object*</span><span class="sxs-lookup"><span data-stu-id="f9c1f-323">*object*</span></span>  
 <span data-ttu-id="f9c1f-324">既存のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-324">An existing object.</span></span> <span data-ttu-id="f9c1f-325">既存のオブジェクトを参照を使用して、 [StaticResource マークアップ拡張機能](~/docs/framework/wpf/advanced/staticresource-markup-extension.md)</span><span class="sxs-lookup"><span data-stu-id="f9c1f-325">To refer to an existing object, use the [StaticResource Markup Extension](~/docs/framework/wpf/advanced/staticresource-markup-extension.md)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9c1f-326">次の例では、`Person`という名前の文字列プロパティを持つオブジェクト`PersonName`で定義されている、`SDKSample`名前空間には、最初の強調表示された行を示します。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-326">The following example uses a `Person` object with a string property named `PersonName` that is defined in the `SDKSample` namespace, as the first highlighted line shows.</span></span> <span data-ttu-id="f9c1f-327">強調表示されたを含む行で、`<src>`要素がインスタンス化、`Person`オブジェクトを`PersonName`のプロパティの値`Joe`です。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-327">In the highlighted line that contains the `<src>` element, it instantiates the `Person` object with a `PersonName` property value of `Joe`.</span></span> <span data-ttu-id="f9c1f-328">これには、`Resources`セクションし、割り当てられている、`x:Key`です。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-328">This is done in the `Resources` section and assigned an `x:Key`.</span></span>  
  
 [!code-xaml[BindingInstantiation](~/samples/snippets/csharp/VS_Snippets_Wpf/SimpleBinding/CSharp/Page1.xaml?highlight=4,9,37)]  
  
 <span data-ttu-id="f9c1f-329">強調表示された行を含む、`<TextBlock>`要素にバインドする方法を示しています、`PersonName`プロパティです。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-329">The highlighted line that contains the `<TextBlock>` elements shows how to bind to the `PersonName` property.</span></span> <span data-ttu-id="f9c1f-330">その結果、 <xref:System.Windows.Controls.TextBlock> "Joe"の値を持つコントロールが表示されます。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-330">As a result, the <xref:System.Windows.Controls.TextBlock> control appears with the value "Joe".</span></span>  
  
 <span data-ttu-id="f9c1f-331">次の例で、<xref:System.Windows.Data.Binding.Source%2A>の値、<xref:System.Windows.Data.Binding>オブジェクトに設定されます、`static`プロパティ<xref:System.Windows.Application.Current%2A?displayProperty=nameWithType>:</span><span class="sxs-lookup"><span data-stu-id="f9c1f-331">In the following example, the <xref:System.Windows.Data.Binding.Source%2A> values of the <xref:System.Windows.Data.Binding> objects are set to the `static` property <xref:System.Windows.Application.Current%2A?displayProperty=nameWithType>:</span></span>  
  
 [!code-xaml[DataBindingLab#ComboBoxMultiBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/AddProductWindow.xaml#comboboxmultibinding)]  
  
 <span data-ttu-id="f9c1f-332">完全な例を参照してください。[データ バインディング デモ](http://go.microsoft.com/fwlink/?LinkID=163703)です。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-332">For the full example, see [Data Binding Demo](http://go.microsoft.com/fwlink/?LinkID=163703).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceUpdated">
      <MemberSignature Language="C#" Value="see AddSourceUpdatedHandler, and RemoveSourceUpdatedHandler" />
      <MemberSignature Language="ILAsm" Value="see AddSourceUpdatedHandler, and RemoveSourceUpdatedHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Data.Binding.SourceUpdated" />
      <MemberSignature Language="VB.NET" Value="see AddSourceUpdatedHandler, and RemoveSourceUpdatedHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceUpdatedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent SourceUpdatedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent SourceUpdatedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Data.Binding.SourceUpdatedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SourceUpdatedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ SourceUpdatedEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9c1f-333">
            <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> 添付イベントを識別します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-333">Identifies the <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetUpdated">
      <MemberSignature Language="C#" Value="see AddTargetUpdatedHandler, and RemoveTargetUpdatedHandler" />
      <MemberSignature Language="ILAsm" Value="see AddTargetUpdatedHandler, and RemoveTargetUpdatedHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Data.Binding.TargetUpdated" />
      <MemberSignature Language="VB.NET" Value="see AddTargetUpdatedHandler, and RemoveTargetUpdatedHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetUpdatedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TargetUpdatedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TargetUpdatedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Data.Binding.TargetUpdatedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TargetUpdatedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TargetUpdatedEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9c1f-334">
            <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> 添付イベントを識別します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-334">Identifies the <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateSourceExceptionFilter">
      <MemberSignature Language="C#" Value="public System.Windows.Data.UpdateSourceExceptionFilterCallback UpdateSourceExceptionFilter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.UpdateSourceExceptionFilterCallback UpdateSourceExceptionFilter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.UpdateSourceExceptionFilter" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateSourceExceptionFilter As UpdateSourceExceptionFilterCallback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::UpdateSourceExceptionFilterCallback ^ UpdateSourceExceptionFilter { System::Windows::Data::UpdateSourceExceptionFilterCallback ^ get(); void set(System::Windows::Data::UpdateSourceExceptionFilterCallback ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.UpdateSourceExceptionFilterCallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9c1f-335">バインディング ソースの値の更新時にバインディング エンジンが検出した例外を処理するためのカスタム ロジックの提供に使用できるハンドラーを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-335">Gets or sets a handler you can use to provide custom logic for handling exceptions that the binding engine encounters during the update of the binding source value.</span>
          </span>
          <span data-ttu-id="f9c1f-336">これは、バインディングに <see cref="T:System.Windows.Controls.ExceptionValidationRule" /> を関連付けている場合にのみ適用できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-336">This is only applicable if you have associated an <see cref="T:System.Windows.Controls.ExceptionValidationRule" /> with your binding.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9c1f-337">バインディング ソースの値の更新時にバインディング エンジンが検出した例外を処理するためのカスタム ロジックを提供するメソッド。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-337">A method that provides custom logic for handling exceptions that the binding engine encounters during the update of the binding source value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9c1f-338"><xref:System.Windows.Controls.ExceptionValidationRule>バインディング ソース プロパティの更新中にスローされる例外をチェックする組み込みの検証規則がします。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-338">The <xref:System.Windows.Controls.ExceptionValidationRule> is a built-in validation rule that checks for exceptions thrown during the update of the binding source property.</span></span> <span data-ttu-id="f9c1f-339">関連付けられている場合、<xref:System.Windows.Controls.ExceptionValidationRule>で、<xref:System.Windows.Data.Binding>オブジェクト、このプロパティを使用してこれらの例外を処理するためのカスタム ロジックを提供するハンドラーを設定することができます。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-339">If you have associated the <xref:System.Windows.Controls.ExceptionValidationRule> with your <xref:System.Windows.Data.Binding> object, you can use this property to set a handler to provide custom logic for handling these exceptions.</span></span> <span data-ttu-id="f9c1f-340">場合、<xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A>が指定されていない、 <xref:System.Windows.Data.Binding>、バインディング エンジンを作成、<xref:System.Windows.Controls.ValidationError>例外を使用し、それを追加、<xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType>バインドされている要素のコレクション。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-340">If an <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A> is not specified on the <xref:System.Windows.Data.Binding>, the binding engine creates a <xref:System.Windows.Controls.ValidationError> with the exception and adds it to the <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> collection of the bound element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9c1f-341"><xref:System.Windows.Controls.TextBox.Text%2A> 、次のプロパティ<xref:System.Windows.Controls.TextBox>データにバインドされて、ソース プロパティ`Age3`型である`int`です。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-341">The <xref:System.Windows.Controls.TextBox.Text%2A> property of the following <xref:System.Windows.Controls.TextBox> is data-bound to a source property `Age3` that is of type `int`.</span></span> <span data-ttu-id="f9c1f-342"><xref:System.Windows.Controls.ExceptionValidationRule> (ときに、ユーザーを整数に変換できない値を入力) などのソース プロパティの更新中にスローされる例外をチェックします。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-342">The <xref:System.Windows.Controls.ExceptionValidationRule> checks for exceptions that are thrown during the update of the source property (such as when the user enters a value that cannot be converted to an integer).</span></span>  
  
 [!code-xaml[BindValidation#tbExceptionFilter](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/Window1.xaml#tbexceptionfilter)]  
  
 <span data-ttu-id="f9c1f-343">これらの例外を処理するためのカスタム ロジックを提供できます。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-343">You can provide custom logic to handle those exceptions.</span></span> <span data-ttu-id="f9c1f-344">次の例を使用する方法を示しています、<xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A>プロパティを設定、<xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>です。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-344">The following example shows how to use the <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A> property to set an <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>.</span></span>  
  
 [!code-csharp[BindValidation#filtercallback](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/Window1.xaml.cs#filtercallback)]  
  
 <span data-ttu-id="f9c1f-345">実装例を次に示します、<xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>です。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-345">The following is an example implementation of an <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>.</span></span>  
  
 [!code-csharp[BindValidation#Handler](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/Window1.xaml.cs#handler)]  
  
 <span data-ttu-id="f9c1f-346"><xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>を返すことも`null`、例外自体、または<xref:System.Windows.Controls.ValidationError>です。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-346">The <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback> can also return `null`, the exception itself, or a <xref:System.Windows.Controls.ValidationError>.</span></span> <span data-ttu-id="f9c1f-347">詳細については、「<xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-347">For more information, see <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>.</span></span>  
  
 <span data-ttu-id="f9c1f-348">サンプル全体については、次を参照してください。[のバインドの検証のサンプル](http://go.microsoft.com/fwlink/?LinkID=159972)です。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-348">For the complete sample, see [Binding Validation Sample](http://go.microsoft.com/fwlink/?LinkID=159972).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateSourceTrigger">
      <MemberSignature Language="C#" Value="public System.Windows.Data.UpdateSourceTrigger UpdateSourceTrigger { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Data.UpdateSourceTrigger UpdateSourceTrigger" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.UpdateSourceTrigger" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateSourceTrigger As UpdateSourceTrigger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::UpdateSourceTrigger UpdateSourceTrigger { System::Windows::Data::UpdateSourceTrigger get(); void set(System::Windows::Data::UpdateSourceTrigger value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.UpdateSourceTrigger</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9c1f-349">バインディング ソースの更新のタイミングを決定する値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-349">Gets or sets a value that determines the timing of binding source updates.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9c1f-350">
            <see cref="T:System.Windows.Data.UpdateSourceTrigger" /> 値のいずれか 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-350">One of the <see cref="T:System.Windows.Data.UpdateSourceTrigger" /> values.</span>
          </span>
          <span data-ttu-id="f9c1f-351">既定値は<see cref="F:System.Windows.Data.UpdateSourceTrigger.Default" />、既定値が返されます<see cref="T:System.Windows.Data.UpdateSourceTrigger" />ターゲット依存関係プロパティの値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-351">The default is <see cref="F:System.Windows.Data.UpdateSourceTrigger.Default" />, which returns the default <see cref="T:System.Windows.Data.UpdateSourceTrigger" /> value of the target dependency property.</span>
          </span>
          <span data-ttu-id="f9c1f-352">ただし、ほとんどの依存関係プロパティの既定値は<see cref="F:System.Windows.Data.UpdateSourceTrigger.PropertyChanged" />中、<see cref="P:System.Windows.Controls.TextBox.Text" />プロパティの既定値を持つ<see cref="F:System.Windows.Data.UpdateSourceTrigger.LostFocus" />します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-352">However, the default value for most dependency properties is <see cref="F:System.Windows.Data.UpdateSourceTrigger.PropertyChanged" />, while the <see cref="P:System.Windows.Controls.TextBox.Text" /> property has a default value of <see cref="F:System.Windows.Data.UpdateSourceTrigger.LostFocus" />.</span>
          </span>
          <span data-ttu-id="f9c1f-353">既定値を決定するプログラムによる方法<see cref="P:System.Windows.Data.Binding.UpdateSourceTrigger" />のプロパティを使用して、プロパティ メタデータを取得する依存関係プロパティの値は、<see cref="M:System.Windows.DependencyProperty.GetMetadata(System.Type)" />の値を確認し、<see cref="P:System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger" />プロパティです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-353">A programmatic way to determine the default <see cref="P:System.Windows.Data.Binding.UpdateSourceTrigger" /> value of a dependency property is to get the property metadata of the property using <see cref="M:System.Windows.DependencyProperty.GetMetadata(System.Type)" /> and then check the value of the <see cref="P:System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger" /> property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9c1f-354">バインドを<xref:System.Windows.Data.BindingMode.TwoWay>または<xref:System.Windows.Data.BindingMode.OneWayToSource>ターゲット プロパティの変更をリッスンし、それらをソースに反映します。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-354">Bindings that are <xref:System.Windows.Data.BindingMode.TwoWay> or <xref:System.Windows.Data.BindingMode.OneWayToSource> listen for changes in the target property and propagate them back to the source.</span></span> <span data-ttu-id="f9c1f-355">これは、ソースの更新と呼ばれます。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-355">This is known as updating the source.</span></span> <span data-ttu-id="f9c1f-356">通常、これらの更新プログラムは、ターゲット プロパティが変更されるたびに発生します。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-356">Usually, these updates happen whenever the target property changes.</span></span> <span data-ttu-id="f9c1f-357">これは、チェック ボックスおよびその他の単純なコントロールの問題が、通常ありませんテキスト フィールドに対する適切です。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-357">This is fine for check boxes and other simple controls, but it is usually not appropriate for text fields.</span></span> <span data-ttu-id="f9c1f-358">すべてキーストロークにパフォーマンスが低下することができ、backspace キーし、新しい値をコミットする前に入力ミスを修正する通常の営業案件のユーザーを拒否に更新しています。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-358">Updating after every keystroke can diminish performance and it denies the user the usual opportunity to backspace and fix typing errors before committing to the new value.</span></span> <span data-ttu-id="f9c1f-359">既定ではそのため、<xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>の値、<xref:System.Windows.Controls.TextBox.Text%2A>プロパティは<xref:System.Windows.Data.UpdateSourceTrigger.LostFocus>および not<xref:System.Windows.Data.UpdateSourceTrigger.PropertyChanged>です。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-359">Therefore, the default <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> value of the <xref:System.Windows.Controls.TextBox.Text%2A> property is <xref:System.Windows.Data.UpdateSourceTrigger.LostFocus> and not <xref:System.Windows.Data.UpdateSourceTrigger.PropertyChanged>.</span></span>  
  
 <span data-ttu-id="f9c1f-360">設定した場合、<xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>値<xref:System.Windows.Data.UpdateSourceTrigger.Explicit>、呼び出す必要があります、<xref:System.Windows.Data.BindingExpression.UpdateSource%2A>メソッドまたは変更がソースに反映されません。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-360">If you set the <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> value to <xref:System.Windows.Data.UpdateSourceTrigger.Explicit>, you must call the <xref:System.Windows.Data.BindingExpression.UpdateSource%2A> method or the changes will not propagate back to the source.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Data.Binding.Mode" />
      </Docs>
    </Member>
    <Member MemberName="ValidatesOnDataErrors">
      <MemberSignature Language="C#" Value="public bool ValidatesOnDataErrors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidatesOnDataErrors" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.ValidatesOnDataErrors" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidatesOnDataErrors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidatesOnDataErrors { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9c1f-361">
            <see cref="T:System.Windows.Controls.DataErrorValidationRule" /> を含めるかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-361">Gets or sets a value that indicates whether to include the <see cref="T:System.Windows.Controls.DataErrorValidationRule" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9c1f-362">
            <see cref="T:System.Windows.Controls.DataErrorValidationRule" /> を含める場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-362">
              <see langword="true" /> to include the <see cref="T:System.Windows.Controls.DataErrorValidationRule" />; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9c1f-363">このプロパティを設定すると、使用する代わりに、<xref:System.Windows.Controls.DataErrorValidationRule>要素に明示的にします。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-363">Setting this property provides an alternative to using the <xref:System.Windows.Controls.DataErrorValidationRule> element explicitly.</span></span> <span data-ttu-id="f9c1f-364"><xref:System.Windows.Controls.DataErrorValidationRule>によって発生するエラーをチェックする組み込みの検証規則は、<xref:System.ComponentModel.IDataErrorInfo>ソース オブジェクトの実装です。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-364">The <xref:System.Windows.Controls.DataErrorValidationRule> is a built-in validation rule that checks for errors that are raised by the <xref:System.ComponentModel.IDataErrorInfo> implementation of the source object.</span></span> <span data-ttu-id="f9c1f-365">バインディング エンジンが作成する場合は、エラーが発生すると、 <xref:System.Windows.Controls.ValidationError> 、エラーのために追加し、<xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType>バインドされている要素のコレクション。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-365">If an error is raised, the binding engine creates a <xref:System.Windows.Controls.ValidationError> with the error and adds it to the <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> collection of the bound element.</span></span> <span data-ttu-id="f9c1f-366">エラーがないことを別のルールが検証の問題が発生しない限り、この検証フィードバックを消去します。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-366">The lack of an error clears this validation feedback, unless another rule raises a validation issue.</span></span>  
  
 <span data-ttu-id="f9c1f-367"><xref:System.Windows.Data.Binding.ValidatesOnDataErrors%2A> .NET Framework version 3.5 で導入されました。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-367"><xref:System.Windows.Data.Binding.ValidatesOnDataErrors%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="f9c1f-368">詳細については、「[.NET Framework のバージョンおよび依存関係](~/docs/framework/migration-guide/versions-and-dependencies.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-368">For more information, see [.NET Framework Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9c1f-369">次の例では<xref:System.ComponentModel.IDataErrorInfo>と<xref:System.Windows.Data.Binding.ValidatesOnDataErrors%2A>におけるユーザー入力を検証する、<xref:System.Windows.Controls.TextBox>です。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-369">The following examples uses <xref:System.ComponentModel.IDataErrorInfo> and <xref:System.Windows.Data.Binding.ValidatesOnDataErrors%2A> to validate user input in a <xref:System.Windows.Controls.TextBox>.</span></span> <span data-ttu-id="f9c1f-370">最初の例では、データ型を実装する<xref:System.ComponentModel.IDataErrorInfo>検証エラーを報告します。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-370">The first example creates a data type that implements <xref:System.ComponentModel.IDataErrorInfo> to report validation errors.</span></span>  
  
 [!code-csharp[BindingValidationAttributesSnippets#IDataErrorInfoData](~/samples/snippets/csharp/VS_Snippets_Wpf/bindingvalidationattributessnippets/csharp/data.cs#idataerrorinfodata)]
 [!code-vb[BindingValidationAttributesSnippets#IDataErrorInfoData](~/samples/snippets/visualbasic/VS_Snippets_Wpf/bindingvalidationattributessnippets/visualbasic/window1.xaml.vb#idataerrorinfodata)]  
  
 <span data-ttu-id="f9c1f-371">次の例ではバインド、`Age`プロパティを<xref:System.Windows.Controls.TextBox>設定と<xref:System.Windows.Data.Binding.ValidatesOnDataErrors%2A>に`true`上、<xref:System.Windows.Data.Binding>です。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-371">The following example binds the `Age` property to the <xref:System.Windows.Controls.TextBox> and sets <xref:System.Windows.Data.Binding.ValidatesOnDataErrors%2A> to `true` on the <xref:System.Windows.Data.Binding>.</span></span>  <span data-ttu-id="f9c1f-372">無効な値を入力するに赤い枠線が表示されます。、<xref:System.Windows.Controls.TextBox>と<xref:System.Windows.Controls.ToolTip>エラー メッセージを報告します。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-372">When the user enters an invalid value, a red border appears in the <xref:System.Windows.Controls.TextBox> and the <xref:System.Windows.Controls.ToolTip> reports the error message.</span></span>  
  
 [!code-xaml[BindingValidationAttributesSnippets#IDataErrorInfoXaml](~/samples/snippets/csharp/VS_Snippets_Wpf/bindingvalidationattributessnippets/csharp/window1.xaml#idataerrorinfoxaml)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Data.Binding.ValidatesOnExceptions" />
      </Docs>
    </Member>
    <Member MemberName="ValidatesOnExceptions">
      <MemberSignature Language="C#" Value="public bool ValidatesOnExceptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidatesOnExceptions" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.ValidatesOnExceptions" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidatesOnExceptions As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidatesOnExceptions { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9c1f-373">
            <see cref="T:System.Windows.Controls.ExceptionValidationRule" /> を含めるかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-373">Gets or sets a value that indicates whether to include the <see cref="T:System.Windows.Controls.ExceptionValidationRule" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9c1f-374">
            <see cref="T:System.Windows.Controls.ExceptionValidationRule" /> を含める場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-374">
              <see langword="true" /> to include the <see cref="T:System.Windows.Controls.ExceptionValidationRule" />; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9c1f-375">このプロパティを設定すると、使用する代わりに、<xref:System.Windows.Controls.ExceptionValidationRule>要素に明示的にします。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-375">Setting this property provides an alternative to using the <xref:System.Windows.Controls.ExceptionValidationRule> element explicitly.</span></span> <span data-ttu-id="f9c1f-376"><xref:System.Windows.Controls.ExceptionValidationRule>ソース プロパティの更新中にスローされる例外をチェックする組み込みの検証ルールです。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-376">The <xref:System.Windows.Controls.ExceptionValidationRule> is a built-in validation rule that checks for exceptions that are thrown during the update of the source property.</span></span> <span data-ttu-id="f9c1f-377">バインディング エンジンが作成、例外がスローされた場合、<xref:System.Windows.Controls.ValidationError>例外を使用し、それを追加、<xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType>バインドされている要素のコレクション。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-377">If an exception is thrown, the binding engine creates a <xref:System.Windows.Controls.ValidationError> with the exception and adds it to the <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> collection of the bound element.</span></span> <span data-ttu-id="f9c1f-378">エラーがないことを別のルールが検証の問題が発生しない限り、この検証フィードバックを消去します。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-378">The lack of an error clears this validation feedback, unless another rule raises a validation issue.</span></span>  
  
 <span data-ttu-id="f9c1f-379"><xref:System.Windows.Data.Binding.ValidatesOnExceptions%2A> .NET Framework version 3.5 で導入されました。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-379"><xref:System.Windows.Data.Binding.ValidatesOnExceptions%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="f9c1f-380">詳細については、「[.NET Framework のバージョンおよび依存関係](~/docs/framework/migration-guide/versions-and-dependencies.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-380">For more information, see [.NET Framework Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9c1f-381">次の例を使用して<xref:System.Windows.Data.Binding.ValidatesOnExceptions%2A>におけるユーザー入力を検証する、<xref:System.Windows.Controls.TextBox>です。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-381">The following examples use <xref:System.Windows.Data.Binding.ValidatesOnExceptions%2A> to validate user input in a <xref:System.Windows.Controls.TextBox>.</span></span> <span data-ttu-id="f9c1f-382">最初の例は例外をスローするデータ型を作成するときに、`Age`プロパティが無効なプロパティに設定します。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-382">The first example creates a data type that throws an exception when the `Age` property is set to an invalid property.</span></span>  
  
 [!code-csharp[BindingValidationAttributesSnippets#ThrowExceptionData](~/samples/snippets/csharp/VS_Snippets_Wpf/bindingvalidationattributessnippets/csharp/data.cs#throwexceptiondata)]
 [!code-vb[BindingValidationAttributesSnippets#ThrowExceptionData](~/samples/snippets/visualbasic/VS_Snippets_Wpf/bindingvalidationattributessnippets/visualbasic/window1.xaml.vb#throwexceptiondata)]  
  
 <span data-ttu-id="f9c1f-383">次の例ではバインド、`Age`プロパティを<xref:System.Windows.Controls.TextBox>設定と<xref:System.Windows.Data.Binding.ValidatesOnExceptions%2A>に`true`上、<xref:System.Windows.Data.Binding>です。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-383">The following example binds the `Age` property to the <xref:System.Windows.Controls.TextBox> and sets <xref:System.Windows.Data.Binding.ValidatesOnExceptions%2A> to `true` on the <xref:System.Windows.Data.Binding>.</span></span> <span data-ttu-id="f9c1f-384">無効な値を入力するに赤い枠線が表示されます。、<xref:System.Windows.Controls.TextBox>と<xref:System.Windows.Controls.ToolTip>エラー メッセージを報告します。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-384">When the user enters an invalid value, a red border appears in the <xref:System.Windows.Controls.TextBox> and the <xref:System.Windows.Controls.ToolTip> reports the error message.</span></span>  
  
 [!code-xaml[BindingValidationAttributesSnippets#ThrowExceptionXaml](~/samples/snippets/csharp/VS_Snippets_Wpf/bindingvalidationattributessnippets/csharp/window1.xaml#throwexceptionxaml)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Data.Binding.ValidatesOnDataErrors" />
      </Docs>
    </Member>
    <Member MemberName="ValidatesOnNotifyDataErrors">
      <MemberSignature Language="C#" Value="public bool ValidatesOnNotifyDataErrors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidatesOnNotifyDataErrors" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.ValidatesOnNotifyDataErrors" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidatesOnNotifyDataErrors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidatesOnNotifyDataErrors { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9c1f-385">
            <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" /> を含めるかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-385">Gets or sets a value that indicates whether to include the <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9c1f-386">
            <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" /> を含める場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-386">
              <see langword="true" /> to include the <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="f9c1f-387">既定値は、<see langword="true" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-387">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9c1f-388">ときに<xref:System.Windows.Data.Binding.ValidatesOnNotifyDataErrors%2A>は`true`、バインディングが確認され、実装するデータ ソースで発生したエラーを報告<xref:System.ComponentModel.INotifyDataErrorInfo>です。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-388">When <xref:System.Windows.Data.Binding.ValidatesOnNotifyDataErrors%2A> is `true`, the binding checks for and reports errors that are raised by a data source that implements <xref:System.ComponentModel.INotifyDataErrorInfo>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationRules">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Windows.Controls.ValidationRule&gt; ValidationRules { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Windows.Controls.ValidationRule&gt; ValidationRules" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.ValidationRules" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValidationRules As Collection(Of ValidationRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Windows::Controls::ValidationRule ^&gt; ^ ValidationRules { System::Collections::ObjectModel::Collection&lt;System::Windows::Controls::ValidationRule ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Windows.Controls.ValidationRule&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9c1f-389">ユーザー入力の有効性をチェックする規則のコレクションを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-389">Gets a collection of rules that check the validity of the user input.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9c1f-390">
            <see cref="T:System.Windows.Controls.ValidationRule" /> オブジェクトのコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-390">A collection of <see cref="T:System.Windows.Controls.ValidationRule" /> objects.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9c1f-391">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]データ バインディング モデルを使用すると、関連付ける<xref:System.Windows.Data.Binding.ValidationRules%2A>で、<xref:System.Windows.Data.Binding>または<xref:System.Windows.Data.MultiBinding>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-391">The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] data binding model enables you to associate <xref:System.Windows.Data.Binding.ValidationRules%2A> with your <xref:System.Windows.Data.Binding> or <xref:System.Windows.Data.MultiBinding> object.</span></span> <span data-ttu-id="f9c1f-392">派生することによってカスタム ルールを作成することができます、<xref:System.Windows.Controls.ValidationRule>クラスと実装、<xref:System.Windows.Controls.ValidationRule.Validate%2A>メソッドを使用するか、組み込み<xref:System.Windows.Controls.ExceptionValidationRule>ソースの更新中に例外がある場合、値が無効になります。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-392">You can create custom rules by deriving from the <xref:System.Windows.Controls.ValidationRule> class and implementing the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method, or you can use the built-in <xref:System.Windows.Controls.ExceptionValidationRule>, which invalidates a value if there are exceptions during source updates.</span></span>  
  
 <span data-ttu-id="f9c1f-393">バインディング エンジンは、それぞれチェック<xref:System.Windows.Controls.ValidationRule>たびに、入力値 (バインディング ターゲット プロパティの値) が転送されるバインディング ソース プロパティへのバインドに関連付けられています。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-393">The binding engine checks each <xref:System.Windows.Controls.ValidationRule> associated with a binding each time an input value (the binding target property value) is transferred to the binding source property.</span></span> <span data-ttu-id="f9c1f-394">検証プロセスの詳細については、データの検証」セクションを参照してください、[データ バインディングの概要](~/docs/framework/wpf/data/data-binding-overview.md)です。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-394">For a detailed discussion of the validation process, see the Data Validation section in the [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f9c1f-395">このプロパティを設定できます[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]に示すコレクション構文を使用してのみか、コレクション オブジェクトにアクセスしてなどのさまざまなメソッドを使用して`Add`です。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-395">This property can be set in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] only by using the collection syntax shown, or by accessing the collection object and using its various methods, such as `Add`.</span></span> <span data-ttu-id="f9c1f-396">コレクション オブジェクトにアクセスするプロパティは、コレクション自体は読み取り/書き込みは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-396">The property to access the collection object is read-only, whereas the collection itself is read-write.</span></span>  
  
<a name="xamlPropertyElementUsage_ValidationRules"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="f9c1f-397">XAML プロパティ要素の使用</span><span class="sxs-lookup"><span data-stu-id="f9c1f-397">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <object.ValidationRules>  
    oneOrMoreValidationRules  
  </object.ValidationRules>  
</object>  
  
```  
  
<a name="xamlValues_ValidationRules"></a>   
## <a name="xaml-values"></a><span data-ttu-id="f9c1f-398">XAML 値</span><span class="sxs-lookup"><span data-stu-id="f9c1f-398">XAML Values</span></span>  
 <span data-ttu-id="f9c1f-399">*oneOrMoreValidationRules*</span><span class="sxs-lookup"><span data-stu-id="f9c1f-399">*oneOrMoreValidationRules*</span></span>  
 <span data-ttu-id="f9c1f-400">1 つまたは複数<xref:System.Windows.Controls.ValidationRule>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-400">One or more <xref:System.Windows.Controls.ValidationRule> objects.</span></span> <span data-ttu-id="f9c1f-401">使用することができます、<xref:System.Windows.Controls.ExceptionValidationRule>クラスまたはサブクラス化してカスタム規則を作成、<xref:System.Windows.Controls.ValidationRule>クラスです。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-401">You can use the <xref:System.Windows.Controls.ExceptionValidationRule> class or create custom rules by subclassing the <xref:System.Windows.Controls.ValidationRule> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.Validation" />
      </Docs>
    </Member>
    <Member MemberName="XmlNamespaceManager">
      <MemberSignature Language="C#" Value="see GetXmlNamespaceManager, and SetXmlNamespaceManager" />
      <MemberSignature Language="ILAsm" Value="see GetXmlNamespaceManager, and SetXmlNamespaceManager" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.XmlNamespaceManager" />
      <MemberSignature Language="VB.NET" Value="see GetXmlNamespaceManager, and SetXmlNamespaceManager" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlNamespaceManagerProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty XmlNamespaceManagerProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty XmlNamespaceManagerProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Data.Binding.XmlNamespaceManagerProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly XmlNamespaceManagerProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ XmlNamespaceManagerProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9c1f-402">
            <see cref="P:System.Windows.Data.Binding.XmlNamespaceManager" /> 添付プロパティを識別します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-402">Identifies the <see cref="P:System.Windows.Data.Binding.XmlNamespaceManager" /> attached property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XPath">
      <MemberSignature Language="C#" Value="public string XPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XPath" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.XPath" />
      <MemberSignature Language="VB.NET" Value="Public Property XPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ XPath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9c1f-403">使用する [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] バインディング ソースの値を返す <see langword="XPath" /> クエリーを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-403">Gets or sets an <see langword="XPath" /> query that returns the value on the [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] binding source to use.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9c1f-404">
            <see langword="XPath" /> クエリ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-404">The <see langword="XPath" /> query.</span>
          </span>
          <span data-ttu-id="f9c1f-405">既定値は、<see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9c1f-405">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9c1f-406">バインディング ソースの場合は[!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)]の代わりにデータ、[!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]オブジェクト、<xref:System.Windows.Data.Binding.XPath%2A>の代わりにプロパティを使用して、<xref:System.Windows.Data.Binding.Path%2A>を使用するバインディング ソースの値にパスを示すプロパティです。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-406">When the binding source is [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] data instead of a [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] object, the <xref:System.Windows.Data.Binding.XPath%2A> property is used instead of the <xref:System.Windows.Data.Binding.Path%2A> property to indicate the path to the value on the binding source to use.</span></span>  
  
 <span data-ttu-id="f9c1f-407">設定して、<xref:System.Windows.Data.Binding.XPath%2A>プロパティを作成する、`XPath`ノードまたはノードのコレクションを選択するクエリ (<xref:System.Xml.XmlElement?displayProperty=nameWithType>と<xref:System.Xml.XmlAttribute?displayProperty=nameWithType>から派生両方<xref:System.Xml.XmlNode?displayProperty=nameWithType>)。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-407">By setting the <xref:System.Windows.Data.Binding.XPath%2A> property, you are creating an `XPath` query to select a node or a collection of nodes (<xref:System.Xml.XmlElement?displayProperty=nameWithType> and <xref:System.Xml.XmlAttribute?displayProperty=nameWithType> both derive from <xref:System.Xml.XmlNode?displayProperty=nameWithType>).</span></span> <span data-ttu-id="f9c1f-408"><xref:System.Xml.XmlNode?displayProperty=nameWithType> [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]オブジェクトを使用してそのプロパティにバインドすることができます、<xref:System.Windows.Data.Binding.Path%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-408"><xref:System.Xml.XmlNode?displayProperty=nameWithType> is a [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] object, which means you can bind to its properties using the <xref:System.Windows.Data.Binding.Path%2A> property.</span></span>  
  
 <span data-ttu-id="f9c1f-409"><xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=nameWithType>メソッド ハンドル、`XPath`式から、<xref:System.Windows.Data.Binding.XPath%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-409">The <xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=nameWithType> method handles the `XPath` expressions from the <xref:System.Windows.Data.Binding.XPath%2A> property.</span></span> <span data-ttu-id="f9c1f-410">`XPath` 関数はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-410">`XPath` functions are not supported.</span></span> <span data-ttu-id="f9c1f-411">`XPath`式についてを参照してください、<xref:System.Xml.XmlNode.SelectNodes%2A>ドキュメントと例」のセクションで提供されるいくつかの例です。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-411">For `XPath` expression information, see the <xref:System.Xml.XmlNode.SelectNodes%2A> documentation and some examples provided in the Example section.</span></span>  
  
 <span data-ttu-id="f9c1f-412">LINQ to XML オブジェクト<xref:System.Xml.Linq.XDocument>と<xref:System.Xml.Linq.XElement>を使わない`XPath`です。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-412">LINQ to XML objects <xref:System.Xml.Linq.XDocument> and <xref:System.Xml.Linq.XElement> do not use `XPath`.</span></span> <span data-ttu-id="f9c1f-413">詳細については、「[する方法: XML クエリ結果を XDocument XElement、または LINQ バインド](~/docs/framework/wpf/data/how-to-bind-to-xdocument-xelement-or-linq-for-xml-query-results.md)です。</span><span class="sxs-lookup"><span data-stu-id="f9c1f-413">For details, see [How to: Bind to XDocument, XElement, or LINQ for XML Query Results](~/docs/framework/wpf/data/how-to-bind-to-xdocument-xelement-or-linq-for-xml-query-results.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>