<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Binding.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-81070f4" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1e344e59-9d8e-481b-978a-09f2e01be86cb494c904e9e37c94748406bd0f7931b61046db17.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b494c904e9e37c94748406bd0f7931b61046db17</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f9e3295b6cc303a611a73a84c4b27f9da792ad0d</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/26/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Data.Binding">
          <source>Provides high-level access to the definition of a binding, which connects the properties of binding target objects (typically, WPF elements), and any data source (for example, a database, an XML file, or any object that contains data).</source>
          <target state="translated">バインドの定義に高レベルでアクセスします。バインドは、バインド ターゲット オブジェクト (通常は、WPF 要素) のプロパティと任意のデータ ソース (データベース、XML ファイル、データを格納している任意のオブジェクトなど) とを接続します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.Binding">
          <source><ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> data binding provides a simple and consistent way for applications to present and interact with data.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> データ バインディングは、アプリケーションがデータを提示し、データと対話するための簡単で一貫性のある方法を提供します。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.Binding">
          <source>Data binding enables you to synchronize the values of the properties of two different objects.</source>
          <target state="translated">データ バインディングでは、2 つのオブジェクトのプロパティの値を同期することができます。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.Binding">
          <source>To establish a binding, use the <ph id="ph1">&lt;xref:System.Windows.Data.Binding&gt;</ph> class or one of the other classes that inherit <ph id="ph2">&lt;xref:System.Windows.Data.BindingBase&gt;</ph>.</source>
          <target state="translated">確立するために、バインディングを使用して、<ph id="ph1">&lt;xref:System.Windows.Data.Binding&gt;</ph>クラスまたは他のクラスを継承する 1 つ<ph id="ph2">&lt;xref:System.Windows.Data.BindingBase&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.Binding">
          <source>Regardless of what object you are binding and the nature of your data source, each binding follows the model illustrated by the following figure.</source>
          <target state="translated">どのようなオブジェクトに関係なくをバインドして、データ ソースの種類、各バインディングに依存して次の図に示されているモデル。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.Binding">
          <source><bpt id="p1">![</bpt>Basic data binding diagram<ept id="p1">]</ept><bpt id="p2">(~/add/media/databindingmostbasic.png "</bpt>Basic data binding diagram<ept id="p2">")</ept></source>
          <target state="translated"><bpt id="p1">![</bpt>基本的なデータ バインディング ダイアグラム<ept id="p1">]</ept><bpt id="p2">(~/add/media/databindingmostbasic.png "</bpt>基本的なデータ バインディング ダイアグラム<ept id="p2">")</ept></target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.Binding">
          <source>The figure demonstrates the following fundamental <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> data binding concepts.</source>
          <target state="translated">図で次の基本型を示します<ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph>データ バインディングの概念です。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.Binding">
          <source>Each binding typically has these four components: a binding target object, a target property, a binding source, and a <ph id="ph1">&lt;xref:System.Windows.Data.Binding.Path%2A&gt;</ph> to the value in the binding source to use.</source>
          <target state="translated">各バインドは通常これら 4 つのコンポーネントを持つ: バインディング ターゲット オブジェクト、ターゲット プロパティ、バインディング ソースと<ph id="ph1">&lt;xref:System.Windows.Data.Binding.Path%2A&gt;</ph>で使用するバインディング ソースの値にします。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.Binding">
          <source>For example, if you want to bind the content of a <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> to the Name property of an Employee object, your target object is the <ph id="ph2">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>, the target property is the <ph id="ph3">&lt;xref:System.Windows.Controls.TextBox.Text%2A&gt;</ph> property, the value to use is Name, and the source object is the Employee object.</source>
          <target state="translated">内容をバインドする場合など、 <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> 、ターゲット オブジェクトは、従業員のオブジェクトのプロパティの名前、 <ph id="ph2">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>、target プロパティが、<ph id="ph3">&lt;xref:System.Windows.Controls.TextBox.Text%2A&gt;</ph>プロパティを使用する値は、名とソース オブジェクトは、従業員オブジェクト。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.Binding">
          <source>The target property must be a dependency property.</source>
          <target state="translated">ターゲット プロパティは、依存関係プロパティである必要があります。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.Binding">
          <source>This also means that you cannot bind a field.</source>
          <target state="translated">また、フィールドを連結することはできません。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.Binding">
          <source>Most properties of <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph> objects are dependency properties and most dependency properties, except read-only ones, support data binding by default.</source>
          <target state="translated">ほとんどのプロパティの<ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph>オブジェクトが依存関係プロパティと読み取り専用のものを除く、ほとんどの依存関係プロパティが既定ではデータ バインディングをサポートします。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.Binding">
          <source>(Only <ph id="ph1">&lt;xref:System.Windows.DependencyObject&gt;</ph> types can define dependency properties and all <ph id="ph2">&lt;xref:System.Windows.UIElement&gt;</ph> objects derive from <ph id="ph3">&lt;xref:System.Windows.DependencyObject&gt;</ph>.)</source>
          <target state="translated">(だけ<ph id="ph1">&lt;xref:System.Windows.DependencyObject&gt;</ph>依存関係プロパティとそのすべての種類を定義できます<ph id="ph2">&lt;xref:System.Windows.UIElement&gt;</ph>オブジェクトから取得<ph id="ph3">&lt;xref:System.Windows.DependencyObject&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.Binding">
          <source>Although not specified in the figure, it should be noted that the binding source object is not restricted to being a custom <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]</ph> object.</source>
          <target state="translated">図では指定されていませんが、バインディング ソース オブジェクトはカスタム <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]</ph> オブジェクトに制限されないことに注意してください。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.Binding">
          <source><ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> data binding supports data in the form of <ph id="ph2">[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]</ph> objects and <ph id="ph3">[!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> データ バインディングは、<ph id="ph2">[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]</ph> オブジェクトおよび <ph id="ph3">[!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)]</ph> の形式でデータをサポートします。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.Binding">
          <source>To provide some examples, your binding source may be a <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph>, any list object, a <ph id="ph2">[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]</ph> object that is associated with <ph id="ph3">[!INCLUDE[TLA#tla_adonet](~/includes/tlasharptla-adonet-md.md)]</ph> data or Web Services, or an XmlNode that contains your <ph id="ph4">[!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)]</ph> data.</source>
          <target state="translated">いくつかの例を提供する場合、バインディング ソースがあります、 <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph>、任意のリスト オブジェクト、<ph id="ph2">[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]</ph>オブジェクトに関連付けられている<ph id="ph3">[!INCLUDE[TLA#tla_adonet](~/includes/tlasharptla-adonet-md.md)]</ph>データまたは Web サービス、またはを含む XmlNode、<ph id="ph4">[!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)]</ph>データ。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.Binding">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Data.Binding.Mode%2A&gt;</ph> property to specify the direction of the data flow.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.Windows.Data.Binding.Mode%2A&gt;</ph>プロパティをデータ フローの方向を指定します。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.Binding">
          <source>To detect source changes in one-way or two-way bindings, the source must implement a suitable property change notification mechanism such as <ph id="ph1">&lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;</ph>.</source>
          <target state="translated">一方向または双方向のバインドのソースの変更を検出するために、ソース実装しなければなりませんに適切なプロパティの変更通知のメカニズムなど<ph id="ph1">&lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.Binding">
          <source>For an example, see <bpt id="p1">[</bpt>How to: Implement Property Change Notification<ept id="p1">](~/docs/framework/wpf/data/how-to-implement-property-change-notification.md)</ept>.</source>
          <target state="translated">例については、次を参照してください。<bpt id="p1">[</bpt>する方法: 実装プロパティの変更通知<ept id="p1">](~/docs/framework/wpf/data/how-to-implement-property-change-notification.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.Binding">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A&gt;</ph> property specifies the timing of source updates.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A&gt;</ph>プロパティは、ソースの更新のタイミングを指定します。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.Binding">
          <source>For more information, see "Basic Data Binding Concepts" in <bpt id="p1">[</bpt>Data Binding Overview<ept id="p1">](~/docs/framework/wpf/data/data-binding-overview.md)</ept>.</source>
          <target state="translated">詳細については、「基本的なデータ バインディング概念」を参照してください<bpt id="p1">[</bpt>データ バインディングの概要<ept id="p1">](~/docs/framework/wpf/data/data-binding-overview.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.Binding">
          <source>XAML Attribute Usage</source>
          <target state="translated">XAML 属性の使用方法</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.Binding">
          <source>XAML Values</source>
          <target state="translated">XAML 値</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.Binding">
          <source><bpt id="p1">*</bpt>declaration<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>declaration<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.Binding">
          <source>Zero or more attribute-assignment clauses separated by commas (,).</source>
          <target state="translated">コンマ (,) で区切られた 0 個以上の属性の割り当て句。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.Binding">
          <source>For more information, see <bpt id="p1">[</bpt>Binding Markup Extension<ept id="p1">](~/docs/framework/wpf/advanced/binding-markup-extension.md)</ept> or <bpt id="p2">[</bpt>Binding Declarations Overview<ept id="p2">](~/docs/framework/wpf/data/binding-declarations-overview.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>マークアップ拡張機能のバインド<ept id="p1">](~/docs/framework/wpf/advanced/binding-markup-extension.md)</ept>または<bpt id="p2">[</bpt>バインディング宣言の概要<ept id="p2">](~/docs/framework/wpf/data/binding-declarations-overview.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="T:System.Windows.Data.Binding">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Data.Binding" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Data.Binding" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.Binding.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Data.Binding" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Data.Binding" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.Binding.#ctor(System.String)">
          <source>The initial <ph id="ph1">&lt;see cref="P:System.Windows.Data.Binding.Path" /&gt;</ph> for the binding.</source>
          <target state="translated">バインディングの初期 <ph id="ph1">&lt;see cref="P:System.Windows.Data.Binding.Path" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.Binding.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Data.Binding" /&gt;</ph> class with an initial path.</source>
          <target state="translated">初期パスを指定して、<ph id="ph1">&lt;see cref="T:System.Windows.Data.Binding" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.Binding.AddSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to the event.</source>
          <target state="translated">イベントをリッスンする <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> または <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.Binding.AddSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})">
          <source>The handler to add.</source>
          <target state="translated">追加するハンドラー。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.Binding.AddSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})">
          <source>Adds a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Data.Binding.SourceUpdated" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Data.Binding.SourceUpdated" /&gt;</ph> 添付イベントのハンドラーを追加します。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.Binding.AddSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})">
          <source>This method supports attached event usage in <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>.</source>
          <target state="translated">このメソッドはサポートで添付イベントの使用状況<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>です。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.Binding.AddTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to the event.</source>
          <target state="translated">イベントをリッスンする <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> または <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.Binding.AddTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})">
          <source>The handler to add.</source>
          <target state="translated">追加するハンドラー。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.Binding.AddTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})">
          <source>Adds a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Data.Binding.TargetUpdated" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Data.Binding.TargetUpdated" /&gt;</ph> 添付イベントのハンドラーを追加します。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.Binding.AddTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})">
          <source>This method supports attached event usage in <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>.</source>
          <target state="translated">このメソッドはサポートで添付イベントの使用状況<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>です。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="P:System.Windows.Data.Binding.AsyncState">
          <source>Gets or sets opaque data passed to the asynchronous data dispatcher.</source>
          <target state="translated">非同期データ ディスパッチャーに渡される非透過データを取得または設定します。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.AsyncState">
          <source>Data passed to the asynchronous data dispatcher.</source>
          <target state="translated">非同期データ ディスパッチャーに渡されるデータ。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="P:System.Windows.Data.Binding.BindsDirectlyToSource">
          <source>Gets or sets a value that indicates whether to evaluate the <ph id="ph1">&lt;see cref="P:System.Windows.Data.Binding.Path" /&gt;</ph> relative to the data item or the <ph id="ph2">&lt;see cref="T:System.Windows.Data.DataSourceProvider" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Data.Binding.Path" /&gt;</ph> を評価するときに、データ項目を基準とするか、<ph id="ph2">&lt;see cref="T:System.Windows.Data.DataSourceProvider" /&gt;</ph> オブジェクトを基準とするかを示す値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.BindsDirectlyToSource">
          <source><ph id="ph1">&lt;see langword="false" /&gt;</ph> to evaluate the path relative to the data item itself; otherwise, <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">データ項目自体を基準としてパスを評価する場合は <ph id="ph1">&lt;see langword="false" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.BindsDirectlyToSource">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">既定値は、<ph id="ph1">&lt;see langword="false" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.BindsDirectlyToSource">
          <source>The normal behavior (when this property is <ph id="ph1">`false`</ph>) includes special treatment for <ph id="ph2">&lt;xref:System.Windows.Data.DataSourceProvider&gt;</ph> objects.</source>
          <target state="translated">通常の動作 (ときに、このプロパティは<ph id="ph1">`false`</ph>) 用の特別な処理が含まれています<ph id="ph2">&lt;xref:System.Windows.Data.DataSourceProvider&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.BindsDirectlyToSource">
          <source>In this case, the binding engine evaluates the <ph id="ph1">&lt;xref:System.Windows.Data.Binding.Path%2A&gt;</ph> relative to the object obtained from the <ph id="ph2">&lt;xref:System.Windows.Data.DataSourceProvider.Data%2A&gt;</ph> property.</source>
          <target state="translated">この例では、バインディング エンジンが評価される、<ph id="ph1">&lt;xref:System.Windows.Data.Binding.Path%2A&gt;</ph>から取得したオブジェクトを基準とした、<ph id="ph2">&lt;xref:System.Windows.Data.DataSourceProvider.Data%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.BindsDirectlyToSource">
          <source>In addition, the binding listens for the <ph id="ph1">&lt;xref:System.Windows.Data.DataSourceProvider.DataChanged&gt;</ph> event and reacts accordingly.</source>
          <target state="translated">バインドをさらに、リッスン、<ph id="ph1">&lt;xref:System.Windows.Data.DataSourceProvider.DataChanged&gt;</ph>イベントし、それに従って動作します。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.BindsDirectlyToSource">
          <source>Setting this property to <ph id="ph1">`true`</ph> overrides this behavior and gives the binding access to properties of the <ph id="ph2">&lt;xref:System.Windows.Data.DataSourceProvider&gt;</ph> object itself.</source>
          <target state="translated">このプロパティを設定<ph id="ph1">`true`</ph>この動作をオーバーライドしのプロパティへのバインドのアクセスを提供、<ph id="ph2">&lt;xref:System.Windows.Data.DataSourceProvider&gt;</ph>オブジェクト自体です。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="P:System.Windows.Data.Binding.Converter">
          <source>Gets or sets the converter to use.</source>
          <target state="translated">使用するコンバーターを取得または設定します。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Converter">
          <source>A value of type <ph id="ph1">&lt;see cref="T:System.Windows.Data.IValueConverter" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Data.IValueConverter" /&gt;</ph> 型の値。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Converter">
          <source>The default is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">既定値は、<ph id="ph1">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Converter">
          <source>A binding implicitly uses a default converter that tries to do a type conversion between the source value and the target value.</source>
          <target state="translated">バインディングは、元の値とターゲット値の間の型変換を実行しようとする既定のコンバーターを暗黙的に使用します。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Converter">
          <source>If a conversion cannot be made, the default converter returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">変換を実行できない場合、既定のコンバーターは <ph id="ph1">`null`</ph> を返します。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Converter">
          <source>If you want to associate a custom value converter with a binding, you should create a class that implements the <ph id="ph1">&lt;xref:System.Windows.Data.IValueConverter&gt;</ph> interface and supply implementations for the <ph id="ph2">&lt;xref:System.Windows.Data.IValueConverter.Convert%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Data.IValueConverter.ConvertBack%2A&gt;</ph> methods.</source>
          <target state="translated">バインディングにカスタム値コンバーターを関連付ける場合を実装するクラスを作成する必要があります、<ph id="ph1">&lt;xref:System.Windows.Data.IValueConverter&gt;</ph>インターフェイスし、実装を提供、<ph id="ph2">&lt;xref:System.Windows.Data.IValueConverter.Convert%2A&gt;</ph>と<ph id="ph3">&lt;xref:System.Windows.Data.IValueConverter.ConvertBack%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Converter">
          <source>Value converters can change data from one type to another, translate between cultural details such as character sets, or modify other aspects of their presentation.</source>
          <target state="translated">値コンバーターでは、別の 1 つの型にデータを変更する、文字セットなど、カルチャの詳細の間の変換、または、プレゼンテーションの他の側面を変更できます。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Converter">
          <source>For examples of typical conversion scenarios, see "Data Conversion" in the <bpt id="p1">[</bpt>Data Binding Overview<ept id="p1">](~/docs/framework/wpf/data/data-binding-overview.md)</ept>.</source>
          <target state="translated">変換の一般的なシナリオの例については、「データの変換」を参照してください、<bpt id="p1">[</bpt>データ バインディングの概要<ept id="p1">](~/docs/framework/wpf/data/data-binding-overview.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Converter">
          <source>XAML Attribute Usage</source>
          <target state="translated">XAML 属性の使用方法</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Converter">
          <source>XAML Values</source>
          <target state="translated">XAML 値</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Converter">
          <source><bpt id="p1">*</bpt>myConverter<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>myConverter<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Converter">
          <source>A resource reference to a class that implements the <ph id="ph1">&lt;xref:System.Windows.Data.IValueConverter&gt;</ph> interface, which includes implementations of the <ph id="ph2">&lt;xref:System.Windows.Data.IValueConverter.Convert%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Data.IValueConverter.ConvertBack%2A&gt;</ph> methods.</source>
          <target state="translated">リソース参照を実装するクラスを<ph id="ph1">&lt;xref:System.Windows.Data.IValueConverter&gt;</ph>インターフェイスの実装が含まれています、<ph id="ph2">&lt;xref:System.Windows.Data.IValueConverter.Convert%2A&gt;</ph>と<ph id="ph3">&lt;xref:System.Windows.Data.IValueConverter.ConvertBack%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Converter">
          <source>To refer to a value converter, use the <bpt id="p1">[</bpt>StaticResource Markup Extension<ept id="p1">](~/docs/framework/wpf/advanced/staticresource-markup-extension.md)</ept>.</source>
          <target state="translated">値コンバーター、参照を使用して、 <bpt id="p1">[</bpt>StaticResource マークアップ拡張機能<ept id="p1">](~/docs/framework/wpf/advanced/staticresource-markup-extension.md)</ept>します。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="P:System.Windows.Data.Binding.ConverterCulture">
          <source>Gets or sets the culture in which to evaluate the converter.</source>
          <target state="translated">コンバーターを評価するカルチャを取得または設定します。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ConverterCulture">
          <source>The default is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">既定値は、<ph id="ph1">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ConverterCulture">
          <source>If you do not set this property, the binding engine uses the <ph id="ph1">`Language`</ph> property of the binding target object.</source>
          <target state="translated">バインディング エンジンを使用してこのプロパティを設定しない場合、<ph id="ph1">`Language`</ph>バインディング ターゲット オブジェクトのプロパティです。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ConverterCulture">
          <source>In <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> this defaults to "en-US" or inherits the value from the root element (or any element) of the page, if one has been explicitly set.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>この既定値は"EN-US"または明示的に設定されている場合、ページのルート要素 (または任意の要素) から値を継承します。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ConverterCulture">
          <source>For information about data conversion, see the Data Conversion section in the <bpt id="p1">[</bpt>Data Binding Overview<ept id="p1">](~/docs/framework/wpf/data/data-binding-overview.md)</ept>.</source>
          <target state="translated">データ変換については、データ変換のセクションを参照してください、<bpt id="p1">[</bpt>データ バインディングの概要<ept id="p1">](~/docs/framework/wpf/data/data-binding-overview.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="P:System.Windows.Data.Binding.ConverterParameter">
          <source>Gets or sets the parameter to pass to the <ph id="ph1">&lt;see cref="P:System.Windows.Data.Binding.Converter" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Data.Binding.Converter" /&gt;</ph> に渡すパラメーターを取得または設定します。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ConverterParameter">
          <source>The parameter to pass to the <ph id="ph1">&lt;see cref="P:System.Windows.Data.Binding.Converter" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Data.Binding.Converter" /&gt;</ph> に渡すパラメーター。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ConverterParameter">
          <source>The default is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">既定値は、<ph id="ph1">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ConverterParameter">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Data.Binding.ConverterParameter%2A&gt;</ph> property to specify how an object is converted.</source>
          <target state="translated">使用することができます、<ph id="ph1">&lt;xref:System.Windows.Data.Binding.ConverterParameter%2A&gt;</ph>プロパティ オブジェクトを変換する方法を指定します。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ConverterParameter">
          <source>This property passes additional information to a converter that you use on a binding.</source>
          <target state="translated">このプロパティは、追加の情報をバインディングで使用するコンバーターを渡します。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ConverterParameter">
          <source>When you specify a <ph id="ph1">&lt;xref:System.Windows.Data.Binding.ConverterParameter%2A&gt;</ph>, the value is passed to the <ph id="ph2">&lt;xref:System.Windows.Data.IValueConverter.Convert%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Data.IValueConverter.ConvertBack%2A&gt;</ph> methods as the <ph id="ph4">`parameter`</ph> parameter.</source>
          <target state="translated">指定すると、<ph id="ph1">&lt;xref:System.Windows.Data.Binding.ConverterParameter%2A&gt;</ph>に値が渡される、<ph id="ph2">&lt;xref:System.Windows.Data.IValueConverter.Convert%2A&gt;</ph>と<ph id="ph3">&lt;xref:System.Windows.Data.IValueConverter.ConvertBack%2A&gt;</ph>メソッドとして、<ph id="ph4">`parameter`</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ConverterParameter">
          <source>For an example, see <bpt id="p1">[</bpt>How to: Produce a Value Based on a List of Bound Items<ept id="p1">](~/docs/framework/wpf/data/how-to-produce-a-value-based-on-a-list-of-bound-items.md)</ept>.</source>
          <target state="translated">例については、次を参照してください。<bpt id="p1">[</bpt>する方法: 値を基にしたバインド品目の一覧を生成<ept id="p1">](~/docs/framework/wpf/data/how-to-produce-a-value-based-on-a-list-of-bound-items.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ConverterParameter">
          <source>That example shows an implementation of an <ph id="ph1">&lt;xref:System.Windows.Data.IMultiValueConverter&gt;</ph> but the usage still applies.</source>
          <target state="translated">実装の例を<ph id="ph1">&lt;xref:System.Windows.Data.IMultiValueConverter&gt;</ph>が、使用状況が引き続き適用されます。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="F:System.Windows.Data.Binding.DoNothing">
          <source>Used as a returned value to instruct the binding engine not to perform any action.</source>
          <target state="translated">バインディング エンジンにアクションを実行しないように指示するために、戻り値として使用されます。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Data.Binding.DoNothing">
          <source>A binding source property or a converter can return <ph id="ph1">&lt;xref:System.Windows.Data.Binding.DoNothing?displayProperty=nameWithType&gt;</ph> to instruct the binding engine not to perform any action.</source>
          <target state="translated">バインディング ソース プロパティまたはコンバーターが返すことができます<ph id="ph1">&lt;xref:System.Windows.Data.Binding.DoNothing?displayProperty=nameWithType&gt;</ph>バインディング エンジンを任意のアクションを実行しないように指示します。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Data.Binding.DoNothing">
          <source>For example, to instruct the binding engine not to transfer a value to the binding target, not to move to the next <ph id="ph1">&lt;xref:System.Windows.Data.Binding&gt;</ph> in a <ph id="ph2">&lt;xref:System.Windows.Data.PriorityBinding&gt;</ph>, or not to use the <ph id="ph3">`FallBackValue`</ph> or default value.</source>
          <target state="translated">例については、値を次に移動しますが、バインディング ターゲットに転送していないバインディング エンジンに指示する<ph id="ph1">&lt;xref:System.Windows.Data.Binding&gt;</ph>で、 <ph id="ph2">&lt;xref:System.Windows.Data.PriorityBinding&gt;</ph>、使用しないか、<ph id="ph3">`FallBackValue`</ph>または既定値です。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="P:System.Windows.Data.Binding.ElementName">
          <source>Gets or sets the name of the element to use as the binding source object.</source>
          <target state="translated">バインド ソース オブジェクトとして使用する要素の名前を取得または設定します。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ElementName">
          <source>The value of the <ph id="ph1">&lt;see langword="Name" /&gt;</ph> property or <bpt id="p1">[</bpt>x:Name Directive<ept id="p1">](~/docs/framework/xaml-services/x-name-directive.md)</ept> of the element of interest.</source>
          <target state="translated">値、<ph id="ph1">&lt;see langword="Name" /&gt;</ph>プロパティまたは<bpt id="p1">[</bpt>X:name ディレクティブ<ept id="p1">](~/docs/framework/xaml-services/x-name-directive.md)</ept>の関心のある要素。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ElementName">
          <source>You can refer to elements in code only if they are registered to the appropriate <ph id="ph1">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph> through <ph id="ph2">&lt;see langword="RegisterName" /&gt;</ph>.</source>
          <target state="translated">コード内で要素を参照できるのは、目的の要素が <ph id="ph2">&lt;see langword="RegisterName" /&gt;</ph> を使用して適切な <ph id="ph1">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph> に登録されている場合に限ります。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ElementName">
          <source>For more information, see <bpt id="p1">[</bpt>WPF XAML Namescopes<ept id="p1">](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。 <bpt id="p1">[</bpt>WPF XAML 名前スコープ<ept id="p1">](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ElementName">
          <source>The default is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">既定値は、<ph id="ph1">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ElementName">
          <source>This property is useful when you want to bind to the property of another element in your application.</source>
          <target state="translated">このプロパティは、アプリケーションで別の要素のプロパティにバインドするときに便利です。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ElementName">
          <source>For example, if you want to use a <ph id="ph1">&lt;xref:System.Windows.Controls.Slider&gt;</ph> to control the height of another control in your application, or if you want to bind the <ph id="ph2">&lt;xref:System.Windows.Controls.ContentControl.Content%2A&gt;</ph> of your control to the <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Selector.SelectedValue%2A&gt;</ph> property of your <ph id="ph4">&lt;xref:System.Windows.Controls.ListBox&gt;</ph> control.</source>
          <target state="translated">使用する場合など、 <ph id="ph1">&lt;xref:System.Windows.Controls.Slider&gt;</ph> 、アプリケーションの他のコントロールの高さを制御する、またはバインドする場合、 <ph id="ph2">&lt;xref:System.Windows.Controls.ContentControl.Content%2A&gt;</ph> 、コントロールを<ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Selector.SelectedValue%2A&gt;</ph>のプロパティ、<ph id="ph4">&lt;xref:System.Windows.Controls.ListBox&gt;</ph>コントロール。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ElementName">
          <source>By default, bindings inherit the data context specified by the <ph id="ph1">`DataContext`</ph> property, if one has been set.</source>
          <target state="translated">既定では、バインドがで指定されたデータ コンテキストを継承、<ph id="ph1">`DataContext`</ph>いずれかが設定されている場合は、プロパティです。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ElementName">
          <source>However, the <ph id="ph1">&lt;xref:System.Windows.Data.Binding.ElementName%2A&gt;</ph> property is one of the ways you can explicitly set the source of a <ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph> and override the inherited data context.</source>
          <target state="translated">ただし、<ph id="ph1">&lt;xref:System.Windows.Data.Binding.ElementName%2A&gt;</ph>プロパティは、のいずれかのソースを明示的に設定することができます、<ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph>し、継承されたデータ コンテキストをオーバーライドします。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ElementName">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Specify the Binding Source<ept id="p1">](~/docs/framework/wpf/data/how-to-specify-the-binding-source.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>する方法: バインド ソースを指定して<ept id="p1">](~/docs/framework/wpf/data/how-to-specify-the-binding-source.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ElementName">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Data.Binding.Source%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Data.Binding.RelativeSource%2A&gt;</ph> properties of the <ph id="ph3">&lt;xref:System.Windows.Data.Binding&gt;</ph> class also enable you to set the source of the binding explicitly.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Data.Binding.Source%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Windows.Data.Binding.RelativeSource%2A&gt;</ph>のプロパティ、<ph id="ph3">&lt;xref:System.Windows.Data.Binding&gt;</ph>クラスも有効にするバインディングのソースの設定を明示的にします。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ElementName">
          <source>However, only one of the three properties, <ph id="ph1">&lt;xref:System.Windows.Data.Binding.ElementName%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Data.Binding.Source%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Data.Binding.RelativeSource%2A&gt;</ph>, should be set for each binding, or a conflict might occur.</source>
          <target state="translated">ただし、3 つのプロパティの 1 つだけ<ph id="ph1">&lt;xref:System.Windows.Data.Binding.ElementName%2A&gt;</ph>、 <ph id="ph2">&lt;xref:System.Windows.Data.Binding.Source%2A&gt;</ph>、および<ph id="ph3">&lt;xref:System.Windows.Data.Binding.RelativeSource%2A&gt;</ph>、する必要がありますセットごとにバインドする、または競合が発生する可能性があります。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ElementName">
          <source>This property throws an exception if there is a binding source conflict.</source>
          <target state="translated">このプロパティは、バインディング ソースの競合がある場合に例外をスローします。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.Binding.GetXmlNamespaceManager(System.Windows.DependencyObject)">
          <source>The object from which to get namespace information.</source>
          <target state="translated">名前空間情報の取得元となるオブジェクト。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.Binding.GetXmlNamespaceManager(System.Windows.DependencyObject)">
          <source>Returns an <ph id="ph1">[!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)]</ph> namespace manager object used by the binding attached to the specified object.</source>
          <target state="translated">指定したオブジェクトにアタッチされているバインドによって使用される <ph id="ph1">[!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)]</ph> 名前空間マネージャー オブジェクトを返します。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.Binding.GetXmlNamespaceManager(System.Windows.DependencyObject)">
          <source>A returned object used for viewing <ph id="ph1">[!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)]</ph> namespaces that relate to the binding on the passed object element.</source>
          <target state="translated">渡されたオブジェクト要素でのバインディングに関連する <ph id="ph1">[!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)]</ph> 名前空間の表示に使用されるオブジェクト。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.Binding.GetXmlNamespaceManager(System.Windows.DependencyObject)">
          <source>This object should be cast as <ph id="ph1">&lt;see cref="T:System.Xml.XmlNamespaceManager" /&gt;</ph>.</source>
          <target state="translated">このオブジェクトは、<ph id="ph1">&lt;see cref="T:System.Xml.XmlNamespaceManager" /&gt;</ph> としてキャストする必要があります。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.Binding.GetXmlNamespaceManager(System.Windows.DependencyObject)">
          <source>This method supports attached property usage for the <ph id="ph1">&lt;xref:System.Windows.Data.Binding.XmlNamespaceManager%2A&gt;</ph> attached property.</source>
          <target state="translated">このメソッドの添付プロパティの使用をサポートする、<ph id="ph1">&lt;xref:System.Windows.Data.Binding.XmlNamespaceManager%2A&gt;</ph>添付プロパティ。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.Binding.GetXmlNamespaceManager(System.Windows.DependencyObject)">
          <source><ph id="ph1">[!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)]</ph> namespace managers are relevant only if the data in the binding came from an <ph id="ph2">[!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)]</ph> binding source (<ph id="ph3">&lt;xref:System.Windows.Data.XmlDataProvider&gt;</ph> object).</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)]</ph> 名前空間マネージャーが、バインドでデータの出所場合にのみ、<ph id="ph2">[!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)]</ph>バインディング ソース (<ph id="ph3">&lt;xref:System.Windows.Data.XmlDataProvider&gt;</ph>オブジェクト)。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.Binding.GetXmlNamespaceManager(System.Windows.DependencyObject)">
          <source>If a namespace manager was not specifically applied either in the original data source creation or by subsequently calling <ph id="ph1">&lt;xref:System.Windows.Data.Binding.SetXmlNamespaceManager%2A&gt;</ph> on the binding, then this method will return <ph id="ph2">`null`</ph>.</source>
          <target state="translated">名前空間マネージャーが具体的には適用されていない場合、元のデータ ソースを作成または、後で呼び出すことによって<ph id="ph1">&lt;xref:System.Windows.Data.Binding.SetXmlNamespaceManager%2A&gt;</ph>バインドで、このメソッドは<ph id="ph2">`null`</ph>します。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.Binding.GetXmlNamespaceManager(System.Windows.DependencyObject)">
          <source>This method will always return <ph id="ph1">`null`</ph> if the data behind the binding is not <ph id="ph2">[!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)]</ph>.</source>
          <target state="translated">このメソッドは常に返します<ph id="ph1">`null`</ph>バインドの背後にデータがない場合<ph id="ph2">[!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)]</ph>です。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.Binding.GetXmlNamespaceManager(System.Windows.DependencyObject)">
          <source>The <ph id="ph1">&lt;paramref name="target" /&gt;</ph> parameter cannot be <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="target" /&gt;</ph> パラメーターとして <ph id="ph2">&lt;see langword="null" /&gt;</ph> を使用することはできません。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="F:System.Windows.Data.Binding.IndexerName">
          <source>Used as the <ph id="ph1">&lt;see cref="P:System.ComponentModel.PropertyChangedEventArgs.PropertyName" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.ComponentModel.PropertyChangedEventArgs" /&gt;</ph> to indicate that an indexer property has changed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.ComponentModel.PropertyChangedEventArgs.PropertyName" /&gt;</ph> の <ph id="ph2">&lt;see cref="T:System.ComponentModel.PropertyChangedEventArgs" /&gt;</ph> として使用され、インデクサー プロパティが変更されたことを示します。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="P:System.Windows.Data.Binding.IsAsync">
          <source>Gets or sets a value that indicates whether the <ph id="ph1">&lt;see cref="T:System.Windows.Data.Binding" /&gt;</ph> should get and set values asynchronously.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Data.Binding" /&gt;</ph> が非同期的に値を取得および設定する必要があるかどうかを示す値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.IsAsync">
          <source>The default is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">既定値は、<ph id="ph1">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.IsAsync">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Data.Binding.IsAsync%2A&gt;</ph> property when the <ph id="ph2">`get`</ph> accessor of your binding source property might take a long time.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.Windows.Data.Binding.IsAsync%2A&gt;</ph>プロパティと、<ph id="ph2">`get`</ph>バインディング ソースのプロパティのアクセサー時間がかかる可能性があります。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.IsAsync">
          <source>One example is an image property with a <ph id="ph1">`get`</ph> accessor that downloads from the Web.</source>
          <target state="translated">1 つの例は、イメージのプロパティで、 <ph id="ph1">`get`</ph> Web からダウンロードするアクセサー。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.IsAsync">
          <source>Setting <ph id="ph1">&lt;xref:System.Windows.Data.Binding.IsAsync%2A&gt;</ph> to <ph id="ph2">`true`</ph> avoids blocking the <ph id="ph3">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> while the download occurs.</source>
          <target state="translated">設定<ph id="ph1">&lt;xref:System.Windows.Data.Binding.IsAsync%2A&gt;</ph>に<ph id="ph2">`true`</ph>ブロッキングを回避できます、<ph id="ph3">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph>ダウンロードが実行中にします。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.IsAsync">
          <source>While waiting for the value to arrive, the binding reports the <ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.FallbackValue%2A&gt;</ph>, if one is available, or the default value of the binding target property.</source>
          <target state="translated">バインディングがレポートに到達する値を待っている間に、 <ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.FallbackValue%2A&gt;</ph>、いずれかが使用可能なまたは、バインディングの既定値はターゲット プロパティ。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.IsAsync">
          <source>However, there should not be many scenarios where you need to use the <ph id="ph1">&lt;xref:System.Windows.Data.Binding.IsAsync%2A&gt;</ph> property.</source>
          <target state="translated">ただしがないことを使用する必要がある多くのシナリオ、<ph id="ph1">&lt;xref:System.Windows.Data.Binding.IsAsync%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.IsAsync">
          <source>The <ph id="ph1">[!INCLUDE[TLA2#tla_net](~/includes/tla2sharptla-net-md.md)]</ph> guidelines recommend against defining properties that are orders of magnitude slower than a field set would be.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA2#tla_net](~/includes/tla2sharptla-net-md.md)]</ph>ガイドライン推奨桁違いフィールド セットよりも低速であるプロパティを定義します。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.IsAsync">
          <source>When you are creating your class, consider handling extremely slow operations outside of the <ph id="ph1">`get`</ph> accessor and caching the result.</source>
          <target state="translated">クラスを作成する場合は、処理以外の操作を非常に遅いことを検討してください、<ph id="ph1">`get`</ph>アクセサー、結果をキャッシュします。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.IsAsync">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Choosing Between Properties and Methods<ept id="p1">](http://msdn.microsoft.com/library/55825e8f-7e2e-448a-9505-7217cc91b1af)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。 <bpt id="p1">[</bpt>NIB: プロパティとの間の選択とメソッド<ept id="p1">](http://msdn.microsoft.com/library/55825e8f-7e2e-448a-9505-7217cc91b1af)</ept>です。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="P:System.Windows.Data.Binding.Mode">
          <source>Gets or sets a value that indicates the direction of the data flow in the binding.</source>
          <target state="translated">バインドのデータ フローの方向を示す値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Mode">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingMode" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingMode" /&gt;</ph> 値のいずれか 1 つ。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Mode">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Windows.Data.BindingMode.Default" /&gt;</ph>, which returns the default binding mode value of the target dependency property.</source>
          <target state="translated">既定値は<ph id="ph1">&lt;see cref="F:System.Windows.Data.BindingMode.Default" /&gt;</ph>、ターゲット依存関係プロパティの既定のバインド モード値が返されます。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Mode">
          <source>However, the default value varies for each dependency property.</source>
          <target state="translated">ただし、既定値は各依存関係プロパティによって異なります。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Mode">
          <source>In general, user-editable control properties, such as those of text boxes and check boxes, default to two-way bindings, whereas most other properties default to one-way bindings.</source>
          <target state="translated">一般に、ユーザーが編集できる、テキスト ボックスやチェック ボックスなどのコントロール プロパティは既定で双方向のバインディングであり、それ以外のほとんどのプロパティは既定で一方向のバインドになります。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Mode">
          <source>A programmatic way to determine whether a dependency property binds one-way or two-way by default is to get the property metadata of the property using <ph id="ph1">&lt;see cref="M:System.Windows.DependencyProperty.GetMetadata(System.Type)" /&gt;</ph> and then check the Boolean value of the <ph id="ph2">&lt;see cref="P:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault" /&gt;</ph> property.</source>
          <target state="translated">依存関係プロパティが既定で一方向と双方向のどちらでバインドされるかをプログラムで判断する 1 つの方法として、<ph id="ph1">&lt;see cref="M:System.Windows.DependencyProperty.GetMetadata(System.Type)" /&gt;</ph> を使用してそのプロパティのプロパティ メタデータを取得してから、<ph id="ph2">&lt;see cref="P:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault" /&gt;</ph> プロパティのブール値を確認することがきます。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Mode">
          <source>To support <ph id="ph1">&lt;xref:System.Windows.Data.BindingMode.OneWay&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Data.BindingMode.TwoWay&gt;</ph> bindings, the underlying data must implement <ph id="ph3">&lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;</ph>.</source>
          <target state="translated">サポートする<ph id="ph1">&lt;xref:System.Windows.Data.BindingMode.OneWay&gt;</ph>と<ph id="ph2">&lt;xref:System.Windows.Data.BindingMode.TwoWay&gt;</ph>基になるデータのバインドを実装する必要があります<ph id="ph3">&lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Mode">
          <source>For details, see <bpt id="p1">[</bpt>How to: Implement Property Change Notification<ept id="p1">](~/docs/framework/wpf/data/how-to-implement-property-change-notification.md)</ept>.</source>
          <target state="translated">詳細については、「<bpt id="p1">[</bpt>する方法: 実装プロパティの変更通知<ept id="p1">](~/docs/framework/wpf/data/how-to-implement-property-change-notification.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Mode">
          <source>For <ph id="ph1">&lt;xref:System.Windows.Data.BindingMode.TwoWay&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Data.BindingMode.OneWayToSource&gt;</ph> bindings, you can control the target-to-source updates by setting the <ph id="ph3">&lt;xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Data.BindingMode.TwoWay&gt;</ph>または<ph id="ph2">&lt;xref:System.Windows.Data.BindingMode.OneWayToSource&gt;</ph>バインドを設定して、ターゲットからソースへの更新プログラムを制御することができます、<ph id="ph3">&lt;xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Mode">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A&gt;</ph>.</source>
          <target state="translated">詳細については、「<ph id="ph1">&lt;xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A&gt;</ph>」を参照してください。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Mode">
          <source>For more information on the different binding modes, see <bpt id="p1">[</bpt>Data Binding Overview<ept id="p1">](~/docs/framework/wpf/data/data-binding-overview.md)</ept>.</source>
          <target state="translated">異なるバインディング モードの詳細については、次を参照してください。<bpt id="p1">[</bpt>データ バインディングの概要<ept id="p1">](~/docs/framework/wpf/data/data-binding-overview.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="P:System.Windows.Data.Binding.NotifyOnSourceUpdated">
          <source>Gets or sets a value that indicates whether to raise the <ph id="ph1">&lt;see cref="E:System.Windows.Data.Binding.SourceUpdated" /&gt;</ph> event when a value is transferred from the binding target to the binding source.</source>
          <target state="translated">バインディング ターゲットからバインディング ソースへ値が転送されたときに、<ph id="ph1">&lt;see cref="E:System.Windows.Data.Binding.SourceUpdated" /&gt;</ph> イベントを発生させるかどうかを示す値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.NotifyOnSourceUpdated">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="E:System.Windows.Data.Binding.SourceUpdated" /&gt;</ph> event should be raised when the binding source value is updated; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 場合、<ph id="ph2">&lt;see cref="E:System.Windows.Data.Binding.SourceUpdated" /&gt;</ph>バインディング ソースの値が更新された、それ以外の場合は、イベントを発生させるか<ph id="ph3">&lt;see langword="false" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.NotifyOnSourceUpdated">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">既定値は、<ph id="ph1">&lt;see langword="false" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="P:System.Windows.Data.Binding.NotifyOnTargetUpdated">
          <source>Gets or sets a value that indicates whether to raise the <ph id="ph1">&lt;see cref="E:System.Windows.Data.Binding.TargetUpdated" /&gt;</ph> event when a value is transferred from the binding source to the binding target.</source>
          <target state="translated">バインディング ソースからバインディング ターゲットへ値が転送されたときに <ph id="ph1">&lt;see cref="E:System.Windows.Data.Binding.TargetUpdated" /&gt;</ph> イベントを発生させるかどうかを示す値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.NotifyOnTargetUpdated">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="E:System.Windows.Data.Binding.TargetUpdated" /&gt;</ph> event should be raised when the binding target value is updated; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 場合、<ph id="ph2">&lt;see cref="E:System.Windows.Data.Binding.TargetUpdated" /&gt;</ph>バインディング ターゲットの値が更新された、それ以外の場合は、イベントを発生させるか<ph id="ph3">&lt;see langword="false" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.NotifyOnTargetUpdated">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">既定値は、<ph id="ph1">&lt;see langword="false" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="P:System.Windows.Data.Binding.NotifyOnValidationError">
          <source>Gets or sets a value that indicates whether to raise the <ph id="ph1">&lt;see cref="E:System.Windows.Controls.Validation.Error" /&gt;</ph> attached event on the bound object.</source>
          <target state="translated">バインドされたオブジェクトに対して <ph id="ph1">&lt;see cref="E:System.Windows.Controls.Validation.Error" /&gt;</ph> 添付イベントを発生させるかどうかを示す値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.NotifyOnValidationError">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="E:System.Windows.Controls.Validation.Error" /&gt;</ph> attached event should be raised on the bound object when there is a validation error during source updates; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 場合、<ph id="ph2">&lt;see cref="E:System.Windows.Controls.Validation.Error" /&gt;</ph>添付イベントが、それ以外のソースの更新中に検証エラーがあるときにバインドされたオブジェクトに対して発生する必要があります<ph id="ph3">&lt;see langword="false" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.NotifyOnValidationError">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">既定値は、<ph id="ph1">&lt;see langword="false" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.NotifyOnValidationError">
          <source>If the binding has <ph id="ph1">&lt;xref:System.Windows.Data.Binding.ValidationRules%2A&gt;</ph> associated with it, the binding engine checks each rule each time it transfers the target property value to the source property.</source>
          <target state="translated">バインディングの場合<ph id="ph1">&lt;xref:System.Windows.Data.Binding.ValidationRules%2A&gt;</ph>関連付けられているバインディング エンジンを確認のたびに各規則は、ソース プロパティにターゲット プロパティの値を転送します。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.NotifyOnValidationError">
          <source>If a rule invalidates a value, the binding engine creates a <ph id="ph1">&lt;xref:System.Windows.Controls.ValidationError&gt;</ph> object and adds it to the <ph id="ph2">&lt;xref:System.Windows.Controls.Validation&gt;</ph>.<ph id="ph3">&lt;xref:System.Windows.Controls.Validation.Errors%2A&gt;</ph></source>
          <target state="translated">ルールには、値が無効になります、バインド エンジンを作成します、<ph id="ph1">&lt;xref:System.Windows.Controls.ValidationError&gt;</ph>オブジェクトを追加して、<ph id="ph2">&lt;xref:System.Windows.Controls.Validation&gt;</ph>です。<ph id="ph3">&lt;xref:System.Windows.Controls.Validation.Errors%2A&gt;</ph></target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.NotifyOnValidationError">
          <source>collection of the bound object.</source>
          <target state="translated">バインドされたオブジェクトのコレクションです。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.NotifyOnValidationError">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType&gt;</ph> property is not empty, the <ph id="ph2">&lt;xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=nameWithType&gt;</ph> attached property of the object is set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">ときに、<ph id="ph1">&lt;xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType&gt;</ph>プロパティは空でなく、<ph id="ph2">&lt;xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=nameWithType&gt;</ph>アタッチされたオブジェクトのプロパティが<ph id="ph3">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.NotifyOnValidationError">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Data.Binding.NotifyOnValidationError%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph> is set to <ph id="ph3">`true`</ph>, then the binding engine raises the <ph id="ph4">&lt;xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType&gt;</ph> attached event on the object.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.Windows.Data.Binding.NotifyOnValidationError%2A&gt;</ph>のプロパティ、<ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph>に設定されている<ph id="ph3">`true`</ph>、バインディング エンジンが発生し、<ph id="ph4">&lt;xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType&gt;</ph>オブジェクトのイベントをアタッチします。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.NotifyOnValidationError">
          <source>For a detailed discussion of the validation process, see the Data Validation section in the <bpt id="p1">[</bpt>Data Binding Overview<ept id="p1">](~/docs/framework/wpf/data/data-binding-overview.md)</ept>.</source>
          <target state="translated">検証プロセスの詳細については、データの検証」セクションを参照してください、<bpt id="p1">[</bpt>データ バインディングの概要<ept id="p1">](~/docs/framework/wpf/data/data-binding-overview.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="P:System.Windows.Data.Binding.Path">
          <source>Gets or sets the path to the binding source property.</source>
          <target state="translated">バインディング ソース プロパティへのパスを取得または設定します。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Path">
          <source>The path to the binding source.</source>
          <target state="translated">バインディング ソース プロパティへのパス。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Path">
          <source>The default is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">既定値は、<ph id="ph1">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Path">
          <source>Each binding typically has these four components: a binding target object, a target property, a binding source, and a path to the value in the binding source to use.</source>
          <target state="translated">各バインドは通常これら 4 つのコンポーネントを持つ: バインディング ターゲット オブジェクト、ターゲット プロパティ、バインディング ソース、およびで使用するバインディング ソースの値へのパス。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Path">
          <source>For more information about these data binding concepts, see <bpt id="p1">[</bpt>Data Binding Overview<ept id="p1">](~/docs/framework/wpf/data/data-binding-overview.md)</ept>.</source>
          <target state="translated">これらのデータ バインディング概念の詳細については、次を参照してください。<bpt id="p1">[</bpt>データ バインディングの概要<ept id="p1">](~/docs/framework/wpf/data/data-binding-overview.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Path">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Data.Binding.Path%2A&gt;</ph> property to specify the source value you want to bind to:</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.Windows.Data.Binding.Path%2A&gt;</ph>プロパティにバインドするソースの値を指定します。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Path">
          <source>In the simplest case, the <ph id="ph1">&lt;xref:System.Windows.Data.Binding.Path%2A&gt;</ph> property value is the name of the property of the source object to use for the binding, such as <ph id="ph2">`Path=PropertyName`</ph>.</source>
          <target state="translated">最も簡単なケースで、<ph id="ph1">&lt;xref:System.Windows.Data.Binding.Path%2A&gt;</ph>プロパティの値などを使用して、バインディングのソース オブジェクトのプロパティの名前は、<ph id="ph2">`Path=PropertyName`</ph>です。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Path">
          <source>Subproperties of a property can be specified by a syntax similar to that used in C#.</source>
          <target state="translated">プロパティのサブプロパティは、c# で使用されるような構文で指定できます。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Path">
          <source>For instance, the clause <ph id="ph1">`Path=ShoppingCart.Order`</ph> sets the binding to the subproperty <ph id="ph2">`Order`</ph> of the object or property <ph id="ph3">`ShoppingCart`</ph>.</source>
          <target state="translated">たとえば、句 <ph id="ph1">`Path=ShoppingCart.Order`</ph> は、バインディングをオブジェクトのサブプロパティ <ph id="ph2">`Order`</ph> またはプロパティ <ph id="ph3">`ShoppingCart`</ph> に設定します。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Path">
          <source>To bind to an attached property, place parentheses around the attached property.</source>
          <target state="translated">添付プロパティにバインドするには、添付プロパティをかっこで囲みます。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Path">
          <source>For example, to bind to the attached property <ph id="ph1">&lt;xref:System.Windows.Controls.DockPanel.Dock%2A?displayProperty=nameWithType&gt;</ph>, the syntax is <ph id="ph2">`Path=(DockPanel.Dock)`</ph>.</source>
          <target state="translated">例については、添付プロパティをバインドする<ph id="ph1">&lt;xref:System.Windows.Controls.DockPanel.Dock%2A?displayProperty=nameWithType&gt;</ph>、構文は<ph id="ph2">`Path=(DockPanel.Dock)`</ph>します。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Path">
          <source>Indexers of a property can be specified within square brackets following the property name where the indexer is applied.</source>
          <target state="translated">プロパティのインデクサーは、インデクサーが適用されているプロパティ名の後ろの角かっこ内に指定できます。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Path">
          <source>For instance, the clause <ph id="ph1">`Path=ShoppingCart[0]`</ph> sets the binding to the index that corresponds to how your property's internal indexing handles the literal string "0".</source>
          <target state="translated">たとえば、句 <ph id="ph1">`Path=ShoppingCart[0]`</ph> は、プロパティの内部インデックスがリテラル文字列「0」を処理する方法に対応するインデックスへのバインディングを設定します。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Path">
          <source>Multiple indexers are also supported.</source>
          <target state="translated">複数のインデクサーもサポートされます。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Path">
          <source>Indexers and subproperties can be mixed in a <ph id="ph1">`Path`</ph> clause; for example, <ph id="ph2">`Path=ShoppingCart.ShippingInfo[MailingAddress,Street].`</ph></source>
          <target state="translated"><ph id="ph1">`Path`</ph> 句ではインデクサーとサブプロパティを混在させることができます。例: <ph id="ph2">`Path=ShoppingCart.ShippingInfo[MailingAddress,Street].`</ph></target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Path">
          <source>Inside indexers you can have multiple indexer parameters separated by commas (,).</source>
          <target state="translated">インデクサーの内側には、コンマ (,) で区切られた複数のインデクサー パラメーターを設定できます。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Path">
          <source>The type of each parameter can be specified with parentheses.</source>
          <target state="translated">各パラメーターの型は、かっこで指定できます。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Path">
          <source>For example, you can have <ph id="ph1">`Path="[(sys:Int32)42,(sys:Int32)24]"`</ph>, where <ph id="ph2">`sys`</ph> is mapped to the <ph id="ph3">`System`</ph> namespace.</source>
          <target state="translated">たとえば、ことが<ph id="ph1">`Path="[(sys:Int32)42,(sys:Int32)24]"`</ph>ここで、<ph id="ph2">`sys`</ph>にマップされて、<ph id="ph3">`System`</ph>名前空間。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Path">
          <source>When the source is a collection view, the current item can be specified with a slash (/).</source>
          <target state="translated">ソース コレクション ビューがある場合は、スラッシュ (/) を現在の項目を指定できます。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Path">
          <source>For example, the clause <ph id="ph1">`Path=/`</ph> sets the binding to the current item in the view.</source>
          <target state="translated">たとえば、この句<ph id="ph1">`Path=/`</ph>ビューの現在のアイテムにバインディングを設定します。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Path">
          <source>When the source is a collection, this syntax specifies the current item of the default collection view.</source>
          <target state="translated">ソースがコレクションである場合は、この構文は、既定のコレクション ビューの現在の項目を指定します。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Path">
          <source>Property names and slashes can be combined to traverse properties that are collections.</source>
          <target state="translated">プロパティは、コレクションを走査するプロパティの名前とスラッシュを組み合わせることができます。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Path">
          <source>For example, <ph id="ph1">`Path=/Offices/ManagerName`</ph> specifies the current item of the source collection, which contains an <ph id="ph2">`Offices`</ph> property that is also a collection.</source>
          <target state="translated">たとえば、<ph id="ph1">`Path=/Offices/ManagerName`</ph>を含むソース コレクションの現在の項目を指定します、<ph id="ph2">`Offices`</ph>コレクションであるプロパティ。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Path">
          <source>Its current item is an object that contains a <ph id="ph1">`ManagerName`</ph> property.</source>
          <target state="translated">現在のアイテムが格納しているオブジェクト、<ph id="ph1">`ManagerName`</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Path">
          <source>Optionally, a period (.) path can be used to bind to the current source.</source>
          <target state="translated">必要に応じて、現在のソースにバインドする、ピリオド (.) のパスを使用できます。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Path">
          <source>For example, <ph id="ph1">`Text="{Binding}"`</ph> is equivalent to <ph id="ph2">`Text="{Binding Path=.}"`</ph>.</source>
          <target state="translated">たとえば、<ph id="ph1">`Text="{Binding}"`</ph> は、<ph id="ph2">`Text="{Binding Path=.}"`</ph> と同じです。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Path">
          <source>For information about path syntax, see <bpt id="p1">[</bpt>Binding Declarations Overview<ept id="p1">](~/docs/framework/wpf/data/binding-declarations-overview.md)</ept> or <bpt id="p2">[</bpt>PropertyPath XAML Syntax<ept id="p2">](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md)</ept>.</source>
          <target state="translated">パスの構文については、次を参照してください。<bpt id="p1">[</bpt>バインディング宣言の概要<ept id="p1">](~/docs/framework/wpf/data/binding-declarations-overview.md)</ept>または<bpt id="p2">[</bpt>PropertyPath 構文は XAML<ept id="p2">](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Path">
          <source>For <ph id="ph1">[!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)]</ph> bindings, see the <ph id="ph2">&lt;xref:System.Windows.Data.Binding.XPath%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)]</ph>バインド」を参照してください、<ph id="ph2">&lt;xref:System.Windows.Data.Binding.XPath%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Path">
          <source>To bind to an entire object, you do not need to specify the <ph id="ph1">&lt;xref:System.Windows.Data.Binding.Path%2A&gt;</ph> property.</source>
          <target state="translated">オブジェクト全体にバインドするにを指定する必要はありません、<ph id="ph1">&lt;xref:System.Windows.Data.Binding.Path%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Path">
          <source>For more information, see "Specifying the Path to the Value" in <bpt id="p1">[</bpt>Data Binding Overview<ept id="p1">](~/docs/framework/wpf/data/data-binding-overview.md)</ept>.</source>
          <target state="translated">詳細についてを参照してください「を指定する、パスに、値」<bpt id="p1">[</bpt>データ バインディングの概要<ept id="p1">](~/docs/framework/wpf/data/data-binding-overview.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Path">
          <source>The following example shows a style trigger that creates a <ph id="ph1">&lt;xref:System.Windows.Controls.ToolTip&gt;</ph> that reports a validation error message.</source>
          <target state="translated">次の例は、スタイルのトリガーを作成する、<ph id="ph1">&lt;xref:System.Windows.Controls.ToolTip&gt;</ph>検証エラー メッセージを報告します。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Path">
          <source>The value of the setter binds to the error content of the current <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> (the <ph id="ph2">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> using the style) using the <ph id="ph3">&lt;xref:System.Windows.Data.Binding.RelativeSource%2A&gt;</ph> property.</source>
          <target state="translated">現在のエラーの内容に、set アクセス操作子の値をバインド<ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>(、<ph id="ph2">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>スタイルを使用) を使用して、<ph id="ph3">&lt;xref:System.Windows.Data.Binding.RelativeSource%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Path">
          <source>For more information on this example, see <bpt id="p1">[</bpt>How to: Implement Binding Validation<ept id="p1">](~/docs/framework/wpf/data/how-to-implement-binding-validation.md)</ept>.</source>
          <target state="translated">この例の詳細については、次を参照してください。<bpt id="p1">[</bpt>する方法: バインド検証を実装する<ept id="p1">](~/docs/framework/wpf/data/how-to-implement-binding-validation.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="P:System.Windows.Data.Binding.RelativeSource">
          <source>Gets or sets the binding source by specifying its location relative to the position of the binding target.</source>
          <target state="translated">バインディング ターゲットの位置に対して相対的な位置を指定することにより、バインディング ソースを取得または設定します。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.RelativeSource">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Data.RelativeSource" /&gt;</ph> object specifying the relative location of the binding source to use.</source>
          <target state="translated">A<ph id="ph1">&lt;see cref="T:System.Windows.Data.RelativeSource" /&gt;</ph>オブジェクトを使用するバインディング ソースの相対的な位置を指定します。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.RelativeSource">
          <source>The default is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">既定値は、<ph id="ph1">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.RelativeSource">
          <source>This property is commonly used to bind one property of an object to another property of the same object, or to define a binding in a style or template.</source>
          <target state="translated">このプロパティは通常、オブジェクトの 1 つのプロパティは、同一のオブジェクトの別のプロパティにバインドしたり、バインディング、スタイルまたはテンプレートで定義するに使用します。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.RelativeSource">
          <source>By default, bindings inherit the data context specified by the <ph id="ph1">`DataContext`</ph> property, if one has been set.</source>
          <target state="translated">既定では、バインドがで指定されたデータ コンテキストを継承、<ph id="ph1">`DataContext`</ph>いずれかが設定されている場合は、プロパティです。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.RelativeSource">
          <source>However, the <ph id="ph1">&lt;xref:System.Windows.Data.Binding.RelativeSource%2A&gt;</ph> property is one of the ways you can explicitly set the source of a <ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph> and override the inherited data context.</source>
          <target state="translated">ただし、<ph id="ph1">&lt;xref:System.Windows.Data.Binding.RelativeSource%2A&gt;</ph>プロパティは、のいずれかのソースを明示的に設定することができます、<ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph>し、継承されたデータ コンテキストをオーバーライドします。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.RelativeSource">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Specify the Binding Source<ept id="p1">](~/docs/framework/wpf/data/how-to-specify-the-binding-source.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>する方法: バインド ソースを指定して<ept id="p1">](~/docs/framework/wpf/data/how-to-specify-the-binding-source.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.RelativeSource">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Data.Binding.ElementName%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Data.Binding.Source%2A?displayProperty=nameWithType&gt;</ph> properties also enable you to set the source of the binding explicitly.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Data.Binding.ElementName%2A?displayProperty=nameWithType&gt;</ph>と<ph id="ph2">&lt;xref:System.Windows.Data.Binding.Source%2A?displayProperty=nameWithType&gt;</ph>プロパティも有効にするバインディングのソースの設定を明示的にします。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.RelativeSource">
          <source>However, only one of the three properties, <ph id="ph1">&lt;xref:System.Windows.Data.Binding.ElementName%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Data.Binding.Source%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Data.Binding.RelativeSource%2A&gt;</ph>, should be set for each binding, or a conflict can occur.</source>
          <target state="translated">ただし、3 つのプロパティの 1 つだけ<ph id="ph1">&lt;xref:System.Windows.Data.Binding.ElementName%2A&gt;</ph>、 <ph id="ph2">&lt;xref:System.Windows.Data.Binding.Source%2A&gt;</ph>、および<ph id="ph3">&lt;xref:System.Windows.Data.Binding.RelativeSource%2A&gt;</ph>、くださいセットごとにバインドする、または競合が発生することができます。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.RelativeSource">
          <source>This property throws an exception if there is a binding source conflict.</source>
          <target state="translated">このプロパティは、バインディング ソースの競合がある場合に例外をスローします。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.RelativeSource">
          <source>For <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> information, see <bpt id="p1">[</bpt>RelativeSource MarkupExtension<ept id="p1">](~/docs/framework/wpf/advanced/relativesource-markupextension.md)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>についてを参照してください<bpt id="p1">[</bpt>RelativeSource MarkupExtension<ept id="p1">](~/docs/framework/wpf/advanced/relativesource-markupextension.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.RelativeSource">
          <source>The following example shows a style trigger that creates a <ph id="ph1">&lt;xref:System.Windows.Controls.ToolTip&gt;</ph> that reports a validation error message.</source>
          <target state="translated">次の例は、スタイルのトリガーを作成する、<ph id="ph1">&lt;xref:System.Windows.Controls.ToolTip&gt;</ph>検証エラー メッセージを報告します。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.RelativeSource">
          <source>The value of the setter binds to the error content of the current <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> (the <ph id="ph2">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> using the style) using the <ph id="ph3">&lt;xref:System.Windows.Data.Binding.RelativeSource%2A&gt;</ph> property.</source>
          <target state="translated">現在のエラーの内容に、set アクセス操作子の値をバインド<ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>(、<ph id="ph2">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>スタイルを使用) を使用して、<ph id="ph3">&lt;xref:System.Windows.Data.Binding.RelativeSource%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.RelativeSource">
          <source>For more information on this example, see <bpt id="p1">[</bpt>How to: Implement Binding Validation<ept id="p1">](~/docs/framework/wpf/data/how-to-implement-binding-validation.md)</ept>.</source>
          <target state="translated">この例の詳細については、次を参照してください。<bpt id="p1">[</bpt>する方法: バインド検証を実装する<ept id="p1">](~/docs/framework/wpf/data/how-to-implement-binding-validation.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.RelativeSource">
          <source>To see the full example, see <bpt id="p1">[</bpt>Binding Validation Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=159972)</ept>.</source>
          <target state="translated">完全なサンプル コードを参照してください<bpt id="p1">[</bpt>のバインドの検証のサンプル<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=159972)</ept>です。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.Binding.RemoveSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to the event.</source>
          <target state="translated">イベントをリッスンする <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> または <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.Binding.RemoveSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})">
          <source>The handler to remove.</source>
          <target state="translated">削除するハンドラー。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.Binding.RemoveSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})">
          <source>Removes a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Data.Binding.SourceUpdated" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Data.Binding.SourceUpdated" /&gt;</ph> 添付イベントのハンドラーを削除します。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.Binding.RemoveSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})">
          <source>This method supports attached event usage in <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>.</source>
          <target state="translated">このメソッドはサポートで添付イベントの使用状況<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>です。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.Binding.RemoveTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to the event.</source>
          <target state="translated">イベントをリッスンする <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> または <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.Binding.RemoveTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})">
          <source>The handler to remove.</source>
          <target state="translated">削除するハンドラー。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.Binding.RemoveTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})">
          <source>Removes a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Data.Binding.TargetUpdated" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Data.Binding.TargetUpdated" /&gt;</ph> 添付イベントのハンドラーを削除します。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.Binding.RemoveTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})">
          <source>This method supports attached event usage in <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>.</source>
          <target state="translated">このメソッドはサポートで添付イベントの使用状況<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>です。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.Binding.SetXmlNamespaceManager(System.Windows.DependencyObject,System.Xml.XmlNamespaceManager)">
          <source>The object from which to get namespace information.</source>
          <target state="translated">名前空間情報の取得元となるオブジェクト。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.Binding.SetXmlNamespaceManager(System.Windows.DependencyObject,System.Xml.XmlNamespaceManager)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlNamespaceManager" /&gt;</ph> to use for namespace evaluation in the passed element.</source>
          <target state="translated">渡された要素での名前空間の評価に使用する <ph id="ph1">&lt;see cref="T:System.Xml.XmlNamespaceManager" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.Binding.SetXmlNamespaceManager(System.Windows.DependencyObject,System.Xml.XmlNamespaceManager)">
          <source>Sets a namespace manager object used by the binding attached to the provided element.</source>
          <target state="translated">指定した要素にアタッチされているバインドによって使用される名前空間マネージャー オブジェクトを設定します。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.Binding.SetXmlNamespaceManager(System.Windows.DependencyObject,System.Xml.XmlNamespaceManager)">
          <source>This method supports attached property usage for the <ph id="ph1">&lt;xref:System.Windows.Data.Binding.XmlNamespaceManager%2A&gt;</ph> attached property.</source>
          <target state="translated">このメソッドの添付プロパティの使用をサポートする、<ph id="ph1">&lt;xref:System.Windows.Data.Binding.XmlNamespaceManager%2A&gt;</ph>添付プロパティ。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.Binding.SetXmlNamespaceManager(System.Windows.DependencyObject,System.Xml.XmlNamespaceManager)">
          <source><ph id="ph1">&lt;paramref name="target" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="target" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.Binding.ShouldSerializePath">
          <source>Indicates whether the <ph id="ph1">&lt;see cref="P:System.Windows.Data.Binding.Path" /&gt;</ph> property should be persisted.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Data.Binding.Path" /&gt;</ph> プロパティを永続化する必要があるかどうかを示します。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.Binding.ShouldSerializePath">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the property value has changed from its default; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">プロパティの値が既定値から変更されている場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.Binding.ShouldSerializePath">
          <source>This <ph id="ph1">`ShouldSerialize`</ph> method is provided because the <ph id="ph2">&lt;xref:System.Windows.Data.Binding.Path%2A&gt;</ph> property does not have a simple default value.</source>
          <target state="translated">これは、<ph id="ph1">`ShouldSerialize`</ph>ためメソッドが用意されて、<ph id="ph2">&lt;xref:System.Windows.Data.Binding.Path%2A&gt;</ph>プロパティには、単純な既定値にありません。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.Binding.ShouldSerializePath">
          <source>This method indicates whether the property has changed from its default value.</source>
          <target state="translated">このメソッドは、既定値から、プロパティが変更されたかどうかを示します。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.Binding.ShouldSerializePath">
          <source>You typically invoke this method if you are either developing a designer for the <ph id="ph1">&lt;xref:System.Windows.Data.Binding&gt;</ph> or developing your own control incorporating the <ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph>.</source>
          <target state="translated">いずれかをデザイナーを開発している場合に通常、このメソッドが呼び出す、<ph id="ph1">&lt;xref:System.Windows.Data.Binding&gt;</ph>やコントロールを組み込む独自の開発、<ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.Binding.ShouldSerializeSource">
          <source>Indicates whether the <ph id="ph1">&lt;see cref="P:System.Windows.Data.Binding.Source" /&gt;</ph> property should be persisted.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Data.Binding.Source" /&gt;</ph> プロパティを永続化する必要があるかどうかを示します。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.Binding.ShouldSerializeSource">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the property value has changed from its default; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">プロパティの値が既定値から変更されている場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.Binding.ShouldSerializeSource">
          <source>This <ph id="ph1">`ShouldSerialize`</ph> method is provided because the <ph id="ph2">&lt;xref:System.Windows.Data.Binding.Source%2A&gt;</ph> property does not have a simple default value.</source>
          <target state="translated">これは、<ph id="ph1">`ShouldSerialize`</ph>ためメソッドが用意されて、<ph id="ph2">&lt;xref:System.Windows.Data.Binding.Source%2A&gt;</ph>プロパティには、単純な既定値にありません。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.Binding.ShouldSerializeSource">
          <source>This method indicates whether the property has changed from its default value.</source>
          <target state="translated">このメソッドは、既定値から、プロパティが変更されたかどうかを示します。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.Binding.ShouldSerializeSource">
          <source>You typically invoke this method if you are either developing a designer for the <ph id="ph1">&lt;xref:System.Windows.Data.Binding&gt;</ph> or developing your own control incorporating the <ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph>.</source>
          <target state="translated">いずれかをデザイナーを開発している場合に通常、このメソッドが呼び出す、<ph id="ph1">&lt;xref:System.Windows.Data.Binding&gt;</ph>やコントロールを組み込む独自の開発、<ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.Binding.ShouldSerializeValidationRules">
          <source>Indicates whether the <ph id="ph1">&lt;see cref="P:System.Windows.Data.Binding.ValidationRules" /&gt;</ph> property should be persisted.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Data.Binding.ValidationRules" /&gt;</ph> プロパティを永続化する必要があるかどうかを示します。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.Binding.ShouldSerializeValidationRules">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the property value has changed from its default; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">プロパティの値が既定値から変更されている場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.Binding.ShouldSerializeValidationRules">
          <source>This <ph id="ph1">`ShouldSerialize`</ph> method is provided because the <ph id="ph2">&lt;xref:System.Windows.Data.Binding.ValidationRules%2A&gt;</ph> property does not have a simple default value.</source>
          <target state="translated">これは、<ph id="ph1">`ShouldSerialize`</ph>ためメソッドが用意されて、<ph id="ph2">&lt;xref:System.Windows.Data.Binding.ValidationRules%2A&gt;</ph>プロパティには、単純な既定値にありません。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.Binding.ShouldSerializeValidationRules">
          <source>This method indicates whether the property has changed from its default value.</source>
          <target state="translated">このメソッドは、既定値から、プロパティが変更されたかどうかを示します。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.Binding.ShouldSerializeValidationRules">
          <source>You typically invoke this method if you are either developing a designer for the <ph id="ph1">&lt;xref:System.Windows.Data.Binding&gt;</ph> or developing your own control incorporating the <ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph>.</source>
          <target state="translated">いずれかをデザイナーを開発している場合に通常、このメソッドが呼び出す、<ph id="ph1">&lt;xref:System.Windows.Data.Binding&gt;</ph>やコントロールを組み込む独自の開発、<ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="P:System.Windows.Data.Binding.Source">
          <source>Gets or sets the object to use as the binding source.</source>
          <target state="translated">バインド ソースとして使用されるオブジェクトを取得または設定します。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Source">
          <source>The object to use as the binding source.</source>
          <target state="translated">バインド ソースとして使用されるオブジェクト。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Source">
          <source>By default, bindings inherit the data context specified by the <ph id="ph1">`DataContext`</ph> property, if one has been set.</source>
          <target state="translated">既定では、バインドがで指定されたデータ コンテキストを継承、<ph id="ph1">`DataContext`</ph>いずれかが設定されている場合は、プロパティです。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Source">
          <source>However, the <ph id="ph1">&lt;xref:System.Windows.Data.Binding.Source%2A&gt;</ph> property is one of the ways you can explicitly set the source of a <ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph> and override the inherited data context.</source>
          <target state="translated">ただし、<ph id="ph1">&lt;xref:System.Windows.Data.Binding.Source%2A&gt;</ph>プロパティは、のいずれかのソースを明示的に設定することができます、<ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph>し、継承されたデータ コンテキストをオーバーライドします。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Source">
          <source>If you do not need the functionality of establishing a scope in which several properties inherit the same data context, you can use the <ph id="ph1">&lt;xref:System.Windows.Data.Binding.Source%2A&gt;</ph> property instead of the <ph id="ph2">`DataContext`</ph> property.</source>
          <target state="translated">いくつかのプロパティは、同じデータ コンテキストを継承でスコープを確立するの機能を必要としない場合は、使用することができます、<ph id="ph1">&lt;xref:System.Windows.Data.Binding.Source%2A&gt;</ph>プロパティの代わりに、<ph id="ph2">`DataContext`</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Source">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Data.Binding.ElementName%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Data.Binding.RelativeSource%2A?displayProperty=nameWithType&gt;</ph> properties also enable you to set the source of the binding explicitly.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Data.Binding.ElementName%2A?displayProperty=nameWithType&gt;</ph>と<ph id="ph2">&lt;xref:System.Windows.Data.Binding.RelativeSource%2A?displayProperty=nameWithType&gt;</ph>プロパティも有効にするバインディングのソースの設定を明示的にします。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Source">
          <source>However, only one of the three properties, <ph id="ph1">&lt;xref:System.Windows.Data.Binding.ElementName%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Data.Binding.Source%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Data.Binding.RelativeSource%2A&gt;</ph>, should be set for each binding, or a conflict can occur.</source>
          <target state="translated">ただし、3 つのプロパティの 1 つだけ<ph id="ph1">&lt;xref:System.Windows.Data.Binding.ElementName%2A&gt;</ph>、 <ph id="ph2">&lt;xref:System.Windows.Data.Binding.Source%2A&gt;</ph>、および<ph id="ph3">&lt;xref:System.Windows.Data.Binding.RelativeSource%2A&gt;</ph>、くださいセットごとにバインドする、または競合が発生することができます。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Source">
          <source>This property throws an exception if there is a binding source conflict.</source>
          <target state="translated">このプロパティは、バインディング ソースの競合がある場合に例外をスローします。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Source">
          <source>To clear this property, set it to <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">このプロパティをクリアするには、設定<ph id="ph1">&lt;xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=nameWithType&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Source">
          <source>XAML Attribute Usage</source>
          <target state="translated">XAML 属性の使用方法</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Source">
          <source>XAML Values</source>
          <target state="translated">XAML 値</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Source">
          <source><bpt id="p1">*</bpt>object<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>object<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Source">
          <source>An existing object.</source>
          <target state="translated">既存のオブジェクト。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Source">
          <source>To refer to an existing object, use the <bpt id="p1">[</bpt>StaticResource Markup Extension<ept id="p1">](~/docs/framework/wpf/advanced/staticresource-markup-extension.md)</ept></source>
          <target state="translated">既存のオブジェクトを参照を使用して、 <bpt id="p1">[</bpt>StaticResource マークアップ拡張機能<ept id="p1">](~/docs/framework/wpf/advanced/staticresource-markup-extension.md)</ept></target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Source">
          <source>The following example uses a <ph id="ph1">`Person`</ph> object with a string property named <ph id="ph2">`PersonName`</ph> that is defined in the <ph id="ph3">`SDKSample`</ph> namespace, as the first highlighted line shows.</source>
          <target state="translated">次の例では、<ph id="ph1">`Person`</ph>という名前の文字列プロパティを持つオブジェクト<ph id="ph2">`PersonName`</ph>で定義されている、<ph id="ph3">`SDKSample`</ph>名前空間には、最初の強調表示された行を示します。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Source">
          <source>In the highlighted line that contains the <ph id="ph1">`&lt;src&gt;`</ph> element, it instantiates the <ph id="ph2">`Person`</ph> object with a <ph id="ph3">`PersonName`</ph> property value of <ph id="ph4">`Joe`</ph>.</source>
          <target state="translated">強調表示されたを含む行で、<ph id="ph1">`&lt;src&gt;`</ph>要素がインスタンス化、<ph id="ph2">`Person`</ph>オブジェクトを<ph id="ph3">`PersonName`</ph>のプロパティの値<ph id="ph4">`Joe`</ph>です。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Source">
          <source>This is done in the <ph id="ph1">`Resources`</ph> section and assigned an <ph id="ph2">`x:Key`</ph>.</source>
          <target state="translated">これには、<ph id="ph1">`Resources`</ph>セクションし、割り当てられている、<ph id="ph2">`x:Key`</ph>です。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Source">
          <source>The highlighted line that contains the <ph id="ph1">`&lt;TextBlock&gt;`</ph> elements shows how to bind to the <ph id="ph2">`PersonName`</ph> property.</source>
          <target state="translated">強調表示された行を含む、<ph id="ph1">`&lt;TextBlock&gt;`</ph>要素にバインドする方法を示しています、<ph id="ph2">`PersonName`</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Source">
          <source>As a result, the <ph id="ph1">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> control appears with the value "Joe".</source>
          <target state="translated">その結果、 <ph id="ph1">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> "Joe"の値を持つコントロールが表示されます。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Source">
          <source>In the following example, the <ph id="ph1">&lt;xref:System.Windows.Data.Binding.Source%2A&gt;</ph> values of the <ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph> objects are set to the <ph id="ph3">`static`</ph> property <ph id="ph4">&lt;xref:System.Windows.Application.Current%2A?displayProperty=nameWithType&gt;</ph>:</source>
          <target state="translated">次の例で、<ph id="ph1">&lt;xref:System.Windows.Data.Binding.Source%2A&gt;</ph>の値、<ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph>オブジェクトに設定されます、<ph id="ph3">`static`</ph>プロパティ<ph id="ph4">&lt;xref:System.Windows.Application.Current%2A?displayProperty=nameWithType&gt;</ph>:</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Source">
          <source>For the full example, see <bpt id="p1">[</bpt>Data Binding Demo<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=163703)</ept>.</source>
          <target state="translated">完全な例を参照してください。<bpt id="p1">[</bpt>データ バインディング デモ<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=163703)</ept>です。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="F:System.Windows.Data.Binding.SourceUpdatedEvent">
          <source>Identifies the <ph id="ph1">&lt;see cref="E:System.Windows.Data.Binding.SourceUpdated" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Data.Binding.SourceUpdated" /&gt;</ph> 添付イベントを識別します。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="F:System.Windows.Data.Binding.TargetUpdatedEvent">
          <source>Identifies the <ph id="ph1">&lt;see cref="E:System.Windows.Data.Binding.TargetUpdated" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Data.Binding.TargetUpdated" /&gt;</ph> 添付イベントを識別します。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="P:System.Windows.Data.Binding.UpdateSourceExceptionFilter">
          <source>Gets or sets a handler you can use to provide custom logic for handling exceptions that the binding engine encounters during the update of the binding source value.</source>
          <target state="translated">バインディング ソースの値の更新時にバインディング エンジンが検出した例外を処理するためのカスタム ロジックの提供に使用できるハンドラーを取得または設定します。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="P:System.Windows.Data.Binding.UpdateSourceExceptionFilter">
          <source>This is only applicable if you have associated an <ph id="ph1">&lt;see cref="T:System.Windows.Controls.ExceptionValidationRule" /&gt;</ph> with your binding.</source>
          <target state="translated">これは、バインディングに <ph id="ph1">&lt;see cref="T:System.Windows.Controls.ExceptionValidationRule" /&gt;</ph> を関連付けている場合にのみ適用できます。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.UpdateSourceExceptionFilter">
          <source>A method that provides custom logic for handling exceptions that the binding engine encounters during the update of the binding source value.</source>
          <target state="translated">バインディング ソースの値の更新時にバインディング エンジンが検出した例外を処理するためのカスタム ロジックを提供するメソッド。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.UpdateSourceExceptionFilter">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.ExceptionValidationRule&gt;</ph> is a built-in validation rule that checks for exceptions thrown during the update of the binding source property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.ExceptionValidationRule&gt;</ph>バインディング ソース プロパティの更新中にスローされる例外をチェックする組み込みの検証規則がします。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.UpdateSourceExceptionFilter">
          <source>If you have associated the <ph id="ph1">&lt;xref:System.Windows.Controls.ExceptionValidationRule&gt;</ph> with your <ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph> object, you can use this property to set a handler to provide custom logic for handling these exceptions.</source>
          <target state="translated">関連付けられている場合、<ph id="ph1">&lt;xref:System.Windows.Controls.ExceptionValidationRule&gt;</ph>で、<ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph>オブジェクト、このプロパティを使用してこれらの例外を処理するためのカスタム ロジックを提供するハンドラーを設定することができます。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.UpdateSourceExceptionFilter">
          <source>If an <ph id="ph1">&lt;xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A&gt;</ph> is not specified on the <ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph>, the binding engine creates a <ph id="ph3">&lt;xref:System.Windows.Controls.ValidationError&gt;</ph> with the exception and adds it to the <ph id="ph4">&lt;xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType&gt;</ph> collection of the bound element.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A&gt;</ph>が指定されていない、 <ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph>、バインディング エンジンを作成、<ph id="ph3">&lt;xref:System.Windows.Controls.ValidationError&gt;</ph>例外を使用し、それを追加、<ph id="ph4">&lt;xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType&gt;</ph>バインドされている要素のコレクション。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.UpdateSourceExceptionFilter">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox.Text%2A&gt;</ph> property of the following <ph id="ph2">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> is data-bound to a source property <ph id="ph3">`Age3`</ph> that is of type <ph id="ph4">`int`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.TextBox.Text%2A&gt;</ph> 、次のプロパティ<ph id="ph2">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>データにバインドされて、ソース プロパティ<ph id="ph3">`Age3`</ph>型である<ph id="ph4">`int`</ph>です。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.UpdateSourceExceptionFilter">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.ExceptionValidationRule&gt;</ph> checks for exceptions that are thrown during the update of the source property (such as when the user enters a value that cannot be converted to an integer).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.ExceptionValidationRule&gt;</ph> (ときに、ユーザーを整数に変換できない値を入力) などのソース プロパティの更新中にスローされる例外をチェックします。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.UpdateSourceExceptionFilter">
          <source>You can provide custom logic to handle those exceptions.</source>
          <target state="translated">これらの例外を処理するためのカスタム ロジックを提供できます。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.UpdateSourceExceptionFilter">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A&gt;</ph> property to set an <ph id="ph2">&lt;xref:System.Windows.Data.UpdateSourceExceptionFilterCallback&gt;</ph>.</source>
          <target state="translated">次の例を使用する方法を示しています、<ph id="ph1">&lt;xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A&gt;</ph>プロパティを設定、<ph id="ph2">&lt;xref:System.Windows.Data.UpdateSourceExceptionFilterCallback&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.UpdateSourceExceptionFilter">
          <source>The following is an example implementation of an <ph id="ph1">&lt;xref:System.Windows.Data.UpdateSourceExceptionFilterCallback&gt;</ph>.</source>
          <target state="translated">実装例を次に示します、<ph id="ph1">&lt;xref:System.Windows.Data.UpdateSourceExceptionFilterCallback&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.UpdateSourceExceptionFilter">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Data.UpdateSourceExceptionFilterCallback&gt;</ph> can also return <ph id="ph2">`null`</ph>, the exception itself, or a <ph id="ph3">&lt;xref:System.Windows.Controls.ValidationError&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Data.UpdateSourceExceptionFilterCallback&gt;</ph>を返すことも<ph id="ph2">`null`</ph>、例外自体、または<ph id="ph3">&lt;xref:System.Windows.Controls.ValidationError&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.UpdateSourceExceptionFilter">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Windows.Data.UpdateSourceExceptionFilterCallback&gt;</ph>.</source>
          <target state="translated">詳細については、「<ph id="ph1">&lt;xref:System.Windows.Data.UpdateSourceExceptionFilterCallback&gt;</ph>」を参照してください。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.UpdateSourceExceptionFilter">
          <source>For the complete sample, see <bpt id="p1">[</bpt>Binding Validation Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=159972)</ept>.</source>
          <target state="translated">サンプル全体については、次を参照してください。<bpt id="p1">[</bpt>のバインドの検証のサンプル<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=159972)</ept>です。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="P:System.Windows.Data.Binding.UpdateSourceTrigger">
          <source>Gets or sets a value that determines the timing of binding source updates.</source>
          <target state="translated">バインディング ソースの更新のタイミングを決定する値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.UpdateSourceTrigger">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Data.UpdateSourceTrigger" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Data.UpdateSourceTrigger" /&gt;</ph> 値のいずれか 1 つ。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.UpdateSourceTrigger">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Windows.Data.UpdateSourceTrigger.Default" /&gt;</ph>, which returns the default <ph id="ph2">&lt;see cref="T:System.Windows.Data.UpdateSourceTrigger" /&gt;</ph> value of the target dependency property.</source>
          <target state="translated">既定値は<ph id="ph1">&lt;see cref="F:System.Windows.Data.UpdateSourceTrigger.Default" /&gt;</ph>、既定値が返されます<ph id="ph2">&lt;see cref="T:System.Windows.Data.UpdateSourceTrigger" /&gt;</ph>ターゲット依存関係プロパティの値。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.UpdateSourceTrigger">
          <source>However, the default value for most dependency properties is <ph id="ph1">&lt;see cref="F:System.Windows.Data.UpdateSourceTrigger.PropertyChanged" /&gt;</ph>, while the <ph id="ph2">&lt;see cref="P:System.Windows.Controls.TextBox.Text" /&gt;</ph> property has a default value of <ph id="ph3">&lt;see cref="F:System.Windows.Data.UpdateSourceTrigger.LostFocus" /&gt;</ph>.</source>
          <target state="translated">ただし、ほとんどの依存関係プロパティの既定値は<ph id="ph1">&lt;see cref="F:System.Windows.Data.UpdateSourceTrigger.PropertyChanged" /&gt;</ph>中、<ph id="ph2">&lt;see cref="P:System.Windows.Controls.TextBox.Text" /&gt;</ph>プロパティの既定値を持つ<ph id="ph3">&lt;see cref="F:System.Windows.Data.UpdateSourceTrigger.LostFocus" /&gt;</ph>します。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.UpdateSourceTrigger">
          <source>A programmatic way to determine the default <ph id="ph1">&lt;see cref="P:System.Windows.Data.Binding.UpdateSourceTrigger" /&gt;</ph> value of a dependency property is to get the property metadata of the property using <ph id="ph2">&lt;see cref="M:System.Windows.DependencyProperty.GetMetadata(System.Type)" /&gt;</ph> and then check the value of the <ph id="ph3">&lt;see cref="P:System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger" /&gt;</ph> property.</source>
          <target state="translated">既定値を決定するプログラムによる方法<ph id="ph1">&lt;see cref="P:System.Windows.Data.Binding.UpdateSourceTrigger" /&gt;</ph>のプロパティを使用して、プロパティ メタデータを取得する依存関係プロパティの値は、<ph id="ph2">&lt;see cref="M:System.Windows.DependencyProperty.GetMetadata(System.Type)" /&gt;</ph>の値を確認し、<ph id="ph3">&lt;see cref="P:System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger" /&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.UpdateSourceTrigger">
          <source>Bindings that are <ph id="ph1">&lt;xref:System.Windows.Data.BindingMode.TwoWay&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Data.BindingMode.OneWayToSource&gt;</ph> listen for changes in the target property and propagate them back to the source.</source>
          <target state="translated">バインドを<ph id="ph1">&lt;xref:System.Windows.Data.BindingMode.TwoWay&gt;</ph>または<ph id="ph2">&lt;xref:System.Windows.Data.BindingMode.OneWayToSource&gt;</ph>ターゲット プロパティの変更をリッスンし、それらをソースに反映します。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.UpdateSourceTrigger">
          <source>This is known as updating the source.</source>
          <target state="translated">これは、ソースの更新と呼ばれます。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.UpdateSourceTrigger">
          <source>Usually, these updates happen whenever the target property changes.</source>
          <target state="translated">通常、これらの更新プログラムは、ターゲット プロパティが変更されるたびに発生します。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.UpdateSourceTrigger">
          <source>This is fine for check boxes and other simple controls, but it is usually not appropriate for text fields.</source>
          <target state="translated">これは、チェック ボックスおよびその他の単純なコントロールの問題が、通常ありませんテキスト フィールドに対する適切です。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.UpdateSourceTrigger">
          <source>Updating after every keystroke can diminish performance and it denies the user the usual opportunity to backspace and fix typing errors before committing to the new value.</source>
          <target state="translated">すべてキーストロークにパフォーマンスが低下することができ、backspace キーし、新しい値をコミットする前に入力ミスを修正する通常の営業案件のユーザーを拒否に更新しています。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.UpdateSourceTrigger">
          <source>Therefore, the default <ph id="ph1">&lt;xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A&gt;</ph> value of the <ph id="ph2">&lt;xref:System.Windows.Controls.TextBox.Text%2A&gt;</ph> property is <ph id="ph3">&lt;xref:System.Windows.Data.UpdateSourceTrigger.LostFocus&gt;</ph> and not <ph id="ph4">&lt;xref:System.Windows.Data.UpdateSourceTrigger.PropertyChanged&gt;</ph>.</source>
          <target state="translated">既定ではそのため、<ph id="ph1">&lt;xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A&gt;</ph>の値、<ph id="ph2">&lt;xref:System.Windows.Controls.TextBox.Text%2A&gt;</ph>プロパティは<ph id="ph3">&lt;xref:System.Windows.Data.UpdateSourceTrigger.LostFocus&gt;</ph>および not<ph id="ph4">&lt;xref:System.Windows.Data.UpdateSourceTrigger.PropertyChanged&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.UpdateSourceTrigger">
          <source>If you set the <ph id="ph1">&lt;xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A&gt;</ph> value to <ph id="ph2">&lt;xref:System.Windows.Data.UpdateSourceTrigger.Explicit&gt;</ph>, you must call the <ph id="ph3">&lt;xref:System.Windows.Data.BindingExpression.UpdateSource%2A&gt;</ph> method or the changes will not propagate back to the source.</source>
          <target state="translated">設定した場合、<ph id="ph1">&lt;xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A&gt;</ph>値<ph id="ph2">&lt;xref:System.Windows.Data.UpdateSourceTrigger.Explicit&gt;</ph>、呼び出す必要があります、<ph id="ph3">&lt;xref:System.Windows.Data.BindingExpression.UpdateSource%2A&gt;</ph>メソッドまたは変更がソースに反映されません。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="P:System.Windows.Data.Binding.ValidatesOnDataErrors">
          <source>Gets or sets a value that indicates whether to include the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.DataErrorValidationRule" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Controls.DataErrorValidationRule" /&gt;</ph> を含めるかどうかを示す値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ValidatesOnDataErrors">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to include the <ph id="ph2">&lt;see cref="T:System.Windows.Controls.DataErrorValidationRule" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Windows.Controls.DataErrorValidationRule" /&gt;</ph> を含める場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ValidatesOnDataErrors">
          <source>Setting this property provides an alternative to using the <ph id="ph1">&lt;xref:System.Windows.Controls.DataErrorValidationRule&gt;</ph> element explicitly.</source>
          <target state="translated">このプロパティを設定すると、使用する代わりに、<ph id="ph1">&lt;xref:System.Windows.Controls.DataErrorValidationRule&gt;</ph>要素に明示的にします。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ValidatesOnDataErrors">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.DataErrorValidationRule&gt;</ph> is a built-in validation rule that checks for errors that are raised by the <ph id="ph2">&lt;xref:System.ComponentModel.IDataErrorInfo&gt;</ph> implementation of the source object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.DataErrorValidationRule&gt;</ph>によって発生するエラーをチェックする組み込みの検証規則は、<ph id="ph2">&lt;xref:System.ComponentModel.IDataErrorInfo&gt;</ph>ソース オブジェクトの実装です。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ValidatesOnDataErrors">
          <source>If an error is raised, the binding engine creates a <ph id="ph1">&lt;xref:System.Windows.Controls.ValidationError&gt;</ph> with the error and adds it to the <ph id="ph2">&lt;xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType&gt;</ph> collection of the bound element.</source>
          <target state="translated">バインディング エンジンが作成する場合は、エラーが発生すると、 <ph id="ph1">&lt;xref:System.Windows.Controls.ValidationError&gt;</ph> 、エラーのために追加し、<ph id="ph2">&lt;xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType&gt;</ph>バインドされている要素のコレクション。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ValidatesOnDataErrors">
          <source>The lack of an error clears this validation feedback, unless another rule raises a validation issue.</source>
          <target state="translated">エラーがないことを別のルールが検証の問題が発生しない限り、この検証フィードバックを消去します。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ValidatesOnDataErrors">
          <source><ph id="ph1">&lt;xref:System.Windows.Data.Binding.ValidatesOnDataErrors%2A&gt;</ph> is introduced in the .NET Framework version 3.5.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Data.Binding.ValidatesOnDataErrors%2A&gt;</ph> .NET Framework version 3.5 で導入されました。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ValidatesOnDataErrors">
          <source>For more information, see <bpt id="p1">[</bpt>.NET Framework Versions and Dependencies<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</source>
          <target state="translated">詳細については、「<bpt id="p1">[</bpt>.NET Framework のバージョンおよび依存関係<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>」を参照してください。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ValidatesOnDataErrors">
          <source>The following examples uses <ph id="ph1">&lt;xref:System.ComponentModel.IDataErrorInfo&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Data.Binding.ValidatesOnDataErrors%2A&gt;</ph> to validate user input in a <ph id="ph3">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>.</source>
          <target state="translated">次の例では<ph id="ph1">&lt;xref:System.ComponentModel.IDataErrorInfo&gt;</ph>と<ph id="ph2">&lt;xref:System.Windows.Data.Binding.ValidatesOnDataErrors%2A&gt;</ph>におけるユーザー入力を検証する、<ph id="ph3">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ValidatesOnDataErrors">
          <source>The first example creates a data type that implements <ph id="ph1">&lt;xref:System.ComponentModel.IDataErrorInfo&gt;</ph> to report validation errors.</source>
          <target state="translated">最初の例では、データ型を実装する<ph id="ph1">&lt;xref:System.ComponentModel.IDataErrorInfo&gt;</ph>検証エラーを報告します。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ValidatesOnDataErrors">
          <source>The following example binds the <ph id="ph1">`Age`</ph> property to the <ph id="ph2">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> and sets <ph id="ph3">&lt;xref:System.Windows.Data.Binding.ValidatesOnDataErrors%2A&gt;</ph> to <ph id="ph4">`true`</ph> on the <ph id="ph5">&lt;xref:System.Windows.Data.Binding&gt;</ph>.</source>
          <target state="translated">次の例ではバインド、<ph id="ph1">`Age`</ph>プロパティを<ph id="ph2">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>設定と<ph id="ph3">&lt;xref:System.Windows.Data.Binding.ValidatesOnDataErrors%2A&gt;</ph>に<ph id="ph4">`true`</ph>上、<ph id="ph5">&lt;xref:System.Windows.Data.Binding&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ValidatesOnDataErrors">
          <source>When the user enters an invalid value, a red border appears in the <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> and the <ph id="ph2">&lt;xref:System.Windows.Controls.ToolTip&gt;</ph> reports the error message.</source>
          <target state="translated">無効な値を入力するに赤い枠線が表示されます。、<ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>と<ph id="ph2">&lt;xref:System.Windows.Controls.ToolTip&gt;</ph>エラー メッセージを報告します。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="P:System.Windows.Data.Binding.ValidatesOnExceptions">
          <source>Gets or sets a value that indicates whether to include the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.ExceptionValidationRule" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Controls.ExceptionValidationRule" /&gt;</ph> を含めるかどうかを示す値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ValidatesOnExceptions">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to include the <ph id="ph2">&lt;see cref="T:System.Windows.Controls.ExceptionValidationRule" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Windows.Controls.ExceptionValidationRule" /&gt;</ph> を含める場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ValidatesOnExceptions">
          <source>Setting this property provides an alternative to using the <ph id="ph1">&lt;xref:System.Windows.Controls.ExceptionValidationRule&gt;</ph> element explicitly.</source>
          <target state="translated">このプロパティを設定すると、使用する代わりに、<ph id="ph1">&lt;xref:System.Windows.Controls.ExceptionValidationRule&gt;</ph>要素に明示的にします。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ValidatesOnExceptions">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.ExceptionValidationRule&gt;</ph> is a built-in validation rule that checks for exceptions that are thrown during the update of the source property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.ExceptionValidationRule&gt;</ph>ソース プロパティの更新中にスローされる例外をチェックする組み込みの検証ルールです。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ValidatesOnExceptions">
          <source>If an exception is thrown, the binding engine creates a <ph id="ph1">&lt;xref:System.Windows.Controls.ValidationError&gt;</ph> with the exception and adds it to the <ph id="ph2">&lt;xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType&gt;</ph> collection of the bound element.</source>
          <target state="translated">バインディング エンジンが作成、例外がスローされた場合、<ph id="ph1">&lt;xref:System.Windows.Controls.ValidationError&gt;</ph>例外を使用し、それを追加、<ph id="ph2">&lt;xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType&gt;</ph>バインドされている要素のコレクション。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ValidatesOnExceptions">
          <source>The lack of an error clears this validation feedback, unless another rule raises a validation issue.</source>
          <target state="translated">エラーがないことを別のルールが検証の問題が発生しない限り、この検証フィードバックを消去します。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ValidatesOnExceptions">
          <source><ph id="ph1">&lt;xref:System.Windows.Data.Binding.ValidatesOnExceptions%2A&gt;</ph> is introduced in the .NET Framework version 3.5.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Data.Binding.ValidatesOnExceptions%2A&gt;</ph> .NET Framework version 3.5 で導入されました。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ValidatesOnExceptions">
          <source>For more information, see <bpt id="p1">[</bpt>.NET Framework Versions and Dependencies<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</source>
          <target state="translated">詳細については、「<bpt id="p1">[</bpt>.NET Framework のバージョンおよび依存関係<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>」を参照してください。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ValidatesOnExceptions">
          <source>The following examples use <ph id="ph1">&lt;xref:System.Windows.Data.Binding.ValidatesOnExceptions%2A&gt;</ph> to validate user input in a <ph id="ph2">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>.</source>
          <target state="translated">次の例を使用して<ph id="ph1">&lt;xref:System.Windows.Data.Binding.ValidatesOnExceptions%2A&gt;</ph>におけるユーザー入力を検証する、<ph id="ph2">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ValidatesOnExceptions">
          <source>The first example creates a data type that throws an exception when the <ph id="ph1">`Age`</ph> property is set to an invalid property.</source>
          <target state="translated">最初の例は例外をスローするデータ型を作成するときに、<ph id="ph1">`Age`</ph>プロパティが無効なプロパティに設定します。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ValidatesOnExceptions">
          <source>The following example binds the <ph id="ph1">`Age`</ph> property to the <ph id="ph2">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> and sets <ph id="ph3">&lt;xref:System.Windows.Data.Binding.ValidatesOnExceptions%2A&gt;</ph> to <ph id="ph4">`true`</ph> on the <ph id="ph5">&lt;xref:System.Windows.Data.Binding&gt;</ph>.</source>
          <target state="translated">次の例ではバインド、<ph id="ph1">`Age`</ph>プロパティを<ph id="ph2">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>設定と<ph id="ph3">&lt;xref:System.Windows.Data.Binding.ValidatesOnExceptions%2A&gt;</ph>に<ph id="ph4">`true`</ph>上、<ph id="ph5">&lt;xref:System.Windows.Data.Binding&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ValidatesOnExceptions">
          <source>When the user enters an invalid value, a red border appears in the <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> and the <ph id="ph2">&lt;xref:System.Windows.Controls.ToolTip&gt;</ph> reports the error message.</source>
          <target state="translated">無効な値を入力するに赤い枠線が表示されます。、<ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>と<ph id="ph2">&lt;xref:System.Windows.Controls.ToolTip&gt;</ph>エラー メッセージを報告します。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="P:System.Windows.Data.Binding.ValidatesOnNotifyDataErrors">
          <source>Gets or sets a value that indicates whether to include the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" /&gt;</ph> を含めるかどうかを示す値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ValidatesOnNotifyDataErrors">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to include the <ph id="ph2">&lt;see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" /&gt;</ph> を含める場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ValidatesOnNotifyDataErrors">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">既定値は、<ph id="ph1">&lt;see langword="true" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ValidatesOnNotifyDataErrors">
          <source>When <ph id="ph1">&lt;xref:System.Windows.Data.Binding.ValidatesOnNotifyDataErrors%2A&gt;</ph> is <ph id="ph2">`true`</ph>, the binding checks for and reports errors that are raised by a data source that implements <ph id="ph3">&lt;xref:System.ComponentModel.INotifyDataErrorInfo&gt;</ph>.</source>
          <target state="translated">ときに<ph id="ph1">&lt;xref:System.Windows.Data.Binding.ValidatesOnNotifyDataErrors%2A&gt;</ph>は<ph id="ph2">`true`</ph>、バインディングが確認され、実装するデータ ソースで発生したエラーを報告<ph id="ph3">&lt;xref:System.ComponentModel.INotifyDataErrorInfo&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="P:System.Windows.Data.Binding.ValidationRules">
          <source>Gets a collection of rules that check the validity of the user input.</source>
          <target state="translated">ユーザー入力の有効性をチェックする規則のコレクションを取得します。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ValidationRules">
          <source>A collection of <ph id="ph1">&lt;see cref="T:System.Windows.Controls.ValidationRule" /&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Controls.ValidationRule" /&gt;</ph> オブジェクトのコレクション。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ValidationRules">
          <source>The <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> data binding model enables you to associate <ph id="ph2">&lt;xref:System.Windows.Data.Binding.ValidationRules%2A&gt;</ph> with your <ph id="ph3">&lt;xref:System.Windows.Data.Binding&gt;</ph> or <ph id="ph4">&lt;xref:System.Windows.Data.MultiBinding&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph>データ バインディング モデルを使用すると、関連付ける<ph id="ph2">&lt;xref:System.Windows.Data.Binding.ValidationRules%2A&gt;</ph>で、<ph id="ph3">&lt;xref:System.Windows.Data.Binding&gt;</ph>または<ph id="ph4">&lt;xref:System.Windows.Data.MultiBinding&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ValidationRules">
          <source>You can create custom rules by deriving from the <ph id="ph1">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph> class and implementing the <ph id="ph2">&lt;xref:System.Windows.Controls.ValidationRule.Validate%2A&gt;</ph> method, or you can use the built-in <ph id="ph3">&lt;xref:System.Windows.Controls.ExceptionValidationRule&gt;</ph>, which invalidates a value if there are exceptions during source updates.</source>
          <target state="translated">派生することによってカスタム ルールを作成することができます、<ph id="ph1">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph>クラスと実装、<ph id="ph2">&lt;xref:System.Windows.Controls.ValidationRule.Validate%2A&gt;</ph>メソッドを使用するか、組み込み<ph id="ph3">&lt;xref:System.Windows.Controls.ExceptionValidationRule&gt;</ph>ソースの更新中に例外がある場合、値が無効になります。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ValidationRules">
          <source>The binding engine checks each <ph id="ph1">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph> associated with a binding each time an input value (the binding target property value) is transferred to the binding source property.</source>
          <target state="translated">バインディング エンジンは、それぞれチェック<ph id="ph1">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph>たびに、入力値 (バインディング ターゲット プロパティの値) が転送されるバインディング ソース プロパティへのバインドに関連付けられています。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ValidationRules">
          <source>For a detailed discussion of the validation process, see the Data Validation section in the <bpt id="p1">[</bpt>Data Binding Overview<ept id="p1">](~/docs/framework/wpf/data/data-binding-overview.md)</ept>.</source>
          <target state="translated">検証プロセスの詳細については、データの検証」セクションを参照してください、<bpt id="p1">[</bpt>データ バインディングの概要<ept id="p1">](~/docs/framework/wpf/data/data-binding-overview.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ValidationRules">
          <source>This property can be set in <ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph> only by using the collection syntax shown, or by accessing the collection object and using its various methods, such as <ph id="ph2">`Add`</ph>.</source>
          <target state="translated">このプロパティを設定できます<ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph>に示すコレクション構文を使用してのみか、コレクション オブジェクトにアクセスしてなどのさまざまなメソッドを使用して<ph id="ph2">`Add`</ph>です。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ValidationRules">
          <source>The property to access the collection object is read-only, whereas the collection itself is read-write.</source>
          <target state="translated">コレクション オブジェクトにアクセスするプロパティは、コレクション自体は読み取り/書き込みは読み取り専用です。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ValidationRules">
          <source>XAML Property Element Usage</source>
          <target state="translated">XAML プロパティ要素の使用</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ValidationRules">
          <source>XAML Values</source>
          <target state="translated">XAML 値</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ValidationRules">
          <source><bpt id="p1">*</bpt>oneOrMoreValidationRules<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>oneOrMoreValidationRules<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ValidationRules">
          <source>One or more <ph id="ph1">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph> objects.</source>
          <target state="translated">1 つまたは複数<ph id="ph1">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ValidationRules">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Controls.ExceptionValidationRule&gt;</ph> class or create custom rules by subclassing the <ph id="ph2">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph> class.</source>
          <target state="translated">使用することができます、<ph id="ph1">&lt;xref:System.Windows.Controls.ExceptionValidationRule&gt;</ph>クラスまたはサブクラス化してカスタム規則を作成、<ph id="ph2">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="F:System.Windows.Data.Binding.XmlNamespaceManagerProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Data.Binding.XmlNamespaceManager" /&gt;</ph> attached property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Data.Binding.XmlNamespaceManager" /&gt;</ph> 添付プロパティを識別します。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" uid="P:System.Windows.Data.Binding.XPath">
          <source>Gets or sets an <ph id="ph1">&lt;see langword="XPath" /&gt;</ph> query that returns the value on the <ph id="ph2">[!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)]</ph> binding source to use.</source>
          <target state="translated">使用する <ph id="ph2">[!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)]</ph> バインディング ソースの値を返す <ph id="ph1">&lt;see langword="XPath" /&gt;</ph> クエリーを取得または設定します。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.XPath">
          <source>The <ph id="ph1">&lt;see langword="XPath" /&gt;</ph> query.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="XPath" /&gt;</ph> クエリ。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.XPath">
          <source>The default is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">既定値は、<ph id="ph1">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.XPath">
          <source>When the binding source is <ph id="ph1">[!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)]</ph> data instead of a <ph id="ph2">[!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]</ph> object, the <ph id="ph3">&lt;xref:System.Windows.Data.Binding.XPath%2A&gt;</ph> property is used instead of the <ph id="ph4">&lt;xref:System.Windows.Data.Binding.Path%2A&gt;</ph> property to indicate the path to the value on the binding source to use.</source>
          <target state="translated">バインディング ソースの場合は<ph id="ph1">[!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)]</ph>の代わりにデータ、<ph id="ph2">[!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]</ph>オブジェクト、<ph id="ph3">&lt;xref:System.Windows.Data.Binding.XPath%2A&gt;</ph>の代わりにプロパティを使用して、<ph id="ph4">&lt;xref:System.Windows.Data.Binding.Path%2A&gt;</ph>を使用するバインディング ソースの値にパスを示すプロパティです。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.XPath">
          <source>By setting the <ph id="ph1">&lt;xref:System.Windows.Data.Binding.XPath%2A&gt;</ph> property, you are creating an <ph id="ph2">`XPath`</ph> query to select a node or a collection of nodes (<ph id="ph3">&lt;xref:System.Xml.XmlElement?displayProperty=nameWithType&gt;</ph> and <ph id="ph4">&lt;xref:System.Xml.XmlAttribute?displayProperty=nameWithType&gt;</ph> both derive from <ph id="ph5">&lt;xref:System.Xml.XmlNode?displayProperty=nameWithType&gt;</ph>).</source>
          <target state="translated">設定して、<ph id="ph1">&lt;xref:System.Windows.Data.Binding.XPath%2A&gt;</ph>プロパティを作成する、<ph id="ph2">`XPath`</ph>ノードまたはノードのコレクションを選択するクエリ (<ph id="ph3">&lt;xref:System.Xml.XmlElement?displayProperty=nameWithType&gt;</ph>と<ph id="ph4">&lt;xref:System.Xml.XmlAttribute?displayProperty=nameWithType&gt;</ph>から派生両方<ph id="ph5">&lt;xref:System.Xml.XmlNode?displayProperty=nameWithType&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.XPath">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlNode?displayProperty=nameWithType&gt;</ph> is a <ph id="ph2">[!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]</ph> object, which means you can bind to its properties using the <ph id="ph3">&lt;xref:System.Windows.Data.Binding.Path%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlNode?displayProperty=nameWithType&gt;</ph> <ph id="ph2">[!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]</ph>オブジェクトを使用してそのプロパティにバインドすることができます、<ph id="ph3">&lt;xref:System.Windows.Data.Binding.Path%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.XPath">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=nameWithType&gt;</ph> method handles the <ph id="ph2">`XPath`</ph> expressions from the <ph id="ph3">&lt;xref:System.Windows.Data.Binding.XPath%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=nameWithType&gt;</ph>メソッド ハンドル、<ph id="ph2">`XPath`</ph>式から、<ph id="ph3">&lt;xref:System.Windows.Data.Binding.XPath%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.XPath">
          <source><ph id="ph1">`XPath`</ph> functions are not supported.</source>
          <target state="translated"><ph id="ph1">`XPath`</ph> 関数はサポートされていません。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.XPath">
          <source>For <ph id="ph1">`XPath`</ph> expression information, see the <ph id="ph2">&lt;xref:System.Xml.XmlNode.SelectNodes%2A&gt;</ph> documentation and some examples provided in the Example section.</source>
          <target state="translated"><ph id="ph1">`XPath`</ph>式についてを参照してください、<ph id="ph2">&lt;xref:System.Xml.XmlNode.SelectNodes%2A&gt;</ph>ドキュメントと例」のセクションで提供されるいくつかの例です。</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.XPath">
          <source>LINQ to XML objects <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> and <ph id="ph2">&lt;xref:System.Xml.Linq.XElement&gt;</ph> do not use <ph id="ph3">`XPath`</ph>.</source>
          <target state="translated">LINQ to XML オブジェクト<ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph>と<ph id="ph2">&lt;xref:System.Xml.Linq.XElement&gt;</ph>を使わない<ph id="ph3">`XPath`</ph>です。</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.XPath">
          <source>For details, see <bpt id="p1">[</bpt>How to: Bind to XDocument, XElement, or LINQ for XML Query Results<ept id="p1">](~/docs/framework/wpf/data/how-to-bind-to-xdocument-xelement-or-linq-for-xml-query-results.md)</ept>.</source>
          <target state="translated">詳細については、「<bpt id="p1">[</bpt>する方法: XML クエリ結果を XDocument XElement、または LINQ バインド<ept id="p1">](~/docs/framework/wpf/data/how-to-bind-to-xdocument-xelement-or-linq-for-xml-query-results.md)</ept>です。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>