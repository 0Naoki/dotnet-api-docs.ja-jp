<Type Name="Binding" FullName="System.Windows.Data.Binding">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a067ede5f23f32dada35190c9148f353b8b2da2d" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55309918" /></Metadata><TypeSignature Language="C#" Value="public class Binding : System.Windows.Data.BindingBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Binding extends System.Windows.Data.BindingBase" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.Binding" />
  <TypeSignature Language="VB.NET" Value="Public Class Binding&#xA;Inherits BindingBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class Binding : System::Windows::Data::BindingBase" />
  <TypeSignature Language="F#" Value="type Binding = class&#xA;    inherit BindingBase" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Data.BindingBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="edf11-101">バインドの定義に高レベルでアクセスします。バインドは、バインド ターゲット オブジェクト (通常は、WPF 要素) のプロパティと任意のデータ ソース (データベース、XML ファイル、データを格納している任意のオブジェクトなど) とを接続します。</span><span class="sxs-lookup"><span data-stu-id="edf11-101">Provides high-level access to the definition of a binding, which connects the properties of binding target objects (typically, WPF elements), and any data source (for example, a database, an XML file, or any object that contains data).</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] <span data-ttu-id="edf11-102">データ バインディングは、アプリケーションがデータを提示し、データと対話するための簡単で一貫性のある方法を提供します。</span><span class="sxs-lookup"><span data-stu-id="edf11-102">data binding provides a simple and consistent way for applications to present and interact with data.</span></span> <span data-ttu-id="edf11-103">データ バインディングでは、2 つのオブジェクトのプロパティの値を同期することができます。</span><span class="sxs-lookup"><span data-stu-id="edf11-103">Data binding enables you to synchronize the values of the properties of two different objects.</span></span>  
  
 <span data-ttu-id="edf11-104">バインディングを確立するために使用して、<xref:System.Windows.Data.Binding>クラスまたはその他のクラスを継承するのいずれかの<xref:System.Windows.Data.BindingBase>します。</span><span class="sxs-lookup"><span data-stu-id="edf11-104">To establish a binding, use the <xref:System.Windows.Data.Binding> class or one of the other classes that inherit <xref:System.Windows.Data.BindingBase>.</span></span> <span data-ttu-id="edf11-105">どのようなオブジェクトに関係なくバインドして、データ ソースの性質、各バインドは、次の図に示されているモデルに従います。</span><span class="sxs-lookup"><span data-stu-id="edf11-105">Regardless of what object you are binding and the nature of your data source, each binding follows the model illustrated by the following figure.</span></span>  
  
 <span data-ttu-id="edf11-106">![基本的なデータ バインディング ダイアグラム](~/add/media/databindingmostbasic.png "基本的なデータ バインディング ダイアグラム")</span><span class="sxs-lookup"><span data-stu-id="edf11-106">![Basic data binding diagram](~/add/media/databindingmostbasic.png "Basic data binding diagram")</span></span>  
  
 <span data-ttu-id="edf11-107">図に示します、次の基本的な[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]データ バインディングの概念です。</span><span class="sxs-lookup"><span data-stu-id="edf11-107">The figure demonstrates the following fundamental [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] data binding concepts.</span></span>  
  
-   <span data-ttu-id="edf11-108">各バインディングは、通常これら 4 つのコンポーネントを: バインディング ターゲット オブジェクト、ターゲット プロパティ、バインディング ソースの場合と<xref:System.Windows.Data.Binding.Path%2A>を使用するバインディング ソースの値にします。</span><span class="sxs-lookup"><span data-stu-id="edf11-108">Each binding typically has these four components: a binding target object, a target property, a binding source, and a <xref:System.Windows.Data.Binding.Path%2A> to the value in the binding source to use.</span></span> <span data-ttu-id="edf11-109">内容をバインドする場合など、 <xref:System.Windows.Controls.TextBox> 、ターゲット オブジェクトは、Employee オブジェクトの Name プロパティに、 <xref:System.Windows.Controls.TextBox>、target プロパティが、<xref:System.Windows.Controls.TextBox.Text%2A>プロパティを使用する値は、名、およびソース オブジェクトは、従業員オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="edf11-109">For example, if you want to bind the content of a <xref:System.Windows.Controls.TextBox> to the Name property of an Employee object, your target object is the <xref:System.Windows.Controls.TextBox>, the target property is the <xref:System.Windows.Controls.TextBox.Text%2A> property, the value to use is Name, and the source object is the Employee object.</span></span>  
  
-   <span data-ttu-id="edf11-110">ターゲット プロパティは、依存関係プロパティである必要があります。</span><span class="sxs-lookup"><span data-stu-id="edf11-110">The target property must be a dependency property.</span></span> <span data-ttu-id="edf11-111">つまり、フィールドをバインドすることはできません。</span><span class="sxs-lookup"><span data-stu-id="edf11-111">This also means that you cannot bind a field.</span></span> <span data-ttu-id="edf11-112">ほとんどのプロパティの<xref:System.Windows.UIElement>オブジェクトが依存関係プロパティと、読み取り専用のものを除く、ほとんどの依存関係プロパティが既定ではデータ バインディングをサポートします。</span><span class="sxs-lookup"><span data-stu-id="edf11-112">Most properties of <xref:System.Windows.UIElement> objects are dependency properties and most dependency properties, except read-only ones, support data binding by default.</span></span> <span data-ttu-id="edf11-113">(だけ<xref:System.Windows.DependencyObject>依存関係プロパティとそのすべての種類を定義できます<xref:System.Windows.UIElement>オブジェクトから派生<xref:System.Windows.DependencyObject>)。</span><span class="sxs-lookup"><span data-stu-id="edf11-113">(Only <xref:System.Windows.DependencyObject> types can define dependency properties and all <xref:System.Windows.UIElement> objects derive from <xref:System.Windows.DependencyObject>.)</span></span>  
  
-   <span data-ttu-id="edf11-114">図では指定されていませんが、バインディング ソース オブジェクトはカスタム [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] オブジェクトに制限されないことに注意してください。</span><span class="sxs-lookup"><span data-stu-id="edf11-114">Although not specified in the figure, it should be noted that the binding source object is not restricted to being a custom [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] object.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="edf11-115">データ バインディングは、[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] オブジェクトおよび [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] の形式でデータをサポートします。</span><span class="sxs-lookup"><span data-stu-id="edf11-115">data binding supports data in the form of [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] objects and [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)].</span></span> <span data-ttu-id="edf11-116">いくつかの例を提供する場合、バインディング ソースがあります、 <xref:System.Windows.UIElement>、任意のリスト オブジェクト、[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]オブジェクトに関連付けられている[!INCLUDE[TLA#tla_adonet](~/includes/tlasharptla-adonet-md.md)]データまたは Web サービス、またはを含む XmlNode、[!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)]データ。</span><span class="sxs-lookup"><span data-stu-id="edf11-116">To provide some examples, your binding source may be a <xref:System.Windows.UIElement>, any list object, a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] object that is associated with [!INCLUDE[TLA#tla_adonet](~/includes/tlasharptla-adonet-md.md)] data or Web Services, or an XmlNode that contains your [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] data.</span></span>  
  
 <span data-ttu-id="edf11-117">使用して、<xref:System.Windows.Data.Binding.Mode%2A>プロパティをデータ フローの方向を指定します。</span><span class="sxs-lookup"><span data-stu-id="edf11-117">Use the <xref:System.Windows.Data.Binding.Mode%2A> property to specify the direction of the data flow.</span></span> <span data-ttu-id="edf11-118">一方向または双方向のバインドでソースの変更を検出するために、ソース実装する必要あります適切なプロパティ変更通知のメカニズムなど<xref:System.ComponentModel.INotifyPropertyChanged>します。</span><span class="sxs-lookup"><span data-stu-id="edf11-118">To detect source changes in one-way or two-way bindings, the source must implement a suitable property change notification mechanism such as <xref:System.ComponentModel.INotifyPropertyChanged>.</span></span> <span data-ttu-id="edf11-119">例については、「[方法: プロパティ変更通知を実装する](~/docs/framework/wpf/data/how-to-implement-property-change-notification.md)します。</span><span class="sxs-lookup"><span data-stu-id="edf11-119">For an example, see [How to: Implement Property Change Notification](~/docs/framework/wpf/data/how-to-implement-property-change-notification.md).</span></span> <span data-ttu-id="edf11-120"><xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>プロパティは、ソースの更新のタイミングを指定します。</span><span class="sxs-lookup"><span data-stu-id="edf11-120">The <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> property specifies the timing of source updates.</span></span> <span data-ttu-id="edf11-121">詳細については、「基本的なデータ バインディング概念」を参照してください[データ バインディングの概要](~/docs/framework/wpf/data/data-binding-overview.md)します。</span><span class="sxs-lookup"><span data-stu-id="edf11-121">For more information, see "Basic Data Binding Concepts" in [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
<a name="xamlAttributeUsage_PriorityBinding"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="edf11-122">XAML 属性の使用方法</span><span class="sxs-lookup"><span data-stu-id="edf11-122">XAML Attribute Usage</span></span>  
  
```  
<object property="{Binding  declaration}"/>  
```  
  
<a name="xamlValues_PriorityBinding"></a>   
## <a name="xaml-values"></a><span data-ttu-id="edf11-123">XAML 値</span><span class="sxs-lookup"><span data-stu-id="edf11-123">XAML Values</span></span>  
 <span data-ttu-id="edf11-124">*declaration*</span><span class="sxs-lookup"><span data-stu-id="edf11-124">*declaration*</span></span>  
 <span data-ttu-id="edf11-125">コンマ (,) で区切られた 0 個以上の属性の割り当て句。</span><span class="sxs-lookup"><span data-stu-id="edf11-125">Zero or more attribute-assignment clauses separated by commas (,).</span></span> <span data-ttu-id="edf11-126">詳細については、次を参照してください。[バインディング マークアップ拡張機能](~/docs/framework/wpf/advanced/binding-markup-extension.md)または[バインディング宣言の概要](~/docs/framework/wpf/data/binding-declarations-overview.md)します。</span><span class="sxs-lookup"><span data-stu-id="edf11-126">For more information, see [Binding Markup Extension](~/docs/framework/wpf/advanced/binding-markup-extension.md) or [Binding Declarations Overview](~/docs/framework/wpf/data/binding-declarations-overview.md).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Data.MultiBinding" />
    <altmember cref="T:System.Windows.Data.PriorityBinding" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="edf11-127"><see cref="T:System.Windows.Data.Binding" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="edf11-127">Initializes a new instance of the <see cref="T:System.Windows.Data.Binding" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Binding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Binding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="edf11-128"><see cref="T:System.Windows.Data.Binding" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="edf11-128">Initializes a new instance of the <see cref="T:System.Windows.Data.Binding" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Binding (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Binding(System::String ^ path);" />
      <MemberSignature Language="F#" Value="new System.Windows.Data.Binding : string -&gt; System.Windows.Data.Binding" Usage="new System.Windows.Data.Binding path" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="edf11-129">バインドのための初期 <see cref="P:System.Windows.Data.Binding.Path" />。</span><span class="sxs-lookup"><span data-stu-id="edf11-129">The initial <see cref="P:System.Windows.Data.Binding.Path" /> for the binding.</span></span></param>
        <summary><span data-ttu-id="edf11-130">初期化パスを使用して、<see cref="T:System.Windows.Data.Binding" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="edf11-130">Initializes a new instance of the <see cref="T:System.Windows.Data.Binding" /> class with an initial path.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddSourceUpdatedHandler">
      <MemberSignature Language="C#" Value="public static void AddSourceUpdatedHandler (System.Windows.DependencyObject element, EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddSourceUpdatedHandler(class System.Windows.DependencyObject element, class System.EventHandler`1&lt;class System.Windows.Data.DataTransferEventArgs&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.AddSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddSourceUpdatedHandler (element As DependencyObject, handler As EventHandler(Of DataTransferEventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddSourceUpdatedHandler(System::Windows::DependencyObject ^ element, EventHandler&lt;System::Windows::Data::DataTransferEventArgs ^&gt; ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddSourceUpdatedHandler : System.Windows.DependencyObject * EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt; -&gt; unit" Usage="System.Windows.Data.Binding.AddSourceUpdatedHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="edf11-131">イベントをリッスンする <see cref="T:System.Windows.UIElement" /> または <see cref="T:System.Windows.ContentElement" />。</span><span class="sxs-lookup"><span data-stu-id="edf11-131">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to the event.</span></span></param>
        <param name="handler"><span data-ttu-id="edf11-132">追加するハンドラー。</span><span class="sxs-lookup"><span data-stu-id="edf11-132">The handler to add.</span></span></param>
        <summary><span data-ttu-id="edf11-133"><see cref="E:System.Windows.Data.Binding.SourceUpdated" /> 添付イベントのハンドラーを追加します。</span><span class="sxs-lookup"><span data-stu-id="edf11-133">Adds a handler for the <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edf11-134">このメソッドで添付イベントの使用をサポートする[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]します。</span><span class="sxs-lookup"><span data-stu-id="edf11-134">This method supports attached event usage in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTargetUpdatedHandler">
      <MemberSignature Language="C#" Value="public static void AddTargetUpdatedHandler (System.Windows.DependencyObject element, EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddTargetUpdatedHandler(class System.Windows.DependencyObject element, class System.EventHandler`1&lt;class System.Windows.Data.DataTransferEventArgs&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.AddTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddTargetUpdatedHandler (element As DependencyObject, handler As EventHandler(Of DataTransferEventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddTargetUpdatedHandler(System::Windows::DependencyObject ^ element, EventHandler&lt;System::Windows::Data::DataTransferEventArgs ^&gt; ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddTargetUpdatedHandler : System.Windows.DependencyObject * EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt; -&gt; unit" Usage="System.Windows.Data.Binding.AddTargetUpdatedHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="edf11-135">イベントをリッスンする <see cref="T:System.Windows.UIElement" /> または <see cref="T:System.Windows.ContentElement" />。</span><span class="sxs-lookup"><span data-stu-id="edf11-135">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to the event.</span></span></param>
        <param name="handler"><span data-ttu-id="edf11-136">追加するハンドラー。</span><span class="sxs-lookup"><span data-stu-id="edf11-136">The handler to add.</span></span></param>
        <summary><span data-ttu-id="edf11-137"><see cref="E:System.Windows.Data.Binding.TargetUpdated" /> 添付イベントのハンドラーを追加します。</span><span class="sxs-lookup"><span data-stu-id="edf11-137">Adds a handler for the <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edf11-138">このメソッドで添付イベントの使用をサポートする[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]します。</span><span class="sxs-lookup"><span data-stu-id="edf11-138">This method supports attached event usage in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AsyncState">
      <MemberSignature Language="C#" Value="public object AsyncState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object AsyncState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.AsyncState" />
      <MemberSignature Language="VB.NET" Value="Public Property AsyncState As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ AsyncState { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AsyncState : obj with get, set" Usage="System.Windows.Data.Binding.AsyncState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="edf11-139">非同期データ ディスパッチャーに渡される非透過データを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="edf11-139">Gets or sets opaque data passed to the asynchronous data dispatcher.</span></span></summary>
        <value><span data-ttu-id="edf11-140">非同期データ ディスパッチャーに渡されるデータ。</span><span class="sxs-lookup"><span data-stu-id="edf11-140">Data passed to the asynchronous data dispatcher.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Data.Binding.IsAsync" />
        <altmember cref="P:System.Windows.Data.ObjectDataProvider.IsAsynchronous" />
        <altmember cref="P:System.Windows.Data.XmlDataProvider.IsAsynchronous" />
      </Docs>
    </Member>
    <Member MemberName="BindsDirectlyToSource">
      <MemberSignature Language="C#" Value="public bool BindsDirectlyToSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BindsDirectlyToSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.BindsDirectlyToSource" />
      <MemberSignature Language="VB.NET" Value="Public Property BindsDirectlyToSource As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool BindsDirectlyToSource { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.BindsDirectlyToSource : bool with get, set" Usage="System.Windows.Data.Binding.BindsDirectlyToSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="edf11-141"><see cref="P:System.Windows.Data.Binding.Path" /> を評価するときに、データ項目を基準にするか、<see cref="T:System.Windows.Data.DataSourceProvider" /> オブジェクトを基準にするかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="edf11-141">Gets or sets a value that indicates whether to evaluate the <see cref="P:System.Windows.Data.Binding.Path" /> relative to the data item or the <see cref="T:System.Windows.Data.DataSourceProvider" /> object.</span></span></summary>
        <value><span data-ttu-id="edf11-142">データ項目自体を基準にしてパスを評価する場合は <see langword="false" />、それ以外の場合は <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="edf11-142"><see langword="false" /> to evaluate the path relative to the data item itself; otherwise, <see langword="true" />.</span></span> <span data-ttu-id="edf11-143">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="edf11-143">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edf11-144">通常の動作 (このプロパティが`false`) の特別な処理が含まれています<xref:System.Windows.Data.DataSourceProvider>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="edf11-144">The normal behavior (when this property is `false`) includes special treatment for <xref:System.Windows.Data.DataSourceProvider> objects.</span></span> <span data-ttu-id="edf11-145">この場合、バインディング エンジンが評価される、<xref:System.Windows.Data.Binding.Path%2A>から取得したオブジェクトを基準として、<xref:System.Windows.Data.DataSourceProvider.Data%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="edf11-145">In this case, the binding engine evaluates the <xref:System.Windows.Data.Binding.Path%2A> relative to the object obtained from the <xref:System.Windows.Data.DataSourceProvider.Data%2A> property.</span></span> <span data-ttu-id="edf11-146">さらに、リッスン、バインド、<xref:System.Windows.Data.DataSourceProvider.DataChanged>イベントと、それに従って反応します。</span><span class="sxs-lookup"><span data-stu-id="edf11-146">In addition, the binding listens for the <xref:System.Windows.Data.DataSourceProvider.DataChanged> event and reacts accordingly.</span></span> <span data-ttu-id="edf11-147">このプロパティを設定`true`この動作をオーバーライドし、バインドのプロパティにアクセスを<xref:System.Windows.Data.DataSourceProvider>オブジェクト自体です。</span><span class="sxs-lookup"><span data-stu-id="edf11-147">Setting this property to `true` overrides this behavior and gives the binding access to properties of the <xref:System.Windows.Data.DataSourceProvider> object itself.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Data.ObjectDataProvider" />
        <altmember cref="T:System.Windows.Data.XmlDataProvider" />
      </Docs>
    </Member>
    <Member MemberName="Converter">
      <MemberSignature Language="C#" Value="public System.Windows.Data.IValueConverter Converter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.IValueConverter Converter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.Converter" />
      <MemberSignature Language="VB.NET" Value="Public Property Converter As IValueConverter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::IValueConverter ^ Converter { System::Windows::Data::IValueConverter ^ get(); void set(System::Windows::Data::IValueConverter ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Converter : System.Windows.Data.IValueConverter with get, set" Usage="System.Windows.Data.Binding.Converter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.IValueConverter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="edf11-148">使用するコンバーターを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="edf11-148">Gets or sets the converter to use.</span></span></summary>
        <value><span data-ttu-id="edf11-149"><see cref="T:System.Windows.Data.IValueConverter" /> 型の値。</span><span class="sxs-lookup"><span data-stu-id="edf11-149">A value of type <see cref="T:System.Windows.Data.IValueConverter" />.</span></span> <span data-ttu-id="edf11-150">既定値は、<see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="edf11-150">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edf11-151">バインディングは、元の値とターゲット値の型変換を実行しようとする既定のコンバーターを暗黙的に使用します。</span><span class="sxs-lookup"><span data-stu-id="edf11-151">A binding implicitly uses a default converter that tries to do a type conversion between the source value and the target value.</span></span> <span data-ttu-id="edf11-152">変換を実行できない場合、既定のコンバーターは `null` を返します。</span><span class="sxs-lookup"><span data-stu-id="edf11-152">If a conversion cannot be made, the default converter returns `null`.</span></span>  
  
 <span data-ttu-id="edf11-153">カスタム値コンバーターを関連付けるバインドを使用する場合は、実装するクラスを作成する必要があります、<xref:System.Windows.Data.IValueConverter>インターフェイスし、実装を提供、<xref:System.Windows.Data.IValueConverter.Convert%2A>と<xref:System.Windows.Data.IValueConverter.ConvertBack%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="edf11-153">If you want to associate a custom value converter with a binding, you should create a class that implements the <xref:System.Windows.Data.IValueConverter> interface and supply implementations for the <xref:System.Windows.Data.IValueConverter.Convert%2A> and <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> methods.</span></span> <span data-ttu-id="edf11-154">値コンバーターでは、別の 1 つの型にデータを変更する、文字のセットなどのカルチャの詳細の間の変換、または、プレゼンテーションの他の側面を変更できます。</span><span class="sxs-lookup"><span data-stu-id="edf11-154">Value converters can change data from one type to another, translate between cultural details such as character sets, or modify other aspects of their presentation.</span></span> <span data-ttu-id="edf11-155">変換の一般的なシナリオの例については、「データ変換」を参照してください、[データ バインディングの概要](~/docs/framework/wpf/data/data-binding-overview.md)します。</span><span class="sxs-lookup"><span data-stu-id="edf11-155">For examples of typical conversion scenarios, see "Data Conversion" in the [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
<a name="xamlAttributeUsage_Converter"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="edf11-156">XAML 属性の使用方法</span><span class="sxs-lookup"><span data-stu-id="edf11-156">XAML Attribute Usage</span></span>  
  
```  
<object Converter="myConverter"/>  
```  
  
<a name="xamlValues_Converter"></a>   
## <a name="xaml-values"></a><span data-ttu-id="edf11-157">XAML 値</span><span class="sxs-lookup"><span data-stu-id="edf11-157">XAML Values</span></span>  
 <span data-ttu-id="edf11-158">*myConverter*</span><span class="sxs-lookup"><span data-stu-id="edf11-158">*myConverter*</span></span>  
 <span data-ttu-id="edf11-159">実装するクラスにリソース参照、 <xref:System.Windows.Data.IValueConverter> 、インターフェイスの実装が含まれますが、<xref:System.Windows.Data.IValueConverter.Convert%2A>と<xref:System.Windows.Data.IValueConverter.ConvertBack%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="edf11-159">A resource reference to a class that implements the <xref:System.Windows.Data.IValueConverter> interface, which includes implementations of the <xref:System.Windows.Data.IValueConverter.Convert%2A> and <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> methods.</span></span> <span data-ttu-id="edf11-160">値コンバーターを参照するには、使用、 [StaticResource マークアップ拡張機能](~/docs/framework/wpf/advanced/staticresource-markup-extension.md)します。</span><span class="sxs-lookup"><span data-stu-id="edf11-160">To refer to a value converter, use the [StaticResource Markup Extension](~/docs/framework/wpf/advanced/staticresource-markup-extension.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConverterCulture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo ConverterCulture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo ConverterCulture" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.ConverterCulture" />
      <MemberSignature Language="VB.NET" Value="Public Property ConverterCulture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ ConverterCulture { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConverterCulture : System.Globalization.CultureInfo with get, set" Usage="System.Windows.Data.Binding.ConverterCulture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.CultureInfoIetfLanguageTagConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="edf11-161">コンバーターを評価するカルチャを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="edf11-161">Gets or sets the culture in which to evaluate the converter.</span></span></summary>
        <value><span data-ttu-id="edf11-162">既定値は、<see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="edf11-162">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edf11-163">このプロパティを設定しない場合、バインディング エンジンを使用して、`Language`バインディング ターゲット オブジェクトのプロパティ。</span><span class="sxs-lookup"><span data-stu-id="edf11-163">If you do not set this property, the binding engine uses the `Language` property of the binding target object.</span></span> <span data-ttu-id="edf11-164">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]この既定値は"EN-US"または明示的に設定されている場合、ページのルート要素 (または任意の要素) から値を継承します。</span><span class="sxs-lookup"><span data-stu-id="edf11-164">In [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] this defaults to "en-US" or inherits the value from the root element (or any element) of the page, if one has been explicitly set.</span></span>  
  
 <span data-ttu-id="edf11-165">データ変換については、データの変換」セクションを参照してください、[データ バインディングの概要](~/docs/framework/wpf/data/data-binding-overview.md)します。</span><span class="sxs-lookup"><span data-stu-id="edf11-165">For information about data conversion, see the Data Conversion section in the [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConverterParameter">
      <MemberSignature Language="C#" Value="public object ConverterParameter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ConverterParameter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.ConverterParameter" />
      <MemberSignature Language="VB.NET" Value="Public Property ConverterParameter As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ConverterParameter { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConverterParameter : obj with get, set" Usage="System.Windows.Data.Binding.ConverterParameter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="edf11-166"><see cref="P:System.Windows.Data.Binding.Converter" /> に渡すパラメーターを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="edf11-166">Gets or sets the parameter to pass to the <see cref="P:System.Windows.Data.Binding.Converter" />.</span></span></summary>
        <value><span data-ttu-id="edf11-167"><see cref="P:System.Windows.Data.Binding.Converter" /> に渡すパラメーター。</span><span class="sxs-lookup"><span data-stu-id="edf11-167">The parameter to pass to the <see cref="P:System.Windows.Data.Binding.Converter" />.</span></span> <span data-ttu-id="edf11-168">既定値は、<see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="edf11-168">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edf11-169">使用することができます、<xref:System.Windows.Data.Binding.ConverterParameter%2A>プロパティ オブジェクトを変換する方法を指定します。</span><span class="sxs-lookup"><span data-stu-id="edf11-169">You can use the <xref:System.Windows.Data.Binding.ConverterParameter%2A> property to specify how an object is converted.</span></span>  <span data-ttu-id="edf11-170">このプロパティは、バインディングで使用するコンバーターの追加情報を渡します。</span><span class="sxs-lookup"><span data-stu-id="edf11-170">This property passes additional information to a converter that you use on a binding.</span></span>  <span data-ttu-id="edf11-171">指定した場合、<xref:System.Windows.Data.Binding.ConverterParameter%2A>に値が渡される、<xref:System.Windows.Data.IValueConverter.Convert%2A>と<xref:System.Windows.Data.IValueConverter.ConvertBack%2A>メソッドとして、`parameter`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="edf11-171">When you specify a <xref:System.Windows.Data.Binding.ConverterParameter%2A>, the value is passed to the <xref:System.Windows.Data.IValueConverter.Convert%2A> and <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> methods as the `parameter` parameter.</span></span>  
  
 <span data-ttu-id="edf11-172">例については、「[方法: バインドされた項目の一覧に基づいて値を生成](~/docs/framework/wpf/data/how-to-produce-a-value-based-on-a-list-of-bound-items.md)します。</span><span class="sxs-lookup"><span data-stu-id="edf11-172">For an example, see [How to: Produce a Value Based on a List of Bound Items](~/docs/framework/wpf/data/how-to-produce-a-value-based-on-a-list-of-bound-items.md).</span></span> <span data-ttu-id="edf11-173">この例の実装を示しています、<xref:System.Windows.Data.IMultiValueConverter>が、使用状況が引き続き適用されます。</span><span class="sxs-lookup"><span data-stu-id="edf11-173">That example shows an implementation of an <xref:System.Windows.Data.IMultiValueConverter> but the usage still applies.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DoNothing">
      <MemberSignature Language="C#" Value="public static readonly object DoNothing;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly object DoNothing" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Data.Binding.DoNothing" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DoNothing As Object " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Object ^ DoNothing;" />
      <MemberSignature Language="F#" Value=" staticval mutable DoNothing : obj" Usage="System.Windows.Data.Binding.DoNothing" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="edf11-174">バインディング エンジンにアクションを実行しないように指示するために、戻り値として使用されます。</span><span class="sxs-lookup"><span data-stu-id="edf11-174">Used as a returned value to instruct the binding engine not to perform any action.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edf11-175">バインディング ソースのプロパティまたはコンバーターが返すことができます<xref:System.Windows.Data.Binding.DoNothing?displayProperty=nameWithType>に任意のアクションを実行しないこと、バインディング エンジンに指示します。</span><span class="sxs-lookup"><span data-stu-id="edf11-175">A binding source property or a converter can return <xref:System.Windows.Data.Binding.DoNothing?displayProperty=nameWithType> to instruct the binding engine not to perform any action.</span></span> <span data-ttu-id="edf11-176">たとえば、値を次に移動しますが、バインディング ターゲットに転送しないにバインディング エンジンに指示する<xref:System.Windows.Data.Binding>で、 <xref:System.Windows.Data.PriorityBinding>、または使用しないように、`FallBackValue`または既定値。</span><span class="sxs-lookup"><span data-stu-id="edf11-176">For example, to instruct the binding engine not to transfer a value to the binding target, not to move to the next <xref:System.Windows.Data.Binding> in a <xref:System.Windows.Data.PriorityBinding>, or not to use the `FallBackValue` or default value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ElementName">
      <MemberSignature Language="C#" Value="public string ElementName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ElementName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.ElementName" />
      <MemberSignature Language="VB.NET" Value="Public Property ElementName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ElementName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ElementName : string with get, set" Usage="System.Windows.Data.Binding.ElementName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="edf11-177">バインド ソース オブジェクトとして使用する要素の名前を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="edf11-177">Gets or sets the name of the element to use as the binding source object.</span></span></summary>
        <value><span data-ttu-id="edf11-178">値、<see langword="Name" />プロパティまたは[X:name ディレクティブ](~/docs/framework/xaml-services/x-name-directive.md)の関心のある要素。</span><span class="sxs-lookup"><span data-stu-id="edf11-178">The value of the <see langword="Name" /> property or [x:Name Directive](~/docs/framework/xaml-services/x-name-directive.md) of the element of interest.</span></span> <span data-ttu-id="edf11-179">コード内で要素を参照できるのは、目的の要素が <see langword="RegisterName" /> を使用して適切な <see cref="T:System.Windows.NameScope" /> に登録されている場合に限ります。</span><span class="sxs-lookup"><span data-stu-id="edf11-179">You can refer to elements in code only if they are registered to the appropriate <see cref="T:System.Windows.NameScope" /> through <see langword="RegisterName" />.</span></span> <span data-ttu-id="edf11-180">詳細については、次を参照してください。 [WPF XAML 名前スコープ](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md)します。</span><span class="sxs-lookup"><span data-stu-id="edf11-180">For more information, see [WPF XAML Namescopes](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md).</span></span>  
  
<span data-ttu-id="edf11-181">既定値は、<see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="edf11-181">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edf11-182">このプロパティは、アプリケーションで別の要素のプロパティにバインドする場合に便利です。</span><span class="sxs-lookup"><span data-stu-id="edf11-182">This property is useful when you want to bind to the property of another element in your application.</span></span> <span data-ttu-id="edf11-183">使用する場合など、<xref:System.Windows.Controls.Slider>アプリケーションでは、別のコントロールの高さを制御するためにバインドする場合、または、 <xref:System.Windows.Controls.ContentControl.Content%2A> 、コントロールを<xref:System.Windows.Controls.Primitives.Selector.SelectedValue%2A>のプロパティ、<xref:System.Windows.Controls.ListBox>コントロール。</span><span class="sxs-lookup"><span data-stu-id="edf11-183">For example, if you want to use a <xref:System.Windows.Controls.Slider> to control the height of another control in your application, or if you want to bind the <xref:System.Windows.Controls.ContentControl.Content%2A> of your control to the <xref:System.Windows.Controls.Primitives.Selector.SelectedValue%2A> property of your <xref:System.Windows.Controls.ListBox> control.</span></span>  
  
 <span data-ttu-id="edf11-184">既定では、バインドがで指定されたデータ コンテキストを継承、`DataContext`いずれかが設定されている場合は、プロパティ。</span><span class="sxs-lookup"><span data-stu-id="edf11-184">By default, bindings inherit the data context specified by the `DataContext` property, if one has been set.</span></span> <span data-ttu-id="edf11-185">ただし、<xref:System.Windows.Data.Binding.ElementName%2A>プロパティは、のソースを明示的に設定する方法の 1 つ、<xref:System.Windows.Data.Binding>し、継承されたデータ コンテキストをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="edf11-185">However, the <xref:System.Windows.Data.Binding.ElementName%2A> property is one of the ways you can explicitly set the source of a <xref:System.Windows.Data.Binding> and override the inherited data context.</span></span> <span data-ttu-id="edf11-186">詳細については、「[方法 :バインディング ソースを指定](~/docs/framework/wpf/data/how-to-specify-the-binding-source.md)します。</span><span class="sxs-lookup"><span data-stu-id="edf11-186">For more information, see [How to: Specify the Binding Source](~/docs/framework/wpf/data/how-to-specify-the-binding-source.md).</span></span>  
  
 <span data-ttu-id="edf11-187"><xref:System.Windows.Data.Binding.Source%2A>と<xref:System.Windows.Data.Binding.RelativeSource%2A>のプロパティ、<xref:System.Windows.Data.Binding>クラスも有効にするバインディングのソースを設定する明示的にします。</span><span class="sxs-lookup"><span data-stu-id="edf11-187">The <xref:System.Windows.Data.Binding.Source%2A> and <xref:System.Windows.Data.Binding.RelativeSource%2A> properties of the <xref:System.Windows.Data.Binding> class also enable you to set the source of the binding explicitly.</span></span> <span data-ttu-id="edf11-188">ただし、3 つのプロパティの 1 つだけ<xref:System.Windows.Data.Binding.ElementName%2A>、 <xref:System.Windows.Data.Binding.Source%2A>、および<xref:System.Windows.Data.Binding.RelativeSource%2A>、する必要がありますセットごとに、バインド、または競合が発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="edf11-188">However, only one of the three properties, <xref:System.Windows.Data.Binding.ElementName%2A>, <xref:System.Windows.Data.Binding.Source%2A>, and <xref:System.Windows.Data.Binding.RelativeSource%2A>, should be set for each binding, or a conflict might occur.</span></span> <span data-ttu-id="edf11-189">このプロパティは、バインディング ソースの競合がある場合に例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="edf11-189">This property throws an exception if there is a binding source conflict.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXmlNamespaceManager">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlNamespaceManager GetXmlNamespaceManager (System.Windows.DependencyObject target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlNamespaceManager GetXmlNamespaceManager(class System.Windows.DependencyObject target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.GetXmlNamespaceManager(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetXmlNamespaceManager (target As DependencyObject) As XmlNamespaceManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlNamespaceManager ^ GetXmlNamespaceManager(System::Windows::DependencyObject ^ target);" />
      <MemberSignature Language="F#" Value="static member GetXmlNamespaceManager : System.Windows.DependencyObject -&gt; System.Xml.XmlNamespaceManager" Usage="System.Windows.Data.Binding.GetXmlNamespaceManager target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNamespaceManager</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="edf11-190">名前空間情報の取得元となるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="edf11-190">The object from which to get namespace information.</span></span></param>
        <summary><span data-ttu-id="edf11-191">指定したオブジェクトにアタッチされているバインドによって使用される [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] 名前空間マネージャー オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="edf11-191">Returns an [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] namespace manager object used by the binding attached to the specified object.</span></span></summary>
        <returns><span data-ttu-id="edf11-192">渡されたオブジェクト要素上のバインディングに関連する [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] 名前空間を表示するために使用されるオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="edf11-192">A returned object used for viewing [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] namespaces that relate to the binding on the passed object element.</span></span> <span data-ttu-id="edf11-193">このオブジェクトは <see cref="T:System.Xml.XmlNamespaceManager" /> としてキャストする必要があります。</span><span class="sxs-lookup"><span data-stu-id="edf11-193">This object should be cast as <see cref="T:System.Xml.XmlNamespaceManager" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edf11-194">このメソッドの添付プロパティの使用をサポートする、<xref:System.Windows.Data.Binding.XmlNamespaceManager%2A>添付プロパティ。</span><span class="sxs-lookup"><span data-stu-id="edf11-194">This method supports attached property usage for the <xref:System.Windows.Data.Binding.XmlNamespaceManager%2A> attached property.</span></span>  
  
 [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] <span data-ttu-id="edf11-195">名前空間マネージャーは、バインディングのデータの出所する場合にのみ該当、[!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)]バインディング ソース (<xref:System.Windows.Data.XmlDataProvider>オブジェクト)。</span><span class="sxs-lookup"><span data-stu-id="edf11-195">namespace managers are relevant only if the data in the binding came from an [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] binding source (<xref:System.Windows.Data.XmlDataProvider> object).</span></span>  
  
 <span data-ttu-id="edf11-196">名前空間マネージャーが具体的には適用されていない場合、元のデータ ソースを作成または後で呼び出すことによって<xref:System.Windows.Data.Binding.SetXmlNamespaceManager%2A>、バインドからこのメソッドが返されます`null`します。</span><span class="sxs-lookup"><span data-stu-id="edf11-196">If a namespace manager was not specifically applied either in the original data source creation or by subsequently calling <xref:System.Windows.Data.Binding.SetXmlNamespaceManager%2A> on the binding, then this method will return `null`.</span></span>  
  
 <span data-ttu-id="edf11-197">このメソッドは常に返します`null`、バインドの背後にあるデータがない場合[!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)]します。</span><span class="sxs-lookup"><span data-stu-id="edf11-197">This method will always return `null` if the data behind the binding is not [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)].</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="edf11-198"><paramref name="target" /> パラメーターとして <see langword="null" /> を使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="edf11-198">The <paramref name="target" /> parameter cannot be <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IndexerName">
      <MemberSignature Language="C#" Value="public const string IndexerName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string IndexerName" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Data.Binding.IndexerName" />
      <MemberSignature Language="VB.NET" Value="Public Const IndexerName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ IndexerName;" />
      <MemberSignature Language="F#" Value="val mutable IndexerName : string" Usage="System.Windows.Data.Binding.IndexerName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="edf11-199"><see cref="P:System.ComponentModel.PropertyChangedEventArgs.PropertyName" /> の <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> として使用され、インデクサー プロパティが変更されたことを示します。</span><span class="sxs-lookup"><span data-stu-id="edf11-199">Used as the <see cref="P:System.ComponentModel.PropertyChangedEventArgs.PropertyName" /> of <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> to indicate that an indexer property has changed.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAsync">
      <MemberSignature Language="C#" Value="public bool IsAsync { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAsync" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.IsAsync" />
      <MemberSignature Language="VB.NET" Value="Public Property IsAsync As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAsync { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsAsync : bool with get, set" Usage="System.Windows.Data.Binding.IsAsync" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="edf11-200"><see cref="T:System.Windows.Data.Binding" /> が値の取得と設定を非同期で行う必要があるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="edf11-200">Gets or sets a value that indicates whether the <see cref="T:System.Windows.Data.Binding" /> should get and set values asynchronously.</span></span></summary>
        <value><span data-ttu-id="edf11-201">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="edf11-201">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edf11-202">使用して、<xref:System.Windows.Data.Binding.IsAsync%2A>プロパティと、`get`バインディング ソース プロパティのアクセサーは長時間かかる場合があります。</span><span class="sxs-lookup"><span data-stu-id="edf11-202">Use the <xref:System.Windows.Data.Binding.IsAsync%2A> property when the `get` accessor of your binding source property might take a long time.</span></span> <span data-ttu-id="edf11-203">1 つの例は、イメージのプロパティで、 `get` Web からダウンロードするアクセサーを指定します。</span><span class="sxs-lookup"><span data-stu-id="edf11-203">One example is an image property with a `get` accessor that downloads from the Web.</span></span> <span data-ttu-id="edf11-204">設定<xref:System.Windows.Data.Binding.IsAsync%2A>に`true`ブロッキングを回避、[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]ダウンロードが実行中にします。</span><span class="sxs-lookup"><span data-stu-id="edf11-204">Setting <xref:System.Windows.Data.Binding.IsAsync%2A> to `true` avoids blocking the [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] while the download occurs.</span></span>  
  
 <span data-ttu-id="edf11-205">バインディングがレポートに到達する値を待っている間に、 <xref:System.Windows.Data.BindingBase.FallbackValue%2A>1 つは、使用可能な場合は、バインディングの既定値はターゲット プロパティ。</span><span class="sxs-lookup"><span data-stu-id="edf11-205">While waiting for the value to arrive, the binding reports the <xref:System.Windows.Data.BindingBase.FallbackValue%2A>, if one is available, or the default value of the binding target property.</span></span>  
  
 <span data-ttu-id="edf11-206">ただし、存在することはできませんを使用する必要がある多くのシナリオ、<xref:System.Windows.Data.Binding.IsAsync%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="edf11-206">However, there should not be many scenarios where you need to use the <xref:System.Windows.Data.Binding.IsAsync%2A> property.</span></span> <span data-ttu-id="edf11-207">[!INCLUDE[TLA2#tla_net](~/includes/tla2sharptla-net-md.md)]桁違いのフィールド セットをよりも、プロパティ定義のガイドラインをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="edf11-207">The [!INCLUDE[TLA2#tla_net](~/includes/tla2sharptla-net-md.md)] guidelines recommend against defining properties that are orders of magnitude slower than a field set would be.</span></span> <span data-ttu-id="edf11-208">クラスを作成するときは、以外の非常に低速の操作を処理することを検討してください、`get`アクセサーと、結果をキャッシュします。</span><span class="sxs-lookup"><span data-stu-id="edf11-208">When you are creating your class, consider handling extremely slow operations outside of the `get` accessor and caching the result.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Data.Binding.AsyncState" />
        <altmember cref="P:System.Windows.Data.ObjectDataProvider.IsAsynchronous" />
        <altmember cref="P:System.Windows.Data.XmlDataProvider.IsAsynchronous" />
        <altmember cref="T:System.Windows.PropertyChangedCallback" />
      </Docs>
    </Member>
    <Member MemberName="Mode">
      <MemberSignature Language="C#" Value="public System.Windows.Data.BindingMode Mode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Data.BindingMode Mode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.Mode" />
      <MemberSignature Language="VB.NET" Value="Public Property Mode As BindingMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::BindingMode Mode { System::Windows::Data::BindingMode get(); void set(System::Windows::Data::BindingMode value); };" />
      <MemberSignature Language="F#" Value="member this.Mode : System.Windows.Data.BindingMode with get, set" Usage="System.Windows.Data.Binding.Mode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="edf11-209">バインドのデータ フローの方向を示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="edf11-209">Gets or sets a value that indicates the direction of the data flow in the binding.</span></span></summary>
        <value><span data-ttu-id="edf11-210"><see cref="T:System.Windows.Data.BindingMode" /> 値のいずれか。</span><span class="sxs-lookup"><span data-stu-id="edf11-210">One of the <see cref="T:System.Windows.Data.BindingMode" /> values.</span></span> <span data-ttu-id="edf11-211">既定は <see cref="F:System.Windows.Data.BindingMode.Default" /> です。これは、ターゲットの依存関係プロパティの、既定のバインド モード値を返します。</span><span class="sxs-lookup"><span data-stu-id="edf11-211">The default is <see cref="F:System.Windows.Data.BindingMode.Default" />, which returns the default binding mode value of the target dependency property.</span></span> <span data-ttu-id="edf11-212">ただし、既定値は各依存関係プロパティによって異なります。</span><span class="sxs-lookup"><span data-stu-id="edf11-212">However, the default value varies for each dependency property.</span></span> <span data-ttu-id="edf11-213">一般に、ユーザーが編集できる、テキスト ボックスやチェック ボックスなどのコントロール プロパティは既定で双方向のバインディングであり、それ以外のほとんどのプロパティは既定で一方向のバインドになります。</span><span class="sxs-lookup"><span data-stu-id="edf11-213">In general, user-editable control properties, such as those of text boxes and check boxes, default to two-way bindings, whereas most other properties default to one-way bindings.</span></span>  
  
<span data-ttu-id="edf11-214">依存関係プロパティが既定で一方向と双方向のどちらでバインドされるかをプログラムで判断する 1 つの方法として、<see cref="M:System.Windows.DependencyProperty.GetMetadata(System.Type)" /> を使用してそのプロパティのプロパティ メタデータを取得してから、<see cref="P:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault" /> プロパティのブール値を確認することがきます。</span><span class="sxs-lookup"><span data-stu-id="edf11-214">A programmatic way to determine whether a dependency property binds one-way or two-way by default is to get the property metadata of the property using <see cref="M:System.Windows.DependencyProperty.GetMetadata(System.Type)" /> and then check the Boolean value of the <see cref="P:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault" /> property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edf11-215">サポートするために<xref:System.Windows.Data.BindingMode.OneWay>と<xref:System.Windows.Data.BindingMode.TwoWay>基になるデータのバインドを実装する必要があります<xref:System.ComponentModel.INotifyPropertyChanged>します。</span><span class="sxs-lookup"><span data-stu-id="edf11-215">To support <xref:System.Windows.Data.BindingMode.OneWay> and <xref:System.Windows.Data.BindingMode.TwoWay> bindings, the underlying data must implement <xref:System.ComponentModel.INotifyPropertyChanged>.</span></span> <span data-ttu-id="edf11-216">詳細については、「[方法: プロパティ変更通知を実装する](~/docs/framework/wpf/data/how-to-implement-property-change-notification.md)します。</span><span class="sxs-lookup"><span data-stu-id="edf11-216">For details, see [How to: Implement Property Change Notification](~/docs/framework/wpf/data/how-to-implement-property-change-notification.md).</span></span>  
  
 <span data-ttu-id="edf11-217"><xref:System.Windows.Data.BindingMode.TwoWay>または<xref:System.Windows.Data.BindingMode.OneWayToSource>バインドを設定して、ターゲットからソースへの更新プログラムを制御することができます、<xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="edf11-217">For <xref:System.Windows.Data.BindingMode.TwoWay> or <xref:System.Windows.Data.BindingMode.OneWayToSource> bindings, you can control the target-to-source updates by setting the <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> property.</span></span> <span data-ttu-id="edf11-218">詳細については、「<xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="edf11-218">For more information, see <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>.</span></span>  
  
 <span data-ttu-id="edf11-219">異なるバインディング モードの詳細については、次を参照してください。[データ バインディングの概要](~/docs/framework/wpf/data/data-binding-overview.md)します。</span><span class="sxs-lookup"><span data-stu-id="edf11-219">For more information on the different binding modes, see [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyOnSourceUpdated">
      <MemberSignature Language="C#" Value="public bool NotifyOnSourceUpdated { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NotifyOnSourceUpdated" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.NotifyOnSourceUpdated" />
      <MemberSignature Language="VB.NET" Value="Public Property NotifyOnSourceUpdated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NotifyOnSourceUpdated { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.NotifyOnSourceUpdated : bool with get, set" Usage="System.Windows.Data.Binding.NotifyOnSourceUpdated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="edf11-220">バインディング ターゲットからバインディング ソースへ値が転送されたときに、<see cref="E:System.Windows.Data.Binding.SourceUpdated" /> イベントを発生させるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="edf11-220">Gets or sets a value that indicates whether to raise the <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> event when a value is transferred from the binding target to the binding source.</span></span></summary>
        <value><span data-ttu-id="edf11-221">バインディング ソースが更新されたときに、<see cref="E:System.Windows.Data.Binding.SourceUpdated" /> イベントを発生させる必要がある場合は、<see langword="true" />。それ以外の場合は、<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="edf11-221"><see langword="true" /> if the <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> event should be raised when the binding source value is updated; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="edf11-222">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="edf11-222">The default is <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Data.BindingExpression.UpdateSource" />
      </Docs>
    </Member>
    <Member MemberName="NotifyOnTargetUpdated">
      <MemberSignature Language="C#" Value="public bool NotifyOnTargetUpdated { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NotifyOnTargetUpdated" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.NotifyOnTargetUpdated" />
      <MemberSignature Language="VB.NET" Value="Public Property NotifyOnTargetUpdated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NotifyOnTargetUpdated { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.NotifyOnTargetUpdated : bool with get, set" Usage="System.Windows.Data.Binding.NotifyOnTargetUpdated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="edf11-223">バインディング ソースからバインディング ターゲットへ値が転送されたときに <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> イベントを発生させるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="edf11-223">Gets or sets a value that indicates whether to raise the <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> event when a value is transferred from the binding source to the binding target.</span></span></summary>
        <value><span data-ttu-id="edf11-224">バインディング ターゲットの値が更新されたときに、<see cref="E:System.Windows.Data.Binding.TargetUpdated" /> イベントを発生させる必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="edf11-224"><see langword="true" /> if the <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> event should be raised when the binding target value is updated; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="edf11-225">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="edf11-225">The default is <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Data.BindingExpression.UpdateTarget" />
      </Docs>
    </Member>
    <Member MemberName="NotifyOnValidationError">
      <MemberSignature Language="C#" Value="public bool NotifyOnValidationError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NotifyOnValidationError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.NotifyOnValidationError" />
      <MemberSignature Language="VB.NET" Value="Public Property NotifyOnValidationError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NotifyOnValidationError { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.NotifyOnValidationError : bool with get, set" Usage="System.Windows.Data.Binding.NotifyOnValidationError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="edf11-226">バインドされたオブジェクトに対して <see cref="E:System.Windows.Controls.Validation.Error" /> 添付イベントを発生させるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="edf11-226">Gets or sets a value that indicates whether to raise the <see cref="E:System.Windows.Controls.Validation.Error" /> attached event on the bound object.</span></span></summary>
        <value><span data-ttu-id="edf11-227"><see langword="true" /> 場合、<see cref="E:System.Windows.Controls.Validation.Error" />添付イベントがソースの更新中に検証エラーがある場合にバインドされたオブジェクトに対して発生します。 それ以外にする必要があります<see langword="false" />します。</span><span class="sxs-lookup"><span data-stu-id="edf11-227"><see langword="true" /> if the <see cref="E:System.Windows.Controls.Validation.Error" /> attached event should be raised on the bound object when there is a validation error during source updates; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="edf11-228">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="edf11-228">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edf11-229">バインディング<xref:System.Windows.Data.Binding.ValidationRules%2A>バインディング エンジンは、チェック、それに関連付けられているたびに、各ルールは、ソース プロパティにターゲット プロパティの値を転送します。</span><span class="sxs-lookup"><span data-stu-id="edf11-229">If the binding has <xref:System.Windows.Data.Binding.ValidationRules%2A> associated with it, the binding engine checks each rule each time it transfers the target property value to the source property.</span></span> <span data-ttu-id="edf11-230">ルールには、値が無効になります、バインディング エンジンは、作成、<xref:System.Windows.Controls.ValidationError>オブジェクトし、それに追加、<xref:System.Windows.Controls.Validation>します。<xref:System.Windows.Controls.Validation.Errors%2A></span><span class="sxs-lookup"><span data-stu-id="edf11-230">If a rule invalidates a value, the binding engine creates a <xref:System.Windows.Controls.ValidationError> object and adds it to the <xref:System.Windows.Controls.Validation>.<xref:System.Windows.Controls.Validation.Errors%2A></span></span> <span data-ttu-id="edf11-231">バインドされたオブジェクトのコレクションです。</span><span class="sxs-lookup"><span data-stu-id="edf11-231">collection of the bound object.</span></span> <span data-ttu-id="edf11-232">ときに、<xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType>プロパティが空ではない、<xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=nameWithType>オブジェクトの添付プロパティに設定`true`します。</span><span class="sxs-lookup"><span data-stu-id="edf11-232">When the <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> property is not empty, the <xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=nameWithType> attached property of the object is set to `true`.</span></span> <span data-ttu-id="edf11-233">場合、<xref:System.Windows.Data.Binding.NotifyOnValidationError%2A>のプロパティ、<xref:System.Windows.Data.Binding>に設定されている`true`、バインディング エンジンが発生し、<xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType>オブジェクトのイベントをアタッチします。</span><span class="sxs-lookup"><span data-stu-id="edf11-233">If the <xref:System.Windows.Data.Binding.NotifyOnValidationError%2A> property of the <xref:System.Windows.Data.Binding> is set to `true`, then the binding engine raises the <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> attached event on the object.</span></span>  
  
 <span data-ttu-id="edf11-234">検証プロセスの詳細については、データの検証」セクションを参照してください、[データ バインディングの概要](~/docs/framework/wpf/data/data-binding-overview.md)します。</span><span class="sxs-lookup"><span data-stu-id="edf11-234">For a detailed discussion of the validation process, see the Data Validation section in the [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public System.Windows.PropertyPath Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.PropertyPath Path" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As PropertyPath" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::PropertyPath ^ Path { System::Windows::PropertyPath ^ get(); void set(System::Windows::PropertyPath ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Path : System.Windows.PropertyPath with get, set" Usage="System.Windows.Data.Binding.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.PropertyPath</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="edf11-235">バインディング ソース プロパティへのパスを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="edf11-235">Gets or sets the path to the binding source property.</span></span></summary>
        <value><span data-ttu-id="edf11-236">バインディング ソース プロパティへのパス。</span><span class="sxs-lookup"><span data-stu-id="edf11-236">The path to the binding source.</span></span> <span data-ttu-id="edf11-237">既定値は、<see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="edf11-237">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edf11-238">各バインディングは、通常これら 4 つのコンポーネントを: バインディング ターゲット オブジェクト、ターゲット プロパティ、バインディング ソース、および使用するバインディング ソースの値へのパス。</span><span class="sxs-lookup"><span data-stu-id="edf11-238">Each binding typically has these four components: a binding target object, a target property, a binding source, and a path to the value in the binding source to use.</span></span> <span data-ttu-id="edf11-239">これらのデータ バインディングの概念の詳細については、次を参照してください。[データ バインディングの概要](~/docs/framework/wpf/data/data-binding-overview.md)します。</span><span class="sxs-lookup"><span data-stu-id="edf11-239">For more information about these data binding concepts, see [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
 <span data-ttu-id="edf11-240">使用して、<xref:System.Windows.Data.Binding.Path%2A>プロパティにバインドするソース値を指定します。</span><span class="sxs-lookup"><span data-stu-id="edf11-240">Use the <xref:System.Windows.Data.Binding.Path%2A> property to specify the source value you want to bind to:</span></span>  
  
-   <span data-ttu-id="edf11-241">最も簡単なケースで、<xref:System.Windows.Data.Binding.Path%2A>プロパティの値など、バインドに使用するソース オブジェクトのプロパティの名前は、`Path=PropertyName`します。</span><span class="sxs-lookup"><span data-stu-id="edf11-241">In the simplest case, the <xref:System.Windows.Data.Binding.Path%2A> property value is the name of the property of the source object to use for the binding, such as `Path=PropertyName`.</span></span>  
  
-   <span data-ttu-id="edf11-242">プロパティのサブプロパティは、c# で使用されるような構文で指定できます。</span><span class="sxs-lookup"><span data-stu-id="edf11-242">Subproperties of a property can be specified by a syntax similar to that used in C#.</span></span> <span data-ttu-id="edf11-243">たとえば、句 `Path=ShoppingCart.Order` は、バインディングをオブジェクトのサブプロパティ `Order` またはプロパティ `ShoppingCart` に設定します。</span><span class="sxs-lookup"><span data-stu-id="edf11-243">For instance, the clause `Path=ShoppingCart.Order` sets the binding to the subproperty `Order` of the object or property `ShoppingCart`.</span></span>  
  
-   <span data-ttu-id="edf11-244">添付プロパティにバインドするには、添付プロパティをかっこで囲みます。</span><span class="sxs-lookup"><span data-stu-id="edf11-244">To bind to an attached property, place parentheses around the attached property.</span></span> <span data-ttu-id="edf11-245">たとえば、添付プロパティにバインドする<xref:System.Windows.Controls.DockPanel.Dock%2A?displayProperty=nameWithType>、構文は`Path=(DockPanel.Dock)`します。</span><span class="sxs-lookup"><span data-stu-id="edf11-245">For example, to bind to the attached property <xref:System.Windows.Controls.DockPanel.Dock%2A?displayProperty=nameWithType>, the syntax is `Path=(DockPanel.Dock)`.</span></span>  
  
-   <span data-ttu-id="edf11-246">プロパティのインデクサーは、インデクサーが適用されているプロパティ名の後ろの角かっこ内に指定できます。</span><span class="sxs-lookup"><span data-stu-id="edf11-246">Indexers of a property can be specified within square brackets following the property name where the indexer is applied.</span></span> <span data-ttu-id="edf11-247">たとえば、句 `Path=ShoppingCart[0]` は、プロパティの内部インデックスがリテラル文字列「0」を処理する方法に対応するインデックスへのバインディングを設定します。</span><span class="sxs-lookup"><span data-stu-id="edf11-247">For instance, the clause `Path=ShoppingCart[0]` sets the binding to the index that corresponds to how your property's internal indexing handles the literal string "0".</span></span> <span data-ttu-id="edf11-248">複数のインデクサーもサポートします。</span><span class="sxs-lookup"><span data-stu-id="edf11-248">Multiple indexers are also supported.</span></span>  
  
-   <span data-ttu-id="edf11-249">`Path` 句ではインデクサーとサブプロパティを混在させることができます。例: `Path=ShoppingCart.ShippingInfo[MailingAddress,Street].`</span><span class="sxs-lookup"><span data-stu-id="edf11-249">Indexers and subproperties can be mixed in a `Path` clause; for example, `Path=ShoppingCart.ShippingInfo[MailingAddress,Street].`</span></span>  
  
-   <span data-ttu-id="edf11-250">インデクサーの内側には、コンマ (,) で区切られた複数のインデクサー パラメーターを設定できます。</span><span class="sxs-lookup"><span data-stu-id="edf11-250">Inside indexers you can have multiple indexer parameters separated by commas (,).</span></span> <span data-ttu-id="edf11-251">かっこで囲んで各パラメーターの型を指定できます。</span><span class="sxs-lookup"><span data-stu-id="edf11-251">The type of each parameter can be specified with parentheses.</span></span> <span data-ttu-id="edf11-252">たとえば、ある`Path="[(sys:Int32)42,(sys:Int32)24]"`ここで、`sys`にマップされて、`System`名前空間。</span><span class="sxs-lookup"><span data-stu-id="edf11-252">For example, you can have `Path="[(sys:Int32)42,(sys:Int32)24]"`, where `sys` is mapped to the `System` namespace.</span></span>  
  
-   <span data-ttu-id="edf11-253">ソースがコレクション ビューの場合は、スラッシュ (/) で、現在の項目を指定できます。</span><span class="sxs-lookup"><span data-stu-id="edf11-253">When the source is a collection view, the current item can be specified with a slash (/).</span></span> <span data-ttu-id="edf11-254">句ではたとえば、`Path=/`ビューの現在の項目にバインディングを設定します。</span><span class="sxs-lookup"><span data-stu-id="edf11-254">For example, the clause `Path=/` sets the binding to the current item in the view.</span></span> <span data-ttu-id="edf11-255">ソースがコレクションである場合は、この構文は、既定のコレクション ビューの現在の項目を指定します。</span><span class="sxs-lookup"><span data-stu-id="edf11-255">When the source is a collection, this syntax specifies the current item of the default collection view.</span></span>  
  
-   <span data-ttu-id="edf11-256">プロパティは、コレクションを走査するプロパティの名前とスラッシュを結合できます。</span><span class="sxs-lookup"><span data-stu-id="edf11-256">Property names and slashes can be combined to traverse properties that are collections.</span></span> <span data-ttu-id="edf11-257">たとえば、`Path=/Offices/ManagerName`を含むソース コレクションの現在の項目を指定します、`Offices`コレクションでもあるプロパティ。</span><span class="sxs-lookup"><span data-stu-id="edf11-257">For example, `Path=/Offices/ManagerName` specifies the current item of the source collection, which contains an `Offices` property that is also a collection.</span></span> <span data-ttu-id="edf11-258">現在の項目が格納しているオブジェクト、`ManagerName`プロパティ。</span><span class="sxs-lookup"><span data-stu-id="edf11-258">Its current item is an object that contains a `ManagerName` property.</span></span>  
  
-   <span data-ttu-id="edf11-259">必要に応じて、現在のソースにバインドするピリオド (.) のパスを使用できます。</span><span class="sxs-lookup"><span data-stu-id="edf11-259">Optionally, a period (.) path can be used to bind to the current source.</span></span> <span data-ttu-id="edf11-260">たとえば、`Text="{Binding}"` は、`Text="{Binding Path=.}"` と同じです。</span><span class="sxs-lookup"><span data-stu-id="edf11-260">For example, `Text="{Binding}"` is equivalent to `Text="{Binding Path=.}"`.</span></span>  
  
 <span data-ttu-id="edf11-261">パスの構文については、次を参照してください。[バインディング宣言の概要](~/docs/framework/wpf/data/binding-declarations-overview.md)または[PropertyPath の XAML 構文](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md)します。</span><span class="sxs-lookup"><span data-stu-id="edf11-261">For information about path syntax, see [Binding Declarations Overview](~/docs/framework/wpf/data/binding-declarations-overview.md) or [PropertyPath XAML Syntax](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md).</span></span>  
  
 <span data-ttu-id="edf11-262">[!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)]バインド」を参照してください、<xref:System.Windows.Data.Binding.XPath%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="edf11-262">For [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] bindings, see the <xref:System.Windows.Data.Binding.XPath%2A> property.</span></span>  
  
 <span data-ttu-id="edf11-263">オブジェクト全体にバインドするには指定する必要はありません、<xref:System.Windows.Data.Binding.Path%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="edf11-263">To bind to an entire object, you do not need to specify the <xref:System.Windows.Data.Binding.Path%2A> property.</span></span> <span data-ttu-id="edf11-264">詳細についてを参照してください「を指定するパスを値」[データ バインディングの概要](~/docs/framework/wpf/data/data-binding-overview.md)します。</span><span class="sxs-lookup"><span data-stu-id="edf11-264">For more information, see "Specifying the Path to the Value" in [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="edf11-265">次の例は、スタイルのトリガーを作成する、<xref:System.Windows.Controls.ToolTip>検証エラー メッセージを報告します。</span><span class="sxs-lookup"><span data-stu-id="edf11-265">The following example shows a style trigger that creates a <xref:System.Windows.Controls.ToolTip> that reports a validation error message.</span></span> <span data-ttu-id="edf11-266">現在のエラー コンテンツに、set アクセス操作子の値をバインド<xref:System.Windows.Controls.TextBox>(、 <xref:System.Windows.Controls.TextBox> 、スタイルを使用して) を使用して、<xref:System.Windows.Data.Binding.RelativeSource%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="edf11-266">The value of the setter binds to the error content of the current <xref:System.Windows.Controls.TextBox> (the <xref:System.Windows.Controls.TextBox> using the style) using the <xref:System.Windows.Data.Binding.RelativeSource%2A> property.</span></span> <span data-ttu-id="edf11-267">この例の詳細については、次を参照してください。[方法。検証にバインド実装](~/docs/framework/wpf/data/how-to-implement-binding-validation.md)します。</span><span class="sxs-lookup"><span data-stu-id="edf11-267">For more information on this example, see [How to: Implement Binding Validation](~/docs/framework/wpf/data/how-to-implement-binding-validation.md).</span></span>  
  
 [!code-xaml[BindValidation#5](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/Window1.xaml#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RelativeSource">
      <MemberSignature Language="C#" Value="public System.Windows.Data.RelativeSource RelativeSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.RelativeSource RelativeSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.RelativeSource" />
      <MemberSignature Language="VB.NET" Value="Public Property RelativeSource As RelativeSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::RelativeSource ^ RelativeSource { System::Windows::Data::RelativeSource ^ get(); void set(System::Windows::Data::RelativeSource ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RelativeSource : System.Windows.Data.RelativeSource with get, set" Usage="System.Windows.Data.Binding.RelativeSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.RelativeSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="edf11-268">バインディング ターゲットの位置に対して相対的な位置を指定することにより、バインディング ソースを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="edf11-268">Gets or sets the binding source by specifying its location relative to the position of the binding target.</span></span></summary>
        <value><span data-ttu-id="edf11-269">使用するバインディング ソースの相対的な位置を指定する <see cref="T:System.Windows.Data.RelativeSource" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="edf11-269">A <see cref="T:System.Windows.Data.RelativeSource" /> object specifying the relative location of the binding source to use.</span></span> <span data-ttu-id="edf11-270">既定値は、<see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="edf11-270">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edf11-271">オブジェクトの 1 つのプロパティを同一のオブジェクトの別のプロパティにバインドするか、スタイルまたはテンプレートのバインドを定義するこのプロパティは、よく使用されます。</span><span class="sxs-lookup"><span data-stu-id="edf11-271">This property is commonly used to bind one property of an object to another property of the same object, or to define a binding in a style or template.</span></span>  
  
 <span data-ttu-id="edf11-272">既定では、バインドがで指定されたデータ コンテキストを継承、`DataContext`いずれかが設定されている場合は、プロパティ。</span><span class="sxs-lookup"><span data-stu-id="edf11-272">By default, bindings inherit the data context specified by the `DataContext` property, if one has been set.</span></span> <span data-ttu-id="edf11-273">ただし、<xref:System.Windows.Data.Binding.RelativeSource%2A>プロパティは、のソースを明示的に設定する方法の 1 つ、<xref:System.Windows.Data.Binding>し、継承されたデータ コンテキストをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="edf11-273">However, the <xref:System.Windows.Data.Binding.RelativeSource%2A> property is one of the ways you can explicitly set the source of a <xref:System.Windows.Data.Binding> and override the inherited data context.</span></span> <span data-ttu-id="edf11-274">詳細については、「[方法 :バインディング ソースを指定](~/docs/framework/wpf/data/how-to-specify-the-binding-source.md)します。</span><span class="sxs-lookup"><span data-stu-id="edf11-274">For more information, see [How to: Specify the Binding Source](~/docs/framework/wpf/data/how-to-specify-the-binding-source.md).</span></span>  
  
 <span data-ttu-id="edf11-275"><xref:System.Windows.Data.Binding.ElementName%2A?displayProperty=nameWithType>と<xref:System.Windows.Data.Binding.Source%2A?displayProperty=nameWithType>プロパティも有効にするバインディングのソースを設定する明示的にします。</span><span class="sxs-lookup"><span data-stu-id="edf11-275">The <xref:System.Windows.Data.Binding.ElementName%2A?displayProperty=nameWithType> and <xref:System.Windows.Data.Binding.Source%2A?displayProperty=nameWithType> properties also enable you to set the source of the binding explicitly.</span></span> <span data-ttu-id="edf11-276">ただし、3 つのプロパティの 1 つだけ<xref:System.Windows.Data.Binding.ElementName%2A>、 <xref:System.Windows.Data.Binding.Source%2A>、および<xref:System.Windows.Data.Binding.RelativeSource%2A>、する必要がありますセットごとに、バインド、または競合が発生することができます。</span><span class="sxs-lookup"><span data-stu-id="edf11-276">However, only one of the three properties, <xref:System.Windows.Data.Binding.ElementName%2A>, <xref:System.Windows.Data.Binding.Source%2A>, and <xref:System.Windows.Data.Binding.RelativeSource%2A>, should be set for each binding, or a conflict can occur.</span></span> <span data-ttu-id="edf11-277">このプロパティは、バインディング ソースの競合がある場合に例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="edf11-277">This property throws an exception if there is a binding source conflict.</span></span>  
  
 <span data-ttu-id="edf11-278">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]についてを参照してください[RelativeSource のマークアップ拡張機能](~/docs/framework/wpf/advanced/relativesource-markupextension.md)します。</span><span class="sxs-lookup"><span data-stu-id="edf11-278">For [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] information, see [RelativeSource MarkupExtension](~/docs/framework/wpf/advanced/relativesource-markupextension.md).</span></span>  
    
## Examples  
 <span data-ttu-id="edf11-279">次の例は、スタイルのトリガーを作成する、<xref:System.Windows.Controls.ToolTip>検証エラー メッセージを報告します。</span><span class="sxs-lookup"><span data-stu-id="edf11-279">The following example shows a style trigger that creates a <xref:System.Windows.Controls.ToolTip> that reports a validation error message.</span></span> <span data-ttu-id="edf11-280">現在のエラー コンテンツに、set アクセス操作子の値をバインド<xref:System.Windows.Controls.TextBox>(、 <xref:System.Windows.Controls.TextBox> 、スタイルを使用して) を使用して、<xref:System.Windows.Data.Binding.RelativeSource%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="edf11-280">The value of the setter binds to the error content of the current <xref:System.Windows.Controls.TextBox> (the <xref:System.Windows.Controls.TextBox> using the style) using the <xref:System.Windows.Data.Binding.RelativeSource%2A> property.</span></span> <span data-ttu-id="edf11-281">この例の詳細については、次を参照してください。[方法。検証にバインド実装](~/docs/framework/wpf/data/how-to-implement-binding-validation.md)します。</span><span class="sxs-lookup"><span data-stu-id="edf11-281">For more information on this example, see [How to: Implement Binding Validation](~/docs/framework/wpf/data/how-to-implement-binding-validation.md).</span></span>  
  
 [!code-xaml[BindValidation#5](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/Window1.xaml#5)]  
  
 <span data-ttu-id="edf11-282">完全なサンプルを表示するには、次を参照してください。[バインディングの検証のサンプル](https://go.microsoft.com/fwlink/?LinkID=159972)します。</span><span class="sxs-lookup"><span data-stu-id="edf11-282">To see the full example, see [Binding Validation Sample](https://go.microsoft.com/fwlink/?LinkID=159972).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Data.Binding.Source" />
      </Docs>
    </Member>
    <Member MemberName="RemoveSourceUpdatedHandler">
      <MemberSignature Language="C#" Value="public static void RemoveSourceUpdatedHandler (System.Windows.DependencyObject element, EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveSourceUpdatedHandler(class System.Windows.DependencyObject element, class System.EventHandler`1&lt;class System.Windows.Data.DataTransferEventArgs&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.RemoveSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveSourceUpdatedHandler (element As DependencyObject, handler As EventHandler(Of DataTransferEventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveSourceUpdatedHandler(System::Windows::DependencyObject ^ element, EventHandler&lt;System::Windows::Data::DataTransferEventArgs ^&gt; ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveSourceUpdatedHandler : System.Windows.DependencyObject * EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt; -&gt; unit" Usage="System.Windows.Data.Binding.RemoveSourceUpdatedHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="edf11-283">イベントをリッスンする <see cref="T:System.Windows.UIElement" /> または <see cref="T:System.Windows.ContentElement" />。</span><span class="sxs-lookup"><span data-stu-id="edf11-283">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to the event.</span></span></param>
        <param name="handler"><span data-ttu-id="edf11-284">削除するハンドラー。</span><span class="sxs-lookup"><span data-stu-id="edf11-284">The handler to remove.</span></span></param>
        <summary><span data-ttu-id="edf11-285"><see cref="E:System.Windows.Data.Binding.SourceUpdated" /> 添付イベントのハンドラーを削除します。</span><span class="sxs-lookup"><span data-stu-id="edf11-285">Removes a handler for the <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edf11-286">このメソッドで添付イベントの使用をサポートする[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]します。</span><span class="sxs-lookup"><span data-stu-id="edf11-286">This method supports attached event usage in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveTargetUpdatedHandler">
      <MemberSignature Language="C#" Value="public static void RemoveTargetUpdatedHandler (System.Windows.DependencyObject element, EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveTargetUpdatedHandler(class System.Windows.DependencyObject element, class System.EventHandler`1&lt;class System.Windows.Data.DataTransferEventArgs&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.RemoveTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveTargetUpdatedHandler (element As DependencyObject, handler As EventHandler(Of DataTransferEventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveTargetUpdatedHandler(System::Windows::DependencyObject ^ element, EventHandler&lt;System::Windows::Data::DataTransferEventArgs ^&gt; ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveTargetUpdatedHandler : System.Windows.DependencyObject * EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt; -&gt; unit" Usage="System.Windows.Data.Binding.RemoveTargetUpdatedHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="edf11-287">イベントをリッスンする <see cref="T:System.Windows.UIElement" /> または <see cref="T:System.Windows.ContentElement" />。</span><span class="sxs-lookup"><span data-stu-id="edf11-287">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to the event.</span></span></param>
        <param name="handler"><span data-ttu-id="edf11-288">削除するハンドラー。</span><span class="sxs-lookup"><span data-stu-id="edf11-288">The handler to remove.</span></span></param>
        <summary><span data-ttu-id="edf11-289"><see cref="E:System.Windows.Data.Binding.TargetUpdated" /> 添付イベントのハンドラーを削除します。</span><span class="sxs-lookup"><span data-stu-id="edf11-289">Removes a handler for the <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edf11-290">このメソッドで添付イベントの使用をサポートする[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]します。</span><span class="sxs-lookup"><span data-stu-id="edf11-290">This method supports attached event usage in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetXmlNamespaceManager">
      <MemberSignature Language="C#" Value="public static void SetXmlNamespaceManager (System.Windows.DependencyObject target, System.Xml.XmlNamespaceManager value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetXmlNamespaceManager(class System.Windows.DependencyObject target, class System.Xml.XmlNamespaceManager value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.SetXmlNamespaceManager(System.Windows.DependencyObject,System.Xml.XmlNamespaceManager)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetXmlNamespaceManager (target As DependencyObject, value As XmlNamespaceManager)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetXmlNamespaceManager(System::Windows::DependencyObject ^ target, System::Xml::XmlNamespaceManager ^ value);" />
      <MemberSignature Language="F#" Value="static member SetXmlNamespaceManager : System.Windows.DependencyObject * System.Xml.XmlNamespaceManager -&gt; unit" Usage="System.Windows.Data.Binding.SetXmlNamespaceManager (target, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Xml.XmlNamespaceManager" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="edf11-291">名前空間情報の取得元となるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="edf11-291">The object from which to get namespace information.</span></span></param>
        <param name="value"><span data-ttu-id="edf11-292">渡された要素で名前空間の評価に使用する <see cref="T:System.Xml.XmlNamespaceManager" />。</span><span class="sxs-lookup"><span data-stu-id="edf11-292">The <see cref="T:System.Xml.XmlNamespaceManager" /> to use for namespace evaluation in the passed element.</span></span></param>
        <summary><span data-ttu-id="edf11-293">指定した要素にアタッチされているバインドによって使用される名前空間マネージャー オブジェクトを設定します。</span><span class="sxs-lookup"><span data-stu-id="edf11-293">Sets a namespace manager object used by the binding attached to the provided element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edf11-294">このメソッドの添付プロパティの使用をサポートする、<xref:System.Windows.Data.Binding.XmlNamespaceManager%2A>添付プロパティ。</span><span class="sxs-lookup"><span data-stu-id="edf11-294">This method supports attached property usage for the <xref:System.Windows.Data.Binding.XmlNamespaceManager%2A> attached property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="edf11-295"><paramref name="target" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="edf11-295"><paramref name="target" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializePath">
      <MemberSignature Language="C#" Value="public bool ShouldSerializePath ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializePath() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.ShouldSerializePath" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializePath () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializePath();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializePath : unit -&gt; bool" Usage="binding.ShouldSerializePath " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="edf11-296"><see cref="P:System.Windows.Data.Binding.Path" /> プロパティを永続化する必要があるかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="edf11-296">Indicates whether the <see cref="P:System.Windows.Data.Binding.Path" /> property should be persisted.</span></span></summary>
        <returns><span data-ttu-id="edf11-297">プロパティの値が既定値から変更されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="edf11-297"><see langword="true" /> if the property value has changed from its default; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edf11-298">これは、`ShouldSerialize`メソッドが提供されますので、<xref:System.Windows.Data.Binding.Path%2A>プロパティには、単純な既定値はありません。</span><span class="sxs-lookup"><span data-stu-id="edf11-298">This `ShouldSerialize` method is provided because the <xref:System.Windows.Data.Binding.Path%2A> property does not have a simple default value.</span></span> <span data-ttu-id="edf11-299">このメソッドは、プロパティが既定値から変更されたかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="edf11-299">This method indicates whether the property has changed from its default value.</span></span> <span data-ttu-id="edf11-300">いずれかのデザイナーを開発している場合に通常、このメソッドが呼び出す、<xref:System.Windows.Data.Binding>やコントロールを組み込む独自の開発、<xref:System.Windows.Data.Binding>します。</span><span class="sxs-lookup"><span data-stu-id="edf11-300">You typically invoke this method if you are either developing a designer for the <xref:System.Windows.Data.Binding> or developing your own control incorporating the <xref:System.Windows.Data.Binding>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeSource">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeSource() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.ShouldSerializeSource" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeSource () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeSource();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeSource : unit -&gt; bool" Usage="binding.ShouldSerializeSource " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="edf11-301"><see cref="P:System.Windows.Data.Binding.Source" /> プロパティを永続化する必要があるかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="edf11-301">Indicates whether the <see cref="P:System.Windows.Data.Binding.Source" /> property should be persisted.</span></span></summary>
        <returns><span data-ttu-id="edf11-302">プロパティの値が既定値から変更されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="edf11-302"><see langword="true" /> if the property value has changed from its default; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edf11-303">これは、`ShouldSerialize`メソッドが提供されますので、<xref:System.Windows.Data.Binding.Source%2A>プロパティには、単純な既定値はありません。</span><span class="sxs-lookup"><span data-stu-id="edf11-303">This `ShouldSerialize` method is provided because the <xref:System.Windows.Data.Binding.Source%2A> property does not have a simple default value.</span></span> <span data-ttu-id="edf11-304">このメソッドは、プロパティが既定値から変更されたかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="edf11-304">This method indicates whether the property has changed from its default value.</span></span> <span data-ttu-id="edf11-305">いずれかのデザイナーを開発している場合に通常、このメソッドが呼び出す、<xref:System.Windows.Data.Binding>やコントロールを組み込む独自の開発、<xref:System.Windows.Data.Binding>します。</span><span class="sxs-lookup"><span data-stu-id="edf11-305">You typically invoke this method if you are either developing a designer for the <xref:System.Windows.Data.Binding> or developing your own control incorporating the <xref:System.Windows.Data.Binding>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeValidationRules">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeValidationRules ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeValidationRules() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.ShouldSerializeValidationRules" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeValidationRules () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeValidationRules();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeValidationRules : unit -&gt; bool" Usage="binding.ShouldSerializeValidationRules " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="edf11-306"><see cref="P:System.Windows.Data.Binding.ValidationRules" /> プロパティを永続化する必要があるかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="edf11-306">Indicates whether the <see cref="P:System.Windows.Data.Binding.ValidationRules" /> property should be persisted.</span></span></summary>
        <returns><span data-ttu-id="edf11-307">プロパティの値が既定値から変更されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="edf11-307"><see langword="true" /> if the property value has changed from its default; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edf11-308">これは、`ShouldSerialize`メソッドが提供されますので、<xref:System.Windows.Data.Binding.ValidationRules%2A>プロパティには、単純な既定値はありません。</span><span class="sxs-lookup"><span data-stu-id="edf11-308">This `ShouldSerialize` method is provided because the <xref:System.Windows.Data.Binding.ValidationRules%2A> property does not have a simple default value.</span></span> <span data-ttu-id="edf11-309">このメソッドは、プロパティが既定値から変更されたかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="edf11-309">This method indicates whether the property has changed from its default value.</span></span> <span data-ttu-id="edf11-310">いずれかのデザイナーを開発している場合に通常、このメソッドが呼び出す、<xref:System.Windows.Data.Binding>やコントロールを組み込む独自の開発、<xref:System.Windows.Data.Binding>します。</span><span class="sxs-lookup"><span data-stu-id="edf11-310">You typically invoke this method if you are either developing a designer for the <xref:System.Windows.Data.Binding> or developing your own control incorporating the <xref:System.Windows.Data.Binding>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public object Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Source" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.Source" />
      <MemberSignature Language="VB.NET" Value="Public Property Source As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Source { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Source : obj with get, set" Usage="System.Windows.Data.Binding.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="edf11-311">バインド ソースとして使用されるオブジェクトを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="edf11-311">Gets or sets the object to use as the binding source.</span></span></summary>
        <value><span data-ttu-id="edf11-312">バインド ソースとして使用されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="edf11-312">The object to use as the binding source.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edf11-313">既定では、バインドがで指定されたデータ コンテキストを継承、`DataContext`いずれかが設定されている場合は、プロパティ。</span><span class="sxs-lookup"><span data-stu-id="edf11-313">By default, bindings inherit the data context specified by the `DataContext` property, if one has been set.</span></span> <span data-ttu-id="edf11-314">ただし、<xref:System.Windows.Data.Binding.Source%2A>プロパティは、のソースを明示的に設定する方法の 1 つ、<xref:System.Windows.Data.Binding>し、継承されたデータ コンテキストをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="edf11-314">However, the <xref:System.Windows.Data.Binding.Source%2A> property is one of the ways you can explicitly set the source of a <xref:System.Windows.Data.Binding> and override the inherited data context.</span></span> <span data-ttu-id="edf11-315">スコープを確立するの機能を必要としない場合、同じデータ コンテキストを継承するいくつかのプロパティを使用できます、<xref:System.Windows.Data.Binding.Source%2A>プロパティの代わりに、`DataContext`プロパティ。</span><span class="sxs-lookup"><span data-stu-id="edf11-315">If you do not need the functionality of establishing a scope in which several properties inherit the same data context, you can use the <xref:System.Windows.Data.Binding.Source%2A> property instead of the `DataContext` property.</span></span>  
  
 <span data-ttu-id="edf11-316"><xref:System.Windows.Data.Binding.ElementName%2A?displayProperty=nameWithType>と<xref:System.Windows.Data.Binding.RelativeSource%2A?displayProperty=nameWithType>プロパティも有効にするバインディングのソースを設定する明示的にします。</span><span class="sxs-lookup"><span data-stu-id="edf11-316">The <xref:System.Windows.Data.Binding.ElementName%2A?displayProperty=nameWithType> and <xref:System.Windows.Data.Binding.RelativeSource%2A?displayProperty=nameWithType> properties also enable you to set the source of the binding explicitly.</span></span> <span data-ttu-id="edf11-317">ただし、3 つのプロパティの 1 つだけ<xref:System.Windows.Data.Binding.ElementName%2A>、 <xref:System.Windows.Data.Binding.Source%2A>、および<xref:System.Windows.Data.Binding.RelativeSource%2A>、する必要がありますセットごとに、バインド、または競合が発生することができます。</span><span class="sxs-lookup"><span data-stu-id="edf11-317">However, only one of the three properties, <xref:System.Windows.Data.Binding.ElementName%2A>, <xref:System.Windows.Data.Binding.Source%2A>, and <xref:System.Windows.Data.Binding.RelativeSource%2A>, should be set for each binding, or a conflict can occur.</span></span> <span data-ttu-id="edf11-318">このプロパティは、バインディング ソースの競合がある場合に例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="edf11-318">This property throws an exception if there is a binding source conflict.</span></span>  
  
 <span data-ttu-id="edf11-319">このプロパティをオフに設定<xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="edf11-319">To clear this property, set it to <xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=nameWithType>.</span></span>  
  
<a name="xamlAttributeUsage_Source"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="edf11-320">XAML 属性の使用方法</span><span class="sxs-lookup"><span data-stu-id="edf11-320">XAML Attribute Usage</span></span>  
  
```  
<object Source="object"/>  
```  
  
<a name="xamlValues_Source"></a>   
## <a name="xaml-values"></a><span data-ttu-id="edf11-321">XAML 値</span><span class="sxs-lookup"><span data-stu-id="edf11-321">XAML Values</span></span>  
 <span data-ttu-id="edf11-322">*object*</span><span class="sxs-lookup"><span data-stu-id="edf11-322">*object*</span></span>  
 <span data-ttu-id="edf11-323">既存のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="edf11-323">An existing object.</span></span> <span data-ttu-id="edf11-324">既存のオブジェクトを参照するには、使用、 [StaticResource マークアップ拡張機能](~/docs/framework/wpf/advanced/staticresource-markup-extension.md)</span><span class="sxs-lookup"><span data-stu-id="edf11-324">To refer to an existing object, use the [StaticResource Markup Extension](~/docs/framework/wpf/advanced/staticresource-markup-extension.md)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="edf11-325">次の例では、`Person`という名前の文字列プロパティを持つオブジェクト`PersonName`で定義されている、`SDKSample`最初の行を強調表示されているように、名前空間。</span><span class="sxs-lookup"><span data-stu-id="edf11-325">The following example uses a `Person` object with a string property named `PersonName` that is defined in the `SDKSample` namespace, as the first highlighted line shows.</span></span> <span data-ttu-id="edf11-326">強調表示された行を含む、`<src>`要素がインスタンス化、`Person`オブジェクトを`PersonName`プロパティ値の`Joe`します。</span><span class="sxs-lookup"><span data-stu-id="edf11-326">In the highlighted line that contains the `<src>` element, it instantiates the `Person` object with a `PersonName` property value of `Joe`.</span></span> <span data-ttu-id="edf11-327">これを行う、`Resources`セクションし、割り当てられている、`x:Key`します。</span><span class="sxs-lookup"><span data-stu-id="edf11-327">This is done in the `Resources` section and assigned an `x:Key`.</span></span>  
  
 [!code-xaml[BindingInstantiation](~/samples/snippets/csharp/VS_Snippets_Wpf/SimpleBinding/CSharp/Page1.xaml?highlight=4,9,37)]  
  
 <span data-ttu-id="edf11-328">強調表示された行を含む、`<TextBlock>`要素にバインドする方法を示しています、`PersonName`プロパティ。</span><span class="sxs-lookup"><span data-stu-id="edf11-328">The highlighted line that contains the `<TextBlock>` elements shows how to bind to the `PersonName` property.</span></span> <span data-ttu-id="edf11-329">結果として、 <xref:System.Windows.Controls.TextBlock> "Joe"の値を持つコントロールが表示されます。</span><span class="sxs-lookup"><span data-stu-id="edf11-329">As a result, the <xref:System.Windows.Controls.TextBlock> control appears with the value "Joe".</span></span>  
  
 <span data-ttu-id="edf11-330">次の例では、<xref:System.Windows.Data.Binding.Source%2A>の値、<xref:System.Windows.Data.Binding>オブジェクトに設定されます、`static`プロパティ<xref:System.Windows.Application.Current%2A?displayProperty=nameWithType>:</span><span class="sxs-lookup"><span data-stu-id="edf11-330">In the following example, the <xref:System.Windows.Data.Binding.Source%2A> values of the <xref:System.Windows.Data.Binding> objects are set to the `static` property <xref:System.Windows.Application.Current%2A?displayProperty=nameWithType>:</span></span>  
  
 [!code-xaml[DataBindingLab#ComboBoxMultiBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/AddProductWindow.xaml#comboboxmultibinding)]  
  
 <span data-ttu-id="edf11-331">完全な例では、次を参照してください。[データ バインディング デモ](https://go.microsoft.com/fwlink/?LinkID=163703)します。</span><span class="sxs-lookup"><span data-stu-id="edf11-331">For the full example, see [Data Binding Demo](https://go.microsoft.com/fwlink/?LinkID=163703).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceUpdated">
      <MemberSignature Language="C#" Value="see AddSourceUpdatedHandler, and RemoveSourceUpdatedHandler" />
      <MemberSignature Language="ILAsm" Value="see AddSourceUpdatedHandler, and RemoveSourceUpdatedHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Data.Binding.SourceUpdated" />
      <MemberSignature Language="VB.NET" Value="see AddSourceUpdatedHandler, and RemoveSourceUpdatedHandler" />
      <MemberSignature Language="F#" Value="see AddSourceUpdatedHandler, and RemoveSourceUpdatedHandler" Usage="see AddSourceUpdatedHandler, and RemoveSourceUpdatedHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="edf11-332">値がバインディング ターゲットからバインディング ソースに転送されるときに発生します。ただし、これは <see cref="P:System.Windows.Data.Binding.NotifyOnSourceUpdated" /> 値が <see langword="true" /> に設定されているバインディングに限られます。</span><span class="sxs-lookup"><span data-stu-id="edf11-332">Occurs when a value is transferred from the binding target to the binding source, but only for bindings with the <see cref="P:System.Windows.Data.Binding.NotifyOnSourceUpdated" /> value set to <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_SourceUpdatedEvent"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="edf11-333">ルーティングされたイベント情報</span><span class="sxs-lookup"><span data-stu-id="edf11-333">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="edf11-334">識別子フィールドです。</span><span class="sxs-lookup"><span data-stu-id="edf11-334">Identifier field</span></span>|<xref:System.Windows.Data.Binding.SourceUpdatedEvent>|  
|<span data-ttu-id="edf11-335">ルーティング方法</span><span class="sxs-lookup"><span data-stu-id="edf11-335">Routing strategy</span></span>|<span data-ttu-id="edf11-336">バブル</span><span class="sxs-lookup"><span data-stu-id="edf11-336">Bubbling</span></span>|  
|<span data-ttu-id="edf11-337">Delegate</span><span class="sxs-lookup"><span data-stu-id="edf11-337">Delegate</span></span>|<span data-ttu-id="edf11-338"><xref:System.EventHandler%601>、に制約<xref:System.Windows.Data.DataTransferEventArgs>します。</span><span class="sxs-lookup"><span data-stu-id="edf11-338"><xref:System.EventHandler%601>, constrained to <xref:System.Windows.Data.DataTransferEventArgs>.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Data.BindingExpression.UpdateSource" />
        <altmember cref="E:System.Windows.Data.Binding.TargetUpdated" />
      </Docs>
    </Member>
    <Member MemberName="SourceUpdatedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent SourceUpdatedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent SourceUpdatedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Data.Binding.SourceUpdatedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SourceUpdatedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ SourceUpdatedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable SourceUpdatedEvent : System.Windows.RoutedEvent" Usage="System.Windows.Data.Binding.SourceUpdatedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="edf11-339"><see cref="E:System.Windows.Data.Binding.SourceUpdated" /> 添付イベントを識別します。</span><span class="sxs-lookup"><span data-stu-id="edf11-339">Identifies the <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetUpdated">
      <MemberSignature Language="C#" Value="see AddTargetUpdatedHandler, and RemoveTargetUpdatedHandler" />
      <MemberSignature Language="ILAsm" Value="see AddTargetUpdatedHandler, and RemoveTargetUpdatedHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Data.Binding.TargetUpdated" />
      <MemberSignature Language="VB.NET" Value="see AddTargetUpdatedHandler, and RemoveTargetUpdatedHandler" />
      <MemberSignature Language="F#" Value="see AddTargetUpdatedHandler, and RemoveTargetUpdatedHandler" Usage="see AddTargetUpdatedHandler, and RemoveTargetUpdatedHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="edf11-340">値がバインディング ソースからバインディング ターゲットに転送されるときに発生します。ただし、これは <see cref="P:System.Windows.Data.Binding.NotifyOnTargetUpdated" /> 値が <see langword="true" /> に設定されているバインディングに限られます。</span><span class="sxs-lookup"><span data-stu-id="edf11-340">Occurs when a value is transferred from the binding source to the binding target, but only for bindings with the <see cref="P:System.Windows.Data.Binding.NotifyOnTargetUpdated" /> value set to <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_TargetUpdatedEvent"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="edf11-341">ルーティングされたイベント情報</span><span class="sxs-lookup"><span data-stu-id="edf11-341">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="edf11-342">識別子フィールドです。</span><span class="sxs-lookup"><span data-stu-id="edf11-342">Identifier field</span></span>|<xref:System.Windows.Data.Binding.TargetUpdatedEvent>|  
|<span data-ttu-id="edf11-343">ルーティング方法</span><span class="sxs-lookup"><span data-stu-id="edf11-343">Routing strategy</span></span>|<span data-ttu-id="edf11-344">バブル</span><span class="sxs-lookup"><span data-stu-id="edf11-344">Bubbling</span></span>|  
|<span data-ttu-id="edf11-345">Delegate</span><span class="sxs-lookup"><span data-stu-id="edf11-345">Delegate</span></span>|<span data-ttu-id="edf11-346"><xref:System.EventHandler%601>、に制約<xref:System.Windows.Data.DataTransferEventArgs>します。</span><span class="sxs-lookup"><span data-stu-id="edf11-346"><xref:System.EventHandler%601>, constrained to <xref:System.Windows.Data.DataTransferEventArgs>.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Data.BindingExpression.UpdateTarget" />
        <altmember cref="E:System.Windows.Data.Binding.SourceUpdated" />
      </Docs>
    </Member>
    <Member MemberName="TargetUpdatedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TargetUpdatedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TargetUpdatedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Data.Binding.TargetUpdatedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TargetUpdatedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TargetUpdatedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TargetUpdatedEvent : System.Windows.RoutedEvent" Usage="System.Windows.Data.Binding.TargetUpdatedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="edf11-347"><see cref="E:System.Windows.Data.Binding.TargetUpdated" /> 添付イベントを識別します。</span><span class="sxs-lookup"><span data-stu-id="edf11-347">Identifies the <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateSourceExceptionFilter">
      <MemberSignature Language="C#" Value="public System.Windows.Data.UpdateSourceExceptionFilterCallback UpdateSourceExceptionFilter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.UpdateSourceExceptionFilterCallback UpdateSourceExceptionFilter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.UpdateSourceExceptionFilter" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateSourceExceptionFilter As UpdateSourceExceptionFilterCallback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::UpdateSourceExceptionFilterCallback ^ UpdateSourceExceptionFilter { System::Windows::Data::UpdateSourceExceptionFilterCallback ^ get(); void set(System::Windows::Data::UpdateSourceExceptionFilterCallback ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateSourceExceptionFilter : System.Windows.Data.UpdateSourceExceptionFilterCallback with get, set" Usage="System.Windows.Data.Binding.UpdateSourceExceptionFilter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.UpdateSourceExceptionFilterCallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="edf11-348">バインディング ソースの値の更新時にバインディング エンジンが検出した例外を処理するためのカスタム ロジックの提供に使用できるハンドラーを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="edf11-348">Gets or sets a handler you can use to provide custom logic for handling exceptions that the binding engine encounters during the update of the binding source value.</span></span> <span data-ttu-id="edf11-349">これは、バインディングに <see cref="T:System.Windows.Controls.ExceptionValidationRule" /> を関連付けている場合にのみ適用できます。</span><span class="sxs-lookup"><span data-stu-id="edf11-349">This is only applicable if you have associated an <see cref="T:System.Windows.Controls.ExceptionValidationRule" /> with your binding.</span></span></summary>
        <value><span data-ttu-id="edf11-350">バインディング ソースの値の更新時にバインディング エンジンが検出した例外を処理するためのカスタム ロジックを提供するメソッド。</span><span class="sxs-lookup"><span data-stu-id="edf11-350">A method that provides custom logic for handling exceptions that the binding engine encounters during the update of the binding source value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edf11-351"><xref:System.Windows.Controls.ExceptionValidationRule>バインディング ソース プロパティの更新中にスローされる例外をチェックする組み込みの検証規則。</span><span class="sxs-lookup"><span data-stu-id="edf11-351">The <xref:System.Windows.Controls.ExceptionValidationRule> is a built-in validation rule that checks for exceptions thrown during the update of the binding source property.</span></span> <span data-ttu-id="edf11-352">関連付けられている場合は、<xref:System.Windows.Controls.ExceptionValidationRule>で、<xref:System.Windows.Data.Binding>オブジェクト、このプロパティを使用してこれらの例外を処理するためのカスタム ロジックを提供するハンドラーを設定することができます。</span><span class="sxs-lookup"><span data-stu-id="edf11-352">If you have associated the <xref:System.Windows.Controls.ExceptionValidationRule> with your <xref:System.Windows.Data.Binding> object, you can use this property to set a handler to provide custom logic for handling these exceptions.</span></span> <span data-ttu-id="edf11-353">場合、<xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A>がで指定されていない、 <xref:System.Windows.Data.Binding>、バインディング エンジンが作成されます、<xref:System.Windows.Controls.ValidationError>例外に追加します、<xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType>バインドされた要素のコレクション。</span><span class="sxs-lookup"><span data-stu-id="edf11-353">If an <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A> is not specified on the <xref:System.Windows.Data.Binding>, the binding engine creates a <xref:System.Windows.Controls.ValidationError> with the exception and adds it to the <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> collection of the bound element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="edf11-354"><xref:System.Windows.Controls.TextBox.Text%2A>プロパティは、次の<xref:System.Windows.Controls.TextBox>ソース プロパティにデータ バインド`Age3`型のある`int`します。</span><span class="sxs-lookup"><span data-stu-id="edf11-354">The <xref:System.Windows.Controls.TextBox.Text%2A> property of the following <xref:System.Windows.Controls.TextBox> is data-bound to a source property `Age3` that is of type `int`.</span></span> <span data-ttu-id="edf11-355"><xref:System.Windows.Controls.ExceptionValidationRule> (ときに、ユーザーが整数に変換できない値を入力) などのソース プロパティの更新中にスローされる例外を確認します。</span><span class="sxs-lookup"><span data-stu-id="edf11-355">The <xref:System.Windows.Controls.ExceptionValidationRule> checks for exceptions that are thrown during the update of the source property (such as when the user enters a value that cannot be converted to an integer).</span></span>  
  
 [!code-xaml[BindValidation#tbExceptionFilter](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/Window1.xaml#tbexceptionfilter)]  
  
 <span data-ttu-id="edf11-356">これらの例外を処理するカスタム ロジックを行うことができます。</span><span class="sxs-lookup"><span data-stu-id="edf11-356">You can provide custom logic to handle those exceptions.</span></span> <span data-ttu-id="edf11-357">次の例は、使用する方法を示します、<xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A>プロパティを設定する、<xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>します。</span><span class="sxs-lookup"><span data-stu-id="edf11-357">The following example shows how to use the <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A> property to set an <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>.</span></span>  
  
 [!code-csharp[BindValidation#filtercallback](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/Window1.xaml.cs#filtercallback)]  
  
 <span data-ttu-id="edf11-358">実装例を次に、<xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>します。</span><span class="sxs-lookup"><span data-stu-id="edf11-358">The following is an example implementation of an <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>.</span></span>  
  
 [!code-csharp[BindValidation#Handler](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/Window1.xaml.cs#handler)]  
  
 <span data-ttu-id="edf11-359"><xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>を返すことも`null`、自体には、例外または<xref:System.Windows.Controls.ValidationError>します。</span><span class="sxs-lookup"><span data-stu-id="edf11-359">The <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback> can also return `null`, the exception itself, or a <xref:System.Windows.Controls.ValidationError>.</span></span> <span data-ttu-id="edf11-360">詳細については、「<xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="edf11-360">For more information, see <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>.</span></span>  
  
 <span data-ttu-id="edf11-361">サンプル全体については、次を参照してください。[バインディングの検証のサンプル](https://go.microsoft.com/fwlink/?LinkID=159972)します。</span><span class="sxs-lookup"><span data-stu-id="edf11-361">For the complete sample, see [Binding Validation Sample](https://go.microsoft.com/fwlink/?LinkID=159972).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateSourceTrigger">
      <MemberSignature Language="C#" Value="public System.Windows.Data.UpdateSourceTrigger UpdateSourceTrigger { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Data.UpdateSourceTrigger UpdateSourceTrigger" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.UpdateSourceTrigger" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateSourceTrigger As UpdateSourceTrigger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::UpdateSourceTrigger UpdateSourceTrigger { System::Windows::Data::UpdateSourceTrigger get(); void set(System::Windows::Data::UpdateSourceTrigger value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateSourceTrigger : System.Windows.Data.UpdateSourceTrigger with get, set" Usage="System.Windows.Data.Binding.UpdateSourceTrigger" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.UpdateSourceTrigger</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="edf11-362">バインディング ソースの更新のタイミングを決定する値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="edf11-362">Gets or sets a value that determines the timing of binding source updates.</span></span></summary>
        <value><span data-ttu-id="edf11-363"><see cref="T:System.Windows.Data.UpdateSourceTrigger" /> 値のいずれか。</span><span class="sxs-lookup"><span data-stu-id="edf11-363">One of the <see cref="T:System.Windows.Data.UpdateSourceTrigger" /> values.</span></span> <span data-ttu-id="edf11-364">既定値は <see cref="F:System.Windows.Data.UpdateSourceTrigger.Default" /> で、ターゲット依存関係プロパティの既定の <see cref="T:System.Windows.Data.UpdateSourceTrigger" /> 値を返します。</span><span class="sxs-lookup"><span data-stu-id="edf11-364">The default is <see cref="F:System.Windows.Data.UpdateSourceTrigger.Default" />, which returns the default <see cref="T:System.Windows.Data.UpdateSourceTrigger" /> value of the target dependency property.</span></span> <span data-ttu-id="edf11-365">ほとんどの依存関係プロパティの既定値は <see cref="F:System.Windows.Data.UpdateSourceTrigger.PropertyChanged" /> です。ただし、<see cref="P:System.Windows.Controls.TextBox.Text" /> プロパティの既定値は <see cref="F:System.Windows.Data.UpdateSourceTrigger.LostFocus" /> です。</span><span class="sxs-lookup"><span data-stu-id="edf11-365">However, the default value for most dependency properties is <see cref="F:System.Windows.Data.UpdateSourceTrigger.PropertyChanged" />, while the <see cref="P:System.Windows.Controls.TextBox.Text" /> property has a default value of <see cref="F:System.Windows.Data.UpdateSourceTrigger.LostFocus" />.</span></span>  
  
<span data-ttu-id="edf11-366">プログラムを使って依存関係プロパティの既定の <see cref="P:System.Windows.Data.Binding.UpdateSourceTrigger" /> 値を確認するには、<see cref="M:System.Windows.DependencyProperty.GetMetadata(System.Type)" /> を使ってプロパティのプロパティ メタデータを取得してから、<see cref="P:System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger" /> プロパティの値を確認します。</span><span class="sxs-lookup"><span data-stu-id="edf11-366">A programmatic way to determine the default <see cref="P:System.Windows.Data.Binding.UpdateSourceTrigger" /> value of a dependency property is to get the property metadata of the property using <see cref="M:System.Windows.DependencyProperty.GetMetadata(System.Type)" /> and then check the value of the <see cref="P:System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger" /> property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edf11-367">バインド<xref:System.Windows.Data.BindingMode.TwoWay>または<xref:System.Windows.Data.BindingMode.OneWayToSource>ターゲット プロパティの変更をリッスンし、それらを元に伝達します。</span><span class="sxs-lookup"><span data-stu-id="edf11-367">Bindings that are <xref:System.Windows.Data.BindingMode.TwoWay> or <xref:System.Windows.Data.BindingMode.OneWayToSource> listen for changes in the target property and propagate them back to the source.</span></span> <span data-ttu-id="edf11-368">これは、ソースの更新と呼ばれます。</span><span class="sxs-lookup"><span data-stu-id="edf11-368">This is known as updating the source.</span></span> <span data-ttu-id="edf11-369">通常、これらの更新プログラムは、ターゲット プロパティが変更されるたびに発生します。</span><span class="sxs-lookup"><span data-stu-id="edf11-369">Usually, these updates happen whenever the target property changes.</span></span> <span data-ttu-id="edf11-370">これには、チェック ボックスおよびその他の単純なコントロールの問題が、テキスト フィールドに適切でない、通常は。</span><span class="sxs-lookup"><span data-stu-id="edf11-370">This is fine for check boxes and other simple controls, but it is usually not appropriate for text fields.</span></span> <span data-ttu-id="edf11-371">パフォーマンスの低下やキーストロークのたびに、backspace キーし、新しい値をコミットする前に入力ミスを修正する通常の営業案件をユーザーが拒否した後に更新しています。</span><span class="sxs-lookup"><span data-stu-id="edf11-371">Updating after every keystroke can diminish performance and it denies the user the usual opportunity to backspace and fix typing errors before committing to the new value.</span></span> <span data-ttu-id="edf11-372">既定ではそのため、<xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>の値、<xref:System.Windows.Controls.TextBox.Text%2A>プロパティは<xref:System.Windows.Data.UpdateSourceTrigger.LostFocus>なく<xref:System.Windows.Data.UpdateSourceTrigger.PropertyChanged>します。</span><span class="sxs-lookup"><span data-stu-id="edf11-372">Therefore, the default <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> value of the <xref:System.Windows.Controls.TextBox.Text%2A> property is <xref:System.Windows.Data.UpdateSourceTrigger.LostFocus> and not <xref:System.Windows.Data.UpdateSourceTrigger.PropertyChanged>.</span></span>  
  
 <span data-ttu-id="edf11-373">設定した場合、<xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>値を<xref:System.Windows.Data.UpdateSourceTrigger.Explicit>、呼び出す必要があります、<xref:System.Windows.Data.BindingExpression.UpdateSource%2A>メソッドまたは変更がソースに反映されません。</span><span class="sxs-lookup"><span data-stu-id="edf11-373">If you set the <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> value to <xref:System.Windows.Data.UpdateSourceTrigger.Explicit>, you must call the <xref:System.Windows.Data.BindingExpression.UpdateSource%2A> method or the changes will not propagate back to the source.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Data.Binding.Mode" />
      </Docs>
    </Member>
    <Member MemberName="ValidatesOnDataErrors">
      <MemberSignature Language="C#" Value="public bool ValidatesOnDataErrors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidatesOnDataErrors" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.ValidatesOnDataErrors" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidatesOnDataErrors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidatesOnDataErrors { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ValidatesOnDataErrors : bool with get, set" Usage="System.Windows.Data.Binding.ValidatesOnDataErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="edf11-374"><see cref="T:System.Windows.Controls.DataErrorValidationRule" /> を含めるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="edf11-374">Gets or sets a value that indicates whether to include the <see cref="T:System.Windows.Controls.DataErrorValidationRule" />.</span></span></summary>
        <value><span data-ttu-id="edf11-375"><see cref="T:System.Windows.Controls.DataErrorValidationRule" /> を含める場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="edf11-375"><see langword="true" /> to include the <see cref="T:System.Windows.Controls.DataErrorValidationRule" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edf11-376">このプロパティを設定すると、使用する代わりに、<xref:System.Windows.Controls.DataErrorValidationRule>要素に明示的にします。</span><span class="sxs-lookup"><span data-stu-id="edf11-376">Setting this property provides an alternative to using the <xref:System.Windows.Controls.DataErrorValidationRule> element explicitly.</span></span> <span data-ttu-id="edf11-377"><xref:System.Windows.Controls.DataErrorValidationRule>によって発生するエラーを確認する組み込みの検証規則、<xref:System.ComponentModel.IDataErrorInfo>ソース オブジェクトの実装。</span><span class="sxs-lookup"><span data-stu-id="edf11-377">The <xref:System.Windows.Controls.DataErrorValidationRule> is a built-in validation rule that checks for errors that are raised by the <xref:System.ComponentModel.IDataErrorInfo> implementation of the source object.</span></span> <span data-ttu-id="edf11-378">エラーが発生した場合、バインディング エンジンが作成、<xref:System.Windows.Controls.ValidationError>エラーに追加します、<xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType>バインドされた要素のコレクション。</span><span class="sxs-lookup"><span data-stu-id="edf11-378">If an error is raised, the binding engine creates a <xref:System.Windows.Controls.ValidationError> with the error and adds it to the <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> collection of the bound element.</span></span> <span data-ttu-id="edf11-379">エラーがないことは、別の規則を検証の問題が発生しない限り、この検証のフィードバックをクリアします。</span><span class="sxs-lookup"><span data-stu-id="edf11-379">The lack of an error clears this validation feedback, unless another rule raises a validation issue.</span></span>  
  
 <span data-ttu-id="edf11-380"><xref:System.Windows.Data.Binding.ValidatesOnDataErrors%2A> .NET Framework version 3.5 で導入されました。</span><span class="sxs-lookup"><span data-stu-id="edf11-380"><xref:System.Windows.Data.Binding.ValidatesOnDataErrors%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="edf11-381">詳細については、「[.NET Framework のバージョンおよび依存関係](~/docs/framework/migration-guide/versions-and-dependencies.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="edf11-381">For more information, see [.NET Framework Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="edf11-382">次の例では<xref:System.ComponentModel.IDataErrorInfo>と<xref:System.Windows.Data.Binding.ValidatesOnDataErrors%2A>でユーザー入力を検証する、<xref:System.Windows.Controls.TextBox>します。</span><span class="sxs-lookup"><span data-stu-id="edf11-382">The following examples uses <xref:System.ComponentModel.IDataErrorInfo> and <xref:System.Windows.Data.Binding.ValidatesOnDataErrors%2A> to validate user input in a <xref:System.Windows.Controls.TextBox>.</span></span> <span data-ttu-id="edf11-383">最初の例では、実装するデータ型を作成する<xref:System.ComponentModel.IDataErrorInfo>検証エラーを報告します。</span><span class="sxs-lookup"><span data-stu-id="edf11-383">The first example creates a data type that implements <xref:System.ComponentModel.IDataErrorInfo> to report validation errors.</span></span>  
  
 [!code-csharp[BindingValidationAttributesSnippets#IDataErrorInfoData](~/samples/snippets/csharp/VS_Snippets_Wpf/bindingvalidationattributessnippets/csharp/data.cs#idataerrorinfodata)]
 [!code-vb[BindingValidationAttributesSnippets#IDataErrorInfoData](~/samples/snippets/visualbasic/VS_Snippets_Wpf/bindingvalidationattributessnippets/visualbasic/window1.xaml.vb#idataerrorinfodata)]  
  
 <span data-ttu-id="edf11-384">次の例では、バインド、`Age`プロパティを<xref:System.Windows.Controls.TextBox>設定と<xref:System.Windows.Data.Binding.ValidatesOnDataErrors%2A>に`true`上、<xref:System.Windows.Data.Binding>します。</span><span class="sxs-lookup"><span data-stu-id="edf11-384">The following example binds the `Age` property to the <xref:System.Windows.Controls.TextBox> and sets <xref:System.Windows.Data.Binding.ValidatesOnDataErrors%2A> to `true` on the <xref:System.Windows.Data.Binding>.</span></span>  <span data-ttu-id="edf11-385">無効な値を入力するに赤色の枠線が表示されます。、<xref:System.Windows.Controls.TextBox>と<xref:System.Windows.Controls.ToolTip>エラー メッセージを報告します。</span><span class="sxs-lookup"><span data-stu-id="edf11-385">When the user enters an invalid value, a red border appears in the <xref:System.Windows.Controls.TextBox> and the <xref:System.Windows.Controls.ToolTip> reports the error message.</span></span>  
  
 [!code-xaml[BindingValidationAttributesSnippets#IDataErrorInfoXaml](~/samples/snippets/csharp/VS_Snippets_Wpf/bindingvalidationattributessnippets/csharp/window1.xaml#idataerrorinfoxaml)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Data.Binding.ValidatesOnExceptions" />
      </Docs>
    </Member>
    <Member MemberName="ValidatesOnExceptions">
      <MemberSignature Language="C#" Value="public bool ValidatesOnExceptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidatesOnExceptions" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.ValidatesOnExceptions" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidatesOnExceptions As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidatesOnExceptions { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ValidatesOnExceptions : bool with get, set" Usage="System.Windows.Data.Binding.ValidatesOnExceptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="edf11-386"><see cref="T:System.Windows.Controls.ExceptionValidationRule" /> を含めるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="edf11-386">Gets or sets a value that indicates whether to include the <see cref="T:System.Windows.Controls.ExceptionValidationRule" />.</span></span></summary>
        <value><span data-ttu-id="edf11-387"><see cref="T:System.Windows.Controls.ExceptionValidationRule" /> を含める場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="edf11-387"><see langword="true" /> to include the <see cref="T:System.Windows.Controls.ExceptionValidationRule" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edf11-388">このプロパティを設定すると、使用する代わりに、<xref:System.Windows.Controls.ExceptionValidationRule>要素に明示的にします。</span><span class="sxs-lookup"><span data-stu-id="edf11-388">Setting this property provides an alternative to using the <xref:System.Windows.Controls.ExceptionValidationRule> element explicitly.</span></span> <span data-ttu-id="edf11-389"><xref:System.Windows.Controls.ExceptionValidationRule>ソース プロパティの更新中にスローされる例外をチェックする組み込みの検証ルールします。</span><span class="sxs-lookup"><span data-stu-id="edf11-389">The <xref:System.Windows.Controls.ExceptionValidationRule> is a built-in validation rule that checks for exceptions that are thrown during the update of the source property.</span></span> <span data-ttu-id="edf11-390">例外がスローされた場合、バインディング エンジンが作成、<xref:System.Windows.Controls.ValidationError>例外に追加します、<xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType>バインドされた要素のコレクション。</span><span class="sxs-lookup"><span data-stu-id="edf11-390">If an exception is thrown, the binding engine creates a <xref:System.Windows.Controls.ValidationError> with the exception and adds it to the <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> collection of the bound element.</span></span> <span data-ttu-id="edf11-391">エラーがないことは、別の規則を検証の問題が発生しない限り、この検証のフィードバックをクリアします。</span><span class="sxs-lookup"><span data-stu-id="edf11-391">The lack of an error clears this validation feedback, unless another rule raises a validation issue.</span></span>  
  
 <span data-ttu-id="edf11-392"><xref:System.Windows.Data.Binding.ValidatesOnExceptions%2A> .NET Framework version 3.5 で導入されました。</span><span class="sxs-lookup"><span data-stu-id="edf11-392"><xref:System.Windows.Data.Binding.ValidatesOnExceptions%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="edf11-393">詳細については、「[.NET Framework のバージョンおよび依存関係](~/docs/framework/migration-guide/versions-and-dependencies.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="edf11-393">For more information, see [.NET Framework Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="edf11-394">次の例を使用して<xref:System.Windows.Data.Binding.ValidatesOnExceptions%2A>でユーザー入力を検証する、<xref:System.Windows.Controls.TextBox>します。</span><span class="sxs-lookup"><span data-stu-id="edf11-394">The following examples use <xref:System.Windows.Data.Binding.ValidatesOnExceptions%2A> to validate user input in a <xref:System.Windows.Controls.TextBox>.</span></span> <span data-ttu-id="edf11-395">最初の例では、例外をスローするデータ型を作成するときに、`Age`プロパティが無効なプロパティに設定します。</span><span class="sxs-lookup"><span data-stu-id="edf11-395">The first example creates a data type that throws an exception when the `Age` property is set to an invalid property.</span></span>  
  
 [!code-csharp[BindingValidationAttributesSnippets#ThrowExceptionData](~/samples/snippets/csharp/VS_Snippets_Wpf/bindingvalidationattributessnippets/csharp/data.cs#throwexceptiondata)]
 [!code-vb[BindingValidationAttributesSnippets#ThrowExceptionData](~/samples/snippets/visualbasic/VS_Snippets_Wpf/bindingvalidationattributessnippets/visualbasic/window1.xaml.vb#throwexceptiondata)]  
  
 <span data-ttu-id="edf11-396">次の例では、バインド、`Age`プロパティを<xref:System.Windows.Controls.TextBox>設定と<xref:System.Windows.Data.Binding.ValidatesOnExceptions%2A>に`true`上、<xref:System.Windows.Data.Binding>します。</span><span class="sxs-lookup"><span data-stu-id="edf11-396">The following example binds the `Age` property to the <xref:System.Windows.Controls.TextBox> and sets <xref:System.Windows.Data.Binding.ValidatesOnExceptions%2A> to `true` on the <xref:System.Windows.Data.Binding>.</span></span> <span data-ttu-id="edf11-397">無効な値を入力するに赤色の枠線が表示されます。、<xref:System.Windows.Controls.TextBox>と<xref:System.Windows.Controls.ToolTip>エラー メッセージを報告します。</span><span class="sxs-lookup"><span data-stu-id="edf11-397">When the user enters an invalid value, a red border appears in the <xref:System.Windows.Controls.TextBox> and the <xref:System.Windows.Controls.ToolTip> reports the error message.</span></span>  
  
 [!code-xaml[BindingValidationAttributesSnippets#ThrowExceptionXaml](~/samples/snippets/csharp/VS_Snippets_Wpf/bindingvalidationattributessnippets/csharp/window1.xaml#throwexceptionxaml)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Data.Binding.ValidatesOnDataErrors" />
      </Docs>
    </Member>
    <Member MemberName="ValidatesOnNotifyDataErrors">
      <MemberSignature Language="C#" Value="public bool ValidatesOnNotifyDataErrors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidatesOnNotifyDataErrors" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.ValidatesOnNotifyDataErrors" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidatesOnNotifyDataErrors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidatesOnNotifyDataErrors { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ValidatesOnNotifyDataErrors : bool with get, set" Usage="System.Windows.Data.Binding.ValidatesOnNotifyDataErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="edf11-398"><see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" /> を含めるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="edf11-398">Gets or sets a value that indicates whether to include the <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />.</span></span></summary>
        <value><span data-ttu-id="edf11-399"><see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" /> を含める場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="edf11-399"><see langword="true" /> to include the <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="edf11-400">既定値は、<see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="edf11-400">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edf11-401">ときに<xref:System.Windows.Data.Binding.ValidatesOnNotifyDataErrors%2A>は`true`、バインディングをチェックし、実装するデータ ソースによって発生するエラーを報告<xref:System.ComponentModel.INotifyDataErrorInfo>します。</span><span class="sxs-lookup"><span data-stu-id="edf11-401">When <xref:System.Windows.Data.Binding.ValidatesOnNotifyDataErrors%2A> is `true`, the binding checks for and reports errors that are raised by a data source that implements <xref:System.ComponentModel.INotifyDataErrorInfo>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationRules">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Windows.Controls.ValidationRule&gt; ValidationRules { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Windows.Controls.ValidationRule&gt; ValidationRules" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.ValidationRules" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValidationRules As Collection(Of ValidationRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Windows::Controls::ValidationRule ^&gt; ^ ValidationRules { System::Collections::ObjectModel::Collection&lt;System::Windows::Controls::ValidationRule ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidationRules : System.Collections.ObjectModel.Collection&lt;System.Windows.Controls.ValidationRule&gt;" Usage="System.Windows.Data.Binding.ValidationRules" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Windows.Controls.ValidationRule&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="edf11-402">ユーザー入力の有効性をチェックする規則のコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="edf11-402">Gets a collection of rules that check the validity of the user input.</span></span></summary>
        <value><span data-ttu-id="edf11-403"><see cref="T:System.Windows.Controls.ValidationRule" /> オブジェクトのコレクション。</span><span class="sxs-lookup"><span data-stu-id="edf11-403">A collection of <see cref="T:System.Windows.Controls.ValidationRule" /> objects.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edf11-404">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]データ バインディング モデルに関連付けられるように<xref:System.Windows.Data.Binding.ValidationRules%2A>で、<xref:System.Windows.Data.Binding>または<xref:System.Windows.Data.MultiBinding>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="edf11-404">The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] data binding model enables you to associate <xref:System.Windows.Data.Binding.ValidationRules%2A> with your <xref:System.Windows.Data.Binding> or <xref:System.Windows.Data.MultiBinding> object.</span></span> <span data-ttu-id="edf11-405">派生することによって、カスタム ルールを作成することができます、<xref:System.Windows.Controls.ValidationRule>クラスと実装、<xref:System.Windows.Controls.ValidationRule.Validate%2A>メソッド、または組み込みを使用してできる<xref:System.Windows.Controls.ExceptionValidationRule>ソースの更新中に例外がある場合、値が無効になります。</span><span class="sxs-lookup"><span data-stu-id="edf11-405">You can create custom rules by deriving from the <xref:System.Windows.Controls.ValidationRule> class and implementing the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method, or you can use the built-in <xref:System.Windows.Controls.ExceptionValidationRule>, which invalidates a value if there are exceptions during source updates.</span></span>  
  
 <span data-ttu-id="edf11-406">バインディング エンジンは、それぞれチェック<xref:System.Windows.Controls.ValidationRule>たびに入力値 (バインディング ターゲットのプロパティ値) は、バインディング ソース プロパティに転送されるバインディングに関連付けられています。</span><span class="sxs-lookup"><span data-stu-id="edf11-406">The binding engine checks each <xref:System.Windows.Controls.ValidationRule> associated with a binding each time an input value (the binding target property value) is transferred to the binding source property.</span></span> <span data-ttu-id="edf11-407">検証プロセスの詳細については、データの検証」セクションを参照してください、[データ バインディングの概要](~/docs/framework/wpf/data/data-binding-overview.md)します。</span><span class="sxs-lookup"><span data-stu-id="edf11-407">For a detailed discussion of the validation process, see the Data Validation section in the [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="edf11-408">このプロパティで設定できます[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]のみに示す、コレクション構文を使用して、またはコレクション オブジェクトにアクセスしてなどのさまざまなメソッドを使用して`Add`します。</span><span class="sxs-lookup"><span data-stu-id="edf11-408">This property can be set in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] only by using the collection syntax shown, or by accessing the collection object and using its various methods, such as `Add`.</span></span> <span data-ttu-id="edf11-409">コレクション オブジェクトにアクセスするプロパティは、コレクション自体は読み取り/書き込みが読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="edf11-409">The property to access the collection object is read-only, whereas the collection itself is read-write.</span></span>  
  
<a name="xamlPropertyElementUsage_ValidationRules"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="edf11-410">XAML プロパティ要素の使用</span><span class="sxs-lookup"><span data-stu-id="edf11-410">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <object.ValidationRules>  
    oneOrMoreValidationRules  
  </object.ValidationRules>  
</object>  
  
```  
  
<a name="xamlValues_ValidationRules"></a>   
## <a name="xaml-values"></a><span data-ttu-id="edf11-411">XAML 値</span><span class="sxs-lookup"><span data-stu-id="edf11-411">XAML Values</span></span>  
 <span data-ttu-id="edf11-412">*oneOrMoreValidationRules*</span><span class="sxs-lookup"><span data-stu-id="edf11-412">*oneOrMoreValidationRules*</span></span>  
 <span data-ttu-id="edf11-413">1 つまたは複数<xref:System.Windows.Controls.ValidationRule>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="edf11-413">One or more <xref:System.Windows.Controls.ValidationRule> objects.</span></span> <span data-ttu-id="edf11-414">使用することができます、<xref:System.Windows.Controls.ExceptionValidationRule>クラスまたはサブクラス化してカスタム規則を作成、<xref:System.Windows.Controls.ValidationRule>クラス。</span><span class="sxs-lookup"><span data-stu-id="edf11-414">You can use the <xref:System.Windows.Controls.ExceptionValidationRule> class or create custom rules by subclassing the <xref:System.Windows.Controls.ValidationRule> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.Validation" />
      </Docs>
    </Member>
    <Member MemberName="XmlNamespaceManager">
      <MemberSignature Language="C#" Value="see GetXmlNamespaceManager, and SetXmlNamespaceManager" />
      <MemberSignature Language="ILAsm" Value="see GetXmlNamespaceManager, and SetXmlNamespaceManager" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.XmlNamespaceManager" />
      <MemberSignature Language="VB.NET" Value="see GetXmlNamespaceManager, and SetXmlNamespaceManager" />
      <MemberSignature Language="F#" Value="see GetXmlNamespaceManager, and SetXmlNamespaceManager" Usage="see GetXmlNamespaceManager, and SetXmlNamespaceManager" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="edf11-415">XML バインディングで名前空間に対応している <see langword="XPath" /> クエリを実行するために使用される <see cref="T:System.Xml.XmlNamespaceManager" /> を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="edf11-415">Gets or sets the <see cref="T:System.Xml.XmlNamespaceManager" /> used to perform namespace-aware <see langword="XPath" /> queries in XML bindings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edf11-416">この添付プロパティに存在する名前空間の継承の動作を再現プロパティ値の継承を使用して[!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)]します。</span><span class="sxs-lookup"><span data-stu-id="edf11-416">This attached property uses property value inheritance, which reproduces the behavior of namespace inheritance that is present in [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)].</span></span> <span data-ttu-id="edf11-417">詳細については、「[プロパティ値の継承](~/docs/framework/wpf/advanced/property-value-inheritance.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="edf11-417">For details, see [Property Value Inheritance](~/docs/framework/wpf/advanced/property-value-inheritance.md).</span></span>  
  
<a name="dependencyPropertyInfo_XmlNamespaceManager"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="edf11-418">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="edf11-418">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="edf11-419">識別子フィールドです。</span><span class="sxs-lookup"><span data-stu-id="edf11-419">Identifier field</span></span>|<xref:System.Windows.Data.Binding.XmlNamespaceManagerProperty>|  
|<span data-ttu-id="edf11-420">メタデータのプロパティを設定するには `true`</span><span class="sxs-lookup"><span data-stu-id="edf11-420">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlNamespaceManagerProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty XmlNamespaceManagerProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty XmlNamespaceManagerProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Data.Binding.XmlNamespaceManagerProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly XmlNamespaceManagerProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ XmlNamespaceManagerProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable XmlNamespaceManagerProperty : System.Windows.DependencyProperty" Usage="System.Windows.Data.Binding.XmlNamespaceManagerProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="edf11-421"><see cref="P:System.Windows.Data.Binding.XmlNamespaceManager" /> 添付プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="edf11-421">Identifies the <see cref="P:System.Windows.Data.Binding.XmlNamespaceManager" /> attached property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XPath">
      <MemberSignature Language="C#" Value="public string XPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XPath" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.XPath" />
      <MemberSignature Language="VB.NET" Value="Public Property XPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ XPath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XPath : string with get, set" Usage="System.Windows.Data.Binding.XPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="edf11-422">使用する [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] バインディング ソースの値を返す <see langword="XPath" /> クエリーを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="edf11-422">Gets or sets an <see langword="XPath" /> query that returns the value on the [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] binding source to use.</span></span></summary>
        <value><span data-ttu-id="edf11-423"><see langword="XPath" /> クエリ。</span><span class="sxs-lookup"><span data-stu-id="edf11-423">The <see langword="XPath" /> query.</span></span> <span data-ttu-id="edf11-424">既定値は、<see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="edf11-424">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edf11-425">バインディング ソースの場合は[!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)]の代わりにデータを[!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]オブジェクト、<xref:System.Windows.Data.Binding.XPath%2A>の代わりにプロパティを使用、<xref:System.Windows.Data.Binding.Path%2A>を使用するバインディング ソースの値へのパスを示すプロパティです。</span><span class="sxs-lookup"><span data-stu-id="edf11-425">When the binding source is [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] data instead of a [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] object, the <xref:System.Windows.Data.Binding.XPath%2A> property is used instead of the <xref:System.Windows.Data.Binding.Path%2A> property to indicate the path to the value on the binding source to use.</span></span>  
  
 <span data-ttu-id="edf11-426">設定して、<xref:System.Windows.Data.Binding.XPath%2A>作成して、プロパティ、`XPath`ノードまたはノードのコレクションを選択するクエリ (<xref:System.Xml.XmlElement?displayProperty=nameWithType>と<xref:System.Xml.XmlAttribute?displayProperty=nameWithType>から派生両方<xref:System.Xml.XmlNode?displayProperty=nameWithType>)。</span><span class="sxs-lookup"><span data-stu-id="edf11-426">By setting the <xref:System.Windows.Data.Binding.XPath%2A> property, you are creating an `XPath` query to select a node or a collection of nodes (<xref:System.Xml.XmlElement?displayProperty=nameWithType> and <xref:System.Xml.XmlAttribute?displayProperty=nameWithType> both derive from <xref:System.Xml.XmlNode?displayProperty=nameWithType>).</span></span> <span data-ttu-id="edf11-427"><xref:System.Xml.XmlNode?displayProperty=nameWithType> [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]オブジェクトを使用してそのプロパティにバインドすることができます、<xref:System.Windows.Data.Binding.Path%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="edf11-427"><xref:System.Xml.XmlNode?displayProperty=nameWithType> is a [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] object, which means you can bind to its properties using the <xref:System.Windows.Data.Binding.Path%2A> property.</span></span>  
  
 <span data-ttu-id="edf11-428"><xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=nameWithType>メソッド ハンドル、`XPath`式から、<xref:System.Windows.Data.Binding.XPath%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="edf11-428">The <xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=nameWithType> method handles the `XPath` expressions from the <xref:System.Windows.Data.Binding.XPath%2A> property.</span></span> <span data-ttu-id="edf11-429">`XPath` 関数がサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="edf11-429">`XPath` functions are not supported.</span></span> <span data-ttu-id="edf11-430">`XPath`式についてを参照してください、<xref:System.Xml.XmlNode.SelectNodes%2A>ドキュメントと例をいくつかの例のセクションで説明します。</span><span class="sxs-lookup"><span data-stu-id="edf11-430">For `XPath` expression information, see the <xref:System.Xml.XmlNode.SelectNodes%2A> documentation and some examples provided in the Example section.</span></span>  
  
 <span data-ttu-id="edf11-431">LINQ to XML オブジェクト<xref:System.Xml.Linq.XDocument>と<xref:System.Xml.Linq.XElement>使用しないでください`XPath`します。</span><span class="sxs-lookup"><span data-stu-id="edf11-431">LINQ to XML objects <xref:System.Xml.Linq.XDocument> and <xref:System.Xml.Linq.XElement> do not use `XPath`.</span></span> <span data-ttu-id="edf11-432">詳細については、「[方法: XDocument、XElement、または LINQ for XML クエリの結果にバインド](~/docs/framework/wpf/data/how-to-bind-to-xdocument-xelement-or-linq-for-xml-query-results.md)します。</span><span class="sxs-lookup"><span data-stu-id="edf11-432">For details, see [How to: Bind to XDocument, XElement, or LINQ for XML Query Results](~/docs/framework/wpf/data/how-to-bind-to-xdocument-xelement-or-linq-for-xml-query-results.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>