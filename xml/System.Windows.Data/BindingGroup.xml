<Type Name="BindingGroup" FullName="System.Windows.Data.BindingGroup">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="75e5aedb20ccf9bd83f94de09ef1c9ab7f3863a2" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30630616" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class BindingGroup : System.Windows.DependencyObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BindingGroup extends System.Windows.DependencyObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.BindingGroup" />
  <TypeSignature Language="VB.NET" Value="Public Class BindingGroup&#xA;Inherits DependencyObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class BindingGroup : System::Windows::DependencyObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="573aa-101">あるオブジェクトの検証に使用されるバインディングと <see cref="T:System.Windows.Controls.ValidationRule" /> オブジェクトのコレクションを格納します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="573aa-101">Contains a collection of bindings and <see cref="T:System.Windows.Controls.ValidationRule" /> objects that are used to validate an object.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="573aa-102">A<xref:System.Windows.Data.BindingGroup>検証および一緒に更新できる、複数のバインディング間のリレーションシップを作成します。</span><span class="sxs-lookup"><span data-stu-id="573aa-102">A <xref:System.Windows.Data.BindingGroup> creates a relationship between multiple bindings, which can be validated and updated together.</span></span> <span data-ttu-id="573aa-103">たとえば、アプリケーションがアドレスを入力するユーザーを要求するとします。</span><span class="sxs-lookup"><span data-stu-id="573aa-103">For example, suppose that an application prompts the user to enter an address.</span></span> <span data-ttu-id="573aa-104">その後、アプリケーションは、型のオブジェクトを設定`Address`のプロパティを持つ`Street`、 `City`、 `ZipCode`、および`Country`ユーザーが指定した値を持つ。</span><span class="sxs-lookup"><span data-stu-id="573aa-104">The application then populates an object of type `Address`, which has the properties, `Street`, `City`, `ZipCode`, and `Country`, with the values that the user provided.</span></span> <span data-ttu-id="573aa-105">アプリケーションが 4 つを含むパネル<xref:System.Windows.Controls.TextBox>コントロール、それぞれが 1 つのオブジェクトのプロパティにバインドされたデータ。</span><span class="sxs-lookup"><span data-stu-id="573aa-105">The application has a panel that contains four <xref:System.Windows.Controls.TextBox> controls, each of which is data bound to one of the object’s properties.</span></span> <span data-ttu-id="573aa-106">使用することができます、<xref:System.Windows.Controls.ValidationRule>で、<xref:System.Windows.Data.BindingGroup>を検証する、`Address`オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="573aa-106">You can use a <xref:System.Windows.Controls.ValidationRule> in a <xref:System.Windows.Data.BindingGroup> to validate the `Address` object.</span></span> <span data-ttu-id="573aa-107">同じバインディングが参加する場合は<xref:System.Windows.Data.BindingGroup>、郵便番号コードが有効、住所の国であることを確認できます。</span><span class="sxs-lookup"><span data-stu-id="573aa-107">If the bindings participate in the same <xref:System.Windows.Data.BindingGroup>, you can ensure that the zip-code is valid for the country of the address.</span></span>  
  
 <span data-ttu-id="573aa-108">設定する、<xref:System.Windows.FrameworkElement.BindingGroup%2A>プロパティ<xref:System.Windows.FrameworkElement>または<xref:System.Windows.FrameworkContentElement>です。</span><span class="sxs-lookup"><span data-stu-id="573aa-108">You set the <xref:System.Windows.FrameworkElement.BindingGroup%2A> property on <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement>.</span></span> <span data-ttu-id="573aa-109">子要素を継承、<xref:System.Windows.Data.BindingGroup>だけで、他の継承可能なプロパティと同様に、親要素からです。</span><span class="sxs-lookup"><span data-stu-id="573aa-109">Child elements inherit the <xref:System.Windows.Data.BindingGroup> from their parent elements, just as with any other inheritable property.</span></span> <span data-ttu-id="573aa-110">子孫要素をバインディングに追加、<xref:System.Windows.Data.BindingGroup>次の状況のいずれかが発生した場合。</span><span class="sxs-lookup"><span data-stu-id="573aa-110">A binding on a descendent element is added to a <xref:System.Windows.Data.BindingGroup> if one of the following situations occurs:</span></span>  
  
-   <span data-ttu-id="573aa-111">バインディングのソースと<xref:System.Windows.FrameworkElement.DataContext%2A>を持つ要素の<xref:System.Windows.Data.BindingGroup>、同じオブジェクトは、および<xref:System.Windows.Data.BindingBase.BindingGroupName%2A>プロパティが設定されていません。</span><span class="sxs-lookup"><span data-stu-id="573aa-111">The binding's source and the <xref:System.Windows.FrameworkElement.DataContext%2A> of the element that has the <xref:System.Windows.Data.BindingGroup> are the same object and the <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> property is not set.</span></span>  
  
-   <span data-ttu-id="573aa-112"><xref:System.Windows.Data.BindingBase.BindingGroupName%2A>バインディングのプロパティと等しい、<xref:System.Windows.Data.BindingGroup.Name%2A>の<xref:System.Windows.FrameworkContentElement.BindingGroup%2A>に明示的に設定されていないと`null`です。</span><span class="sxs-lookup"><span data-stu-id="573aa-112">The <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> property of the binding is equal to the <xref:System.Windows.Data.BindingGroup.Name%2A> of the <xref:System.Windows.FrameworkContentElement.BindingGroup%2A> and they are not explicitly set to `null`.</span></span>  
  
 <span data-ttu-id="573aa-113">アドレスの例では、たとえば次に示す、<xref:System.Windows.FrameworkElement.DataContext%2A>の<xref:System.Windows.Controls.Panel>型のオブジェクトに設定されている`Address`です。</span><span class="sxs-lookup"><span data-stu-id="573aa-113">In the example of the address, suppose that the <xref:System.Windows.FrameworkElement.DataContext%2A> of the <xref:System.Windows.Controls.Panel> is set to the object of type `Address`.</span></span> <span data-ttu-id="573aa-114">各バインド<xref:System.Windows.Controls.TextBox>に追加、<xref:System.Windows.Data.BindingGroup>パネルのです。</span><span class="sxs-lookup"><span data-stu-id="573aa-114">The binding for each <xref:System.Windows.Controls.TextBox> is added to the <xref:System.Windows.Data.BindingGroup> of the panel.</span></span>  
  
 <span data-ttu-id="573aa-115">追加する<xref:System.Windows.Controls.ValidationRule>オブジェクトを<xref:System.Windows.Data.BindingGroup>です。</span><span class="sxs-lookup"><span data-stu-id="573aa-115">You add <xref:System.Windows.Controls.ValidationRule> objects to a <xref:System.Windows.Data.BindingGroup>.</span></span> <span data-ttu-id="573aa-116"><xref:System.Windows.Data.BindingGroup>の最初のパラメーターとして渡される、<xref:System.Windows.Controls.ValidationRule.Validate%2A>メソッドと、<xref:System.Windows.Controls.ValidationRule>を実行します。</span><span class="sxs-lookup"><span data-stu-id="573aa-116">The <xref:System.Windows.Data.BindingGroup> is passed as the first parameter of the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method when the <xref:System.Windows.Controls.ValidationRule> runs.</span></span> <span data-ttu-id="573aa-117">使用することができます、<xref:System.Windows.Data.BindingGroup.TryGetValue%2A>または<xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29>メソッドを<xref:System.Windows.Data.BindingGroup>、オブジェクトの提案された値を取得して、<xref:System.Windows.Data.BindingGroup.Items%2A>のバインディングのソースを取得するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="573aa-117">You can use the <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> or <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> method on that <xref:System.Windows.Data.BindingGroup> to get the proposed values of the object, and the <xref:System.Windows.Data.BindingGroup.Items%2A> property to get the sources of the bindings.</span></span>  
  
 <span data-ttu-id="573aa-118">A<xref:System.Windows.Data.BindingGroup>に個別に更新される各バインディングではなく、同時にバインディングのソースを更新します。</span><span class="sxs-lookup"><span data-stu-id="573aa-118">A <xref:System.Windows.Data.BindingGroup> updates the sources of the binding at the same time instead of each binding being updated separately.</span></span> <span data-ttu-id="573aa-119">データを検証する方法のいずれかを呼び出すときに (<xref:System.Windows.Data.BindingGroup.ValidateWithoutUpdate%2A>、 <xref:System.Windows.Data.BindingGroup.UpdateSources%2A>、または<xref:System.Windows.Data.BindingGroup.CommitEdit%2A>)、各バインディング<xref:System.Windows.Controls.TextBox>で例が検証され、更新された可能性があります。</span><span class="sxs-lookup"><span data-stu-id="573aa-119">When you call one of the methods to validate the data (<xref:System.Windows.Data.BindingGroup.ValidateWithoutUpdate%2A>, <xref:System.Windows.Data.BindingGroup.UpdateSources%2A>, or <xref:System.Windows.Data.BindingGroup.CommitEdit%2A>), the binding for each <xref:System.Windows.Controls.TextBox> in the example is validated and potentially updated.</span></span> <span data-ttu-id="573aa-120">バインディングの一部である場合、 <xref:System.Windows.Data.BindingGroup>、バインディングのソースは、呼び出されるまでは更新されません<xref:System.Windows.Data.BindingGroup.UpdateSources%2A>または<xref:System.Windows.Data.BindingGroup.CommitEdit%2A>上、<xref:System.Windows.Data.BindingGroup>明示的に設定する場合を除き、<xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="573aa-120">When a binding is part of a <xref:System.Windows.Data.BindingGroup>, the source of the binding is not updated until you call <xref:System.Windows.Data.BindingGroup.UpdateSources%2A> or <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> on the <xref:System.Windows.Data.BindingGroup>, unless you explicitly set the <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="573aa-121">次の例では、説明および品目の価格を入力するように求める、アプリケーションと、プランの有効期限が切れる日付を作成します。</span><span class="sxs-lookup"><span data-stu-id="573aa-121">The following examples create an application that prompts the user to enter the description and price of an item and the date that the offer expires.</span></span> <span data-ttu-id="573aa-122">アプリケーションでは、フォームの下の項目の現在の情報を表示します。</span><span class="sxs-lookup"><span data-stu-id="573aa-122">The application displays the current information for the item below the form.</span></span> <span data-ttu-id="573aa-123">ユーザーでは、送信したり、変更をキャンセルすることができます。</span><span class="sxs-lookup"><span data-stu-id="573aa-123">The user can submit or cancel the changes.</span></span>  
  
 <span data-ttu-id="573aa-124">アプリケーションは、この動作を実現するために次を実行します。</span><span class="sxs-lookup"><span data-stu-id="573aa-124">The application does the following to achieve this behavior.</span></span>  
  
-   <span data-ttu-id="573aa-125">作成、<xref:System.Windows.Data.BindingGroup>ルートを追加および<xref:System.Windows.Controls.StackPanel>を作成すると、[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]アプリケーションのです。</span><span class="sxs-lookup"><span data-stu-id="573aa-125">Creates a <xref:System.Windows.Data.BindingGroup> and adds it the root <xref:System.Windows.Controls.StackPanel> when it creates the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] of the application.</span></span>  
  
-   <span data-ttu-id="573aa-126">呼び出し<xref:System.Windows.Data.BindingGroup.BeginEdit%2A>、<xref:System.Windows.Data.BindingGroup.CommitEdit%2A>と<xref:System.Windows.Data.BindingGroup.CancelEdit%2A>を有効にする、アプリケーションのロジックで変更をロールバックしています。</span><span class="sxs-lookup"><span data-stu-id="573aa-126">Calls <xref:System.Windows.Data.BindingGroup.BeginEdit%2A>, <xref:System.Windows.Data.BindingGroup.CommitEdit%2A>, and <xref:System.Windows.Data.BindingGroup.CancelEdit%2A> in the application's logic to enable rolling back changes.</span></span>  
  
-   <span data-ttu-id="573aa-127">呼び出し<xref:System.Windows.Data.BindingGroup.TryGetValue%2A>で、<xref:System.Windows.Controls.ValidationRule.Validate%2A>メソッドをユーザーの入力を取得し、7 日間には、少なくとも 100 ドル経由で項目が利用可能なことを確認します。</span><span class="sxs-lookup"><span data-stu-id="573aa-127">Calls <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> in a <xref:System.Windows.Controls.ValidationRule.Validate%2A> method to get the user's input and then check that an item over 100 dollars is available for at least seven days.</span></span>  
  
 <span data-ttu-id="573aa-128">次の例を作成、[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]アプリケーションです。</span><span class="sxs-lookup"><span data-stu-id="573aa-128">The following example creates the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] of the application.</span></span> <span data-ttu-id="573aa-129">ルート<xref:System.Windows.Controls.StackPanel>が、<xref:System.Windows.Data.BindingGroup>を格納している、<xref:System.Windows.Controls.ValidationRule>前述のように、項目を検証します。</span><span class="sxs-lookup"><span data-stu-id="573aa-129">The root <xref:System.Windows.Controls.StackPanel> has a <xref:System.Windows.Data.BindingGroup> that contains a <xref:System.Windows.Controls.ValidationRule> that validates the item, as described previously.</span></span> <span data-ttu-id="573aa-130">上のバインド オブジェクト、`Price`プロパティおよび`OfferExpires`になるプロパティの一部の<xref:System.Windows.Data.BindingGroup>各バインディングは、<xref:System.Windows.Controls.ValidationRule>価格、日付、それぞれが有効な値であるかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="573aa-130">The binding objects on the `Price` property and the `OfferExpires` property become part of the <xref:System.Windows.Data.BindingGroup> and each binding has a <xref:System.Windows.Controls.ValidationRule> to make sure that price and date, respectively, are valid values.</span></span> <span data-ttu-id="573aa-131">個々 のプロパティの検証規則を実行する前に、<xref:System.Windows.Controls.ValidationRule>上、<xref:System.Windows.Data.BindingGroup>です。</span><span class="sxs-lookup"><span data-stu-id="573aa-131">The validation rules for the individual properties run before the <xref:System.Windows.Controls.ValidationRule> on the <xref:System.Windows.Data.BindingGroup>.</span></span>  
  
 [!code-xaml[BindingGroupSnippets#WindowLayout](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml#windowlayout)]  
  
 <span data-ttu-id="573aa-132">次の例では、アプリケーションのイベント ハンドラーを示します。</span><span class="sxs-lookup"><span data-stu-id="573aa-132">The following example shows the event handlers for the application.</span></span> <span data-ttu-id="573aa-133">ユーザーは、[送信] ボタンをクリックすると、アプリケーションを呼び出す<xref:System.Windows.Data.BindingGroup.CommitEdit%2A>各<xref:System.Windows.Controls.ValidationRule>と関連付けられている、<xref:System.Windows.Data.BindingGroup>です。</span><span class="sxs-lookup"><span data-stu-id="573aa-133">When the user clicks the Submit button, the application calls <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> to run each <xref:System.Windows.Controls.ValidationRule> that is associated with the <xref:System.Windows.Data.BindingGroup>.</span></span> <span data-ttu-id="573aa-134">各<xref:System.Windows.Controls.ValidationRule>成功すると、<xref:System.Windows.Data.BindingGroup.CommitEdit%2A>オブジェクトに値を保存し、編集トランザクションを終了します。</span><span class="sxs-lookup"><span data-stu-id="573aa-134">If each <xref:System.Windows.Controls.ValidationRule> succeeds, <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> saves the values to the object and ends the edit transaction.</span></span> <span data-ttu-id="573aa-135">場合<xref:System.Windows.Data.BindingGroup.CommitEdit%2A>が成功すると、アプリケーション別編集トランザクションを開始します。</span><span class="sxs-lookup"><span data-stu-id="573aa-135">If <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> is successful, the application begins another edit transaction.</span></span> <span data-ttu-id="573aa-136">ときに、<xref:System.Windows.Controls.ValidationRule>失敗すると、<xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType>イベントが発生するは、アプリケーション設定ため<xref:System.Windows.Data.BindingGroup.NotifyOnValidationError%2A>に`true`上、 <xref:System.Windows.Data.BindingGroup> (前の例)。</span><span class="sxs-lookup"><span data-stu-id="573aa-136">When a <xref:System.Windows.Controls.ValidationRule> fails, the <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> event occurs because the application set <xref:System.Windows.Data.BindingGroup.NotifyOnValidationError%2A> to `true` on the <xref:System.Windows.Data.BindingGroup> (in the previous example).</span></span> <span data-ttu-id="573aa-137">`ItemError` ハンドル、<xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType>をユーザーに検証エラーに関する情報がイベントを表示します。</span><span class="sxs-lookup"><span data-stu-id="573aa-137">`ItemError` handles the <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> event and displays information about the validation error to the user.</span></span> <span data-ttu-id="573aa-138">処理する例では、<xref:System.Windows.FrameworkElement.Loaded>イベントを<xref:System.Windows.Controls.StackPanel>と<xref:System.Windows.Controls.Primitives.ButtonBase.Click>イベントを**キャンセル**ボタンをクリックします。</span><span class="sxs-lookup"><span data-stu-id="573aa-138">The example also handles the <xref:System.Windows.FrameworkElement.Loaded> event for the <xref:System.Windows.Controls.StackPanel> and the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event for the **Cancel** button.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#WindowLogic](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml.cs#windowlogic)]
 [!code-vb[BindingGroupSnippets#WindowLogic](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window1.xaml.vb#windowlogic)]  
  
 <span data-ttu-id="573aa-139">次の例は、カスタム<xref:System.Windows.Controls.ValidationRule>`ValidateDateAndPrice`に追加された、<xref:System.Windows.Data.BindingGroup>最初の例です。</span><span class="sxs-lookup"><span data-stu-id="573aa-139">The following example shows the custom <xref:System.Windows.Controls.ValidationRule> `ValidateDateAndPrice`, which was added to the <xref:System.Windows.Data.BindingGroup> in the first example.</span></span> <span data-ttu-id="573aa-140"><xref:System.Windows.Controls.ValidationRule>を使用して、<xref:System.Windows.Data.BindingGroup>でその<xref:System.Windows.Controls.ValidationRule.Validate%2A>ユーザーが、フォーム、およびアイテムが 100 ドルを超える場合は、それが使用できる 7 日間以上のチェックに入力した値を取得します。</span><span class="sxs-lookup"><span data-stu-id="573aa-140">The <xref:System.Windows.Controls.ValidationRule> uses the <xref:System.Windows.Data.BindingGroup> in its <xref:System.Windows.Controls.ValidationRule.Validate%2A> method to get the values the user entered into the form, and checks that if an item is over 100 dollars, it will be available for at least seven days.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#ValidateObject](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Data.cs#validateobject)]
 [!code-vb[BindingGroupSnippets#ValidateObject](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/data.vb#validateobject)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BindingGroup ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BindingGroup();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="573aa-141">
            <see cref="T:System.Windows.Data.BindingGroup" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="573aa-141">Initializes a new instance of the <see cref="T:System.Windows.Data.BindingGroup" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginEdit">
      <MemberSignature Language="C#" Value="public void BeginEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.BeginEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginEdit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="573aa-142">
            <see cref="T:System.Windows.Data.BindingGroup" /> 内のソースに対する編集トランザクションを開始します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="573aa-142">Begins an edit transaction on the sources in the <see cref="T:System.Windows.Data.BindingGroup" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="573aa-143">場合内のソース、<xref:System.Windows.Data.BindingGroup>を呼び出して、保留中の変更を破棄することをサポートして<xref:System.Windows.Data.BindingGroup.BeginEdit%2A>編集トランザクションを開始するには、呼び出す<xref:System.Windows.Data.BindingGroup.CommitEdit%2A>保留中の変更を保存する<xref:System.Windows.Data.BindingGroup.CancelEdit%2A>を保留中の変更を破棄します。</span><span class="sxs-lookup"><span data-stu-id="573aa-143">If the sources in the <xref:System.Windows.Data.BindingGroup> support discarding pending changes, you can call <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> to begin the edit transaction, call <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> to save the pending changes, call <xref:System.Windows.Data.BindingGroup.CancelEdit%2A> to discard the pending changes.</span></span>  
  
 <span data-ttu-id="573aa-144">内の各オブジェクト<xref:System.Windows.Data.BindingGroup.Items%2A>を実装する<xref:System.ComponentModel.IEditableObject>、<xref:System.Windows.Data.BindingGroup.BeginEdit%2A>呼び出し <xref:System.ComponentModel.IEditableObject.BeginEdit%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="573aa-144">For each object in <xref:System.Windows.Data.BindingGroup.Items%2A> that implements <xref:System.ComponentModel.IEditableObject>, <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> calls <xref:System.ComponentModel.IEditableObject.BeginEdit%2A?displayProperty=nameWithType></span></span>  
  
   
  
## Examples  
 <span data-ttu-id="573aa-145">次の例では<xref:System.Windows.Data.BindingGroup.BeginEdit%2A>編集トランザクションを開始する、ウィンドウが読み込まれた場合。</span><span class="sxs-lookup"><span data-stu-id="573aa-145">The following example calls <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> when a window loads to begin the edit transaction.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#BeginEdit](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml.cs#beginedit)]
 [!code-vb[BindingGroupSnippets#BeginEdit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window1.xaml.vb#beginedit)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindingExpressions">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Windows.Data.BindingExpressionBase&gt; BindingExpressions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Windows.Data.BindingExpressionBase&gt; BindingExpressions" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.BindingExpressions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BindingExpressions As Collection(Of BindingExpressionBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Windows::Data::BindingExpressionBase ^&gt; ^ BindingExpressions { System::Collections::ObjectModel::Collection&lt;System::Windows::Data::BindingExpressionBase ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Windows.Data.BindingExpressionBase&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="573aa-146">
            <see cref="T:System.Windows.Data.BindingExpression" /> 内の各バインディングに対する情報を格納する <see cref="T:System.Windows.Data.BindingGroup" /> オブジェクトのコレクションを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="573aa-146">Gets a collection of <see cref="T:System.Windows.Data.BindingExpression" /> objects that contains information for each Binding in the <see cref="T:System.Windows.Data.BindingGroup" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="573aa-147">
            <see cref="T:System.Windows.Data.BindingExpression" /> 内の各バインディングに対する情報を格納する <see cref="T:System.Windows.Data.BindingGroup" /> オブジェクトのコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="573aa-147">A collection of <see cref="T:System.Windows.Data.BindingExpression" /> objects that contains information for each binding in the <see cref="T:System.Windows.Data.BindingGroup" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="573aa-148">A<xref:System.Windows.Data.BindingExpression>に属している、<xref:System.Windows.Data.BindingGroup>が発生した場合は、次のいずれかの場合。</span><span class="sxs-lookup"><span data-stu-id="573aa-148">A <xref:System.Windows.Data.BindingExpression> belongs to a <xref:System.Windows.Data.BindingGroup> if one of the following cases occurs:</span></span>  
  
-   <span data-ttu-id="573aa-149">バインディングのソースと<xref:System.Windows.FrameworkElement.DataContext%2A>を持つ要素の<xref:System.Windows.Data.BindingGroup>同じオブジェクトおよび<xref:System.Windows.Data.BindingBase.BindingGroupName%2A>が設定されていません。</span><span class="sxs-lookup"><span data-stu-id="573aa-149">The binding's source and the <xref:System.Windows.FrameworkElement.DataContext%2A> of the element that has the <xref:System.Windows.Data.BindingGroup> are the same object and the <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> is not set.</span></span>  
  
-   <span data-ttu-id="573aa-150"><xref:System.Windows.Data.BindingBase.BindingGroupName%2A>バインディングのプロパティと<xref:System.Windows.Data.BindingGroup.Name%2A>の<xref:System.Windows.Data.BindingGroup>同じ null 値に設定されて、<xref:System.Windows.Data.BindingGroup>バインディングのターゲット要素の親要素に属しています。</span><span class="sxs-lookup"><span data-stu-id="573aa-150">The <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> property of the binding and the <xref:System.Windows.Data.BindingGroup.Name%2A> of the <xref:System.Windows.Data.BindingGroup> are set to the same non-null value and the <xref:System.Windows.Data.BindingGroup> belongs to a parent element of the binding's target element.</span></span>  
  
-   <span data-ttu-id="573aa-151">追加する、<xref:System.Windows.Data.BindingExpression>に<xref:System.Windows.Data.BindingGroup.BindingExpressions%2A>です。</span><span class="sxs-lookup"><span data-stu-id="573aa-151">You add a <xref:System.Windows.Data.BindingExpression> to <xref:System.Windows.Data.BindingGroup.BindingExpressions%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelEdit">
      <MemberSignature Language="C#" Value="public void CancelEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.CancelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelEdit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="573aa-152">編集トランザクションを終了し、保留中の変更を破棄します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="573aa-152">Ends the edit transaction and discards the pending changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="573aa-153">このメソッドは、ソース オブジェクトがこれを行う場合は、保留中の変更を破棄し、編集トランザクションを終了するソースです。</span><span class="sxs-lookup"><span data-stu-id="573aa-153">This method causes the sources to discard the pending changes, if a source object is capable of doing so and end the edit transaction.</span></span> <span data-ttu-id="573aa-154">メソッドは、保存されているソースの値で、ターゲットのプロパティを更新します。</span><span class="sxs-lookup"><span data-stu-id="573aa-154">Then the method updates the target properties with the saved source values.</span></span>  
  
 <span data-ttu-id="573aa-155">内の各オブジェクト<xref:System.Windows.Data.BindingGroup.Items%2A>を実装する<xref:System.ComponentModel.IEditableObject>、<xref:System.Windows.Data.BindingGroup.CancelEdit%2A>呼び出し <xref:System.ComponentModel.IEditableObject.CancelEdit%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="573aa-155">For each object in <xref:System.Windows.Data.BindingGroup.Items%2A> that implements <xref:System.ComponentModel.IEditableObject>, <xref:System.Windows.Data.BindingGroup.CancelEdit%2A> calls <xref:System.ComponentModel.IEditableObject.CancelEdit%2A?displayProperty=nameWithType></span></span>  
  
   
  
## Examples  
 <span data-ttu-id="573aa-156">次の例では<xref:System.Windows.Data.BindingGroup.CancelEdit%2A>を破棄して、保留中の変更を呼び出し、続いて<xref:System.Windows.Data.BindingGroup.BeginEdit%2A>再編集済みであるソースを準備します。</span><span class="sxs-lookup"><span data-stu-id="573aa-156">The following example calls <xref:System.Windows.Data.BindingGroup.CancelEdit%2A> to discard the pending changes and then calls <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> to prepare the source to be re-edited.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#CancelEdit](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml.cs#canceledit)]
 [!code-vb[BindingGroupSnippets#CancelEdit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window1.xaml.vb#canceledit)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRestoreValues">
      <MemberSignature Language="C#" Value="public bool CanRestoreValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRestoreValues" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.CanRestoreValues" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanRestoreValues As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanRestoreValues { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="573aa-157">バインディングの各ソースが保留中の変更を破棄して元の値を復元できるかどうかを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="573aa-157">Gets whether each source in the binding can discard pending changes and restore the original values.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="573aa-158">バインディングの各ソースが保留中の変更を破棄して元の値を復元できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="573aa-158">
              <see langword="true" /> if each source in the binding can discard pending changes and restore the original values; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="573aa-159">実装する場合、保留中の変更をソースを破棄できます<xref:System.ComponentModel.IEditableObject>です。</span><span class="sxs-lookup"><span data-stu-id="573aa-159">A source can discard pending changes if it implements <xref:System.ComponentModel.IEditableObject>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommitEdit">
      <MemberSignature Language="C#" Value="public bool CommitEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CommitEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.CommitEdit" />
      <MemberSignature Language="VB.NET" Value="Public Function CommitEdit () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CommitEdit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="573aa-160">すべての <see cref="T:System.Windows.Controls.ValidationRule" /> オブジェクトを実行し、すべての検証ルールが成功した場合はバインディング ソースを更新します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="573aa-160">Runs all the <see cref="T:System.Windows.Controls.ValidationRule" /> objects and updates the binding sources if all validation rules succeed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="573aa-161">すべての <see cref="T:System.Windows.Controls.ValidationRule" /> が成功して値がソースにコミットされた場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="573aa-161">
              <see langword="true" /> if every <see cref="T:System.Windows.Controls.ValidationRule" /> succeeds and the values are committed to the sources; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="573aa-162">場合は、すべて<xref:System.Windows.Controls.ValidationRule>成功すると、ソース オブジェクトがこれを行う場合、このメソッドにより、ソースを保留中の変更をコミットし、編集トランザクションを終了します。</span><span class="sxs-lookup"><span data-stu-id="573aa-162">If every <xref:System.Windows.Controls.ValidationRule> succeeds, this method causes the sources to commit the pending changes and end the edit transaction, if a source object is capable of doing so.</span></span>  
  
 <span data-ttu-id="573aa-163">内の各オブジェクト<xref:System.Windows.Data.BindingGroup.Items%2A>を実装する<xref:System.ComponentModel.IEditableObject>、<xref:System.Windows.Data.BindingGroup.CommitEdit%2A>呼び出し <xref:System.ComponentModel.IEditableObject.EndEdit%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="573aa-163">For each object in <xref:System.Windows.Data.BindingGroup.Items%2A> that implements <xref:System.ComponentModel.IEditableObject>, <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> calls <xref:System.ComponentModel.IEditableObject.EndEdit%2A?displayProperty=nameWithType></span></span>  
  
   
  
## Examples  
 <span data-ttu-id="573aa-164">次の例では<xref:System.Windows.Data.BindingGroup.CommitEdit%2A>、保留中の変更を呼び出し、続いてを保存する<xref:System.Windows.Data.BindingGroup.BeginEdit%2A>再編集済みであるソースを準備します。</span><span class="sxs-lookup"><span data-stu-id="573aa-164">The following example calls <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> to save the pending changes and then calls <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> to prepare the source to be re-edited.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#BeginEdit](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml.cs#beginedit)]
 [!code-vb[BindingGroupSnippets#BeginEdit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window1.xaml.vb#beginedit)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (object item, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValue(object item, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.GetValue(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (item As Object, propertyName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(System::Object ^ item, System::String ^ propertyName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="573aa-165">指定されているプロパティを含むオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="573aa-165">The object that contains the specified property.</span>
          </span>
        </param>
        <param name="propertyName">
          <span data-ttu-id="573aa-166">提示されている値を取得するプロパティ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="573aa-166">The property whose proposed value to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="573aa-167">指定されているプロパティと項目に対して提示されている値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="573aa-167">Returns the proposed value for the specified property and item.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="573aa-168">提示されているプロパティ値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="573aa-168">The proposed property value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="573aa-169">このメソッドを使用して、<xref:System.Windows.Controls.ValidationRule.Validate%2A?displayProperty=nameWithType>ソースにコミットする値を取得します。</span><span class="sxs-lookup"><span data-stu-id="573aa-169">Use this method in the <xref:System.Windows.Controls.ValidationRule.Validate%2A?displayProperty=nameWithType> method to get the value to be committed to the source.</span></span> <span data-ttu-id="573aa-170">戻り値の型をステージに依存、<xref:System.Windows.Controls.ValidationRule>に発生します。</span><span class="sxs-lookup"><span data-stu-id="573aa-170">The type of the return value depends on the stage at which the <xref:System.Windows.Controls.ValidationRule> occurs.</span></span> <span data-ttu-id="573aa-171">たとえば場合、<xref:System.Windows.Controls.TextBox>は、整数型のプロパティにバインドされたデータと<xref:System.Windows.Controls.ValidationRule>を呼び出す<xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29>がその<xref:System.Windows.Controls.ValidationRule.ValidationStep%2A>に設定<xref:System.Windows.Controls.ValidationStep.RawProposedValue>メソッドは、文字列を返します。</span><span class="sxs-lookup"><span data-stu-id="573aa-171">For example, if a <xref:System.Windows.Controls.TextBox> is data bound to a property of type integer and the <xref:System.Windows.Controls.ValidationRule> that calls <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> has its <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> set to <xref:System.Windows.Controls.ValidationStep.RawProposedValue>, the method returns a string.</span></span> <span data-ttu-id="573aa-172">場合、<xref:System.Windows.Controls.ValidationRule>がその<xref:System.Windows.Controls.ValidationRule.ValidationStep%2A>'éý'<xref:System.Windows.Controls.ValidationStep.ConvertedProposedValue>バインドのコンバーターによって返されるすべての型を返します。</span><span class="sxs-lookup"><span data-stu-id="573aa-172">If the <xref:System.Windows.Controls.ValidationRule> has its <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> set to <xref:System.Windows.Controls.ValidationStep.ConvertedProposedValue>, the method returns whatever type that is returned by the binding's converter.</span></span> <span data-ttu-id="573aa-173">この例では<xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29>通常整数を返します。</span><span class="sxs-lookup"><span data-stu-id="573aa-173">In this example, <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> usually returns an integer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="573aa-174">次の例は、複数の顧客を入力し、各顧客に販売担当者を割り当てるユーザーの入力を求めるアプリケーションの一部です。</span><span class="sxs-lookup"><span data-stu-id="573aa-174">The following example is part of an application that prompts the user to enter multiple customers and assign a sales representative to each customer.</span></span> <span data-ttu-id="573aa-175">アプリケーションでは、営業担当者とお客様が同じリージョンに属していることを確認します。</span><span class="sxs-lookup"><span data-stu-id="573aa-175">The application checks that the sales representative and the customer belong to the same region.</span></span> <span data-ttu-id="573aa-176">例に示す、<xref:System.Windows.Controls.ValidationRule.Validate%2A>メソッドを使用、<xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29>お客様が入力された値を取得します。</span><span class="sxs-lookup"><span data-stu-id="573aa-176">The example shows the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method, which uses the <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> method to get values that the customer entered.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#ItemBindGroupValidationRule](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window2.xaml.cs#itembindgroupvalidationrule)]
 [!code-vb[BindingGroupSnippets#ItemBindGroupValidationRule](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window2.xaml.vb#itembindgroupvalidationrule)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="573aa-177">指定されている項目とプロパティにはバインディングがありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="573aa-177">There is not a binding for the specified item and property.</span>
          </span>
        </exception>
        <exception cref="T:System.Windows.Data.ValueUnavailableException">
          <span data-ttu-id="573aa-178">変換エラーまたは前の検証ルールが失敗したために、指定されているプロパティの値は使用できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="573aa-178">The value of the specified property is not available, due to a conversion error or because an earlier validation rule failed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="HasValidationError">
      <MemberSignature Language="C#" Value="public bool HasValidationError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasValidationError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.HasValidationError" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasValidationError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasValidationError { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="573aa-179">
            <see cref="T:System.Windows.Data.BindingGroup" /> のバインディングに失敗した検証規則があるかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="573aa-179">Gets a value that indicates whether the <see cref="T:System.Windows.Data.BindingGroup" /> has a failed validation rule.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="573aa-180">
            <see cref="T:System.Windows.Data.BindingGroup" /> に失敗した検証規則がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="573aa-180">
              <see langword="true" /> if the <see cref="T:System.Windows.Data.BindingGroup" /> has a failed validation rule; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDirty">
      <MemberSignature Language="C#" Value="public bool IsDirty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.IsDirty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDirty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDirty { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="573aa-181">
            <see cref="T:System.Windows.Data.BindingGroup" /> がソースに書き込まれていない提案された値を含んでいるかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="573aa-181">Gets or sets a value that indicates whether the <see cref="T:System.Windows.Data.BindingGroup" /> contains a proposed value that has not been written to the source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="573aa-182">
            <see cref="T:System.Windows.Data.BindingGroup" /> がソースに書き込まれていない提案される値を含む場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="573aa-182">
              <see langword="true" /> if the <see cref="T:System.Windows.Data.BindingGroup" /> contains a proposed value that has not been written to the source; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Collections.IList Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList Items" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.Items" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Items As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IList ^ Items { System::Collections::IList ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="573aa-183">
            <see cref="T:System.Windows.Data.BindingGroup" /> 内のバインディング オブジェクトが使用するソースを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="573aa-183">Gets the sources that are used by the Binding objects in the <see cref="T:System.Windows.Data.BindingGroup" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="573aa-184">
            <see cref="T:System.Windows.Data.BindingGroup" /> 内のバインディング オブジェクトが使用するソース。</span>
          <span class="sxs-lookup">
            <span data-stu-id="573aa-184">The sources that are used by the Binding objects in the <see cref="T:System.Windows.Data.BindingGroup" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="573aa-185">ソースが追加されるために使用される各オブジェクト、<xref:System.Windows.Data.BindingGroup.Items%2A>プロパティは 1 度、偶数の場合は、オブジェクトが複数のバインディングのソースとして使用します。</span><span class="sxs-lookup"><span data-stu-id="573aa-185">Each object that is used as a source is added into the <xref:System.Windows.Data.BindingGroup.Items%2A> property once, even if the object is used as the source for multiple bindings.</span></span> <span data-ttu-id="573aa-186">内の 1 つの項目がある多くの場合、 <xref:System.Windows.Data.BindingGroup.Items%2A>、あるオブジェクトでは、<xref:System.Windows.FrameworkElement.DataContext%2A>を使用する要素の<xref:System.Windows.Data.BindingGroup>です。</span><span class="sxs-lookup"><span data-stu-id="573aa-186">Often, there is just one item in <xref:System.Windows.Data.BindingGroup.Items%2A>, which is the object that is the <xref:System.Windows.FrameworkElement.DataContext%2A> of the element that uses the <xref:System.Windows.Data.BindingGroup>.</span></span> <span data-ttu-id="573aa-187">可能であれば、<xref:System.Windows.Data.BindingGroup>ただし、複数のソースにします。</span><span class="sxs-lookup"><span data-stu-id="573aa-187">It is possible for a <xref:System.Windows.Data.BindingGroup> to have multiple sources, however.</span></span> <span data-ttu-id="573aa-188">たとえば、同じバインディング オブジェクトを共有<xref:System.Windows.Data.BindingBase.BindingGroupName%2A>が別のソース オブジェクトを使用して、ソースとして使用される各オブジェクトは<xref:System.Windows.Data.BindingGroup.Items%2A>します。</span><span class="sxs-lookup"><span data-stu-id="573aa-188">For example, if Binding objects share the same <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> but use different source objects, each object that is used as a source is in <xref:System.Windows.Data.BindingGroup.Items%2A>.</span></span>  
  
 <span data-ttu-id="573aa-189">複数のオブジェクトにもある<xref:System.Windows.Data.BindingGroup.Items%2A>バインディングのパスが、ソースの入れ子になったプロパティに解決された場合。</span><span class="sxs-lookup"><span data-stu-id="573aa-189">There can also be multiple objects in <xref:System.Windows.Data.BindingGroup.Items%2A> if the path of a Binding resolves to a nested property of the source.</span></span> <span data-ttu-id="573aa-190">たとえば、<xref:System.Windows.Controls.TextBox>コントロールのバインドの一部である、<xref:System.Windows.Data.BindingGroup>とその<xref:System.Windows.FrameworkElement.DataContext%2A>は、`Customer`型のプロパティを持つオブジェクト`Address`です。</span><span class="sxs-lookup"><span data-stu-id="573aa-190">For example, suppose a <xref:System.Windows.Controls.TextBox> control's binding is a part of a <xref:System.Windows.Data.BindingGroup> and its <xref:System.Windows.FrameworkElement.DataContext%2A> is a `Customer` object, which has a property of type `Address`.</span></span> <span data-ttu-id="573aa-191">場合、<xref:System.Windows.Data.Binding.Path%2A>の<xref:System.Windows.Data.Binding>は、 `Address.ZipCode` 、プロパティ、`Address`に追加、<xref:System.Windows.Data.BindingGroup.Items%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="573aa-191">If the <xref:System.Windows.Data.Binding.Path%2A> of the <xref:System.Windows.Data.Binding> is the `Address.ZipCode` property, the `Address` is added to the <xref:System.Windows.Data.BindingGroup.Items%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="573aa-192">次の例は、ユーザーが同じ値に 2 つのオブジェクトのプロパティに設定するかどうかを確認するアプリケーションの一部です。</span><span class="sxs-lookup"><span data-stu-id="573aa-192">The following examples are part of an application that checks whether the user has set the properties of two objects to equal values.</span></span> <span data-ttu-id="573aa-193">最初の例では、2 つ作成されます<xref:System.Windows.Controls.TextBox>別のソースにバインドされたデータは、それぞれのコントロールです。</span><span class="sxs-lookup"><span data-stu-id="573aa-193">The first example creates two <xref:System.Windows.Controls.TextBox> controls, each of which are data bound to a different source.</span></span> <span data-ttu-id="573aa-194">最初のバインド<xref:System.Windows.Controls.TextBox>そのソースを取得`object1`から、<xref:System.Windows.FrameworkElement.DataContext%2A>の<xref:System.Windows.Controls.TextBox>コントロールの親要素 (、 <xref:System.Windows.Controls.StackPanel>)。</span><span class="sxs-lookup"><span data-stu-id="573aa-194">The binding of the first <xref:System.Windows.Controls.TextBox> gets its source, `object1`, from the <xref:System.Windows.FrameworkElement.DataContext%2A> of the <xref:System.Windows.Controls.TextBox> control's parent element (the <xref:System.Windows.Controls.StackPanel>).</span></span> <span data-ttu-id="573aa-195">2 番目の<xref:System.Windows.Controls.TextBox>、バインディングのソースに設定されている`object2`です。</span><span class="sxs-lookup"><span data-stu-id="573aa-195">On the second <xref:System.Windows.Controls.TextBox>, the source of the binding is set to `object2`.</span></span> <span data-ttu-id="573aa-196">例でも作成、<xref:System.Windows.Controls.Label>妥当性確認エラーを表示します。</span><span class="sxs-lookup"><span data-stu-id="573aa-196">The example also creates a <xref:System.Windows.Controls.Label> that displays validation errors.</span></span>  
  
 [!code-xaml[BindingGroupSnippets#BindingGroupName](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#bindinggroupname)]  
[!code-xaml[BindingGroupSnippets#ValidationAdornerSite](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#validationadornersite)]  
  
 <span data-ttu-id="573aa-197">次の例は、<xref:System.Windows.Controls.ValidationRule>前の例を使用します。</span><span class="sxs-lookup"><span data-stu-id="573aa-197">The following example shows the <xref:System.Windows.Controls.ValidationRule> that the previous example uses.</span></span> <span data-ttu-id="573aa-198"><xref:System.Windows.Controls.ValidationRule.Validate%2A>メソッドから、ソース オブジェクトを取得する例では、<xref:System.Windows.Data.BindingGroup>し、オブジェクトのプロパティが等しいかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="573aa-198">In the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method, the example gets each source object from the <xref:System.Windows.Data.BindingGroup> and checks whether the properties of the objects are equal.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#BindingGroupNameValidationRule](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml.cs#bindinggroupnamevalidationrule)]
 [!code-vb[BindingGroupSnippets#BindingGroupNameValidationRule](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window3.xaml.vb#bindinggroupnamevalidationrule)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="573aa-199">
            <see cref="T:System.Windows.Data.BindingGroup" /> を示す名前を取得または設定します。<see cref="T:System.Windows.Data.BindingGroup" /> ではこの名前を使用して、バインディング オブジェクトを含めたり除外したりできます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="573aa-199">Gets or sets the name that identifies the <see cref="T:System.Windows.Data.BindingGroup" />, which can be used to include and exclude Binding objects in the <see cref="T:System.Windows.Data.BindingGroup" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="573aa-200">
            <see cref="T:System.Windows.Data.BindingGroup" /> を示す名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="573aa-200">The name that identifies the <see cref="T:System.Windows.Data.BindingGroup" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="573aa-201">場合<xref:System.Windows.Data.BindingGroup.Name%2A>は`null`と同じオブジェクトであるソースのバインド、<xref:System.Windows.FrameworkElement.DataContext%2A>を持つ要素の<xref:System.Windows.Data.BindingGroup>に参加、<xref:System.Windows.Data.BindingGroup>です。</span><span class="sxs-lookup"><span data-stu-id="573aa-201">If <xref:System.Windows.Data.BindingGroup.Name%2A> is `null`, bindings that have a source that is the same object as the <xref:System.Windows.FrameworkElement.DataContext%2A> of the element that has the <xref:System.Windows.Data.BindingGroup> participate in the <xref:System.Windows.Data.BindingGroup>.</span></span>  
  
 <span data-ttu-id="573aa-202">異なるソースのバインドを含めることができます、<xref:System.Windows.FrameworkElement.DataContext%2A>の親を持つ要素を<xref:System.Windows.Data.BindingGroup>を設定して<xref:System.Windows.Data.BindingGroup.Name%2A>の<xref:System.Windows.Data.BindingGroup>と<xref:System.Windows.Data.BindingBase.BindingGroupName%2A>同じ値にバインディングのプロパティです。</span><span class="sxs-lookup"><span data-stu-id="573aa-202">You can include bindings that have a source that is different from the <xref:System.Windows.FrameworkElement.DataContext%2A> of the parent element that has the <xref:System.Windows.Data.BindingGroup> by setting <xref:System.Windows.Data.BindingGroup.Name%2A> of the <xref:System.Windows.Data.BindingGroup> and the <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> property of a binding to the same value.</span></span> <span data-ttu-id="573aa-203">同じソースのバインドを除外する<xref:System.Windows.FrameworkElement.DataContext%2A>を持つ親要素の<xref:System.Windows.Data.BindingGroup>を設定して<xref:System.Windows.Data.BindingGroup.Name%2A>の<xref:System.Windows.Data.BindingGroup>と<xref:System.Windows.Data.BindingBase.BindingGroupName%2A>ごとに異なる値のバインドのプロパティです。</span><span class="sxs-lookup"><span data-stu-id="573aa-203">You can exclude bindings that have the same source as <xref:System.Windows.FrameworkElement.DataContext%2A> of the parent element that has the <xref:System.Windows.Data.BindingGroup> by setting <xref:System.Windows.Data.BindingGroup.Name%2A> of the <xref:System.Windows.Data.BindingGroup> and the <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> property of a binding to different values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="573aa-204">次の例は、ユーザーが同じ値に 2 つのオブジェクトのプロパティに設定するかどうかを確認するアプリケーションの一部です。</span><span class="sxs-lookup"><span data-stu-id="573aa-204">The following examples are part of an application that checks whether the user has set the properties of two objects to equal values.</span></span> <span data-ttu-id="573aa-205">最初の例では、2 つ作成されます<xref:System.Windows.Controls.TextBox>別のソースにバインドされたデータは、それぞれのコントロールです。</span><span class="sxs-lookup"><span data-stu-id="573aa-205">The first example creates two <xref:System.Windows.Controls.TextBox> controls, each of which are data bound to a different source.</span></span> <span data-ttu-id="573aa-206">最初のバインド<xref:System.Windows.Controls.TextBox>の一部である、<xref:System.Windows.Data.BindingGroup>ため、<xref:System.Windows.Controls.TextBox>継承、<xref:System.Windows.FrameworkElement.DataContext%2A>と<xref:System.Windows.Data.BindingGroup>を親から<xref:System.Windows.Controls.StackPanel>です。</span><span class="sxs-lookup"><span data-stu-id="573aa-206">The binding of the first <xref:System.Windows.Controls.TextBox> is part of the <xref:System.Windows.Data.BindingGroup> because the <xref:System.Windows.Controls.TextBox> inherits the <xref:System.Windows.FrameworkElement.DataContext%2A> and <xref:System.Windows.Data.BindingGroup> from its parent <xref:System.Windows.Controls.StackPanel>.</span></span>  
  
 <span data-ttu-id="573aa-207">2 番目のバインド<xref:System.Windows.Controls.TextBox>の一部である、<xref:System.Windows.Data.BindingGroup>ため、<xref:System.Windows.Data.BindingGroup.Name%2A>の<xref:System.Windows.Data.BindingGroup>と<xref:System.Windows.Data.BindingBase.BindingGroupName%2A>の<xref:System.Windows.Data.Binding>に設定されて`bindingGroup`です。</span><span class="sxs-lookup"><span data-stu-id="573aa-207">The binding on the second <xref:System.Windows.Controls.TextBox> is part of the <xref:System.Windows.Data.BindingGroup> because the <xref:System.Windows.Data.BindingGroup.Name%2A> of the <xref:System.Windows.Data.BindingGroup> and the <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> of the <xref:System.Windows.Data.Binding> are both set to `bindingGroup`.</span></span>  
  
 [!code-xaml[BindingGroupSnippets#BindingGroupName](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#bindinggroupname)]  
[!code-xaml[BindingGroupSnippets#ValidationAdornerSite](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#validationadornersite)]  
  
 <span data-ttu-id="573aa-208">次の例は、<xref:System.Windows.Controls.ValidationRule>前の例を使用します。</span><span class="sxs-lookup"><span data-stu-id="573aa-208">The following example shows the <xref:System.Windows.Controls.ValidationRule> that the previous example uses.</span></span> <span data-ttu-id="573aa-209"><xref:System.Windows.Controls.ValidationRule.Validate%2A>メソッドから、ソース オブジェクトを取得する例では、<xref:System.Windows.Data.BindingGroup>し、オブジェクトのプロパティが等しいかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="573aa-209">In the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method, the example gets each source object from the <xref:System.Windows.Data.BindingGroup> and checks whether the properties of the objects are equal.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#BindingGroupNameValidationRule](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml.cs#bindinggroupnamevalidationrule)]
 [!code-vb[BindingGroupSnippets#BindingGroupNameValidationRule](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window3.xaml.vb#bindinggroupnamevalidationrule)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyOnValidationError">
      <MemberSignature Language="C#" Value="public bool NotifyOnValidationError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NotifyOnValidationError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.NotifyOnValidationError" />
      <MemberSignature Language="VB.NET" Value="Public Property NotifyOnValidationError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NotifyOnValidationError { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="573aa-210">
            <see cref="E:System.Windows.Controls.Validation.Error" /> の状態が変化したときに <see cref="T:System.Windows.Controls.ValidationRule" /> イベントが発生するかどうかを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="573aa-210">Gets or sets whether the <see cref="E:System.Windows.Controls.Validation.Error" /> event occurs when the state of a <see cref="T:System.Windows.Controls.ValidationRule" /> changes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="573aa-211">
            <see cref="E:System.Windows.Controls.Validation.Error" /> の状態が変化すると <see cref="T:System.Windows.Controls.ValidationRule" /> イベントが発生する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="573aa-211">
              <see langword="true" /> if the <see cref="E:System.Windows.Controls.Validation.Error" /> event occurs when the state of a <see cref="T:System.Windows.Controls.ValidationRule" /> changes; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="573aa-212">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="573aa-212">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="573aa-213"><xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType>添付イベントを持つ要素で発生する、<xref:System.Windows.Data.BindingGroup>です。</span><span class="sxs-lookup"><span data-stu-id="573aa-213">The <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> attached event occurs on the element that has the <xref:System.Windows.Data.BindingGroup>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="573aa-214">次の例を作成、<xref:System.Windows.Data.BindingGroup>設定と<xref:System.Windows.Data.BindingGroup.NotifyOnValidationError%2A>に`true`アプリケーションが処理できるように、<xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType>イベントときに、<xref:System.Windows.Controls.ValidationRule>は失敗します。</span><span class="sxs-lookup"><span data-stu-id="573aa-214">The following example creates a <xref:System.Windows.Data.BindingGroup> and sets <xref:System.Windows.Data.BindingGroup.NotifyOnValidationError%2A> to `true` so that the application can handle the <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> event when a <xref:System.Windows.Controls.ValidationRule> fails.</span></span>  
  
 [!code-xaml[BindingGroupSnippets#BindingGroup](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml#bindinggroup)]  
  
 <span data-ttu-id="573aa-215">次の例のハンドル、<xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType>イベント。</span><span class="sxs-lookup"><span data-stu-id="573aa-215">The following example handles the <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> event.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#ErrorHandler](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml.cs#errorhandler)]
 [!code-vb[BindingGroupSnippets#ErrorHandler](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window1.xaml.vb#errorhandler)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Owner">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyObject Owner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyObject Owner" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.Owner" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Owner As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DependencyObject ^ Owner { System::Windows::DependencyObject ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="573aa-216">この <see cref="T:System.Windows.Data.BindingGroup" /> が割り当てられているオブジェクトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="573aa-216">Gets the object that this <see cref="T:System.Windows.Data.BindingGroup" /> is assigned to.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="573aa-217">この <see cref="T:System.Windows.Data.BindingGroup" /> が割り当てられているオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="573aa-217">The object that this <see cref="T:System.Windows.Data.BindingGroup" /> is assigned to.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SharesProposedValues">
      <MemberSignature Language="C#" Value="public bool SharesProposedValues { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SharesProposedValues" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.SharesProposedValues" />
      <MemberSignature Language="VB.NET" Value="Public Property SharesProposedValues As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SharesProposedValues { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="573aa-218">
            <see cref="T:System.Windows.Data.BindingGroup" /> がソースにコミットされていないターゲット値を再利用するかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="573aa-218">Gets or sets a value that indicates whether the <see cref="T:System.Windows.Data.BindingGroup" /> reuses target values that have not been committed to the source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="573aa-219">
            <see cref="T:System.Windows.Data.BindingGroup" /> がソースにコミットされていないターゲット値を再利用する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="573aa-219">
              <see langword="true" /> if the <see cref="T:System.Windows.Data.BindingGroup" /> reuses target values that have not been committed to the source; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="573aa-220">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="573aa-220">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="573aa-221">提案された値が、バインディングのターゲットに変更されましたが、ソースにコミットされていない値です。</span><span class="sxs-lookup"><span data-stu-id="573aa-221">A proposed value is a value that has been changed on the target of a binding, but has not been committed to the source.</span></span> <span data-ttu-id="573aa-222">たとえば、双方向のバインドがあること、<xref:System.Windows.Controls.TextBox>と<xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>プロパティに設定されている<xref:System.Windows.Data.UpdateSourceTrigger.Explicit>です。</span><span class="sxs-lookup"><span data-stu-id="573aa-222">For example, suppose that there is a two-way binding on a <xref:System.Windows.Controls.TextBox> and the <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> property is set to <xref:System.Windows.Data.UpdateSourceTrigger.Explicit>.</span></span> <span data-ttu-id="573aa-223">ユーザーがの値を変更した場合、 <xref:System.Windows.Controls.TextBox>、提案された値が含まれる値、<xref:System.Windows.Controls.TextBox>ソースにコミットする前にします。</span><span class="sxs-lookup"><span data-stu-id="573aa-223">If the user changes the value of the <xref:System.Windows.Controls.TextBox>, the proposed value is the value that is in the <xref:System.Windows.Controls.TextBox> before it is committed to source.</span></span>  
  
 <span data-ttu-id="573aa-224">ときに<xref:System.Windows.Data.BindingGroup.SharesProposedValues%2A>は`true`、<xref:System.Windows.Data.BindingGroup>まま、BindingGroup に 1 つのバインドと同じソースで別のバインド、BindingGroup を結合する提案された値を使用します。</span><span class="sxs-lookup"><span data-stu-id="573aa-224">When <xref:System.Windows.Data.BindingGroup.SharesProposedValues%2A> is `true`, the <xref:System.Windows.Data.BindingGroup> uses the proposed value when one binding leaves the BindingGroup and another Binding with the same source joins the BindingGroup.</span></span>  <span data-ttu-id="573aa-225">たとえば、アプリケーションが複数のフィールドを編集し、ボタンをクリックして、ソース オブジェクトを更新するユーザーを使用します。</span><span class="sxs-lookup"><span data-stu-id="573aa-225">For example, suppose that an application enables a user to edit multiple fields and update the source object by clicking a button.</span></span> <span data-ttu-id="573aa-226">フィールドが編集されていないときに、アプリケーションで表示、<xref:System.Windows.Controls.TextBlock>です。</span><span class="sxs-lookup"><span data-stu-id="573aa-226">When a field is not being edited, the application displays it in a <xref:System.Windows.Controls.TextBlock>.</span></span> <span data-ttu-id="573aa-227">フィールドを編集するユーザーが開始されると、アプリケーションが置き換えられます、<xref:System.Windows.Controls.TextBlock>で、<xref:System.Windows.Controls.TextBox>です。</span><span class="sxs-lookup"><span data-stu-id="573aa-227">When the user begins to edit a field, the application replaces the <xref:System.Windows.Controls.TextBlock> with a <xref:System.Windows.Controls.TextBox>.</span></span> <span data-ttu-id="573aa-228">ユーザーは、そのフィールドの編集が完了したら、アプリケーションが置き換えられます、<xref:System.Windows.Controls.TextBox>で、<xref:System.Windows.Controls.TextBlock>です。</span><span class="sxs-lookup"><span data-stu-id="573aa-228">When the user finishes editing that field, the application replaces the <xref:System.Windows.Controls.TextBox> with a <xref:System.Windows.Controls.TextBlock>.</span></span> <span data-ttu-id="573aa-229">ための手段が存在する必要がありますが、ボタンをクリックするまでに、ソースが更新されないため、<xref:System.Windows.Controls.TextBlock>提案された値を表示します。</span><span class="sxs-lookup"><span data-stu-id="573aa-229">Because the source is not updated until the user clicks the button, there must be a way for the <xref:System.Windows.Controls.TextBlock> to display the proposed value.</span></span> <span data-ttu-id="573aa-230">設定して<xref:System.Windows.Data.BindingGroup.SharesProposedValues%2A>に`true`アプリケーションが表示されます、ユーザーの変更をフィールドに、ソースが更新されていない場合でもです。</span><span class="sxs-lookup"><span data-stu-id="573aa-230">By setting <xref:System.Windows.Data.BindingGroup.SharesProposedValues%2A> to `true`, the application will display the user's changes to a field even when the source has not been updated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetValue">
      <MemberSignature Language="C#" Value="public bool TryGetValue (object item, string propertyName, out object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetValue(object item, string propertyName, [out] object&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.TryGetValue(System.Object,System.String,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetValue (item As Object, propertyName As String, ByRef value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetValue(System::Object ^ item, System::String ^ propertyName, [Runtime::InteropServices::Out] System::Object ^ % value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="value" Type="System.Object&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="573aa-231">指定されているプロパティを含むオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="573aa-231">The object that contains the specified property.</span>
          </span>
        </param>
        <param name="propertyName">
          <span data-ttu-id="573aa-232">提示されている値を取得するプロパティ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="573aa-232">The property whose proposed value to get.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="573aa-233">このメソッドが返るときには、提示されているプロパティ値を表すオブジェクトを格納しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="573aa-233">When this method returns, contains an object that represents the proposed property value.</span>
          </span>
          <span data-ttu-id="573aa-234">このパラメーターは初期化せずに渡されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="573aa-234">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="573aa-235">指定されているプロパティと項目に対して提示されている値の取得を試みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="573aa-235">Attempts to get the proposed value for the specified property and item.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="573aa-236">値が指定されたプロパティの提示されている値である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="573aa-236">
              <see langword="true" /> if value is the proposed value for the specified property; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="573aa-237"><xref:System.Windows.Data.BindingGroup.TryGetValue%2A> 返します`false`指定項目とプロパティのバインドがない場合または指定したプロパティの値がない場合、変換エラーのために、使用または以前の検証規則に失敗したためです。</span><span class="sxs-lookup"><span data-stu-id="573aa-237"><xref:System.Windows.Data.BindingGroup.TryGetValue%2A> returns `false` if there is not a binding for the specified item and property or if the value of the specified property is not available, due to a conversion error or because an earlier validation rule failed.</span></span>  
  
 <span data-ttu-id="573aa-238">このメソッドを使用して、<xref:System.Windows.Controls.ValidationRule.Validate%2A?displayProperty=nameWithType>ソースにコミットする値を取得します。</span><span class="sxs-lookup"><span data-stu-id="573aa-238">Use this method in the <xref:System.Windows.Controls.ValidationRule.Validate%2A?displayProperty=nameWithType> method to get the value to be committed to the source.</span></span> <span data-ttu-id="573aa-239">型`value`をステージによって異なります、<xref:System.Windows.Controls.ValidationRule>に発生します。</span><span class="sxs-lookup"><span data-stu-id="573aa-239">The type `value` depends on the stage at which the <xref:System.Windows.Controls.ValidationRule> occurs.</span></span> <span data-ttu-id="573aa-240">たとえば場合、<xref:System.Windows.Controls.TextBox>整数型のプロパティにバインドされたデータは、`value`は文字列の場合、<xref:System.Windows.Controls.ValidationRule>を呼び出す<xref:System.Windows.Data.BindingGroup.TryGetValue%2A>がその<xref:System.Windows.Controls.ValidationRule.ValidationStep%2A>に設定<xref:System.Windows.Controls.ValidationStep.RawProposedValue>です。</span><span class="sxs-lookup"><span data-stu-id="573aa-240">For example, if a <xref:System.Windows.Controls.TextBox> is data bound to a property of type integer, `value` is a string if the <xref:System.Windows.Controls.ValidationRule> that calls <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> has its <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> set to <xref:System.Windows.Controls.ValidationStep.RawProposedValue>.</span></span> <span data-ttu-id="573aa-241">場合、<xref:System.Windows.Controls.ValidationRule>がその<xref:System.Windows.Controls.ValidationRule.ValidationStep%2A>に設定<xref:System.Windows.Controls.ValidationStep.ConvertedProposedValue>の型`value`はバインドのコンバーターによって返されるすべての型。</span><span class="sxs-lookup"><span data-stu-id="573aa-241">If the <xref:System.Windows.Controls.ValidationRule> has its <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> set to <xref:System.Windows.Controls.ValidationStep.ConvertedProposedValue>, the type of `value` is whatever type that is returned by the binding's converter.</span></span> <span data-ttu-id="573aa-242">この例では`value`は通常、整数値。</span><span class="sxs-lookup"><span data-stu-id="573aa-242">In this example, `value` is usually an integer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="573aa-243">次の例では、カスタム<xref:System.Windows.Controls.ValidationRule>という`ValidateDateAndPrice`です。</span><span class="sxs-lookup"><span data-stu-id="573aa-243">The following example creates a custom <xref:System.Windows.Controls.ValidationRule> named `ValidateDateAndPrice`.</span></span> <span data-ttu-id="573aa-244"><xref:System.Windows.Controls.ValidationRule.Validate%2A>メソッドでは、この例では、<xref:System.Windows.Data.BindingGroup.TryGetValue%2A>メソッドおよび<xref:System.Windows.Data.BindingGroup.Items%2A>ユーザーがフォームに入力した値を取得するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="573aa-244">In the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method, the example uses the <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> method and the <xref:System.Windows.Data.BindingGroup.Items%2A> property to get the values the user entered into the form.</span></span> <span data-ttu-id="573aa-245">次の例では、アイテムが 100 ドルを超える場合は、それが使用できる 7 日間以上を確認します。</span><span class="sxs-lookup"><span data-stu-id="573aa-245">Then the example checks that if an item is over 100 dollars, it will be available for at least seven days.</span></span> <span data-ttu-id="573aa-246">この例は例の上、<xref:System.Windows.Data.BindingGroup>クラス</span><span class="sxs-lookup"><span data-stu-id="573aa-246">This example is part of a larger example on the <xref:System.Windows.Data.BindingGroup> class</span></span>  
  
 [!code-csharp[BindingGroupSnippets#ValidateObject](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Data.cs#validateobject)]
 [!code-vb[BindingGroupSnippets#ValidateObject](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/data.vb#validateobject)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateSources">
      <MemberSignature Language="C#" Value="public bool UpdateSources ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool UpdateSources() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.UpdateSources" />
      <MemberSignature Language="VB.NET" Value="Public Function UpdateSources () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool UpdateSources();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="573aa-247">バインディングおよび <see cref="T:System.Windows.Controls.ValidationRule" /> プロパティが <see cref="P:System.Windows.Controls.ValidationRule.ValidationStep" />、<see cref="F:System.Windows.Controls.ValidationStep.RawProposedValue" />、または <see cref="F:System.Windows.Controls.ValidationStep.ConvertedProposedValue" /> に設定されている <see cref="F:System.Windows.Controls.ValidationStep.UpdatedValue" /> オブジェクトに対してコンバーターを実行し、すべての検証ルールが成功した場合は、ターゲットの値をソース オブジェクトに保存します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="573aa-247">Runs the converter on the binding and the <see cref="T:System.Windows.Controls.ValidationRule" /> objects that have the <see cref="P:System.Windows.Controls.ValidationRule.ValidationStep" /> property set to <see cref="F:System.Windows.Controls.ValidationStep.RawProposedValue" />, <see cref="F:System.Windows.Controls.ValidationStep.ConvertedProposedValue" />, or <see cref="F:System.Windows.Controls.ValidationStep.UpdatedValue" /> and saves the values of the targets to the source objects if all the validation rules succeed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="573aa-248">すべての検証ルールが成功した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="573aa-248">
              <see langword="true" /> if all validation rules succeed; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="573aa-249">このメソッドは、あらゆる場合に、ソースを更新<xref:System.Windows.Controls.ValidationRule>成功すると、保留中の変更をコミットし、編集トランザクションを終了するソースは行われませんが、します。</span><span class="sxs-lookup"><span data-stu-id="573aa-249">This method updates the source if every <xref:System.Windows.Controls.ValidationRule> succeeds, but it does not cause the sources to commit the pending changes and end the edit transaction.</span></span> <span data-ttu-id="573aa-250">つまり、ソース オブジェクトを実装する場合<xref:System.ComponentModel.IEditableObject>です。</span><span class="sxs-lookup"><span data-stu-id="573aa-250">That is, if the source object implements <xref:System.ComponentModel.IEditableObject>.</span></span> <span data-ttu-id="573aa-251">呼び出し元がこのメソッドは発生しません<xref:System.ComponentModel.IEditableObject.EndEdit%2A>呼び出せるようにします。</span><span class="sxs-lookup"><span data-stu-id="573aa-251">Calling this method does not cause <xref:System.ComponentModel.IEditableObject.EndEdit%2A> to be called.</span></span> <span data-ttu-id="573aa-252">使用して、<xref:System.Windows.Data.BindingGroup.CommitEdit%2A>メソッドのソースの保留中の変更をコミットします。</span><span class="sxs-lookup"><span data-stu-id="573aa-252">Use the <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> method to have the sources commit the pending changes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="573aa-253">次の例は、複数の顧客を入力し、各顧客に販売担当者を割り当てるユーザーの入力を求めるアプリケーションの一部です。</span><span class="sxs-lookup"><span data-stu-id="573aa-253">The following example is part of an application that prompts the user to enter multiple customers and assign a sales representative to each customer.</span></span> <span data-ttu-id="573aa-254">アプリケーションでは、営業担当者とお客様が同じリージョンに属していることを確認します。</span><span class="sxs-lookup"><span data-stu-id="573aa-254">The application checks that the sales representative and the customer belong to the same region.</span></span> <span data-ttu-id="573aa-255">呼び出しの例<xref:System.Windows.Data.BindingGroup.UpdateSources%2A>をバインドを検証し、すべての検証規則が成功した場合、ソースに値を保存します。</span><span class="sxs-lookup"><span data-stu-id="573aa-255">The example calls <xref:System.Windows.Data.BindingGroup.UpdateSources%2A> to validate the bindings and save the values to the source if all the validation rules succeed.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#UpdateSources](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window2.xaml.cs#updatesources)]
 [!code-vb[BindingGroupSnippets#UpdateSources](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window2.xaml.vb#updatesources)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidatesOnNotifyDataError">
      <MemberSignature Language="C#" Value="public bool ValidatesOnNotifyDataError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidatesOnNotifyDataError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidatesOnNotifyDataError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidatesOnNotifyDataError { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="573aa-256">
            <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" /> を含めるかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="573aa-256">Gets or sets a value that indicates whether to include the <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="573aa-257">
            <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" /> を含める場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="573aa-257">
              <see langword="true" /> to include the <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="573aa-258">既定値は、<see langword="true" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="573aa-258">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="573aa-259">ときに<xref:System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError%2A>は`true`、バインディングが確認され、実装するデータ ソースで発生したエラーを報告<xref:System.ComponentModel.INotifyDataErrorInfo>です。</span><span class="sxs-lookup"><span data-stu-id="573aa-259">When <xref:System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError%2A> is `true`, the binding checks for and reports errors that are raised by a data source that implements <xref:System.ComponentModel.INotifyDataErrorInfo>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateWithoutUpdate">
      <MemberSignature Language="C#" Value="public bool ValidateWithoutUpdate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ValidateWithoutUpdate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.ValidateWithoutUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Function ValidateWithoutUpdate () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ValidateWithoutUpdate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="573aa-260">バインディングおよび <see cref="T:System.Windows.Controls.ValidationRule" /> プロパティが <see cref="P:System.Windows.Controls.ValidationRule.ValidationStep" /> または <see cref="F:System.Windows.Controls.ValidationStep.RawProposedValue" /> に設定されている <see cref="F:System.Windows.Controls.ValidationStep.ConvertedProposedValue" /> オブジェクトに対し、コンバーターを実行します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="573aa-260">Runs the converter on the binding and the <see cref="T:System.Windows.Controls.ValidationRule" /> objects that have the <see cref="P:System.Windows.Controls.ValidationRule.ValidationStep" /> property set to <see cref="F:System.Windows.Controls.ValidationStep.RawProposedValue" /> or <see cref="F:System.Windows.Controls.ValidationStep.ConvertedProposedValue" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="573aa-261">検証ルールが成功した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="573aa-261">
              <see langword="true" /> if the validation rules succeed; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="573aa-262">このメソッドを呼び出すと、ソースは更新されません。</span><span class="sxs-lookup"><span data-stu-id="573aa-262">The sources are not updated when you call this method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationErrors">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Controls.ValidationError&gt; ValidationErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Windows.Controls.ValidationError&gt; ValidationErrors" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.ValidationErrors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValidationErrors As ReadOnlyCollection(Of ValidationError)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Windows::Controls::ValidationError ^&gt; ^ ValidationErrors { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Windows::Controls::ValidationError ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Controls.ValidationError&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="573aa-263">
            <see cref="T:System.Windows.Controls.ValidationError" /> を無効にした <see cref="T:System.Windows.Data.BindingGroup" /> オブジェクトのコレクションを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="573aa-263">Gets a collection of <see cref="T:System.Windows.Controls.ValidationError" /> objects that caused the <see cref="T:System.Windows.Data.BindingGroup" /> to be invalid.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="573aa-264">
            <see cref="T:System.Windows.Controls.ValidationError" /> を無効にした <see cref="T:System.Windows.Data.BindingGroup" /> オブジェクトのコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="573aa-264">A collection of <see cref="T:System.Windows.Controls.ValidationError" /> objects that caused <see cref="T:System.Windows.Data.BindingGroup" /> to be invalid.</span>
          </span>
          <span data-ttu-id="573aa-265">エラーがない場合、値は <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="573aa-265">The value is <see langword="null" /> if there are no errors.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationRules">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Windows.Controls.ValidationRule&gt; ValidationRules { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Windows.Controls.ValidationRule&gt; ValidationRules" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.ValidationRules" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValidationRules As Collection(Of ValidationRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Windows::Controls::ValidationRule ^&gt; ^ ValidationRules { System::Collections::ObjectModel::Collection&lt;System::Windows::Controls::ValidationRule ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Windows.Controls.ValidationRule&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="573aa-266">
            <see cref="T:System.Windows.Controls.ValidationRule" /> 内のソース オブジェクトを検証する <see cref="T:System.Windows.Data.BindingGroup" /> オブジェクトのコレクションを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="573aa-266">Gets a collection of <see cref="T:System.Windows.Controls.ValidationRule" /> objects that validate the source objects in the <see cref="T:System.Windows.Data.BindingGroup" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="573aa-267">
            <see cref="T:System.Windows.Controls.ValidationRule" /> 内のソース オブジェクトを検証する <see cref="T:System.Windows.Data.BindingGroup" /> オブジェクトのコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="573aa-267">A collection of <see cref="T:System.Windows.Controls.ValidationRule" /> objects that validate the source objects in the <see cref="T:System.Windows.Data.BindingGroup" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="573aa-268">ときに、<xref:System.Windows.Controls.ValidationRule>に追加、 <xref:System.Windows.Data.BindingGroup>、<xref:System.Windows.Data.BindingGroup>の最初のパラメーターとして渡される、<xref:System.Windows.Controls.ValidationRule.Validate%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="573aa-268">When a <xref:System.Windows.Controls.ValidationRule> is added to a <xref:System.Windows.Data.BindingGroup>, the <xref:System.Windows.Data.BindingGroup> is passed in as the first parameter of the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method.</span></span> <span data-ttu-id="573aa-269">使用して、オブジェクトの提案された値を取得できる、<xref:System.Windows.Data.BindingGroup.TryGetValue%2A>または<xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="573aa-269">You can get the proposed values of the object by using the <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> or <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> method.</span></span> <span data-ttu-id="573aa-270">バインドのソースであるオブジェクトを取得することができます、<xref:System.Windows.Data.BindingGroup.Items%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="573aa-270">You can get the objects that are the sources of the bindings from the <xref:System.Windows.Data.BindingGroup.Items%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="573aa-271">次の例では、カスタム<xref:System.Windows.Controls.ValidationRule>、`ValidateDateAndPrice`を<xref:System.Windows.Data.BindingGroup>です。</span><span class="sxs-lookup"><span data-stu-id="573aa-271">The following example adds the custom <xref:System.Windows.Controls.ValidationRule>, `ValidateDateAndPrice`, to the <xref:System.Windows.Data.BindingGroup>.</span></span>  
  
 [!code-xaml[BindingGroupSnippets#BindingGroup](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml#bindinggroup)]  
  
 <span data-ttu-id="573aa-272">`ValidateDateAndPrice` クラスの例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="573aa-272">The following example shows the `ValidateDateAndPrice` class.</span></span> <span data-ttu-id="573aa-273"><xref:System.Windows.Controls.ValidationRule.Validate%2A>メソッドを使用、<xref:System.Windows.Data.BindingGroup>ユーザーが、フォーム、およびアイテムが 100 ドルを超える場合は、それが使用できる 7 日間以上のチェックに入力した値を取得します。</span><span class="sxs-lookup"><span data-stu-id="573aa-273">The <xref:System.Windows.Controls.ValidationRule.Validate%2A> method uses the <xref:System.Windows.Data.BindingGroup> to get the values the user entered into the form, and checks that if an item is over 100 dollars, it will be available for at least seven days.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#ValidateObject](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Data.cs#validateobject)]
 [!code-vb[BindingGroupSnippets#ValidateObject](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/data.vb#validateobject)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>