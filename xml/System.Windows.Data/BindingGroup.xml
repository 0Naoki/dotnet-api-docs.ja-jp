<Type Name="BindingGroup" FullName="System.Windows.Data.BindingGroup">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b826e7069b0044a7213adf25c03adbfe354c267b" /><Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="11/29/2018" /><Meta Name="ms.locfileid" Value="52603297" /></Metadata><TypeSignature Language="C#" Value="public class BindingGroup : System.Windows.DependencyObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BindingGroup extends System.Windows.DependencyObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.BindingGroup" />
  <TypeSignature Language="VB.NET" Value="Public Class BindingGroup&#xA;Inherits DependencyObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class BindingGroup : System::Windows::DependencyObject" />
  <TypeSignature Language="F#" Value="type BindingGroup = class&#xA;    inherit DependencyObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>あるオブジェクトの検証に使用されるバインディングと <see cref="T:System.Windows.Controls.ValidationRule" /> オブジェクトのコレクションを格納します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A<xref:System.Windows.Data.BindingGroup>検証と同時に更新できる、複数のバインディング間のリレーションシップを作成します。 たとえば、アプリケーションがアドレスを入力するユーザーを要求するとします。 次に、アプリケーションは、型のオブジェクトを設定します。 `Address`、、のプロパティを持つ`Street`、 `City`、 `ZipCode`、と`Country`、ユーザーが指定した値を持つ。 アプリケーションが 4 つを格納しているパネル<xref:System.Windows.Controls.TextBox>オブジェクトのプロパティのいずれかにバインドされたデータは、それぞれのコントロール。 使用することができます、<xref:System.Windows.Controls.ValidationRule>で、<xref:System.Windows.Data.BindingGroup>を検証する、`Address`オブジェクト。 場合は、同じバインディングが参加<xref:System.Windows.Data.BindingGroup>、zip コードがアドレスの国の有効であることを確認できます。  
  
 設定する、<xref:System.Windows.FrameworkElement.BindingGroup%2A>プロパティ<xref:System.Windows.FrameworkElement>または<xref:System.Windows.FrameworkContentElement>します。 子要素の継承、<xref:System.Windows.Data.BindingGroup>だけで、他の継承可能なプロパティと同様に、親要素から。 子孫の要素のバインディングに追加、<xref:System.Windows.Data.BindingGroup>次の状況のいずれかが発生した場合。  
  
-   バインディングのソースと<xref:System.Windows.FrameworkElement.DataContext%2A>を持つ要素の<xref:System.Windows.Data.BindingGroup>同じオブジェクトと<xref:System.Windows.Data.BindingBase.BindingGroupName%2A>プロパティは設定されません。  
  
-   <xref:System.Windows.Data.BindingBase.BindingGroupName%2A>バインディングのプロパティが等しく、<xref:System.Windows.Data.BindingGroup.Name%2A>の<xref:System.Windows.FrameworkContentElement.BindingGroup%2A>に明示的に設定されていないと`null`します。  
  
 アドレスの例でとを<xref:System.Windows.FrameworkElement.DataContext%2A>の<xref:System.Windows.Controls.Panel>型のオブジェクトに設定されている`Address`します。 各バインド<xref:System.Windows.Controls.TextBox>に追加されます、<xref:System.Windows.Data.BindingGroup>パネル。  
  
 追加する<xref:System.Windows.Controls.ValidationRule>オブジェクトを<xref:System.Windows.Data.BindingGroup>します。 <xref:System.Windows.Data.BindingGroup>の最初のパラメーターとして渡される、<xref:System.Windows.Controls.ValidationRule.Validate%2A>メソッドと、<xref:System.Windows.Controls.ValidationRule>を実行します。 使用することができます、<xref:System.Windows.Data.BindingGroup.TryGetValue%2A>または<xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29>メソッドを<xref:System.Windows.Data.BindingGroup>、オブジェクトの提案された値を取得して、<xref:System.Windows.Data.BindingGroup.Items%2A>バインドのソースを取得するプロパティ。  
  
 A<xref:System.Windows.Data.BindingGroup>個別に更新されている各バインドではなく同時に、バインディングのソースを更新します。 データを検証する方法のいずれかを呼び出すときに (<xref:System.Windows.Data.BindingGroup.ValidateWithoutUpdate%2A>、 <xref:System.Windows.Data.BindingGroup.UpdateSources%2A>、または<xref:System.Windows.Data.BindingGroup.CommitEdit%2A>)、各バインド<xref:System.Windows.Controls.TextBox>の例を検証および更新される可能性があります。 バインディングがの一部の場合、<xref:System.Windows.Data.BindingGroup>を呼び出すまで、バインディングのソースは更新されません<xref:System.Windows.Data.BindingGroup.UpdateSources%2A>または<xref:System.Windows.Data.BindingGroup.CommitEdit%2A>で、 <xref:System.Windows.Data.BindingGroup>、明示的に設定していない場合、<xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>プロパティ。  
  
   
  
## Examples  
 次の例では、説明と、品目の価格を入力するユーザーに求める、アプリケーションと、プランの有効期限が切れる日付を作成します。 アプリケーションでは、フォームの下の項目の現在の情報が表示されます。 ユーザーでは、送信したり、変更をキャンセルすることができます。  
  
 アプリケーションは、この動作を実現するために次を実行します。  
  
-   作成、<xref:System.Windows.Data.BindingGroup>し、ルートを追加<xref:System.Windows.Controls.StackPanel>が作成されます、[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]アプリケーションの。  
  
-   呼び出し<xref:System.Windows.Data.BindingGroup.BeginEdit%2A>、 <xref:System.Windows.Data.BindingGroup.CommitEdit%2A>、および<xref:System.Windows.Data.BindingGroup.CancelEdit%2A>変更のロールバックを有効にするアプリケーションのロジックでします。  
  
-   呼び出し<xref:System.Windows.Data.BindingGroup.TryGetValue%2A>で、<xref:System.Windows.Controls.ValidationRule.Validate%2A>メソッドをユーザーの入力を取得し、7 日間に少なくとも 100 ドルの上の項目があります。  
  
 次の例では、作成、[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]アプリケーション。 ルート<xref:System.Windows.Controls.StackPanel>が、<xref:System.Windows.Data.BindingGroup>を格納している、<xref:System.Windows.Controls.ValidationRule>前述のように、項目を検証します。 上のバインド オブジェクト、`Price`プロパティと`OfferExpires`になるプロパティの一部の<xref:System.Windows.Data.BindingGroup>各バインドであり、<xref:System.Windows.Controls.ValidationRule>価格と日付では、それぞれが有効な値かどうかを確認します。 個々 のプロパティの検証規則を実行する前に、<xref:System.Windows.Controls.ValidationRule>上、<xref:System.Windows.Data.BindingGroup>します。  
  
 [!code-xaml[BindingGroupSnippets#WindowLayout](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml#windowlayout)]  
  
 次の例では、アプリケーションのイベント ハンドラーを示します。 ユーザーは、[送信] ボタンをクリックすると、アプリケーションが呼び出す<xref:System.Windows.Data.BindingGroup.CommitEdit%2A>各<xref:System.Windows.Controls.ValidationRule>関連付けられている、 <xref:System.Windows.Data.BindingGroup>。 各<xref:System.Windows.Controls.ValidationRule>成功すると、<xref:System.Windows.Data.BindingGroup.CommitEdit%2A>オブジェクトに値を保存および編集トランザクションを終了します。 場合<xref:System.Windows.Data.BindingGroup.CommitEdit%2A>が成功すると、アプリケーション別編集トランザクションを開始します。 ときに、<xref:System.Windows.Controls.ValidationRule>が失敗した、<xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType>イベントは、アプリケーションを設定するために発生します。<xref:System.Windows.Data.BindingGroup.NotifyOnValidationError%2A>に`true`上、 <xref:System.Windows.Data.BindingGroup> (前の例) で。 `ItemError` ハンドル、<xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType>をユーザーに検証エラーに関する情報をイベントを表示します。 例では、処理、<xref:System.Windows.FrameworkElement.Loaded>イベントを<xref:System.Windows.Controls.StackPanel>と<xref:System.Windows.Controls.Primitives.ButtonBase.Click>イベントを**キャンセル**ボタン。  
  
 [!code-csharp[BindingGroupSnippets#WindowLogic](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml.cs#windowlogic)]
 [!code-vb[BindingGroupSnippets#WindowLogic](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window1.xaml.vb#windowlogic)]  
  
 次の例は、カスタム<xref:System.Windows.Controls.ValidationRule>`ValidateDateAndPrice`に追加された、<xref:System.Windows.Data.BindingGroup>最初の例です。 <xref:System.Windows.Controls.ValidationRule>を使用して、<xref:System.Windows.Data.BindingGroup>でその<xref:System.Windows.Controls.ValidationRule.Validate%2A>ユーザーがフォーム、およびチェック項目が 100 ドルを超える場合は、ある使用可能な少なくとも 7 日間に入力した値を取得するメソッド。  
  
 [!code-csharp[BindingGroupSnippets#ValidateObject](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Data.cs#validateobject)]
 [!code-vb[BindingGroupSnippets#ValidateObject](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/data.vb#validateobject)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BindingGroup ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BindingGroup();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Data.BindingGroup" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginEdit">
      <MemberSignature Language="C#" Value="public void BeginEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.BeginEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginEdit();" />
      <MemberSignature Language="F#" Value="member this.BeginEdit : unit -&gt; unit" Usage="bindingGroup.BeginEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Data.BindingGroup" /> 内のソースに対する編集トランザクションを開始します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合に、ソース、<xref:System.Windows.Data.BindingGroup>を呼び出して、保留中の変更を破棄することをサポートして<xref:System.Windows.Data.BindingGroup.BeginEdit%2A>編集トランザクションを開始する<xref:System.Windows.Data.BindingGroup.CommitEdit%2A>保留中の変更を保存する<xref:System.Windows.Data.BindingGroup.CancelEdit%2A>保留中の変更を破棄します。  
  
 内の各オブジェクトの<xref:System.Windows.Data.BindingGroup.Items%2A>を実装する<xref:System.ComponentModel.IEditableObject>、<xref:System.Windows.Data.BindingGroup.BeginEdit%2A>呼び出し <xref:System.ComponentModel.IEditableObject.BeginEdit%2A?displayProperty=nameWithType>  
  
   
  
## Examples  
 次の例では、<xref:System.Windows.Data.BindingGroup.BeginEdit%2A>編集トランザクションを開始するウィンドウが読み込まれるとき。  
  
 [!code-csharp[BindingGroupSnippets#BeginEdit](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml.cs#beginedit)]
 [!code-vb[BindingGroupSnippets#BeginEdit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window1.xaml.vb#beginedit)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindingExpressions">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Windows.Data.BindingExpressionBase&gt; BindingExpressions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Windows.Data.BindingExpressionBase&gt; BindingExpressions" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.BindingExpressions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BindingExpressions As Collection(Of BindingExpressionBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Windows::Data::BindingExpressionBase ^&gt; ^ BindingExpressions { System::Collections::ObjectModel::Collection&lt;System::Windows::Data::BindingExpressionBase ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BindingExpressions : System.Collections.ObjectModel.Collection&lt;System.Windows.Data.BindingExpressionBase&gt;" Usage="System.Windows.Data.BindingGroup.BindingExpressions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Windows.Data.BindingExpressionBase&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Data.BindingExpression" /> 内の各バインディングに対する情報を格納する <see cref="T:System.Windows.Data.BindingGroup" /> オブジェクトのコレクションを取得します。</summary>
        <value><see cref="T:System.Windows.Data.BindingExpression" /> 内の各バインディングに対する情報を格納する <see cref="T:System.Windows.Data.BindingGroup" /> オブジェクトのコレクション。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A<xref:System.Windows.Data.BindingExpression>に属している、<xref:System.Windows.Data.BindingGroup>が発生した場合は、次のいずれかの場合。  
  
-   バインディングのソースと<xref:System.Windows.FrameworkElement.DataContext%2A>を持つ要素の<xref:System.Windows.Data.BindingGroup>同じオブジェクトと<xref:System.Windows.Data.BindingBase.BindingGroupName%2A>が設定されていません。  
  
-   <xref:System.Windows.Data.BindingBase.BindingGroupName%2A>バインディングのプロパティと<xref:System.Windows.Data.BindingGroup.Name%2A>の<xref:System.Windows.Data.BindingGroup>同じ null 以外の値に設定されます、<xref:System.Windows.Data.BindingGroup>バインディングのターゲット要素の親要素に属しています。  
  
-   追加する、<xref:System.Windows.Data.BindingExpression>に<xref:System.Windows.Data.BindingGroup.BindingExpressions%2A>します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelEdit">
      <MemberSignature Language="C#" Value="public void CancelEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.CancelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelEdit();" />
      <MemberSignature Language="F#" Value="member this.CancelEdit : unit -&gt; unit" Usage="bindingGroup.CancelEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>編集トランザクションを終了し、保留中の変更を破棄します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、ソース オブジェクトがその処理を実行できる場合は、保留中の変更を破棄し、編集トランザクションを終了するソースです。 メソッドは、保存されているソースの値を持つターゲットのプロパティを更新します。  
  
 内の各オブジェクトの<xref:System.Windows.Data.BindingGroup.Items%2A>を実装する<xref:System.ComponentModel.IEditableObject>、<xref:System.Windows.Data.BindingGroup.CancelEdit%2A>呼び出し <xref:System.ComponentModel.IEditableObject.CancelEdit%2A?displayProperty=nameWithType>  
  
   
  
## Examples  
 次の例では<xref:System.Windows.Data.BindingGroup.CancelEdit%2A>保留中の変更と、呼び出しを破棄する<xref:System.Windows.Data.BindingGroup.BeginEdit%2A>再編集するソースの準備をします。  
  
 [!code-csharp[BindingGroupSnippets#CancelEdit](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml.cs#canceledit)]
 [!code-vb[BindingGroupSnippets#CancelEdit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window1.xaml.vb#canceledit)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRestoreValues">
      <MemberSignature Language="C#" Value="public bool CanRestoreValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRestoreValues" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.CanRestoreValues" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanRestoreValues As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanRestoreValues { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRestoreValues : bool" Usage="System.Windows.Data.BindingGroup.CanRestoreValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>バインディングの各ソースが保留中の変更を破棄して元の値を復元できるかどうかを取得します。</summary>
        <value>バインディングの各ソースが保留中の変更を破棄して元の値を復元できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 実装している場合、ソースが保留中の変更破棄できます<xref:System.ComponentModel.IEditableObject>します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommitEdit">
      <MemberSignature Language="C#" Value="public bool CommitEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CommitEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.CommitEdit" />
      <MemberSignature Language="VB.NET" Value="Public Function CommitEdit () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CommitEdit();" />
      <MemberSignature Language="F#" Value="member this.CommitEdit : unit -&gt; bool" Usage="bindingGroup.CommitEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>すべての <see cref="T:System.Windows.Controls.ValidationRule" /> オブジェクトを実行し、すべての検証ルールが成功した場合はバインディング ソースを更新します。</summary>
        <returns>すべての <see cref="T:System.Windows.Controls.ValidationRule" /> が成功して値がソースにコミットされた場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合は、すべて<xref:System.Windows.Controls.ValidationRule>成功すると、ソース オブジェクトがその処理を実行できる場合、このメソッドにより、ソースを保留中の変更をコミットし、編集トランザクションを終了します。  
  
 内の各オブジェクトの<xref:System.Windows.Data.BindingGroup.Items%2A>を実装する<xref:System.ComponentModel.IEditableObject>、<xref:System.Windows.Data.BindingGroup.CommitEdit%2A>呼び出し <xref:System.ComponentModel.IEditableObject.EndEdit%2A?displayProperty=nameWithType>  
  
   
  
## Examples  
 次の例では<xref:System.Windows.Data.BindingGroup.CommitEdit%2A>保留中の変更と、呼び出しを保存する<xref:System.Windows.Data.BindingGroup.BeginEdit%2A>再編集するソースの準備をします。  
  
 [!code-csharp[BindingGroupSnippets#BeginEdit](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml.cs#beginedit)]
 [!code-vb[BindingGroupSnippets#BeginEdit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window1.xaml.vb#beginedit)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (object item, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValue(object item, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.GetValue(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (item As Object, propertyName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(System::Object ^ item, System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="member this.GetValue : obj * string -&gt; obj" Usage="bindingGroup.GetValue (item, propertyName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="item">指定されているプロパティを含むオブジェクト。</param>
        <param name="propertyName">提示されている値を取得するプロパティ。</param>
        <summary>指定されているプロパティと項目に対して提示されている値を返します。</summary>
        <returns>提示されているプロパティ値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドを使用して、<xref:System.Windows.Controls.ValidationRule.Validate%2A?displayProperty=nameWithType>ソースにコミットする値を取得します。 戻り値の型をステージに依存、<xref:System.Windows.Controls.ValidationRule>に発生します。 たとえば場合、<xref:System.Windows.Controls.TextBox>データは整数型のプロパティにバインドされて、<xref:System.Windows.Controls.ValidationRule>を呼び出す<xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29>がその<xref:System.Windows.Controls.ValidationRule.ValidationStep%2A>に設定<xref:System.Windows.Controls.ValidationStep.RawProposedValue>メソッドは、文字列を返します。 場合、<xref:System.Windows.Controls.ValidationRule>がその<xref:System.Windows.Controls.ValidationRule.ValidationStep%2A>設定<xref:System.Windows.Controls.ValidationStep.ConvertedProposedValue>バインディングのコンバーターによって返される任意の型を返します。 この例で<xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29>通常は整数を返します。  
  
   
  
## Examples  
 次の例は、複数の顧客を入力し、各顧客に販売担当者を割り当てるユーザーの入力を要求するアプリケーションの一部です。 アプリケーションは、営業担当者と、顧客が同じリージョンに属していることを確認します。 例を示します、<xref:System.Windows.Controls.ValidationRule.Validate%2A>メソッドを使用して、<xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29>顧客の入力値を取得します。  
  
 [!code-csharp[BindingGroupSnippets#ItemBindGroupValidationRule](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window2.xaml.cs#itembindgroupvalidationrule)]
 [!code-vb[BindingGroupSnippets#ItemBindGroupValidationRule](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window2.xaml.vb#itembindgroupvalidationrule)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">指定されている項目とプロパティにはバインディングがありません。</exception>
        <exception cref="T:System.Windows.Data.ValueUnavailableException">変換エラーまたは前の検証ルールが失敗したために、指定されているプロパティの値は使用できません。</exception>
      </Docs>
    </Member>
    <Member MemberName="HasValidationError">
      <MemberSignature Language="C#" Value="public bool HasValidationError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasValidationError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.HasValidationError" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasValidationError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasValidationError { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasValidationError : bool" Usage="System.Windows.Data.BindingGroup.HasValidationError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Data.BindingGroup" /> のバインディングに失敗した検証規則があるかどうかを示す値を取得します。</summary>
        <value><see cref="T:System.Windows.Data.BindingGroup" /> に失敗した検証規則がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDirty">
      <MemberSignature Language="C#" Value="public bool IsDirty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.IsDirty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDirty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDirty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDirty : bool" Usage="System.Windows.Data.BindingGroup.IsDirty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Data.BindingGroup" /> がソースに書き込まれていない提案された値を含んでいるかどうかを示す値を取得または設定します。</summary>
        <value><see cref="T:System.Windows.Data.BindingGroup" /> がソースに書き込まれていない提案される値を含む場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Collections.IList Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList Items" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.Items" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Items As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IList ^ Items { System::Collections::IList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Items : System.Collections.IList" Usage="System.Windows.Data.BindingGroup.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Data.BindingGroup" /> 内のバインディング オブジェクトが使用するソースを取得します。</summary>
        <value><see cref="T:System.Windows.Data.BindingGroup" /> 内のバインディング オブジェクトが使用するソース。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 各オブジェクトにソースが追加されるために使用される、<xref:System.Windows.Data.BindingGroup.Items%2A>プロパティを 1 回、偶数の場合は、オブジェクトは、複数のバインディング ソースとして使用されます。 内の 1 つの項目がある多くの場合、 <xref:System.Windows.Data.BindingGroup.Items%2A>、あるオブジェクトは、<xref:System.Windows.FrameworkElement.DataContext%2A>を使用する要素の<xref:System.Windows.Data.BindingGroup>します。 可能性があります、<xref:System.Windows.Data.BindingGroup>ただし、複数のソースにします。 たとえば、同じバインディング オブジェクトが共有<xref:System.Windows.Data.BindingBase.BindingGroupName%2A>が別のソース オブジェクトを使用して、ソースとして使用される各オブジェクトは<xref:System.Windows.Data.BindingGroup.Items%2A>します。  
  
 複数のオブジェクトにもある<xref:System.Windows.Data.BindingGroup.Items%2A>ソースの入れ子になったプロパティにバインドのパスが解決される場合。 たとえば、<xref:System.Windows.Controls.TextBox>コントロールのバインドの一部である、<xref:System.Windows.Data.BindingGroup>とその<xref:System.Windows.FrameworkElement.DataContext%2A>は、`Customer`型のプロパティを持つオブジェクトは、`Address`します。 場合、<xref:System.Windows.Data.Binding.Path%2A>の<xref:System.Windows.Data.Binding>は、`Address.ZipCode`プロパティ、`Address`に追加されます、<xref:System.Windows.Data.BindingGroup.Items%2A>プロパティ。  
  
   
  
## Examples  
 次の例は、ユーザーに同じ値を 2 つのオブジェクトのプロパティを設定するかどうかを確認するアプリケーションの一部です。 最初の例では、2 つ作成されます<xref:System.Windows.Controls.TextBox>別のソースにバインドされたデータをそれぞれのコントロール。 最初のバインド<xref:System.Windows.Controls.TextBox>、ソースを取得します。 `object1`、から、<xref:System.Windows.FrameworkElement.DataContext%2A>の、<xref:System.Windows.Controls.TextBox>コントロールの親要素 (、 <xref:System.Windows.Controls.StackPanel>)。 2 番目の<xref:System.Windows.Controls.TextBox>、バインディングのソースに設定されている`object2`します。 例でも作成、<xref:System.Windows.Controls.Label>検証エラーを表示します。  
  
 [!code-xaml[BindingGroupSnippets#BindingGroupName](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#bindinggroupname)]  
[!code-xaml[BindingGroupSnippets#ValidationAdornerSite](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#validationadornersite)]  
  
 次の例は、<xref:System.Windows.Controls.ValidationRule>前の例を使用します。 <xref:System.Windows.Controls.ValidationRule.Validate%2A>メソッドからには、各ソース オブジェクトを取得する例では、<xref:System.Windows.Data.BindingGroup>オブジェクトのプロパティが等しいかどうかを確認します。  
  
 [!code-csharp[BindingGroupSnippets#BindingGroupNameValidationRule](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml.cs#bindinggroupnamevalidationrule)]
 [!code-vb[BindingGroupSnippets#BindingGroupNameValidationRule](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window3.xaml.vb#bindinggroupnamevalidationrule)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.Data.BindingGroup.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Data.BindingGroup" /> を示す名前を取得または設定します。<see cref="T:System.Windows.Data.BindingGroup" /> ではこの名前を使用して、バインディング オブジェクトを含めたり除外したりできます。</summary>
        <value><see cref="T:System.Windows.Data.BindingGroup" /> を示す名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合<xref:System.Windows.Data.BindingGroup.Name%2A>は`null`、バインドと同じオブジェクトであるソースがある、<xref:System.Windows.FrameworkElement.DataContext%2A>を持つ要素の<xref:System.Windows.Data.BindingGroup>に参加、<xref:System.Windows.Data.BindingGroup>します。  
  
 異なるソースのバインドを含めることができます、<xref:System.Windows.FrameworkElement.DataContext%2A>を持つ親要素の<xref:System.Windows.Data.BindingGroup>を設定して<xref:System.Windows.Data.BindingGroup.Name%2A>の<xref:System.Windows.Data.BindingGroup>、<xref:System.Windows.Data.BindingBase.BindingGroupName%2A>同じ値へのバインドのプロパティ。 同じソースのバインドを除外する<xref:System.Windows.FrameworkElement.DataContext%2A>を持つ親要素の<xref:System.Windows.Data.BindingGroup>を設定して<xref:System.Windows.Data.BindingGroup.Name%2A>の<xref:System.Windows.Data.BindingGroup>と<xref:System.Windows.Data.BindingBase.BindingGroupName%2A>ごとに異なる値のバインドのプロパティ。  
  
   
  
## Examples  
 次の例は、ユーザーに同じ値を 2 つのオブジェクトのプロパティを設定するかどうかを確認するアプリケーションの一部です。 最初の例では、2 つ作成されます<xref:System.Windows.Controls.TextBox>別のソースにバインドされたデータをそれぞれのコントロール。 最初のバインド<xref:System.Windows.Controls.TextBox>の一部である、<xref:System.Windows.Data.BindingGroup>ため、<xref:System.Windows.Controls.TextBox>継承、<xref:System.Windows.FrameworkElement.DataContext%2A>と<xref:System.Windows.Data.BindingGroup>その親から<xref:System.Windows.Controls.StackPanel>します。  
  
 2 番目のバインド<xref:System.Windows.Controls.TextBox>の一部である、<xref:System.Windows.Data.BindingGroup>ため、<xref:System.Windows.Data.BindingGroup.Name%2A>の<xref:System.Windows.Data.BindingGroup>と<xref:System.Windows.Data.BindingBase.BindingGroupName%2A>の<xref:System.Windows.Data.Binding>に設定されて`bindingGroup`します。  
  
 [!code-xaml[BindingGroupSnippets#BindingGroupName](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#bindinggroupname)]  
[!code-xaml[BindingGroupSnippets#ValidationAdornerSite](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#validationadornersite)]  
  
 次の例は、<xref:System.Windows.Controls.ValidationRule>前の例を使用します。 <xref:System.Windows.Controls.ValidationRule.Validate%2A>メソッドからには、各ソース オブジェクトを取得する例では、<xref:System.Windows.Data.BindingGroup>オブジェクトのプロパティが等しいかどうかを確認します。  
  
 [!code-csharp[BindingGroupSnippets#BindingGroupNameValidationRule](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml.cs#bindinggroupnamevalidationrule)]
 [!code-vb[BindingGroupSnippets#BindingGroupNameValidationRule](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window3.xaml.vb#bindinggroupnamevalidationrule)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyOnValidationError">
      <MemberSignature Language="C#" Value="public bool NotifyOnValidationError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NotifyOnValidationError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.NotifyOnValidationError" />
      <MemberSignature Language="VB.NET" Value="Public Property NotifyOnValidationError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NotifyOnValidationError { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.NotifyOnValidationError : bool with get, set" Usage="System.Windows.Data.BindingGroup.NotifyOnValidationError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="E:System.Windows.Controls.Validation.Error" /> の状態が変化したときに <see cref="T:System.Windows.Controls.ValidationRule" /> イベントが発生するかどうかを取得または設定します。</summary>
        <value><see cref="E:System.Windows.Controls.Validation.Error" /> の状態が変化すると <see cref="T:System.Windows.Controls.ValidationRule" /> イベントが発生する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType>添付イベントを持つ要素で発生する、<xref:System.Windows.Data.BindingGroup>します。  
  
   
  
## Examples  
 次の例では、作成、<xref:System.Windows.Data.BindingGroup>設定と<xref:System.Windows.Data.BindingGroup.NotifyOnValidationError%2A>に`true`アプリケーションが処理できるように、<xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType>イベント時に、<xref:System.Windows.Controls.ValidationRule>が失敗しました。  
  
 [!code-xaml[BindingGroupSnippets#BindingGroup](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml#bindinggroup)]  
  
 次の例のハンドル、<xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType>イベント。  
  
 [!code-csharp[BindingGroupSnippets#ErrorHandler](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml.cs#errorhandler)]
 [!code-vb[BindingGroupSnippets#ErrorHandler](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window1.xaml.vb#errorhandler)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Owner">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyObject Owner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyObject Owner" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.Owner" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Owner As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DependencyObject ^ Owner { System::Windows::DependencyObject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Owner : System.Windows.DependencyObject" Usage="System.Windows.Data.BindingGroup.Owner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Windows.Data.BindingGroup" /> が割り当てられているオブジェクトを取得します。</summary>
        <value>この <see cref="T:System.Windows.Data.BindingGroup" /> が割り当てられているオブジェクト。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SharesProposedValues">
      <MemberSignature Language="C#" Value="public bool SharesProposedValues { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SharesProposedValues" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.SharesProposedValues" />
      <MemberSignature Language="VB.NET" Value="Public Property SharesProposedValues As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SharesProposedValues { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SharesProposedValues : bool with get, set" Usage="System.Windows.Data.BindingGroup.SharesProposedValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Data.BindingGroup" /> がソースにコミットされていないターゲット値を再利用するかどうかを示す値を取得または設定します。</summary>
        <value><see cref="T:System.Windows.Data.BindingGroup" /> がソースにコミットされていないターゲット値を再利用する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 提案された値は、バインディングのターゲットに変更されましたが、ソースにコミットされていない値です。 たとえば、双方向のバインドがあること、<xref:System.Windows.Controls.TextBox>と<xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>プロパティに設定されて<xref:System.Windows.Data.UpdateSourceTrigger.Explicit>します。 ユーザーがの値を変更した場合、 <xref:System.Windows.Controls.TextBox>、提案された値が含まれる値、<xref:System.Windows.Controls.TextBox>ソースにコミットする前にします。  
  
 ときに<xref:System.Windows.Data.BindingGroup.SharesProposedValues%2A>は`true`、<xref:System.Windows.Data.BindingGroup>バインドを 1 つが、BindingGroup を離れるし、同じソースを別のバインディング、BindingGroup を結合するときに指定された値を使用します。  たとえば、アプリケーションが複数のフィールドを編集し、ボタンをクリックして、ソース オブジェクトを更新するユーザーを使用します。 アプリケーションを表示でフィールドが編集されていないときに、<xref:System.Windows.Controls.TextBlock>します。 フィールドを編集するユーザーが開始されると、アプリケーションが置き換えられます、<xref:System.Windows.Controls.TextBlock>で、<xref:System.Windows.Controls.TextBox>します。 ユーザーは、そのフィールドの編集が完了したら、アプリケーションが置き換えられます、<xref:System.Windows.Controls.TextBox>で、<xref:System.Windows.Controls.TextBlock>します。 ある必要がありますが、ユーザーがボタンをクリックするまでに、ソースが更新されないため、<xref:System.Windows.Controls.TextBlock>提案された値を表示します。 設定して<xref:System.Windows.Data.BindingGroup.SharesProposedValues%2A>に`true`アプリケーションが表示されます、ユーザーの変更、フィールドにソースが更新されていない場合でもです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetValue">
      <MemberSignature Language="C#" Value="public bool TryGetValue (object item, string propertyName, out object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetValue(object item, string propertyName, [out] object&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.TryGetValue(System.Object,System.String,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetValue (item As Object, propertyName As String, ByRef value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetValue(System::Object ^ item, System::String ^ propertyName, [Runtime::InteropServices::Out] System::Object ^ % value);" />
      <MemberSignature Language="F#" Value="member this.TryGetValue : obj * string *  -&gt; bool" Usage="bindingGroup.TryGetValue (item, propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" RefType="out" />
      </Parameters>
      <Docs>
        <param name="item">指定されているプロパティを含むオブジェクト。</param>
        <param name="propertyName">提示されている値を取得するプロパティ。</param>
        <param name="value">このメソッドが返るときには、提示されているプロパティ値を表すオブジェクトを格納しています。 このパラメーターは初期化せずに渡されます。</param>
        <summary>指定されているプロパティと項目に対して提示されている値の取得を試みます。</summary>
        <returns>値が指定されたプロパティの提示されている値である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> 返します`false`指定した項目とプロパティのバインドがない場合または指定したプロパティの値がない場合、変換エラーが原因で、使用または前の検証ルールが失敗したためです。  
  
 このメソッドを使用して、<xref:System.Windows.Controls.ValidationRule.Validate%2A?displayProperty=nameWithType>ソースにコミットする値を取得します。 型`value`位置ステージによって異なります、<xref:System.Windows.Controls.ValidationRule>に発生します。 たとえば場合、<xref:System.Windows.Controls.TextBox>整数型のプロパティにバインドされたデータは、`value`は文字列の場合、<xref:System.Windows.Controls.ValidationRule>を呼び出す<xref:System.Windows.Data.BindingGroup.TryGetValue%2A>がその<xref:System.Windows.Controls.ValidationRule.ValidationStep%2A>に設定<xref:System.Windows.Controls.ValidationStep.RawProposedValue>。 場合、<xref:System.Windows.Controls.ValidationRule>がその<xref:System.Windows.Controls.ValidationRule.ValidationStep%2A>に設定<xref:System.Windows.Controls.ValidationStep.ConvertedProposedValue>の型`value`はどのようなバインディングのコンバーターによって返される型です。 この例で`value`は、通常の整数。  
  
   
  
## Examples  
 次の例では、カスタム<xref:System.Windows.Controls.ValidationRule>という`ValidateDateAndPrice`します。 <xref:System.Windows.Controls.ValidationRule.Validate%2A>メソッドの例では、<xref:System.Windows.Data.BindingGroup.TryGetValue%2A>メソッドと<xref:System.Windows.Data.BindingGroup.Items%2A>ユーザーがフォームに入力した値を取得するプロパティ。 例では、アイテムが 100 ドルを超える場合は、ある使用可能な少なくとも 7 日間を確認します。 この例より大きな例の一部はで、<xref:System.Windows.Data.BindingGroup>クラス  
  
 [!code-csharp[BindingGroupSnippets#ValidateObject](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Data.cs#validateobject)]
 [!code-vb[BindingGroupSnippets#ValidateObject](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/data.vb#validateobject)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateSources">
      <MemberSignature Language="C#" Value="public bool UpdateSources ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool UpdateSources() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.UpdateSources" />
      <MemberSignature Language="VB.NET" Value="Public Function UpdateSources () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool UpdateSources();" />
      <MemberSignature Language="F#" Value="member this.UpdateSources : unit -&gt; bool" Usage="bindingGroup.UpdateSources " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>バインディングおよび <see cref="T:System.Windows.Controls.ValidationRule" /> プロパティが <see cref="P:System.Windows.Controls.ValidationRule.ValidationStep" />、<see cref="F:System.Windows.Controls.ValidationStep.RawProposedValue" />、または <see cref="F:System.Windows.Controls.ValidationStep.ConvertedProposedValue" /> に設定されている <see cref="F:System.Windows.Controls.ValidationStep.UpdatedValue" /> オブジェクトに対してコンバーターを実行し、すべての検証ルールが成功した場合は、ターゲットの値をソース オブジェクトに保存します。</summary>
        <returns>すべての検証ルールが成功した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 すべての場合、このメソッドは、ソースを更新<xref:System.Windows.Controls.ValidationRule>成功すると、保留中の変更をコミットし、編集トランザクションを終了するソースは発生しませんが、します。 つまり、ソース オブジェクトが実装されている場合<xref:System.ComponentModel.IEditableObject>します。 呼び出し元がこのメソッドは発生しません<xref:System.ComponentModel.IEditableObject.EndEdit%2A>呼び出されます。 使用して、<xref:System.Windows.Data.BindingGroup.CommitEdit%2A>メソッドのソースの保留中の変更をコミットします。  
  
   
  
## Examples  
 次の例は、複数の顧客を入力し、各顧客に販売担当者を割り当てるユーザーの入力を要求するアプリケーションの一部です。 アプリケーションは、営業担当者と、顧客が同じリージョンに属していることを確認します。 例では、<xref:System.Windows.Data.BindingGroup.UpdateSources%2A>バインディングを検証し、すべての検証ルールが成功した場合、ソースに値を保存します。  
  
 [!code-csharp[BindingGroupSnippets#UpdateSources](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window2.xaml.cs#updatesources)]
 [!code-vb[BindingGroupSnippets#UpdateSources](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window2.xaml.vb#updatesources)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidatesOnNotifyDataError">
      <MemberSignature Language="C#" Value="public bool ValidatesOnNotifyDataError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidatesOnNotifyDataError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidatesOnNotifyDataError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidatesOnNotifyDataError { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ValidatesOnNotifyDataError : bool with get, set" Usage="System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" /> を含めるかどうかを示す値を取得または設定します。</summary>
        <value><see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" /> を含める場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ときに<xref:System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError%2A>は`true`、バインディングをチェックし、実装するデータ ソースによって発生するエラーを報告<xref:System.ComponentModel.INotifyDataErrorInfo>します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateWithoutUpdate">
      <MemberSignature Language="C#" Value="public bool ValidateWithoutUpdate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ValidateWithoutUpdate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.ValidateWithoutUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Function ValidateWithoutUpdate () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ValidateWithoutUpdate();" />
      <MemberSignature Language="F#" Value="member this.ValidateWithoutUpdate : unit -&gt; bool" Usage="bindingGroup.ValidateWithoutUpdate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>バインディングおよび <see cref="T:System.Windows.Controls.ValidationRule" /> プロパティが <see cref="P:System.Windows.Controls.ValidationRule.ValidationStep" /> または <see cref="F:System.Windows.Controls.ValidationStep.RawProposedValue" /> に設定されている <see cref="F:System.Windows.Controls.ValidationStep.ConvertedProposedValue" /> オブジェクトに対し、コンバーターを実行します。</summary>
        <returns>検証ルールが成功した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドを呼び出すと、ソースは更新されません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationErrors">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Controls.ValidationError&gt; ValidationErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Windows.Controls.ValidationError&gt; ValidationErrors" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.ValidationErrors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValidationErrors As ReadOnlyCollection(Of ValidationError)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Windows::Controls::ValidationError ^&gt; ^ ValidationErrors { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Windows::Controls::ValidationError ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidationErrors : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Controls.ValidationError&gt;" Usage="System.Windows.Data.BindingGroup.ValidationErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Controls.ValidationError&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Controls.ValidationError" /> を無効にした <see cref="T:System.Windows.Data.BindingGroup" /> オブジェクトのコレクションを取得します。</summary>
        <value><see cref="T:System.Windows.Controls.ValidationError" /> を無効にした <see cref="T:System.Windows.Data.BindingGroup" /> オブジェクトのコレクション。  エラーがない場合、値は <see langword="null" /> です。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationRules">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Windows.Controls.ValidationRule&gt; ValidationRules { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Windows.Controls.ValidationRule&gt; ValidationRules" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.ValidationRules" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValidationRules As Collection(Of ValidationRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Windows::Controls::ValidationRule ^&gt; ^ ValidationRules { System::Collections::ObjectModel::Collection&lt;System::Windows::Controls::ValidationRule ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidationRules : System.Collections.ObjectModel.Collection&lt;System.Windows.Controls.ValidationRule&gt;" Usage="System.Windows.Data.BindingGroup.ValidationRules" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Windows.Controls.ValidationRule&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Controls.ValidationRule" /> 内のソース オブジェクトを検証する <see cref="T:System.Windows.Data.BindingGroup" /> オブジェクトのコレクションを取得します。</summary>
        <value><see cref="T:System.Windows.Controls.ValidationRule" /> 内のソース オブジェクトを検証する <see cref="T:System.Windows.Data.BindingGroup" /> オブジェクトのコレクション。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ときに、<xref:System.Windows.Controls.ValidationRule>に追加されます、 <xref:System.Windows.Data.BindingGroup>、<xref:System.Windows.Data.BindingGroup>の最初のパラメーターとして渡された、<xref:System.Windows.Controls.ValidationRule.Validate%2A>メソッド。 使用してオブジェクトの提案された値を取得することができます、<xref:System.Windows.Data.BindingGroup.TryGetValue%2A>または<xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29>メソッド。 バインドのソースであるオブジェクトを取得できます、<xref:System.Windows.Data.BindingGroup.Items%2A>プロパティ。  
  
   
  
## Examples  
 次の例では、カスタム<xref:System.Windows.Controls.ValidationRule>、`ValidateDateAndPrice`を<xref:System.Windows.Data.BindingGroup>します。  
  
 [!code-xaml[BindingGroupSnippets#BindingGroup](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml#bindinggroup)]  
  
 `ValidateDateAndPrice` クラスの例を次に示します。 <xref:System.Windows.Controls.ValidationRule.Validate%2A>メソッドは、<xref:System.Windows.Data.BindingGroup>ユーザーがフォーム、およびチェック項目が 100 ドルを超える場合は、ある使用可能な少なくとも 7 日間に入力した値を取得します。  
  
 [!code-csharp[BindingGroupSnippets#ValidateObject](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Data.cs#validateobject)]
 [!code-vb[BindingGroupSnippets#ValidateObject](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/data.vb#validateobject)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>