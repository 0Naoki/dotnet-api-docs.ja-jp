<Type Name="BindingExpression" FullName="System.Windows.Data.BindingExpression">
  <TypeSignature Language="C#" Value="public sealed class BindingExpression : System.Windows.Data.BindingExpressionBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit BindingExpression extends System.Windows.Data.BindingExpressionBase implements class System.Windows.IWeakEventListener" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.BindingExpression" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class BindingExpression&#xA;Inherits BindingExpressionBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class BindingExpression sealed : System::Windows::Data::BindingExpressionBase" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Data.BindingExpressionBase</BaseTypeName>
  </Base>
  <Interfaces></Interfaces>
  <Docs>
    <summary><span data-ttu-id="20b84-101"><see cref="T:System.Windows.Data.Binding" /> の単一インスタンスに関する情報を含みます。</span><span class="sxs-lookup"><span data-stu-id="20b84-101">Contains information about a single instance of a <see cref="T:System.Windows.Data.Binding" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20b84-102"><xref:System.Windows.Data.Binding>クラスは、バインディングの宣言の高度なクラスです。</span><span class="sxs-lookup"><span data-stu-id="20b84-102">The <xref:System.Windows.Data.Binding> class is the high-level class for the declaration of a binding.</span></span> <span data-ttu-id="20b84-103"><xref:System.Windows.Data.BindingExpression>クラスは、バインディング ソースとバインド ターゲットの間の接続を保持する基になるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="20b84-103">The <xref:System.Windows.Data.BindingExpression> class is the underlying object that maintains the connection between the binding source and the binding target.</span></span> <span data-ttu-id="20b84-104">A<xref:System.Windows.Data.Binding>いくつかの間で共有できるすべての情報を含む<xref:System.Windows.Data.BindingExpression>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="20b84-104">A <xref:System.Windows.Data.Binding> contains all the information that can be shared across several <xref:System.Windows.Data.BindingExpression> objects.</span></span> <span data-ttu-id="20b84-105">A<xref:System.Windows.Data.BindingExpression>インスタンス式を共有することはできず、に関するすべてのインスタンス情報を格納するは、<xref:System.Windows.Data.Binding>です。</span><span class="sxs-lookup"><span data-stu-id="20b84-105">A <xref:System.Windows.Data.BindingExpression> is an instance expression that cannot be shared and that contains all the instance information about the <xref:System.Windows.Data.Binding>.</span></span>  
  
 <span data-ttu-id="20b84-106">たとえば、次のように、`myDataObject`のインスタンス、`MyData`クラス、`myBinding`ソースである<xref:System.Windows.Data.Binding>オブジェクト、および`MyData`クラスは、定義されたクラスをという名前の文字列プロパティを含む`MyDataProperty`です。</span><span class="sxs-lookup"><span data-stu-id="20b84-106">For example, consider the following, where `myDataObject` is an instance of the `MyData` class, `myBinding` is the source <xref:System.Windows.Data.Binding> object, and `MyData` class is a defined class that contains a string property named `MyDataProperty`.</span></span> <span data-ttu-id="20b84-107">この例のテキスト コンテンツ`mytext`のインスタンスは<xref:System.Windows.Controls.TextBlock>を`MyDataProperty`です。</span><span class="sxs-lookup"><span data-stu-id="20b84-107">This example binds the text content of `mytext`, which is an instance of <xref:System.Windows.Controls.TextBlock>, to `MyDataProperty`.</span></span>  
  
 [!code-csharp[CodeOnlyBinding#1](~/samples/snippets/csharp/VS_Snippets_Wpf/CodeOnlyBinding/CSharp/binding.cs#1)]
 [!code-vb[CodeOnlyBinding#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CodeOnlyBinding/VisualBasic/App.vb#1)]  
  
 <span data-ttu-id="20b84-108">ボリュームを使用して同じ`myBinding`を他のバインディングを作成するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="20b84-108">You can use the same `myBinding` object to create other bindings.</span></span> <span data-ttu-id="20b84-109">たとえば、使用する場合があります、`myBinding`するチェック ボックスのテキストの内容をバインドするオブジェクト`MyDataProperty`です。</span><span class="sxs-lookup"><span data-stu-id="20b84-109">For example, you might use the `myBinding` object to bind the text content of a check box to `MyDataProperty`.</span></span> <span data-ttu-id="20b84-110">シナリオでは、ある 2 つのインスタンスになる<xref:System.Windows.Data.BindingExpression>を共有する、`myBinding`オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="20b84-110">In that scenario, there will be two instances of <xref:System.Windows.Data.BindingExpression> that share the `myBinding` object.</span></span>  
  
 <span data-ttu-id="20b84-111">取得することができます、<xref:System.Windows.Data.BindingExpression>オブジェクトを使用して、<xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A>メソッドまたは<xref:System.Windows.FrameworkElement.GetBindingExpression%2A>データ バインドされたオブジェクトのメソッドです。</span><span class="sxs-lookup"><span data-stu-id="20b84-111">You can obtain a <xref:System.Windows.Data.BindingExpression> object by using the <xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A> method or the <xref:System.Windows.FrameworkElement.GetBindingExpression%2A> method on a data-bound object.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="DataItem">
      <MemberSignature Language="C#" Value="public object DataItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingExpression.DataItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataItem As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DataItem { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="20b84-112">この <see cref="T:System.Windows.Data.BindingExpression" /> が使用するバインド ソース オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="20b84-112">Gets the binding source object that this <see cref="T:System.Windows.Data.BindingExpression" /> uses.</span></span></summary>
        <value><span data-ttu-id="20b84-113">この <see cref="T:System.Windows.Data.BindingExpression" /> が使用するバインド ソース オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="20b84-113">The binding source object that this <see cref="T:System.Windows.Data.BindingExpression" /> uses.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="20b84-114">次の例の実装を示しています、<xref:System.Windows.Controls.Primitives.ButtonBase.Click>イベント ハンドラーを使用する、<xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A>を取得するメソッド、<xref:System.Windows.Data.BindingExpression>しを呼び出して、<xref:System.Windows.Data.BindingExpression.DataItem%2A>バインド ソース オブジェクトにアクセスするプロパティです。</span><span class="sxs-lookup"><span data-stu-id="20b84-114">The following example shows the implementation of a <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event handler that uses the <xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A> method to obtain the <xref:System.Windows.Data.BindingExpression> and then calls the <xref:System.Windows.Data.BindingExpression.DataItem%2A> property to access the binding source object.</span></span>  
  
 <span data-ttu-id="20b84-115"><xref:System.Windows.Controls.TextBlock> `SavingsText`バインディング ターゲット オブジェクトは、およびその<xref:System.Windows.Controls.TextBlock.Text%2A>プロパティは、バインディング ターゲット プロパティ。</span><span class="sxs-lookup"><span data-stu-id="20b84-115">The <xref:System.Windows.Controls.TextBlock> `SavingsText` is the binding target object, and its <xref:System.Windows.Controls.TextBlock.Text%2A> property is the binding target property.</span></span>  
  
 [!code-csharp[DirectionalBinding#OnRentRaise](~/samples/snippets/csharp/VS_Snippets_Wpf/DirectionalBinding/CSharp/Page1.xaml.cs#onrentraise)]
 [!code-vb[DirectionalBinding#OnRentRaise](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DirectionalBinding/VisualBasic/DirectionalBinding.vb#onrentraise)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentBinding">
      <MemberSignature Language="C#" Value="public System.Windows.Data.Binding ParentBinding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.Binding ParentBinding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingExpression.ParentBinding" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParentBinding As Binding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::Binding ^ ParentBinding { System::Windows::Data::Binding ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.Binding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="20b84-116">現在の <see cref="T:System.Windows.Data.Binding" /> の <see cref="T:System.Windows.Data.BindingExpression" /> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="20b84-116">Returns the <see cref="T:System.Windows.Data.Binding" /> object of the current <see cref="T:System.Windows.Data.BindingExpression" />.</span></span></summary>
        <value><span data-ttu-id="20b84-117">現在のバインディング式の <see cref="T:System.Windows.Data.Binding" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="20b84-117">The <see cref="T:System.Windows.Data.Binding" /> object of the current binding expression.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolvedSource">
      <MemberSignature Language="C#" Value="public object ResolvedSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ResolvedSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingExpression.ResolvedSource" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ResolvedSource As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ResolvedSource { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="20b84-118">この <see cref="T:System.Windows.Data.BindingExpression" /> のバインディング ソース オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="20b84-118">Gets the binding source object for this <see cref="T:System.Windows.Data.BindingExpression" />.</span></span></summary>
        <value><span data-ttu-id="20b84-119">この <see cref="T:System.Windows.Data.BindingExpression" /> で使用するバインディング ソース オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="20b84-119">The binding source object for this <see cref="T:System.Windows.Data.BindingExpression" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolvedSourcePropertyName">
      <MemberSignature Language="C#" Value="public string ResolvedSourcePropertyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ResolvedSourcePropertyName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingExpression.ResolvedSourcePropertyName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ResolvedSourcePropertyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ResolvedSourcePropertyName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="20b84-120">この <see cref="T:System.Windows.Data.BindingExpression" /> のバインディング ソース プロパティの名前を取得します。</span><span class="sxs-lookup"><span data-stu-id="20b84-120">Gets the name of the binding source property for this <see cref="T:System.Windows.Data.BindingExpression" />.</span></span></summary>
        <value><span data-ttu-id="20b84-121">この <see cref="T:System.Windows.Data.BindingExpression" /> のバインディング ソース プロパティの名前。</span><span class="sxs-lookup"><span data-stu-id="20b84-121">The name of the binding source property for this <see cref="T:System.Windows.Data.BindingExpression" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.IWeakEventListener.ReceiveWeakEvent">
      <MemberSignature Language="C#" Value="bool IWeakEventListener.ReceiveWeakEvent (Type managerType, object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Windows.IWeakEventListener.ReceiveWeakEvent(class System.Type managerType, object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingExpression.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Function ReceiveWeakEvent (managerType As Type, sender As Object, e As EventArgs) As Boolean Implements IWeakEventListener.ReceiveWeakEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Windows.IWeakEventListener.ReceiveWeakEvent(Type ^ managerType, System::Object ^ sender, EventArgs ^ e) = System::Windows::IWeakEventListener::ReceiveWeakEvent;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="managerType" Type="System.Type" />
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="managerType"><span data-ttu-id="20b84-122">このメソッドを呼び出す <see cref="T:System.Windows.WeakEventManager" /> の型。</span><span class="sxs-lookup"><span data-stu-id="20b84-122">The type of the <see cref="T:System.Windows.WeakEventManager" /> calling this method.</span></span> <span data-ttu-id="20b84-123">これは、<see cref="T:System.Collections.Specialized.CollectionChangedEventManager" /> 型のマネージャー オブジェクトだけを認識します。</span><span class="sxs-lookup"><span data-stu-id="20b84-123">This only recognizes manager objects of type <see cref="T:System.Collections.Specialized.CollectionChangedEventManager" />.</span></span></param>
        <param name="sender"><span data-ttu-id="20b84-124">イベントを発生させたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="20b84-124">Object that originated the event.</span></span></param>
        <param name="e"><span data-ttu-id="20b84-125">イベント データ。</span><span class="sxs-lookup"><span data-stu-id="20b84-125">Event data.</span></span></param>
        <summary><span data-ttu-id="20b84-126">このメンバーは、[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] インフラストラクチャをサポートしますが、独自に作成したコードから直接使用するためのものではありません。</span><span class="sxs-lookup"><span data-stu-id="20b84-126">This member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span></span></summary>
        <returns>
          <span data-ttu-id="20b84-127">リスナーがイベントを処理した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="20b84-127"><see langword="true" /> if the listener handled the event; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateSource">
      <MemberSignature Language="C#" Value="public override void UpdateSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void UpdateSource() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingExpression.UpdateSource" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub UpdateSource ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void UpdateSource();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="20b84-128"><see cref="F:System.Windows.Data.BindingMode.TwoWay" /> または <see cref="F:System.Windows.Data.BindingMode.OneWayToSource" /> バインドにあるバインディング ソースのプロパティに現在のバインディング ターゲットの値を送信します。</span><span class="sxs-lookup"><span data-stu-id="20b84-128">Sends the current binding target value to the binding source property in <see cref="F:System.Windows.Data.BindingMode.TwoWay" /> or <see cref="F:System.Windows.Data.BindingMode.OneWayToSource" /> bindings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20b84-129">このメソッドは何ときに、<xref:System.Windows.Data.Binding.Mode%2A>バインドがない<xref:System.Windows.Data.BindingMode.TwoWay>または<xref:System.Windows.Data.BindingMode.OneWayToSource>です。</span><span class="sxs-lookup"><span data-stu-id="20b84-129">This method does nothing when the <xref:System.Windows.Data.Binding.Mode%2A> of the binding is not <xref:System.Windows.Data.BindingMode.TwoWay> or <xref:System.Windows.Data.BindingMode.OneWayToSource>.</span></span>  
  
 <span data-ttu-id="20b84-130">場合、<xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>に、バインディングの値が設定されている<xref:System.Windows.Data.UpdateSourceTrigger.Explicit>、呼び出す必要があります、<xref:System.Windows.Data.BindingExpression.UpdateSource%2A>メソッドまたは変更がソースに反映されません。</span><span class="sxs-lookup"><span data-stu-id="20b84-130">If the <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> value of your binding is set to <xref:System.Windows.Data.UpdateSourceTrigger.Explicit>, you must call the <xref:System.Windows.Data.BindingExpression.UpdateSource%2A> method or the changes will not propagate back to the source.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="20b84-131">バインドはそのターゲットからデタッチされています。</span><span class="sxs-lookup"><span data-stu-id="20b84-131">The binding has been detached from its target.</span></span></exception>
        <altmember cref="M:System.Windows.Data.BindingExpression.UpdateTarget" />
      </Docs>
    </Member>
    <Member MemberName="UpdateTarget">
      <MemberSignature Language="C#" Value="public override void UpdateTarget ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void UpdateTarget() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingExpression.UpdateTarget" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub UpdateTarget ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void UpdateTarget();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="20b84-132">バインディング ソース プロパティからバインディング ターゲット プロパティへのデータ転送を強制的に実行します。</span><span class="sxs-lookup"><span data-stu-id="20b84-132">Forces a data transfer from the binding source property to the binding target property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20b84-133">このメソッドでは、対象のプロパティに source プロパティから、データ転送を強制することができます。</span><span class="sxs-lookup"><span data-stu-id="20b84-133">This method enables you to force a data transfer from the source property to the target property.</span></span> <span data-ttu-id="20b84-134">など、ソース オブジェクトに、適切なプロパティ変更の通知のメカニズムが実装されている場合<xref:System.ComponentModel.INotifyPropertyChanged>ターゲットの更新プログラムが自動的に行われます。</span><span class="sxs-lookup"><span data-stu-id="20b84-134">If your source object implements a proper property-changed notification mechanism such as <xref:System.ComponentModel.INotifyPropertyChanged>, target updates happen automatically.</span></span> <span data-ttu-id="20b84-135">ただし、このメソッドを使用して、ソース オブジェクトが適切なプロパティ変更通知を提供限りませんで明示的にターゲット プロパティを更新するオプションがあります。</span><span class="sxs-lookup"><span data-stu-id="20b84-135">However, you have the option to use this method to update the target property explicitly in cases where your source object does not provide the proper property-changed notifications.</span></span> <span data-ttu-id="20b84-136">アプリケーションが、ターゲットのプロパティを定期的に更新する必要がある場合は、このメソッドを使用することもできます。</span><span class="sxs-lookup"><span data-stu-id="20b84-136">You can also use this method if your application needs to update the target properties periodically.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="20b84-137">バインドはそのターゲットからデタッチされています。</span><span class="sxs-lookup"><span data-stu-id="20b84-137">The binding has been detached from its target.</span></span></exception>
        <altmember cref="M:System.Windows.Data.BindingExpression.UpdateSource" />
      </Docs>
    </Member>
  </Members>
</Type>