<Type Name="UpdateSourceExceptionFilterCallback" FullName="System.Windows.Data.UpdateSourceExceptionFilterCallback">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b715c214c4452338e4dca1c03eb939da6f68b56c" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51910016" /></Metadata><TypeSignature Language="C#" Value="public delegate object UpdateSourceExceptionFilterCallback(object bindExpression, Exception exception);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed UpdateSourceExceptionFilterCallback extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.UpdateSourceExceptionFilterCallback" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function UpdateSourceExceptionFilterCallback(bindExpression As Object, exception As Exception) As Object " />
  <TypeSignature Language="C++ CLI" Value="public delegate System::Object ^ UpdateSourceExceptionFilterCallback(System::Object ^ bindExpression, Exception ^ exception);" />
  <TypeSignature Language="F#" Value="type UpdateSourceExceptionFilterCallback = delegate of obj * Exception -&gt; obj" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="bindExpression" Type="System.Object" />
    <Parameter Name="exception" Type="System.Exception" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Object</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="bindExpression">例外を発生させたオブジェクト。</param>
    <param name="exception">発生した例外。</param>
    <summary>バインディング ソースの値の更新中にスローされる例外をハンドルするメソッドを表します。 これは <see cref="T:System.Windows.Controls.ExceptionValidationRule" /> と一緒に使用する必要があります。</summary>
    <returns>通常、次のいずれかのオブジェクト: 
 <list type="table"><listheader><term> [値] 
 </term><description> 説明 
 </description></listheader><item><term><see langword="null" /></term><description> すべての例外を無視する場合。 既定の動作では (<see cref="T:System.Windows.Data.UpdateSourceExceptionFilterCallback" /> がない場合)、例外を使用して <see cref="T:System.Windows.Controls.ValidationError" /> を作成し、バインドされている要素の <see cref="P:System.Windows.Controls.Validation.Errors" /> コレクションにこれを追加します。  
  
 </description></item><item><term> 任意のオブジェクト 
 </term><description> <see cref="T:System.Windows.Controls.ValidationError" /> が設定された <see cref="P:System.Windows.Controls.ValidationError.ErrorContent" /> オブジェクトを作成する場合。  
  
<see cref="T:System.Windows.Controls.ValidationError" /> オブジェクトは、バインドされている要素の <see cref="P:System.Windows.Controls.Validation.Errors" /> コレクションに追加されます。  
  
 </description></item><item><term> <see cref="T:System.Windows.Controls.ValidationError" /> オブジェクト 
 </term><description> <see cref="T:System.Windows.Data.BindingExpression" /> オブジェクトまたは <see cref="T:System.Windows.Data.MultiBindingExpression" /> オブジェクトを <see cref="P:System.Windows.Controls.ValidationError.BindingInError" /> として設定する場合。 <see cref="T:System.Windows.Controls.ValidationError" /> オブジェクトは、バインドされている要素の <see cref="P:System.Windows.Controls.Validation.Errors" /> コレクションに追加されます。  
  
 </description></item></list></returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 関連付けられている場合は、<xref:System.Windows.Controls.ExceptionValidationRule>で、<xref:System.Windows.Data.Binding>オブジェクトを使用するオプションがある、<xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A>例外を処理するためのカスタム ロジックを提供するには、このコールバックを設定するプロパティ。 このコールバックは、バインディング エンジンは、バインディング ソースの値を更新するときに例外が検出されるたびに呼び出されます。  
  
 場合、<xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A>がで指定されていない、 <xref:System.Windows.Data.Binding>、バインディング エンジンが作成されます、<xref:System.Windows.Controls.ValidationError>例外に追加します、<xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType>バインドされた要素のコレクション。  
  
   
  
## Examples  
 <xref:System.Windows.Controls.TextBox.Text%2A>プロパティは、次の<xref:System.Windows.Controls.TextBox>ソース プロパティにデータ バインド`Age3`型のある`int`します。 <xref:System.Windows.Controls.ExceptionValidationRule> (ときに、ユーザーが整数に変換できない値を入力) などのソース プロパティの更新中にスローされる例外を確認します。  
  
 [!code-xaml[BindValidation#tbExceptionFilter](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/Window1.xaml#tbexceptionfilter)]  
  
 これらの例外を処理するカスタム ロジックを提供することがあります。 次の例は、使用する方法を示します、<xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A>プロパティを設定する、 <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>:  
  
 [!code-csharp[BindValidation#filtercallback](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/Window1.xaml.cs#filtercallback)]  
  
 実装例を次に、 <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>:  
  
 [!code-csharp[BindValidation#Handler](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/Window1.xaml.cs#handler)]  
  
 サンプル全体については、次を参照してください。[バインディングの検証のサンプル](https://go.microsoft.com/fwlink/?LinkID=159972)します。  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Windows.Data.MultiBinding.UpdateSourceExceptionFilter" />
  </Docs>
</Type>