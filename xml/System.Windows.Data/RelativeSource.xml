<Type Name="RelativeSource" FullName="System.Windows.Data.RelativeSource">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1fc5834bf2e90cbd3cad184c7aa72b03b8725e27" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69210308" /></Metadata><TypeSignature Language="C#" Value="public class RelativeSource : System.Windows.Markup.MarkupExtension, System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RelativeSource extends System.Windows.Markup.MarkupExtension implements class System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.RelativeSource" />
  <TypeSignature Language="VB.NET" Value="Public Class RelativeSource&#xA;Inherits MarkupExtension&#xA;Implements ISupportInitialize" />
  <TypeSignature Language="C++ CLI" Value="public ref class RelativeSource : System::Windows::Markup::MarkupExtension, System::ComponentModel::ISupportInitialize" />
  <TypeSignature Language="F#" Value="type RelativeSource = class&#xA;    inherit MarkupExtension&#xA;    interface ISupportInitialize" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Markup.MarkupExtension</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.MarkupExtensionReturnType(typeof(System.Windows.Data.RelativeSource))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>バインディング ソースの位置を、バインディング ターゲットの位置を基準とする相対的な位置として示すマークアップ拡張機能を実装します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 バインディングソースを指定する方法の1つは、 <xref:System.Windows.Data.Binding.RelativeSource%2A?displayProperty=nameWithType>プロパティを使用することです。 これは、そのプロパティのプロパティの型です。 <xref:System.Windows.Data.RelativeSource>は、マークアップ拡張機能の実装とデータオブジェクトの同時実行です。 拡張機能がそれ自体を返す<xref:System.Windows.Data.RelativeSource.ProvideValue%2A>場合 (「」を参照)、関連情報がデータに含まれます。 マークアップ拡張機能の主な目的は、属性形式で可変引数コンストラクター構文を使用できるようにする<xref:System.Windows.Data.RelativeSourceMode.FindAncestor>ことです。これにより、他のモードでは不要な、先祖型およびレベルの2つの追加引数を使用して、モードをインラインで定義できるようになります。  
  
 詳細[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]については、「 [RelativeSource MarkupExtension](~/docs/framework/wpf/advanced/relativesource-markupextension.md)」を参照してください。  
  
## Examples  
 次の例は、検証エラーメッセージを報告<xref:System.Windows.Controls.ToolTip>するを作成するスタイルトリガーを示しています。 Setter の値は、 <xref:System.Windows.Controls.TextBox> <xref:System.Windows.Controls.TextBox> プロパティを使用して、現在ののエラーコンテンツ(スタイルを使用)に<xref:System.Windows.Data.Binding.RelativeSource%2A>バインドします。 この例の詳細については[、「」を参照してください。バインディングの検証](~/docs/framework/wpf/data/how-to-implement-binding-validation.md)を実装します。  
  
 [!code-xaml[BindValidation#5](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/Window1.xaml#5)]  
  
 次の例は、 <xref:System.Windows.Style>という`NumericUpDown`カスタムコントロールの定義を示しています。 `TemplatedParent` `Value` のプロパティは、`NumericUpDown`この場合にこのが適用されるコントロールである、オブジェクトのにバインドされます。<xref:System.Windows.Style> <xref:System.Windows.Controls.TextBlock> <xref:System.Windows.Controls.TextBlock.Text%2A>  
  
 [!code-xaml[CustomControlNumericUpDown#RelativeSource](~/samples/snippets/csharp/VS_Snippets_Wpf/CustomControlNumericUpDown/CSharp/CustomControlLibrary/themes/generic.xaml#relativesource)]  
  
 完全なサンプルについては、「 [NumericUpDown Custom Control With Theme AND UI Automation Support sample](https://go.microsoft.com/fwlink/?LinkID=160025)」を参照してください。  
  
 次の例では<xref:System.Windows.Controls.ItemsControl> 、バインドのターゲット要素を開始位置として、上のパスで見つかった2番目のが返されます。  
  
 [!code-csharp[BindConversion#RelativeSource](~/samples/snippets/csharp/VS_Snippets_Wpf/BindConversion/CSharp/Window1.xaml.cs#relativesource)]
 [!code-vb[BindConversion#RelativeSource](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindConversion/visualbasic/window1.xaml.vb#relativesource)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Data.RelativeSource" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Windows.Data.RelativeSource" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RelativeSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.RelativeSource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RelativeSource();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Data.RelativeSource" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RelativeSource (System.Windows.Data.RelativeSourceMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Data.RelativeSourceMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.RelativeSource.#ctor(System.Windows.Data.RelativeSourceMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mode As RelativeSourceMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RelativeSource(System::Windows::Data::RelativeSourceMode mode);" />
      <MemberSignature Language="F#" Value="new System.Windows.Data.RelativeSource : System.Windows.Data.RelativeSourceMode -&gt; System.Windows.Data.RelativeSource" Usage="new System.Windows.Data.RelativeSource mode" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mode" Type="System.Windows.Data.RelativeSourceMode" />
      </Parameters>
      <Docs>
        <param name="mode"><see cref="T:System.Windows.Data.RelativeSourceMode" /> 値のいずれか 1 つ。</param>
        <summary>初期モードを指定して、<see cref="T:System.Windows.Data.RelativeSource" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RelativeSource (System.Windows.Data.RelativeSourceMode mode, Type ancestorType, int ancestorLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Data.RelativeSourceMode mode, class System.Type ancestorType, int32 ancestorLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.RelativeSource.#ctor(System.Windows.Data.RelativeSourceMode,System.Type,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mode As RelativeSourceMode, ancestorType As Type, ancestorLevel As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RelativeSource(System::Windows::Data::RelativeSourceMode mode, Type ^ ancestorType, int ancestorLevel);" />
      <MemberSignature Language="F#" Value="new System.Windows.Data.RelativeSource : System.Windows.Data.RelativeSourceMode * Type * int -&gt; System.Windows.Data.RelativeSource" Usage="new System.Windows.Data.RelativeSource (mode, ancestorType, ancestorLevel)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mode" Type="System.Windows.Data.RelativeSourceMode" />
        <Parameter Name="ancestorType" Type="System.Type" />
        <Parameter Name="ancestorLevel" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="mode"><see cref="T:System.Windows.Data.RelativeSourceMode" /> 値のいずれか 1 つ。 この署名を関連させるには、これが <see cref="F:System.Windows.Data.RelativeSourceMode.FindAncestor" /> である必要があります。</param>
        <param name="ancestorType">検索する先祖の <see cref="T:System.Type" />。</param>
        <param name="ancestorLevel">指定した型の先祖すべての中で、目的の先祖の位置を表す序数。</param>
        <summary>初期モードと必要な相対ソースを検出するために追加のツリー探索用の修飾子を使用して、<see cref="T:System.Windows.Data.RelativeSource" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `ancestorType`と`ancestorLevel`は、以外<xref:System.Windows.Data.RelativeSourceMode.FindAncestor>ののパラメーター `mode`として指定されている場合、関連性がありません。 他の<xref:System.Windows.Data.RelativeSourceMode>値には、この署名を使用しないでください。  
  
   
  
## Examples  
 次の例では<xref:System.Windows.Controls.ItemsControl> 、バインドのターゲット要素を開始位置として、上のパスで見つかった2番目のが返されます。  
  
 [!code-csharp[BindConversion#RelativeSource](~/samples/snippets/csharp/VS_Snippets_Wpf/BindConversion/CSharp/Window1.xaml.cs#relativesource)]
 [!code-vb[BindConversion#RelativeSource](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindConversion/visualbasic/window1.xaml.vb#relativesource)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AncestorLevel">
      <MemberSignature Language="C#" Value="public int AncestorLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AncestorLevel" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.RelativeSource.AncestorLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property AncestorLevel As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AncestorLevel { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.AncestorLevel : int with get, set" Usage="System.Windows.Data.RelativeSource.AncestorLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="F:System.Windows.Data.RelativeSourceMode.FindAncestor" /> モードで、検索する先祖のレベルを取得または設定します。 バインドのターゲット要素に一番近いレベルを示すには、1 を使用します。</summary>
        <value>先祖レベル。 バインドのターゲット要素に一番近いレベルを示すには、1 を使用します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Data.RelativeSource.AncestorLevel%2A> <xref:System.Windows.Data.RelativeSource.AncestorType%2A> <xref:System.Windows.Data.RelativeSourceMode.FindAncestor> <xref:System.Windows.Data.RelativeSource.Mode%2A>プロパティが明示的に設定されていない場合、またはプロパティを設定すると、プロパティ値がに暗黙的にロックされます。 <xref:System.Windows.Data.RelativeSource.Mode%2A>  
  
<a name="xamlTextUsage_AncestorLevel"></a>   
## <a name="xaml-text-usage"></a>XAML テキストの使用  
 詳細[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]については、「 [RelativeSource MarkupExtension](~/docs/framework/wpf/advanced/relativesource-markupextension.md)」を参照してください。  
  
   
  
## Examples  
 次の例では<xref:System.Windows.Controls.ItemsControl> 、バインドのターゲット要素を開始位置として、上のパスで見つかった2番目のが返されます。  
  
 [!code-csharp[BindConversion#RelativeSource](~/samples/snippets/csharp/VS_Snippets_Wpf/BindConversion/CSharp/Window1.xaml.cs#relativesource)]
 [!code-vb[BindConversion#RelativeSource](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindConversion/visualbasic/window1.xaml.vb#relativesource)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Data.RelativeSourceMode" />
        <altmember cref="T:System.Windows.Data.RelativeSource" />
      </Docs>
    </Member>
    <Member MemberName="AncestorType">
      <MemberSignature Language="C#" Value="public Type AncestorType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AncestorType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.RelativeSource.AncestorType" />
      <MemberSignature Language="VB.NET" Value="Public Property AncestorType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ AncestorType { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AncestorType : Type with get, set" Usage="System.Windows.Data.RelativeSource.AncestorType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>検索する先祖の型を取得または設定します。</summary>
        <value>先祖の型。 既定値は <see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Data.RelativeSource.AncestorLevel%2A> <xref:System.Windows.Data.RelativeSource.AncestorType%2A> <xref:System.Windows.Data.RelativeSourceMode.FindAncestor> <xref:System.Windows.Data.RelativeSource.Mode%2A>プロパティが明示的に設定されていない場合、またはプロパティを設定すると、プロパティ値がに暗黙的にロックされます。 <xref:System.Windows.Data.RelativeSource.Mode%2A>  
  
<a name="xamlTextUsage_AncestorType"></a>   
## <a name="xaml-text-usage"></a>XAML テキストの使用  
 詳細[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]については、「 [RelativeSource MarkupExtension](~/docs/framework/wpf/advanced/relativesource-markupextension.md)」を参照してください。  
  
   
  
## Examples  
 次の例では<xref:System.Windows.Controls.ItemsControl> 、バインドのターゲット要素を開始位置として、上のパスで見つかった2番目のが返されます。  
  
 [!code-csharp[BindConversion#RelativeSource](~/samples/snippets/csharp/VS_Snippets_Wpf/BindConversion/CSharp/Window1.xaml.cs#relativesource)]
 [!code-vb[BindConversion#RelativeSource](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindConversion/visualbasic/window1.xaml.vb#relativesource)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Windows.Data.RelativeSource" /> は、<see cref="F:System.Windows.Data.RelativeSourceMode.FindAncestor" /> モードにはありません。</exception>
        <altmember cref="T:System.Windows.Data.RelativeSourceMode" />
        <altmember cref="P:System.Windows.Data.RelativeSource.AncestorLevel" />
        <altmember cref="F:System.Windows.Data.RelativeSourceMode.FindAncestor" />
        <altmember cref="T:System.Windows.Data.RelativeSource" />
      </Docs>
    </Member>
    <Member MemberName="Mode">
      <MemberSignature Language="C#" Value="public System.Windows.Data.RelativeSourceMode Mode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Data.RelativeSourceMode Mode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.RelativeSource.Mode" />
      <MemberSignature Language="VB.NET" Value="Public Property Mode As RelativeSourceMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::RelativeSourceMode Mode { System::Windows::Data::RelativeSourceMode get(); void set(System::Windows::Data::RelativeSourceMode value); };" />
      <MemberSignature Language="F#" Value="member this.Mode : System.Windows.Data.RelativeSourceMode with get, set" Usage="System.Windows.Data.RelativeSource.Mode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.Markup.ConstructorArgument("mode")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.RelativeSourceMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>バインディング ターゲットの位置を基準とする、バインディング ソースの相対的な位置を示す <see cref="T:System.Windows.Data.RelativeSourceMode" /> 値を取得または設定します。</summary>
        <value><see cref="T:System.Windows.Data.RelativeSourceMode" /> 値のいずれか 1 つ。 既定値は <see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティは、初期化後に読み取り専用になります。 このプロパティが明示的に設定されて<xref:System.Windows.Data.RelativeSource.AncestorType%2A>いない<xref:System.Windows.Data.RelativeSource.AncestorType%2A>場合、 <xref:System.Windows.Data.RelativeSource.AncestorLevel%2A>または、およびプロパティを設定する<xref:System.Windows.Data.RelativeSourceMode.FindAncestor>と、このプロパティ値はに暗黙的にロックされます。  
  
<a name="xamlTextUsage_Mode"></a>   
## <a name="xaml-text-usage"></a>XAML テキストの使用  
 詳細[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]については、「 [RelativeSource MarkupExtension](~/docs/framework/wpf/advanced/relativesource-markupextension.md)」を参照してください。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">このプロパティは、初期化後に変更できません。 このインスタンスで <see cref="P:System.Windows.Data.RelativeSource.Mode" /> を変更するのではなく、新しい <see cref="T:System.Windows.Data.RelativeSource" /> を作成するか、別の静的なインスタンスを使用します。</exception>
        <altmember cref="T:System.Windows.Data.RelativeSourceMode" />
        <altmember cref="T:System.Windows.Data.RelativeSource" />
      </Docs>
    </Member>
    <Member MemberName="PreviousData">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.RelativeSource PreviousData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Data.RelativeSource PreviousData" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.RelativeSource.PreviousData" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property PreviousData As RelativeSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Data::RelativeSource ^ PreviousData { System::Windows::Data::RelativeSource ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PreviousData : System.Windows.Data.RelativeSource" Usage="System.Windows.Data.RelativeSource.PreviousData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.RelativeSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Data.RelativeSource" /> モード用に構築された <see cref="F:System.Windows.Data.RelativeSourceMode.PreviousData" /> を返すために使用する静的な値を取得します。</summary>
        <value>静的な <see cref="T:System.Windows.Data.RelativeSource" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 4 <xref:System.Windows.Data.RelativeSourceMode> <xref:System.Windows.Data.RelativeSourceMode.TemplatedParent>つの<xref:System.Windows.Data.RelativeSourceMode.PreviousData>値<xref:System.Windows.Data.RelativeSourceMode.Self>(、、または) のうち 3 <xref:System.Windows.Data.RelativeSource>つは、完全に静的で、一意のプライベート値を含まないを生成できます。 静的プロパティのすべての使用は同じオブジェクトを共有できるため、使用ごとに個別のオブジェクトを割り当てる必要がなくなります。 したがって、静的なプロパティを使用すると、メモリの使用量が減少します。  
  
<a name="xamlTextUsage_PreviousData"></a>   
## <a name="xaml-text-usage"></a>XAML テキストの使用  
 詳細[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]については、「 [RelativeSource MarkupExtension](~/docs/framework/wpf/advanced/relativesource-markupextension.md)」を参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Data.RelativeSourceMode" />
        <altmember cref="T:System.Windows.Data.RelativeSource" />
      </Docs>
    </Member>
    <Member MemberName="ProvideValue">
      <MemberSignature Language="C#" Value="public override object ProvideValue (IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ProvideValue(class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.RelativeSource.ProvideValue(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ProvideValue (serviceProvider As IServiceProvider) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ProvideValue(IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="override this.ProvideValue : IServiceProvider -&gt; obj" Usage="relativeSource.ProvideValue serviceProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">マークアップ拡張機能のサービスを提供できるオブジェクト。 この実装では、このパラメーターを <see langword="null" /> にすることができます。</param>
        <summary>このマークアップ拡張機能で使用するターゲット オブジェクトのプロパティ上の値として設定するオブジェクトを返します。 <see cref="T:System.Windows.Data.RelativeSource" /> の場合、これは、指定したモードに適したソースを使用する別の <see cref="T:System.Windows.Data.RelativeSource" /> です。</summary>
        <returns>別の <see cref="T:System.Windows.Data.RelativeSource" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Data.RelativeSource>は、マークアップ拡張機能の実装とデータオブジェクトの同時実行です。 拡張機能がそれ自体を返すと、関連する情報がデータに含まれます。 マークアップ拡張機能の主な目的は、属性形式での可変引数コンストラクター構文を許可して<xref:System.Windows.Data.RelativeSourceMode.FindAncestor> 、他のモードが必要としない先祖型およびレベルの2つの追加引数を使用して、モードをインラインで定義できるようにすることです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Self">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.RelativeSource Self { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Data.RelativeSource Self" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.RelativeSource.Self" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Self As RelativeSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Data::RelativeSource ^ Self { System::Windows::Data::RelativeSource ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Self : System.Windows.Data.RelativeSource" Usage="System.Windows.Data.RelativeSource.Self" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.RelativeSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Data.RelativeSource" /> モード用に構築された <see cref="F:System.Windows.Data.RelativeSourceMode.Self" /> を返すために使用する静的な値を取得します。</summary>
        <value>静的な <see cref="T:System.Windows.Data.RelativeSource" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 4 <xref:System.Windows.Data.RelativeSourceMode> <xref:System.Windows.Data.RelativeSourceMode.TemplatedParent>つの<xref:System.Windows.Data.RelativeSourceMode.PreviousData>値<xref:System.Windows.Data.RelativeSourceMode.Self>(、、または) のうち 3 <xref:System.Windows.Data.RelativeSource>つは、完全に静的で、一意のプライベート値を含まないを生成できます。 静的プロパティのすべての使用は同じオブジェクトを共有できるため、使用ごとに個別のオブジェクトを割り当てる必要がなくなります。 したがって、静的なプロパティを使用すると、メモリの使用量が減少します。  
  
<a name="xamlTextUsage_Self"></a>   
## <a name="xaml-text-usage"></a>XAML テキストの使用  
 詳細[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]については、「 [RelativeSource MarkupExtension](~/docs/framework/wpf/advanced/relativesource-markupextension.md)」を参照してください。  
  
   
  
## Examples  
 次の例は、検証エラーメッセージを報告<xref:System.Windows.Controls.ToolTip>するを作成するスタイルトリガーを示しています。 Setter の値は、 <xref:System.Windows.Controls.TextBox> <xref:System.Windows.Data.Binding.RelativeSource%2A>プロパティを使用して、現在の<xref:System.Windows.Controls.TextBox> (スタイルを使用している) のエラーコンテンツにバインドされます。 「[方法:この例の](~/docs/framework/wpf/data/how-to-implement-binding-validation.md)詳細については、バインディングの検証を実装してください。  
  
 [!code-xaml[BindValidation#5](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/Window1.xaml#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Data.RelativeSourceMode" />
        <altmember cref="T:System.Windows.Data.RelativeSource" />
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeAncestorLevel">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeAncestorLevel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeAncestorLevel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.RelativeSource.ShouldSerializeAncestorLevel" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeAncestorLevel () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeAncestorLevel();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeAncestorLevel : unit -&gt; bool" Usage="relativeSource.ShouldSerializeAncestorLevel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="P:System.Windows.Data.RelativeSource.AncestorLevel" /> プロパティを永続化する必要があるかどうかを示します。</summary>
        <returns>プロパティの値が既定値から変更されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この`ShouldSerialize`メソッドは、プロパティに<xref:System.Windows.Data.RelativeSource.AncestorLevel%2A>単純な既定値がないために用意されています。 このメソッドは、プロパティが既定値から変更されたかどうかを示します。 のデザイナー <xref:System.Windows.Data.RelativeSource>を開発している場合、またはを組み込んだ独自の<xref:System.Windows.Data.RelativeSource>コントロールを開発している場合は、通常、このメソッドを呼び出します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeAncestorType">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeAncestorType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeAncestorType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.RelativeSource.ShouldSerializeAncestorType" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeAncestorType () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeAncestorType();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeAncestorType : unit -&gt; bool" Usage="relativeSource.ShouldSerializeAncestorType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="P:System.Windows.Data.RelativeSource.AncestorType" /> プロパティを永続化する必要があるかどうかを示します。</summary>
        <returns>プロパティの値が既定値から変更されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この`ShouldSerialize`メソッドは、プロパティに<xref:System.Windows.Data.RelativeSource.AncestorType%2A>単純な既定値がないために用意されています。 このメソッドは、プロパティが既定値から変更されたかどうかを示します。 のデザイナー <xref:System.Windows.Data.RelativeSource>を開発している場合、またはを組み込んだ独自の<xref:System.Windows.Data.RelativeSource>コントロールを開発している場合は、通常、このメソッドを呼び出します。  
  
 詳細については、「 [ShouldSerialize メソッドと Reset メソッドによる既定値の定義](~/docs/framework/winforms/controls/defining-default-values-with-the-shouldserialize-and-reset-methods.md)」を参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitialize.BeginInit">
      <MemberSignature Language="C#" Value="void ISupportInitialize.BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.ISupportInitialize.BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.RelativeSource.System#ComponentModel#ISupportInitialize#BeginInit" />
      <MemberSignature Language="VB.NET" Value="Sub BeginInit () Implements ISupportInitialize.BeginInit" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.ISupportInitialize.BeginInit() = System::ComponentModel::ISupportInitialize::BeginInit;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.BeginInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>このメンバーは、[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] インフラストラクチャをサポートしますが、独自に作成したコードから直接使用するためのものではありません。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitialize.EndInit">
      <MemberSignature Language="C#" Value="void ISupportInitialize.EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.ISupportInitialize.EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.RelativeSource.System#ComponentModel#ISupportInitialize#EndInit" />
      <MemberSignature Language="VB.NET" Value="Sub EndInit () Implements ISupportInitialize.EndInit" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.ISupportInitialize.EndInit() = System::ComponentModel::ISupportInitialize::EndInit;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.EndInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>このメンバーは、[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] インフラストラクチャをサポートしますが、独自に作成したコードから直接使用するためのものではありません。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TemplatedParent">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.RelativeSource TemplatedParent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Data.RelativeSource TemplatedParent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.RelativeSource.TemplatedParent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TemplatedParent As RelativeSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Data::RelativeSource ^ TemplatedParent { System::Windows::Data::RelativeSource ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TemplatedParent : System.Windows.Data.RelativeSource" Usage="System.Windows.Data.RelativeSource.TemplatedParent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.RelativeSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Data.RelativeSource" /> モード用に構築された <see cref="F:System.Windows.Data.RelativeSourceMode.TemplatedParent" /> を返すために使用する静的な値を取得します。</summary>
        <value>静的な <see cref="T:System.Windows.Data.RelativeSource" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 4 <xref:System.Windows.Data.RelativeSourceMode> <xref:System.Windows.Data.RelativeSourceMode.TemplatedParent>つの<xref:System.Windows.Data.RelativeSourceMode.PreviousData>値<xref:System.Windows.Data.RelativeSourceMode.Self>(、、または) のうち 3 <xref:System.Windows.Data.RelativeSource>つは、完全に静的で、一意のプライベート値を含まないを生成できます。 静的プロパティのすべての使用は同じオブジェクトを共有できるため、使用ごとに個別のオブジェクトを割り当てる必要がなくなります。 したがって、静的なプロパティを使用すると、メモリの使用量が減少します。  
  
<a name="xamlTextUsage_TemplatedParent"></a>   
## <a name="xaml-text-usage"></a>XAML テキストの使用  
 詳細[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]については、「 [RelativeSource MarkupExtension](~/docs/framework/wpf/advanced/relativesource-markupextension.md)」を参照してください。  
  
   
  
## Examples  
 次の例は、 <xref:System.Windows.Style>という`NumericUpDown`カスタムコントロールの定義を示しています。 `TemplatedParent` `Value` のプロパティは、`NumericUpDown`この場合にこのが適用されるコントロールである、オブジェクトのにバインドされます。<xref:System.Windows.Style> <xref:System.Windows.Controls.TextBlock> <xref:System.Windows.Controls.TextBlock.Text%2A>  
  
 [!code-xaml[CustomControlNumericUpDown#RelativeSource](~/samples/snippets/csharp/VS_Snippets_Wpf/CustomControlNumericUpDown/CSharp/CustomControlLibrary/themes/generic.xaml#relativesource)]  
  
 完全なサンプルについては、「 [NumericUpDown Custom Control With Theme AND UI Automation Support sample](https://go.microsoft.com/fwlink/?LinkID=160025)」を参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Data.RelativeSourceMode" />
        <altmember cref="T:System.Windows.Data.RelativeSource" />
      </Docs>
    </Member>
  </Members>
</Type>
