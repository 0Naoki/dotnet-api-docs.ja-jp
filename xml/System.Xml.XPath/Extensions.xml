<Type Name="Extensions" FullName="System.Xml.XPath.Extensions">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="76b5c29266c0ff6b3da3581b1516c39a36e5729a" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39916553" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class Extensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Extensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XPath.Extensions" />
  <TypeSignature Language="VB.NET" Value="Public Module Extensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class Extensions abstract sealed" />
  <TypeSignature Language="F#" Value="type Extensions = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XPath.XDocument</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.Linq</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="10c4f-101">このクラスには、XPath 式を評価できるようにする LINQ to XML 拡張メソッドが含まれています。</span>
      <span class="sxs-lookup">
        <span data-stu-id="10c4f-101">This class contains the LINQ to XML extension methods that enable you to evaluate XPath expressions.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10c4f-102">これは、これらのメソッドを使用するためのいくつかのパフォーマンスが低下します。</span><span class="sxs-lookup"><span data-stu-id="10c4f-102">There is some performance penalty for using these methods.</span></span> <span data-ttu-id="10c4f-103">使用して[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]クエリでパフォーマンスが向上します。</span><span class="sxs-lookup"><span data-stu-id="10c4f-103">Using [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] queries yields better performance.</span></span>  
  
 <span data-ttu-id="10c4f-104">XML XPath 言語 1.0 勧告で返されるコレクションの順序が指定されていませんが、この拡張メソッドは、ドキュメントの順序でノードを返します。</span><span class="sxs-lookup"><span data-stu-id="10c4f-104">Although the ordering of returned collections is not specified in the XML XPath Language 1.0 Recommendation, this extension method returns nodes in document order.</span></span>  
  
 <span data-ttu-id="10c4f-105">逆方向の軸を使用する場合でも、ノードがドキュメントの順序で返されることに注意してください。`preceding-sibling`または`ancestor-or-self`します。</span><span class="sxs-lookup"><span data-stu-id="10c4f-105">Note that nodes are returned in document order even when you use a reverse axis, such as `preceding-sibling` or `ancestor-or-self`.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="CreateNavigator">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath.XDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="10c4f-106">
            <see cref="T:System.Xml.XPath.XPathNavigator" /> の <see cref="T:System.Xml.Linq.XNode" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="10c4f-106">Creates an <see cref="T:System.Xml.XPath.XPathNavigator" /> for an <see cref="T:System.Xml.Linq.XNode" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10c4f-107">使用して XML ツリーを編集することはできません、<xref:System.Xml.XPath.XPathNavigator>このメソッドによって返されます。</span><span class="sxs-lookup"><span data-stu-id="10c4f-107">You cannot edit the XML tree by using the <xref:System.Xml.XPath.XPathNavigator> that is returned by this method.</span></span> <span data-ttu-id="10c4f-108"><xref:System.Xml.XPath.XPathNavigator.CanEdit%2A> プロパティは、`false` を返します。</span><span class="sxs-lookup"><span data-stu-id="10c4f-108">The <xref:System.Xml.XPath.XPathNavigator.CanEdit%2A> property returns `false`.</span></span>  
  
 <span data-ttu-id="10c4f-109">作成することはできません、<xref:System.Xml.XPath.XPathNavigator>の<xref:System.Xml.Linq.XDocumentType>ノード。</span><span class="sxs-lookup"><span data-stu-id="10c4f-109">You cannot create an <xref:System.Xml.XPath.XPathNavigator> for a <xref:System.Xml.Linq.XDocumentType> node.</span></span> <span data-ttu-id="10c4f-110">ドキュメントの種類は、XPath データ モデルでは参加しません。</span><span class="sxs-lookup"><span data-stu-id="10c4f-110">Document types do not participate in the XPath data model.</span></span>  
  
 <span data-ttu-id="10c4f-111">Namespace 宣言は、左から右に報告されます。</span><span class="sxs-lookup"><span data-stu-id="10c4f-111">Namespace declarations are reported from left to right.</span></span> <span data-ttu-id="10c4f-112">これに対して、<xref:System.Xml.XmlDocument>名前空間は、右から左に報告されます。</span><span class="sxs-lookup"><span data-stu-id="10c4f-112">In contrast, for <xref:System.Xml.XmlDocument> namespaces are reported from right to left.</span></span> <span data-ttu-id="10c4f-113">これは、名前空間の宣言は、XPath データ モデルでは順序付けされていないために準拠する動作です。</span><span class="sxs-lookup"><span data-stu-id="10c4f-113">This is conformant behavior because namespace declarations are not ordered in the XPath data model.</span></span>  
  
 <span data-ttu-id="10c4f-114">メソッド<xref:System.Xml.XPath.XPathNavigator.MoveToId%2A>このメソッドによって返されるナビゲーターはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="10c4f-114">The method <xref:System.Xml.XPath.XPathNavigator.MoveToId%2A> is not supported for navigators that are returned by this method.</span></span>  
  
 <span data-ttu-id="10c4f-115">このメソッドを使用すると、XSLT 変換を実行します。</span><span class="sxs-lookup"><span data-stu-id="10c4f-115">You can use this method to perform an XSLT transformation.</span></span> <span data-ttu-id="10c4f-116">XML ツリーを作成、作成することができます、 <xref:System.Xml.XPath.XPathNavigator> 、XML ツリーから、新しいドキュメントを作成し、作成、<xref:System.Xml.XmlWriter>に新しいドキュメントに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="10c4f-116">You can create an XML tree, create an <xref:System.Xml.XPath.XPathNavigator> from the XML tree, create a new document, and create a <xref:System.Xml.XmlWriter> that will write into the new document.</span></span> <span data-ttu-id="10c4f-117">次に、XSLT 変換を呼び出し、変換処理に <xref:System.Xml.XPath.XPathNavigator> および <xref:System.Xml.XmlWriter> を渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="10c4f-117">Then, you can invoke the XSLT transformation, passing the <xref:System.Xml.XPath.XPathNavigator> and <xref:System.Xml.XmlWriter> to the transformation.</span></span> <span data-ttu-id="10c4f-118">変換が正常に完了すると、新しい XML ツリーに変換結果が挿入されます。</span><span class="sxs-lookup"><span data-stu-id="10c4f-118">After the transformation successfully completes, the new XML tree is populated with the results of the transformation.</span></span>  
  
 <span data-ttu-id="10c4f-119">XSLT 変換を実行する、いずれかを使用できる、<xref:System.Xml.XmlReader>または<xref:System.Xml.XPath.XPathNavigator>します。</span><span class="sxs-lookup"><span data-stu-id="10c4f-119">To perform an XSLT transformation, you can use either an <xref:System.Xml.XmlReader> or an <xref:System.Xml.XPath.XPathNavigator>.</span></span> <span data-ttu-id="10c4f-120">2 つの方法では、さまざまなパフォーマンス特性があります。</span><span class="sxs-lookup"><span data-stu-id="10c4f-120">The two approaches have different performance characteristics.</span></span> <span data-ttu-id="10c4f-121">使用する場合、いくつかの変換は高速実行、<xref:System.Xml.XmlReader>を作成し、他のユーザーが高速化を使用する場合、<xref:System.Xml.XPath.XPathNavigator>します。</span><span class="sxs-lookup"><span data-stu-id="10c4f-121">Some transformations will execute faster when using an <xref:System.Xml.XmlReader>, and others will execute faster when using a <xref:System.Xml.XPath.XPathNavigator>.</span></span> <span data-ttu-id="10c4f-122">パフォーマンスを重視する場合は、デバイスが優れている機能、状況を判断するには、各アプローチを試すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="10c4f-122">If performance is a concern, we recommend that you experiment with each approach to determine which will perform better in your circumstances.</span></span>  
  
```csharp  
  
            string xslMarkup = @"<?xml version='1.0'?>  
<xsl:stylesheet xmlns:xsl='http://www.w3.org/1999/XSL/Transform' version='1.0'>  
    <xsl:template match='/Parent'>  
        <Root>  
            <C1><xsl:value-of select='Child1'/></C1>  
            <C2><xsl:value-of select='Child2'/></C2>  
        </Root>  
    </xsl:template>  
</xsl:stylesheet>";  
  
XDocument xmlTree = new XDocument(  
    new XElement("Parent",  
        new XElement("Child1", "Child1 data"),  
        new XElement("Child2", "Child2 data")  
    )  
);  
  
XDocument newTree = new XDocument();  
using (XmlWriter writer = newTree.CreateWriter()) {  
    // Load the style sheet.  
    XslCompiledTransform xslt = new XslCompiledTransform();  
    xslt.Load(XmlReader.Create(new StringReader(xslMarkup)));  
  
    // Execute the transform and output the results to a writer.  
    xslt.Transform(xmlTree.CreateNavigator(), writer);  
}  
  
Console.WriteLine(newTree);  
```  
  
```vb  
  
            Dim xslMarkup As XDocument = <?xml version='1.0'?>  
                             <xsl:stylesheet xmlns:xsl='http://www.w3.org/1999/XSL/Transform' version='1.0'>  
                                 <xsl:template match='/Parent'>  
                                     <Root>  
                                         <C1><xsl:value-of select='Child1'/></C1>  
                                         <C2><xsl:value-of select='Child2'/></C2>  
                                     </Root>  
                                 </xsl:template>  
                             </xsl:stylesheet>  
  
Dim xmlTree As XDocument = <?xml version='1.0'?>  
                           <Parent>  
                               <Child1>Child1 data</Child1>  
                               <Child2>Child2 data</Child2>  
                           </Parent>  
  
Dim newTree As XDocument = New XDocument()  
  
Using writer As XmlWriter = newTree.CreateWriter()  
    ' Load the style sheet.  
    Dim xslt As XslCompiledTransform = _  
        New XslCompiledTransform()  
    xslt.Load(xslMarkup.CreateReader())  
  
    ' Execute the transform and output the results to a writer.  
    xslt.Transform(xmlTree.CreateNavigator(), writer)  
End Using  
  
Console.WriteLine(newTree)  
```  
  
 <span data-ttu-id="10c4f-123">この例を実行すると、次の出力が生成されます。</span><span class="sxs-lookup"><span data-stu-id="10c4f-123">This example produces the following output:</span></span>  
  
```xml  
  
            <Root>  
  <C1>Child1 data</C1>  
  <C2>Child2 data</C2>  
</Root>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateNavigator">
      <MemberSignature Language="C#" Value="public static System.Xml.XPath.XPathNavigator CreateNavigator (this System.Xml.Linq.XNode node);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XPath.XPathNavigator CreateNavigator(class System.Xml.Linq.XNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CreateNavigator (node As XNode) As XPathNavigator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Xml::XPath::XPathNavigator ^ CreateNavigator(System::Xml::Linq::XNode ^ node);" />
      <MemberSignature Language="F#" Value="static member CreateNavigator : System.Xml.Linq.XNode -&gt; System.Xml.XPath.XPathNavigator" Usage="System.Xml.XPath.Extensions.CreateNavigator node" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath.XDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNavigator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Xml.Linq.XNode" RefType="this" />
      </Parameters>
      <Docs>
        <param name="node">
          <span data-ttu-id="10c4f-124">XPath クエリを処理できる <see cref="T:System.Xml.Linq.XNode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="10c4f-124">An <see cref="T:System.Xml.Linq.XNode" /> that can process XPath queries.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="10c4f-125">
            <see cref="T:System.Xml.XPath.XPathNavigator" /> の <see cref="T:System.Xml.Linq.XNode" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="10c4f-125">Creates an <see cref="T:System.Xml.XPath.XPathNavigator" /> for an <see cref="T:System.Xml.Linq.XNode" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="10c4f-126">XPath クエリを処理できる <see cref="T:System.Xml.XPath.XPathNavigator" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="10c4f-126">An <see cref="T:System.Xml.XPath.XPathNavigator" /> that can process XPath queries.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10c4f-127">使用して XML ツリーを編集することはできません、<xref:System.Xml.XPath.XPathNavigator>このメソッドによって返されます。</span><span class="sxs-lookup"><span data-stu-id="10c4f-127">You cannot edit the XML tree by using the <xref:System.Xml.XPath.XPathNavigator> that is returned by this method.</span></span> <span data-ttu-id="10c4f-128"><xref:System.Xml.XPath.XPathNavigator.CanEdit%2A> プロパティは、`false` を返します。</span><span class="sxs-lookup"><span data-stu-id="10c4f-128">The <xref:System.Xml.XPath.XPathNavigator.CanEdit%2A> property returns `false`.</span></span>  
  
 <span data-ttu-id="10c4f-129">作成することはできません、<xref:System.Xml.XPath.XPathNavigator>の<xref:System.Xml.Linq.XDocumentType>ノード。</span><span class="sxs-lookup"><span data-stu-id="10c4f-129">You cannot create an <xref:System.Xml.XPath.XPathNavigator> for a <xref:System.Xml.Linq.XDocumentType> node.</span></span> <span data-ttu-id="10c4f-130">ドキュメントの種類は、XPath データ モデルでは参加しません。</span><span class="sxs-lookup"><span data-stu-id="10c4f-130">Document types do not participate in the XPath data model.</span></span>  
  
 <span data-ttu-id="10c4f-131">Namespace 宣言は、左から右に報告されます。</span><span class="sxs-lookup"><span data-stu-id="10c4f-131">Namespace declarations are reported from left to right.</span></span> <span data-ttu-id="10c4f-132">これに対して、<xref:System.Xml.XmlDocument>名前空間は、右から左に報告されます。</span><span class="sxs-lookup"><span data-stu-id="10c4f-132">In contrast, for <xref:System.Xml.XmlDocument> namespaces are reported from right to left.</span></span> <span data-ttu-id="10c4f-133">これは、名前空間の宣言は、XPath データ モデルでは順序付けされていないために準拠する動作です。</span><span class="sxs-lookup"><span data-stu-id="10c4f-133">This is conformant behavior because namespace declarations are not ordered in the XPath data model.</span></span>  
  
 <span data-ttu-id="10c4f-134">メソッド<xref:System.Xml.XPath.XPathNavigator.MoveToId%2A>このメソッドによって返されるナビゲーターはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="10c4f-134">The method <xref:System.Xml.XPath.XPathNavigator.MoveToId%2A> is not supported for navigators that are returned by this method.</span></span>  
  
 <span data-ttu-id="10c4f-135">このメソッドを使用すると、XSLT 変換を実行します。</span><span class="sxs-lookup"><span data-stu-id="10c4f-135">You can use this method to perform an XSLT transformation.</span></span> <span data-ttu-id="10c4f-136">XML ツリーを作成、作成することができます、 <xref:System.Xml.XPath.XPathNavigator> 、XML ツリーから、新しいドキュメントを作成し、作成、<xref:System.Xml.XmlWriter>に新しいドキュメントに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="10c4f-136">You can create an XML tree, create an <xref:System.Xml.XPath.XPathNavigator> from the XML tree, create a new document, and create a <xref:System.Xml.XmlWriter> that will write into the new document.</span></span> <span data-ttu-id="10c4f-137">渡す、XSLT 変換を呼び出すことができますし、<xref:System.Xml.XPath.XPathNavigator>と<xref:System.Xml.XmlWriter>に変換します。</span><span class="sxs-lookup"><span data-stu-id="10c4f-137">Then, you can invoke the XSLT transformation, passing the <xref:System.Xml.XPath.XPathNavigator> and <xref:System.Xml.XmlWriter> to the transform.</span></span> <span data-ttu-id="10c4f-138">変換が正常に完了すると、新しい XML ツリーに変換結果が挿入されます。</span><span class="sxs-lookup"><span data-stu-id="10c4f-138">After the transformation successfully completes, the new XML tree is populated with the results of the transformation.</span></span>  
  
 <span data-ttu-id="10c4f-139">XSLT 変換を実行する、いずれかを使用できる、<xref:System.Xml.XmlReader>または<xref:System.Xml.XPath.XPathNavigator>します。</span><span class="sxs-lookup"><span data-stu-id="10c4f-139">To perform an XSLT transformation, you can use either an <xref:System.Xml.XmlReader> or an <xref:System.Xml.XPath.XPathNavigator>.</span></span> <span data-ttu-id="10c4f-140">2 つの方法では、さまざまなパフォーマンス特性があります。</span><span class="sxs-lookup"><span data-stu-id="10c4f-140">The two approaches have different performance characteristics.</span></span> <span data-ttu-id="10c4f-141">使用する場合、いくつかの変換は高速実行、<xref:System.Xml.XmlReader>を作成し、他のユーザーが高速化を使用する場合、<xref:System.Xml.XPath.XPathNavigator>します。</span><span class="sxs-lookup"><span data-stu-id="10c4f-141">Some transformations will execute faster when using an <xref:System.Xml.XmlReader>, and others will execute faster when using a <xref:System.Xml.XPath.XPathNavigator>.</span></span> <span data-ttu-id="10c4f-142">パフォーマンスを重視する場合は、デバイスが優れている機能、状況を判断するには、各アプローチを試すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="10c4f-142">If performance is a concern, we recommend that you experiment with each approach to determine which will perform better in your circumstances.</span></span>  
  
   
  
## Examples  
  
```csharp  
  
                string xslMarkup = @"<?xml version='1.0'?>  
<xsl:stylesheet xmlns:xsl='http://www.w3.org/1999/XSL/Transform' version='1.0'>  
    <xsl:template match='/Parent'>  
        <Root>  
            <C1><xsl:value-of select='Child1'/></C1>  
            <C2><xsl:value-of select='Child2'/></C2>  
        </Root>  
    </xsl:template>  
</xsl:stylesheet>";  
  
XDocument xmlTree = new XDocument(  
    new XElement("Parent",  
        new XElement("Child1", "Child1 data"),  
        new XElement("Child2", "Child2 data")  
    )  
);  
  
XDocument newTree = new XDocument();  
using (XmlWriter writer = newTree.CreateWriter()) {  
    // Load the style sheet.  
    XslCompiledTransform xslt = new XslCompiledTransform();  
    xslt.Load(XmlReader.Create(new StringReader(xslMarkup)));  
  
    // Execute the transform and output the results to a writer.  
    xslt.Transform(xmlTree.CreateNavigator(), writer);  
}  
  
Console.WriteLine(newTree);  
```  
  
```vb  
  
                Dim xslMarkup As XDocument = _  
    <?xml version='1.0'?>  
    <xsl:stylesheet xmlns:xsl='http://www.w3.org/1999/XSL/Transform' version='1.0'>  
        <xsl:template match='/Parent'>  
            <Root>  
                <C1><xsl:value-of select='Child1'/></C1>  
                <C2><xsl:value-of select='Child2'/></C2>  
            </Root>  
        </xsl:template>  
    </xsl:stylesheet>  
  
Dim xmlTree As XDocument = _  
    <?xml version='1.0'?>  
    <Parent>  
        <Child1>Child1 data</Child1>  
        <Child2>Child2 data</Child2>  
    </Parent>  
  
Dim newTree As XDocument = New XDocument()  
  
Using writer As XmlWriter = newTree.CreateWriter()  
    ' Load the style sheet.  
    Dim xslt As XslCompiledTransform = _  
        New XslCompiledTransform()  
    xslt.Load(xslMarkup.CreateReader())  
  
    ' Execute the transform and output the results to a writer.  
    xslt.Transform(xmlTree.CreateNavigator(), writer)  
End Using  
  
Console.WriteLine(newTree)  
```  
  
 <span data-ttu-id="10c4f-143">この例を実行すると、次の出力が生成されます。</span><span class="sxs-lookup"><span data-stu-id="10c4f-143">This example produces the following output:</span></span>  
  
```xml  
  
                <Root>  
  <C1>Child1 data</C1>  
  <C2>Child2 data</C2>  
</Root>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateNavigator">
      <MemberSignature Language="C#" Value="public static System.Xml.XPath.XPathNavigator CreateNavigator (this System.Xml.Linq.XNode node, System.Xml.XmlNameTable nameTable);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XPath.XPathNavigator CreateNavigator(class System.Xml.Linq.XNode node, class System.Xml.XmlNameTable nameTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode,System.Xml.XmlNameTable)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CreateNavigator (node As XNode, nameTable As XmlNameTable) As XPathNavigator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Xml::XPath::XPathNavigator ^ CreateNavigator(System::Xml::Linq::XNode ^ node, System::Xml::XmlNameTable ^ nameTable);" />
      <MemberSignature Language="F#" Value="static member CreateNavigator : System.Xml.Linq.XNode * System.Xml.XmlNameTable -&gt; System.Xml.XPath.XPathNavigator" Usage="System.Xml.XPath.Extensions.CreateNavigator (node, nameTable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath.XDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNavigator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Xml.Linq.XNode" RefType="this" />
        <Parameter Name="nameTable" Type="System.Xml.XmlNameTable" />
      </Parameters>
      <Docs>
        <param name="node">
          <span data-ttu-id="10c4f-144">XPath クエリを処理できる <see cref="T:System.Xml.Linq.XNode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="10c4f-144">An <see cref="T:System.Xml.Linq.XNode" /> that can process an XPath query.</span>
          </span>
        </param>
        <param name="nameTable">
          <span data-ttu-id="10c4f-145">
            <see cref="T:System.Xml.XmlNameTable" /> で使用する <see cref="T:System.Xml.XPath.XPathNavigator" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="10c4f-145">A <see cref="T:System.Xml.XmlNameTable" /> to be used by <see cref="T:System.Xml.XPath.XPathNavigator" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="10c4f-146">
            <see cref="T:System.Xml.XPath.XPathNavigator" /> の <see cref="T:System.Xml.Linq.XNode" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="10c4f-146">Creates an <see cref="T:System.Xml.XPath.XPathNavigator" /> for an <see cref="T:System.Xml.Linq.XNode" />.</span>
          </span>
          <span data-ttu-id="10c4f-147">
            <see cref="T:System.Xml.XmlNameTable" /> を使用すると、XPath 式をより効率的に処理できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="10c4f-147">The <see cref="T:System.Xml.XmlNameTable" /> enables more efficient XPath expression processing.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="10c4f-148">XPath クエリを処理できる <see cref="T:System.Xml.XPath.XPathNavigator" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="10c4f-148">An <see cref="T:System.Xml.XPath.XPathNavigator" /> that can process XPath queries.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10c4f-149">使用して XML ツリーを編集することはできません、<xref:System.Xml.XPath.XPathNavigator>このメソッドによって返されます。</span><span class="sxs-lookup"><span data-stu-id="10c4f-149">You cannot edit the XML tree using the <xref:System.Xml.XPath.XPathNavigator> that is returned by this method.</span></span> <span data-ttu-id="10c4f-150"><xref:System.Xml.XPath.XPathNavigator.CanEdit%2A> プロパティは、`false` を返します。</span><span class="sxs-lookup"><span data-stu-id="10c4f-150">The <xref:System.Xml.XPath.XPathNavigator.CanEdit%2A> property returns `false`.</span></span>  
  
 <span data-ttu-id="10c4f-151">作成することはできません、<xref:System.Xml.XPath.XPathNavigator>の<xref:System.Xml.Linq.XDocumentType>ノード。</span><span class="sxs-lookup"><span data-stu-id="10c4f-151">You cannot create an <xref:System.Xml.XPath.XPathNavigator> for a <xref:System.Xml.Linq.XDocumentType> node.</span></span> <span data-ttu-id="10c4f-152">ドキュメントの種類は、XPath データ モデルでは参加しません。</span><span class="sxs-lookup"><span data-stu-id="10c4f-152">Document types do not participate in the XPath data model.</span></span>  
  
 <span data-ttu-id="10c4f-153">Namespace 宣言は、左から右に報告されます。</span><span class="sxs-lookup"><span data-stu-id="10c4f-153">Namespace declarations are reported from left to right.</span></span> <span data-ttu-id="10c4f-154">これに対して、<xref:System.Xml.XmlDocument>名前空間は、右から左に報告されます。</span><span class="sxs-lookup"><span data-stu-id="10c4f-154">In contrast, for <xref:System.Xml.XmlDocument> namespaces are reported from right to left.</span></span> <span data-ttu-id="10c4f-155">これは、名前空間の宣言は、XPath データ モデルでは順序付けされていないために準拠する動作です。</span><span class="sxs-lookup"><span data-stu-id="10c4f-155">This is conformant behavior because namespace declarations are not ordered in the XPath data model.</span></span>  
  
 <span data-ttu-id="10c4f-156">メソッド<xref:System.Xml.XPath.XPathNavigator.MoveToId%2A>このメソッドによって返されるナビゲーターはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="10c4f-156">The method <xref:System.Xml.XPath.XPathNavigator.MoveToId%2A> is not supported for navigators that are returned by this method.</span></span>  
  
 <span data-ttu-id="10c4f-157">使用する場合、<xref:System.Xml.XmlNameTable>を作成するには、このメソッドを使用して、 <xref:System.Xml.XPath.XPathNavigator>XPath 式を評価するときにパフォーマンスの向上が表示されます。</span><span class="sxs-lookup"><span data-stu-id="10c4f-157">If you use an <xref:System.Xml.XmlNameTable> with this method to create the <xref:System.Xml.XPath.XPathNavigator>, you will get better performance when evaluating XPath expressions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="XPathEvaluate">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath.XDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="10c4f-158">XPath 式を評価します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="10c4f-158">Evaluates an XPath expression.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10c4f-159">XML XPath 言語 1.0 勧告で返されるコレクションの順序が指定されていませんが、この拡張メソッドは、ドキュメントの順序でノードを返します。</span><span class="sxs-lookup"><span data-stu-id="10c4f-159">Although the ordering of returned collections is not specified in the XML XPath Language 1.0 Recommendation, this extension method returns nodes in document order.</span></span>  
  
 <span data-ttu-id="10c4f-160">逆方向の軸を使用する場合でも、ノードがドキュメントの順序で返されることに注意してください。`preceding-sibling`または`ancestor-or-self`します。</span><span class="sxs-lookup"><span data-stu-id="10c4f-160">Note that nodes are returned in document order even when you use a reverse axis, such as `preceding-sibling` or `ancestor-or-self`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="XPathEvaluate">
      <MemberSignature Language="C#" Value="public static object XPathEvaluate (this System.Xml.Linq.XNode node, string expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object XPathEvaluate(class System.Xml.Linq.XNode node, string expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function XPathEvaluate (node As XNode, expression As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Object ^ XPathEvaluate(System::Xml::Linq::XNode ^ node, System::String ^ expression);" />
      <MemberSignature Language="F#" Value="static member XPathEvaluate : System.Xml.Linq.XNode * string -&gt; obj" Usage="System.Xml.XPath.Extensions.XPathEvaluate (node, expression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath.XDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Xml.Linq.XNode" RefType="this" />
        <Parameter Name="expression" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="node">
          <span data-ttu-id="10c4f-161">XPath 式の評価対象となる <see cref="T:System.Xml.Linq.XNode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="10c4f-161">The <see cref="T:System.Xml.Linq.XNode" /> on which to evaluate the XPath expression.</span>
          </span>
        </param>
        <param name="expression">
          <span data-ttu-id="10c4f-162">XPath 式を含む <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="10c4f-162">A <see cref="T:System.String" /> that contains an XPath expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="10c4f-163">XPath 式を評価します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="10c4f-163">Evaluates an XPath expression.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="10c4f-164">
            <see langword="bool" />、<see langword="double" />、<see langword="string" />、または <see cref="T:System.Collections.Generic.IEnumerable`1" /> を含むオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="10c4f-164">An object that can contain a <see langword="bool" />, a <see langword="double" />, a <see langword="string" />, or an <see cref="T:System.Collections.Generic.IEnumerable`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10c4f-165">使用することができます、コレクションが要素または属性の列挙体の場合、`Cast`のコレクションを取得する演算子<xref:System.Xml.Linq.XElement>または<xref:System.Xml.Linq.XAttribute>します。</span><span class="sxs-lookup"><span data-stu-id="10c4f-165">If the collection is an enumeration of elements or attributes, you can use the `Cast` operator to get a collection of <xref:System.Xml.Linq.XElement> or <xref:System.Xml.Linq.XAttribute>.</span></span>  
  
 <span data-ttu-id="10c4f-166">XML XPath 言語 1.0 勧告で返されるコレクションの順序が指定されていませんが、この拡張メソッドは、ドキュメントの順序でノードを返します。</span><span class="sxs-lookup"><span data-stu-id="10c4f-166">Although the ordering of returned collections is not specified in the XML XPath Language 1.0 Recommendation, this extension method returns nodes in document order.</span></span>  
  
 <span data-ttu-id="10c4f-167">逆方向の軸を使用する場合でも、ノードがドキュメントの順序で返されることに注意してください。`preceding-sibling`または`ancestor-or-self`します。</span><span class="sxs-lookup"><span data-stu-id="10c4f-167">Note that nodes are returned in document order even when you use a reverse axis, such as `preceding-sibling` or `ancestor-or-self`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="10c4f-168">次の例は、属性を持つ小さな XML ツリーを作成しを使用して、<xref:System.Xml.XPath.Extensions.XPathEvaluate%2A>属性を取得するメソッド。</span><span class="sxs-lookup"><span data-stu-id="10c4f-168">The following example creates a small XML tree with an attribute, then uses the <xref:System.Xml.XPath.Extensions.XPathEvaluate%2A> method to retrieve the attribute.</span></span>  
  
```csharp  
  
                String xml = "<root a='value'/>";  
XDocument d = XDocument.Parse(xml);  
IEnumerable att = (IEnumerable)d.XPathEvaluate("/root/@a");  
Console.WriteLine(att.Cast<XAttribute>().FirstOrDefault());  
```  
  
```vb  
  
                Dim d As XDocument = _  
    <?xml version='1.0'?>  
    <root a='value'/>  
Dim att As IEnumerable = CType(d.XPathEvaluate("/root/@a"), IEnumerable)  
Console.WriteLine(att.Cast(Of XAttribute)().FirstOrDefault())  
```  
  
 <span data-ttu-id="10c4f-169">この例を実行すると、次の出力が生成されます。</span><span class="sxs-lookup"><span data-stu-id="10c4f-169">This example produces the following output:</span></span>  
  
```  
a="value"  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XPathEvaluate">
      <MemberSignature Language="C#" Value="public static object XPathEvaluate (this System.Xml.Linq.XNode node, string expression, System.Xml.IXmlNamespaceResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object XPathEvaluate(class System.Xml.Linq.XNode node, string expression, class System.Xml.IXmlNamespaceResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function XPathEvaluate (node As XNode, expression As String, resolver As IXmlNamespaceResolver) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Object ^ XPathEvaluate(System::Xml::Linq::XNode ^ node, System::String ^ expression, System::Xml::IXmlNamespaceResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="static member XPathEvaluate : System.Xml.Linq.XNode * string * System.Xml.IXmlNamespaceResolver -&gt; obj" Usage="System.Xml.XPath.Extensions.XPathEvaluate (node, expression, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath.XDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Xml.Linq.XNode" RefType="this" />
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="resolver" Type="System.Xml.IXmlNamespaceResolver" />
      </Parameters>
      <Docs>
        <param name="node">
          <span data-ttu-id="10c4f-170">XPath 式の評価対象となる <see cref="T:System.Xml.Linq.XNode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="10c4f-170">The <see cref="T:System.Xml.Linq.XNode" /> on which to evaluate the XPath expression.</span>
          </span>
        </param>
        <param name="expression">
          <span data-ttu-id="10c4f-171">XPath 式を含む <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="10c4f-171">A <see cref="T:System.String" /> that contains an XPath expression.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="10c4f-172">XPath 式の名前空間プレフィックスの解決に使用する <see cref="T:System.Xml.IXmlNamespaceResolver" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="10c4f-172">A <see cref="T:System.Xml.IXmlNamespaceResolver" /> for the namespace prefixes in the XPath expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="10c4f-173">XPath 式を評価します。このとき、指定された <see cref="T:System.Xml.IXmlNamespaceResolver" /> を使用して名前空間プレフィックスを解決します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="10c4f-173">Evaluates an XPath expression, resolving namespace prefixes using the specified <see cref="T:System.Xml.IXmlNamespaceResolver" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="10c4f-174">式の評価結果を含むオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="10c4f-174">An object that contains the result of evaluating the expression.</span>
          </span>
          <span data-ttu-id="10c4f-175">このオブジェクトは、<see langword="bool" />、<see langword="double" />、<see langword="string" />、または <see cref="T:System.Collections.Generic.IEnumerable`1" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="10c4f-175">The object can be a <see langword="bool" />, a <see langword="double" />, a <see langword="string" />, or an <see cref="T:System.Collections.Generic.IEnumerable`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10c4f-176">このメソッドを使用して、名前空間プレフィックスを含む XPath 式を評価することができます。</span><span class="sxs-lookup"><span data-stu-id="10c4f-176">You can use this method to evaluate XPath expressions that contain namespace prefixes.</span></span>  
  
 <span data-ttu-id="10c4f-177">XML XPath 言語 1.0 勧告で返されるコレクションの順序が指定されていませんが、この拡張メソッドは、ドキュメントの順序でノードを返します。</span><span class="sxs-lookup"><span data-stu-id="10c4f-177">Although the ordering of returned collections is not specified in the XML XPath Language 1.0 Recommendation, this extension method returns nodes in document order.</span></span>  
  
 <span data-ttu-id="10c4f-178">逆方向の軸を使用する場合でも、ノードがドキュメントの順序で返されることに注意してください。`preceding-sibling`または`ancestor-or-self`します。</span><span class="sxs-lookup"><span data-stu-id="10c4f-178">Note that nodes are returned in document order even when you use a reverse axis, such as `preceding-sibling` or `ancestor-or-self`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="10c4f-179">次の例では、名前空間を含む XML ツリーを作成します。</span><span class="sxs-lookup"><span data-stu-id="10c4f-179">The following example creates an XML tree that contains a namespace.</span></span> <span data-ttu-id="10c4f-180"><xref:System.Xml.XmlReader> を使用して XML ドキュメントを読み込ます。</span><span class="sxs-lookup"><span data-stu-id="10c4f-180">It uses an <xref:System.Xml.XmlReader> to read the XML document.</span></span> <span data-ttu-id="10c4f-181">次に、<xref:System.Xml.XmlNameTable> から <xref:System.Xml.XmlReader> を取得し、<xref:System.Xml.XmlNamespaceManager> から <xref:System.Xml.XmlNameTable> を取得します。</span><span class="sxs-lookup"><span data-stu-id="10c4f-181">It then gets an <xref:System.Xml.XmlNameTable> from the <xref:System.Xml.XmlReader>, and an <xref:System.Xml.XmlNamespaceManager> from the <xref:System.Xml.XmlNameTable>.</span></span> <span data-ttu-id="10c4f-182">使用して、<xref:System.Xml.XmlNamespaceManager>要素を選択するとします。</span><span class="sxs-lookup"><span data-stu-id="10c4f-182">It uses the <xref:System.Xml.XmlNamespaceManager> when selecting an element.</span></span>  
  
```csharp  
  
                string markup =  
@"<aw:Root xmlns:aw='http://www.adventure-works.com'>  
    <aw:Child1 aw:Att='attdata'>child one data 1</aw:Child1>  
</aw:Root>";  
XmlReader reader = XmlReader.Create(new StringReader(markup));  
XElement root = XElement.Load(reader);  
XmlNameTable nameTable = reader.NameTable;  
XmlNamespaceManager namespaceManager = new XmlNamespaceManager(nameTable);  
namespaceManager.AddNamespace("aw", "http://www.adventure-works.com");  
IEnumerable atts = (IEnumerable)root.XPathEvaluate("./aw:Child1/@aw:Att", namespaceManager);  
IEnumerable<XAttribute> attList = atts.Cast<XAttribute>();  
XAttribute att = attList.First();  
Console.WriteLine(att);  
```  
  
```vb  
  
                Dim markup As XElement = _  
    <aw:Root xmlns:aw='http://www.adventure-works.com'>  
        <aw:Child1 aw:Att='attdata'>child one data 1</aw:Child1>  
    </aw:Root>  
Dim reader As XmlReader = markup.CreateReader  
Dim nameTable As XmlNameTable = reader.NameTable  
Dim namespaceManager As XmlNamespaceManager = New XmlNamespaceManager(nameTable)  
namespaceManager.AddNamespace("aw", "http://www.adventure-works.com")  
Dim atts As IEnumerable = CType(markup.XPathEvaluate("./aw:Child1/@aw:Att", namespaceManager), IEnumerable)  
Dim attList As IEnumerable(Of XAttribute) = atts.Cast(Of XAttribute)()  
Dim att As XAttribute = attList.First()  
Console.WriteLine(att)  
```  
  
 <span data-ttu-id="10c4f-183">この例を実行すると、次の出力が生成されます。</span><span class="sxs-lookup"><span data-stu-id="10c4f-183">This example produces the following output:</span></span>  
  
```  
aw:Att="attdata"  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="XPathSelectElement">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath.XDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="10c4f-184">XPath 式を使用して <see cref="T:System.Xml.Linq.XElement" /> を選択します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="10c4f-184">Selects an <see cref="T:System.Xml.Linq.XElement" /> using a XPath expression.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="XPathSelectElement">
      <MemberSignature Language="C#" Value="public static System.Xml.Linq.XElement XPathSelectElement (this System.Xml.Linq.XNode node, string expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.Linq.XElement XPathSelectElement(class System.Xml.Linq.XNode node, string expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function XPathSelectElement (node As XNode, expression As String) As XElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Xml::Linq::XElement ^ XPathSelectElement(System::Xml::Linq::XNode ^ node, System::String ^ expression);" />
      <MemberSignature Language="F#" Value="static member XPathSelectElement : System.Xml.Linq.XNode * string -&gt; System.Xml.Linq.XElement" Usage="System.Xml.XPath.Extensions.XPathSelectElement (node, expression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath.XDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Linq.XElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Xml.Linq.XNode" RefType="this" />
        <Parameter Name="expression" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="node">
          <span data-ttu-id="10c4f-185">XPath 式の評価対象となる <see cref="T:System.Xml.Linq.XNode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="10c4f-185">The <see cref="T:System.Xml.Linq.XNode" /> on which to evaluate the XPath expression.</span>
          </span>
        </param>
        <param name="expression">
          <span data-ttu-id="10c4f-186">XPath 式を含む <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="10c4f-186">A <see cref="T:System.String" /> that contains an XPath expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="10c4f-187">XPath 式を使用して <see cref="T:System.Xml.Linq.XElement" /> を選択します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="10c4f-187">Selects an <see cref="T:System.Xml.Linq.XElement" /> using a XPath expression.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="10c4f-188">
            <see cref="T:System.Xml.Linq.XElement" />、または null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="10c4f-188">An <see cref="T:System.Xml.Linq.XElement" />, or null.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="10c4f-189">次の例は、小さな XML ツリーを作成し、使用して<xref:System.Xml.XPath.Extensions.XPathSelectElement%2A>を 1 つの要素を選択します。</span><span class="sxs-lookup"><span data-stu-id="10c4f-189">The following example creates a small XML tree and uses <xref:System.Xml.XPath.Extensions.XPathSelectElement%2A> to select a single element.</span></span>  
  
```csharp  
  
                XElement root = new XElement("Root",  
    new XElement("Child1", 1),  
    new XElement("Child2", 2),  
    new XElement("Child3", 3),  
    new XElement("Child4", 4),  
    new XElement("Child5", 5),  
    new XElement("Child6", 6)  
);  
XElement el = root.XPathSelectElement("./Child4");  
Console.WriteLine(el);  
```  
  
```vb  
  
                Dim root As XElement = _  
    <Root>  
        <Child1>1</Child1>  
        <Child2>2</Child2>  
        <Child3>3</Child3>  
        <Child4>4</Child4>  
        <Child5>5</Child5>  
        <Child6>6</Child6>  
    </Root>  
Dim el As XElement = root.XPathSelectElement("./Child4")  
Console.WriteLine(el)  
```  
  
 <span data-ttu-id="10c4f-190">この例を実行すると、次の出力が生成されます。</span><span class="sxs-lookup"><span data-stu-id="10c4f-190">This example produces the following output:</span></span>  
  
```xml  
<Child4>4</Child4>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XPathSelectElement">
      <MemberSignature Language="C#" Value="public static System.Xml.Linq.XElement XPathSelectElement (this System.Xml.Linq.XNode node, string expression, System.Xml.IXmlNamespaceResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.Linq.XElement XPathSelectElement(class System.Xml.Linq.XNode node, string expression, class System.Xml.IXmlNamespaceResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function XPathSelectElement (node As XNode, expression As String, resolver As IXmlNamespaceResolver) As XElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Xml::Linq::XElement ^ XPathSelectElement(System::Xml::Linq::XNode ^ node, System::String ^ expression, System::Xml::IXmlNamespaceResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="static member XPathSelectElement : System.Xml.Linq.XNode * string * System.Xml.IXmlNamespaceResolver -&gt; System.Xml.Linq.XElement" Usage="System.Xml.XPath.Extensions.XPathSelectElement (node, expression, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath.XDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Linq.XElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Xml.Linq.XNode" RefType="this" />
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="resolver" Type="System.Xml.IXmlNamespaceResolver" />
      </Parameters>
      <Docs>
        <param name="node">
          <span data-ttu-id="10c4f-191">XPath 式の評価対象となる <see cref="T:System.Xml.Linq.XNode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="10c4f-191">The <see cref="T:System.Xml.Linq.XNode" /> on which to evaluate the XPath expression.</span>
          </span>
        </param>
        <param name="expression">
          <span data-ttu-id="10c4f-192">XPath 式を含む <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="10c4f-192">A <see cref="T:System.String" /> that contains an XPath expression.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="10c4f-193">XPath 式の名前空間プレフィックスの解決に使用する <see cref="T:System.Xml.IXmlNamespaceResolver" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="10c4f-193">An <see cref="T:System.Xml.IXmlNamespaceResolver" /> for the namespace prefixes in the XPath expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="10c4f-194">XPath 式を使用して <see cref="T:System.Xml.Linq.XElement" /> を選択します。このとき、指定された <see cref="T:System.Xml.IXmlNamespaceResolver" /> を使用して名前空間プレフィックスを解決します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="10c4f-194">Selects an <see cref="T:System.Xml.Linq.XElement" /> using a XPath expression, resolving namespace prefixes using the specified <see cref="T:System.Xml.IXmlNamespaceResolver" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="10c4f-195">
            <see cref="T:System.Xml.Linq.XElement" />、または null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="10c4f-195">An <see cref="T:System.Xml.Linq.XElement" />, or null.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10c4f-196">このメソッドを使用して、名前空間プレフィックスを含む XPath 式を評価することができます。</span><span class="sxs-lookup"><span data-stu-id="10c4f-196">You can use this method to evaluate XPath expressions that contain namespace prefixes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="10c4f-197">次の例では、名前空間を含む XML ツリーを作成します。</span><span class="sxs-lookup"><span data-stu-id="10c4f-197">The following example creates an XML tree that contains a namespace.</span></span> <span data-ttu-id="10c4f-198"><xref:System.Xml.XmlReader> を使用して XML ドキュメントを読み込ます。</span><span class="sxs-lookup"><span data-stu-id="10c4f-198">It uses an <xref:System.Xml.XmlReader> to read the XML document.</span></span> <span data-ttu-id="10c4f-199">次に、<xref:System.Xml.XmlNameTable> から <xref:System.Xml.XmlReader> を取得し、<xref:System.Xml.XmlNamespaceManager> から <xref:System.Xml.XmlNameTable> を取得します。</span><span class="sxs-lookup"><span data-stu-id="10c4f-199">It then gets an <xref:System.Xml.XmlNameTable> from the <xref:System.Xml.XmlReader>, and an <xref:System.Xml.XmlNamespaceManager> from the <xref:System.Xml.XmlNameTable>.</span></span> <span data-ttu-id="10c4f-200">使用して、<xref:System.Xml.XmlNamespaceManager>要素を選択するとします。</span><span class="sxs-lookup"><span data-stu-id="10c4f-200">It uses the <xref:System.Xml.XmlNamespaceManager> when selecting an element.</span></span>  
  
```csharp  
  
                string markup = @"  
<aw:Root xmlns:aw='http://www.adventure-works.com'>  
    <aw:Child1>child one data</aw:Child1>  
    <aw:Child2>child two data</aw:Child2>  
</aw:Root>";  
XmlReader reader = XmlReader.Create(new StringReader(markup));  
XElement root = XElement.Load(reader);  
XmlNameTable nameTable = reader.NameTable;  
XmlNamespaceManager namespaceManager = new XmlNamespaceManager(nameTable);  
namespaceManager.AddNamespace("aw", "http://www.adventure-works.com");  
XElement child1 = root.XPathSelectElement("./aw:Child1", namespaceManager);  
Console.WriteLine(child1);  
```  
  
```vb  
  
                Dim markup As XElement = _  
    <aw:Root xmlns:aw='http://www.adventure-works.com'>  
        <aw:Child1>child one data</aw:Child1>  
        <aw:Child2>child two data</aw:Child2>  
    </aw:Root>  
Dim reader As XmlReader = markup.CreateReader  
Dim nameTable As XmlNameTable = reader.NameTable  
Dim namespaceManager As XmlNamespaceManager = New XmlNamespaceManager(nameTable)  
namespaceManager.AddNamespace("aw", "http://www.adventure-works.com")  
Dim child1 As XElement = markup.XPathSelectElement("./aw:Child1", namespaceManager)  
Console.WriteLine(child1)  
```  
  
 <span data-ttu-id="10c4f-201">この例を実行すると、次の出力が生成されます。</span><span class="sxs-lookup"><span data-stu-id="10c4f-201">This example produces the following output:</span></span>  
  
```  
<aw:Child1 xmlns:aw="http://www.adventure-works.com">child one data</aw:Child1>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="XPathSelectElements">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath.XDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="10c4f-202">XPath 式を使用して要素のコレクションを選択します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="10c4f-202">Selects a collection of elements using an XPath expression.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10c4f-203">XML XPath 言語 1.0 勧告で返されるコレクションの順序が指定されていませんが、この拡張メソッドは、ドキュメントの順序でノードを返します。</span><span class="sxs-lookup"><span data-stu-id="10c4f-203">Although the ordering of returned collections is not specified in the XML XPath Language 1.0 Recommendation, this extension method returns nodes in document order.</span></span>  
  
 <span data-ttu-id="10c4f-204">逆方向の軸を使用する場合でも、ノードがドキュメントの順序で返されることに注意してください。`preceding-sibling`または`ancestor-or-self`します。</span><span class="sxs-lookup"><span data-stu-id="10c4f-204">Note that nodes are returned in document order even when you use a reverse axis, such as `preceding-sibling` or `ancestor-or-self`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="XPathSelectElements">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;System.Xml.Linq.XElement&gt; XPathSelectElements (this System.Xml.Linq.XNode node, string expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class System.Xml.Linq.XElement&gt; XPathSelectElements(class System.Xml.Linq.XNode node, string expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function XPathSelectElements (node As XNode, expression As String) As IEnumerable(Of XElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;System::Xml::Linq::XElement ^&gt; ^ XPathSelectElements(System::Xml::Linq::XNode ^ node, System::String ^ expression);" />
      <MemberSignature Language="F#" Value="static member XPathSelectElements : System.Xml.Linq.XNode * string -&gt; seq&lt;System.Xml.Linq.XElement&gt;" Usage="System.Xml.XPath.Extensions.XPathSelectElements (node, expression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath.XDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Xml.Linq.XElement&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Xml.Linq.XNode" RefType="this" />
        <Parameter Name="expression" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="node">
          <span data-ttu-id="10c4f-205">XPath 式の評価対象となる <see cref="T:System.Xml.Linq.XNode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="10c4f-205">The <see cref="T:System.Xml.Linq.XNode" /> on which to evaluate the XPath expression.</span>
          </span>
        </param>
        <param name="expression">
          <span data-ttu-id="10c4f-206">XPath 式を含む <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="10c4f-206">A <see cref="T:System.String" /> that contains an XPath expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="10c4f-207">XPath 式を使用して要素のコレクションを選択します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="10c4f-207">Selects a collection of elements using an XPath expression.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="10c4f-208">選択対象の要素を格納する <see cref="T:System.Collections.Generic.IEnumerable`1" /> の <see cref="T:System.Xml.Linq.XElement" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="10c4f-208">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Xml.Linq.XElement" /> that contains the selected elements.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10c4f-209">XML XPath 言語 1.0 勧告で返されるコレクションの順序が指定されていませんが、この拡張メソッドは、ドキュメントの順序でノードを返します。</span><span class="sxs-lookup"><span data-stu-id="10c4f-209">Although the ordering of returned collections is not specified in the XML XPath Language 1.0 Recommendation, this extension method returns nodes in document order.</span></span>  
  
 <span data-ttu-id="10c4f-210">逆方向の軸を使用する場合でも、ノードがドキュメントの順序で返されることに注意してください。`preceding-sibling`または`ancestor-or-self`します。</span><span class="sxs-lookup"><span data-stu-id="10c4f-210">Note that nodes are returned in document order even when you use a reverse axis, such as `preceding-sibling` or `ancestor-or-self`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="10c4f-211">次の例では、小さな XML ツリーを作成し、<xref:System.Xml.XPath.Extensions.XPathSelectElements%2A> を使用して要素のセットを選択します。</span><span class="sxs-lookup"><span data-stu-id="10c4f-211">The following example creates a small XML tree and uses <xref:System.Xml.XPath.Extensions.XPathSelectElements%2A> to select a set of elements.</span></span>  
  
```csharp  
  
                XElement root = new XElement("Root",  
    new XElement("Child1", 1),  
    new XElement("Child1", 2),  
    new XElement("Child1", 3),  
    new XElement("Child2", 4),  
    new XElement("Child2", 5),  
    new XElement("Child2", 6)  
);  
IEnumerable<XElement> list = root.XPathSelectElements("./Child2");  
foreach (XElement el in list)  
    Console.WriteLine(el);  
```  
  
```vb  
  
                Dim root As XElement = _  
    <Root>  
        <Child1>1</Child1>  
        <Child1>2</Child1>  
        <Child1>3</Child1>  
        <Child2>4</Child2>  
        <Child2>5</Child2>  
        <Child2>6</Child2>  
    </Root>  
Dim list As IEnumerable(Of XElement) = root.XPathSelectElements("./Child2")  
For Each el As XElement In list  
    Console.WriteLine(el)  
Next  
```  
  
 <span data-ttu-id="10c4f-212">この例を実行すると、次の出力が生成されます。</span><span class="sxs-lookup"><span data-stu-id="10c4f-212">This example produces the following output:</span></span>  
  
```xml  
<Child2>4</Child2>  
<Child2>5</Child2>  
<Child2>6</Child2>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XPathSelectElements">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;System.Xml.Linq.XElement&gt; XPathSelectElements (this System.Xml.Linq.XNode node, string expression, System.Xml.IXmlNamespaceResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class System.Xml.Linq.XElement&gt; XPathSelectElements(class System.Xml.Linq.XNode node, string expression, class System.Xml.IXmlNamespaceResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function XPathSelectElements (node As XNode, expression As String, resolver As IXmlNamespaceResolver) As IEnumerable(Of XElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;System::Xml::Linq::XElement ^&gt; ^ XPathSelectElements(System::Xml::Linq::XNode ^ node, System::String ^ expression, System::Xml::IXmlNamespaceResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="static member XPathSelectElements : System.Xml.Linq.XNode * string * System.Xml.IXmlNamespaceResolver -&gt; seq&lt;System.Xml.Linq.XElement&gt;" Usage="System.Xml.XPath.Extensions.XPathSelectElements (node, expression, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath.XDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Xml.Linq.XElement&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Xml.Linq.XNode" RefType="this" />
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="resolver" Type="System.Xml.IXmlNamespaceResolver" />
      </Parameters>
      <Docs>
        <param name="node">
          <span data-ttu-id="10c4f-213">XPath 式の評価対象となる <see cref="T:System.Xml.Linq.XNode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="10c4f-213">The <see cref="T:System.Xml.Linq.XNode" /> on which to evaluate the XPath expression.</span>
          </span>
        </param>
        <param name="expression">
          <span data-ttu-id="10c4f-214">XPath 式を含む <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="10c4f-214">A <see cref="T:System.String" /> that contains an XPath expression.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="10c4f-215">XPath 式の名前空間プレフィックスの解決に使用する <see cref="T:System.Xml.IXmlNamespaceResolver" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="10c4f-215">A <see cref="T:System.Xml.IXmlNamespaceResolver" /> for the namespace prefixes in the XPath expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="10c4f-216">XPath 式を使用して要素のコレクションを選択します。このとき、指定された <see cref="T:System.Xml.IXmlNamespaceResolver" /> を使用して名前空間プレフィックスを解決します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="10c4f-216">Selects a collection of elements using an XPath expression, resolving namespace prefixes using the specified <see cref="T:System.Xml.IXmlNamespaceResolver" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="10c4f-217">選択対象の要素を格納する <see cref="T:System.Collections.Generic.IEnumerable`1" /> の <see cref="T:System.Xml.Linq.XElement" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="10c4f-217">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Xml.Linq.XElement" /> that contains the selected elements.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10c4f-218">このメソッドを使用して、名前空間プレフィックスを含む XPath 式を評価することができます。</span><span class="sxs-lookup"><span data-stu-id="10c4f-218">You can use this method to evaluate XPath expressions that contain namespace prefixes.</span></span>  
  
 <span data-ttu-id="10c4f-219">XML XPath 言語 1.0 勧告で返されるコレクションの順序が指定されていませんが、この拡張メソッドは、ドキュメントの順序でノードを返します。</span><span class="sxs-lookup"><span data-stu-id="10c4f-219">Although the ordering of returned collections is not specified in the XML XPath Language 1.0 Recommendation, this extension method returns nodes in document order.</span></span>  
  
 <span data-ttu-id="10c4f-220">逆方向の軸を使用する場合でも、ノードがドキュメントの順序で返されることに注意してください。`preceding-sibling`または`ancestor-or-self`します。</span><span class="sxs-lookup"><span data-stu-id="10c4f-220">Note that nodes are returned in document order even when you use a reverse axis, such as `preceding-sibling` or `ancestor-or-self`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="10c4f-221">この例では、名前空間を含む XML ツリーを作成します。</span><span class="sxs-lookup"><span data-stu-id="10c4f-221">This example creates an XML tree that contains a namespace.</span></span> <span data-ttu-id="10c4f-222"><xref:System.Xml.XmlReader> を使用して XML ドキュメントを読み込ます。</span><span class="sxs-lookup"><span data-stu-id="10c4f-222">It uses an <xref:System.Xml.XmlReader> to read the XML document.</span></span> <span data-ttu-id="10c4f-223">次に、<xref:System.Xml.XmlNameTable> から <xref:System.Xml.XmlReader> を取得し、<xref:System.Xml.XmlNamespaceManager> から <xref:System.Xml.XmlNameTable> を取得します。</span><span class="sxs-lookup"><span data-stu-id="10c4f-223">It then gets an <xref:System.Xml.XmlNameTable> from the <xref:System.Xml.XmlReader>, and an <xref:System.Xml.XmlNamespaceManager> from the <xref:System.Xml.XmlNameTable>.</span></span> <span data-ttu-id="10c4f-224">使用して、<xref:System.Xml.XmlNamespaceManager>要素のリストを選択するとします。</span><span class="sxs-lookup"><span data-stu-id="10c4f-224">It uses the <xref:System.Xml.XmlNamespaceManager> when selecting the list of elements.</span></span>  
  
```csharp  
  
                string markup = @"  
<aw:Root xmlns:aw='http://www.adventure-works.com'>  
    <aw:Child1>child one data 1</aw:Child1>  
    <aw:Child1>child one data 2</aw:Child1>  
    <aw:Child1>child one data 3</aw:Child1>  
    <aw:Child2>child two data 4</aw:Child2>  
    <aw:Child2>child two data 5</aw:Child2>  
    <aw:Child2>child two data 6</aw:Child2>  
</aw:Root>";  
XmlReader reader = XmlReader.Create(new StringReader(markup));  
XElement root = XElement.Load(reader);  
XmlNameTable nameTable = reader.NameTable;  
XmlNamespaceManager namespaceManager = new XmlNamespaceManager(nameTable);  
namespaceManager.AddNamespace("aw", "http://www.adventure-works.com");  
IEnumerable<XElement> elements = root.XPathSelectElements("./aw:Child1", namespaceManager);  
foreach (XElement el in elements)  
    Console.WriteLine(el);  
```  
  
```vb  
  
                Dim markup As XElement = _  
<aw:Root xmlns:aw="http://www.adventure-works.com">  
    <aw:Child1>child one data 1</aw:Child1>  
    <aw:Child1>child one data 2</aw:Child1>  
    <aw:Child1>child one data 3</aw:Child1>  
    <aw:Child2>child two data 4</aw:Child2>  
    <aw:Child2>child two data 5</aw:Child2>  
    <aw:Child2>child two data 6</aw:Child2>  
</aw:Root>  
Dim reader As XmlReader = markup.CreateReader  
Dim nameTable As XmlNameTable = reader.NameTable  
Dim namespaceManager As XmlNamespaceManager = New XmlNamespaceManager(nameTable)  
namespaceManager.AddNamespace("aw", "http://www.adventure-works.com")  
Dim elements As IEnumerable(Of XElement) = markup.XPathSelectElements("./aw:Child1", namespaceManager)  
For Each el As XElement In elements  
    Console.WriteLine(el)  
Next  
```  
  
 <span data-ttu-id="10c4f-225">この例を実行すると、次の出力が生成されます。</span><span class="sxs-lookup"><span data-stu-id="10c4f-225">This example produces the following output:</span></span>  
  
```xml  
<aw:Child1 xmlns:aw="http://www.adventure-works.com">child one data 1</aw:Child1>  
<aw:Child1 xmlns:aw="http://www.adventure-works.com">child one data 2</aw:Child1>  
<aw:Child1 xmlns:aw="http://www.adventure-works.com">child one data 3</aw:Child1>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>