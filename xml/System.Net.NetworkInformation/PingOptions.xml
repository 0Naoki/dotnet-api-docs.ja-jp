<Type Name="PingOptions" FullName="System.Net.NetworkInformation.PingOptions">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="82ee22961b2b1f6d3ae0e57fa3d12ba29ecd633b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30459636" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PingOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PingOptions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.NetworkInformation.PingOptions" />
  <TypeSignature Language="VB.NET" Value="Public Class PingOptions" />
  <TypeSignature Language="C++ CLI" Value="public ref class PingOptions" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Ping</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="T:System.Net.NetworkInformation.Ping" /> データ パケットの転送方法を制御するために使用します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.NetworkInformation.PingOptions>クラスを提供、<xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>と<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>インターネット制御メッセージ プロトコル (ICMP) エコー要求パケットを転送する方法を制御するプロパティです。  
  
 <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>プロパティを指定して送信されたパケットの Time to Live、<xref:System.Net.NetworkInformation.Ping>クラスです。 この値が転送できるルーティングのノードの数を示す、<xref:System.Net.NetworkInformation.Ping>パケットが破棄されるまでです。 このオプションを設定は、転送の数をテストする場合に便利ですとも呼ばれますホップ数が、対象コンピューターに、ソース コンピュータからのパケットを送信するために必要なです。  
  
 <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>プロパティ コントロール データがリモート ホストに送信するかどうかに分類できます複数のパケットです。  このオプションは、パケットを送信するために使用するゲートウェイ、ルーターの最大転送単位 (MTU) をテストする場合に便利です。  
  
 インスタンス、<xref:System.Net.NetworkInformation.PingOptions>クラスに渡される、<xref:System.Net.NetworkInformation.Ping.Send%2A>と<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>メソッド、および<xref:System.Net.NetworkInformation.PingReply>クラスのインスタンスを返す<xref:System.Net.NetworkInformation.PingOptions>を介して、<xref:System.Net.NetworkInformation.PingReply.Options%2A>プロパティです。  
  
 インスタンスの初期プロパティ値の一覧については<xref:System.Net.NetworkInformation.PingOptions>を参照してください、<xref:System.Net.NetworkInformation.PingOptions.%23ctor%2A>コンス トラクターです。  
  
   
  
## Examples  
 次のコード例では、 <xref:System.Net.NetworkInformation.Ping>、<xref:System.Net.NetworkInformation.PingOptions>と<xref:System.Net.NetworkInformation.PingReply>クラスで ICMP を送信する echo コマンド ラインで指定されたホストに要求します。  
  
 [!code-cpp[NCLPingSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclPingSync/CPP/syncping.cpp#1)]
 [!code-csharp[NCLPingSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclPingSync/CS/syncping.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Net.NetworkInformation.PingOptions" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PingOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.PingOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PingOptions();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Net.NetworkInformation.PingOptions" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 次の表は、のインスタンスの初期プロパティ値を示しています。<xref:System.Net.NetworkInformation.PingOptions>です。  
  
|プロパティ|初期値|  
|--------------|-------------------|  
|<xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>|128|  
|<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>|`false`|  
  
 呼び出す前に新しい値にプロパティを設定することができます<xref:System.Net.NetworkInformation.Ping.Send%2A>または<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>です。  
  
   
  
## Examples  
 次のコード例では、このコンス トラクターを呼び出すことを示します。  
  
 [!code-cpp[NCLPingSync#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclPingSync/CPP/syncping.cpp#2)]
 [!code-csharp[NCLPingSync#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclPingSync/CS/syncping.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PingOptions (int ttl, bool dontFragment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 ttl, bool dontFragment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.PingOptions.#ctor(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ttl As Integer, dontFragment As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PingOptions(int ttl, bool dontFragment);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="ttl" Type="System.Int32" />
        <Parameter Name="dontFragment" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="ttl">
          <see cref="T:System.Net.NetworkInformation.Ping" /> データ パケットを転送できる回数を指定する 1 以上の <see cref="T:System.Int32" /> 値。</param>
        <param name="dontFragment">
          リモート ホストに送信するデータが断片化されないようにするには <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
        <summary>
          <see cref="T:System.Net.NetworkInformation.PingOptions" /> クラスの新しいインスタンスを初期化し、有効期間 (TTL) とフラグメンテーションの値を設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `ttl`パラメーターは、ルーターと、データを転送できるゲートウェイの数を制限します。 これは、ローカルおよびリモート コンピューターの間のルートの長さをテストするために役立ちます。 `dontFragment`パラメーターは最大転送単位 (MTU) をテストするルーターと、パケットを送信するために使用するゲートウェイのことができます。  
  
   
  
## Examples  
 このコンス トラクターを呼び出し、新しいインスタンスのプロパティの値を表示する次のコード例に示します。  
  
 [!code-cpp[NCLPingAsync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclPingAsync/CPP/asyncping.cpp#3)]
 [!code-csharp[NCLPingAsync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclPingAsync/CS/asyncping.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="ttl" /> が 0 以下です。</exception>
      </Docs>
    </Member>
    <Member MemberName="DontFragment">
      <MemberSignature Language="C#" Value="public bool DontFragment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DontFragment" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.PingOptions.DontFragment" />
      <MemberSignature Language="VB.NET" Value="Public Property DontFragment As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DontFragment { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>リモート ホストに送信するデータのフラグメンテーションを制御する <see cref="T:System.Boolean" /> 値を取得または設定します。</summary>
        <value>
          複数のパケットに分けてデータを送信できない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 アプリケーションによってリモート ホストにデータが送信されるかどうかを制御するには、このプロパティを使用して、<xref:System.Net.NetworkInformation.Ping>クラスは、複数のパケットに分けることができます。  このオプションは、パケットを送信するために使用するゲートウェイ、ルーターの最大転送単位 (MTU) をテストする場合に便利です。 このプロパティが場合`true`状態で、ゲートウェイまたは送信者とリモート ホストの間のルーターの MTU、ping 操作が失敗し、リモート ホストに送信するデータが大きい<xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>です。  
  
   
  
## Examples  
 次のコード例では、使用して、このプロパティの値の設定を示します、<xref:System.Net.NetworkInformation.PingOptions.%23ctor%2A>コンス トラクター、および値を表示します。  
  
 [!code-cpp[NCLPingAsync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclPingAsync/CPP/asyncping.cpp#3)]
 [!code-csharp[NCLPingAsync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclPingAsync/CS/asyncping.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Ttl">
      <MemberSignature Language="C#" Value="public int Ttl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Ttl" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.PingOptions.Ttl" />
      <MemberSignature Language="VB.NET" Value="Public Property Ttl As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Ttl { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Net.NetworkInformation.Ping" /> データが破棄される前に、そのデータを転送できるルーティング ノードの数を取得または設定します。</summary>
        <value>
          <see cref="T:System.Int32" /> データ パケットを転送できる回数を指定する <see cref="T:System.Net.NetworkInformation.Ping" /> 値。 既定値は 128 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ゲートウェイとルーターは、ネットワークを経由してパケットを転送するように、パケット ヘッダーで見つかった現在 - Time-to-live (TTL) 値をデクリメントします。 TTL 値はゼロに達すると、パケットが配信不能と見なされる、破棄されます。 このオプションは、ルーターやデータの送信に使用されるゲートウェイの数をテストする場合に便利です。  
  
   
  
## Examples  
 次のコード例では、使用して、このプロパティの値の設定を示します、<xref:System.Net.NetworkInformation.PingOptions.%23ctor%2A>コンス トラクター、および値を表示します。  
  
 [!code-cpp[NCLPingAsync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclPingAsync/CPP/asyncping.cpp#3)]
 [!code-csharp[NCLPingAsync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclPingAsync/CS/asyncping.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">設定操作として指定した値が 0 以下です。</exception>
      </Docs>
    </Member>
  </Members>
</Type>