<Type Name="Ping" FullName="System.Net.NetworkInformation.Ping">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="964d3143e4c0a1054b825d4c6caea94d0f45f70b" />
    <Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="09/22/2018" />
    <Meta Name="ms.locfileid" Value="46597645" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Ping : System.ComponentModel.Component, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Ping extends System.ComponentModel.Component implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.NetworkInformation.Ping" />
  <TypeSignature Language="VB.NET" Value="Public Class Ping&#xA;Inherits Component&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Ping : System::ComponentModel::Component, IDisposable" />
  <TypeSignature Language="F#" Value="type Ping = class&#xA;    inherit Component&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Ping</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.MonoTODO("IPv6 support is missing")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="488fd-101">リモート コンピューターにネットワーク経由でアクセスできるかどうかをアプリケーションで確認できるようにします。</span>
      <span class="sxs-lookup">
        <span data-stu-id="488fd-101">Allows an application to determine whether a remote computer is accessible over the network.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="488fd-102">アプリケーションを使用して、<xref:System.Net.NetworkInformation.Ping>クラスをリモート コンピューターが到達可能かどうかを検出します。</span><span class="sxs-lookup"><span data-stu-id="488fd-102">Applications use the <xref:System.Net.NetworkInformation.Ping> class to detect whether a remote computer is reachable.</span></span>  
  
 <span data-ttu-id="488fd-103">ネットワーク トポロジを決定できるかどうか<xref:System.Net.NetworkInformation.Ping>リモート ホストを正常に接続できます。</span><span class="sxs-lookup"><span data-stu-id="488fd-103">Network topology can determine whether <xref:System.Net.NetworkInformation.Ping> can successfully contact a remote host.</span></span> <span data-ttu-id="488fd-104">プレゼンスとプロキシ、ネットワーク アドレス変換 (NAT) 機器、またはファイアウォールの構成を防ぐことができます<xref:System.Net.NetworkInformation.Ping>が成功します。</span><span class="sxs-lookup"><span data-stu-id="488fd-104">The presence and configuration of proxies, network address translation (NAT) equipment, or firewalls can prevent <xref:System.Net.NetworkInformation.Ping> from succeeding.</span></span> <span data-ttu-id="488fd-105">正常に実行<xref:System.Net.NetworkInformation.Ping>ことを示すだけ、リモート ホストは、ネットワーク上にあることができます。 リモート ホスト (Web サーバー) などの上位レベル サービスの存在が保証されません。</span><span class="sxs-lookup"><span data-stu-id="488fd-105">A successful <xref:System.Net.NetworkInformation.Ping> indicates only that the remote host can be reached on the network; the presence of higher level services (such as a Web server) on the remote host is not guaranteed.</span></span>  
  
 <span data-ttu-id="488fd-106">このクラスは、Ping.exe コマンド ライン ツールと同様の機能を提供します。</span><span class="sxs-lookup"><span data-stu-id="488fd-106">This class provides functionality similar to the Ping.exe command line tool.</span></span> <span data-ttu-id="488fd-107"><xref:System.Net.NetworkInformation.Ping.Send%2A>と<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>メソッドは、そのコンピューターからリモート コンピューターと ICMP エコー応答メッセージを待機するインターネット コントロール メッセージ プロトコル (ICMP) エコー要求メッセージを送信します。</span><span class="sxs-lookup"><span data-stu-id="488fd-107">The <xref:System.Net.NetworkInformation.Ping.Send%2A> and <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> methods send an Internet Control Message Protocol (ICMP) echo request message to a remote computer and waits for an ICMP echo reply message from that computer.</span></span> <span data-ttu-id="488fd-108">ICMP メッセージの詳細については、RFC 792 で使用可能なを参照してください。 [ https://www.ietf.org](https://www.ietf.org/)します。</span><span class="sxs-lookup"><span data-stu-id="488fd-108">For a detailed description of ICMP messages, see RFC 792, available at [https://www.ietf.org](https://www.ietf.org/).</span></span>  
  
 <span data-ttu-id="488fd-109">次の型を使用、<xref:System.Net.NetworkInformation.Ping>クラスであり、以下で詳しく説明します。</span><span class="sxs-lookup"><span data-stu-id="488fd-109">The following types are used with the <xref:System.Net.NetworkInformation.Ping> class and are described in detail below.</span></span>  
  
|<span data-ttu-id="488fd-110">**型名**</span><span class="sxs-lookup"><span data-stu-id="488fd-110">**Type name**</span></span>|<span data-ttu-id="488fd-111">**説明**</span><span class="sxs-lookup"><span data-stu-id="488fd-111">**Description**</span></span>|  
|-------------------|---------------------|  
|<xref:System.Net.NetworkInformation.IPStatus>|<span data-ttu-id="488fd-112">ICMP エコー要求メッセージの結果を説明するステータス コードを定義します。</span><span class="sxs-lookup"><span data-stu-id="488fd-112">Defines status codes that describe the outcome of an ICMP echo request message.</span></span>|  
|<xref:System.Net.NetworkInformation.PingOptions>|<span data-ttu-id="488fd-113">構成すること、または取得が何回要求パケットを制御する設定を転送することができます (<xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>)、断片化かどうかと (<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> )。</span><span class="sxs-lookup"><span data-stu-id="488fd-113">Allows you to configure or retrieve the settings that control how many times the request packet can be forwarded (<xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>), and whether it can be fragmented (<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> ).</span></span>|  
|<xref:System.Net.NetworkInformation.PingReply>|<span data-ttu-id="488fd-114">ICMP エコー要求の結果が含まれています。</span><span class="sxs-lookup"><span data-stu-id="488fd-114">Contains the results of an ICMP echo request.</span></span>|  
|<xref:System.Net.NetworkInformation.PingException>|<span data-ttu-id="488fd-115">回復不可能なエラーが発生した場合にスローされます。</span><span class="sxs-lookup"><span data-stu-id="488fd-115">Thrown if an unrecoverable error occurs.</span></span>|  
|<xref:System.Net.NetworkInformation.PingCompletedEventArgs>|<span data-ttu-id="488fd-116">関連付けられているデータを含む<xref:System.Net.NetworkInformation.Ping.PingCompleted>イベントは、場合に発生します、<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>呼び出しが完了するかは取り消されます。</span><span class="sxs-lookup"><span data-stu-id="488fd-116">Contains the data associated with <xref:System.Net.NetworkInformation.Ping.PingCompleted> events, which are raised when a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> call completes or is canceled.</span></span>|  
|<xref:System.Net.NetworkInformation.PingCompletedEventHandler>|<span data-ttu-id="488fd-117">コールバック メソッドを提供するデリゲートが呼び出されたときに、<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>呼び出しが完了するかは取り消されます。</span><span class="sxs-lookup"><span data-stu-id="488fd-117">The delegate that provides the callback method invoked when a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> call completes or is canceled.</span></span>|  
  
 <span data-ttu-id="488fd-118"><xref:System.Net.NetworkInformation.Ping.Send%2A>と<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>で応答を返し、<xref:System.Net.NetworkInformation.PingReply>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="488fd-118">The <xref:System.Net.NetworkInformation.Ping.Send%2A> and <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> methods return the reply in a <xref:System.Net.NetworkInformation.PingReply> object.</span></span> <span data-ttu-id="488fd-119"><xref:System.Net.NetworkInformation.PingReply.Status%2A?displayProperty=nameWithType>プロパティが返す、<xref:System.Net.NetworkInformation.IPStatus>を要求の結果を示す値。</span><span class="sxs-lookup"><span data-stu-id="488fd-119">The <xref:System.Net.NetworkInformation.PingReply.Status%2A?displayProperty=nameWithType> property returns an <xref:System.Net.NetworkInformation.IPStatus> value to indicate the outcome of the request.</span></span>  
  
 <span data-ttu-id="488fd-120">要求を送信する場合は、リモート コンピューターを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="488fd-120">When sending the request, you must specify the remote computer.</span></span> <span data-ttu-id="488fd-121">ホスト名の文字列、文字列の形式で IP アドレスを提供することでこれを行う、または<xref:System.Net.IPAddress>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="488fd-121">You can do this by providing a host name string, an IP address in string format, or an <xref:System.Net.IPAddress> object.</span></span>  
  
 <span data-ttu-id="488fd-122">情報の種類は、次のいずれかを指定することもできます。</span><span class="sxs-lookup"><span data-stu-id="488fd-122">You can also specify any of the following types of information:</span></span>  
  
-   <span data-ttu-id="488fd-123">要求に付随するデータ。</span><span class="sxs-lookup"><span data-stu-id="488fd-123">Data to accompany the request.</span></span> <span data-ttu-id="488fd-124">指定する`buffer`特定のサイズのパケットのリモート ホストとネットワーク パスの最大転送単位を移動するために必要な時間を学習することができます。</span><span class="sxs-lookup"><span data-stu-id="488fd-124">Specifying `buffer` allows you to learn the amount of time required for a packet of a particular size to travel to and from the remote host and the maximum transmission unit of the network path.</span></span> <span data-ttu-id="488fd-125">(を参照してください、<xref:System.Net.NetworkInformation.Ping.Send%2A>または<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>を受け取るオーバー ロードを`buffer`パラメーターです)。</span><span class="sxs-lookup"><span data-stu-id="488fd-125">(See the <xref:System.Net.NetworkInformation.Ping.Send%2A> or <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> overloads that take a `buffer` parameter.)</span></span>  
  
-   <span data-ttu-id="488fd-126">かどうか、ICMP Echo パケットの場合は、転送中に断片化されていることができます。</span><span class="sxs-lookup"><span data-stu-id="488fd-126">Whether the ICMP Echo packet can be fragmented in transit.</span></span> <span data-ttu-id="488fd-127">(を参照してください、<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>プロパティおよび<xref:System.Net.NetworkInformation.Ping.Send%2A>または<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>を受け取るオーバー ロードを`options`パラメーターです)。</span><span class="sxs-lookup"><span data-stu-id="488fd-127">(See the <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> property and the <xref:System.Net.NetworkInformation.Ping.Send%2A> or <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> overloads that take an `options` parameter.)</span></span>  
  
-   <span data-ttu-id="488fd-128">回数ルーティング ノードなど、移行先コンピューターに到達したかは破棄されます前に、ルーターまたはゲートウェイをすると、パケットが転送することができます。</span><span class="sxs-lookup"><span data-stu-id="488fd-128">How many times routing nodes, such as routers or gateways, can forward the packet before it either reaches the destination computer or is discarded.</span></span> <span data-ttu-id="488fd-129">(を参照してください<xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>と<xref:System.Net.NetworkInformation.Ping.Send%2A>または<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>を受け取るオーバー ロードを`options`パラメーターです)。</span><span class="sxs-lookup"><span data-stu-id="488fd-129">(See <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> and the <xref:System.Net.NetworkInformation.Ping.Send%2A> or <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> overloads that take an `options` parameter.)</span></span>  
  
-   <span data-ttu-id="488fd-130">時間制限を応答を受信する必要があります。</span><span class="sxs-lookup"><span data-stu-id="488fd-130">The time limit within which the reply must be received.</span></span> <span data-ttu-id="488fd-131">(を参照してください、<xref:System.Net.NetworkInformation.Ping.Send%2A>または<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>を受け取るオーバー ロードを`timeout`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="488fd-131">(See the <xref:System.Net.NetworkInformation.Ping.Send%2A> or <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> overloads that take a `timeout` parameter.</span></span>  
  
 <span data-ttu-id="488fd-132"><xref:System.Net.NetworkInformation.Ping>クラスは、要求を送信するための同期および非同期のメソッドを提供します。</span><span class="sxs-lookup"><span data-stu-id="488fd-132">The <xref:System.Net.NetworkInformation.Ping> class offers both synchronous and asynchronous methods for sending the request.</span></span> <span data-ttu-id="488fd-133">場合は、アプリケーションは、応答を待機しているときにブロックする必要がありますを使用して、<xref:System.Net.NetworkInformation.Ping.Send%2A>メソッドはこれらのメソッドは同期的です。</span><span class="sxs-lookup"><span data-stu-id="488fd-133">If your application should block while waiting for a reply, use the <xref:System.Net.NetworkInformation.Ping.Send%2A> methods; these methods are synchronous.</span></span> <span data-ttu-id="488fd-134">場合は、アプリケーションをブロックしないでくださいを使用して、非同期<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="488fd-134">If your application should not block, use the asynchronous <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> methods.</span></span> <span data-ttu-id="488fd-135">呼び出し<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>スレッド プールから自動的に割り当てられている独自のスレッドで実行します。</span><span class="sxs-lookup"><span data-stu-id="488fd-135">A call to <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> executes in its own thread that is automatically allocated from the thread pool.</span></span> <span data-ttu-id="488fd-136">非同期操作が完了したら、生成、<xref:System.Net.NetworkInformation.Ping.PingCompleted>イベント。</span><span class="sxs-lookup"><span data-stu-id="488fd-136">When the asynchronous operation completes, it raises the <xref:System.Net.NetworkInformation.Ping.PingCompleted> event.</span></span> <span data-ttu-id="488fd-137">アプリケーションを使用して、<xref:System.Net.NetworkInformation.PingCompletedEventHandler>に呼び出されるメソッドを指定するデリゲート<xref:System.Net.NetworkInformation.Ping.PingCompleted>イベント。</span><span class="sxs-lookup"><span data-stu-id="488fd-137">Applications use a <xref:System.Net.NetworkInformation.PingCompletedEventHandler> delegate to specify the method that is called for <xref:System.Net.NetworkInformation.Ping.PingCompleted> events.</span></span> <span data-ttu-id="488fd-138">追加する必要があります、<xref:System.Net.NetworkInformation.PingCompletedEventHandler>デリゲートを呼び出す前にイベント<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>します。</span><span class="sxs-lookup"><span data-stu-id="488fd-138">You must add a <xref:System.Net.NetworkInformation.PingCompletedEventHandler> delegate to the event before calling <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</span></span> <span data-ttu-id="488fd-139">デリゲートのメソッドは受信、<xref:System.Net.NetworkInformation.PingCompletedEventArgs>を含むオブジェクトを<xref:System.Net.NetworkInformation.PingReply>の結果を記述するオブジェクト、<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="488fd-139">The delegate's method receives a <xref:System.Net.NetworkInformation.PingCompletedEventArgs> object that contains a <xref:System.Net.NetworkInformation.PingReply> object that describes the result of the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> call.</span></span>  
  
 <span data-ttu-id="488fd-140">同じインスタンスを使用することはできません、<xref:System.Net.NetworkInformation.Ping>クラスで複数の同時 ICMP エコー要求を生成します。</span><span class="sxs-lookup"><span data-stu-id="488fd-140">You cannot use the same instance of the <xref:System.Net.NetworkInformation.Ping> class to generate multiple simultaneous ICMP Echo requests.</span></span> <span data-ttu-id="488fd-141">呼び出す<xref:System.Net.NetworkInformation.Ping.Send%2A>中に、<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>呼び出しが進行中または呼び出し元<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>何度も以前のすべての呼び出しがエラーの原因を完了する前に、<xref:System.InvalidOperationException>します。</span><span class="sxs-lookup"><span data-stu-id="488fd-141">Calling <xref:System.Net.NetworkInformation.Ping.Send%2A> while a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> call is in progress or calling <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> multiple times before all previous calls have completed causes an <xref:System.InvalidOperationException>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="488fd-142">次のコード例に示しますを使用して、<xref:System.Net.NetworkInformation.Ping>クラスを同期的にします。</span><span class="sxs-lookup"><span data-stu-id="488fd-142">The following code example demonstrates using the <xref:System.Net.NetworkInformation.Ping> class synchronously.</span></span>  
  
 [!code-cpp[NCLPingSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclPingSync/CPP/syncping.cpp#1)]
 [!code-csharp[NCLPingSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclPingSync/CS/syncping.cs#1)]  
  
 <span data-ttu-id="488fd-143">次のコード例に示しますを使用して、<xref:System.Net.NetworkInformation.Ping>クラスを非同期的にします。</span><span class="sxs-lookup"><span data-stu-id="488fd-143">The following code example demonstrates using the <xref:System.Net.NetworkInformation.Ping> class asynchronously.</span></span>  
  
 [!code-cpp[NCLPingASync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclPingAsync/CPP/asyncping.cpp#1)]
 [!code-csharp[NCLPingASync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclPingAsync/CS/asyncping.cs#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/framework/network-programming/how-to-ping-a-host.md">
      <span data-ttu-id="488fd-144">方法: ホストに対して ping を実行</span>
      <span class="sxs-lookup">
        <span data-stu-id="488fd-144">How to: Ping a Host</span>
      </span>
    </related>
    <related type="Article" href="~/docs/framework/network-programming/index.md">
      <span data-ttu-id="488fd-145">.NET Framework のネットワーク プログラミング</span>
      <span class="sxs-lookup">
        <span data-stu-id="488fd-145">Network Programming in the .NET Framework</span>
      </span>
    </related>
    <related type="Article" href="~/docs/framework/network-programming/network-programming-samples.md">
      <span data-ttu-id="488fd-146">ネットワーク プログラミングのサンプル</span>
      <span class="sxs-lookup">
        <span data-stu-id="488fd-146">Network Programming Samples</span>
      </span>
    </related>
    <related type="Article" href="~/docs/framework/network-programming/networkinformation.md">
      <span data-ttu-id="488fd-147">NetworkInformation</span>
      <span class="sxs-lookup">
        <span data-stu-id="488fd-147">NetworkInformation</span>
      </span>
    </related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Ping ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Ping();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="488fd-148">
            <see cref="T:System.Net.NetworkInformation.Ping" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-148">Initializes a new instance of the <see cref="T:System.Net.NetworkInformation.Ping" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="488fd-149">作成する次のコード例に示します、<xref:System.Net.NetworkInformation.Ping>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="488fd-149">The following code example demonstrates creating a <xref:System.Net.NetworkInformation.Ping> instance.</span></span> <span data-ttu-id="488fd-150">完全な例は、<xref:System.Net.NetworkInformation.Ping>クラスの概要。</span><span class="sxs-lookup"><span data-stu-id="488fd-150">The complete example is available in the <xref:System.Net.NetworkInformation.Ping> class overview.</span></span>  
  
 [!code-cpp[NCLPingAsync#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclPingAsync/CPP/asyncping.cpp#2)]
 [!code-csharp[NCLPingAsync#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclPingAsync/CS/asyncping.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="ping.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="ping.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="488fd-151">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-151">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to releases only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="488fd-152">
            <see cref="T:System.Net.NetworkInformation.Ping" /> オブジェクトによって使用されているアンマネージド リソースを解放します。オプションとして、マネージド リソースを破棄することもできます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-152">Releases the unmanaged resources used by the <see cref="T:System.Net.NetworkInformation.Ping" /> object, and optionally disposes of the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="488fd-153">このメソッドは、パブリック`Dispose()`メソッドと<xref:System.ComponentModel.Component.Finalize%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="488fd-153">This method is called by the public `Dispose()` method and the <xref:System.ComponentModel.Component.Finalize%2A> method.</span></span> <span data-ttu-id="488fd-154">パブリック`Dispose()`メソッドは、保護された<xref:System.Net.NetworkInformation.Ping.Dispose%2A>メソッドを`disposing`パラメーターに設定`true`します。</span><span class="sxs-lookup"><span data-stu-id="488fd-154">The public `Dispose()` method invokes the protected <xref:System.Net.NetworkInformation.Ping.Dispose%2A> method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="488fd-155"><xref:System.ComponentModel.Component.Finalize%2A> 呼び出す`Dispose`で`disposing`に設定`false`します。</span><span class="sxs-lookup"><span data-stu-id="488fd-155"><xref:System.ComponentModel.Component.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="488fd-156">ときに、`disposing`パラメーターが`true`、このメソッドは、すべてのマネージ オブジェクトによって保持されているすべてのリソースを解放します。 この<xref:System.Net.NetworkInformation.Ping>オブジェクト参照。</span><span class="sxs-lookup"><span data-stu-id="488fd-156">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Net.NetworkInformation.Ping> object references.</span></span> <span data-ttu-id="488fd-157">このメソッドは、参照される各オブジェクトの `Dispose()` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="488fd-157">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPingCompleted">
      <MemberSignature Language="C#" Value="protected void OnPingCompleted (System.Net.NetworkInformation.PingCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnPingCompleted(class System.Net.NetworkInformation.PingCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.OnPingCompleted(System.Net.NetworkInformation.PingCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnPingCompleted (e As PingCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnPingCompleted(System::Net::NetworkInformation::PingCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.OnPingCompleted : System.Net.NetworkInformation.PingCompletedEventArgs -&gt; unit" Usage="ping.OnPingCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.NetworkInformation.PingCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="488fd-158">イベント データを格納している <see cref="T:System.Net.NetworkInformation.PingCompletedEventArgs" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-158">A <see cref="T:System.Net.NetworkInformation.PingCompletedEventArgs" /> object that contains event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="488fd-159">
            <see cref="E:System.Net.NetworkInformation.Ping.PingCompleted" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-159">Raises the <see cref="E:System.Net.NetworkInformation.Ping.PingCompleted" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="488fd-160">継承するクラス、<xref:System.Net.NetworkInformation.Ping>クラスに含まれるデータのログ記録などの他のタスクを実行するには、このメソッドをオーバーライド、`e`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="488fd-160">Classes that inherit from the <xref:System.Net.NetworkInformation.Ping> class can override this method to perform additional tasks, such as logging the data contained in the `e` parameter.</span></span>  
  
 <span data-ttu-id="488fd-161">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="488fd-161">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="488fd-162">詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="488fd-162">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="488fd-163"><xref:System.Net.NetworkInformation.Ping.OnPingCompleted%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="488fd-163">The <xref:System.Net.NetworkInformation.Ping.OnPingCompleted%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="488fd-164">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="488fd-164">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="488fd-165">オーバーライドするときに<see cref="M:System.Net.NetworkInformation.Ping.OnPingCompleted(System.Net.NetworkInformation.PingCompletedEventArgs)" />、派生クラスでは、基本クラスを呼び出す、<see cref="M:System.Net.NetworkInformation.Ping.OnPingCompleted(System.Net.NetworkInformation.PingCompletedEventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="488fd-165">When overriding <see cref="M:System.Net.NetworkInformation.Ping.OnPingCompleted(System.Net.NetworkInformation.PingCompletedEventArgs)" /> in a derived class, be sure to call the base class’s <see cref="M:System.Net.NetworkInformation.Ping.OnPingCompleted(System.Net.NetworkInformation.PingCompletedEventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="PingCompleted">
      <MemberSignature Language="C#" Value="public event System.Net.NetworkInformation.PingCompletedEventHandler PingCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.NetworkInformation.PingCompletedEventHandler PingCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.NetworkInformation.Ping.PingCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PingCompleted As PingCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Net::NetworkInformation::PingCompletedEventHandler ^ PingCompleted;" />
      <MemberSignature Language="F#" Value="member this.PingCompleted : System.Net.NetworkInformation.PingCompletedEventHandler " Usage="member this.PingCompleted : System.Net.NetworkInformation.PingCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.PingCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="488fd-166">非同期の操作が ICMP (インターネット制御メッセージ プロトコル) エコー メッセージを送信し、対応する ICMP エコー応答メッセージの受信を完了するか、またはキャンセルされたときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-166">Occurs when an asynchronous operation to send an Internet Control Message Protocol (ICMP) echo message and receive the corresponding ICMP echo reply message completes or is canceled.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="488fd-167">アプリケーションを使用して、<xref:System.Net.NetworkInformation.Ping.PingCompleted>の 1 つの呼び出しによって完了の状態とデータに関する情報を取得するイベントが収集された、<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="488fd-167">Applications use the <xref:System.Net.NetworkInformation.Ping.PingCompleted> event to get information about the completion status and data collected by a call to one of the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> methods.</span></span> <span data-ttu-id="488fd-168"><xref:System.Net.NetworkInformation.PingCompletedEventHandler>デリゲートの呼び出しは、バック メソッドが呼び出されたときに<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>このイベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="488fd-168">The <xref:System.Net.NetworkInformation.PingCompletedEventHandler> delegate provides the call back method invoked when <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> raises this event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="488fd-169">次のコード例に示しますをコールバック メソッドを指定する、<xref:System.Net.NetworkInformation.Ping.PingCompleted>イベント。</span><span class="sxs-lookup"><span data-stu-id="488fd-169">The following code example demonstrates specifying a callback method for the <xref:System.Net.NetworkInformation.Ping.PingCompleted> event.</span></span> <span data-ttu-id="488fd-170">完全な例は、<xref:System.Net.NetworkInformation.Ping>クラスの概要。</span><span class="sxs-lookup"><span data-stu-id="488fd-170">The complete example is available in the <xref:System.Net.NetworkInformation.Ping> class overview.</span></span>  
  
 [!code-cpp[NCLPingAsync#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclPingAsync/CPP/asyncping.cpp#2)]
 [!code-csharp[NCLPingAsync#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclPingAsync/CS/asyncping.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Send">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="488fd-171">ICMP (インターネット制御メッセージ プロトコル) エコー メッセージをリモート コンピューターに送信し、そのリモート コンピューターから対応する ICMP エコー応答メッセージを受信します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-171">Attempts to send an Internet Control Message Protocol (ICMP) echo message to a remote computer and receive a corresponding ICMP echo reply message from the remote computer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="488fd-172">いずれかで返された IP アドレス、<xref:System.Net.NetworkInformation.Ping.Send%2A>オーバー ロードは、悪意のあるリモート コンピューターから取得できます。</span><span class="sxs-lookup"><span data-stu-id="488fd-172">The IP address returned by any of the <xref:System.Net.NetworkInformation.Ping.Send%2A> overloads can originate from a malicious remote computer.</span></span> <span data-ttu-id="488fd-173">これを使用してリモート コンピューターに接続できません。</span><span class="sxs-lookup"><span data-stu-id="488fd-173">Do not connect to the remote computer using this.</span></span> <span data-ttu-id="488fd-174">接続するコンピューターの IP アドレスを確認するのにには、DNS を使用します。</span><span class="sxs-lookup"><span data-stu-id="488fd-174">Use DNS to determine the IP address of the machine to which you want to connect.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public System.Net.NetworkInformation.PingReply Send (System.Net.IPAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.NetworkInformation.PingReply Send(class System.Net.IPAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Function Send (address As IPAddress) As PingReply" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::NetworkInformation::PingReply ^ Send(System::Net::IPAddress ^ address);" />
      <MemberSignature Language="F#" Value="member this.Send : System.Net.IPAddress -&gt; System.Net.NetworkInformation.PingReply" Usage="ping.Send address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.PingReply</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="488fd-175">ICMP エコー メッセージの送信先コンピューターを識別する <see cref="T:System.Net.IPAddress" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-175">An <see cref="T:System.Net.IPAddress" /> that identifies the computer that is the destination for the ICMP echo message.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="488fd-176">指定した <see cref="T:System.Net.IPAddress" /> を持つコンピューターに ICMP (インターネット制御メッセージ プロトコル) エコー メッセージを送信し、そのコンピューターから対応する ICMP エコー応答メッセージを受信します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-176">Attempts to send an Internet Control Message Protocol (ICMP) echo message to the computer that has the specified <see cref="T:System.Net.IPAddress" />, and receive a corresponding ICMP echo reply message from that computer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="488fd-177">ICMP エコー応答メッセージが受信された場合は、そのメッセージに関する情報を提供し、メッセージが受信されなかった場合は、エラー原因の説明を提供する <see cref="T:System.Net.NetworkInformation.PingReply" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-177">A <see cref="T:System.Net.NetworkInformation.PingReply" /> object that provides information about the ICMP echo reply message, if one was received, or describes the reason for the failure if no message was received.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="488fd-178">このメソッドで指定されているホストに送信`address`32 <xref:System.Byte> ICMP エコー メッセージを含むデータ バッファー。</span><span class="sxs-lookup"><span data-stu-id="488fd-178">This method sends to the host that is specified by `address` a 32 <xref:System.Byte> data buffer with the ICMP echo message.</span></span> <span data-ttu-id="488fd-179">メソッドは、ICMP エコー応答メッセージを 5 秒間待機します。</span><span class="sxs-lookup"><span data-stu-id="488fd-179">The method waits five seconds for an ICMP echo reply message.</span></span> <span data-ttu-id="488fd-180">かどうかを受け取らず、応答時間の中で、メソッドを返します、<xref:System.Net.NetworkInformation.PingReply.Status%2A>プロパティに設定されて<xref:System.Net.NetworkInformation.IPStatus.TimedOut>します。</span><span class="sxs-lookup"><span data-stu-id="488fd-180">If it does not receive a reply in that time, the method returns and the <xref:System.Net.NetworkInformation.PingReply.Status%2A> property is set to <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.</span></span>  
  
 <span data-ttu-id="488fd-181">このオーバー ロードは、パケットのフラグメンテーションとパケットの転送の既定の設定を使用します。</span><span class="sxs-lookup"><span data-stu-id="488fd-181">This overload uses default settings for packet fragmentation and packet forwarding.</span></span> <span data-ttu-id="488fd-182">ICMP エコー メッセージを含むパケットをフラグメント化する転送中パケットの合計サイズが送信できる最大パケット サイズを超える場合、ローカルおよびリモート コンピューター間のルーティング ノードのいずれかでします。</span><span class="sxs-lookup"><span data-stu-id="488fd-182">The packet that contains the ICMP echo message can be fragmented in transit if the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers.</span></span> <span data-ttu-id="488fd-183">断片化を防ぐためには、いずれかの操作を使用して、<xref:System.Net.NetworkInformation.Ping.Send%2A>を受け取るメソッドを`options`パラメーター、およびセット、<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>プロパティを`true`します。</span><span class="sxs-lookup"><span data-stu-id="488fd-183">To prevent fragmentation, use one of the <xref:System.Net.NetworkInformation.Ping.Send%2A> methods that takes an `options` parameter, and set the <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> property to `true`.</span></span> <span data-ttu-id="488fd-184">ときに<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>は`true`とパケットの合計サイズが、ローカルおよびリモート コンピューター間のルーティング ノードのいずれかで送信できる最大パケット サイズを超える、ICMP エコー要求は失敗します。</span><span class="sxs-lookup"><span data-stu-id="488fd-184">When <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> is `true` and the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers, the ICMP echo request fails.</span></span> <span data-ttu-id="488fd-185">この場合、<xref:System.Net.NetworkInformation.PingReply.Status%2A>に設定されている<xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>します。</span><span class="sxs-lookup"><span data-stu-id="488fd-185">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>.</span></span> <span data-ttu-id="488fd-186">パケットまたはパケットのフラグメント (断片化) する場合は、破棄される前に、ルーティングのノードで 128 回転送されます。</span><span class="sxs-lookup"><span data-stu-id="488fd-186">The packet or packet fragments (if fragmented) can be forwarded by routing nodes 128 times before being discarded.</span></span> <span data-ttu-id="488fd-187">この設定を変更するには、使用、<xref:System.Net.NetworkInformation.Ping.Send%2A>を受け取るオーバー ロードを`options`パラメーター、およびセット、<xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>プロパティを目的の値にします。</span><span class="sxs-lookup"><span data-stu-id="488fd-187">To change this setting, use a <xref:System.Net.NetworkInformation.Ping.Send%2A> overload that takes an `options` parameter, and set the <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> property to the desired value.</span></span> <span data-ttu-id="488fd-188">パケットは、送信先を指定した回数だけが転送される後に到達しなかった場合は、パケットは破棄され、ICMP エコー要求は失敗します。</span><span class="sxs-lookup"><span data-stu-id="488fd-188">If the packet does not reach its destination after being forwarded the specified number of times, the packet is discarded and the ICMP echo request fails.</span></span> <span data-ttu-id="488fd-189">この場合、<xref:System.Net.NetworkInformation.PingReply.Status%2A>に設定されている<xref:System.Net.NetworkInformation.IPStatus.TtlExpired>します。</span><span class="sxs-lookup"><span data-stu-id="488fd-189">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="488fd-190">次のコード例では、このメソッドの呼び出しを示しています。</span><span class="sxs-lookup"><span data-stu-id="488fd-190">The following code example demonstrates calling this method.</span></span>  
  
 [!code-cpp[NCLPingSampler#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLPingSampler/CPP/pingtest.cpp#3)]
 [!code-csharp[NCLPingSampler#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPingSampler/CS/pingtest.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="488fd-191">
            <paramref name="address" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-191">
              <paramref name="address" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="488fd-192">
            <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> の呼び出しを実行中です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-192">A call to <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> is in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="488fd-193">
            <paramref name="address" /> は IPv6 アドレスですが、ローカル コンピューターでは Windows 2000 より前のオペレーティング システムが動作しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-193">
              <paramref name="address" /> is an IPv6 address and the local computer is running an operating system earlier than Windows 2000.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">
          <span data-ttu-id="488fd-194">ICMP メッセージの送信中または受信中に例外がスローされました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-194">An exception was thrown while sending or receiving the ICMP messages.</span>
          </span>
          <span data-ttu-id="488fd-195">スローされた実際の例外については内部例外を参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-195">See the inner exception for the exact exception that was thrown.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="488fd-196">このオブジェクトは破棄されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-196">This object has been disposed.</span>
          </span>
        </exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">
          <span data-ttu-id="488fd-197">ICMP エコー メッセージを送信します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-197">To send an ICMP echo message.</span>
          </span>
          <span data-ttu-id="488fd-198">関連付けられた列挙体。 <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-198">Associated enumeration: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public System.Net.NetworkInformation.PingReply Send (string hostNameOrAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.NetworkInformation.PingReply Send(string hostNameOrAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.Send(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Send (hostNameOrAddress As String) As PingReply" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::NetworkInformation::PingReply ^ Send(System::String ^ hostNameOrAddress);" />
      <MemberSignature Language="F#" Value="member this.Send : string -&gt; System.Net.NetworkInformation.PingReply" Usage="ping.Send hostNameOrAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.PingReply</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">
          <span data-ttu-id="488fd-199">ICMP エコー メッセージの送信先コンピューターを識別する <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-199">A <see cref="T:System.String" /> that identifies the computer that is the destination for the ICMP echo message.</span>
          </span>
          <span data-ttu-id="488fd-200">このパラメーターの値には、ホスト名または IP アドレスの文字列形式を指定できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-200">The value specified for this parameter can be a host name or a string representation of an IP address.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="488fd-201">ICMP (インターネット制御メッセージ プロトコル) エコー メッセージを指定されたコンピューターに送信し、そのコンピューターから対応する ICMP エコー応答メッセージを受信します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-201">Attempts to send an Internet Control Message Protocol (ICMP) echo message to the specified computer, and receive a corresponding ICMP echo reply message from that computer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="488fd-202">ICMP エコー応答メッセージが受信された場合は、そのメッセージに関する情報を提供し、メッセージが受信されなかった場合は、エラーの原因を提供する <see cref="T:System.Net.NetworkInformation.PingReply" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-202">A <see cref="T:System.Net.NetworkInformation.PingReply" /> object that provides information about the ICMP echo reply message, if one was received, or provides the reason for the failure, if no message was received.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="488fd-203">このメソッドは、32 <xref:System.Byte> ICMP エコー メッセージを含むデータ バッファー。</span><span class="sxs-lookup"><span data-stu-id="488fd-203">This method sends a 32 <xref:System.Byte> data buffer with the ICMP echo message.</span></span> <span data-ttu-id="488fd-204">メソッドは、ICMP エコー応答メッセージを 5 秒間待機します。</span><span class="sxs-lookup"><span data-stu-id="488fd-204">The method waits five seconds for an ICMP echo reply message.</span></span> <span data-ttu-id="488fd-205">かどうかを受け取らず、応答時間の中で、メソッドを返します、<xref:System.Net.NetworkInformation.PingReply.Status%2A>プロパティに設定されて<xref:System.Net.NetworkInformation.IPStatus.TimedOut>します。</span><span class="sxs-lookup"><span data-stu-id="488fd-205">If it does not receive a reply in that time, the method returns and the <xref:System.Net.NetworkInformation.PingReply.Status%2A> property is set to <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.</span></span>  
  
 <span data-ttu-id="488fd-206">このオーバー ロードは、パケットのフラグメンテーションとパケットの転送の既定の設定を使用します。</span><span class="sxs-lookup"><span data-stu-id="488fd-206">This overload uses default settings for packet fragmentation and packet forwarding.</span></span> <span data-ttu-id="488fd-207">ICMP エコー メッセージを含むパケットをフラグメント化する転送中パケットの合計サイズが送信できる最大パケット サイズを超える場合、ローカルおよびリモート コンピューター間のルーティング ノードのいずれかでします。</span><span class="sxs-lookup"><span data-stu-id="488fd-207">The packet that contains the ICMP echo message can be fragmented in transit if the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers.</span></span> <span data-ttu-id="488fd-208">断片化を防ぐためには、いずれかの操作を使用して、<xref:System.Net.NetworkInformation.Ping.Send%2A>を受け取るメソッドを`options`パラメーター、およびセット、<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>プロパティを`true`します。</span><span class="sxs-lookup"><span data-stu-id="488fd-208">To prevent fragmentation, use one of the <xref:System.Net.NetworkInformation.Ping.Send%2A> methods that takes an `options` parameter, and set the <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> property to `true`.</span></span> <span data-ttu-id="488fd-209">ときに<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>は`true`とパケットの合計サイズが、ローカルおよびリモート コンピューター間のルーティング ノードのいずれかで送信できる最大パケット サイズを超える、ICMP エコー要求は失敗します。</span><span class="sxs-lookup"><span data-stu-id="488fd-209">When <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> is `true` and the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers, the ICMP echo request fails.</span></span> <span data-ttu-id="488fd-210">この場合、<xref:System.Net.NetworkInformation.PingReply.Status%2A>に設定されている<xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>します。</span><span class="sxs-lookup"><span data-stu-id="488fd-210">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>.</span></span> <span data-ttu-id="488fd-211">パケットまたはパケットのフラグメント (断片化) する場合は、破棄される前に、ルーティングのノードで 128 回転送されます。</span><span class="sxs-lookup"><span data-stu-id="488fd-211">The packet or packet fragments (if fragmented) can be forwarded by routing nodes 128 times before being discarded.</span></span> <span data-ttu-id="488fd-212">この設定を変更するには、使用、<xref:System.Net.NetworkInformation.Ping.Send%2A>を受け取るオーバー ロードを`options`パラメーター、およびセット、<xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>プロパティを目的の値にします。</span><span class="sxs-lookup"><span data-stu-id="488fd-212">To change this setting, use a <xref:System.Net.NetworkInformation.Ping.Send%2A> overload that takes an `options` parameter, and set the <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> property to the desired value.</span></span> <span data-ttu-id="488fd-213">パケットは、送信先を指定した回数だけが転送される後に到達しなかった場合は、パケットは破棄され、ICMP エコー要求は失敗します。</span><span class="sxs-lookup"><span data-stu-id="488fd-213">If the packet does not reach its destination after being forwarded the specified number of times, the packet is discarded and the ICMP echo request fails.</span></span> <span data-ttu-id="488fd-214">この場合、<xref:System.Net.NetworkInformation.PingReply.Status%2A>に設定されている<xref:System.Net.NetworkInformation.IPStatus.TtlExpired>します。</span><span class="sxs-lookup"><span data-stu-id="488fd-214">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="488fd-215">次のコード例では、このメソッドの呼び出しを示しています。</span><span class="sxs-lookup"><span data-stu-id="488fd-215">The following code example demonstrates calling this method.</span></span>  
  
 [!code-cpp[NCLPingSampler#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLPingSampler/CPP/pingtest.cpp#2)]
 [!code-csharp[NCLPingSampler#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPingSampler/CS/pingtest.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="488fd-216">
            <paramref name="hostNameOrAddress" /> が <see langword="null" /> または空の文字列 ("") です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-216">
              <paramref name="hostNameOrAddress" /> is <see langword="null" /> or is an empty string ("").</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="488fd-217">
            <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> の呼び出しを実行中です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-217">A call to <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> is in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="488fd-218">
            <paramref name="address" /> は IPv6 アドレスですが、ローカル コンピューターでは Windows 2000 より前のオペレーティング システムが動作しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-218">
              <paramref name="address" /> is an IPv6 address and the local computer is running an operating system earlier than Windows 2000.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">
          <span data-ttu-id="488fd-219">ICMP メッセージの送信中または受信中に例外がスローされました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-219">An exception was thrown while sending or receiving the ICMP messages.</span>
          </span>
          <span data-ttu-id="488fd-220">スローされた実際の例外については内部例外を参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-220">See the inner exception for the exact exception that was thrown.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="488fd-221">このオブジェクトは破棄されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-221">This object has been disposed.</span>
          </span>
        </exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">
          <span data-ttu-id="488fd-222">ICMP エコー メッセージを送信します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-222">To send an ICMP echo message.</span>
          </span>
          <span data-ttu-id="488fd-223">関連付けられた列挙体。 <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-223">Associated enumeration: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public System.Net.NetworkInformation.PingReply Send (System.Net.IPAddress address, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.NetworkInformation.PingReply Send(class System.Net.IPAddress address, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Send (address As IPAddress, timeout As Integer) As PingReply" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::NetworkInformation::PingReply ^ Send(System::Net::IPAddress ^ address, int timeout);" />
      <MemberSignature Language="F#" Value="member this.Send : System.Net.IPAddress * int -&gt; System.Net.NetworkInformation.PingReply" Usage="ping.Send (address, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.PingReply</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="488fd-224">ICMP エコー メッセージの送信先コンピューターを識別する <see cref="T:System.Net.IPAddress" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-224">An <see cref="T:System.Net.IPAddress" /> that identifies the computer that is the destination for the ICMP echo message.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="488fd-225">エコー メッセージを送信してから ICMP エコー応答メッセージを待つ時間の最大値 (ミリ秒単位) を指定する <see cref="T:System.Int32" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-225">An <see cref="T:System.Int32" /> value that specifies the maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="488fd-226">指定された <see cref="T:System.Net.IPAddress" /> を持つコンピューターに、指定されたデータ バッファーと共に ICMP (インターネット制御メッセージ プロトコル) エコー メッセージを送信し、そのコンピューターから対応する ICMP エコー応答メッセージを受信します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-226">Attempts to send an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the computer that has the specified <see cref="T:System.Net.IPAddress" />, and receive a corresponding ICMP echo reply message from that computer.</span>
          </span>
          <span data-ttu-id="488fd-227">このメソッドを使用して、操作のタイムアウト値を指定できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-227">This method allows you to specify a time-out value for the operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="488fd-228">ICMP エコー応答メッセージが受信された場合は、そのメッセージに関する情報を提供し、メッセージが受信されなかった場合は、エラーの原因を提供する <see cref="T:System.Net.NetworkInformation.PingReply" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-228">A <see cref="T:System.Net.NetworkInformation.PingReply" /> object that provides information about the ICMP echo reply message if one was received, or provides the reason for the failure if no message was received.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="488fd-229">指定された時間内では、ICMP エコー応答メッセージが受信されない場合、`timeout`パラメーター、ICMP エコー失敗した場合、および<xref:System.Net.NetworkInformation.PingReply.Status%2A>プロパティに設定されて<xref:System.Net.NetworkInformation.IPStatus.TimedOut>します。</span><span class="sxs-lookup"><span data-stu-id="488fd-229">If the ICMP echo reply message is not received within the time specified in the `timeout` parameter, the ICMP echo fails, and the <xref:System.Net.NetworkInformation.PingReply.Status%2A> property is set to <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="488fd-230">非常に小さな数値を指定するときに`timeout`、Ping の応答を受信できる場合でも`timeout`経過時間 (ミリ秒)。</span><span class="sxs-lookup"><span data-stu-id="488fd-230">When specifying very small numbers for `timeout`, the Ping reply can be received even if `timeout` milliseconds have elapsed.</span></span>  
  
 <span data-ttu-id="488fd-231">このオーバー ロードは、パケットのフラグメンテーションとパケットの転送の既定の設定を使用します。</span><span class="sxs-lookup"><span data-stu-id="488fd-231">This overload uses default settings for packet fragmentation and packet forwarding.</span></span> <span data-ttu-id="488fd-232">ICMP エコー メッセージを含むパケットをフラグメント化する転送中パケットの合計サイズが送信できる最大パケット サイズを超える場合、ローカルおよびリモート コンピューター間のルーティング ノードのいずれかでします。</span><span class="sxs-lookup"><span data-stu-id="488fd-232">The packet that contains the ICMP echo message can be fragmented in transit if the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers.</span></span> <span data-ttu-id="488fd-233">断片化を防ぐためには、いずれかの操作を使用して、<xref:System.Net.NetworkInformation.Ping.Send%2A>を受け取るメソッドを`options`パラメーター、およびセット、<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>プロパティを`true`します。</span><span class="sxs-lookup"><span data-stu-id="488fd-233">To prevent fragmentation, use one of the <xref:System.Net.NetworkInformation.Ping.Send%2A> methods that takes an `options` parameter, and set the <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> property to `true`.</span></span> <span data-ttu-id="488fd-234">ときに<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>は`true`とパケットの合計サイズが、ローカルおよびリモート コンピューター間のルーティング ノードのいずれかで送信できる最大パケット サイズを超える、ICMP エコー要求は失敗します。</span><span class="sxs-lookup"><span data-stu-id="488fd-234">When <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> is `true` and the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers, the ICMP echo request fails.</span></span> <span data-ttu-id="488fd-235">この場合、<xref:System.Net.NetworkInformation.PingReply.Status%2A>に設定されている<xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>します。</span><span class="sxs-lookup"><span data-stu-id="488fd-235">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>.</span></span>  
  
 <span data-ttu-id="488fd-236">パケットまたはパケットのフラグメントは、破棄される前に、ルーティングのノードで 128 回転送されます。</span><span class="sxs-lookup"><span data-stu-id="488fd-236">The packet or packet fragments can be forwarded by routing nodes 128 times before being discarded.</span></span> <span data-ttu-id="488fd-237">この設定を変更するには、使用、<xref:System.Net.NetworkInformation.Ping.Send%2A>を受け取るオーバー ロードを`options`パラメーター、およびセット、<xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>プロパティを目的の値にします。</span><span class="sxs-lookup"><span data-stu-id="488fd-237">To change this setting, use a <xref:System.Net.NetworkInformation.Ping.Send%2A> overload that takes an `options` parameter, and set the <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> property to the desired value.</span></span> <span data-ttu-id="488fd-238">パケットは、送信先を指定した回数だけが転送される後に到達しなかった場合は、パケットは破棄され、ICMP エコー要求は失敗します。</span><span class="sxs-lookup"><span data-stu-id="488fd-238">If the packet does not reach its destination after being forwarded the specified number of times, the packet is discarded and the ICMP echo request fails.</span></span> <span data-ttu-id="488fd-239">この場合、<xref:System.Net.NetworkInformation.PingReply.Status%2A>に設定されている<xref:System.Net.NetworkInformation.IPStatus.TtlExpired>します。</span><span class="sxs-lookup"><span data-stu-id="488fd-239">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="488fd-240">呼び出し元を示す例については、<xref:System.Net.NetworkInformation.Ping.Send%2A>メソッドを参照してください、<xref:System.Net.NetworkInformation.Ping>クラスの概要。</span><span class="sxs-lookup"><span data-stu-id="488fd-240">For an example that demonstrates calling a <xref:System.Net.NetworkInformation.Ping.Send%2A> method, see the <xref:System.Net.NetworkInformation.Ping> class overview.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="488fd-241">
            <paramref name="address" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-241">
              <paramref name="address" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="488fd-242">
            <paramref name="timeout" /> が 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-242">
              <paramref name="timeout" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="488fd-243">
            <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> の呼び出しを実行中です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-243">A call to <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> is in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="488fd-244">
            <paramref name="address" /> は IPv6 アドレスですが、ローカル コンピューターでは Windows 2000 より前のオペレーティング システムが動作しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-244">
              <paramref name="address" /> is an IPv6 address and the local computer is running an operating system earlier than Windows 2000.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">
          <span data-ttu-id="488fd-245">ICMP メッセージの送信中または受信中に例外がスローされました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-245">An exception was thrown while sending or receiving the ICMP messages.</span>
          </span>
          <span data-ttu-id="488fd-246">スローされた実際の例外については内部例外を参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-246">See the inner exception for the exact exception that was thrown.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="488fd-247">このオブジェクトは破棄されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-247">This object has been disposed.</span>
          </span>
        </exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">
          <span data-ttu-id="488fd-248">ICMP エコー メッセージを送信します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-248">To send an ICMP echo message.</span>
          </span>
          <span data-ttu-id="488fd-249">関連付けられた列挙体。 <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-249">Associated enumeration: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public System.Net.NetworkInformation.PingReply Send (string hostNameOrAddress, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.NetworkInformation.PingReply Send(string hostNameOrAddress, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Send (hostNameOrAddress As String, timeout As Integer) As PingReply" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::NetworkInformation::PingReply ^ Send(System::String ^ hostNameOrAddress, int timeout);" />
      <MemberSignature Language="F#" Value="member this.Send : string * int -&gt; System.Net.NetworkInformation.PingReply" Usage="ping.Send (hostNameOrAddress, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.PingReply</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">
          <span data-ttu-id="488fd-250">ICMP エコー メッセージの送信先コンピューターを識別する <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-250">A <see cref="T:System.String" /> that identifies the computer that is the destination for the ICMP echo message.</span>
          </span>
          <span data-ttu-id="488fd-251">このパラメーターの値には、ホスト名または IP アドレスの文字列形式を指定できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-251">The value specified for this parameter can be a host name or a string representation of an IP address.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="488fd-252">エコー メッセージを送信してから ICMP エコー応答メッセージを待つ時間の最大値 (ミリ秒単位) を指定する <see cref="T:System.Int32" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-252">An <see cref="T:System.Int32" /> value that specifies the maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="488fd-253">ICMP (インターネット制御メッセージ プロトコル) エコー メッセージを指定されたコンピューターに送信し、そのコンピューターから対応する ICMP エコー応答メッセージを受信します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-253">Attempts to send an Internet Control Message Protocol (ICMP) echo message to the specified computer, and receive a corresponding ICMP echo reply message from that computer.</span>
          </span>
          <span data-ttu-id="488fd-254">このメソッドを使用して、操作のタイムアウト値を指定できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-254">This method allows you to specify a time-out value for the operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="488fd-255">ICMP エコー応答メッセージが受信された場合は、そのメッセージに関する情報を提供し、メッセージが受信されなかった場合は、エラーの原因を提供する <see cref="T:System.Net.NetworkInformation.PingReply" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-255">A <see cref="T:System.Net.NetworkInformation.PingReply" /> object that provides information about the ICMP echo reply message if one was received, or provides the reason for the failure if no message was received.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="488fd-256">指定された時間内では、ICMP エコー応答メッセージが受信されない場合、`timeout`パラメーター、ICMP エコー失敗した場合、および<xref:System.Net.NetworkInformation.PingReply.Status%2A>プロパティに設定されて<xref:System.Net.NetworkInformation.IPStatus.TimedOut>します。</span><span class="sxs-lookup"><span data-stu-id="488fd-256">If the ICMP echo reply message is not received within the time specified in the `timeout` parameter, the ICMP echo fails, and the <xref:System.Net.NetworkInformation.PingReply.Status%2A> property is set to <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="488fd-257">非常に小さな数値を指定するときに`timeout`、Ping の応答を受信できる場合でも`timeout`経過時間 (ミリ秒)。</span><span class="sxs-lookup"><span data-stu-id="488fd-257">When specifying very small numbers for `timeout`, the Ping reply can be received even if `timeout` milliseconds have elapsed.</span></span>  
  
 <span data-ttu-id="488fd-258">このオーバー ロードは、パケットのフラグメンテーションとパケットの転送の既定の設定を使用します。</span><span class="sxs-lookup"><span data-stu-id="488fd-258">This overload uses default settings for packet fragmentation and packet forwarding.</span></span> <span data-ttu-id="488fd-259">ICMP エコー メッセージを含むパケットをフラグメント化する転送中パケットの合計サイズが送信できる最大パケット サイズを超える場合、ローカルおよびリモート コンピューター間のルーティング ノードのいずれかでします。</span><span class="sxs-lookup"><span data-stu-id="488fd-259">The packet that contains the ICMP echo message can be fragmented in transit if the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers.</span></span> <span data-ttu-id="488fd-260">断片化を防ぐためには、いずれかの操作を使用して、<xref:System.Net.NetworkInformation.Ping.Send%2A>を受け取るメソッドを`options`パラメーター、およびセット、<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>プロパティを`true`します。</span><span class="sxs-lookup"><span data-stu-id="488fd-260">To prevent fragmentation, use one of the <xref:System.Net.NetworkInformation.Ping.Send%2A> methods that takes an `options` parameter, and set the <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> property to `true`.</span></span> <span data-ttu-id="488fd-261">ときに<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>は`true`とパケットの合計サイズが、ローカルおよびリモート コンピューター間のルーティング ノードのいずれかで送信できる最大パケット サイズを超える、ICMP エコー要求は失敗します。</span><span class="sxs-lookup"><span data-stu-id="488fd-261">When <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> is `true` and the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers, the ICMP echo request fails.</span></span> <span data-ttu-id="488fd-262">この場合、<xref:System.Net.NetworkInformation.PingReply.Status%2A>に設定されている<xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>します。</span><span class="sxs-lookup"><span data-stu-id="488fd-262">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>.</span></span> <span data-ttu-id="488fd-263">パケットまたはパケットのフラグメント (断片化) する場合は、破棄される前に、ルーティングのノードで 128 回転送されます。</span><span class="sxs-lookup"><span data-stu-id="488fd-263">The packet or packet fragments (if fragmented) can be forwarded by routing nodes 128 times before being discarded.</span></span> <span data-ttu-id="488fd-264">この設定を変更するには、使用、<xref:System.Net.NetworkInformation.Ping.Send%2A>を受け取るオーバー ロードを`options`パラメーター、およびセット、<xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>プロパティを目的の値にします。</span><span class="sxs-lookup"><span data-stu-id="488fd-264">To change this setting, use a <xref:System.Net.NetworkInformation.Ping.Send%2A> overload that takes an `options` parameter, and set the <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> property to the desired value.</span></span> <span data-ttu-id="488fd-265">パケットは、送信先を指定した回数だけが転送される後に到達しなかった場合は、パケットは破棄され、ICMP エコー要求は失敗します。</span><span class="sxs-lookup"><span data-stu-id="488fd-265">If the packet does not reach its destination after being forwarded the specified number of times, the packet is discarded and the ICMP echo request fails.</span></span> <span data-ttu-id="488fd-266">この場合、<xref:System.Net.NetworkInformation.PingReply.Status%2A>に設定されている<xref:System.Net.NetworkInformation.IPStatus.TtlExpired>します。</span><span class="sxs-lookup"><span data-stu-id="488fd-266">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="488fd-267">呼び出し元を示す例については、<xref:System.Net.NetworkInformation.Ping.Send%2A>メソッドを参照してください、<xref:System.Net.NetworkInformation.Ping>クラスの概要。</span><span class="sxs-lookup"><span data-stu-id="488fd-267">For an example that demonstrates calling a <xref:System.Net.NetworkInformation.Ping.Send%2A> method, see the <xref:System.Net.NetworkInformation.Ping> class overview.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="488fd-268">
            <paramref name="hostNameOrAddress" /> が <see langword="null" /> または空の文字列 ("") です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-268">
              <paramref name="hostNameOrAddress" /> is <see langword="null" /> or is an empty string ("").</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="488fd-269">
            <paramref name="timeout" /> が 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-269">
              <paramref name="timeout" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="488fd-270">
            <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> の呼び出しを実行中です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-270">A call to <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> is in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">
          <span data-ttu-id="488fd-271">ICMP メッセージの送信中または受信中に例外がスローされました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-271">An exception was thrown while sending or receiving the ICMP messages.</span>
          </span>
          <span data-ttu-id="488fd-272">スローされた実際の例外については内部例外を参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-272">See the inner exception for the exact exception that was thrown.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="488fd-273">このオブジェクトは破棄されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-273">This object has been disposed.</span>
          </span>
        </exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">
          <span data-ttu-id="488fd-274">ICMP エコー メッセージを送信します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-274">To send an ICMP echo message.</span>
          </span>
          <span data-ttu-id="488fd-275">関連付けられた列挙体。 <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-275">Associated enumeration: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public System.Net.NetworkInformation.PingReply Send (System.Net.IPAddress address, int timeout, byte[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.NetworkInformation.PingReply Send(class System.Net.IPAddress address, int32 timeout, unsigned int8[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Send (address As IPAddress, timeout As Integer, buffer As Byte()) As PingReply" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::NetworkInformation::PingReply ^ Send(System::Net::IPAddress ^ address, int timeout, cli::array &lt;System::Byte&gt; ^ buffer);" />
      <MemberSignature Language="F#" Value="member this.Send : System.Net.IPAddress * int * byte[] -&gt; System.Net.NetworkInformation.PingReply" Usage="ping.Send (address, timeout, buffer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.PingReply</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
        <Parameter Name="timeout" Type="System.Int32" />
        <Parameter Name="buffer" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="488fd-276">ICMP エコー メッセージの送信先コンピューターを識別する <see cref="T:System.Net.IPAddress" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-276">An <see cref="T:System.Net.IPAddress" /> that identifies the computer that is the destination for the ICMP echo message.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="488fd-277">エコー メッセージを送信してから ICMP エコー応答メッセージを待つ時間の最大値 (ミリ秒単位) を指定する <see cref="T:System.Int32" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-277">An <see cref="T:System.Int32" /> value that specifies the maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</span>
          </span>
        </param>
        <param name="buffer">
          <span data-ttu-id="488fd-278">ICMP エコー メッセージと共に送信されるデータが格納され、ICMP エコー応答メッセージで返される <see cref="T:System.Byte" /> 配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-278">A <see cref="T:System.Byte" /> array that contains data to be sent with the ICMP echo message and returned in the ICMP echo reply message.</span>
          </span>
          <span data-ttu-id="488fd-279">配列には、65,500 バイトを超えるデータを格納することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-279">The array cannot contain more than 65,500 bytes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="488fd-280">指定された <see cref="T:System.Net.IPAddress" /> を持つコンピューターに、指定されたデータ バッファーと共に ICMP (インターネット制御メッセージ プロトコル) エコー メッセージを送信し、そのコンピューターから対応する ICMP エコー応答メッセージを受信します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-280">Attempts to send an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the computer that has the specified <see cref="T:System.Net.IPAddress" />, and receive a corresponding ICMP echo reply message from that computer.</span>
          </span>
          <span data-ttu-id="488fd-281">このオーバーロードを使用して、操作のタイムアウト値を指定できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-281">This overload allows you to specify a time-out value for the operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="488fd-282">ICMP エコー応答メッセージが受信された場合は、そのメッセージに関する情報を提供し、メッセージが受信されなかった場合は、エラーの原因を提供する <see cref="T:System.Net.NetworkInformation.PingReply" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-282">A <see cref="T:System.Net.NetworkInformation.PingReply" /> object that provides information about the ICMP echo reply message, if one was received, or provides the reason for the failure, if no message was received.</span>
          </span>
          <span data-ttu-id="488fd-283">パケットが MTU (Maximum Transmission Unit) を超えている場合、このメソッドは <see cref="F:System.Net.NetworkInformation.IPStatus.PacketTooBig" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-283">The method will return <see cref="F:System.Net.NetworkInformation.IPStatus.PacketTooBig" /> if the packet exceeds the Maximum Transmission Unit (MTU).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="488fd-284">指定された時間内では、ICMP エコー応答メッセージが受信されない場合、`timeout`パラメーター、ICMP エコー失敗した場合、および<xref:System.Net.NetworkInformation.PingReply.Status%2A>プロパティに設定されて<xref:System.Net.NetworkInformation.IPStatus.TimedOut>します。</span><span class="sxs-lookup"><span data-stu-id="488fd-284">If the ICMP echo reply message is not received within the time specified in the `timeout` parameter, the ICMP echo fails, and the <xref:System.Net.NetworkInformation.PingReply.Status%2A> property is set to <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="488fd-285">非常に小さな数値を指定するときに`timeout`、Ping の応答を受信できる場合でも`timeout`経過時間 (ミリ秒)。</span><span class="sxs-lookup"><span data-stu-id="488fd-285">When specifying very small numbers for `timeout`, the Ping reply can be received even if `timeout` milliseconds have elapsed.</span></span>  
  
 <span data-ttu-id="488fd-286">このオーバー ロードは、パケットのフラグメンテーションとパケットの転送の既定の設定を使用します。</span><span class="sxs-lookup"><span data-stu-id="488fd-286">This overload uses default settings for packet fragmentation and packet forwarding.</span></span> <span data-ttu-id="488fd-287">ICMP エコー メッセージを含むパケットをフラグメント化する転送中パケットの合計サイズが送信できる最大パケット サイズを超える場合、ローカルおよびリモート コンピューター間のルーティング ノードのいずれかでします。</span><span class="sxs-lookup"><span data-stu-id="488fd-287">The packet that contains the ICMP echo message can be fragmented in transit if the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers.</span></span> <span data-ttu-id="488fd-288">断片化を防ぐためには、いずれかの操作を使用して、<xref:System.Net.NetworkInformation.Ping.Send%2A>を受け取るメソッドを`options`パラメーター、およびセット、<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>プロパティを`true`します。</span><span class="sxs-lookup"><span data-stu-id="488fd-288">To prevent fragmentation, use one of the <xref:System.Net.NetworkInformation.Ping.Send%2A> methods that takes an `options` parameter, and set the <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> property to `true`.</span></span> <span data-ttu-id="488fd-289">ときに<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>は`true`とパケットの合計サイズが、ローカルおよびリモート コンピューター間のルーティング ノードのいずれかで送信できる最大パケット サイズを超える、ICMP エコー要求は失敗します。</span><span class="sxs-lookup"><span data-stu-id="488fd-289">When <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> is `true` and the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers, the ICMP echo request fails.</span></span> <span data-ttu-id="488fd-290">この場合、<xref:System.Net.NetworkInformation.PingReply.Status%2A>に設定されている<xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>します。</span><span class="sxs-lookup"><span data-stu-id="488fd-290">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>.</span></span>  
  
 <span data-ttu-id="488fd-291">パケットまたはパケットのフラグメントは、破棄される前に、ルーティングのノードで 128 回転送されます。</span><span class="sxs-lookup"><span data-stu-id="488fd-291">The packet or packet fragments can be forwarded by routing nodes 128 times before being discarded.</span></span> <span data-ttu-id="488fd-292">この設定を変更するには、使用、<xref:System.Net.NetworkInformation.Ping.Send%2A>を受け取るオーバー ロードを`options`パラメーター、およびセット、<xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>プロパティを目的の値にします。</span><span class="sxs-lookup"><span data-stu-id="488fd-292">To change this setting, use a <xref:System.Net.NetworkInformation.Ping.Send%2A> overload that takes an `options` parameter, and set the <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> property to the desired value.</span></span> <span data-ttu-id="488fd-293">パケットは、送信先を指定した回数だけが転送される後に到達しなかった場合は、パケットは破棄され、ICMP エコー要求は失敗します。</span><span class="sxs-lookup"><span data-stu-id="488fd-293">If the packet does not reach its destination after being forwarded the specified number of times, the packet is discarded and the ICMP echo request fails.</span></span> <span data-ttu-id="488fd-294">この場合、<xref:System.Net.NetworkInformation.PingReply.Status%2A>に設定されている<xref:System.Net.NetworkInformation.IPStatus.TtlExpired>します。</span><span class="sxs-lookup"><span data-stu-id="488fd-294">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="488fd-295">次のコード例では、このメソッドを呼び出す方法を示します。</span><span class="sxs-lookup"><span data-stu-id="488fd-295">The following code example demonstrates how to call this method.</span></span>  
  
 [!code-cpp[NCLPingSampler#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLPingSampler/CPP/pingtest.cpp#6)]
 [!code-csharp[NCLPingSampler#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPingSampler/CS/pingtest.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="488fd-296">
            <paramref name="buffer" /> のサイズが 65500 バイトを超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-296">The size of <paramref name="buffer" /> exceeds 65500 bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="488fd-297">
            <paramref name="address" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-297">
              <paramref name="address" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="488fd-298">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-298">-or-</span>
          </span>
          <span data-ttu-id="488fd-299">
            <paramref name="buffer" /> が <see langword="null" /> です。または、<paramref name="buffer" /> のサイズが 65500 バイトを超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-299">
              <paramref name="buffer" /> is <see langword="null" />, or the <paramref name="buffer" /> size is greater than 65500 bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="488fd-300">
            <paramref name="timeout" /> が 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-300">
              <paramref name="timeout" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="488fd-301">
            <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> の呼び出しを実行中です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-301">A call to <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> is in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="488fd-302">
            <paramref name="address" /> は IPv6 アドレスですが、ローカル コンピューターでは Windows 2000 より前のオペレーティング システムが動作しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-302">
              <paramref name="address" /> is an IPv6 address and the local computer is running an operating system earlier than Windows 2000.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">
          <span data-ttu-id="488fd-303">ICMP メッセージの送信中または受信中に例外がスローされました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-303">An exception was thrown while sending or receiving the ICMP messages.</span>
          </span>
          <span data-ttu-id="488fd-304">スローされた実際の例外については内部例外を参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-304">See the inner exception for the exact exception that was thrown.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="488fd-305">このオブジェクトは破棄されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-305">This object has been disposed.</span>
          </span>
        </exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">
          <span data-ttu-id="488fd-306">ICMP エコー メッセージを送信します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-306">To send an ICMP echo message.</span>
          </span>
          <span data-ttu-id="488fd-307">関連付けられた列挙体。 <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-307">Associated enumeration: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public System.Net.NetworkInformation.PingReply Send (string hostNameOrAddress, int timeout, byte[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.NetworkInformation.PingReply Send(string hostNameOrAddress, int32 timeout, unsigned int8[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Send (hostNameOrAddress As String, timeout As Integer, buffer As Byte()) As PingReply" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::NetworkInformation::PingReply ^ Send(System::String ^ hostNameOrAddress, int timeout, cli::array &lt;System::Byte&gt; ^ buffer);" />
      <MemberSignature Language="F#" Value="member this.Send : string * int * byte[] -&gt; System.Net.NetworkInformation.PingReply" Usage="ping.Send (hostNameOrAddress, timeout, buffer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.PingReply</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
        <Parameter Name="timeout" Type="System.Int32" />
        <Parameter Name="buffer" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">
          <span data-ttu-id="488fd-308">ICMP エコー メッセージの送信先コンピューターを識別する <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-308">A <see cref="T:System.String" /> that identifies the computer that is the destination for the ICMP echo message.</span>
          </span>
          <span data-ttu-id="488fd-309">このパラメーターの値には、ホスト名または IP アドレスの文字列形式を指定できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-309">The value specified for this parameter can be a host name or a string representation of an IP address.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="488fd-310">エコー メッセージを送信してから ICMP エコー応答メッセージを待つ時間の最大値 (ミリ秒単位) を指定する <see cref="T:System.Int32" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-310">An <see cref="T:System.Int32" /> value that specifies the maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</span>
          </span>
        </param>
        <param name="buffer">
          <span data-ttu-id="488fd-311">ICMP エコー メッセージと共に送信されるデータが格納され、ICMP エコー応答メッセージで返される <see cref="T:System.Byte" /> 配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-311">A <see cref="T:System.Byte" /> array that contains data to be sent with the ICMP echo message and returned in the ICMP echo reply message.</span>
          </span>
          <span data-ttu-id="488fd-312">配列には、65,500 バイトを超えるデータを格納することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-312">The array cannot contain more than 65,500 bytes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="488fd-313">指定されたデータ バッファーと共に ICMP (インターネット制御メッセージ プロトコル) エコー メッセージを指定されたコンピューターに送信し、そのコンピューターから対応する ICMP エコー応答メッセージを受信します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-313">Attempts to send an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the specified computer, and receive a corresponding ICMP echo reply message from that computer.</span>
          </span>
          <span data-ttu-id="488fd-314">このオーバーロードを使用して、操作のタイムアウト値を指定できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-314">This overload allows you to specify a time-out value for the operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="488fd-315">ICMP エコー応答メッセージが受信された場合は、そのメッセージに関する情報を提供し、メッセージが受信されなかった場合は、エラーの原因を提供する <see cref="T:System.Net.NetworkInformation.PingReply" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-315">A <see cref="T:System.Net.NetworkInformation.PingReply" /> object that provides information about the ICMP echo reply message if one was received, or provides the reason for the failure if no message was received.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="488fd-316">指定された時間内では、ICMP エコー応答メッセージが受信されない場合、`timeout`パラメーター、ICMP エコー失敗した場合、および<xref:System.Net.NetworkInformation.PingReply.Status%2A>プロパティに設定されて<xref:System.Net.NetworkInformation.IPStatus.TimedOut>します。</span><span class="sxs-lookup"><span data-stu-id="488fd-316">If the ICMP echo reply message is not received within the time specified in the `timeout` parameter, the ICMP echo fails, and the <xref:System.Net.NetworkInformation.PingReply.Status%2A> property is set to <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="488fd-317">非常に小さな数値を指定するときに`timeout`、Ping の応答を受信できる場合でも`timeout`経過時間 (ミリ秒)。</span><span class="sxs-lookup"><span data-stu-id="488fd-317">When specifying very small numbers for `timeout`, the Ping reply can be received even if `timeout` milliseconds have elapsed.</span></span>  
  
 <span data-ttu-id="488fd-318">このオーバー ロードは、パケットのフラグメンテーションとパケットの転送の既定の設定を使用します。</span><span class="sxs-lookup"><span data-stu-id="488fd-318">This overload uses default settings for packet fragmentation and packet forwarding.</span></span> <span data-ttu-id="488fd-319">ICMP エコー メッセージを含むパケットをフラグメント化する転送中パケットの合計サイズが送信できる最大パケット サイズを超える場合、ローカルおよびリモート コンピューター間のルーティング ノードのいずれかでします。</span><span class="sxs-lookup"><span data-stu-id="488fd-319">The packet that contains the ICMP echo message can be fragmented in transit if the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers.</span></span> <span data-ttu-id="488fd-320">断片化を防ぐためには、いずれかの操作を使用して、<xref:System.Net.NetworkInformation.Ping.Send%2A>を受け取るメソッドを`options`パラメーター、およびセット、<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>プロパティを`true`します。</span><span class="sxs-lookup"><span data-stu-id="488fd-320">To prevent fragmentation, use one of the <xref:System.Net.NetworkInformation.Ping.Send%2A> methods that takes an `options` parameter, and set the <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> property to `true`.</span></span> <span data-ttu-id="488fd-321">ときに<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>は`true`とパケットの合計サイズが、ローカルおよびリモート コンピューター間のルーティング ノードのいずれかで送信できる最大パケット サイズを超える、ICMP エコー要求は失敗します。</span><span class="sxs-lookup"><span data-stu-id="488fd-321">When <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> is `true` and the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers, the ICMP echo request fails.</span></span> <span data-ttu-id="488fd-322">この場合、<xref:System.Net.NetworkInformation.PingReply.Status%2A>に設定されている<xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>します。</span><span class="sxs-lookup"><span data-stu-id="488fd-322">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>.</span></span>  
  
 <span data-ttu-id="488fd-323">パケットまたはパケットのフラグメントは、破棄される前に、ルーティングのノードで 128 回転送されます。</span><span class="sxs-lookup"><span data-stu-id="488fd-323">The packet or packet fragments can be forwarded by routing nodes 128 times before being discarded.</span></span> <span data-ttu-id="488fd-324">この設定を変更するには、使用、<xref:System.Net.NetworkInformation.Ping.Send%2A>を受け取るオーバー ロードを`options`パラメーター、およびセット、<xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>プロパティを目的の値にします。</span><span class="sxs-lookup"><span data-stu-id="488fd-324">To change this setting, use a <xref:System.Net.NetworkInformation.Ping.Send%2A> overload that takes an `options` parameter, and set the <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> property to the desired value.</span></span> <span data-ttu-id="488fd-325">パケットは、送信先を指定した回数だけが転送される後に到達しなかった場合は、パケットは破棄され、ICMP エコー要求は失敗します。</span><span class="sxs-lookup"><span data-stu-id="488fd-325">If the packet does not reach its destination after being forwarded the specified number of times, the packet is discarded and the ICMP echo request fails.</span></span> <span data-ttu-id="488fd-326">この場合、<xref:System.Net.NetworkInformation.PingReply.Status%2A>に設定されている<xref:System.Net.NetworkInformation.IPStatus.TtlExpired>します。</span><span class="sxs-lookup"><span data-stu-id="488fd-326">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="488fd-327">呼び出す方法を示す例については、<xref:System.Net.NetworkInformation.Ping.Send%2A>オーバー ロードを参照してください、<xref:System.Net.NetworkInformation.Ping>クラスの概要。</span><span class="sxs-lookup"><span data-stu-id="488fd-327">For an example that demonstrates how to call a <xref:System.Net.NetworkInformation.Ping.Send%2A> overload, see the <xref:System.Net.NetworkInformation.Ping> class overview.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="488fd-328">
            <paramref name="buffer" /> のサイズが 65500 バイトを超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-328">The size of <paramref name="buffer" /> exceeds 65500 bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="488fd-329">
            <paramref name="hostNameOrAddress" /> が <see langword="null" /> または空の文字列 ("") です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-329">
              <paramref name="hostNameOrAddress" /> is <see langword="null" /> or is an empty string ("").</span>
          </span>
          <span data-ttu-id="488fd-330">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-330">-or-</span>
          </span>
          <span data-ttu-id="488fd-331">
            <paramref name="buffer" /> が <see langword="null" /> です。または、<paramref name="buffer" /> のサイズが 65500 バイトを超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-331">
              <paramref name="buffer" /> is <see langword="null" />, or the <paramref name="buffer" /> size is greater than 65500 bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="488fd-332">
            <paramref name="timeout" /> が 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-332">
              <paramref name="timeout" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="488fd-333">
            <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> の呼び出しを実行中です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-333">A call to <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> is in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">
          <span data-ttu-id="488fd-334">ICMP メッセージの送信中または受信中に例外がスローされました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-334">An exception was thrown while sending or receiving the ICMP messages.</span>
          </span>
          <span data-ttu-id="488fd-335">スローされた実際の例外については内部例外を参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-335">See the inner exception for the exact exception that was thrown.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="488fd-336">このオブジェクトは破棄されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-336">This object has been disposed.</span>
          </span>
        </exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">
          <span data-ttu-id="488fd-337">ICMP エコー メッセージを送信します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-337">To send an ICMP echo message.</span>
          </span>
          <span data-ttu-id="488fd-338">関連付けられた列挙体。 <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-338">Associated enumeration: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public System.Net.NetworkInformation.PingReply Send (System.Net.IPAddress address, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.NetworkInformation.PingReply Send(class System.Net.IPAddress address, int32 timeout, unsigned int8[] buffer, class System.Net.NetworkInformation.PingOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function Send (address As IPAddress, timeout As Integer, buffer As Byte(), options As PingOptions) As PingReply" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::NetworkInformation::PingReply ^ Send(System::Net::IPAddress ^ address, int timeout, cli::array &lt;System::Byte&gt; ^ buffer, System::Net::NetworkInformation::PingOptions ^ options);" />
      <MemberSignature Language="F#" Value="member this.Send : System.Net.IPAddress * int * byte[] * System.Net.NetworkInformation.PingOptions -&gt; System.Net.NetworkInformation.PingReply" Usage="ping.Send (address, timeout, buffer, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.PingReply</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
        <Parameter Name="timeout" Type="System.Int32" />
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="options" Type="System.Net.NetworkInformation.PingOptions" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="488fd-339">ICMP エコー メッセージの送信先コンピューターを識別する <see cref="T:System.Net.IPAddress" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-339">An <see cref="T:System.Net.IPAddress" /> that identifies the computer that is the destination for the ICMP echo message.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="488fd-340">エコー メッセージを送信してから ICMP エコー応答メッセージを待つ時間の最大値 (ミリ秒単位) を指定する <see cref="T:System.Int32" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-340">An <see cref="T:System.Int32" /> value that specifies the maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</span>
          </span>
        </param>
        <param name="buffer">
          <span data-ttu-id="488fd-341">ICMP エコー メッセージと共に送信されるデータが格納され、ICMP エコー応答メッセージで返される <see cref="T:System.Byte" /> 配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-341">A <see cref="T:System.Byte" /> array that contains data to be sent with the ICMP echo message and returned in the ICMP echo reply message.</span>
          </span>
          <span data-ttu-id="488fd-342">配列には、65,500 バイトを超えるデータを格納することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-342">The array cannot contain more than 65,500 bytes.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="488fd-343">ICMP エコー メッセージ パケットのフラグメンテーションと有効期間 (TTL: time-to-live) の値を制御するために使用される <see cref="T:System.Net.NetworkInformation.PingOptions" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-343">A <see cref="T:System.Net.NetworkInformation.PingOptions" /> object used to control fragmentation and Time-to-Live values for the ICMP echo message packet.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="488fd-344">指定された <see cref="T:System.Net.IPAddress" /> を持つコンピューターに、指定されたデータ バッファーと共に ICMP (インターネット制御メッセージ プロトコル) エコー メッセージを送信し、そのコンピューターから対応する ICMP エコー応答メッセージを受信します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-344">Attempts to send an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the computer that has the specified <see cref="T:System.Net.IPAddress" /> and receive a corresponding ICMP echo reply message from that computer.</span>
          </span>
          <span data-ttu-id="488fd-345">このオーバーロードを使用して、操作のタイムアウト値を指定し、ICMP エコー メッセージ パケットのフラグメンテーションと有効期間 (TTL: time-to-live) の値を制御できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-345">This overload allows you to specify a time-out value for the operation and control fragmentation and Time-to-Live values for the ICMP echo message packet.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="488fd-346">ICMP エコー応答メッセージが受信された場合は、そのメッセージに関する情報を提供し、メッセージが受信されなかった場合は、エラーの原因を提供する <see cref="T:System.Net.NetworkInformation.PingReply" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-346">A <see cref="T:System.Net.NetworkInformation.PingReply" /> object that provides information about the ICMP echo reply message, if one was received, or provides the reason for the failure, if no message was received.</span>
          </span>
          <span data-ttu-id="488fd-347">パケットが MTU (Maximum Transmission Unit) を超えている場合、このメソッドは <see cref="F:System.Net.NetworkInformation.IPStatus.PacketTooBig" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-347">The method will return <see cref="F:System.Net.NetworkInformation.IPStatus.PacketTooBig" /> if the packet exceeds the Maximum Transmission Unit (MTU).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="488fd-348">指定された時間内では、ICMP エコー応答メッセージが受信されない場合、`timeout`パラメーター、ICMP エコー失敗した場合、および<xref:System.Net.NetworkInformation.PingReply.Status%2A>プロパティに設定されて<xref:System.Net.NetworkInformation.IPStatus.TimedOut>します。</span><span class="sxs-lookup"><span data-stu-id="488fd-348">If the ICMP echo reply message is not received within the time specified by the `timeout` parameter, the ICMP echo fails, and the <xref:System.Net.NetworkInformation.PingReply.Status%2A> property is set to <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="488fd-349">非常に小さな数値を指定するときに`timeout`、Ping の応答を受信できる場合でも`timeout`経過時間 (ミリ秒)。</span><span class="sxs-lookup"><span data-stu-id="488fd-349">When specifying very small numbers for `timeout`, the Ping reply can be received even if `timeout` milliseconds have elapsed.</span></span>  
  
 <span data-ttu-id="488fd-350">場合、<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>プロパティは`true`とパケットの合計サイズが、ローカルおよびリモート コンピューター間のルーティング ノードのいずれかで送信できる最大パケット サイズを超える、ICMP エコー要求は失敗します。</span><span class="sxs-lookup"><span data-stu-id="488fd-350">If the <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> property is `true` and the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers, the ICMP echo request fails.</span></span> <span data-ttu-id="488fd-351">この場合、<xref:System.Net.NetworkInformation.PingReply.Status%2A>に設定されている<xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>します。</span><span class="sxs-lookup"><span data-stu-id="488fd-351">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>.</span></span>  
  
 <span data-ttu-id="488fd-352">使用して、<xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>宛先に到達する前に、ICMP エコー メッセージを転送できる最大回数を指定するプロパティ。</span><span class="sxs-lookup"><span data-stu-id="488fd-352">Use the <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> property to specify the maximum number of times the ICMP echo message can be forwarded before reaching its destination.</span></span> <span data-ttu-id="488fd-353">パケットは、送信先を指定した回数だけが転送される後に到達しなかった場合は、パケットは破棄され、ICMP エコー要求は失敗します。</span><span class="sxs-lookup"><span data-stu-id="488fd-353">If the packet does not reach its destination after being forwarded the specified number of times, the packet is discarded and the ICMP echo request fails.</span></span> <span data-ttu-id="488fd-354">この場合、<xref:System.Net.NetworkInformation.PingReply.Status%2A>に設定されている<xref:System.Net.NetworkInformation.IPStatus.TtlExpired>します。</span><span class="sxs-lookup"><span data-stu-id="488fd-354">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="488fd-355">次のコード例では、このメソッドを呼び出す方法を示します。</span><span class="sxs-lookup"><span data-stu-id="488fd-355">The following code example demonstrates how to call this method.</span></span>  
  
 [!code-cpp[NCLPingSampler#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLPingSampler/CPP/pingtest.cpp#5)]
 [!code-csharp[NCLPingSampler#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPingSampler/CS/pingtest.cs#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="488fd-356">
            <paramref name="buffer" /> のサイズが 65500 バイトを超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-356">The size of <paramref name="buffer" /> exceeds 65500 bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="488fd-357">
            <paramref name="address" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-357">
              <paramref name="address" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="488fd-358">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-358">-or-</span>
          </span>
          <span data-ttu-id="488fd-359">
            <paramref name="buffer" /> が <see langword="null" /> です。または、<paramref name="buffer" /> のサイズが 65500 バイトを超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-359">
              <paramref name="buffer" /> is <see langword="null" />, or the <paramref name="buffer" /> size is greater than 65500 bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="488fd-360">
            <paramref name="timeout" /> が 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-360">
              <paramref name="timeout" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="488fd-361">
            <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> の呼び出しを実行中です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-361">A call to <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> is in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="488fd-362">
            <paramref name="address" /> は IPv6 アドレスですが、ローカル コンピューターでは Windows 2000 より前のオペレーティング システムが動作しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-362">
              <paramref name="address" /> is an IPv6 address and the local computer is running an operating system earlier than Windows 2000.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">
          <span data-ttu-id="488fd-363">ICMP メッセージの送信中または受信中に例外がスローされました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-363">An exception was thrown while sending or receiving the ICMP messages.</span>
          </span>
          <span data-ttu-id="488fd-364">スローされた実際の例外については内部例外を参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-364">See the inner exception for the exact exception that was thrown.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="488fd-365">このオブジェクトは破棄されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-365">This object has been disposed.</span>
          </span>
        </exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">
          <span data-ttu-id="488fd-366">ICMP エコー メッセージを送信します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-366">To send an ICMP echo message.</span>
          </span>
          <span data-ttu-id="488fd-367">関連付けられた列挙体。 <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-367">Associated enumeration: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public System.Net.NetworkInformation.PingReply Send (string hostNameOrAddress, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.NetworkInformation.PingReply Send(string hostNameOrAddress, int32 timeout, unsigned int8[] buffer, class System.Net.NetworkInformation.PingOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function Send (hostNameOrAddress As String, timeout As Integer, buffer As Byte(), options As PingOptions) As PingReply" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::NetworkInformation::PingReply ^ Send(System::String ^ hostNameOrAddress, int timeout, cli::array &lt;System::Byte&gt; ^ buffer, System::Net::NetworkInformation::PingOptions ^ options);" />
      <MemberSignature Language="F#" Value="member this.Send : string * int * byte[] * System.Net.NetworkInformation.PingOptions -&gt; System.Net.NetworkInformation.PingReply" Usage="ping.Send (hostNameOrAddress, timeout, buffer, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.PingReply</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
        <Parameter Name="timeout" Type="System.Int32" />
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="options" Type="System.Net.NetworkInformation.PingOptions" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">
          <span data-ttu-id="488fd-368">ICMP エコー メッセージの送信先コンピューターを識別する <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-368">A <see cref="T:System.String" /> that identifies the computer that is the destination for the ICMP echo message.</span>
          </span>
          <span data-ttu-id="488fd-369">このパラメーターの値には、ホスト名または IP アドレスの文字列形式を指定できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-369">The value specified for this parameter can be a host name or a string representation of an IP address.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="488fd-370">エコー メッセージを送信してから ICMP エコー応答メッセージを待つ時間の最大値 (ミリ秒単位) を指定する <see cref="T:System.Int32" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-370">An <see cref="T:System.Int32" /> value that specifies the maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</span>
          </span>
        </param>
        <param name="buffer">
          <span data-ttu-id="488fd-371">ICMP エコー メッセージと共に送信されるデータが格納され、ICMP エコー応答メッセージで返される <see cref="T:System.Byte" /> 配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-371">A <see cref="T:System.Byte" /> array that contains data to be sent with the ICMP echo message and returned in the ICMP echo reply message.</span>
          </span>
          <span data-ttu-id="488fd-372">配列には、65,500 バイトを超えるデータを格納することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-372">The array cannot contain more than 65,500 bytes.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="488fd-373">ICMP エコー メッセージ パケットのフラグメンテーションと有効期間 (TTL: time-to-live) の値を制御するために使用される <see cref="T:System.Net.NetworkInformation.PingOptions" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-373">A <see cref="T:System.Net.NetworkInformation.PingOptions" /> object used to control fragmentation and Time-to-Live values for the ICMP echo message packet.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="488fd-374">指定されたデータ バッファーと共に ICMP (インターネット制御メッセージ プロトコル) エコー メッセージを指定されたコンピューターに送信し、そのコンピューターから対応する ICMP エコー応答メッセージを受信します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-374">Attempts to send an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the specified computer, and receive a corresponding ICMP echo reply message from that computer.</span>
          </span>
          <span data-ttu-id="488fd-375">このオーバーロードを使用して、操作のタイムアウト値を指定し、ICMP パケットのフラグメンテーションと有効期間 (TTL: time-to-live) 値を制御できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-375">This overload allows you to specify a time-out value for the operation and control fragmentation and Time-to-Live values for the ICMP packet.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="488fd-376">ICMP エコー応答メッセージが受信された場合は、そのメッセージに関する情報を提供し、メッセージが受信されなかった場合は、エラーの原因を提供する <see cref="T:System.Net.NetworkInformation.PingReply" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-376">A <see cref="T:System.Net.NetworkInformation.PingReply" /> object that provides information about the ICMP echo reply message if one was received, or provides the reason for the failure if no message was received.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="488fd-377">指定された時間内では、ICMP エコー応答メッセージが受信されない場合、`timeout`パラメーター、ICMP エコー失敗した場合、および<xref:System.Net.NetworkInformation.PingReply.Status%2A>プロパティに設定されて<xref:System.Net.NetworkInformation.IPStatus.TimedOut>します。</span><span class="sxs-lookup"><span data-stu-id="488fd-377">If the ICMP echo reply message is not received within the time specified by the `timeout` parameter, the ICMP echo fails, and the <xref:System.Net.NetworkInformation.PingReply.Status%2A> property is set to <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="488fd-378">非常に小さな数値を指定するときに`timeout`、Ping の応答を受信できる場合でも`timeout`経過時間 (ミリ秒)。</span><span class="sxs-lookup"><span data-stu-id="488fd-378">When specifying very small numbers for `timeout`, the Ping reply can be received even if `timeout` milliseconds have elapsed.</span></span>  
  
 <span data-ttu-id="488fd-379">場合、<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>プロパティは`true`とパケットの合計サイズが、ローカルおよびリモート コンピューター間のルーティング ノードのいずれかで送信できる最大パケット サイズを超える、ICMP エコー要求は失敗します。</span><span class="sxs-lookup"><span data-stu-id="488fd-379">If the <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> property is `true` and the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers, the ICMP echo request fails.</span></span> <span data-ttu-id="488fd-380">この場合、<xref:System.Net.NetworkInformation.PingReply.Status%2A>に設定されている<xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>します。</span><span class="sxs-lookup"><span data-stu-id="488fd-380">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>.</span></span>  
  
 <span data-ttu-id="488fd-381">使用して、<xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>宛先に到達する前に、ICMP エコー メッセージを転送できる最大回数を指定するプロパティ。</span><span class="sxs-lookup"><span data-stu-id="488fd-381">Use the <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> property to specify the maximum number of times the ICMP echo message can be forwarded before reaching its destination.</span></span> <span data-ttu-id="488fd-382">パケットは、送信先を指定した回数だけが転送される後に到達しなかった場合は、パケットは破棄され、ICMP エコー要求は失敗します。</span><span class="sxs-lookup"><span data-stu-id="488fd-382">If the packet does not reach its destination after being forwarded the specified number of times, the packet is discarded and the ICMP echo request fails.</span></span> <span data-ttu-id="488fd-383">この場合、<xref:System.Net.NetworkInformation.PingReply.Status%2A>に設定されている<xref:System.Net.NetworkInformation.IPStatus.TtlExpired>します。</span><span class="sxs-lookup"><span data-stu-id="488fd-383">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="488fd-384">次のコード例では、このメソッドを呼び出す方法を示します。</span><span class="sxs-lookup"><span data-stu-id="488fd-384">The following code example demonstrates how to call this method.</span></span>  
  
 [!code-cpp[NCLPingSampler#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLPingSampler/CPP/pingtest.cpp#4)]
 [!code-csharp[NCLPingSampler#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPingSampler/CS/pingtest.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="488fd-385">
            <paramref name="buffer" /> のサイズが 65500 バイトを超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-385">The size of <paramref name="buffer" /> exceeds 65500 bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="488fd-386">
            <paramref name="hostNameOrAddress" /> が <see langword="null" /> か、または長さ 0 の文字列です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-386">
              <paramref name="hostNameOrAddress" /> is <see langword="null" /> or is a zero length string.</span>
          </span>
          <span data-ttu-id="488fd-387">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-387">-or-</span>
          </span>
          <span data-ttu-id="488fd-388">
            <paramref name="buffer" /> が <see langword="null" /> です。または、<paramref name="buffer" /> のサイズが 65500 バイトを超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-388">
              <paramref name="buffer" /> is <see langword="null" />, or the <paramref name="buffer" /> size is greater than 65500 bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="488fd-389">
            <paramref name="timeout" /> が 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-389">
              <paramref name="timeout" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="488fd-390">
            <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> の呼び出しを実行中です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-390">A call to <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> is in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="488fd-391">
            <paramref name="address" /> は IPv6 アドレスですが、ローカル コンピューターでは Windows 2000 より前のオペレーティング システムが動作しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-391">
              <paramref name="address" /> is an IPv6 address and the local computer is running an operating system earlier than Windows 2000.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">
          <span data-ttu-id="488fd-392">ICMP メッセージの送信中または受信中に例外がスローされました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-392">An exception was thrown while sending or receiving the ICMP messages.</span>
          </span>
          <span data-ttu-id="488fd-393">スローされた実際の例外については内部例外を参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-393">See the inner exception for the exact exception that was thrown.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="488fd-394">このオブジェクトは破棄されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-394">This object has been disposed.</span>
          </span>
        </exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">
          <span data-ttu-id="488fd-395">ICMP エコー メッセージを送信します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-395">To send an ICMP echo message.</span>
          </span>
          <span data-ttu-id="488fd-396">関連付けられた列挙体。 <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-396">Associated enumeration: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="SendAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="488fd-397">非同期的に ICMP (インターネット制御メッセージ プロトコル) エコー メッセージをコンピューターに送信し、そのコンピューターから対応する ICMP エコー応答メッセージを受信します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-397">Asynchronously attempts to send an Internet Control Message Protocol (ICMP) echo message to a computer, and receive a corresponding ICMP echo reply message from that computer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="488fd-398">これらのメソッドは、アプリケーションのメイン スレッドをブロックには行われません。</span><span class="sxs-lookup"><span data-stu-id="488fd-398">These methods do not cause your application's main thread to block.</span></span> <span data-ttu-id="488fd-399">ICMP エコー応答メッセージを待機中にブロックする場合を使用して、<xref:System.Net.NetworkInformation.Ping.Send%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="488fd-399">If you want to block while waiting for the ICMP echo reply message, use the <xref:System.Net.NetworkInformation.Ping.Send%2A> methods.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="488fd-400">いずれかで返された IP アドレス、<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>メソッドは、悪意のあるリモート コンピューターから取得できます。</span><span class="sxs-lookup"><span data-stu-id="488fd-400">The IP address returned by any of the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> methods can originate from a malicious remote computer.</span></span> <span data-ttu-id="488fd-401">これを使用してリモート コンピューターに接続できません。</span><span class="sxs-lookup"><span data-stu-id="488fd-401">Do not connect to the remote computer using this.</span></span> <span data-ttu-id="488fd-402">接続するコンピューターの IP アドレスを確認するのにには、DNS を使用します。</span><span class="sxs-lookup"><span data-stu-id="488fd-402">Use DNS to determine the IP address of the machine to which you want to connect.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public void SendAsync (System.Net.IPAddress address, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsync(class System.Net.IPAddress address, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsync (address As IPAddress, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsync(System::Net::IPAddress ^ address, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.SendAsync : System.Net.IPAddress * obj -&gt; unit" Usage="ping.SendAsync (address, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="488fd-403">ICMP エコー メッセージの送信先コンピューターを識別する <see cref="T:System.Net.IPAddress" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-403">An <see cref="T:System.Net.IPAddress" /> that identifies the computer that is the destination for the ICMP echo message.</span>
          </span>
        </param>
        <param name="userToken">
          <span data-ttu-id="488fd-404">非同期操作が完了したときに呼び出されるメソッドに渡すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-404">An object that is passed to the method invoked when the asynchronous operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="488fd-405">指定された <see cref="T:System.Net.IPAddress" /> を持つコンピューターに、非同期的に ICMP (インターネット制御メッセージ プロトコル) エコー メッセージを送信し、そのコンピューターから対応する ICMP エコー応答メッセージを受信します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-405">Asynchronously attempts to send an Internet Control Message Protocol (ICMP) echo message to the computer that has the specified <see cref="T:System.Net.IPAddress" />, and receive a corresponding ICMP echo reply message from that computer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="488fd-406"><xref:System.Net.NetworkInformation.Ping.SendAsync%2A>メソッドがエコー メッセージを非同期的に送信し、アプリケーションにステータスを返します (正常または異常) 操作の完了します。</span><span class="sxs-lookup"><span data-stu-id="488fd-406">The <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method sends the echo message asynchronously and, when the operation completes (successfully or unsuccessfully), returns the status to your application.</span></span> <span data-ttu-id="488fd-407">呼び出す、<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>メソッドと、アプリケーションをブロックする必要があります。</span><span class="sxs-lookup"><span data-stu-id="488fd-407">Call the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method when your application should not block.</span></span> <span data-ttu-id="488fd-408">スレッド プールから自動的に割り当てられている別のスレッドで、このメソッドを呼び出すたびに実行します。</span><span class="sxs-lookup"><span data-stu-id="488fd-408">Each call to this method executes in a separate thread that is automatically allocated from the thread pool.</span></span> <span data-ttu-id="488fd-409">非同期操作が完了したら、生成、<xref:System.Net.NetworkInformation.Ping.PingCompleted>イベント。</span><span class="sxs-lookup"><span data-stu-id="488fd-409">When the asynchronous operation completes, it raises the <xref:System.Net.NetworkInformation.Ping.PingCompleted> event.</span></span> <span data-ttu-id="488fd-410">ときに呼び出されるメソッドを指定する<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>、イベントを発生させる、追加する必要があります、<xref:System.Net.NetworkInformation.PingCompletedEventHandler>デリゲートを呼び出す前にイベント<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>します。</span><span class="sxs-lookup"><span data-stu-id="488fd-410">To specify the method that is called when <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> raises the event, you must add a <xref:System.Net.NetworkInformation.PingCompletedEventHandler> delegate to the event before calling <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</span></span> <span data-ttu-id="488fd-411">デリゲートのメソッドは受信、<xref:System.Net.NetworkInformation.PingCompletedEventArgs>を含むオブジェクトを<xref:System.Net.NetworkInformation.PingReply>の結果を記述するオブジェクト、<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="488fd-411">The delegate's method receives a <xref:System.Net.NetworkInformation.PingCompletedEventArgs> object that contains a <xref:System.Net.NetworkInformation.PingReply> object that describes the result of the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> call.</span></span> <span data-ttu-id="488fd-412"><xref:System.Net.NetworkInformation.PingCompletedEventArgs>オブジェクトの継承、<xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="488fd-412">The <xref:System.Net.NetworkInformation.PingCompletedEventArgs> object inherits the <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> property.</span></span> <span data-ttu-id="488fd-413">このプロパティが含まれています、`userToken`に渡されたオブジェクト、<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>呼び出します。</span><span class="sxs-lookup"><span data-stu-id="488fd-413">This property contains the `userToken` object passed into the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> call.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="488fd-414">場合は、アプリケーションは、応答を待機しているときにブロックする必要がありますのいずれかを使用、<xref:System.Net.NetworkInformation.Ping.Send%2A>メソッドはこれらのメソッドは同期的です。</span><span class="sxs-lookup"><span data-stu-id="488fd-414">If your application should block while waiting for a reply, use one of the <xref:System.Net.NetworkInformation.Ping.Send%2A> methods; these methods are synchronous.</span></span>  
  
 <span data-ttu-id="488fd-415">このメソッドは、32 <xref:System.Byte> ICMP エコー メッセージを含むデータ バッファー。</span><span class="sxs-lookup"><span data-stu-id="488fd-415">This method sends a 32 <xref:System.Byte> data buffer with the ICMP echo message.</span></span> <span data-ttu-id="488fd-416">メソッドは、ICMP エコー応答メッセージを 5 秒間待機します。</span><span class="sxs-lookup"><span data-stu-id="488fd-416">The method waits five seconds for an ICMP echo reply message.</span></span> <span data-ttu-id="488fd-417">かどうかを受け取らず、応答時間の中で、メソッドを返します、<xref:System.Net.NetworkInformation.PingReply.Status%2A>プロパティに設定されて<xref:System.Net.NetworkInformation.IPStatus.TimedOut>します。</span><span class="sxs-lookup"><span data-stu-id="488fd-417">If it does not receive a reply in that time, the method returns and the <xref:System.Net.NetworkInformation.PingReply.Status%2A> property is set to <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.</span></span>  
  
 <span data-ttu-id="488fd-418">このオーバー ロードは、パケットのフラグメンテーションとパケットの転送の既定の設定を使用します。</span><span class="sxs-lookup"><span data-stu-id="488fd-418">This overload uses default settings for packet fragmentation and packet forwarding.</span></span> <span data-ttu-id="488fd-419">ICMP エコー メッセージを含むパケットをフラグメント化する転送中パケットの合計サイズが送信できる最大パケット サイズを超える場合、ローカルおよびリモート コンピューター間のルーティング ノードのいずれかでします。</span><span class="sxs-lookup"><span data-stu-id="488fd-419">The packet that contains the ICMP echo message can be fragmented in transit if the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers.</span></span> <span data-ttu-id="488fd-420">断片化を防ぐためには、いずれかの操作を使用して、<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>を受け取るメソッドを`options`パラメーター、およびセット、<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>プロパティを`true`します。</span><span class="sxs-lookup"><span data-stu-id="488fd-420">To prevent fragmentation, use one of the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> methods that takes an `options` parameter, and set the <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> property to `true`.</span></span> <span data-ttu-id="488fd-421">ときに<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>は`true`とパケットの合計サイズが、ローカルおよびリモート コンピューター間のルーティング ノードのいずれかで送信できる最大パケット サイズを超える、ICMP エコー要求は失敗します。</span><span class="sxs-lookup"><span data-stu-id="488fd-421">When <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> is `true` and the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers, the ICMP echo request fails.</span></span> <span data-ttu-id="488fd-422">この場合、<xref:System.Net.NetworkInformation.PingReply.Status%2A>に設定されている<xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>します。</span><span class="sxs-lookup"><span data-stu-id="488fd-422">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>.</span></span>  
  
 <span data-ttu-id="488fd-423">パケットまたはパケットのフラグメントは、破棄される前に、ルーティングのノードで 128 回転送されます。</span><span class="sxs-lookup"><span data-stu-id="488fd-423">The packet or packet fragments can be forwarded by routing nodes 128 times before being discarded.</span></span> <span data-ttu-id="488fd-424">この設定を変更するには、使用、<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>を受け取るオーバー ロードを`options`パラメーター、およびセット、<xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>プロパティを目的の値にします。</span><span class="sxs-lookup"><span data-stu-id="488fd-424">To change this setting, use a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> overload that takes an `options` parameter, and set the <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> property to the desired value.</span></span> <span data-ttu-id="488fd-425">パケットは、送信先を指定した回数だけが転送される後に到達しなかった場合は、パケットは破棄され、ICMP エコー要求は失敗します。</span><span class="sxs-lookup"><span data-stu-id="488fd-425">If the packet does not reach its destination after being forwarded the specified number of times, the packet is discarded and the ICMP echo request fails.</span></span> <span data-ttu-id="488fd-426">この場合、<xref:System.Net.NetworkInformation.PingReply.Status%2A>に設定されている<xref:System.Net.NetworkInformation.IPStatus.TtlExpired>します。</span><span class="sxs-lookup"><span data-stu-id="488fd-426">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="488fd-427">呼び出し元を示すコード例については、<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>メソッドを参照してください、<xref:System.Net.NetworkInformation.Ping>クラスの概要。</span><span class="sxs-lookup"><span data-stu-id="488fd-427">For a code example that demonstrates calling a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method, see the <xref:System.Net.NetworkInformation.Ping> class overview.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="488fd-428">
            <paramref name="address" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-428">
              <paramref name="address" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="488fd-429">
            <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> メソッドの呼び出しを実行中です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-429">A call to the <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> method is in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="488fd-430">
            <paramref name="address" /> は IPv6 アドレスですが、ローカル コンピューターでは Windows 2000 より前のオペレーティング システムが動作しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-430">
              <paramref name="address" /> is an IPv6 address and the local computer is running an operating system earlier than Windows 2000.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">
          <span data-ttu-id="488fd-431">ICMP メッセージの送信中または受信中に例外がスローされました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-431">An exception was thrown while sending or receiving the ICMP messages.</span>
          </span>
          <span data-ttu-id="488fd-432">スローされた実際の例外については内部例外を参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-432">See the inner exception for the exact exception that was thrown.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="488fd-433">
            <paramref name="address" /> が有効な IP アドレスではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-433">
              <paramref name="address" /> is not a valid IP address.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="488fd-434">このオブジェクトは破棄されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-434">This object has been disposed.</span>
          </span>
        </exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">
          <span data-ttu-id="488fd-435">ICMP エコー メッセージを送信します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-435">To send an ICMP echo message.</span>
          </span>
          <span data-ttu-id="488fd-436">関連付けられた列挙体。 <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-436">Associated enumeration: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public void SendAsync (string hostNameOrAddress, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsync(string hostNameOrAddress, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsync (hostNameOrAddress As String, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsync(System::String ^ hostNameOrAddress, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.SendAsync : string * obj -&gt; unit" Usage="ping.SendAsync (hostNameOrAddress, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">
          <span data-ttu-id="488fd-437">ICMP エコー メッセージの送信先コンピューターを識別する <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-437">A <see cref="T:System.String" /> that identifies the computer that is the destination for the ICMP echo message.</span>
          </span>
          <span data-ttu-id="488fd-438">このパラメーターの値には、ホスト名または IP アドレスの文字列形式を指定できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-438">The value specified for this parameter can be a host name or a string representation of an IP address.</span>
          </span>
        </param>
        <param name="userToken">
          <span data-ttu-id="488fd-439">非同期操作が完了したときに呼び出されるメソッドに渡すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-439">An object that is passed to the method invoked when the asynchronous operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="488fd-440">指定されたコンピューターに、非同期的に ICMP (インターネット制御メッセージ プロトコル) エコー メッセージを送信し、そのコンピューターから対応する ICMP エコー応答メッセージを受信します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-440">Asynchronously attempts to send an Internet Control Message Protocol (ICMP) echo message to the specified computer, and receive a corresponding ICMP echo reply message from that computer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="488fd-441"><xref:System.Net.NetworkInformation.Ping.SendAsync%2A>メソッドがエコー メッセージを非同期的に送信し、アプリケーションにステータスを返します (正常または異常) 操作の完了します。</span><span class="sxs-lookup"><span data-stu-id="488fd-441">The <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method sends the echo message asynchronously and, when the operation completes (successfully or unsuccessfully), returns the status to your application.</span></span> <span data-ttu-id="488fd-442">呼び出す、<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>メソッドと、アプリケーションをブロックする必要があります。</span><span class="sxs-lookup"><span data-stu-id="488fd-442">Call the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method when your application should not block.</span></span> <span data-ttu-id="488fd-443">スレッド プールから自動的に割り当てられている別のスレッドで、このメソッドを呼び出すたびに実行します。</span><span class="sxs-lookup"><span data-stu-id="488fd-443">Each call to this method executes in a separate thread that is automatically allocated from the thread pool.</span></span> <span data-ttu-id="488fd-444">非同期操作が完了したら、生成、<xref:System.Net.NetworkInformation.Ping.PingCompleted>イベント。</span><span class="sxs-lookup"><span data-stu-id="488fd-444">When the asynchronous operation completes, it raises the <xref:System.Net.NetworkInformation.Ping.PingCompleted> event.</span></span> <span data-ttu-id="488fd-445">ときに呼び出されるメソッドを指定する<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>、イベントを発生させる、追加する必要があります、<xref:System.Net.NetworkInformation.PingCompletedEventHandler>デリゲートを呼び出す前にイベント<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>します。</span><span class="sxs-lookup"><span data-stu-id="488fd-445">To specify the method that is called when <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> raises the event, you must add a <xref:System.Net.NetworkInformation.PingCompletedEventHandler> delegate to the event before calling <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</span></span> <span data-ttu-id="488fd-446">デリゲートのメソッドは受信、<xref:System.Net.NetworkInformation.PingCompletedEventArgs>を含むオブジェクトを<xref:System.Net.NetworkInformation.PingReply>の結果を記述するオブジェクト、<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="488fd-446">The delegate's method receives a <xref:System.Net.NetworkInformation.PingCompletedEventArgs> object that contains a <xref:System.Net.NetworkInformation.PingReply> object that describes the result of the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> call.</span></span> <span data-ttu-id="488fd-447"><xref:System.Net.NetworkInformation.PingCompletedEventArgs>オブジェクトの継承、<xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="488fd-447">The <xref:System.Net.NetworkInformation.PingCompletedEventArgs> object inherits the <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> property.</span></span> <span data-ttu-id="488fd-448">このプロパティが含まれています、`userToken`に渡されたオブジェクト、<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>呼び出します。</span><span class="sxs-lookup"><span data-stu-id="488fd-448">This property contains the `userToken` object passed into the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> call.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="488fd-449">場合は、アプリケーションは、応答を待機しているときにブロックする必要がありますを使用して、<xref:System.Net.NetworkInformation.Ping.Send%2A>メソッドはこれらのメソッドは同期的です。</span><span class="sxs-lookup"><span data-stu-id="488fd-449">If your application should block while waiting for a reply, use the <xref:System.Net.NetworkInformation.Ping.Send%2A> methods; these methods are synchronous.</span></span>  
  
 <span data-ttu-id="488fd-450">このメソッドは、32 <xref:System.Byte> ICMP エコー メッセージを含むデータ バッファー。</span><span class="sxs-lookup"><span data-stu-id="488fd-450">This method sends a 32 <xref:System.Byte> data buffer with the ICMP echo message.</span></span> <span data-ttu-id="488fd-451">メソッドは、ICMP エコー応答メッセージを 5 秒間待機します。</span><span class="sxs-lookup"><span data-stu-id="488fd-451">The method waits five seconds for an ICMP echo reply message.</span></span> <span data-ttu-id="488fd-452">その時点で、応答が受信しなかった場合、メソッドを返します、<xref:System.Net.NetworkInformation.PingReply.Status%2A>プロパティに設定されて<xref:System.Net.NetworkInformation.IPStatus.TimedOut>します。</span><span class="sxs-lookup"><span data-stu-id="488fd-452">If it does not receive a reply in that time the method returns and the <xref:System.Net.NetworkInformation.PingReply.Status%2A> property is set to <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.</span></span>  
  
 <span data-ttu-id="488fd-453">このオーバー ロードは、パケットのフラグメンテーションとパケットの転送の既定の設定を使用します。</span><span class="sxs-lookup"><span data-stu-id="488fd-453">This overload uses default settings for packet fragmentation and packet forwarding.</span></span> <span data-ttu-id="488fd-454">ICMP エコー メッセージを含むパケットをフラグメント化する転送中パケットの合計サイズが送信できる最大パケット サイズを超える場合、ローカルおよびリモート コンピューター間のルーティング ノードのいずれかでします。</span><span class="sxs-lookup"><span data-stu-id="488fd-454">The packet that contains the ICMP echo message can be fragmented in transit if the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers.</span></span> <span data-ttu-id="488fd-455">断片化を防ぐためには、いずれかの操作を使用して、<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>を受け取るメソッドを`options`パラメーター、およびセット、<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>プロパティを`true`します。</span><span class="sxs-lookup"><span data-stu-id="488fd-455">To prevent fragmentation, use one of the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> methods that takes an `options` parameter, and set the <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> property to `true`.</span></span> <span data-ttu-id="488fd-456">ときに<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>は`true`とパケットの合計サイズが、ローカルおよびリモート コンピューター間のルーティング ノードのいずれかで送信できる最大パケット サイズを超える、ICMP エコー要求は失敗します。</span><span class="sxs-lookup"><span data-stu-id="488fd-456">When <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> is `true` and the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers, the ICMP echo request fails.</span></span> <span data-ttu-id="488fd-457">この場合、<xref:System.Net.NetworkInformation.PingReply.Status%2A>に設定されている<xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>します。</span><span class="sxs-lookup"><span data-stu-id="488fd-457">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>.</span></span>  
  
 <span data-ttu-id="488fd-458">パケットまたはパケットのフラグメントは、破棄される前に、ルーティングのノードで 128 回転送されます。</span><span class="sxs-lookup"><span data-stu-id="488fd-458">The packet or packet fragments can be forwarded by routing nodes 128 times before being discarded.</span></span> <span data-ttu-id="488fd-459">この設定を変更するには、使用、<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>を受け取るオーバー ロードを`options`パラメーター、およびセット、<xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>プロパティを目的の値にします。</span><span class="sxs-lookup"><span data-stu-id="488fd-459">To change this setting, use a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> overload that takes an `options` parameter, and set the <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> property to the desired value.</span></span> <span data-ttu-id="488fd-460">パケットは、送信先を指定した回数だけが転送される後に到達しなかった場合は、パケットは破棄され、ICMP エコー要求は失敗します。</span><span class="sxs-lookup"><span data-stu-id="488fd-460">If the packet does not reach its destination after being forwarded the specified number of times, the packet is discarded and the ICMP echo request fails.</span></span> <span data-ttu-id="488fd-461">この場合、<xref:System.Net.NetworkInformation.PingReply.Status%2A>に設定されている<xref:System.Net.NetworkInformation.IPStatus.TtlExpired>します。</span><span class="sxs-lookup"><span data-stu-id="488fd-461">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="488fd-462">呼び出し元を示すコード例については、<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>メソッドを参照してください、<xref:System.Net.NetworkInformation.Ping>クラスの概要。</span><span class="sxs-lookup"><span data-stu-id="488fd-462">For a code example that demonstrates calling the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method, see the <xref:System.Net.NetworkInformation.Ping> class overview.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="488fd-463">
            <paramref name="hostNameOrAddress" /> が <see langword="null" /> または空の文字列 ("") です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-463">
              <paramref name="hostNameOrAddress" /> is <see langword="null" /> or is an empty string ("").</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="488fd-464">
            <see cref="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Object)" /> メソッドの呼び出しを実行中です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-464">A call to <see cref="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Object)" /> method is in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="488fd-465">
            <paramref name="address" /> は IPv6 アドレスですが、ローカル コンピューターでは Windows 2000 より前のオペレーティング システムが動作しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-465">
              <paramref name="address" /> is an IPv6 address and the local computer is running an operating system earlier than Windows 2000.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">
          <span data-ttu-id="488fd-466">ICMP メッセージの送信中または受信中に例外がスローされました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-466">An exception was thrown while sending or receiving the ICMP messages.</span>
          </span>
          <span data-ttu-id="488fd-467">スローされた実際の例外については内部例外を参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-467">See the inner exception for the exact exception that was thrown.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="488fd-468">
            <paramref name="hostNameOrAddress" /> を有効な IP アドレスに解決できませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-468">
              <paramref name="hostNameOrAddress" /> could not be resolved to a valid IP address.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="488fd-469">このオブジェクトは破棄されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-469">This object has been disposed.</span>
          </span>
        </exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">
          <span data-ttu-id="488fd-470">ICMP エコー メッセージを送信します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-470">To send an ICMP echo message.</span>
          </span>
          <span data-ttu-id="488fd-471">関連付けられた列挙体。 <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-471">Associated enumeration: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public void SendAsync (System.Net.IPAddress address, int timeout, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsync(class System.Net.IPAddress address, int32 timeout, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsync (address As IPAddress, timeout As Integer, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsync(System::Net::IPAddress ^ address, int timeout, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.SendAsync : System.Net.IPAddress * int * obj -&gt; unit" Usage="ping.SendAsync (address, timeout, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
        <Parameter Name="timeout" Type="System.Int32" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="488fd-472">ICMP エコー メッセージの送信先コンピューターを識別する <see cref="T:System.Net.IPAddress" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-472">An <see cref="T:System.Net.IPAddress" /> that identifies the computer that is the destination for the ICMP echo message.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="488fd-473">エコー メッセージを送信してから ICMP エコー応答メッセージを待つ時間の最大値 (ミリ秒単位) を指定する <see cref="T:System.Int32" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-473">An <see cref="T:System.Int32" /> value that specifies the maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</span>
          </span>
        </param>
        <param name="userToken">
          <span data-ttu-id="488fd-474">非同期操作が完了したときに呼び出されるメソッドに渡すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-474">An object that is passed to the method invoked when the asynchronous operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="488fd-475">指定された <see cref="T:System.Net.IPAddress" /> を持つコンピューターに、非同期的に ICMP (インターネット制御メッセージ プロトコル) エコー メッセージを送信し、そのコンピューターから対応する ICMP エコー応答メッセージを受信します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-475">Asynchronously attempts to send an Internet Control Message Protocol (ICMP) echo message to the computer that has the specified <see cref="T:System.Net.IPAddress" />, and receive a corresponding ICMP echo reply message from that computer.</span>
          </span>
          <span data-ttu-id="488fd-476">このオーバーロードを使用して、操作のタイムアウト値を指定できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-476">This overload allows you to specify a time-out value for the operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="488fd-477"><xref:System.Net.NetworkInformation.Ping.SendAsync%2A>メソッドがエコー メッセージを非同期的に送信し、アプリケーションにステータスを返します (正常または異常) 操作の完了します。</span><span class="sxs-lookup"><span data-stu-id="488fd-477">The <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method sends the Echo message asynchronously and, when the operation completes (successfully or unsuccessfully), returns the status to your application.</span></span> <span data-ttu-id="488fd-478">呼び出す、<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>メソッドと、アプリケーションをブロックする必要があります。</span><span class="sxs-lookup"><span data-stu-id="488fd-478">Call the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method when your application should not block.</span></span> <span data-ttu-id="488fd-479">各呼び出しは、スレッド プールから自動的に割り当てられている別のスレッドで実行されます。</span><span class="sxs-lookup"><span data-stu-id="488fd-479">Each call executes in a separate thread that is automatically allocated from the thread pool.</span></span> <span data-ttu-id="488fd-480">非同期操作が完了したら、生成、<xref:System.Net.NetworkInformation.Ping.PingCompleted>イベント。</span><span class="sxs-lookup"><span data-stu-id="488fd-480">When the asynchronous operation completes, it raises the <xref:System.Net.NetworkInformation.Ping.PingCompleted> event.</span></span> <span data-ttu-id="488fd-481">アプリケーションを使用して、<xref:System.Net.NetworkInformation.PingCompletedEventHandler>時に呼び出されるメソッドを指定するデリゲート<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="488fd-481">Applications use a <xref:System.Net.NetworkInformation.PingCompletedEventHandler> delegate to specify the method that is called when <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> raises the event.</span></span> <span data-ttu-id="488fd-482">追加する必要があります、<xref:System.Net.NetworkInformation.PingCompletedEventHandler>デリゲートを呼び出す前にイベント<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>します。</span><span class="sxs-lookup"><span data-stu-id="488fd-482">You must add a <xref:System.Net.NetworkInformation.PingCompletedEventHandler> delegate to the event before calling <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</span></span> <span data-ttu-id="488fd-483">デリゲートのメソッドは受信、<xref:System.Net.NetworkInformation.PingCompletedEventArgs>を含むオブジェクトを<xref:System.Net.NetworkInformation.PingReply>の結果を記述するオブジェクト、<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="488fd-483">The delegate's method receives a <xref:System.Net.NetworkInformation.PingCompletedEventArgs> object that contains a <xref:System.Net.NetworkInformation.PingReply> object that describes the result of the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> call.</span></span> <span data-ttu-id="488fd-484"><xref:System.Net.NetworkInformation.PingCompletedEventArgs>オブジェクトの継承、<xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="488fd-484">The <xref:System.Net.NetworkInformation.PingCompletedEventArgs> object inherits the <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> property.</span></span> <span data-ttu-id="488fd-485">このプロパティが含まれています、`userToken`に渡されたオブジェクト、<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>呼び出します。</span><span class="sxs-lookup"><span data-stu-id="488fd-485">This property contains the `userToken` object passed into the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> call.</span></span>  
  
 <span data-ttu-id="488fd-486">場合は、アプリケーションは、応答を待機しているときにブロックする必要がありますを使用して、<xref:System.Net.NetworkInformation.Ping.Send%2A>メソッドはこれらのメソッドは同期的です。</span><span class="sxs-lookup"><span data-stu-id="488fd-486">If your application should block while waiting for a reply, use the <xref:System.Net.NetworkInformation.Ping.Send%2A> methods; these methods are synchronous.</span></span>  
  
 <span data-ttu-id="488fd-487">指定された時間内では、ICMP エコー応答メッセージが受信されない場合、`timeout`パラメーター、ICMP エコー失敗した場合、および<xref:System.Net.NetworkInformation.PingReply.Status%2A>プロパティに設定されて<xref:System.Net.NetworkInformation.IPStatus.TimedOut>します。</span><span class="sxs-lookup"><span data-stu-id="488fd-487">If the ICMP echo reply message is not received within the time specified by the `timeout` parameter, the ICMP echo fails, and the <xref:System.Net.NetworkInformation.PingReply.Status%2A> property is set to <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="488fd-488">非常に小さな数値を指定するときに`timeout`、Ping の応答を受信できる場合でも`timeout`経過時間 (ミリ秒)。</span><span class="sxs-lookup"><span data-stu-id="488fd-488">When specifying very small numbers for `timeout`, the Ping reply can be received even if `timeout` milliseconds have elapsed.</span></span>  
  
 <span data-ttu-id="488fd-489">このオーバー ロードは、パケットのフラグメンテーションとパケットの転送の既定の設定を使用します。</span><span class="sxs-lookup"><span data-stu-id="488fd-489">This overload uses default settings for packet fragmentation and packet forwarding.</span></span> <span data-ttu-id="488fd-490">ICMP エコー メッセージを含むパケットをフラグメント化する転送中パケットの合計サイズが送信できる最大パケット サイズを超える場合、ローカルおよびリモート コンピューター間のルーティング ノードのいずれかでします。</span><span class="sxs-lookup"><span data-stu-id="488fd-490">The packet that contains the ICMP echo message can be fragmented in transit if the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers.</span></span> <span data-ttu-id="488fd-491">断片化を防ぐためには、いずれかの操作を使用して、<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>を受け取るメソッドを`options`パラメーター、およびセット、<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>プロパティを`true`します。</span><span class="sxs-lookup"><span data-stu-id="488fd-491">To prevent fragmentation, use one of the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> methods that takes an `options` parameter, and set the <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> property to `true`.</span></span> <span data-ttu-id="488fd-492">ときに<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>は`true`とパケットの合計サイズが、ローカルおよびリモート コンピューター間のルーティング ノードのいずれかで送信できる最大パケット サイズを超える、ICMP エコー要求は失敗します。</span><span class="sxs-lookup"><span data-stu-id="488fd-492">When <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> is `true` and the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers, the ICMP echo request fails.</span></span> <span data-ttu-id="488fd-493">この場合、<xref:System.Net.NetworkInformation.PingReply.Status%2A>に設定されている<xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>します。</span><span class="sxs-lookup"><span data-stu-id="488fd-493">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>.</span></span> <span data-ttu-id="488fd-494">パケットまたはパケットのフラグメント (断片化) する場合は、破棄される前に、ルーティングのノードで 128 回転送されます。</span><span class="sxs-lookup"><span data-stu-id="488fd-494">The packet or packet fragments (if fragmented) can be forwarded by routing nodes 128 times before being discarded.</span></span> <span data-ttu-id="488fd-495">この設定を変更するには、使用、<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>を受け取るオーバー ロードを`options`パラメーター、およびセット、<xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>プロパティを目的の値にします。</span><span class="sxs-lookup"><span data-stu-id="488fd-495">To change this setting, use a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> overload that takes an `options` parameter, and set the <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> property to the desired value.</span></span> <span data-ttu-id="488fd-496">パケットは、送信先を指定した回数だけが転送される後に到達しなかった場合は、パケットは破棄され、ICMP エコー要求は失敗します。</span><span class="sxs-lookup"><span data-stu-id="488fd-496">If the packet does not reach its destination after being forwarded the specified number of times, the packet is discarded and the ICMP echo request fails.</span></span> <span data-ttu-id="488fd-497">この場合、<xref:System.Net.NetworkInformation.PingReply.Status%2A>に設定されている<xref:System.Net.NetworkInformation.IPStatus.TtlExpired>します。</span><span class="sxs-lookup"><span data-stu-id="488fd-497">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="488fd-498">呼び出し元を示すコード例については、<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>オーバー ロードを参照してください、<xref:System.Net.NetworkInformation.Ping>クラスの概要。</span><span class="sxs-lookup"><span data-stu-id="488fd-498">For a code example that demonstrates calling a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> overload, see the <xref:System.Net.NetworkInformation.Ping> class overview.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="488fd-499">
            <paramref name="address" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-499">
              <paramref name="address" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="488fd-500">
            <paramref name="timeout" /> が 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-500">
              <paramref name="timeout" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="488fd-501">
            <see cref="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)" /> メソッドの呼び出しを実行中です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-501">A call to <see cref="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)" /> method is in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="488fd-502">
            <paramref name="address" /> は IPv6 アドレスですが、ローカル コンピューターでは Windows 2000 より前のオペレーティング システムが動作しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-502">
              <paramref name="address" /> is an IPv6 address and the local computer is running an operating system earlier than Windows 2000.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">
          <span data-ttu-id="488fd-503">ICMP メッセージの送信中または受信中に例外がスローされました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-503">An exception was thrown while sending or receiving the ICMP messages.</span>
          </span>
          <span data-ttu-id="488fd-504">スローされた実際の例外については内部例外を参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-504">See the inner exception for the exact exception that was thrown.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="488fd-505">
            <paramref name="address" /> が有効な IP アドレスではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-505">
              <paramref name="address" /> is not a valid IP address.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="488fd-506">このオブジェクトは破棄されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-506">This object has been disposed.</span>
          </span>
        </exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">
          <span data-ttu-id="488fd-507">ICMP エコー メッセージを送信します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-507">To send an ICMP echo message.</span>
          </span>
          <span data-ttu-id="488fd-508">関連付けられた列挙体。 <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-508">Associated enumeration: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public void SendAsync (string hostNameOrAddress, int timeout, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsync(string hostNameOrAddress, int32 timeout, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsync (hostNameOrAddress As String, timeout As Integer, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsync(System::String ^ hostNameOrAddress, int timeout, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.SendAsync : string * int * obj -&gt; unit" Usage="ping.SendAsync (hostNameOrAddress, timeout, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
        <Parameter Name="timeout" Type="System.Int32" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">
          <span data-ttu-id="488fd-509">ICMP エコー メッセージの送信先コンピューターを識別する <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-509">A <see cref="T:System.String" /> that identifies the computer that is the destination for the ICMP echo message.</span>
          </span>
          <span data-ttu-id="488fd-510">このパラメーターの値には、ホスト名または IP アドレスの文字列形式を指定できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-510">The value specified for this parameter can be a host name or a string representation of an IP address.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="488fd-511">エコー メッセージを送信してから ICMP エコー応答メッセージを待つ時間の最大値 (ミリ秒単位) を指定する <see cref="T:System.Int32" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-511">An <see cref="T:System.Int32" /> value that specifies the maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</span>
          </span>
        </param>
        <param name="userToken">
          <span data-ttu-id="488fd-512">非同期操作が完了したときに呼び出されるメソッドに渡すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-512">An object that is passed to the method invoked when the asynchronous operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="488fd-513">指定されたコンピューターに、非同期的に ICMP (インターネット制御メッセージ プロトコル) エコー メッセージを送信し、そのコンピューターから対応する ICMP エコー応答メッセージを受信します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-513">Asynchronously attempts to send an Internet Control Message Protocol (ICMP) echo message to the specified computer, and receive a corresponding ICMP echo reply message from that computer.</span>
          </span>
          <span data-ttu-id="488fd-514">このオーバーロードを使用して、操作のタイムアウト値を指定できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-514">This overload allows you to specify a time-out value for the operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="488fd-515"><xref:System.Net.NetworkInformation.Ping.SendAsync%2A>メソッドがエコー メッセージを非同期的に送信し、アプリケーションにステータスを返します (正常または異常) 操作の完了します。</span><span class="sxs-lookup"><span data-stu-id="488fd-515">The <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method sends the Echo message asynchronously and, when the operation completes (successfully or unsuccessfully), returns the status to your application.</span></span> <span data-ttu-id="488fd-516">呼び出す、<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>メソッドと、アプリケーションをブロックする必要があります。</span><span class="sxs-lookup"><span data-stu-id="488fd-516">Call the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method when your application should not block.</span></span> <span data-ttu-id="488fd-517">各呼び出しは、スレッド プールから自動的に割り当てられている別のスレッドで実行されます。</span><span class="sxs-lookup"><span data-stu-id="488fd-517">Each call executes in a separate thread that is automatically allocated from the thread pool.</span></span> <span data-ttu-id="488fd-518">非同期操作が完了したら、生成、<xref:System.Net.NetworkInformation.Ping.PingCompleted>イベント。</span><span class="sxs-lookup"><span data-stu-id="488fd-518">When the asynchronous operation completes, it raises the <xref:System.Net.NetworkInformation.Ping.PingCompleted> event.</span></span> <span data-ttu-id="488fd-519">アプリケーションを使用して、<xref:System.Net.NetworkInformation.PingCompletedEventHandler>時に呼び出されるメソッドを指定するデリゲート<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="488fd-519">Applications use a <xref:System.Net.NetworkInformation.PingCompletedEventHandler> delegate to specify the method that is called when <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> raises the event.</span></span> <span data-ttu-id="488fd-520">追加する必要があります、<xref:System.Net.NetworkInformation.PingCompletedEventHandler>デリゲートを呼び出す前にイベント<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>します。</span><span class="sxs-lookup"><span data-stu-id="488fd-520">You must add a <xref:System.Net.NetworkInformation.PingCompletedEventHandler> delegate to the event before calling <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</span></span> <span data-ttu-id="488fd-521">デリゲートのメソッドは受信、<xref:System.Net.NetworkInformation.PingCompletedEventArgs>を含むオブジェクトを<xref:System.Net.NetworkInformation.PingReply>の結果を記述するオブジェクト、<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="488fd-521">The delegate's method receives a <xref:System.Net.NetworkInformation.PingCompletedEventArgs> object that contains a <xref:System.Net.NetworkInformation.PingReply> object that describes the result of the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> call.</span></span> <span data-ttu-id="488fd-522"><xref:System.Net.NetworkInformation.PingCompletedEventArgs>オブジェクトの継承、<xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="488fd-522">The <xref:System.Net.NetworkInformation.PingCompletedEventArgs> object inherits the <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> property.</span></span> <span data-ttu-id="488fd-523">このプロパティが含まれています、`userToken`に渡されたオブジェクト、<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>呼び出します。</span><span class="sxs-lookup"><span data-stu-id="488fd-523">This property contains the `userToken` object passed into the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> call.</span></span>  
  
 <span data-ttu-id="488fd-524">場合は、アプリケーションは、応答を待機しているときにブロックする必要がありますを使用して、<xref:System.Net.NetworkInformation.Ping.Send%2A>メソッドはこれらのメソッドは同期的です。</span><span class="sxs-lookup"><span data-stu-id="488fd-524">If your application should block while waiting for a reply, use the <xref:System.Net.NetworkInformation.Ping.Send%2A> methods; these methods are synchronous.</span></span>  
  
 <span data-ttu-id="488fd-525">指定された時間内では、ICMP エコー応答メッセージが受信されない場合、`timeout`パラメーター、ICMP エコー失敗した場合、および<xref:System.Net.NetworkInformation.PingReply.Status%2A>プロパティに設定されて<xref:System.Net.NetworkInformation.IPStatus.TimedOut>します。</span><span class="sxs-lookup"><span data-stu-id="488fd-525">If the ICMP echo reply message is not received within the time specified by the `timeout` parameter, the ICMP echo fails, and the <xref:System.Net.NetworkInformation.PingReply.Status%2A> property is set to <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="488fd-526">非常に小さな数値を指定するときに`timeout`、Ping の応答を受信できる場合でも`timeout`経過時間 (ミリ秒)。</span><span class="sxs-lookup"><span data-stu-id="488fd-526">When specifying very small numbers for `timeout`, the Ping reply can be received even if `timeout` milliseconds have elapsed.</span></span>  
  
 <span data-ttu-id="488fd-527">このオーバー ロードは、パケットのフラグメンテーションとパケットの転送の既定の設定を使用します。</span><span class="sxs-lookup"><span data-stu-id="488fd-527">This overload uses default settings for packet fragmentation and packet forwarding.</span></span> <span data-ttu-id="488fd-528">ICMP エコー メッセージを含むパケットをフラグメント化する転送中パケットの合計サイズが送信できる最大パケット サイズを超える場合、ローカルおよびリモート コンピューター間のルーティング ノードのいずれかでします。</span><span class="sxs-lookup"><span data-stu-id="488fd-528">The packet that contains the ICMP echo message can be fragmented in transit if the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers.</span></span> <span data-ttu-id="488fd-529">断片化を防ぐためには、いずれかの操作を使用して、<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>を受け取るメソッドを`options`パラメーター、およびセット、<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>プロパティを`true`します。</span><span class="sxs-lookup"><span data-stu-id="488fd-529">To prevent fragmentation, use one of the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> methods that takes an `options` parameter, and set the <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> property to `true`.</span></span> <span data-ttu-id="488fd-530">ときに<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>は`true`とパケットの合計サイズが、ローカルおよびリモート コンピューター間のルーティング ノードのいずれかで送信できる最大パケット サイズを超える、ICMP エコー要求は失敗します。</span><span class="sxs-lookup"><span data-stu-id="488fd-530">When <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> is `true` and the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers, the ICMP echo request fails.</span></span> <span data-ttu-id="488fd-531">この場合、<xref:System.Net.NetworkInformation.PingReply.Status%2A>に設定されている<xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>します。</span><span class="sxs-lookup"><span data-stu-id="488fd-531">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>.</span></span> <span data-ttu-id="488fd-532">パケットまたはパケットのフラグメント (断片化) する場合は、破棄される前に、ルーティングのノードで 128 回転送されます。</span><span class="sxs-lookup"><span data-stu-id="488fd-532">The packet or packet fragments (if fragmented) can be forwarded by routing nodes 128 times before being discarded.</span></span> <span data-ttu-id="488fd-533">この設定を変更するには、使用、<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>を受け取るオーバー ロードを`options`パラメーター、およびセット、<xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>プロパティを目的の値にします。</span><span class="sxs-lookup"><span data-stu-id="488fd-533">To change this setting, use a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> overload that takes an `options` parameter, and set the <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> property to the desired value.</span></span> <span data-ttu-id="488fd-534">パケットは、送信先を指定した回数だけが転送される後に到達しなかった場合は、パケットは破棄され、ICMP エコー要求は失敗します。</span><span class="sxs-lookup"><span data-stu-id="488fd-534">If the packet does not reach its destination after being forwarded the specified number of times, the packet is discarded and the ICMP echo request fails.</span></span> <span data-ttu-id="488fd-535">この場合、<xref:System.Net.NetworkInformation.PingReply.Status%2A>に設定されている<xref:System.Net.NetworkInformation.IPStatus.TtlExpired>します。</span><span class="sxs-lookup"><span data-stu-id="488fd-535">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="488fd-536">呼び出し元を示すコード例については、<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>メソッドを参照してください、<xref:System.Net.NetworkInformation.Ping>クラスの概要。</span><span class="sxs-lookup"><span data-stu-id="488fd-536">For a code example that demonstrates calling the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method, see the <xref:System.Net.NetworkInformation.Ping> class overview.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="488fd-537">
            <paramref name="hostNameOrAddress" /> が <see langword="null" /> または空の文字列 ("") です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-537">
              <paramref name="hostNameOrAddress" /> is <see langword="null" /> or is an empty string ("").</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="488fd-538">
            <paramref name="timeout" /> が 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-538">
              <paramref name="timeout" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="488fd-539">
            <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> の呼び出しを実行中です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-539">A call to <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> is in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="488fd-540">
            <paramref name="hostNameOrAddress" /> は IPv6 アドレスですが、ローカル コンピューターでは Windows 2000 より前のオペレーティング システムが動作しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-540">
              <paramref name="hostNameOrAddress" /> is an IPv6 address and the local computer is running an operating system earlier than Windows 2000.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">
          <span data-ttu-id="488fd-541">ICMP メッセージの送信中または受信中に例外がスローされました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-541">An exception was thrown while sending or receiving the ICMP messages.</span>
          </span>
          <span data-ttu-id="488fd-542">スローされた実際の例外については内部例外を参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-542">See the inner exception for the exact exception that was thrown.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="488fd-543">
            <paramref name="hostNameOrAddress" /> を有効な IP アドレスに解決できませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-543">
              <paramref name="hostNameOrAddress" /> could not be resolved to a valid IP address.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="488fd-544">このオブジェクトは破棄されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-544">This object has been disposed.</span>
          </span>
        </exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">
          <span data-ttu-id="488fd-545">ICMP エコー メッセージを送信します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-545">To send an ICMP echo message.</span>
          </span>
          <span data-ttu-id="488fd-546">関連付けられた列挙体。 <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-546">Associated enumeration: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public void SendAsync (System.Net.IPAddress address, int timeout, byte[] buffer, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsync(class System.Net.IPAddress address, int32 timeout, unsigned int8[] buffer, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsync (address As IPAddress, timeout As Integer, buffer As Byte(), userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsync(System::Net::IPAddress ^ address, int timeout, cli::array &lt;System::Byte&gt; ^ buffer, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.SendAsync : System.Net.IPAddress * int * byte[] * obj -&gt; unit" Usage="ping.SendAsync (address, timeout, buffer, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
        <Parameter Name="timeout" Type="System.Int32" />
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="488fd-547">ICMP エコー メッセージの送信先コンピューターを識別する <see cref="T:System.Net.IPAddress" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-547">An <see cref="T:System.Net.IPAddress" /> that identifies the computer that is the destination for the ICMP echo message.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="488fd-548">エコー メッセージを送信してから ICMP エコー応答メッセージを待つ時間の最大値 (ミリ秒単位) を指定する <see cref="T:System.Int32" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-548">An <see cref="T:System.Int32" /> value that specifies the maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</span>
          </span>
        </param>
        <param name="buffer">
          <span data-ttu-id="488fd-549">ICMP エコー メッセージと共に送信されるデータが格納され、ICMP エコー応答メッセージで返される <see cref="T:System.Byte" /> 配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-549">A <see cref="T:System.Byte" /> array that contains data to be sent with the ICMP echo message and returned in the ICMP echo reply message.</span>
          </span>
          <span data-ttu-id="488fd-550">配列には、65,500 バイトを超えるデータを格納することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-550">The array cannot contain more than 65,500 bytes.</span>
          </span>
        </param>
        <param name="userToken">
          <span data-ttu-id="488fd-551">非同期操作が完了したときに呼び出されるメソッドに渡すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-551">An object that is passed to the method invoked when the asynchronous operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="488fd-552">指定された <see cref="T:System.Net.IPAddress" /> を持つコンピューターに、指定されたデータ バッファーと共に ICMP (インターネット制御メッセージ プロトコル) エコー メッセージを非同期的に送信し、そのコンピューターから対応する ICMP エコー応答メッセージを受信します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-552">Asynchronously attempts to send an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the computer that has the specified <see cref="T:System.Net.IPAddress" />, and receive a corresponding ICMP echo reply message from that computer.</span>
          </span>
          <span data-ttu-id="488fd-553">このオーバーロードを使用して、操作のタイムアウト値を指定できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-553">This overload allows you to specify a time-out value for the operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="488fd-554">このメソッドは、エコー メッセージを非同期的に送信し、アプリケーションに状態を返します (正常または異常) 操作の完了します。</span><span class="sxs-lookup"><span data-stu-id="488fd-554">This method sends the echo message asynchronously and, when the operation completes (successfully or unsuccessfully), returns the status to your application.</span></span> <span data-ttu-id="488fd-555">呼び出す、<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>メソッドと、アプリケーションをブロックする必要があります。</span><span class="sxs-lookup"><span data-stu-id="488fd-555">Call the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method when your application should not block.</span></span> <span data-ttu-id="488fd-556">各呼び出しは、スレッド プールから自動的に割り当てられている別のスレッドで実行されます。</span><span class="sxs-lookup"><span data-stu-id="488fd-556">Each call executes in a separate thread that is automatically allocated from the thread pool.</span></span> <span data-ttu-id="488fd-557">非同期操作が完了したら、生成、<xref:System.Net.NetworkInformation.Ping.PingCompleted>イベント。</span><span class="sxs-lookup"><span data-stu-id="488fd-557">When the asynchronous operation completes, it raises the <xref:System.Net.NetworkInformation.Ping.PingCompleted> event.</span></span> <span data-ttu-id="488fd-558">ときに呼び出されるメソッドを指定する<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>、イベントを発生させる、追加する必要があります、<xref:System.Net.NetworkInformation.PingCompletedEventHandler>デリゲートを呼び出す前にイベント<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>します。</span><span class="sxs-lookup"><span data-stu-id="488fd-558">To specify the method that is called when <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> raises the event, you must add a <xref:System.Net.NetworkInformation.PingCompletedEventHandler> delegate to the event before calling <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</span></span> <span data-ttu-id="488fd-559">デリゲートのメソッドは受信、<xref:System.Net.NetworkInformation.PingCompletedEventArgs>を含むオブジェクトを<xref:System.Net.NetworkInformation.PingReply>の結果を記述するオブジェクト、<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="488fd-559">The delegate's method receives a <xref:System.Net.NetworkInformation.PingCompletedEventArgs> object that contains a <xref:System.Net.NetworkInformation.PingReply> object that describes the result of the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> call.</span></span> <span data-ttu-id="488fd-560"><xref:System.Net.NetworkInformation.PingCompletedEventArgs>オブジェクトの継承、<xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="488fd-560">The <xref:System.Net.NetworkInformation.PingCompletedEventArgs> object inherits the <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> property.</span></span> <span data-ttu-id="488fd-561">このプロパティが含まれています、`userToken`に渡されたオブジェクト、<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>呼び出します。</span><span class="sxs-lookup"><span data-stu-id="488fd-561">This property contains the `userToken` object passed into the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> call.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="488fd-562">応答を待機しているときに、アプリケーションをブロックする場合は、使用、<xref:System.Net.NetworkInformation.Ping.Send%2A>メソッドはこれらのメソッドは同期的です。</span><span class="sxs-lookup"><span data-stu-id="488fd-562">If your application blocks while waiting for a reply, use the <xref:System.Net.NetworkInformation.Ping.Send%2A> methods; these methods are synchronous.</span></span>  
  
 <span data-ttu-id="488fd-563">指定された時間内では、ICMP エコー応答メッセージが受信されない場合、`timeout`パラメーター、ICMP エコー失敗した場合、および<xref:System.Net.NetworkInformation.PingReply.Status%2A>プロパティに設定されて<xref:System.Net.NetworkInformation.IPStatus.TimedOut>します。</span><span class="sxs-lookup"><span data-stu-id="488fd-563">If the ICMP echo reply message is not received within the time specified by the `timeout` parameter, the ICMP echo fails, and the <xref:System.Net.NetworkInformation.PingReply.Status%2A> property is set to <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="488fd-564">非常に小さな数値を指定するときに`timeout`、Ping の応答を受信できる場合でも`timeout`経過時間 (ミリ秒)。</span><span class="sxs-lookup"><span data-stu-id="488fd-564">When specifying very small numbers for `timeout`, the Ping reply can be received even if `timeout` milliseconds have elapsed.</span></span>  
  
 <span data-ttu-id="488fd-565">このオーバー ロードは、パケットのフラグメンテーションとパケットの転送の既定の設定を使用します。</span><span class="sxs-lookup"><span data-stu-id="488fd-565">This overload uses default settings for packet fragmentation and packet forwarding.</span></span> <span data-ttu-id="488fd-566">ICMP エコー メッセージを含むパケットをフラグメント化する転送中パケットの合計サイズが送信できる最大パケット サイズを超える場合、ローカルおよびリモート コンピューター間のルーティング ノードのいずれかでします。</span><span class="sxs-lookup"><span data-stu-id="488fd-566">The packet that contains the ICMP echo message can be fragmented in transit if the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers.</span></span> <span data-ttu-id="488fd-567">断片化を防ぐためには、いずれかの操作を使用して、<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>を受け取るメソッドを`options`パラメーター、およびセット、<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>プロパティを`true`します。</span><span class="sxs-lookup"><span data-stu-id="488fd-567">To prevent fragmentation, use one of the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> methods that takes an `options` parameter, and set the <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> property to `true`.</span></span> <span data-ttu-id="488fd-568">ときに<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>は`true`とパケットの合計サイズが、ローカルおよびリモート コンピューター間のルーティング ノードのいずれかで送信できる最大パケット サイズを超える、ICMP エコー要求は失敗します。</span><span class="sxs-lookup"><span data-stu-id="488fd-568">When <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> is `true` and the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers, the ICMP echo request fails.</span></span> <span data-ttu-id="488fd-569">この場合、<xref:System.Net.NetworkInformation.PingReply.Status%2A>に設定されている<xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>します。</span><span class="sxs-lookup"><span data-stu-id="488fd-569">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>.</span></span> <span data-ttu-id="488fd-570">パケットまたはパケットのフラグメント (断片化) する場合は、破棄される前に、ルーティングのノードで 128 回転送されます。</span><span class="sxs-lookup"><span data-stu-id="488fd-570">The packet or packet fragments (if fragmented) can be forwarded by routing nodes 128 times before being discarded.</span></span> <span data-ttu-id="488fd-571">この設定を変更するには、使用、<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>を受け取るオーバー ロードを`options`パラメーター、およびセット、<xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>プロパティを目的の値にします。</span><span class="sxs-lookup"><span data-stu-id="488fd-571">To change this setting, use a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> overload that takes an `options` parameter, and set the <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> property to the desired value.</span></span> <span data-ttu-id="488fd-572">パケットは、送信先を指定した回数だけが転送される後に到達しなかった場合は、パケットは破棄され、ICMP エコー要求は失敗します。</span><span class="sxs-lookup"><span data-stu-id="488fd-572">If the packet does not reach its destination after being forwarded the specified number of times, the packet is discarded and the ICMP echo request fails.</span></span> <span data-ttu-id="488fd-573">この場合、<xref:System.Net.NetworkInformation.PingReply.Status%2A>に設定されている<xref:System.Net.NetworkInformation.IPStatus.TtlExpired>します。</span><span class="sxs-lookup"><span data-stu-id="488fd-573">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="488fd-574">呼び出し元を示すコード例については、<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>オーバー ロードを参照してください、<xref:System.Net.NetworkInformation.Ping>クラスの概要。</span><span class="sxs-lookup"><span data-stu-id="488fd-574">For a code example that demonstrates calling a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> overload, see the <xref:System.Net.NetworkInformation.Ping> class overview.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="488fd-575">
            <paramref name="address" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-575">
              <paramref name="address" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="488fd-576">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-576">-or-</span>
          </span>
          <span data-ttu-id="488fd-577">
            <paramref name="buffer" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-577">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="488fd-578">
            <paramref name="timeout" /> が 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-578">
              <paramref name="timeout" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="488fd-579">
            <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> の呼び出しを実行中です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-579">A call to <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> is in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="488fd-580">
            <paramref name="address" /> は IPv6 アドレスですが、ローカル コンピューターでは Windows 2000 より前のオペレーティング システムが動作しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-580">
              <paramref name="address" /> is an IPv6 address and the local computer is running an operating system earlier than Windows 2000.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">
          <span data-ttu-id="488fd-581">ICMP メッセージの送信中または受信中に例外がスローされました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-581">An exception was thrown while sending or receiving the ICMP messages.</span>
          </span>
          <span data-ttu-id="488fd-582">スローされた実際の例外については内部例外を参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-582">See the inner exception for the exact exception that was thrown.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="488fd-583">
            <paramref name="address" /> が有効な IP アドレスではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-583">
              <paramref name="address" /> is not a valid IP address.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="488fd-584">このオブジェクトは破棄されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-584">This object has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="488fd-585">
            <paramref name="buffer" /> のサイズが 65500 バイトを超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-585">The size of <paramref name="buffer" /> exceeds 65500 bytes.</span>
          </span>
        </exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">
          <span data-ttu-id="488fd-586">ICMP エコー メッセージを送信します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-586">To send an ICMP echo message.</span>
          </span>
          <span data-ttu-id="488fd-587">関連付けられた列挙体。 <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-587">Associated enumeration: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public void SendAsync (string hostNameOrAddress, int timeout, byte[] buffer, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsync(string hostNameOrAddress, int32 timeout, unsigned int8[] buffer, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsync (hostNameOrAddress As String, timeout As Integer, buffer As Byte(), userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsync(System::String ^ hostNameOrAddress, int timeout, cli::array &lt;System::Byte&gt; ^ buffer, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.SendAsync : string * int * byte[] * obj -&gt; unit" Usage="ping.SendAsync (hostNameOrAddress, timeout, buffer, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
        <Parameter Name="timeout" Type="System.Int32" />
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">
          <span data-ttu-id="488fd-588">ICMP エコー メッセージの送信先コンピューターを識別する <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-588">A <see cref="T:System.String" /> that identifies the computer that is the destination for the ICMP echo message.</span>
          </span>
          <span data-ttu-id="488fd-589">このパラメーターの値には、ホスト名または IP アドレスの文字列形式を指定できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-589">The value specified for this parameter can be a host name or a string representation of an IP address.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="488fd-590">エコー メッセージを送信してから ICMP エコー応答メッセージを待つ時間の最大値 (ミリ秒単位) を指定する <see cref="T:System.Int32" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-590">An <see cref="T:System.Int32" /> value that specifies the maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</span>
          </span>
        </param>
        <param name="buffer">
          <span data-ttu-id="488fd-591">ICMP エコー メッセージと共に送信されるデータが格納され、ICMP エコー応答メッセージで返される <see cref="T:System.Byte" /> 配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-591">A <see cref="T:System.Byte" /> array that contains data to be sent with the ICMP echo message and returned in the ICMP echo reply message.</span>
          </span>
          <span data-ttu-id="488fd-592">配列には、65,500 バイトを超えるデータを格納することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-592">The array cannot contain more than 65,500 bytes.</span>
          </span>
        </param>
        <param name="userToken">
          <span data-ttu-id="488fd-593">非同期操作が完了したときに呼び出されるメソッドに渡すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-593">An object that is passed to the method invoked when the asynchronous operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="488fd-594">指定されたコンピューターに、指定されたデータ バッファーと共に ICMP (インターネット制御メッセージ プロトコル) エコー メッセージを非同期的に送信し、そのコンピューターから対応する ICMP エコー応答メッセージを受信します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-594">Asynchronously attempts to send an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the specified computer, and receive a corresponding ICMP echo reply message from that computer.</span>
          </span>
          <span data-ttu-id="488fd-595">このオーバーロードを使用して、操作のタイムアウト値を指定できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-595">This overload allows you to specify a time-out value for the operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="488fd-596"><xref:System.Net.NetworkInformation.Ping.SendAsync%2A>メソッドがエコー メッセージを非同期的に送信し、アプリケーションにステータスを返します (正常または異常) 操作の完了します。</span><span class="sxs-lookup"><span data-stu-id="488fd-596">The <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method sends the Echo message asynchronously and, when the operation completes (successfully or unsuccessfully), returns the status to your application.</span></span> <span data-ttu-id="488fd-597">呼び出す、<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>メソッドと、アプリケーションをブロックする必要があります。</span><span class="sxs-lookup"><span data-stu-id="488fd-597">Call the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method when your application should not block.</span></span> <span data-ttu-id="488fd-598">各呼び出しは、スレッド プールから自動的に割り当てられている別のスレッドで実行されます。</span><span class="sxs-lookup"><span data-stu-id="488fd-598">Each call executes in a separate thread that is automatically allocated from the thread pool.</span></span> <span data-ttu-id="488fd-599">非同期操作が完了したら、生成、<xref:System.Net.NetworkInformation.Ping.PingCompleted>イベント。</span><span class="sxs-lookup"><span data-stu-id="488fd-599">When the asynchronous operation completes, it raises the <xref:System.Net.NetworkInformation.Ping.PingCompleted> event.</span></span> <span data-ttu-id="488fd-600">アプリケーションを使用して、<xref:System.Net.NetworkInformation.PingCompletedEventHandler>時に呼び出されるメソッドを指定するデリゲート<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="488fd-600">Applications use a <xref:System.Net.NetworkInformation.PingCompletedEventHandler> delegate to specify the method that is called when <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> raises the event.</span></span> <span data-ttu-id="488fd-601">追加する必要があります、<xref:System.Net.NetworkInformation.PingCompletedEventHandler>デリゲートを呼び出す前にイベント<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>します。</span><span class="sxs-lookup"><span data-stu-id="488fd-601">You must add a <xref:System.Net.NetworkInformation.PingCompletedEventHandler> delegate to the event before calling <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</span></span> <span data-ttu-id="488fd-602">デリゲートのメソッドは受信、<xref:System.Net.NetworkInformation.PingCompletedEventArgs>オブジェクトを含む、<xref:System.Net.NetworkInformation.PingReply>の結果を記述するオブジェクト、<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="488fd-602">The delegate's method receives a <xref:System.Net.NetworkInformation.PingCompletedEventArgs> object containing a <xref:System.Net.NetworkInformation.PingReply> object that describes the result of the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> call.</span></span> <span data-ttu-id="488fd-603"><xref:System.Net.NetworkInformation.PingCompletedEventArgs>オブジェクトの継承、<xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="488fd-603">The <xref:System.Net.NetworkInformation.PingCompletedEventArgs> object inherits the <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> property.</span></span> <span data-ttu-id="488fd-604">このプロパティが含まれています、`userToken`に渡されたオブジェクト、<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>呼び出します。</span><span class="sxs-lookup"><span data-stu-id="488fd-604">This property contains the `userToken` object passed into the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> call.</span></span>  
  
 <span data-ttu-id="488fd-605">場合は、アプリケーションは、応答を待機しているときにブロックする必要がありますを使用して、<xref:System.Net.NetworkInformation.Ping.Send%2A>メソッドはこれらのメソッドは同期的です。</span><span class="sxs-lookup"><span data-stu-id="488fd-605">If your application should block while waiting for a reply, use the <xref:System.Net.NetworkInformation.Ping.Send%2A> methods; these methods are synchronous.</span></span>  
  
 <span data-ttu-id="488fd-606">指定された時間内では、ICMP エコー応答メッセージが受信されない場合、`timeout`パラメーター、ICMP エコー失敗した場合、および<xref:System.Net.NetworkInformation.PingReply.Status%2A>プロパティに設定されて<xref:System.Net.NetworkInformation.IPStatus.TimedOut>します。</span><span class="sxs-lookup"><span data-stu-id="488fd-606">If the ICMP echo reply message is not received within the time specified by the `timeout` parameter, the ICMP echo fails, and the <xref:System.Net.NetworkInformation.PingReply.Status%2A> property is set to <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="488fd-607">非常に小さな数値を指定するときに`timeout`、Ping の応答を受信できる場合でも`timeout`経過時間 (ミリ秒)。</span><span class="sxs-lookup"><span data-stu-id="488fd-607">When specifying very small numbers for `timeout`, the Ping reply can be received even if `timeout` milliseconds have elapsed.</span></span>  
  
 <span data-ttu-id="488fd-608">このオーバー ロードは、パケットのフラグメンテーションとパケットの転送の既定の設定を使用します。</span><span class="sxs-lookup"><span data-stu-id="488fd-608">This overload uses default settings for packet fragmentation and packet forwarding.</span></span> <span data-ttu-id="488fd-609">ICMP エコー メッセージを含むパケットをフラグメント化する転送中パケットの合計サイズが送信できる最大パケット サイズを超える場合、ローカルおよびリモート コンピューター間のルーティング ノードのいずれかでします。</span><span class="sxs-lookup"><span data-stu-id="488fd-609">The packet that contains the ICMP echo message can be fragmented in transit if the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers.</span></span> <span data-ttu-id="488fd-610">断片化を防ぐためには、いずれかの操作を使用して、<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>を受け取るメソッドを`options`パラメーター、およびセット、<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>プロパティを`true`します。</span><span class="sxs-lookup"><span data-stu-id="488fd-610">To prevent fragmentation, use one of the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> methods that takes an `options` parameter, and set the <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> property to `true`.</span></span> <span data-ttu-id="488fd-611">ときに<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>は`true`とパケットの合計サイズが、ローカルおよびリモート コンピューター間のルーティング ノードのいずれかで送信できる最大パケット サイズを超える、ICMP エコー要求は失敗します。</span><span class="sxs-lookup"><span data-stu-id="488fd-611">When <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> is `true` and the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers, the ICMP echo request fails.</span></span> <span data-ttu-id="488fd-612">この場合、<xref:System.Net.NetworkInformation.PingReply.Status%2A>に設定されている<xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>します。</span><span class="sxs-lookup"><span data-stu-id="488fd-612">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>.</span></span> <span data-ttu-id="488fd-613">パケットまたはパケットのフラグメント (断片化) する場合は、破棄される前に、ルーティングのノードで 128 回転送されます。</span><span class="sxs-lookup"><span data-stu-id="488fd-613">The packet or packet fragments (if fragmented) can be forwarded by routing nodes 128 times before being discarded.</span></span> <span data-ttu-id="488fd-614">この設定を変更するには、使用、<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>を受け取るオーバー ロードを`options`パラメーター、およびセット、<xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>プロパティを目的の値にします。</span><span class="sxs-lookup"><span data-stu-id="488fd-614">To change this setting, use a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> overload that takes an `options` parameter, and set the <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> property to the desired value.</span></span> <span data-ttu-id="488fd-615">パケットは、送信先を指定した回数だけが転送される後に到達しなかった場合は、パケットは破棄され、ICMP エコー要求は失敗します。</span><span class="sxs-lookup"><span data-stu-id="488fd-615">If the packet does not reach its destination after being forwarded the specified number of times, the packet is discarded and the ICMP echo request fails.</span></span> <span data-ttu-id="488fd-616">この場合、<xref:System.Net.NetworkInformation.PingReply.Status%2A>に設定されている<xref:System.Net.NetworkInformation.IPStatus.TtlExpired>します。</span><span class="sxs-lookup"><span data-stu-id="488fd-616">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="488fd-617">次のコード例を呼び出す方法を示します、<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>オーバー ロードを参照してください、<xref:System.Net.NetworkInformation.Ping>クラスの概要。</span><span class="sxs-lookup"><span data-stu-id="488fd-617">The following code example demonstrates how to call a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> overload, see the <xref:System.Net.NetworkInformation.Ping> class overview.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="488fd-618">
            <paramref name="hostNameOrAddress" /> が <see langword="null" /> または空の文字列 ("") です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-618">
              <paramref name="hostNameOrAddress" /> is <see langword="null" /> or is an empty string ("").</span>
          </span>
          <span data-ttu-id="488fd-619">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-619">-or-</span>
          </span>
          <span data-ttu-id="488fd-620">
            <paramref name="buffer" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-620">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="488fd-621">
            <paramref name="timeout" /> が 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-621">
              <paramref name="timeout" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="488fd-622">
            <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> の呼び出しを実行中です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-622">A call to <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> is in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="488fd-623">
            <paramref name="hostNameOrAddress" /> は IPv6 アドレスですが、ローカル コンピューターでは Windows 2000 より前のオペレーティング システムが動作しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-623">
              <paramref name="hostNameOrAddress" /> is an IPv6 address and the local computer is running an operating system earlier than Windows 2000.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">
          <span data-ttu-id="488fd-624">ICMP メッセージの送信中または受信中に例外がスローされました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-624">An exception was thrown while sending or receiving the ICMP messages.</span>
          </span>
          <span data-ttu-id="488fd-625">スローされた実際の例外については内部例外を参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-625">See the inner exception for the exact exception that was thrown.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="488fd-626">
            <paramref name="hostNameOrAddress" /> を有効な IP アドレスに解決できませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-626">
              <paramref name="hostNameOrAddress" /> could not be resolved to a valid IP address.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="488fd-627">このオブジェクトは破棄されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-627">This object has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="488fd-628">
            <paramref name="buffer" /> のサイズが 65500 バイトを超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-628">The size of <paramref name="buffer" /> exceeds 65500 bytes.</span>
          </span>
        </exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">
          <span data-ttu-id="488fd-629">ICMP エコー メッセージを送信します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-629">To send an ICMP echo message.</span>
          </span>
          <span data-ttu-id="488fd-630">関連付けられた列挙体。 <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-630">Associated enumeration: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public void SendAsync (System.Net.IPAddress address, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsync(class System.Net.IPAddress address, int32 timeout, unsigned int8[] buffer, class System.Net.NetworkInformation.PingOptions options, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsync (address As IPAddress, timeout As Integer, buffer As Byte(), options As PingOptions, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsync(System::Net::IPAddress ^ address, int timeout, cli::array &lt;System::Byte&gt; ^ buffer, System::Net::NetworkInformation::PingOptions ^ options, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.SendAsync : System.Net.IPAddress * int * byte[] * System.Net.NetworkInformation.PingOptions * obj -&gt; unit" Usage="ping.SendAsync (address, timeout, buffer, options, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
        <Parameter Name="timeout" Type="System.Int32" />
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="options" Type="System.Net.NetworkInformation.PingOptions" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="488fd-631">ICMP エコー メッセージの送信先コンピューターを識別する <see cref="T:System.Net.IPAddress" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-631">An <see cref="T:System.Net.IPAddress" /> that identifies the computer that is the destination for the ICMP echo message.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="488fd-632">エコー メッセージを送信してから ICMP エコー応答メッセージを待つ時間の最大値 (ミリ秒単位) を指定する <see cref="T:System.Int32" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-632">An <see cref="T:System.Int32" /> value that specifies the maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</span>
          </span>
        </param>
        <param name="buffer">
          <span data-ttu-id="488fd-633">ICMP エコー メッセージと共に送信されるデータが格納され、ICMP エコー応答メッセージで返される <see cref="T:System.Byte" /> 配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-633">A <see cref="T:System.Byte" /> array that contains data to be sent with the ICMP echo message and returned in the ICMP echo reply message.</span>
          </span>
          <span data-ttu-id="488fd-634">配列には、65,500 バイトを超えるデータを格納することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-634">The array cannot contain more than 65,500 bytes.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="488fd-635">ICMP エコー メッセージ パケットのフラグメンテーションと有効期間 (TTL: time-to-live) の値を制御するために使用される <see cref="T:System.Net.NetworkInformation.PingOptions" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-635">A <see cref="T:System.Net.NetworkInformation.PingOptions" /> object used to control fragmentation and Time-to-Live values for the ICMP echo message packet.</span>
          </span>
        </param>
        <param name="userToken">
          <span data-ttu-id="488fd-636">非同期操作が完了したときに呼び出されるメソッドに渡すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-636">An object that is passed to the method invoked when the asynchronous operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="488fd-637">指定された <see cref="T:System.Net.IPAddress" /> を持つコンピューターに、指定されたデータ バッファーと共に ICMP (インターネット制御メッセージ プロトコル) エコー メッセージを非同期的に送信し、そのコンピューターから対応する ICMP エコー応答メッセージを受信します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-637">Asynchronously attempts to send an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the computer that has the specified <see cref="T:System.Net.IPAddress" />, and receive a corresponding ICMP echo reply message from that computer.</span>
          </span>
          <span data-ttu-id="488fd-638">このオーバーロードを使用して、操作のタイムアウト値を指定し、ICMP エコー メッセージ パケットのフラグメンテーションと有効期間 (TTL: time-to-live) の値を制御できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-638">This overload allows you to specify a time-out value for the operation and control fragmentation and Time-to-Live values for the ICMP echo message packet.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="488fd-639"><xref:System.Net.NetworkInformation.Ping.SendAsync%2A>メソッドがエコー メッセージを非同期的に送信し、アプリケーションにステータスを返します (正常または異常) 操作の完了します。</span><span class="sxs-lookup"><span data-stu-id="488fd-639">The <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method sends the Echo message asynchronously and, when the operation completes (successfully or unsuccessfully), returns the status to your application.</span></span> <span data-ttu-id="488fd-640">呼び出す、<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>メソッドと、アプリケーションをブロックする必要があります。</span><span class="sxs-lookup"><span data-stu-id="488fd-640">Call the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method when your application must not block.</span></span> <span data-ttu-id="488fd-641">各呼び出しは、スレッド プールから自動的に割り当てられている別のスレッドで実行されます。</span><span class="sxs-lookup"><span data-stu-id="488fd-641">Each call executes in a separate thread that is automatically allocated from the thread pool.</span></span> <span data-ttu-id="488fd-642">非同期操作が完了したら、生成、<xref:System.Net.NetworkInformation.Ping.PingCompleted>イベント。</span><span class="sxs-lookup"><span data-stu-id="488fd-642">When the asynchronous operation completes, it raises the <xref:System.Net.NetworkInformation.Ping.PingCompleted> event.</span></span> <span data-ttu-id="488fd-643">アプリケーションを使用して、<xref:System.Net.NetworkInformation.PingCompletedEventHandler>時に呼び出されるメソッドを指定するデリゲート<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="488fd-643">Applications use a <xref:System.Net.NetworkInformation.PingCompletedEventHandler> delegate to specify the method that is called when <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> raises the event.</span></span> <span data-ttu-id="488fd-644">追加する必要があります、<xref:System.Net.NetworkInformation.PingCompletedEventHandler>デリゲートを呼び出す前にイベント<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>します。</span><span class="sxs-lookup"><span data-stu-id="488fd-644">You must add a <xref:System.Net.NetworkInformation.PingCompletedEventHandler> delegate to the event before calling <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</span></span> <span data-ttu-id="488fd-645">デリゲートのメソッドは受信、<xref:System.Net.NetworkInformation.PingCompletedEventArgs>を含むオブジェクトを<xref:System.Net.NetworkInformation.PingReply>の結果を記述するオブジェクト、<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="488fd-645">The delegate's method receives a <xref:System.Net.NetworkInformation.PingCompletedEventArgs> object that contains a <xref:System.Net.NetworkInformation.PingReply> object that describes the result of the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> call.</span></span> <span data-ttu-id="488fd-646"><xref:System.Net.NetworkInformation.PingCompletedEventArgs>オブジェクトの継承、<xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="488fd-646">The <xref:System.Net.NetworkInformation.PingCompletedEventArgs> object inherits the <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> property.</span></span> <span data-ttu-id="488fd-647">このプロパティが含まれています、`userToken`に渡されたオブジェクト、<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>呼び出します。</span><span class="sxs-lookup"><span data-stu-id="488fd-647">This property contains the `userToken` object passed into the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> call.</span></span>  
  
 <span data-ttu-id="488fd-648">応答を待機しているときに、アプリケーションをブロックする場合は、使用、<xref:System.Net.NetworkInformation.Ping.Send%2A>メソッドはこれらのメソッドは同期的です。</span><span class="sxs-lookup"><span data-stu-id="488fd-648">If your application blocks while waiting for a reply, use the <xref:System.Net.NetworkInformation.Ping.Send%2A> methods; these methods are synchronous.</span></span>  
  
 <span data-ttu-id="488fd-649">指定された時間内では、ICMP エコー応答メッセージが受信されない場合、`timeout`パラメーター、ICMP エコー失敗した場合、および<xref:System.Net.NetworkInformation.PingReply.Status%2A>プロパティに設定されて<xref:System.Net.NetworkInformation.IPStatus.TimedOut>します。</span><span class="sxs-lookup"><span data-stu-id="488fd-649">If the ICMP echo reply message is not received within the time specified by the `timeout` parameter, the ICMP echo fails, and the <xref:System.Net.NetworkInformation.PingReply.Status%2A> property is set to <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="488fd-650">非常に小さな数値を指定するときに`timeout`、Ping の応答を受信できる場合でも`timeout`経過時間 (ミリ秒)。</span><span class="sxs-lookup"><span data-stu-id="488fd-650">When specifying very small numbers for `timeout`, the Ping reply can be received even if `timeout` milliseconds have elapsed.</span></span>  
  
 <span data-ttu-id="488fd-651">場合、<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>プロパティは`true`とパケットの合計サイズが、ローカルおよびリモート コンピューター間のルーティング ノードのいずれかで送信できる最大パケット サイズを超える、ICMP エコー要求は失敗します。</span><span class="sxs-lookup"><span data-stu-id="488fd-651">If the <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> property is `true` and the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers, the ICMP echo request fails.</span></span> <span data-ttu-id="488fd-652">この場合、<xref:System.Net.NetworkInformation.PingReply.Status%2A>に設定されている<xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>します。</span><span class="sxs-lookup"><span data-stu-id="488fd-652">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>.</span></span>  
  
 <span data-ttu-id="488fd-653">使用して、<xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>宛先に到達する前に、ICMP エコー メッセージを転送できる最大回数を指定するプロパティ。</span><span class="sxs-lookup"><span data-stu-id="488fd-653">Use the <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> property to specify the maximum number of times the ICMP echo message can be forwarded before reaching its destination.</span></span> <span data-ttu-id="488fd-654">パケットは、送信先を指定した回数だけが転送される後に到達しなかった場合は、パケットは破棄され、ICMP エコー要求は失敗します。</span><span class="sxs-lookup"><span data-stu-id="488fd-654">If the packet does not reach its destination after being forwarded the specified number of times, the packet is discarded and the ICMP echo request fails.</span></span> <span data-ttu-id="488fd-655">この場合、<xref:System.Net.NetworkInformation.PingReply.Status%2A>に設定されている<xref:System.Net.NetworkInformation.IPStatus.TtlExpired>します。</span><span class="sxs-lookup"><span data-stu-id="488fd-655">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="488fd-656">次のコード例では、このメソッドを呼び出す方法を示します。</span><span class="sxs-lookup"><span data-stu-id="488fd-656">The following code example demonstrates how to call this method.</span></span> <span data-ttu-id="488fd-657">コールバック メソッドの実装は、次を参照してください。、<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>メソッド オーバー ロードの使用例」セクション。</span><span class="sxs-lookup"><span data-stu-id="488fd-657">For an implementation of the callback method, see the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method overload example section.</span></span>  
  
 <span data-ttu-id="488fd-658">次のコード例では、次の名前空間が必要です。</span><span class="sxs-lookup"><span data-stu-id="488fd-658">The following code example requires the following namespaces:</span></span>  
  
 [!code-cpp[NCLPingSampler#0](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLPingSampler/CPP/pingtest.cpp#0)]
 [!code-csharp[NCLPingSampler#0](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPingSampler/CS/pingtest.cs#0)]  
  
 <span data-ttu-id="488fd-659">次のコード例では、非同期的に ICMP エコー メッセージを送信します。</span><span class="sxs-lookup"><span data-stu-id="488fd-659">The following code example sends an ICMP echo message asynchronously.</span></span>  
  
 [!code-cpp[NCLPingSampler#7](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLPingSampler/CPP/pingtest.cpp#7)]
 [!code-csharp[NCLPingSampler#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPingSampler/CS/pingtest.cs#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="488fd-660">
            <paramref name="address" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-660">
              <paramref name="address" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="488fd-661">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-661">-or-</span>
          </span>
          <span data-ttu-id="488fd-662">
            <paramref name="buffer" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-662">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="488fd-663">
            <paramref name="timeout" /> が 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-663">
              <paramref name="timeout" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="488fd-664">
            <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> の呼び出しを実行中です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-664">A call to <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> is in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="488fd-665">
            <paramref name="address" /> は IPv6 アドレスですが、ローカル コンピューターでは Windows 2000 より前のオペレーティング システムが動作しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-665">
              <paramref name="address" /> is an IPv6 address and the local computer is running an operating system earlier than Windows 2000.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">
          <span data-ttu-id="488fd-666">ICMP メッセージの送信中または受信中に例外がスローされました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-666">An exception was thrown while sending or receiving the ICMP messages.</span>
          </span>
          <span data-ttu-id="488fd-667">スローされた実際の例外については内部例外を参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-667">See the inner exception for the exact exception that was thrown.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="488fd-668">
            <paramref name="address" /> が有効な IP アドレスではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-668">
              <paramref name="address" /> is not a valid IP address.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="488fd-669">このオブジェクトは破棄されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-669">This object has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="488fd-670">
            <paramref name="buffer" /> のサイズが 65500 バイトを超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-670">The size of <paramref name="buffer" /> exceeds 65500 bytes.</span>
          </span>
        </exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">
          <span data-ttu-id="488fd-671">ICMP エコー メッセージを送信します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-671">To send an ICMP echo message.</span>
          </span>
          <span data-ttu-id="488fd-672">関連付けられた列挙体。 <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-672">Associated enumeration: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public void SendAsync (string hostNameOrAddress, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsync(string hostNameOrAddress, int32 timeout, unsigned int8[] buffer, class System.Net.NetworkInformation.PingOptions options, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsync (hostNameOrAddress As String, timeout As Integer, buffer As Byte(), options As PingOptions, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsync(System::String ^ hostNameOrAddress, int timeout, cli::array &lt;System::Byte&gt; ^ buffer, System::Net::NetworkInformation::PingOptions ^ options, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.SendAsync : string * int * byte[] * System.Net.NetworkInformation.PingOptions * obj -&gt; unit" Usage="ping.SendAsync (hostNameOrAddress, timeout, buffer, options, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
        <Parameter Name="timeout" Type="System.Int32" />
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="options" Type="System.Net.NetworkInformation.PingOptions" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">
          <span data-ttu-id="488fd-673">ICMP エコー メッセージの送信先コンピューターを識別する <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-673">A <see cref="T:System.String" /> that identifies the computer that is the destination for the ICMP echo message.</span>
          </span>
          <span data-ttu-id="488fd-674">このパラメーターの値には、ホスト名または IP アドレスの文字列形式を指定できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-674">The value specified for this parameter can be a host name or a string representation of an IP address.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="488fd-675">ICMP エコー メッセージと共に送信されるデータが格納され、ICMP エコー応答メッセージで返される <see cref="T:System.Byte" /> 配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-675">A <see cref="T:System.Byte" /> array that contains data to be sent with the ICMP echo message and returned in the ICMP echo reply message.</span>
          </span>
          <span data-ttu-id="488fd-676">配列には、65,500 バイトを超えるデータを格納することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-676">The array cannot contain more than 65,500 bytes.</span>
          </span>
        </param>
        <param name="buffer">
          <span data-ttu-id="488fd-677">エコー メッセージを送信してから ICMP エコー応答メッセージを待つ時間の最大値 (ミリ秒単位) を指定する <see cref="T:System.Int32" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-677">An <see cref="T:System.Int32" /> value that specifies the maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="488fd-678">ICMP エコー メッセージ パケットのフラグメンテーションと有効期間 (TTL: time-to-live) の値を制御するために使用される <see cref="T:System.Net.NetworkInformation.PingOptions" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-678">A <see cref="T:System.Net.NetworkInformation.PingOptions" /> object used to control fragmentation and Time-to-Live values for the ICMP echo message packet.</span>
          </span>
        </param>
        <param name="userToken">
          <span data-ttu-id="488fd-679">非同期操作が完了したときに呼び出されるメソッドに渡すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-679">An object that is passed to the method invoked when the asynchronous operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="488fd-680">指定されたコンピューターに、指定されたデータ バッファーと共に ICMP (インターネット制御メッセージ プロトコル) エコー メッセージを非同期的に送信し、そのコンピューターから対応する ICMP エコー応答メッセージを受信します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-680">Asynchronously attempts to send an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the specified computer, and receive a corresponding ICMP echo reply message from that computer.</span>
          </span>
          <span data-ttu-id="488fd-681">このオーバーロードを使用して、操作のタイムアウト値を指定し、ICMP パケットのフラグメンテーションと有効期間 (TTL: time-to-live) 値を制御できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-681">This overload allows you to specify a time-out value for the operation and control fragmentation and Time-to-Live values for the ICMP packet.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="488fd-682"><xref:System.Net.NetworkInformation.Ping.SendAsync%2A>メソッドがエコー メッセージを非同期的に送信し、アプリケーションにステータスを返します (正常または異常) 操作の完了します。</span><span class="sxs-lookup"><span data-stu-id="488fd-682">The <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method sends the Echo message asynchronously and, when the operation completes (successfully or unsuccessfully), returns the status to your application.</span></span> <span data-ttu-id="488fd-683">呼び出す、<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>メソッドと、アプリケーションをブロックする必要があります。</span><span class="sxs-lookup"><span data-stu-id="488fd-683">Call the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method when your application must not block.</span></span> <span data-ttu-id="488fd-684">各呼び出しは、スレッド プールから自動的に割り当てられている別のスレッドで実行されます。</span><span class="sxs-lookup"><span data-stu-id="488fd-684">Each call executes in a separate thread that is automatically allocated from the thread pool.</span></span> <span data-ttu-id="488fd-685">非同期操作が完了したら、生成、<xref:System.Net.NetworkInformation.Ping.PingCompleted>イベント。</span><span class="sxs-lookup"><span data-stu-id="488fd-685">When the asynchronous operation completes, it raises the <xref:System.Net.NetworkInformation.Ping.PingCompleted> event.</span></span> <span data-ttu-id="488fd-686">アプリケーションを使用して、<xref:System.Net.NetworkInformation.PingCompletedEventHandler>時に呼び出されるメソッドを指定するデリゲート<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="488fd-686">Applications use a <xref:System.Net.NetworkInformation.PingCompletedEventHandler> delegate to specify the method that is called when <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> raises the event.</span></span> <span data-ttu-id="488fd-687">追加する必要があります、<xref:System.Net.NetworkInformation.PingCompletedEventHandler>デリゲートを呼び出す前にイベント<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>します。</span><span class="sxs-lookup"><span data-stu-id="488fd-687">You must add a <xref:System.Net.NetworkInformation.PingCompletedEventHandler> delegate to the event before calling <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</span></span> <span data-ttu-id="488fd-688">デリゲートのメソッドは受信、<xref:System.Net.NetworkInformation.PingCompletedEventArgs>を含むオブジェクトを<xref:System.Net.NetworkInformation.PingReply>の結果を記述するオブジェクト、<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="488fd-688">The delegate's method receives a <xref:System.Net.NetworkInformation.PingCompletedEventArgs> object that contains a <xref:System.Net.NetworkInformation.PingReply> object that describes the result of the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> call.</span></span> <span data-ttu-id="488fd-689"><xref:System.Net.NetworkInformation.PingCompletedEventArgs>オブジェクトの継承、<xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="488fd-689">The <xref:System.Net.NetworkInformation.PingCompletedEventArgs> object inherits the <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> property.</span></span> <span data-ttu-id="488fd-690">このプロパティが含まれています、`userToken`に渡されたオブジェクト、<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>呼び出します。</span><span class="sxs-lookup"><span data-stu-id="488fd-690">This property contains the `userToken` object passed into the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> call.</span></span>  
  
 <span data-ttu-id="488fd-691">場合は、アプリケーションは、応答を待機しているときにブロックする必要がありますを使用して、<xref:System.Net.NetworkInformation.Ping.Send%2A>メソッドはこれらのメソッドは同期的です。</span><span class="sxs-lookup"><span data-stu-id="488fd-691">If your application should block while waiting for a reply, use the <xref:System.Net.NetworkInformation.Ping.Send%2A> methods; these methods are synchronous.</span></span>  
  
 <span data-ttu-id="488fd-692">指定された時間内では、ICMP エコー応答メッセージが受信されない場合、`timeout`パラメーター、ICMP エコー失敗した場合、および<xref:System.Net.NetworkInformation.PingReply.Status%2A>プロパティに設定されて<xref:System.Net.NetworkInformation.IPStatus.TimedOut>します。</span><span class="sxs-lookup"><span data-stu-id="488fd-692">If the ICMP echo reply message is not received within the time specified by the `timeout` parameter, the ICMP echo fails, and the <xref:System.Net.NetworkInformation.PingReply.Status%2A> property is set to <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="488fd-693">非常に小さな数値を指定するときに`timeout`、Ping の応答を受信できる場合でも`timeout`経過時間 (ミリ秒)。</span><span class="sxs-lookup"><span data-stu-id="488fd-693">When specifying very small numbers for `timeout`, the Ping reply can be received even if `timeout` milliseconds have elapsed.</span></span>  
  
 <span data-ttu-id="488fd-694">場合、<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>プロパティは`true`とパケットの合計サイズが、ローカルおよびリモート コンピューター間のルーティング ノードのいずれかで送信できる最大パケット サイズを超える、ICMP エコー要求は失敗します。</span><span class="sxs-lookup"><span data-stu-id="488fd-694">If the <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> property is `true` and the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers, the ICMP echo request fails.</span></span> <span data-ttu-id="488fd-695">この場合、<xref:System.Net.NetworkInformation.PingReply.Status%2A>に設定されている<xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>します。</span><span class="sxs-lookup"><span data-stu-id="488fd-695">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>.</span></span>  
  
 <span data-ttu-id="488fd-696">使用して、<xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>宛先に到達する前に、ICMP エコー メッセージを転送できる最大回数を指定するプロパティ。</span><span class="sxs-lookup"><span data-stu-id="488fd-696">Use the <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> property to specify the maximum number of times the ICMP echo message can be forwarded before reaching its destination.</span></span> <span data-ttu-id="488fd-697">パケットは、送信先を指定した回数だけが転送される後に到達しなかった場合は、パケットは破棄され、ICMP エコー要求は失敗します。</span><span class="sxs-lookup"><span data-stu-id="488fd-697">If the packet does not reach its destination after being forwarded the specified number of times, the packet is discarded and the ICMP echo request fails.</span></span> <span data-ttu-id="488fd-698">この場合、<xref:System.Net.NetworkInformation.PingReply.Status%2A>に設定されている<xref:System.Net.NetworkInformation.IPStatus.TtlExpired>します。</span><span class="sxs-lookup"><span data-stu-id="488fd-698">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="488fd-699">次のコード例では、このメソッドを呼び出す方法を示します。</span><span class="sxs-lookup"><span data-stu-id="488fd-699">The following code example demonstrates how to call this method.</span></span>  
  
 [!code-cpp[NCLPingAsync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclPingAsync/CPP/asyncping.cpp#1)]
 [!code-csharp[NCLPingAsync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclPingAsync/CS/asyncping.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="488fd-700">
            <paramref name="hostNameOrAddress" /> が <see langword="null" /> または空の文字列 ("") です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-700">
              <paramref name="hostNameOrAddress" /> is <see langword="null" /> or is an empty string ("").</span>
          </span>
          <span data-ttu-id="488fd-701">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-701">-or-</span>
          </span>
          <span data-ttu-id="488fd-702">
            <paramref name="buffer" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-702">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="488fd-703">
            <paramref name="timeout" /> が 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-703">
              <paramref name="timeout" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="488fd-704">
            <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> の呼び出しを実行中です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-704">A call to <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> is in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="488fd-705">
            <paramref name="address" /> は IPv6 アドレスですが、ローカル コンピューターでは Windows 2000 より前のオペレーティング システムが動作しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-705">
              <paramref name="address" /> is an IPv6 address and the local computer is running an operating system earlier than Windows 2000.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">
          <span data-ttu-id="488fd-706">ICMP メッセージの送信中または受信中に例外がスローされました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-706">An exception was thrown while sending or receiving the ICMP messages.</span>
          </span>
          <span data-ttu-id="488fd-707">スローされた実際の例外については内部例外を参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-707">See the inner exception for the exact exception that was thrown.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="488fd-708">
            <paramref name="hostNameOrAddress" /> を有効な IP アドレスに解決できませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-708">
              <paramref name="hostNameOrAddress" /> could not be resolved to a valid IP address.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="488fd-709">このオブジェクトは破棄されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-709">This object has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="488fd-710">
            <paramref name="buffer" /> のサイズが 65500 バイトを超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-710">The size of <paramref name="buffer" /> exceeds 65500 bytes.</span>
          </span>
        </exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">
          <span data-ttu-id="488fd-711">ICMP エコー メッセージを送信します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-711">To send an ICMP echo message.</span>
          </span>
          <span data-ttu-id="488fd-712">関連付けられた列挙体。 <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-712">Associated enumeration: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SendAsyncCancel">
      <MemberSignature Language="C#" Value="public void SendAsyncCancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsyncCancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendAsyncCancel" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsyncCancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsyncCancel();" />
      <MemberSignature Language="F#" Value="member this.SendAsyncCancel : unit -&gt; unit" Usage="ping.SendAsyncCancel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="488fd-713">ICMP (インターネット制御メッセージ プロトコル) エコー メッセージの送信と対応する ICMP エコー応答メッセージの受信を行う、保留中のすべての非同期要求をキャンセルします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-713">Cancels all pending asynchronous requests to send an Internet Control Message Protocol (ICMP) echo message and receives a corresponding ICMP echo reply message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="488fd-714">呼び出しを終了するには、このメソッドを呼び出す<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>を完了していません。</span><span class="sxs-lookup"><span data-stu-id="488fd-714">Call this method to terminate any calls to <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> that have not completed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SendPingAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="488fd-715">非同期操作として、ICMP (インターネット制御メッセージ プロトコル) エコー メッセージをコンピューターに送信し、そのコンピューターから対応する ICMP エコー応答メッセージを受信します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-715">Sends an Internet Control Message Protocol (ICMP) echo message to a computer, and receives a corresponding ICMP echo reply message from that computer as an asynchronous operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SendPingAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt; SendPingAsync (System.Net.IPAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.NetworkInformation.PingReply&gt; SendPingAsync(class System.Net.IPAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendPingAsync (address As IPAddress) As Task(Of PingReply)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::NetworkInformation::PingReply ^&gt; ^ SendPingAsync(System::Net::IPAddress ^ address);" />
      <MemberSignature Language="F#" Value="member this.SendPingAsync : System.Net.IPAddress -&gt; System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt;" Usage="ping.SendPingAsync address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="488fd-716">ICMP エコー メッセージの送信先コンピューターを識別する IP アドレス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-716">An IP address that identifies the computer that is the destination for the ICMP echo message.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="488fd-717">非同期操作として、指定された <see cref="T:System.Net.IPAddress" /> を持つコンピューターに、指定されたデータ バッファーと共に ICMP (インターネット制御メッセージ プロトコル) エコー メッセージを送信し、そのコンピューターから対応する ICMP エコー応答メッセージを受信します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-717">Send an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the computer that has the specified <see cref="T:System.Net.IPAddress" />, and receives a corresponding ICMP echo reply message from that computer as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="488fd-718">
            <see cref="T:System.Threading.Tasks.Task`1" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-718">Returns <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
          <span data-ttu-id="488fd-719">非同期操作を表すタスク オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-719">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="488fd-720">この操作はブロックされません。</span><span class="sxs-lookup"><span data-stu-id="488fd-720">This operation will not block.</span></span> <span data-ttu-id="488fd-721">返された<xref:System.Threading.Tasks.Task%601>> オブジェクトは、ICMP パケットが送信され、応答が受信された後に完了します。</span><span class="sxs-lookup"><span data-stu-id="488fd-721">The returned <xref:System.Threading.Tasks.Task%601>> object will complete after the ICMP packet has been sent and the response has been received.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="488fd-722">
            <paramref name="address" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-722">
              <paramref name="address" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="488fd-723">
            <see cref="Overload:System.Net.NetworkInformation.Ping.SendPingAsync" /> の呼び出しを実行中です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-723">A call to <see cref="Overload:System.Net.NetworkInformation.Ping.SendPingAsync" /> is in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">
          <span data-ttu-id="488fd-724">ICMP メッセージの送信中または受信中に例外がスローされました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-724">An exception was thrown while sending or receiving the ICMP messages.</span>
          </span>
          <span data-ttu-id="488fd-725">スローされた実際の例外については内部例外を参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-725">See the inner exception for the exact exception that was thrown.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="488fd-726">
            <paramref name="address" /> が有効な IP アドレスではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-726">
              <paramref name="address" /> is not a valid IP address.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="488fd-727">このオブジェクトは破棄されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-727">This object has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SendPingAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt; SendPingAsync (string hostNameOrAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.NetworkInformation.PingReply&gt; SendPingAsync(string hostNameOrAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendPingAsync (hostNameOrAddress As String) As Task(Of PingReply)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::NetworkInformation::PingReply ^&gt; ^ SendPingAsync(System::String ^ hostNameOrAddress);" />
      <MemberSignature Language="F#" Value="member this.SendPingAsync : string -&gt; System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt;" Usage="ping.SendPingAsync hostNameOrAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">
          <span data-ttu-id="488fd-728">ICMP エコー メッセージの送信先となるコンピューター。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-728">The computer that is the destination for the ICMP echo message.</span>
          </span>
          <span data-ttu-id="488fd-729">このパラメーターの値には、ホスト名または IP アドレスの文字列形式を指定できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-729">The value specified for this parameter can be a host name or a string representation of an IP address.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="488fd-730">非同期操作として、指定されたコンピューターに、指定されたデータ バッファーと共に ICMP (インターネット制御メッセージ プロトコル) エコー メッセージを送信し、そのコンピューターから対応する ICMP エコー応答メッセージを受信します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-730">Sends an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the specified computer, and receive a corresponding ICMP echo reply message from that computer as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="488fd-731">
            <see cref="T:System.Threading.Tasks.Task`1" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-731">Returns <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
          <span data-ttu-id="488fd-732">非同期操作を表すタスク オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-732">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="488fd-733">この操作はブロックされません。</span><span class="sxs-lookup"><span data-stu-id="488fd-733">This operation will not block.</span></span> <span data-ttu-id="488fd-734">返された<xref:System.Threading.Tasks.Task%601>> オブジェクトは、ICMP パケットが送信され、応答が受信された後に完了します。</span><span class="sxs-lookup"><span data-stu-id="488fd-734">The returned <xref:System.Threading.Tasks.Task%601>> object will complete after the ICMP packet has been sent and the response has been received.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendPingAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt; SendPingAsync (System.Net.IPAddress address, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.NetworkInformation.PingReply&gt; SendPingAsync(class System.Net.IPAddress address, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendPingAsync (address As IPAddress, timeout As Integer) As Task(Of PingReply)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::NetworkInformation::PingReply ^&gt; ^ SendPingAsync(System::Net::IPAddress ^ address, int timeout);" />
      <MemberSignature Language="F#" Value="member this.SendPingAsync : System.Net.IPAddress * int -&gt; System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt;" Usage="ping.SendPingAsync (address, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="488fd-735">ICMP エコー メッセージの送信先コンピューターを識別する IP アドレス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-735">An IP address that identifies the computer that is the destination for the ICMP echo message.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="488fd-736">エコー メッセージを送信してから ICMP エコー応答メッセージを待つ時間の最大値 (ミリ秒単位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-736">The maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="488fd-737">非同期操作として、指定された <see cref="T:System.Net.IPAddress" /> を持つコンピューターに、指定されたデータ バッファーと共に ICMP (インターネット制御メッセージ プロトコル) エコー メッセージを送信し、そのコンピューターから対応する ICMP エコー応答メッセージを受信します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-737">Send an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the computer that has the specified <see cref="T:System.Net.IPAddress" />, and receives a corresponding ICMP echo reply message from that computer as an asynchronous operation.</span>
          </span>
          <span data-ttu-id="488fd-738">このオーバーロードを使用して、操作のタイムアウト値を指定できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-738">This overload allows you to specify a time-out value for the operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="488fd-739">
            <see cref="T:System.Threading.Tasks.Task`1" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-739">Returns <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
          <span data-ttu-id="488fd-740">非同期操作を表すタスク オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-740">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="488fd-741">この操作はブロックされません。</span><span class="sxs-lookup"><span data-stu-id="488fd-741">This operation will not block.</span></span> <span data-ttu-id="488fd-742">返された<xref:System.Threading.Tasks.Task%601>> オブジェクトは、ICMP パケットが送信され、応答が受信された後に完了します。</span><span class="sxs-lookup"><span data-stu-id="488fd-742">The returned <xref:System.Threading.Tasks.Task%601>> object will complete after the ICMP packet has been sent and the response has been received.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendPingAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt; SendPingAsync (string hostNameOrAddress, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.NetworkInformation.PingReply&gt; SendPingAsync(string hostNameOrAddress, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendPingAsync (hostNameOrAddress As String, timeout As Integer) As Task(Of PingReply)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::NetworkInformation::PingReply ^&gt; ^ SendPingAsync(System::String ^ hostNameOrAddress, int timeout);" />
      <MemberSignature Language="F#" Value="member this.SendPingAsync : string * int -&gt; System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt;" Usage="ping.SendPingAsync (hostNameOrAddress, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">
          <span data-ttu-id="488fd-743">ICMP エコー メッセージの送信先となるコンピューター。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-743">The computer that is the destination for the ICMP echo message.</span>
          </span>
          <span data-ttu-id="488fd-744">このパラメーターの値には、ホスト名または IP アドレスの文字列形式を指定できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-744">The value specified for this parameter can be a host name or a string representation of an IP address.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="488fd-745">エコー メッセージを送信してから ICMP エコー応答メッセージを待つ時間の最大値 (ミリ秒単位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-745">The maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="488fd-746">非同期操作として、指定されたコンピューターに、指定されたデータ バッファーと共に ICMP (インターネット制御メッセージ プロトコル) エコー メッセージを送信し、そのコンピューターから対応する ICMP エコー応答メッセージを受信します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-746">Sends an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the specified computer, and receive a corresponding ICMP echo reply message from that computer as an asynchronous operation.</span>
          </span>
          <span data-ttu-id="488fd-747">このオーバーロードを使用して、操作のタイムアウト値を指定できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-747">This overload allows you to specify a time-out value for the operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="488fd-748">
            <see cref="T:System.Threading.Tasks.Task`1" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-748">Returns <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
          <span data-ttu-id="488fd-749">非同期操作を表すタスク オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-749">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="488fd-750">この操作はブロックされません。</span><span class="sxs-lookup"><span data-stu-id="488fd-750">This operation will not block.</span></span> <span data-ttu-id="488fd-751">返された<xref:System.Threading.Tasks.Task%601>> オブジェクトは、ICMP パケットが送信され、応答が受信された後に完了します。</span><span class="sxs-lookup"><span data-stu-id="488fd-751">The returned <xref:System.Threading.Tasks.Task%601>> object will complete after the ICMP packet has been sent and the response has been received.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendPingAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt; SendPingAsync (System.Net.IPAddress address, int timeout, byte[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.NetworkInformation.PingReply&gt; SendPingAsync(class System.Net.IPAddress address, int32 timeout, unsigned int8[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function SendPingAsync (address As IPAddress, timeout As Integer, buffer As Byte()) As Task(Of PingReply)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::NetworkInformation::PingReply ^&gt; ^ SendPingAsync(System::Net::IPAddress ^ address, int timeout, cli::array &lt;System::Byte&gt; ^ buffer);" />
      <MemberSignature Language="F#" Value="member this.SendPingAsync : System.Net.IPAddress * int * byte[] -&gt; System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt;" Usage="ping.SendPingAsync (address, timeout, buffer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
        <Parameter Name="timeout" Type="System.Int32" />
        <Parameter Name="buffer" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="488fd-752">ICMP エコー メッセージの送信先コンピューターを識別する IP アドレス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-752">An IP address that identifies the computer that is the destination for the ICMP echo message.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="488fd-753">エコー メッセージを送信してから ICMP エコー応答メッセージを待つ時間の最大値 (ミリ秒単位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-753">The maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</span>
          </span>
        </param>
        <param name="buffer">
          <span data-ttu-id="488fd-754">ICMP エコー メッセージと共に送信されるデータが格納され、ICMP エコー応答メッセージで返される <see cref="T:System.Byte" /> 配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-754">A <see cref="T:System.Byte" /> array that contains data to be sent with the ICMP echo message and returned in the ICMP echo reply message.</span>
          </span>
          <span data-ttu-id="488fd-755">配列には、65,500 バイトを超えるデータを格納することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-755">The array cannot contain more than 65,500 bytes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="488fd-756">非同期操作として、指定された <see cref="T:System.Net.IPAddress" /> を持つコンピューターに、指定されたデータ バッファーと共に ICMP (インターネット制御メッセージ プロトコル) エコー メッセージを送信し、そのコンピューターから対応する ICMP エコー応答メッセージを受信します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-756">Send an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the computer that has the specified <see cref="T:System.Net.IPAddress" />, and receives a corresponding ICMP echo reply message from that computer as an asynchronous operation.</span>
          </span>
          <span data-ttu-id="488fd-757">このオーバーロードによって、操作にタイムアウト値を指定し、送信と受信に使用するバッファーを指定することができます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-757">This overload allows you to specify a time-out value for the operation and a buffer to use for send and receive.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="488fd-758">
            <see cref="T:System.Threading.Tasks.Task`1" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-758">Returns <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
          <span data-ttu-id="488fd-759">非同期操作を表すタスク オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-759">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="488fd-760">この操作はブロックされません。</span><span class="sxs-lookup"><span data-stu-id="488fd-760">This operation will not block.</span></span> <span data-ttu-id="488fd-761">返された<xref:System.Threading.Tasks.Task%601>> オブジェクトは、ICMP パケットが送信され、応答が受信された後に完了します。</span><span class="sxs-lookup"><span data-stu-id="488fd-761">The returned <xref:System.Threading.Tasks.Task%601>> object will complete after the ICMP packet has been sent and the response has been received.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="488fd-762">
            <paramref name="address" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-762">
              <paramref name="address" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="488fd-763">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-763">-or-</span>
          </span>
          <span data-ttu-id="488fd-764">
            <paramref name="buffer" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-764">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="488fd-765">
            <paramref name="timeout" /> が 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-765">
              <paramref name="timeout" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="488fd-766">
            <see cref="Overload:System.Net.NetworkInformation.Ping.SendPingAsync" /> の呼び出しを実行中です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-766">A call to <see cref="Overload:System.Net.NetworkInformation.Ping.SendPingAsync" /> is in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">
          <span data-ttu-id="488fd-767">ICMP メッセージの送信中または受信中に例外がスローされました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-767">An exception was thrown while sending or receiving the ICMP messages.</span>
          </span>
          <span data-ttu-id="488fd-768">スローされた実際の例外については内部例外を参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-768">See the inner exception for the exact exception that was thrown.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="488fd-769">
            <paramref name="address" /> が有効な IP アドレスではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-769">
              <paramref name="address" /> is not a valid IP address.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="488fd-770">このオブジェクトは破棄されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-770">This object has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="488fd-771">
            <paramref name="buffer" /> のサイズが 65,500 バイトを超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-771">The size of <paramref name="buffer" /> exceeds 65,500 bytes.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SendPingAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt; SendPingAsync (string hostNameOrAddress, int timeout, byte[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.NetworkInformation.PingReply&gt; SendPingAsync(string hostNameOrAddress, int32 timeout, unsigned int8[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function SendPingAsync (hostNameOrAddress As String, timeout As Integer, buffer As Byte()) As Task(Of PingReply)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::NetworkInformation::PingReply ^&gt; ^ SendPingAsync(System::String ^ hostNameOrAddress, int timeout, cli::array &lt;System::Byte&gt; ^ buffer);" />
      <MemberSignature Language="F#" Value="member this.SendPingAsync : string * int * byte[] -&gt; System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt;" Usage="ping.SendPingAsync (hostNameOrAddress, timeout, buffer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
        <Parameter Name="timeout" Type="System.Int32" />
        <Parameter Name="buffer" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">
          <span data-ttu-id="488fd-772">ICMP エコー メッセージの送信先となるコンピューター。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-772">The computer that is the destination for the ICMP echo message.</span>
          </span>
          <span data-ttu-id="488fd-773">このパラメーターの値には、ホスト名または IP アドレスの文字列形式を指定できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-773">The value specified for this parameter can be a host name or a string representation of an IP address.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="488fd-774">エコー メッセージを送信してから ICMP エコー応答メッセージを待つ時間の最大値 (ミリ秒単位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-774">The maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</span>
          </span>
        </param>
        <param name="buffer">
          <span data-ttu-id="488fd-775">ICMP エコー メッセージと共に送信されるデータが格納され、ICMP エコー応答メッセージで返される <see cref="T:System.Byte" /> 配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-775">A <see cref="T:System.Byte" /> array that contains data to be sent with the ICMP echo message and returned in the ICMP echo reply message.</span>
          </span>
          <span data-ttu-id="488fd-776">配列には、65,500 バイトを超えるデータを格納することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-776">The array cannot contain more than 65,500 bytes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="488fd-777">非同期操作として、指定されたコンピューターに、指定されたデータ バッファーと共に ICMP (インターネット制御メッセージ プロトコル) エコー メッセージを送信し、そのコンピューターから対応する ICMP エコー応答メッセージを受信します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-777">Sends an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the specified computer, and receive a corresponding ICMP echo reply message from that computer as an asynchronous operation.</span>
          </span>
          <span data-ttu-id="488fd-778">このオーバーロードによって、操作にタイムアウト値を指定し、送信と受信に使用するバッファーを指定することができます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-778">This overload allows you to specify a time-out value for the operation and a buffer to use for send and receive.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="488fd-779">
            <see cref="T:System.Threading.Tasks.Task`1" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-779">Returns <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
          <span data-ttu-id="488fd-780">非同期操作を表すタスク オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-780">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="488fd-781">この操作はブロックされません。</span><span class="sxs-lookup"><span data-stu-id="488fd-781">This operation will not block.</span></span> <span data-ttu-id="488fd-782">返された<xref:System.Threading.Tasks.Task%601>> オブジェクトは、ICMP パケットが送信され、応答が受信された後に完了します。</span><span class="sxs-lookup"><span data-stu-id="488fd-782">The returned <xref:System.Threading.Tasks.Task%601>> object will complete after the ICMP packet has been sent and the response has been received.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendPingAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt; SendPingAsync (System.Net.IPAddress address, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.NetworkInformation.PingReply&gt; SendPingAsync(class System.Net.IPAddress address, int32 timeout, unsigned int8[] buffer, class System.Net.NetworkInformation.PingOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendPingAsync (address As IPAddress, timeout As Integer, buffer As Byte(), options As PingOptions) As Task(Of PingReply)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::NetworkInformation::PingReply ^&gt; ^ SendPingAsync(System::Net::IPAddress ^ address, int timeout, cli::array &lt;System::Byte&gt; ^ buffer, System::Net::NetworkInformation::PingOptions ^ options);" />
      <MemberSignature Language="F#" Value="member this.SendPingAsync : System.Net.IPAddress * int * byte[] * System.Net.NetworkInformation.PingOptions -&gt; System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt;" Usage="ping.SendPingAsync (address, timeout, buffer, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
        <Parameter Name="timeout" Type="System.Int32" />
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="options" Type="System.Net.NetworkInformation.PingOptions" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="488fd-783">ICMP エコー メッセージの送信先コンピューターを識別する IP アドレス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-783">An IP address that identifies the computer that is the destination for the ICMP echo message.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="488fd-784">エコー メッセージを送信してから ICMP エコー応答メッセージを待つ時間の最大値 (ミリ秒単位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-784">The maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</span>
          </span>
        </param>
        <param name="buffer">
          <span data-ttu-id="488fd-785">ICMP エコー メッセージと共に送信されるデータが格納され、ICMP エコー応答メッセージで返される <see cref="T:System.Byte" /> 配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-785">A <see cref="T:System.Byte" /> array that contains data to be sent with the ICMP echo message and returned in the ICMP echo reply message.</span>
          </span>
          <span data-ttu-id="488fd-786">配列には、65,500 バイトを超えるデータを格納することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-786">The array cannot contain more than 65,500 bytes.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="488fd-787">ICMP エコー メッセージ パケットのフラグメンテーションと有効期間 (TTL: time-to-live) の値を制御するために使用される <see cref="T:System.Net.NetworkInformation.PingOptions" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-787">A <see cref="T:System.Net.NetworkInformation.PingOptions" /> object used to control fragmentation and Time-to-Live values for the ICMP echo message packet.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="488fd-788">非同期操作として、指定された <see cref="T:System.Net.IPAddress" /> を持つコンピューターに、指定されたデータ バッファーと共に ICMP (インターネット制御メッセージ プロトコル) エコー メッセージを送信し、そのコンピューターから対応する ICMP エコー応答メッセージを受信します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-788">Send an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the computer that has the specified <see cref="T:System.Net.IPAddress" />, and receives a corresponding ICMP echo reply message from that computer as an asynchronous operation.</span>
          </span>
          <span data-ttu-id="488fd-789">このオーバーロードを使用して、操作のタイムアウト値と送受信に使用するバッファーを指定し、ICMP エコー メッセージ パケットのフラグメンテーションと有効期間 (TTL: time-to-live) の値を制御できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-789">This overload allows you to specify a time-out value for the operation, a buffer to use for send and receive, and control fragmentation and Time-to-Live values for the ICMP echo message packet.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="488fd-790">
            <see cref="T:System.Threading.Tasks.Task`1" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-790">Returns <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
          <span data-ttu-id="488fd-791">非同期操作を表すタスク オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-791">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="488fd-792">この操作はブロックされません。</span><span class="sxs-lookup"><span data-stu-id="488fd-792">This operation will not block.</span></span> <span data-ttu-id="488fd-793">返された<xref:System.Threading.Tasks.Task%601>> オブジェクトは、ICMP パケットが送信され、応答が受信された後に完了します。</span><span class="sxs-lookup"><span data-stu-id="488fd-793">The returned <xref:System.Threading.Tasks.Task%601>> object will complete after the ICMP packet has been sent and the response has been received.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="488fd-794">
            <paramref name="address" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-794">
              <paramref name="address" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="488fd-795">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-795">-or-</span>
          </span>
          <span data-ttu-id="488fd-796">
            <paramref name="buffer" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-796">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="488fd-797">
            <paramref name="timeout" /> が 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-797">
              <paramref name="timeout" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="488fd-798">
            <see cref="Overload:System.Net.NetworkInformation.Ping.SendPingAsync" /> の呼び出しを実行中です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-798">A call to <see cref="Overload:System.Net.NetworkInformation.Ping.SendPingAsync" /> is in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">
          <span data-ttu-id="488fd-799">ICMP メッセージの送信中または受信中に例外がスローされました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-799">An exception was thrown while sending or receiving the ICMP messages.</span>
          </span>
          <span data-ttu-id="488fd-800">スローされた実際の例外については内部例外を参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-800">See the inner exception for the exact exception that was thrown.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="488fd-801">
            <paramref name="address" /> が有効な IP アドレスではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-801">
              <paramref name="address" /> is not a valid IP address.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="488fd-802">このオブジェクトは破棄されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-802">This object has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="488fd-803">
            <paramref name="buffer" /> のサイズが 65,500 バイトを超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-803">The size of <paramref name="buffer" /> exceeds 65,500 bytes.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SendPingAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt; SendPingAsync (string hostNameOrAddress, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.NetworkInformation.PingReply&gt; SendPingAsync(string hostNameOrAddress, int32 timeout, unsigned int8[] buffer, class System.Net.NetworkInformation.PingOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendPingAsync (hostNameOrAddress As String, timeout As Integer, buffer As Byte(), options As PingOptions) As Task(Of PingReply)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::NetworkInformation::PingReply ^&gt; ^ SendPingAsync(System::String ^ hostNameOrAddress, int timeout, cli::array &lt;System::Byte&gt; ^ buffer, System::Net::NetworkInformation::PingOptions ^ options);" />
      <MemberSignature Language="F#" Value="member this.SendPingAsync : string * int * byte[] * System.Net.NetworkInformation.PingOptions -&gt; System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt;" Usage="ping.SendPingAsync (hostNameOrAddress, timeout, buffer, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
        <Parameter Name="timeout" Type="System.Int32" />
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="options" Type="System.Net.NetworkInformation.PingOptions" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">
          <span data-ttu-id="488fd-804">ICMP エコー メッセージの送信先となるコンピューター。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-804">The computer that is the destination for the ICMP echo message.</span>
          </span>
          <span data-ttu-id="488fd-805">このパラメーターの値には、ホスト名または IP アドレスの文字列形式を指定できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-805">The value specified for this parameter can be a host name or a string representation of an IP address.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="488fd-806">エコー メッセージを送信してから ICMP エコー応答メッセージを待つ時間の最大値 (ミリ秒単位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-806">The maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</span>
          </span>
        </param>
        <param name="buffer">
          <span data-ttu-id="488fd-807">ICMP エコー メッセージと共に送信されるデータが格納され、ICMP エコー応答メッセージで返される <see cref="T:System.Byte" /> 配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-807">A <see cref="T:System.Byte" /> array that contains data to be sent with the ICMP echo message and returned in the ICMP echo reply message.</span>
          </span>
          <span data-ttu-id="488fd-808">配列には、65,500 バイトを超えるデータを格納することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-808">The array cannot contain more than 65,500 bytes.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="488fd-809">ICMP エコー メッセージ パケットのフラグメンテーションと有効期間 (TTL: time-to-live) の値を制御するために使用される <see cref="T:System.Net.NetworkInformation.PingOptions" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-809">A <see cref="T:System.Net.NetworkInformation.PingOptions" /> object used to control fragmentation and Time-to-Live values for the ICMP echo message packet.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="488fd-810">非同期操作として、指定されたコンピューターに、指定されたデータ バッファーと共に ICMP (インターネット制御メッセージ プロトコル) エコー メッセージを送信し、そのコンピューターから対応する ICMP エコー応答メッセージを受信します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-810">Sends an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the specified computer, and receive a corresponding ICMP echo reply message from that computer as an asynchronous operation.</span>
          </span>
          <span data-ttu-id="488fd-811">このオーバーロードを使用して、操作のタイムアウト値と送受信に使用するバッファーを指定し、ICMP エコー メッセージ パケットのフラグメンテーションと有効期間 (TTL: time-to-live) の値を制御できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-811">This overload allows you to specify a time-out value for the operation, a buffer to use for send and receive, and control fragmentation and Time-to-Live values for the ICMP echo message packet.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="488fd-812">
            <see cref="T:System.Threading.Tasks.Task`1" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-812">Returns <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
          <span data-ttu-id="488fd-813">非同期操作を表すタスク オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="488fd-813">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="488fd-814">この操作はブロックされません。</span><span class="sxs-lookup"><span data-stu-id="488fd-814">This operation will not block.</span></span> <span data-ttu-id="488fd-815">返された<xref:System.Threading.Tasks.Task%601>> オブジェクトは、ICMP パケットが送信され、応答が受信された後に完了します。</span><span class="sxs-lookup"><span data-stu-id="488fd-815">The returned <xref:System.Threading.Tasks.Task%601>> object will complete after the ICMP packet has been sent and the response has been received.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>