<Type Name="PingReply" FullName="System.Net.NetworkInformation.PingReply">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bbf9f65c761d5eccd095f27ca1dcc34e688bd992" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36474444" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PingReply" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PingReply extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.NetworkInformation.PingReply" />
  <TypeSignature Language="VB.NET" Value="Public Class PingReply" />
  <TypeSignature Language="C++ CLI" Value="public ref class PingReply" />
  <TypeSignature Language="F#" Value="type PingReply = class" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Ping</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="73e74-101">
        <see cref="Overload:System.Net.NetworkInformation.Ping.Send" /> 操作または <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> 操作の結果として得られるステータスとデータに関する情報を提供します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="73e74-101">Provides information about the status and data resulting from a <see cref="Overload:System.Net.NetworkInformation.Ping.Send" /> or <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> operation.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73e74-102"><xref:System.Net.NetworkInformation.Ping>クラスは、リモート コンピューターにインターネット制御メッセージ プロトコル (ICMP) エコー要求の送信し、ICMP エコー応答メッセージを使用してコンピューターから情報を受信を試みます。</span><span class="sxs-lookup"><span data-stu-id="73e74-102">The <xref:System.Net.NetworkInformation.Ping> class attempts to send an Internet Control Message Protocol (ICMP) echo request to a remote computer and receive information back from the computer via an ICMP echo reply message.</span></span> <span data-ttu-id="73e74-103"><xref:System.Net.NetworkInformation.Ping>クラスのインスタンスを使用して、<xref:System.Net.NetworkInformation.PingReply>クラスの状態と、要求を送信し、応答の受信にかかった時間など、操作に関する情報を返します。</span><span class="sxs-lookup"><span data-stu-id="73e74-103">The <xref:System.Net.NetworkInformation.Ping> class uses instances of the <xref:System.Net.NetworkInformation.PingReply> class to return information about the operation, such as its status and the time taken to send the request and receive the reply.</span></span>  
  
 <span data-ttu-id="73e74-104"><xref:System.Net.NetworkInformation.Ping.Send%2A>メソッドのインスタンスを返す、<xref:System.Net.NetworkInformation.PingReply>クラスに直接できます。</span><span class="sxs-lookup"><span data-stu-id="73e74-104">The <xref:System.Net.NetworkInformation.Ping.Send%2A> methods return instances of the <xref:System.Net.NetworkInformation.PingReply> class directly.</span></span> <span data-ttu-id="73e74-105"><xref:System.Net.NetworkInformation.Ping.SendAsync%2A>を返し、<xref:System.Net.NetworkInformation.PingReply>で、<xref:System.Net.NetworkInformation.PingCompletedEventHandler>メソッドの<xref:System.Net.NetworkInformation.PingCompletedEventArgs>パラメーター。</span><span class="sxs-lookup"><span data-stu-id="73e74-105">The <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> methods return a <xref:System.Net.NetworkInformation.PingReply> in the <xref:System.Net.NetworkInformation.PingCompletedEventHandler> method's <xref:System.Net.NetworkInformation.PingCompletedEventArgs> parameter.</span></span> <span data-ttu-id="73e74-106"><xref:System.Net.NetworkInformation.PingReply>を通じてアクセス、<xref:System.Net.NetworkInformation.PingCompletedEventArgs.Reply%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="73e74-106">The <xref:System.Net.NetworkInformation.PingReply> is accessed through the <xref:System.Net.NetworkInformation.PingCompletedEventArgs.Reply%2A> property.</span></span>  
  
 <span data-ttu-id="73e74-107">場合の値<xref:System.Net.NetworkInformation.PingReply.Status%2A>は<xref:System.Net.NetworkInformation.IPStatus.Success>、によって返される値を使用しないでください、 <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A>、<xref:System.Net.NetworkInformation.PingReply.Options%2A>または<xref:System.Net.NetworkInformation.PingReply.Buffer%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="73e74-107">If the value of <xref:System.Net.NetworkInformation.PingReply.Status%2A> is not <xref:System.Net.NetworkInformation.IPStatus.Success>, you should not use the values returned by the <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A>, <xref:System.Net.NetworkInformation.PingReply.Options%2A> or <xref:System.Net.NetworkInformation.PingReply.Buffer%2A> properties.</span></span> <span data-ttu-id="73e74-108"><xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A>プロパティは、0 を返します、<xref:System.Net.NetworkInformation.PingReply.Buffer%2A>プロパティは、空の配列を返しますと<xref:System.Net.NetworkInformation.PingReply.Options%2A>が返される`null`です。</span><span class="sxs-lookup"><span data-stu-id="73e74-108">The <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A> property will return zero, the <xref:System.Net.NetworkInformation.PingReply.Buffer%2A> property will return an empty array, and the <xref:System.Net.NetworkInformation.PingReply.Options%2A> property will return `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="73e74-109">次のコード例では、使用方法を示します<xref:System.Net.NetworkInformation.Ping>クラスを同期的に ICMP エコー要求を送信および応答を表示します。</span><span class="sxs-lookup"><span data-stu-id="73e74-109">The following code example demonstrates using <xref:System.Net.NetworkInformation.Ping> class to send an ICMP echo request synchronously and display the response.</span></span>  
  
 [!code-cpp[NCLPingSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclPingSync/CPP/syncping.cpp#1)]
 [!code-csharp[NCLPingSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclPingSync/CS/syncping.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Address">
      <MemberSignature Language="C#" Value="public System.Net.IPAddress Address { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IPAddress Address" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.PingReply.Address" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Address As IPAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::IPAddress ^ Address { System::Net::IPAddress ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Address : System.Net.IPAddress" Usage="System.Net.NetworkInformation.PingReply.Address" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="73e74-110">ICMP (インターネット制御メッセージ プロトコル) エコー応答を送信するホストのアドレスを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73e74-110">Gets the address of the host that sends the Internet Control Message Protocol (ICMP) echo reply.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="73e74-111">ICMP エコー メッセージの送信先を格納している <see cref="T:System.Net.IPAddress" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73e74-111">An <see cref="T:System.Net.IPAddress" /> containing the destination for the ICMP echo message.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73e74-112"><xref:System.Net.NetworkInformation.PingReply.Address%2A>のいずれかによって返される、<xref:System.Net.NetworkInformation.Ping.Send%2A>オーバー ロードは、悪意のあるリモート コンピューターから取得できます。</span><span class="sxs-lookup"><span data-stu-id="73e74-112">The <xref:System.Net.NetworkInformation.PingReply.Address%2A> returned by any of the <xref:System.Net.NetworkInformation.Ping.Send%2A> overloads can originate from a malicious remote computer.</span></span> <span data-ttu-id="73e74-113">このアドレスを使用してリモート コンピューターに接続できません。</span><span class="sxs-lookup"><span data-stu-id="73e74-113">Do not connect to the remote computer using this address.</span></span> <span data-ttu-id="73e74-114">DNS を使用すると、接続するコンピューターの IP アドレスを確認できます。</span><span class="sxs-lookup"><span data-stu-id="73e74-114">Use DNS to determine the IP address of the machine to which you want to connect.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="73e74-115">次のコード例では、同期的に ICMP エコー要求を送信し、このプロパティの値を表示します。</span><span class="sxs-lookup"><span data-stu-id="73e74-115">The following code example sends an ICMP echo request synchronously and displays the value of this property.</span></span>  
  
 [!code-cpp[NclPingSampler#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLPingSampler/CPP/pingtest.cpp#2)]
 [!code-csharp[NclPingSampler#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPingSampler/CS/pingtest.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Buffer">
      <MemberSignature Language="C#" Value="public byte[] Buffer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Buffer" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.PingReply.Buffer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Buffer As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ Buffer { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Buffer : byte[]" Usage="System.Net.NetworkInformation.PingReply.Buffer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="73e74-116">ICMP (インターネット制御メッセージ プロトコル) エコー応答メッセージで受信したデータのバッファーを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73e74-116">Gets the buffer of data received in an Internet Control Message Protocol (ICMP) echo reply message.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="73e74-117">ICMP エコー応答メッセージで受信したデータを格納している <see cref="T:System.Byte" /> 配列。応答を受信しなかった場合は空の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73e74-117">A <see cref="T:System.Byte" /> array containing the data received in an ICMP echo reply message, or an empty array, if no reply was received.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73e74-118">ICMP エコー要求で送信されるデータ バッファーがエコー応答内の送信者に返されるは、既知のサイズのパケットのラウンド トリップ時間を計算するためです。</span><span class="sxs-lookup"><span data-stu-id="73e74-118">The data buffer sent with the ICMP echo request is returned to the sender in the echo reply so the roundtrip travel time for a packet of a known size can be computed.</span></span> <span data-ttu-id="73e74-119">データ バッファーと組み合わせて、<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>オプションで、元と移行先のコンピューター間のネットワーク パスの最大転送単位を検出するために使用できます。</span><span class="sxs-lookup"><span data-stu-id="73e74-119">The data buffer, combined with the <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> option, can be used to discover the maximum transmission unit for the network path between the source and destination computers.</span></span> <span data-ttu-id="73e74-120">詳細については、RFC 1574 で利用可能なセクション 3.2 では、"Traceroute"を参照してください。 [ https://www.ietf.org](https://www.ietf.org)です。</span><span class="sxs-lookup"><span data-stu-id="73e74-120">For additional information, see "Traceroute" in RFC 1574, Section 3.2, available at [https://www.ietf.org](https://www.ietf.org).</span></span>  
  
 <span data-ttu-id="73e74-121">使用されるバッファーの既定<xref:System.Net.NetworkInformation.Ping.Send%2A>と<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>32 バイト データにはが含まれています。</span><span class="sxs-lookup"><span data-stu-id="73e74-121">The default buffer used with <xref:System.Net.NetworkInformation.Ping.Send%2A> and <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> contains 32 bytes of data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="73e74-122">次のコード例では、同期的に ICMP エコー要求を送信し、このプロパティによって返されるバッファーのサイズを表示します。</span><span class="sxs-lookup"><span data-stu-id="73e74-122">The following code example sends an ICMP echo request synchronously and displays the size of the buffer returned by this property.</span></span>  
  
 [!code-cpp[NclPingSampler#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLPingSampler/CPP/pingtest.cpp#4)]
 [!code-csharp[NclPingSampler#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPingSampler/CS/pingtest.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="public System.Net.NetworkInformation.PingOptions Options { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.NetworkInformation.PingOptions Options" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.PingReply.Options" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Options As PingOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::NetworkInformation::PingOptions ^ Options { System::Net::NetworkInformation::PingOptions ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Options : System.Net.NetworkInformation.PingOptions" Usage="System.Net.NetworkInformation.PingReply.Options" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.PingOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="73e74-123">ICMP (インターネット制御メッセージ プロトコル) エコー要求に応答を送信するために使用するオプションを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73e74-123">Gets the options used to transmit the reply to an Internet Control Message Protocol (ICMP) echo request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="73e74-124">
            <see cref="T:System.Net.NetworkInformation.PingOptions" /> が <see cref="P:System.Net.NetworkInformation.PingReply.Status" /> の場合は、応答の送信に使用する有効期間 (TTL: Time to Live) とフラグメンテーション ディレクティブを格納した <see cref="F:System.Net.NetworkInformation.IPStatus.Success" /> オブジェクト。それ以外の場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73e74-124">A <see cref="T:System.Net.NetworkInformation.PingOptions" /> object that contains the Time to Live (TTL) and the fragmentation directive used for transmitting the reply if <see cref="P:System.Net.NetworkInformation.PingReply.Status" /> is <see cref="F:System.Net.NetworkInformation.IPStatus.Success" />; otherwise, <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73e74-125">TTL は、ノードは、送信元と移行先の間で送受信されるパケットを転送できる回数を定義します。</span><span class="sxs-lookup"><span data-stu-id="73e74-125">The TTL defines the number of times nodes can forward a packet as it travels between its source and destination.</span></span> <span data-ttu-id="73e74-126">ホップとも呼ばれる、転送の数は、指定された TTL 値を超えている場合、パケットが配信不能と見なされる、破棄されます。</span><span class="sxs-lookup"><span data-stu-id="73e74-126">If the number of forwards, also known as hops, exceeds the value specified for the TTL, the packet is deemed undeliverable and is discarded.</span></span>  
  
 <span data-ttu-id="73e74-127"><xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> ICMP エコー要求コントロール パケット断片化で指定された値。</span><span class="sxs-lookup"><span data-stu-id="73e74-127">The <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> value specified in the ICMP echo request controls packet fragmentation.</span></span> <span data-ttu-id="73e74-128">場合<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>は`true`パケット サイズが、パケットで使用されるネットワーク パスの最大転送単位を超えると、パケットは破棄されます、<xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>エラーが返されます。</span><span class="sxs-lookup"><span data-stu-id="73e74-128">If <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> is `true` and the packet size exceeds the maximum transmission unit of the network path taken by the packet, the packet is discarded and the <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig> error is returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="73e74-129">次のコード例は、同期的に ICMP エコー要求を送信しに格納されている値を表示、<xref:System.Net.NetworkInformation.PingOptions>このプロパティによって返されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="73e74-129">The following code example sends an ICMP echo request synchronously and displays the values stored in the <xref:System.Net.NetworkInformation.PingOptions> object returned by this property.</span></span>  
  
 [!code-cpp[NclPingSampler#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLPingSampler/CPP/pingtest.cpp#3)]
 [!code-csharp[NclPingSampler#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPingSampler/CS/pingtest.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RoundtripTime">
      <MemberSignature Language="C#" Value="public long RoundtripTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 RoundtripTime" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.PingReply.RoundtripTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RoundtripTime As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long RoundtripTime { long get(); };" />
      <MemberSignature Language="F#" Value="member this.RoundtripTime : int64" Usage="System.Net.NetworkInformation.PingReply.RoundtripTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="73e74-130">インターネット制御メッセージ プロトコル (ICMP) エコー要求を送信して、対応する ICMP エコー応答メッセージを受信するまでにかかった時間をミリ秒単位で取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73e74-130">Gets the number of milliseconds taken to send an Internet Control Message Protocol (ICMP) echo request and receive the corresponding ICMP echo reply message.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="73e74-131">往復時間 (ミリ秒単位) を指定する <see cref="T:System.Int64" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73e74-131">An <see cref="T:System.Int64" /> that specifies the round trip time, in milliseconds.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73e74-132">エコー要求に失敗した場合、<xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A>時間は、要求が成功したときに有効な値ではまた、0 として報告します。</span><span class="sxs-lookup"><span data-stu-id="73e74-132">If the Echo request fails, the <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A> time is reported as 0, which is also a valid value when the request succeeds.</span></span> <span data-ttu-id="73e74-133">確認する必要があります、<xref:System.Net.NetworkInformation.PingReply.Status%2A>をこのプロパティによって返される値を無視するかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="73e74-133">You must check the <xref:System.Net.NetworkInformation.PingReply.Status%2A> to determine whether the value returned by this property should be ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="73e74-134">次のコード例では、同期的に ICMP エコー要求を送信し、このプロパティによって返されるバッファーのサイズを表示します。</span><span class="sxs-lookup"><span data-stu-id="73e74-134">The following code example sends an ICMP echo request synchronously and displays the size of the buffer returned by this property.</span></span>  
  
 [!code-cpp[NclPingSampler#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLPingSampler/CPP/pingtest.cpp#4)]
 [!code-csharp[NclPingSampler#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPingSampler/CS/pingtest.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Status">
      <MemberSignature Language="C#" Value="public System.Net.NetworkInformation.IPStatus Status { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.NetworkInformation.IPStatus Status" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.PingReply.Status" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Status As IPStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::NetworkInformation::IPStatus Status { System::Net::NetworkInformation::IPStatus get(); };" />
      <MemberSignature Language="F#" Value="member this.Status : System.Net.NetworkInformation.IPStatus" Usage="System.Net.NetworkInformation.PingReply.Status" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.IPStatus</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="73e74-135">ICMP (インターネット制御メッセージ プロトコル) エコー要求の送信と、対応する ICMP エコー応答メッセージの受信の処理のステータスを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73e74-135">Gets the status of an attempt to send an Internet Control Message Protocol (ICMP) echo request and receive the corresponding ICMP echo reply message.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="73e74-136">要求の結果を示す <see cref="T:System.Net.NetworkInformation.IPStatus" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73e74-136">An <see cref="T:System.Net.NetworkInformation.IPStatus" /> value indicating the result of the request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73e74-137">場合の値<xref:System.Net.NetworkInformation.PingReply.Status%2A>は<xref:System.Net.NetworkInformation.IPStatus.Success>、によって返される値を使用しないでください、 <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A>、<xref:System.Net.NetworkInformation.PingReply.Options%2A>または<xref:System.Net.NetworkInformation.PingReply.Buffer%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="73e74-137">If the value of <xref:System.Net.NetworkInformation.PingReply.Status%2A> is not <xref:System.Net.NetworkInformation.IPStatus.Success>, you should not use the values returned by the <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A>, <xref:System.Net.NetworkInformation.PingReply.Options%2A> or <xref:System.Net.NetworkInformation.PingReply.Buffer%2A> properties.</span></span> <span data-ttu-id="73e74-138"><xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A>と<xref:System.Net.NetworkInformation.PingReply.Buffer%2A>プロパティは、0 を返しますと<xref:System.Net.NetworkInformation.PingReply.Options%2A>が返される`null`です。</span><span class="sxs-lookup"><span data-stu-id="73e74-138">The <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A> and <xref:System.Net.NetworkInformation.PingReply.Buffer%2A> properties will return zero, and the <xref:System.Net.NetworkInformation.PingReply.Options%2A> property will return `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="73e74-139">次のコード例では、使用方法を示します<xref:System.Net.NetworkInformation.Ping>クラスを同期的に ICMP エコー要求を送信および応答を表示します。</span><span class="sxs-lookup"><span data-stu-id="73e74-139">The following code example demonstrates using <xref:System.Net.NetworkInformation.Ping> class to send an ICMP echo request synchronously and display the response.</span></span>  
  
 [!code-cpp[NCLPingSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclPingSync/CPP/syncping.cpp#1)]
 [!code-csharp[NCLPingSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclPingSync/CS/syncping.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>