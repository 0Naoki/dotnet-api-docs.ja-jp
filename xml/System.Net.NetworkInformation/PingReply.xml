<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="PingReply.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5facb66afb1d3143208281d63cbff3cdc83cb08a0.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">facb66afb1d3143208281d63cbff3cdc83cb08a0</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Net.NetworkInformation.PingReply">
          <source>Provides information about the status and data resulting from a <ph id="ph1">&lt;see cref="Overload:System.Net.NetworkInformation.Ping.Send" /&gt;</ph> or <ph id="ph2">&lt;see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /&gt;</ph> operation.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="Overload:System.Net.NetworkInformation.Ping.Send" /&gt;</ph> 操作または <ph id="ph2">&lt;see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /&gt;</ph> 操作の結果として得られるステータスとデータに関する情報を提供します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.NetworkInformation.PingReply">
          <source>The <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping&gt;</ph> class attempts to send an Internet Control Message Protocol (ICMP) echo request to a remote computer and receive information back from the computer via an ICMP echo reply message.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping&gt;</ph>クラスは、リモート コンピューターにインターネット制御メッセージ プロトコル (ICMP) エコー要求の送信し、ICMP エコー応答メッセージを使用してコンピューターから情報を受信を試みます。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.NetworkInformation.PingReply">
          <source>The <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping&gt;</ph> class uses instances of the <ph id="ph2">&lt;xref:System.Net.NetworkInformation.PingReply&gt;</ph> class to return information about the operation, such as its status and the time taken to send the request and receive the reply.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping&gt;</ph>クラスのインスタンスを使用して、<ph id="ph2">&lt;xref:System.Net.NetworkInformation.PingReply&gt;</ph>クラスの状態と、要求を送信し、応答の受信にかかった時間など、操作に関する情報を返します。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.NetworkInformation.PingReply">
          <source>The <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.Send%2A&gt;</ph> methods return instances of the <ph id="ph2">&lt;xref:System.Net.NetworkInformation.PingReply&gt;</ph> class directly.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.Send%2A&gt;</ph>メソッドのインスタンスを返す、<ph id="ph2">&lt;xref:System.Net.NetworkInformation.PingReply&gt;</ph>クラスに直接できます。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.NetworkInformation.PingReply">
          <source>The <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> methods return a <ph id="ph2">&lt;xref:System.Net.NetworkInformation.PingReply&gt;</ph> in the <ph id="ph3">&lt;xref:System.Net.NetworkInformation.PingCompletedEventHandler&gt;</ph> method's <ph id="ph4">&lt;xref:System.Net.NetworkInformation.PingCompletedEventArgs&gt;</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph>を返し、<ph id="ph2">&lt;xref:System.Net.NetworkInformation.PingReply&gt;</ph>で、<ph id="ph3">&lt;xref:System.Net.NetworkInformation.PingCompletedEventHandler&gt;</ph>メソッドの<ph id="ph4">&lt;xref:System.Net.NetworkInformation.PingCompletedEventArgs&gt;</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.NetworkInformation.PingReply">
          <source>The <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply&gt;</ph> is accessed through the <ph id="ph2">&lt;xref:System.Net.NetworkInformation.PingCompletedEventArgs.Reply%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply&gt;</ph>を通じてアクセス、<ph id="ph2">&lt;xref:System.Net.NetworkInformation.PingCompletedEventArgs.Reply%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.NetworkInformation.PingReply">
          <source>If the value of <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> is not <ph id="ph2">&lt;xref:System.Net.NetworkInformation.IPStatus.Success&gt;</ph>, you should not use the values returned by the <ph id="ph3">&lt;xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Net.NetworkInformation.PingReply.Options%2A&gt;</ph> or <ph id="ph5">&lt;xref:System.Net.NetworkInformation.PingReply.Buffer%2A&gt;</ph> properties.</source>
          <target state="translated">場合の値<ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph>は<ph id="ph2">&lt;xref:System.Net.NetworkInformation.IPStatus.Success&gt;</ph>、によって返される値を使用しないでください、 <ph id="ph3">&lt;xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A&gt;</ph>、<ph id="ph4">&lt;xref:System.Net.NetworkInformation.PingReply.Options%2A&gt;</ph>または<ph id="ph5">&lt;xref:System.Net.NetworkInformation.PingReply.Buffer%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.NetworkInformation.PingReply">
          <source>The <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A&gt;</ph> property will return zero, the <ph id="ph2">&lt;xref:System.Net.NetworkInformation.PingReply.Buffer%2A&gt;</ph> property will return an empty array, and the <ph id="ph3">&lt;xref:System.Net.NetworkInformation.PingReply.Options%2A&gt;</ph> property will return <ph id="ph4">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A&gt;</ph>プロパティは、0 を返します、<ph id="ph2">&lt;xref:System.Net.NetworkInformation.PingReply.Buffer%2A&gt;</ph>プロパティは、空の配列を返しますと<ph id="ph3">&lt;xref:System.Net.NetworkInformation.PingReply.Options%2A&gt;</ph>が返される<ph id="ph4">`null`</ph>です。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.NetworkInformation.PingReply">
          <source>The following code example demonstrates using <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping&gt;</ph> class to send an ICMP echo request synchronously and display the response.</source>
          <target state="translated">次のコード例では、使用方法を示します<ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping&gt;</ph>クラスを同期的に ICMP エコー要求を送信および応答を表示します。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="P:System.Net.NetworkInformation.PingReply.Address">
          <source>Gets the address of the host that sends the Internet Control Message Protocol (ICMP) echo reply.</source>
          <target state="translated">ICMP (インターネット制御メッセージ プロトコル) エコー応答を送信するホストのアドレスを取得します。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.NetworkInformation.PingReply.Address">
          <source>An <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> containing the destination for the ICMP echo message.</source>
          <target state="translated">ICMP エコー メッセージの送信先を格納している <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.NetworkInformation.PingReply.Address">
          <source>The <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.Address%2A&gt;</ph> returned by any of the <ph id="ph2">&lt;xref:System.Net.NetworkInformation.Ping.Send%2A&gt;</ph> overloads can originate from a malicious remote computer.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.Address%2A&gt;</ph>のいずれかによって返される、<ph id="ph2">&lt;xref:System.Net.NetworkInformation.Ping.Send%2A&gt;</ph>オーバー ロードは、悪意のあるリモート コンピューターから取得できます。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.NetworkInformation.PingReply.Address">
          <source>Do not connect to the remote computer using this address.</source>
          <target state="translated">このアドレスを使用してリモート コンピューターに接続できません。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.NetworkInformation.PingReply.Address">
          <source>Use DNS to determine the IP address of the machine to which you want to connect.</source>
          <target state="translated">DNS を使用すると、接続するコンピューターの IP アドレスを確認できます。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.NetworkInformation.PingReply.Address">
          <source>The following code example sends an ICMP echo request synchronously and displays the value of this property.</source>
          <target state="translated">次のコード例では、同期的に ICMP エコー要求を送信し、このプロパティの値を表示します。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="P:System.Net.NetworkInformation.PingReply.Buffer">
          <source>Gets the buffer of data received in an Internet Control Message Protocol (ICMP) echo reply message.</source>
          <target state="translated">ICMP (インターネット制御メッセージ プロトコル) エコー応答メッセージで受信したデータのバッファーを取得します。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.NetworkInformation.PingReply.Buffer">
          <source>A <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> array containing the data received in an ICMP echo reply message, or an empty array, if no reply was received.</source>
          <target state="translated">ICMP エコー応答メッセージで受信したデータを格納している <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> 配列。応答を受信しなかった場合は空の配列。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.NetworkInformation.PingReply.Buffer">
          <source>The data buffer sent with the ICMP echo request is returned to the sender in the echo reply so the roundtrip travel time for a packet of a known size can be computed.</source>
          <target state="translated">ICMP エコー要求で送信されるデータ バッファーがエコー応答内の送信者に返されるは、既知のサイズのパケットのラウンド トリップ時間を計算するためです。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.NetworkInformation.PingReply.Buffer">
          <source>The data buffer, combined with the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A&gt;</ph> option, can be used to discover the maximum transmission unit for the network path between the source and destination computers.</source>
          <target state="translated">データ バッファーと組み合わせて、<ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A&gt;</ph>オプションで、元と移行先のコンピューター間のネットワーク パスの最大転送単位を検出するために使用できます。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.NetworkInformation.PingReply.Buffer">
          <source>For additional information, see "Traceroute" in RFC 1574, Section 3.2, available at <ph id="ph1">http://www.ietf.org</ph>.</source>
          <target state="translated">詳細については、RFC 1574 で利用可能なセクション 3.2 では、"Traceroute"を参照してください。<ph id="ph1">http://www.ietf.org</ph>です。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.NetworkInformation.PingReply.Buffer">
          <source>The default buffer used with <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.Send%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> contains 32 bytes of data.</source>
          <target state="translated">使用されるバッファーの既定<ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.Send%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph>32 バイト データにはが含まれています。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.NetworkInformation.PingReply.Buffer">
          <source>The following code example sends an ICMP echo request synchronously and displays the size of the buffer returned by this property.</source>
          <target state="translated">次のコード例では、同期的に ICMP エコー要求を送信し、このプロパティによって返されるバッファーのサイズを表示します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="P:System.Net.NetworkInformation.PingReply.Options">
          <source>Gets the options used to transmit the reply to an Internet Control Message Protocol (ICMP) echo request.</source>
          <target state="translated">ICMP (インターネット制御メッセージ プロトコル) エコー要求に応答を送信するために使用するオプションを取得します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.NetworkInformation.PingReply.Options">
          <source>A <ph id="ph1">&lt;see cref="T:System.Net.NetworkInformation.PingOptions" /&gt;</ph> object that contains the Time to Live (TTL) and the fragmentation directive used for transmitting the reply if <ph id="ph2">&lt;see cref="P:System.Net.NetworkInformation.PingReply.Status" /&gt;</ph> is <ph id="ph3">&lt;see cref="F:System.Net.NetworkInformation.IPStatus.Success" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.NetworkInformation.PingOptions" /&gt;</ph> が <ph id="ph2">&lt;see cref="P:System.Net.NetworkInformation.PingReply.Status" /&gt;</ph> の場合は、応答の送信に使用する有効期間 (TTL: Time to Live) とフラグメンテーション ディレクティブを格納した <ph id="ph3">&lt;see cref="F:System.Net.NetworkInformation.IPStatus.Success" /&gt;</ph> オブジェクト。それ以外の場合は <ph id="ph4">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.NetworkInformation.PingReply.Options">
          <source>The TTL defines the number of times nodes can forward a packet as it travels between its source and destination.</source>
          <target state="translated">TTL は、ノードは、送信元と移行先の間で送受信されるパケットを転送できる回数を定義します。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.NetworkInformation.PingReply.Options">
          <source>If the number of forwards, also known as hops, exceeds the value specified for the TTL, the packet is deemed undeliverable and is discarded.</source>
          <target state="translated">ホップとも呼ばれる、転送の数は、指定された TTL 値を超えている場合、パケットが配信不能と見なされる、破棄されます。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.NetworkInformation.PingReply.Options">
          <source>The <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A&gt;</ph> value specified in the ICMP echo request controls packet fragmentation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A&gt;</ph> ICMP エコー要求コントロール パケット断片化で指定された値。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.NetworkInformation.PingReply.Options">
          <source>If <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A&gt;</ph> is <ph id="ph2">`true`</ph> and the packet size exceeds the maximum transmission unit of the network path taken by the packet, the packet is discarded and the <ph id="ph3">&lt;xref:System.Net.NetworkInformation.IPStatus.PacketTooBig&gt;</ph> error is returned.</source>
          <target state="translated">場合<ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A&gt;</ph>は<ph id="ph2">`true`</ph>パケット サイズが、パケットで使用されるネットワーク パスの最大転送単位を超えると、パケットは破棄されます、<ph id="ph3">&lt;xref:System.Net.NetworkInformation.IPStatus.PacketTooBig&gt;</ph>エラーが返されます。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.NetworkInformation.PingReply.Options">
          <source>The following code example sends an ICMP echo request synchronously and displays the values stored in the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingOptions&gt;</ph> object returned by this property.</source>
          <target state="translated">次のコード例は、同期的に ICMP エコー要求を送信しに格納されている値を表示、<ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingOptions&gt;</ph>このプロパティによって返されるオブジェクト。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="P:System.Net.NetworkInformation.PingReply.RoundtripTime">
          <source>Gets the number of milliseconds taken to send an Internet Control Message Protocol (ICMP) echo request and receive the corresponding ICMP echo reply message.</source>
          <target state="translated">インターネット制御メッセージ プロトコル (ICMP) エコー要求を送信して、対応する ICMP エコー応答メッセージを受信するまでにかかった時間をミリ秒単位で取得します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.NetworkInformation.PingReply.RoundtripTime">
          <source>An <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> that specifies the round trip time, in milliseconds.</source>
          <target state="translated">往復時間 (ミリ秒単位) を指定する <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.NetworkInformation.PingReply.RoundtripTime">
          <source>If the Echo request fails, the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A&gt;</ph> time is reported as 0, which is also a valid value when the request succeeds.</source>
          <target state="translated">エコー要求に失敗した場合、<ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A&gt;</ph>時間は、要求が成功したときに有効な値ではまた、0 として報告します。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.NetworkInformation.PingReply.RoundtripTime">
          <source>You must check the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> to determine whether the value returned by this property should be ignored.</source>
          <target state="translated">確認する必要があります、<ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph>をこのプロパティによって返される値を無視するかどうかを判断します。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.NetworkInformation.PingReply.RoundtripTime">
          <source>The following code example sends an ICMP echo request synchronously and displays the size of the buffer returned by this property.</source>
          <target state="translated">次のコード例では、同期的に ICMP エコー要求を送信し、このプロパティによって返されるバッファーのサイズを表示します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="P:System.Net.NetworkInformation.PingReply.Status">
          <source>Gets the status of an attempt to send an Internet Control Message Protocol (ICMP) echo request and receive the corresponding ICMP echo reply message.</source>
          <target state="translated">ICMP (インターネット制御メッセージ プロトコル) エコー要求の送信と、対応する ICMP エコー応答メッセージの受信の処理のステータスを取得します。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.NetworkInformation.PingReply.Status">
          <source>An <ph id="ph1">&lt;see cref="T:System.Net.NetworkInformation.IPStatus" /&gt;</ph> value indicating the result of the request.</source>
          <target state="translated">要求の結果を示す <ph id="ph1">&lt;see cref="T:System.Net.NetworkInformation.IPStatus" /&gt;</ph> 値。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.NetworkInformation.PingReply.Status">
          <source>If the value of <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> is not <ph id="ph2">&lt;xref:System.Net.NetworkInformation.IPStatus.Success&gt;</ph>, you should not use the values returned by the <ph id="ph3">&lt;xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Net.NetworkInformation.PingReply.Options%2A&gt;</ph> or <ph id="ph5">&lt;xref:System.Net.NetworkInformation.PingReply.Buffer%2A&gt;</ph> properties.</source>
          <target state="translated">場合の値<ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph>は<ph id="ph2">&lt;xref:System.Net.NetworkInformation.IPStatus.Success&gt;</ph>、によって返される値を使用しないでください、 <ph id="ph3">&lt;xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A&gt;</ph>、<ph id="ph4">&lt;xref:System.Net.NetworkInformation.PingReply.Options%2A&gt;</ph>または<ph id="ph5">&lt;xref:System.Net.NetworkInformation.PingReply.Buffer%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.NetworkInformation.PingReply.Status">
          <source>The <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.NetworkInformation.PingReply.Buffer%2A&gt;</ph> properties will return zero, and the <ph id="ph3">&lt;xref:System.Net.NetworkInformation.PingReply.Options%2A&gt;</ph> property will return <ph id="ph4">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Net.NetworkInformation.PingReply.Buffer%2A&gt;</ph>プロパティは、0 を返しますと<ph id="ph3">&lt;xref:System.Net.NetworkInformation.PingReply.Options%2A&gt;</ph>が返される<ph id="ph4">`null`</ph>です。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.NetworkInformation.PingReply.Status">
          <source>The following code example demonstrates using <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping&gt;</ph> class to send an ICMP echo request synchronously and display the response.</source>
          <target state="translated">次のコード例では、使用方法を示します<ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping&gt;</ph>クラスを同期的に ICMP エコー要求を送信および応答を表示します。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>