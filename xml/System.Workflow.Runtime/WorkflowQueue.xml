<Type Name="WorkflowQueue" FullName="System.Workflow.Runtime.WorkflowQueue">
  <TypeSignature Language="C#" Value="public class WorkflowQueue" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WorkflowQueue extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Runtime.WorkflowQueue" />
  <TypeSignature Language="VB.NET" Value="Public Class WorkflowQueue" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowQueue" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="3ed1b-101">ワークフロー キューを表します。</span><span class="sxs-lookup"><span data-stu-id="3ed1b-101">Represents a workflow queue.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <span data-ttu-id="3ed1b-102">ワークフロー キューは、ホストまたはホスト サービスとワークフロー内のアクティビティの間でメッセージを渡すために使用されます。</span><span class="sxs-lookup"><span data-stu-id="3ed1b-102">Workflow queues are used to pass messages between a host or host services and activities in a workflow.</span></span> <span data-ttu-id="3ed1b-103">アクティビティは <xref:System.Workflow.Runtime.WorkflowQueue> を呼び出すことによって <xref:System.Workflow.Runtime.WorkflowQueuingService.CreateWorkflowQueue%2A?displayProperty=nameWithType> を作成でき、ホスト、サービス、または他のアクティビティは <xref:System.Workflow.Runtime.WorkflowQueue.Enqueue%2A> を呼び出すことで、その <xref:System.Workflow.Runtime.WorkflowQueue> に項目を追加できます。</span><span class="sxs-lookup"><span data-stu-id="3ed1b-103">Any activity can create a <xref:System.Workflow.Runtime.WorkflowQueue> by calling <xref:System.Workflow.Runtime.WorkflowQueuingService.CreateWorkflowQueue%2A?displayProperty=nameWithType>, and a host, a service, or another activity can call <xref:System.Workflow.Runtime.WorkflowQueue.Enqueue%2A> to add an item to that <xref:System.Workflow.Runtime.WorkflowQueue>.</span></span> <span data-ttu-id="3ed1b-104"><xref:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable> イベントに定期受信することにより、<xref:System.Workflow.Runtime.WorkflowQueue> に項目が到着したときに通知を受けることができます。</span><span class="sxs-lookup"><span data-stu-id="3ed1b-104">You can subscribe to the <xref:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable> event to be notified when an item arrives on the <xref:System.Workflow.Runtime.WorkflowQueue>.</span></span> <span data-ttu-id="3ed1b-105"><xref:System.Workflow.Runtime.WorkflowQueue.Peek%2A> を使用して、<xref:System.Workflow.Runtime.WorkflowQueue> の先頭の項目を調べることができます。また、<xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A> を使用して、<xref:System.Workflow.Runtime.WorkflowQueue> から項目を削除できます。</span><span class="sxs-lookup"><span data-stu-id="3ed1b-105">You can use <xref:System.Workflow.Runtime.WorkflowQueue.Peek%2A> to examine an item at the beginning of the <xref:System.Workflow.Runtime.WorkflowQueue> and <xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A> to remove an item from the <xref:System.Workflow.Runtime.WorkflowQueue>.</span></span> <span data-ttu-id="3ed1b-106">各 <xref:System.Workflow.Runtime.WorkflowQueue> は、キューの削除など <xref:System.Workflow.Runtime.WorkflowQueuingService> に対する他の管理操作を実行するために使用できる <xref:System.Workflow.Runtime.WorkflowQueue> に関連付けられます。</span><span class="sxs-lookup"><span data-stu-id="3ed1b-106">Each <xref:System.Workflow.Runtime.WorkflowQueue> is associated with a <xref:System.Workflow.Runtime.WorkflowQueuingService> that you can use to perform other management operations on the <xref:System.Workflow.Runtime.WorkflowQueue>, such as deleting the queue.</span></span> <span data-ttu-id="3ed1b-107"><xref:System.Workflow.Runtime.WorkflowQueue.QueuingService%2A> は、この <xref:System.Workflow.Runtime.WorkflowQueuingService> に関連付けられている <xref:System.Workflow.Runtime.WorkflowQueue> を公開します。</span><span class="sxs-lookup"><span data-stu-id="3ed1b-107"><xref:System.Workflow.Runtime.WorkflowQueue.QueuingService%2A> exposes the <xref:System.Workflow.Runtime.WorkflowQueuingService> associated with this <xref:System.Workflow.Runtime.WorkflowQueue>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3ed1b-108">次のコード例は、<xref:System.Workflow.Runtime.WorkflowQueue> メソッドを呼び出して <xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A?displayProperty=nameWithType> を作成する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="3ed1b-108">The following code example demonstrates how you can create a <xref:System.Workflow.Runtime.WorkflowQueue> by calling the <xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="3ed1b-109">また、<xref:System.Workflow.Runtime.WorkflowQueue.Count%2A> プロパティを使用して、現在のキューにメッセージが存在するかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="3ed1b-109">It also uses the <xref:System.Workflow.Runtime.WorkflowQueue.Count%2A> property to determine whether any messages exist in the current queue.</span></span> <span data-ttu-id="3ed1b-110">最後に、<xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A> メソッドを使用して、キューの先頭のオブジェクトを削除して返します。</span><span class="sxs-lookup"><span data-stu-id="3ed1b-110">Finally, the code uses the <xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A> method to remove and return the first object in the queue.</span></span>  
  
 <span data-ttu-id="3ed1b-111">このコード例は、FileSystemEvent.cs ファイルに含まれている、ファイル監視アクティビティの SDK サンプルの一部です。</span><span class="sxs-lookup"><span data-stu-id="3ed1b-111">This code example is part of the File Watcher Activity SDK Sample from the FileSystemEvent.cs file.</span></span> <span data-ttu-id="3ed1b-112">詳細については、次を参照してください。[ファイル システムの監視活動](http://msdn.microsoft.com/library/5442b63a-bdad-43d0-b7cf-f0b5d8b56a99)です。</span><span class="sxs-lookup"><span data-stu-id="3ed1b-112">For more information, see [File System Watcher Activity](http://msdn.microsoft.com/library/5442b63a-bdad-43d0-b7cf-f0b5d8b56a99).</span></span>  
  
 [!code-csharp[WF_Samples#227](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#227)]
 [!code-vb[WF_Samples#227](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#227)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.WorkflowQueue.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3ed1b-113"><see cref="T:System.Workflow.Runtime.WorkflowQueue" /> に格納されている項目の数を取得します。</span><span class="sxs-lookup"><span data-stu-id="3ed1b-113">Gets the number of items contained in the <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span></span></summary>
        <value><span data-ttu-id="3ed1b-114">ワークフロー キュー内の項目の数。</span><span class="sxs-lookup"><span data-stu-id="3ed1b-114">The number of items in the workflow queue.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3ed1b-115">次のコード例は、<xref:System.Workflow.Runtime.WorkflowQueue> メソッドを呼び出して <xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A?displayProperty=nameWithType> を作成する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="3ed1b-115">The following code example demonstrates how you can create a <xref:System.Workflow.Runtime.WorkflowQueue> by calling the <xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="3ed1b-116">また、<xref:System.Workflow.Runtime.WorkflowQueue.Count%2A> プロパティを使用して、現在のキューにメッセージが存在するかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="3ed1b-116">It also uses the <xref:System.Workflow.Runtime.WorkflowQueue.Count%2A> property to determine whether any messages exist in the current queue.</span></span> <span data-ttu-id="3ed1b-117">最後に、<xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A> メソッドを使用して、キューの先頭のオブジェクトを削除して返します。</span><span class="sxs-lookup"><span data-stu-id="3ed1b-117">Finally, the code uses the <xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A> method to remove and return the first object in the queue.</span></span>  
  
 <span data-ttu-id="3ed1b-118">このコード例は、FileSystemEvent.cs ファイルに含まれている、ファイル監視アクティビティの SDK サンプルの一部です。</span><span class="sxs-lookup"><span data-stu-id="3ed1b-118">This code example is part of the File Watcher Activity SDK Sample from the FileSystemEvent.cs file.</span></span> <span data-ttu-id="3ed1b-119">詳細については、次を参照してください。[ファイル システムの監視活動](http://msdn.microsoft.com/library/5442b63a-bdad-43d0-b7cf-f0b5d8b56a99)です。</span><span class="sxs-lookup"><span data-stu-id="3ed1b-119">For more information, see [File System Watcher Activity](http://msdn.microsoft.com/library/5442b63a-bdad-43d0-b7cf-f0b5d8b56a99).</span></span>  
  
 [!code-csharp[WF_Samples#227](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#227)]
 [!code-vb[WF_Samples#227](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#227)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dequeue">
      <MemberSignature Language="C#" Value="public object Dequeue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Dequeue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowQueue.Dequeue" />
      <MemberSignature Language="VB.NET" Value="Public Function Dequeue () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Dequeue();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3ed1b-120"><see cref="T:System.Workflow.Runtime.WorkflowQueue" /> の先頭にあるオブジェクトを削除し、返します。</span><span class="sxs-lookup"><span data-stu-id="3ed1b-120">Removes and returns the object at the beginning of the <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span></span></summary>
        <returns><span data-ttu-id="3ed1b-121"><see cref="T:System.Workflow.Runtime.WorkflowQueue" /> の先頭から削除されたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3ed1b-121">The object that is removed from the beginning of the <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ed1b-122"><xref:System.Workflow.Runtime.WorkflowQueue.Count%2A> をチェックして、<xref:System.Workflow.Runtime.WorkflowQueue> を呼び出す前に <xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A> が空であるかどうかを確認できます。または、<xref:System.InvalidOperationException> をキャッチできます。</span><span class="sxs-lookup"><span data-stu-id="3ed1b-122">You can check <xref:System.Workflow.Runtime.WorkflowQueue.Count%2A> to determine whether the <xref:System.Workflow.Runtime.WorkflowQueue> is empty before you call <xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A>, or you can catch the <xref:System.InvalidOperationException>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3ed1b-123">次のコード例は、<xref:System.Workflow.Runtime.WorkflowQueue> メソッドを呼び出して <xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A?displayProperty=nameWithType> を作成する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="3ed1b-123">The following code example demonstrates how you can create a <xref:System.Workflow.Runtime.WorkflowQueue> by calling the <xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="3ed1b-124">また、<xref:System.Workflow.Runtime.WorkflowQueue.Count%2A> プロパティを使用して、現在のキューにメッセージが存在するかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="3ed1b-124">It also uses the <xref:System.Workflow.Runtime.WorkflowQueue.Count%2A> property to determine whether any messages exist in the current queue.</span></span> <span data-ttu-id="3ed1b-125">最後に、<xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A> メソッドを使用して、キューの先頭のオブジェクトを削除して返します。</span><span class="sxs-lookup"><span data-stu-id="3ed1b-125">Finally, the code uses the <xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A> method to remove and return the first object in the queue.</span></span>  
  
 <span data-ttu-id="3ed1b-126">このコード例は、FileSystemEvent.cs ファイルに含まれている、ファイル監視アクティビティの SDK サンプルの一部です。</span><span class="sxs-lookup"><span data-stu-id="3ed1b-126">This code example is part of the File Watcher Activity SDK Sample from the FileSystemEvent.cs file.</span></span> <span data-ttu-id="3ed1b-127">詳細については、次を参照してください。[ファイル システムの監視活動](http://msdn.microsoft.com/library/5442b63a-bdad-43d0-b7cf-f0b5d8b56a99)です。</span><span class="sxs-lookup"><span data-stu-id="3ed1b-127">For more information, see [File System Watcher Activity](http://msdn.microsoft.com/library/5442b63a-bdad-43d0-b7cf-f0b5d8b56a99).</span></span>  
  
 [!code-csharp[WF_Samples#227](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#227)]
 [!code-vb[WF_Samples#227](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#227)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3ed1b-128"><see cref="T:System.Workflow.Runtime.WorkflowQueue" /> が空です。</span><span class="sxs-lookup"><span data-stu-id="3ed1b-128">The <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> is empty.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.WorkflowQueue.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3ed1b-129"><see cref="T:System.Workflow.Runtime.WorkflowQueue" /> が有効かどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="3ed1b-129">Gets or sets a value that specifies whether the <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> is enabled.</span></span></summary>
        <value>
          <span data-ttu-id="3ed1b-130"><see langword="true" /> が有効な場合は <see cref="T:System.Workflow.Runtime.WorkflowQueue" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3ed1b-130"><see langword="true" /> if the <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> is enabled; otherwise <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Enqueue">
      <MemberSignature Language="C#" Value="public void Enqueue (object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Enqueue(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowQueue.Enqueue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Enqueue (item As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Enqueue(System::Object ^ item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="3ed1b-131"><see cref="T:System.Workflow.Runtime.WorkflowQueue" /> に追加するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3ed1b-131">The object to add to the <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span></span></param>
        <summary><span data-ttu-id="3ed1b-132"><see cref="T:System.Workflow.Runtime.WorkflowQueue" /> の末尾にオブジェクトを追加します。</span><span class="sxs-lookup"><span data-stu-id="3ed1b-132">Adds an object to the end of the <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3ed1b-133"><see cref="T:System.Workflow.Runtime.WorkflowQueue" /> が有効ではありません。</span><span class="sxs-lookup"><span data-stu-id="3ed1b-133">The <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> is not enabled.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Peek">
      <MemberSignature Language="C#" Value="public object Peek ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Peek() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowQueue.Peek" />
      <MemberSignature Language="VB.NET" Value="Public Function Peek () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Peek();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3ed1b-134"><see cref="T:System.Workflow.Runtime.WorkflowQueue" /> の先頭にあるオブジェクトを削除せずに返します。</span><span class="sxs-lookup"><span data-stu-id="3ed1b-134">Returns the object at the beginning of the <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> without removing it.</span></span></summary>
        <returns><span data-ttu-id="3ed1b-135"><see cref="T:System.Workflow.Runtime.WorkflowQueue" /> の先頭にあるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3ed1b-135">The object at the beginning of the <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ed1b-136">このメソッドは <xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A> メソッドに類似していますが、<xref:System.Workflow.Runtime.WorkflowQueue.Peek%2A> は <xref:System.Workflow.Runtime.WorkflowQueue> を変更しません。</span><span class="sxs-lookup"><span data-stu-id="3ed1b-136">This method is similar to the <xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A> method, but <xref:System.Workflow.Runtime.WorkflowQueue.Peek%2A> does not modify the <xref:System.Workflow.Runtime.WorkflowQueue>.</span></span> <span data-ttu-id="3ed1b-137"><xref:System.Workflow.Runtime.WorkflowQueue.Count%2A> をチェックして、<xref:System.Workflow.Runtime.WorkflowQueue> を呼び出す前に <xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A> が空であるかどうかを確認できます。または、<xref:System.InvalidOperationException> をキャッチできます。</span><span class="sxs-lookup"><span data-stu-id="3ed1b-137">You can check <xref:System.Workflow.Runtime.WorkflowQueue.Count%2A> to determine whether the <xref:System.Workflow.Runtime.WorkflowQueue> is empty before you call <xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A>, or you can catch the <xref:System.InvalidOperationException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3ed1b-138"><see cref="T:System.Workflow.Runtime.WorkflowQueue" /> が空です。</span><span class="sxs-lookup"><span data-stu-id="3ed1b-138">The <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> is empty.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="QueueItemArrived">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; QueueItemArrived;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.ComponentModel.QueueEventArgs&gt; QueueItemArrived" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Runtime.WorkflowQueue.QueueItemArrived" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event QueueItemArrived As EventHandler(Of QueueEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::ComponentModel::QueueEventArgs ^&gt; ^ QueueItemArrived;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3ed1b-139">この <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> に項目が配信されると発生します。</span><span class="sxs-lookup"><span data-stu-id="3ed1b-139">Occurs when an item is delivered on this <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ed1b-140">このイベントは、ワークフロー インスタンスへのイベント配信と同期して行われる必要がある処理にのみ使用されます。</span><span class="sxs-lookup"><span data-stu-id="3ed1b-140">This event is only used for processing that must occur synchronously with event delivery to the workflow instance.</span></span> <span data-ttu-id="3ed1b-141">イベント ハンドラーが非ワークフロー スレッドで実行される場合があるため、共有ワークフロー オブジェクト (たとえば <xref:System.Workflow.ComponentModel.DependencyObject>) へのアクセスは保護される必要があります。</span><span class="sxs-lookup"><span data-stu-id="3ed1b-141">The event handler may execute on a non-workflow thread so access to any shared workflow object, for example, any <xref:System.Workflow.ComponentModel.DependencyObject>, must be protected.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueueItemAvailable">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; QueueItemAvailable;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.ComponentModel.QueueEventArgs&gt; QueueItemAvailable" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event QueueItemAvailable As EventHandler(Of QueueEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::ComponentModel::QueueEventArgs ^&gt; ^ QueueItemAvailable;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3ed1b-142">この <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> に使用可能な項目があると発生します。</span><span class="sxs-lookup"><span data-stu-id="3ed1b-142">Occurs when an item is available on this <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ed1b-143"><xref:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable> イベントは非同期で発生します。</span><span class="sxs-lookup"><span data-stu-id="3ed1b-143">The <xref:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable> event is raised in an asynchronous manner.</span></span> <span data-ttu-id="3ed1b-144"><xref:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable> イベントにとっての送信元は、定期受信する <xref:System.Workflow.ComponentModel.ActivityExecutionContext> の <xref:System.Workflow.ComponentModel.Activity> になります。</span><span class="sxs-lookup"><span data-stu-id="3ed1b-144">The sender for the <xref:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable> event will be the <xref:System.Workflow.ComponentModel.ActivityExecutionContext> of the subscribing <xref:System.Workflow.ComponentModel.Activity>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueueName">
      <MemberSignature Language="C#" Value="public IComparable QueueName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IComparable QueueName" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.WorkflowQueue.QueueName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property QueueName As IComparable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IComparable ^ QueueName { IComparable ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IComparable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3ed1b-145">ワークフロー キューの名前を取得します。</span><span class="sxs-lookup"><span data-stu-id="3ed1b-145">Gets the name of the workflow queue.</span></span></summary>
        <value><span data-ttu-id="3ed1b-146"><see cref="T:System.Workflow.Runtime.WorkflowQueue" /> の名前。</span><span class="sxs-lookup"><span data-stu-id="3ed1b-146">The name of the <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ed1b-147">ワークフローのキューの名前は、<xref:System.Workflow.Runtime.WorkflowQueuingService.CreateWorkflowQueue%2A> メソッドで設定されます。</span><span class="sxs-lookup"><span data-stu-id="3ed1b-147">The name of the workflow queue is set by the <xref:System.Workflow.Runtime.WorkflowQueuingService.CreateWorkflowQueue%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueuingService">
      <MemberSignature Language="C#" Value="public System.Workflow.Runtime.WorkflowQueuingService QueuingService { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.Runtime.WorkflowQueuingService QueuingService" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.WorkflowQueue.QueuingService" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property QueuingService As WorkflowQueuingService" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::Runtime::WorkflowQueuingService ^ QueuingService { System::Workflow::Runtime::WorkflowQueuingService ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.WorkflowQueuingService</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3ed1b-148">この <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> に関連付けられたキュー サービスを取得します。</span><span class="sxs-lookup"><span data-stu-id="3ed1b-148">Gets the queuing service associated with this <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span></span></summary>
        <value><span data-ttu-id="3ed1b-149">この <see cref="T:System.Workflow.Runtime.WorkflowQueuingService" /> に関連付けられたキュー サービスを表す <see cref="T:System.Workflow.Runtime.WorkflowQueue" />。</span><span class="sxs-lookup"><span data-stu-id="3ed1b-149">A <see cref="T:System.Workflow.Runtime.WorkflowQueuingService" /> that represents the queuing service associated with this <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterForQueueItemArrived">
      <MemberSignature Language="C#" Value="public void RegisterForQueueItemArrived (System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; eventListener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterForQueueItemArrived(class System.Workflow.ComponentModel.IActivityEventListener`1&lt;class System.Workflow.ComponentModel.QueueEventArgs&gt; eventListener) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowQueue.RegisterForQueueItemArrived(System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterForQueueItemArrived (eventListener As IActivityEventListener(Of QueueEventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterForQueueItemArrived(System::Workflow::ComponentModel::IActivityEventListener&lt;System::Workflow::ComponentModel::QueueEventArgs ^&gt; ^ eventListener);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventListener" Type="System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="eventListener"><span data-ttu-id="3ed1b-150"><see cref="T:System.Workflow.ComponentModel.QueueEventArgs" /> インターフェイスを実装する <see cref="T:System.Workflow.ComponentModel.IActivityEventListener`1" /> のサブスクライバー。</span><span class="sxs-lookup"><span data-stu-id="3ed1b-150">A subscriber for <see cref="T:System.Workflow.ComponentModel.QueueEventArgs" /> that implements the <see cref="T:System.Workflow.ComponentModel.IActivityEventListener`1" /> interface.</span></span></param>
        <summary><span data-ttu-id="3ed1b-151"><see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemArrived" /> イベントにサブスクライバーを登録します。</span><span class="sxs-lookup"><span data-stu-id="3ed1b-151">Registers a subscriber to the <see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemArrived" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterForQueueItemAvailable">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3ed1b-152"><see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable" /> イベントにサブスクライバーを登録します。</span><span class="sxs-lookup"><span data-stu-id="3ed1b-152">Registers a subscriber to the <see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ed1b-153">オーバーロードされた <xref:System.Workflow.Runtime.WorkflowQueue.RegisterForQueueItemAvailable%2A> メソッドを使用して、<xref:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable> イベントのサブスクライバーを登録できます。</span><span class="sxs-lookup"><span data-stu-id="3ed1b-153">You can use the overloaded <xref:System.Workflow.Runtime.WorkflowQueue.RegisterForQueueItemAvailable%2A> methods to register a subscriber for the <xref:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable> event.</span></span> <span data-ttu-id="3ed1b-154"><xref:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable> イベントは、アイテムがこの <xref:System.Workflow.Runtime.WorkflowQueue> に非同期に配信されたことをサブスクライバーに通知するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="3ed1b-154">The <xref:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable> event is used to notify subscribers that an item has been delivered (in an asynchronous manner) to this <xref:System.Workflow.Runtime.WorkflowQueue>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterForQueueItemAvailable">
      <MemberSignature Language="C#" Value="public void RegisterForQueueItemAvailable (System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; eventListener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterForQueueItemAvailable(class System.Workflow.ComponentModel.IActivityEventListener`1&lt;class System.Workflow.ComponentModel.QueueEventArgs&gt; eventListener) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowQueue.RegisterForQueueItemAvailable(System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterForQueueItemAvailable (eventListener As IActivityEventListener(Of QueueEventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterForQueueItemAvailable(System::Workflow::ComponentModel::IActivityEventListener&lt;System::Workflow::ComponentModel::QueueEventArgs ^&gt; ^ eventListener);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventListener" Type="System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="eventListener"><span data-ttu-id="3ed1b-155"><see cref="T:System.Workflow.ComponentModel.QueueEventArgs" /> インターフェイスを実装する <see cref="T:System.Workflow.ComponentModel.IActivityEventListener`1" /> のサブスクライバー。</span><span class="sxs-lookup"><span data-stu-id="3ed1b-155">A subscriber for <see cref="T:System.Workflow.ComponentModel.QueueEventArgs" /> that implements the <see cref="T:System.Workflow.ComponentModel.IActivityEventListener`1" /> interface.</span></span></param>
        <summary><span data-ttu-id="3ed1b-156"><see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable" /> イベントにサブスクライバーを登録します。</span><span class="sxs-lookup"><span data-stu-id="3ed1b-156">Registers a subscriber to the <see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3ed1b-157">次のコード例は、<xref:System.Workflow.Runtime.WorkflowQueue> メソッドを呼び出して <xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A?displayProperty=nameWithType> を作成する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="3ed1b-157">The following code example demonstrates how you can create a <xref:System.Workflow.Runtime.WorkflowQueue> by calling the <xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="3ed1b-158">また、<xref:System.Workflow.Runtime.WorkflowQueue.RegisterForQueueItemAvailable%2A> を使用して、指定されたリスナーを登録します。</span><span class="sxs-lookup"><span data-stu-id="3ed1b-158">It also uses the <xref:System.Workflow.Runtime.WorkflowQueue.RegisterForQueueItemAvailable%2A> to register the specified listener.</span></span>  
  
 <span data-ttu-id="3ed1b-159">このコード例は、FileSystemEvent.cs ファイルに含まれている、ファイル監視アクティビティの SDK サンプルの一部です。</span><span class="sxs-lookup"><span data-stu-id="3ed1b-159">This code example is part of the File Watcher Activity SDK Sample from the FileSystemEvent.cs file.</span></span> <span data-ttu-id="3ed1b-160">詳細については、次を参照してください。[ファイル システムの監視活動](http://msdn.microsoft.com/library/5442b63a-bdad-43d0-b7cf-f0b5d8b56a99)です。</span><span class="sxs-lookup"><span data-stu-id="3ed1b-160">For more information, see [File System Watcher Activity](http://msdn.microsoft.com/library/5442b63a-bdad-43d0-b7cf-f0b5d8b56a99).</span></span>  
  
 [!code-csharp[WF_Samples#225](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#225)]
 [!code-vb[WF_Samples#225](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#225)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3ed1b-161"><paramref name="eventListener" /> が null 参照 (Visual Basic の場合は <see langword="Nothing" />) です。</span><span class="sxs-lookup"><span data-stu-id="3ed1b-161"><paramref name="eventListener" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RegisterForQueueItemAvailable">
      <MemberSignature Language="C#" Value="public void RegisterForQueueItemAvailable (System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; eventListener, string subscriberQualifiedName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterForQueueItemAvailable(class System.Workflow.ComponentModel.IActivityEventListener`1&lt;class System.Workflow.ComponentModel.QueueEventArgs&gt; eventListener, string subscriberQualifiedName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowQueue.RegisterForQueueItemAvailable(System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterForQueueItemAvailable (eventListener As IActivityEventListener(Of QueueEventArgs), subscriberQualifiedName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterForQueueItemAvailable(System::Workflow::ComponentModel::IActivityEventListener&lt;System::Workflow::ComponentModel::QueueEventArgs ^&gt; ^ eventListener, System::String ^ subscriberQualifiedName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventListener" Type="System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;" />
        <Parameter Name="subscriberQualifiedName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventListener"><span data-ttu-id="3ed1b-162"><see cref="T:System.Workflow.ComponentModel.QueueEventArgs" /> インターフェイスを実装する <see cref="T:System.Workflow.ComponentModel.IActivityEventListener`1" /> のサブスクライバー。</span><span class="sxs-lookup"><span data-stu-id="3ed1b-162">A subscriber for <see cref="T:System.Workflow.ComponentModel.QueueEventArgs" /> that implements the <see cref="T:System.Workflow.ComponentModel.IActivityEventListener`1" /> interface.</span></span></param>
        <param name="subscriberQualifiedName"><span data-ttu-id="3ed1b-163"><see cref="P:System.Workflow.ComponentModel.Activity.QualifiedName" /> イベントに定期受信するアクティビティの <see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable" />、または null 参照 (Visual Basic の場合は <see langword="Nothing" />)。</span><span class="sxs-lookup"><span data-stu-id="3ed1b-163">The <see cref="P:System.Workflow.ComponentModel.Activity.QualifiedName" /> of the activity that is subscribing to the <see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable" /> event or a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></param>
        <summary><span data-ttu-id="3ed1b-164"><see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable" /> イベントにサブスクライバーを登録します。</span><span class="sxs-lookup"><span data-stu-id="3ed1b-164">Registers a subscriber to the <see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ed1b-165">定期受信するアクティビティの修飾名が `subscriberQualifiedName` で示された場合、<xref:System.Workflow.Runtime.WorkflowQueueInfo.SubscribedActivityNames%2A?displayProperty=nameWithType> が呼び出されたときに、このキューに関連付けられた <xref:System.Workflow.Runtime.WorkflowQueueInfo> の <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A?displayProperty=nameWithType> でその修飾名が返されます。</span><span class="sxs-lookup"><span data-stu-id="3ed1b-165">If the qualified name of the subscribing activity is supplied by `subscriberQualifiedName`, it is returned in <xref:System.Workflow.Runtime.WorkflowQueueInfo.SubscribedActivityNames%2A?displayProperty=nameWithType> of <xref:System.Workflow.Runtime.WorkflowQueueInfo> associated with this queue when <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A?displayProperty=nameWithType> is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3ed1b-166"><paramref name="eventListener" /> が null 参照 (<see langword="Nothing" />) です。</span><span class="sxs-lookup"><span data-stu-id="3ed1b-166"><paramref name="eventListener" /> is a null reference (<see langword="Nothing" />).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="UnregisterForQueueItemArrived">
      <MemberSignature Language="C#" Value="public void UnregisterForQueueItemArrived (System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; eventListener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnregisterForQueueItemArrived(class System.Workflow.ComponentModel.IActivityEventListener`1&lt;class System.Workflow.ComponentModel.QueueEventArgs&gt; eventListener) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowQueue.UnregisterForQueueItemArrived(System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnregisterForQueueItemArrived (eventListener As IActivityEventListener(Of QueueEventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UnregisterForQueueItemArrived(System::Workflow::ComponentModel::IActivityEventListener&lt;System::Workflow::ComponentModel::QueueEventArgs ^&gt; ^ eventListener);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventListener" Type="System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="eventListener"><span data-ttu-id="3ed1b-167"><see cref="T:System.Workflow.ComponentModel.QueueEventArgs" /> インターフェイスを実装する <see cref="T:System.Workflow.ComponentModel.IActivityEventListener`1" /> のサブスクライバー。</span><span class="sxs-lookup"><span data-stu-id="3ed1b-167">A subscriber for <see cref="T:System.Workflow.ComponentModel.QueueEventArgs" /> that implements the <see cref="T:System.Workflow.ComponentModel.IActivityEventListener`1" /> interface.</span></span></param>
        <summary><span data-ttu-id="3ed1b-168"><see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemArrived" /> イベントに登録されたサブスクライバーの登録を解除します。</span><span class="sxs-lookup"><span data-stu-id="3ed1b-168">Unregisters a subscriber to the <see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemArrived" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ed1b-169">このメソッドは、内部使用専用として予約されています。</span><span class="sxs-lookup"><span data-stu-id="3ed1b-169">This method is reserved for internal use only.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3ed1b-170"><paramref name="eventListener" /> が null 参照 (Visual Basic の場合は <see langword="Nothing" />) です。</span><span class="sxs-lookup"><span data-stu-id="3ed1b-170"><paramref name="eventListener" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="UnregisterForQueueItemAvailable">
      <MemberSignature Language="C#" Value="public void UnregisterForQueueItemAvailable (System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; eventListener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnregisterForQueueItemAvailable(class System.Workflow.ComponentModel.IActivityEventListener`1&lt;class System.Workflow.ComponentModel.QueueEventArgs&gt; eventListener) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowQueue.UnregisterForQueueItemAvailable(System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnregisterForQueueItemAvailable (eventListener As IActivityEventListener(Of QueueEventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UnregisterForQueueItemAvailable(System::Workflow::ComponentModel::IActivityEventListener&lt;System::Workflow::ComponentModel::QueueEventArgs ^&gt; ^ eventListener);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventListener" Type="System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="eventListener"><span data-ttu-id="3ed1b-171"><see cref="T:System.Workflow.ComponentModel.QueueEventArgs" /> インターフェイスを実装する <see cref="T:System.Workflow.ComponentModel.IActivityEventListener`1" /> のサブスクライバー。</span><span class="sxs-lookup"><span data-stu-id="3ed1b-171">A subscriber for <see cref="T:System.Workflow.ComponentModel.QueueEventArgs" /> that implements the <see cref="T:System.Workflow.ComponentModel.IActivityEventListener`1" /> interface.</span></span></param>
        <summary><span data-ttu-id="3ed1b-172"><see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable" /> イベントに登録されたサブスクライバーの登録を解除します。</span><span class="sxs-lookup"><span data-stu-id="3ed1b-172">Unregisters a subscriber to the <see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3ed1b-173">次のコード例は、<xref:System.Workflow.Runtime.WorkflowQueue> メソッドを呼び出して <xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A?displayProperty=nameWithType> を作成する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="3ed1b-173">The following code example demonstrates how you can create a <xref:System.Workflow.Runtime.WorkflowQueue> by calling the <xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="3ed1b-174">また、<xref:System.Workflow.Runtime.WorkflowQueue.UnregisterForQueueItemAvailable%2A> を使用して、指定されたリスナーの登録を解除します。</span><span class="sxs-lookup"><span data-stu-id="3ed1b-174">It also uses the <xref:System.Workflow.Runtime.WorkflowQueue.UnregisterForQueueItemAvailable%2A> to unregister the specified listener.</span></span>  
  
 <span data-ttu-id="3ed1b-175">このコード例は、FileSystemEvent.cs ファイルに含まれている、ファイル監視アクティビティの SDK サンプルの一部です。</span><span class="sxs-lookup"><span data-stu-id="3ed1b-175">This code example is part of the File Watcher Activity SDK Sample from the FileSystemEvent.cs file.</span></span> <span data-ttu-id="3ed1b-176">詳細については、次を参照してください。[ファイル システムの監視活動](http://msdn.microsoft.com/library/5442b63a-bdad-43d0-b7cf-f0b5d8b56a99)です。</span><span class="sxs-lookup"><span data-stu-id="3ed1b-176">For more information, see [File System Watcher Activity](http://msdn.microsoft.com/library/5442b63a-bdad-43d0-b7cf-f0b5d8b56a99).</span></span>  
  
 [!code-csharp[WF_Samples#226](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#226)]
 [!code-vb[WF_Samples#226](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#226)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3ed1b-177"><paramref name="eventListener" /> が null 参照 (Visual Basic の場合は <see langword="Nothing" />) です。</span><span class="sxs-lookup"><span data-stu-id="3ed1b-177"><paramref name="eventListener" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>