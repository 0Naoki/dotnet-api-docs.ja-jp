<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="WorkflowInstance.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5181673212b57e524c54cc9851648ca01d7c1e21c.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">181673212b57e524c54cc9851648ca01d7c1e21c</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Workflow.Runtime.WorkflowInstance">
          <source>Represents a workflow instance.</source>
          <target state="translated">ワークフロー インスタンスを表します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowInstance">
          <source>The <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> class exposes methods and properties that can be used to control the execution of a workflow instance; it is essentially a proxy to the actual workflow instance used by the workflow runtime engine.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> クラスは、ワークフロー インスタンスの実行の制御に使用できるメソッドおよびプロパティを公開します。本質的には、ワークフロー ランタイム エンジンが使用する実際のワークフロー インスタンスのプロキシです。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowInstance">
          <source>A host or a service can instruct the workflow runtime engine to perform actions on a workflow instance by calling the appropriate methods that are contained in the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> class.</source>
          <target state="translated">ホストまたはサービスは、<ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> クラスに含まれる適切なメソッドを呼び出すことによって、ワークフロー インスタンスに関するアクションの実行をワークフロー ランタイム エンジンに指示することができます。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowInstance">
          <source>If the requested action is not valid, for example, if the host calls <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Load%2A&gt;</ph> on a workflow instance that has already completed, the workflow runtime engine will raise an appropriate exception.</source>
          <target state="translated">要求されたアクションが無効だった場合、たとえば既に完成しているワークフロー インスタンスについて <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Load%2A&gt;</ph> をホストが呼び出した場合は、該当する例外が発生します。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowInstance">
          <source>If a workflow instance becomes unresponsive because a call on the host application does not return, the only way to recover the instance is to restart the runtime.</source>
          <target state="translated">ホスト アプリケーションでの呼び出しが返されないためにワークフロー インスタンスが応答しなくなった場合、このインスタンスを回復するための方法は、ランタイムを再起動する以外にありません。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowInstance">
          <source>However, if the instance has been forcibly unloaded, aborted, or suspended, it can be continued by calling the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Resume%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">ただし、インスタンスが強制的にアンロード、中止、または中断された場合は、<ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Resume%2A?displayProperty=nameWithType&gt;</ph> メソッドを呼び出すことによってインスタンスを継続することができます。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowInstance">
          <source>The following code example demonstrates how you can create and start a <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> in a workflow host.</source>
          <target state="translated">次のコード例は、ワークフロー ホストで <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> を作成および開始する方法を示しています。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowInstance">
          <source>The code creates an instance of the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>, adds services to the runtime, and then demonstrates the recommended way to create a <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> object.</source>
          <target state="translated">このコードでは、<ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> のインスタンスを作成してサービスをランタイムに追加し、推奨される <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> オブジェクトの作成方法を示します。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowInstance">
          <source>The code initializes <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> by calling the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A&gt;</ph> method and passing the previously created type to it.</source>
          <target state="translated">このコードは <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> メソッドを呼び出し、既に作成されている型をそれに渡すことによって、<ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A&gt;</ph> を初期化します。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowInstance">
          <source>The <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> is started with the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Start%2A&gt;</ph> method call.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> は、<ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Start%2A&gt;</ph> メソッドの呼び出しによって起動されます。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowInstance">
          <source>This code example is part of the Canceling a Workflow SDK sample from the Program.cs file.</source>
          <target state="translated">このコード例は、Program.cs ファイルに含まれている、ワークフローのキャンセルを示す SDK サンプルの一部です。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowInstance">
          <source>For more information, see <bpt id="p1">[</bpt>Canceling a Workflow<ept id="p1">](http://msdn.microsoft.com/library/d5077f56-a78b-48e7-825c-f6c77c8e54fb)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>のワークフローの取り消し<ept id="p1">](http://msdn.microsoft.com/library/d5077f56-a78b-48e7-825c-f6c77c8e54fb)</ept>です。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowInstance">
          <source>This type is thread safe.</source>
          <target state="translated">この型はスレッド セーフです。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.Abort">
          <source>Aborts the workflow instance.</source>
          <target state="translated">ワークフロー インスタンスを中止します。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Abort">
          <source>The workflow instance is aborted in a synchronous manner; that is, the method returns after the workflow instance has been aborted.</source>
          <target state="translated">ワークフロー インスタンスは同期式で中止されます。つまり、メソッドはワークフロー インスタンスが中止された後に返されます。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Abort">
          <source>The workflow runtime engine invalidates the workflow instance in memory and clears the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A&gt;</ph>.</source>
          <target state="translated">ワークフロー ランタイム エンジンはメモリ内のワークフロー インスタンスを無効にし、<ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A&gt;</ph> をクリアします。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Abort">
          <source>If a persistence service was used by your workflow instance, all work performed since the last persistence point is thrown away.</source>
          <target state="translated">ワークフロー インスタンスが永続性サービスを使用していた場合、最後の永続性ポイント以降に実行された作業はすべて破棄されます。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Abort">
          <source>After it aborts the workflow instance, the workflow runtime engine raises the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted&gt;</ph> event.</source>
          <target state="translated">ワークフロー インスタンスが中止されると、ワークフロー ランタイム エンジンは <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted&gt;</ph> イベントを発生させます。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Abort">
          <source>You can call <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A&gt;</ph> to reload the workflow instance and start from its last persistence point.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A&gt;</ph> を呼び出すことにより、ワークフロー インスタンスを再度読み込んで、その最後の永続性ポイントから開始することができます。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Abort">
          <source><ph id="ph1">`Abort`</ph> is different from <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A&gt;</ph> in that while <ph id="ph3">`Abort`</ph> simply clears the in-memory workflow instance and can be restarted from the last persistence point, Terminate clears the in-memory workflow instance and informs the persistence service that the instance has been cleared from memory.</source>
          <target state="translated"><ph id="ph1">`Abort`</ph> は <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A&gt;</ph> と次の点で異なります。<ph id="ph3">`Abort`</ph> はメモリ内のワークフロー インスタンスをクリアするだけで、最後の永続性ポイントからワークフロー インスタンスを再開できます。Terminate はメモリ内のワークフロー インスタンスをクリアし、インスタンスがメモリからクリアされたことを永続性サービスに通知します。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Abort">
          <source>For the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService&gt;</ph>, this means that all state information for that workflow instance is deleted from the database upon termination.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService&gt;</ph> の場合、これは、終了時にそのワークフロー インスタンスのすべての状態情報がデータベースから削除されることを意味します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Abort">
          <source>You will not be able to reload the workflow instance from a previously stored persistence point.</source>
          <target state="translated">既に保存されている永続性ポイントからワークフロー インスタンスを再度読み込むことはできません。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Abort">
          <source>The following example demonstrates calling Abort on a workflow instance of type Workflow1.</source>
          <target state="translated">Workflow1 型のワークフロー インスタンスに対する Abort を呼び出す例を次に示します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.Abort">
          <source>The workflow runtime engine is not running.</source>
          <target state="translated">ワークフロー ランタイム エンジンが実行されていません。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.WorkflowChanges" /&gt;</ph> specifying dynamic updates for the workflow instance.</source>
          <target state="translated">ワークフロー インスタンスの動的更新の内容を指定する <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.WorkflowChanges" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)">
          <source>Applies changes to the workflow instance specified by the <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.WorkflowChanges" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.WorkflowChanges" /&gt;</ph> オブジェクトで指定された変更をワークフロー インスタンスに適用します。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)">
          <source>If the workflow instance is not already suspended, the workflow runtime engine temporarily suspends the instance before applying the changes.</source>
          <target state="translated">ワークフロー インスタンスがまだ中断していない場合、ワークフロー ランタイム エンジンはインスタンスを一時的に中断してから変更を適用します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)">
          <source>The following example demonstrates calling ApplyWorkflowChanges to a <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> オブジェクトの ApplyWorkflowChanges を呼び出す方法を次のコード例に示します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)">
          <source>This example is from the Ordering State Machine SDK sample, from the Mainform.cs file.</source>
          <target state="translated">この例は、Mainform.cs ファイルに含まれている注文処理ステート マシンの SDK サンプルです。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)">
          <source>For more information, see the <bpt id="p1">[</bpt>Ordering State Machine Sample<ept id="p1">](http://msdn.microsoft.com/library/59272cf4-bc98-439c-bcfa-b66999ebce5c)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。、 <bpt id="p1">[</bpt>Ordering 状態マシン サンプル<ept id="p1">](http://msdn.microsoft.com/library/59272cf4-bc98-439c-bcfa-b66999ebce5c)</ept>です。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)">
          <source>The workflow runtime engine is not running.</source>
          <target state="translated">ワークフロー ランタイム エンジンが実行されていません。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>The name of the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueue" /&gt;</ph> の名前。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>The object to enqueue.</source>
          <target state="translated">キューに登録するオブジェクト。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.IPendingWork" /&gt;</ph> that allows the sender to be notified when <bpt id="p1">&lt;c&gt;</bpt>item<ept id="p1">&lt;/c&gt;</ept> is delivered.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>item<ept id="p1">&lt;/c&gt;</ept> が配信されたときに送信者が通知を受けられるようにする <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.IPendingWork" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>An object to be passed to the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.IPendingWork" /&gt;</ph> methods.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.IPendingWork" /&gt;</ph> メソッドに渡すオブジェクト。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>Posts a message to the specified workflow queue synchronously.</source>
          <target state="translated">指定したワークフロー キューへのメッセージの同期ポストを行います。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>Sends the <ph id="ph1">`item`</ph> to the specified <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowQueue&gt;</ph>.</source>
          <target state="translated">指定した <ph id="ph1">`item`</ph> に <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowQueue&gt;</ph> を送信します。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>If you want to be notified when the message is delivered, you can implement <ph id="ph1">&lt;xref:System.Workflow.Runtime.IPendingWork&gt;</ph> in your service and pass a <ph id="ph2">`workItem`</ph> and an <ph id="ph3">&lt;xref:System.Workflow.Runtime.IPendingWork&gt;</ph> object to <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A&gt;</ph>.</source>
          <target state="translated">メッセージが配信されたときに通知を受けるには、サービスに <ph id="ph1">&lt;xref:System.Workflow.Runtime.IPendingWork&gt;</ph> を実装して、<ph id="ph2">`workItem`</ph> および <ph id="ph3">&lt;xref:System.Workflow.Runtime.IPendingWork&gt;</ph> オブジェクトを <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A&gt;</ph> に渡します。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>If you do not want such notification, you can pass a null reference (<ph id="ph1">`Nothing`</ph> in Visual Basic) for <ph id="ph2">`pendingWork`</ph> and <ph id="ph3">`workItem`</ph>.</source>
          <target state="translated">そのような通知が不要な場合は、<ph id="ph1">`Nothing`</ph> と <ph id="ph2">`pendingWork`</ph> に null 参照 (Visual Basic の場合は <ph id="ph3">`workItem`</ph>) を渡します。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>When using this method with a state machine workflow, you might get an exception with the message "Queue '{0}' is not enabled."</source>
          <target state="translated">このメソッドをステート マシン ワークフローで使用すると、"キュー '{0}' は有効ではありません" というメッセージを持つ例外が発生する場合があります。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>This happens when the current state of the state machine does not know how to handle a specific event.</source>
          <target state="translated">これは、ステート マシンの現在の状態では特定のイベントの処理方法を識別できないときに起こります。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>For example, when some state other than the current state contains the <ph id="ph1">&lt;xref:System.Workflow.Activities.EventDrivenActivity&gt;</ph> that contains the <ph id="ph2">&lt;xref:System.Workflow.Activities.HandleExternalEventActivity&gt;</ph> that is represented by the queue '{0}'.</source>
          <target state="translated">たとえば、現在の状態以外の状態に、キュー '{0}' で表現される <ph id="ph1">&lt;xref:System.Workflow.Activities.EventDrivenActivity&gt;</ph> を含む <ph id="ph2">&lt;xref:System.Workflow.Activities.HandleExternalEventActivity&gt;</ph> が含まれている場合です。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>Messages are not guaranteed to be received by the workflow instance in the order that they were sent.</source>
          <target state="translated">メッセージは、送信された順序でワークフロー インスタンスで受信されるとは限りません。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>For example, if receiving a message in an existing queue (Queue A) causes a workflow to create another queue (Queue B), which then listens for another message sent after the first message, it is possible that the second message will arrive first, and will not be received due to its queue not being created yet.</source>
          <target state="translated">たとえば、既存のキュー (キュー A) でメッセージを受信し、ワークフローによって別のキュー (キュー B) が生成され、最初のメッセージの後に送信された別のメッセージをリッスンする場合は、2 番目のメッセージが最初に届き、キューがまだ作成されていないために受信されない場合があります。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>To prevent this issue, the second message should not be sent until the presence of the second queue is verified (using <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A&gt;</ph>.)</source>
          <target state="translated">この問題を回避するには、<ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A&gt;</ph> を使用して、2 番目のキューが存在することを確認するまで、2 番目のメッセージを送信しないようにする必要があります。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>The following code example demonstrates how to use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A&gt;</ph> を使用する方法を次のコード例に示します。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>When the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled&gt;</ph> event occurs, the <ph id="ph2">`OnWorkflowIdled`</ph> method defined in this example is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled&gt;</ph> イベントが発生すると、この例で定義されている <ph id="ph2">`OnWorkflowIdled`</ph> メソッドが呼び出されます。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>It determines which workflow is idled using the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs.WorkflowInstance%2A&gt;</ph> property and then gets a collection of queued items for the workflow instance by calling the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A&gt;</ph> method.</source>
          <target state="translated">このメソッドは、<ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs.WorkflowInstance%2A&gt;</ph> プロパティを使用してアイドル状態のワークフローを特定し、<ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A&gt;</ph> メソッドを呼び出してキューに登録されているワークフロー インスタンスの項目のコレクションを取得します。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>The code iterates over the collection to determine which activity is waiting for the event that idled the workflow.</source>
          <target state="translated">コードはコレクション全体を取得するまで繰り返され、ワークフローをアイドル状態にしたイベントを待機しているアクティビティを特定します。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>It then sends an exception to the workflow queue using the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A&gt;</ph> method along with the name of the event queue item.</source>
          <target state="translated">その後、<ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A&gt;</ph> メソッドとイベント キュー アイテムの名前を使用して、ワークフロー キューに例外を送信します。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>This code example is part of the Canceling a Workflow SDK sample from the Program.cs file.</source>
          <target state="translated">このコード例は、Program.cs ファイルに含まれている、ワークフローのキャンセルを示す SDK サンプルの一部です。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>For more information, see <bpt id="p1">[</bpt>Canceling a Workflow<ept id="p1">](http://msdn.microsoft.com/library/d5077f56-a78b-48e7-825c-f6c77c8e54fb)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>のワークフローの取り消し<ept id="p1">](http://msdn.microsoft.com/library/d5077f56-a78b-48e7-825c-f6c77c8e54fb)</ept>です。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source><ph id="ph1">&lt;paramref name="queueName" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="queueName" /&gt;</ph> が null 参照 (Visual Basic の場合は <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>) です。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>The workflow runtime engine is not running.</source>
          <target state="translated">ワークフロー ランタイム エンジンが実行されていません。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueue" /&gt;</ph> specified by <ph id="ph2">&lt;paramref name="queueName" /&gt;</ph> does not exist.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueue" /&gt;</ph> で指定された <ph id="ph2">&lt;paramref name="queueName" /&gt;</ph> が存在しません。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueue" /&gt;</ph> specified by <ph id="ph2">&lt;paramref name="queueName" /&gt;</ph> is not enabled.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueue" /&gt;</ph> で指定された <ph id="ph2">&lt;paramref name="queueName" /&gt;</ph> が無効になっています。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>The name of the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueue" /&gt;</ph> の名前。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>The object to enqueue.</source>
          <target state="translated">キューに登録するオブジェクト。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.IPendingWork" /&gt;</ph> that allows the sender to be notified when <bpt id="p1">&lt;c&gt;</bpt>item<ept id="p1">&lt;/c&gt;</ept> is delivered.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>item<ept id="p1">&lt;/c&gt;</ept> が配信されたときに送信者が通知を受けられるようにする <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.IPendingWork" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>An object to be passed to the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.IPendingWork" /&gt;</ph> methods.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.IPendingWork" /&gt;</ph> メソッドに渡すオブジェクト。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>Posts a message to the specified workflow queue when the workflow is idle.</source>
          <target state="translated">ワークフローがアイドル状態のときに、指定したワークフロー キューにメッセージをポストします。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source><ph id="ph1">&lt;see cref="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)" /&gt;</ph> waits until the workflow reaches an idle point and enqueues after verifying that the workflow scheduler is idle (that is, no active operation is being executed).</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)" /&gt;</ph> は、ワークフローがアイドル ポイントに達するまで待機し、ワークフロー スケジューラがアイドル状態である (つまりアクティブな操作が実行されていない) ことを確認した後にキューに登録します。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>Waits for the workflow instance to become idle and then sends the <ph id="ph1">`item`</ph> to the specified <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowQueue&gt;</ph>.</source>
          <target state="translated">ワークフロー インスタンスがアイドル状態になるまで待機してから、指定した <ph id="ph1">`item`</ph> に <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowQueue&gt;</ph> を送信します。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>If you call <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle%2A&gt;</ph> while the workflow instance is suspended, the workflow runtime engine will throw an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">ワークフロー インスタンスが中断状態のときに <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle%2A&gt;</ph> を呼び出すと、ワークフロー ランタイム エンジンは <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> をスローします。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>If you want to be notified when the message is delivered, you can implement <ph id="ph1">&lt;xref:System.Workflow.Runtime.IPendingWork&gt;</ph> in your service and pass a <ph id="ph2">`workItem`</ph> and an <ph id="ph3">&lt;xref:System.Workflow.Runtime.IPendingWork&gt;</ph> object to <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A&gt;</ph>.</source>
          <target state="translated">メッセージが配信されたときに通知を受けるには、サービスに <ph id="ph1">&lt;xref:System.Workflow.Runtime.IPendingWork&gt;</ph> を実装して、<ph id="ph2">`workItem`</ph> および <ph id="ph3">&lt;xref:System.Workflow.Runtime.IPendingWork&gt;</ph> オブジェクトを <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A&gt;</ph> に渡します。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>If you do not want such notification, you can pass a null reference (<ph id="ph1">`Nothing`</ph> in Visual Basic) for <ph id="ph2">`pendingWork`</ph> and <ph id="ph3">`workItem`</ph>.</source>
          <target state="translated">そのような通知が不要な場合は、<ph id="ph1">`Nothing`</ph> と <ph id="ph2">`pendingWork`</ph> に null 参照 (Visual Basic の場合は <ph id="ph3">`workItem`</ph>) を渡します。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>When you are using this method with a state machine workflow, you might get an exception that contains the message "Queue '{0}' is not enabled."</source>
          <target state="translated">このメソッドをステート マシン ワークフローで使用すると、"キュー '{0}' は有効ではありません" というメッセージを含む例外が発生する場合があります。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>This occurs when the current state of the state machine does not know how to handle a specific event.</source>
          <target state="translated">これは、ステート マシンの現在の状態では特定のイベントの処理方法を識別できないときに起こります。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>For example, when some state other than the current state contains the <ph id="ph1">&lt;xref:System.Workflow.Activities.EventDrivenActivity&gt;</ph> that contains the <ph id="ph2">&lt;xref:System.Workflow.Activities.HandleExternalEventActivity&gt;</ph> that is represented by the queue '{0}'.</source>
          <target state="translated">たとえば、現在の状態以外の状態に、キュー '{0}' で表現される <ph id="ph1">&lt;xref:System.Workflow.Activities.EventDrivenActivity&gt;</ph> を含む <ph id="ph2">&lt;xref:System.Workflow.Activities.HandleExternalEventActivity&gt;</ph> が含まれている場合です。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>The following example demonstrates sending information to a workflow instance using the <ph id="ph1">`EnqueueItemOnIdle`</ph> method.</source>
          <target state="translated">次の例は、<ph id="ph1">`EnqueueItemOnIdle`</ph> メソッドを使用してワークフロー インスタンスに情報を送信する方法を示しています。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>First, a WorkflowInstance object is created and started; next, an object that implements the <ph id="ph1">&lt;xref:System.Workflow.Runtime.IPendingWork&gt;</ph> interface is created.</source>
          <target state="translated">最初に WorkflowInstance オブジェクトが作成されて開始されます。次に <ph id="ph1">&lt;xref:System.Workflow.Runtime.IPendingWork&gt;</ph> インターフェイスを実装するオブジェクトが作成されます。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source><ph id="ph1">`EnqueueItemOnIdle`</ph> is then called, passing in string values for the queue name, the enqueued item, and the work item to be passed to the methods of the pendingWork object.</source>
          <target state="translated"><ph id="ph1">`EnqueueItemOnIdle`</ph> 呼び出されます、キュー名、エンキューされた項目および pendingWork オブジェクトのメソッドに渡される作業項目の文字列値で渡すことです。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source><ph id="ph1">&lt;paramref name="queueName" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="queueName" /&gt;</ph> が null 参照 (Visual Basic の場合は <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>) です。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>The workflow runtime engine is not running.</source>
          <target state="translated">ワークフロー ランタイム エンジンが実行されていません。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>The workflow instance is suspended.</source>
          <target state="translated">ワークフロー インスタンスが中断されています。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueue" /&gt;</ph> specified by <ph id="ph2">&lt;paramref name="queueName" /&gt;</ph> does not exist.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueue" /&gt;</ph> で指定された <ph id="ph2">&lt;paramref name="queueName" /&gt;</ph> が存在しません。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueue" /&gt;</ph> specified by <ph id="ph2">&lt;paramref name="queueName" /&gt;</ph> is not enabled.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueue" /&gt;</ph> で指定された <ph id="ph2">&lt;paramref name="queueName" /&gt;</ph> が無効になっています。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.Equals(System.Object)">
          <source>The object to compare.</source>
          <target state="translated">比較対象のオブジェクト。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.Equals(System.Object)">
          <source>Returns a value that indicates whether the specified object is equal to the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowInstance" /&gt;</ph>.</source>
          <target state="translated">指定したオブジェクトが <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowInstance" /&gt;</ph> と等しいかどうかを示す値を返します。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified object is equal to this <ph id="ph2">&lt;see cref="T:System.Workflow.Runtime.WorkflowInstance" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">指定したオブジェクトがこの <ph id="ph1">&lt;see langword="true" /&gt;</ph> に等しい場合は <ph id="ph2">&lt;see cref="T:System.Workflow.Runtime.WorkflowInstance" /&gt;</ph>。それ以外の場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Equals(System.Object)">
          <source>The object must be an instance of the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> class and have the same <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A&gt;</ph> as this <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph>.</source>
          <target state="translated">オブジェクトは、<ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> クラスのインスタンスで、この <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A&gt;</ph> と同じ <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> を持っている必要があります。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.GetHashCode">
          <source>Returns the hash code for this workflow instance.</source>
          <target state="translated">ワークフロー インスタンスのハッシュ コードを返します。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.GetHashCode">
          <source>The hash code for this <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowInstance" /&gt;</ph>.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowInstance" /&gt;</ph> のハッシュ コード。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.GetHashCode">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.GetHashCode%2A&gt;</ph> returns a hash code based on the value of <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.GetHashCode%2A&gt;</ph> は、<ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A&gt;</ph> の値に基づいて計算されたハッシュ コードを返します。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowDefinition">
          <source>Retrieves the root activity for this workflow instance.</source>
          <target state="translated">このワークフロー インスタンスのルート アクティビティを取得します。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowDefinition">
          <source>An <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Activity" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Activity" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowDefinition">
          <source>You can use the root activity to navigate the activity hierarchy of the workflow.</source>
          <target state="translated">ルート アクティビティを使用して、ワークフローのアクティビティ階層を移動できます。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowDefinition">
          <source>This method is not thread safe, so the host should synchronize its calls to this method.</source>
          <target state="translated">このメソッドはスレッド セーフではないため、ホストはこのメソッドの呼び出しを同期させる必要があります。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowDefinition">
          <source>The following example demonstrates retrieving the workflow definition from a workflow instance.</source>
          <target state="translated">ワークフロー インスタンスからワークフロー定義を取得する例を次に示します。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowDefinition">
          <source>This example is from the Ordering State Machine SDK sample, from the Mainform.cs file.</source>
          <target state="translated">この例は、Mainform.cs ファイルに含まれている注文処理ステート マシンの SDK サンプルです。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowDefinition">
          <source>For more information, see the <bpt id="p1">[</bpt>Ordering State Machine Sample<ept id="p1">](http://msdn.microsoft.com/library/59272cf4-bc98-439c-bcfa-b66999ebce5c)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。、 <bpt id="p1">[</bpt>Ordering 状態マシン サンプル<ept id="p1">](http://msdn.microsoft.com/library/59272cf4-bc98-439c-bcfa-b66999ebce5c)</ept>です。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowNextTimerExpiration">
          <source>Returns the next point in time that this <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowInstance" /&gt;</ph> is scheduled to be delivered a timer message.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowInstance" /&gt;</ph> にタイマー メッセージが配信されるようスケジュールされている次の特定時点を返します。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowNextTimerExpiration">
          <source>A DateTime value that represents the next <ph id="ph1">&lt;see cref="P:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt" /&gt;</ph> time this <ph id="ph2">&lt;see cref="T:System.Workflow.Runtime.WorkflowInstance" /&gt;</ph> will be delivered a timer message.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="P:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt" /&gt;</ph> にタイマー メッセージが配信される次の <ph id="ph2">&lt;see cref="T:System.Workflow.Runtime.WorkflowInstance" /&gt;</ph> 時刻を表す DateTime 値。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowNextTimerExpiration">
          <source>The following example demonstrates using the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowNextTimerExpiration%2A&gt;</ph> method to determine if more workflow timer messages are enqueued.</source>
          <target state="translated">次の例は、<ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowNextTimerExpiration%2A&gt;</ph> メソッドを使用してワークフロー タイマー メッセージがさらにキューに登録されるかどうかを判断する方法を示しています。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowNextTimerExpiration">
          <source>This example is from the WorkflowThreading SDK sample, from the Program.cs file.</source>
          <target state="translated">この例は、Program.cs ファイルに含まれているワークフローのスレッド処理の SDK サンプルです。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowNextTimerExpiration">
          <source>For more information, see <bpt id="p1">[</bpt>Workflow Threading Sample<ept id="p1">](http://msdn.microsoft.com/library/5b650be7-09fa-47db-a2f6-523dc8ea5ee9)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>ワークフロー スレッド処理サンプル<ept id="p1">](http://msdn.microsoft.com/library/5b650be7-09fa-47db-a2f6-523dc8ea5ee9)</ept>です。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData">
          <source>Gets a collection of <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueueInfo" /&gt;</ph> objects that contains the pending items and subscribed activities for the workflow queues associated with this workflow instance.</source>
          <target state="translated">このワークフロー インスタンスに関連付けられたワークフロー キューでの保留中の項目および定期受信されたアクティビティを格納した、<ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueueInfo" /&gt;</ph> オブジェクトのコレクションを取得します。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueueInfo" /&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> オブジェクトの <ph id="ph2">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueueInfo" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A&gt;</ph> returns a collection of <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowQueueInfo&gt;</ph> objects, each of which contains information about the state of one of the workflow queues associated with this workflow instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A&gt;</ph> は、<ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowQueueInfo&gt;</ph> オブジェクトのコレクションを返します。各オブジェクトはこのワークフロー インスタンスに関連付けられたワークフロー キューのうちの 1 つに対応し、その状態に関する情報を格納します。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowQueueInfo.Items%2A?displayProperty=nameWithType&gt;</ph> contains the pending items for a <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowQueue&gt;</ph> and <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowQueueInfo.SubscribedActivityNames%2A?displayProperty=nameWithType&gt;</ph> contains a list of the activities that are subscribed for item delivery on a <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowQueue&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowQueueInfo.Items%2A?displayProperty=nameWithType&gt;</ph> は <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowQueue&gt;</ph> での保留中の項目を格納し、<ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowQueueInfo.SubscribedActivityNames%2A?displayProperty=nameWithType&gt;</ph> は <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowQueue&gt;</ph> での項目配信のために定期受信されたアクティビティのリストを格納します。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData">
          <source>The following code example demonstrates how you can use the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A&gt;</ph> method to obtain information about the state of all workflow queues associated with a <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> object.</source>
          <target state="translated">次のコード例は、<ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A&gt;</ph> メソッドを使用して、<ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> オブジェクトに関連付けられたすべてのワークフロー キューの状態に関する情報を取得する方法を示しています。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData">
          <source>When the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled&gt;</ph> event occurs, the <ph id="ph2">`OnWorkflowIdled`</ph> method defined in this example is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled&gt;</ph> イベントが発生すると、この例で定義されている <ph id="ph2">`OnWorkflowIdled`</ph> メソッドが呼び出されます。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData">
          <source>It determines which workflow is idled using the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs.WorkflowInstance%2A&gt;</ph> property and then gets a collection of queued items for the workflow instance by calling the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A&gt;</ph> method.</source>
          <target state="translated">このメソッドは、<ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs.WorkflowInstance%2A&gt;</ph> プロパティを使用してアイドル状態のワークフローを特定し、<ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A&gt;</ph> メソッドを呼び出してキューに登録されているワークフロー インスタンスの項目のコレクションを取得します。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData">
          <source>The code iterates over the collection to determine which activity is waiting for the event that idled the workflow.</source>
          <target state="translated">コードはコレクション全体を取得するまで繰り返され、ワークフローをアイドル状態にしたイベントを待機しているアクティビティを特定します。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData">
          <source>It then sends an exception to the workflow queue using the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A&gt;</ph> method along with the name of the event queue item.</source>
          <target state="translated">その後、<ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A&gt;</ph> メソッドとイベント キュー アイテムの名前を使用して、ワークフロー キューに例外を送信します。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData">
          <source>This code example is part of the Canceling a Workflow SDK sample from the Program.cs file.</source>
          <target state="translated">このコード例は、Program.cs ファイルに含まれている、ワークフローのキャンセルを示す SDK サンプルの一部です。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData">
          <source>For more information, see <bpt id="p1">[</bpt>Canceling a Workflow<ept id="p1">](http://msdn.microsoft.com/library/d5077f56-a78b-48e7-825c-f6c77c8e54fb)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>のワークフローの取り消し<ept id="p1">](http://msdn.microsoft.com/library/d5077f56-a78b-48e7-825c-f6c77c8e54fb)</ept>です。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData">
          <source>The workflow runtime engine is not running.</source>
          <target state="translated">ワークフロー ランタイム エンジンが実行されていません。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="P:System.Workflow.Runtime.WorkflowInstance.InstanceId">
          <source>Gets the unique identifier for the workflow instance.</source>
          <target state="translated">ワークフロー インスタンスの一意の識別子を取得します。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowInstance.InstanceId">
          <source>The <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> of the workflow instance.</source>
          <target state="translated">ワークフロー インスタンスの <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowInstance.InstanceId">
          <source>You can use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A&gt;</ph> to reference the workflow instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A&gt;</ph> を使用して、ワークフロー インスタンスを参照できます。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowInstance.InstanceId">
          <source>The following code example demonstrates how you can use the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A&gt;</ph> property to obtain information about a <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A&gt;</ph> プロパティを使用して <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> オブジェクトに関する情報を取得する方法を、次のコード例に示します。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowInstance.InstanceId">
          <source>The first code snippet creates a <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> variable named <ph id="ph2">`instanceId`</ph>.</source>
          <target state="translated">最初のコード スニペットは、<ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> という名前の <ph id="ph2">`instanceId`</ph> 変数を作成します。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowInstance.InstanceId">
          <source>The second snippet uses the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A&gt;</ph> property as the first object in an <ph id="ph2">`OrderEventArgs`</ph> constructor call when the <ph id="ph3">`CallBackForApproval`</ph> method is called.</source>
          <target state="translated">2 番目のスニペットは、<ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A&gt;</ph> メソッドが呼び出されると、<ph id="ph2">`OrderEventArgs`</ph> コンストラクター呼び出しの最初のオブジェクトとして <ph id="ph3">`CallBackForApproval`</ph> プロパティを使用します。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowInstance.InstanceId">
          <source>This code example is part of the Listen SDK Sample from the OrderServiceImple.cs file.</source>
          <target state="translated">このコード例は、OrderServiceImple.cs ファイルから抜粋した Listen SDK サンプルの一部です。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowInstance.InstanceId">
          <source>For more information, see <bpt id="p1">[</bpt>Listen Sample<ept id="p1">](http://msdn.microsoft.com/library/1cec0e82-7544-429f-b717-0fc25eb42b7f)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>リッスン サンプル<ept id="p1">](http://msdn.microsoft.com/library/1cec0e82-7544-429f-b717-0fc25eb42b7f)</ept>です。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.Load">
          <source>Loads a previously unloaded workflow instance.</source>
          <target state="translated">以前にアンロードされたワークフロー インスタンスを読み込みます。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Load">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Load%2A&gt;</ph> is synchronous; if the workflow instance can be loaded, <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Load%2A&gt;</ph> will return after the workflow instance has been loaded into memory and scheduled by the workflow runtime engine.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Load%2A&gt;</ph> は同期式です。ワークフロー インスタンスを読み込める場合、<ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Load%2A&gt;</ph> は、ワークフロー インスタンスがメモリに読み込まれてワークフロー ランタイム エンジンによってスケジュールされた後に返されます。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Load">
          <source>The runtime raises the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded&gt;</ph> event after the persistence service has restored the workflow instance in memory, but before the workflow runtime engine schedules the instance.</source>
          <target state="translated">ランタイムが <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded&gt;</ph> イベントを発生させるタイミングは、永続性サービスがワークフロー インスタンスをメモリに復元し終えてからワークフロー ランタイム エンジンがインスタンスをスケジュールし始めるまでの間です。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Load">
          <source>The following example demonstrates how to load a previously unloaded <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> object.</source>
          <target state="translated">以前にアンロードされた <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> オブジェクトを読み込む方法を次の例に示します。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.Load">
          <source>The workflow runtime engine is not running.</source>
          <target state="translated">ワークフロー ランタイム エンジンが実行されていません。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.ReloadTrackingProfiles">
          <source>Reload the tracking profiles for this workflow instance.</source>
          <target state="translated">このワークフロー インスタンスの追跡プロファイルを再度読み込みます。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.ReloadTrackingProfiles">
          <source>The runtime tracking infrastructure will reload each <ph id="ph1">&lt;xref:System.Workflow.Runtime.Tracking.TrackingProfile&gt;</ph> for this workflow instance associated with its tracking channels.</source>
          <target state="translated">ランタイム追跡インフラストラクチャは、このワークフロー インスタンスの追跡チャネルに関連付けられた各 <ph id="ph1">&lt;xref:System.Workflow.Runtime.Tracking.TrackingProfile&gt;</ph> を再度読み込みます。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.ReloadTrackingProfiles">
          <source>If it is not already in a suspended state, the workflow is temporarily suspended by the runtime tracking infrastructure while the tracking profiles are reloaded.</source>
          <target state="translated">ワークフロー インスタンスがまだ中断状態になっていない場合、ワークフローは、追跡プロファイルが再度読み込まれる間、ランタイム追跡インフラストラクチャによって一時的に中断させられます。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.ReloadTrackingProfiles">
          <source>The workflow runtime engine is not running.</source>
          <target state="translated">ワークフロー ランタイム エンジンが実行されていません。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.Resume">
          <source>Resumes execution of a previously suspended workflow instance.</source>
          <target state="translated">中断状態になっているワークフロー インスタンスの実行を再開します。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Resume">
          <source>The host can call <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Resume%2A&gt;</ph> to resume execution of a workflow instance that has been previously suspended.</source>
          <target state="translated">ホストは <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Resume%2A&gt;</ph> を呼び出して、中断された状態のワークフロー インスタンスの実行を再開できます。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Resume">
          <source>If the workflow instance is not in the suspended state, no action is taken.</source>
          <target state="translated">ワークフロー インスタンスが中断状態になっていない場合、アクションは実行されません。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Resume">
          <source>The runtime raises the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed&gt;</ph> event just before execution of the workflow instance is resumed.</source>
          <target state="translated">ランタイムは、ワークフロー インスタンスが再開される直前に、<ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed&gt;</ph> イベントを発生させます。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Resume">
          <source>The following example demonstrates calling Resume on a previously suspended workflow instance.</source>
          <target state="translated">中断状態のワークフロー インスタンスに対する Resume を呼び出す例を次に示します。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Resume">
          <source>This example is from the Suspend and Terminate SDK sample.</source>
          <target state="translated">この例は保留と終了の SDK サンプルです。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Resume">
          <source>For more information, see <bpt id="p1">[</bpt>Suspend and Terminate Sample<ept id="p1">](http://msdn.microsoft.com/library/f4dffa58-d01e-44fb-b5a1-3b283d2c4517)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>保留と終了のサンプル<ept id="p1">](http://msdn.microsoft.com/library/f4dffa58-d01e-44fb-b5a1-3b283d2c4517)</ept>です。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.Resume">
          <source>The workflow runtime engine is not running.</source>
          <target state="translated">ワークフロー ランタイム エンジンが実行されていません。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.Start">
          <source>Starts the execution of the workflow instance.</source>
          <target state="translated">ワークフロー インスタンスの実行を開始します。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Start">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Start%2A&gt;</ph> calls <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.ActivityExecutionContext.ExecuteActivity%2A&gt;</ph> on the root activity of this workflow instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Start%2A&gt;</ph> は、このワークフロー インスタンスのルート アクティビティに対する <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.ActivityExecutionContext.ExecuteActivity%2A&gt;</ph> を呼び出します。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Start">
          <source>If <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Start%2A&gt;</ph> encounters an exception, it terminates the workflow instance by calling <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A&gt;</ph> with the <ph id="ph3">&lt;xref:System.Exception.Message%2A&gt;</ph> property of the exception passed as the reason for the termination.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Start%2A&gt;</ph> は、例外を検出すると、<ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A&gt;</ph> を呼び出すことによってワークフロー インスタンスを終了します。この呼び出しの際、例外の <ph id="ph3">&lt;xref:System.Exception.Message%2A&gt;</ph> プロパティを終了の理由として渡します。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Start">
          <source>The following code example demonstrates how you can use the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Start%2A&gt;</ph> method to start a <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> in a workflow host.</source>
          <target state="translated">次のコード例は、ワークフロー ホストで <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Start%2A&gt;</ph> メソッドを使用して <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> を開始する方法を示しています。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Start">
          <source>The code creates an instance of the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>, adds services to the runtime, and then demonstrates the recommended way to create a <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> object.</source>
          <target state="translated">このコードでは、<ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> のインスタンスを作成してサービスをランタイムに追加し、推奨される <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> オブジェクトの作成方法を示します。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Start">
          <source>It creates a <ph id="ph1">&lt;xref:System.Type&gt;</ph> object and casts it to one of the workflow objects with which the host is associated.</source>
          <target state="translated">これは <ph id="ph1">&lt;xref:System.Type&gt;</ph> オブジェクトを作成し、作成したオブジェクトをホストが関連付けられたワークフロー オブジェクトの 1 つにキャストします。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Start">
          <source>The code next initializes <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> by calling the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A&gt;</ph> method and passing the previously created type to it.</source>
          <target state="translated">次にこのコードは、<ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> メソッドを呼び出し、既に作成されている型をそれに渡すことによって、<ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A&gt;</ph> を初期化します。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Start">
          <source>The <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> is started with the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Start%2A&gt;</ph> method call.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> は、<ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Start%2A&gt;</ph> メソッドの呼び出しによって起動されます。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Start">
          <source>This code example is part of the Canceling a Workflow SDK sample from the Program.cs file.</source>
          <target state="translated">このコード例は、Program.cs ファイルに含まれている、ワークフローのキャンセルを示す SDK サンプルの一部です。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Start">
          <source>For more information, see <bpt id="p1">[</bpt>Canceling a Workflow<ept id="p1">](http://msdn.microsoft.com/library/d5077f56-a78b-48e7-825c-f6c77c8e54fb)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>のワークフローの取り消し<ept id="p1">](http://msdn.microsoft.com/library/d5077f56-a78b-48e7-825c-f6c77c8e54fb)</ept>です。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.Start">
          <source>The workflow runtime engine is not running.</source>
          <target state="translated">ワークフロー ランタイム エンジンが実行されていません。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.Start">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.Start">
          <source>The workflow instance has already been started.</source>
          <target state="translated">ワークフロー インスタンスが既に開始されています。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.Suspend(System.String)">
          <source>A description of the reason for suspending the workflow instance.</source>
          <target state="translated">ワークフロー インスタンスを中断する理由の説明。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.Suspend(System.String)">
          <source>Suspends the workflow instance.</source>
          <target state="translated">ワークフロー インスタンスを中断します。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Suspend(System.String)">
          <source>The workflow instance is suspended in a synchronous manner.</source>
          <target state="translated">ワークフロー インスタンスは同期式で中断されます。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Suspend(System.String)">
          <source>If the workflow instance is already suspended, no action is taken; otherwise, the workflow runtime engine suspends the workflow instance, raises the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended&gt;</ph> event and passes <ph id="ph2">`reason`</ph> in a <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowSuspendedEventArgs&gt;</ph>.</source>
          <target state="translated">ワークフロー インスタンスが既に中断している場合、アクションは実行されません。それ以外の場合、ワークフロー ランタイム エンジンはワークフロー インスタンスを中断し、<ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended&gt;</ph> イベントを発生させ、<ph id="ph2">`reason`</ph> に <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowSuspendedEventArgs&gt;</ph> を渡します。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Suspend(System.String)">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Suspend%2A&gt;</ph> does not unload the workflow instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Suspend%2A&gt;</ph> は、ワークフロー インスタンスをアンロードしません。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Suspend(System.String)">
          <source>The following code example demonstrates calling Suspend on a <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> オブジェクトに対する Suspend を呼び出す方法を次のコード例に示します。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.Suspend(System.String)">
          <source>The workflow runtime engine is not running.</source>
          <target state="translated">ワークフロー ランタイム エンジンが実行されていません。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.Terminate(System.String)">
          <source>A description of the reason for terminating the workflow instance.</source>
          <target state="translated">ワークフロー インスタンスを終了する理由の説明。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.Terminate(System.String)">
          <source>Terminates the workflow instance in a synchronous manner.</source>
          <target state="translated">ワークフロー インスタンスを同期式で終了します。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Terminate(System.String)">
          <source>The workflow instance is terminated in a synchronous manner.</source>
          <target state="translated">ワークフロー インスタンスは同期式で終了します。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Terminate(System.String)">
          <source>The host calls <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A&gt;</ph> to terminate the workflow instance.</source>
          <target state="translated">ホストは <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A&gt;</ph> を呼び出すことによってワークフロー インスタンスを終了します。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Terminate(System.String)">
          <source>The workflow runtime engine clears the in-memory workflow instance and informs the persistence service that the instance has been cleared from memory.</source>
          <target state="translated">ワークフロー ランタイム エンジンは、メモリ内のワークフロー インスタンスをクリアし、インスタンスがメモリからクリアされたことを永続性サービスに通知します。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Terminate(System.String)">
          <source>For the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService&gt;</ph>, this means that all state information for that workflow instance is deleted from the database upon termination.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService&gt;</ph> の場合、これは、終了時にそのワークフロー インスタンスのすべての状態情報がデータベースから削除されることを意味します。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Terminate(System.String)">
          <source>You will not be able to reload the workflow instance from a previously stored persistence point.</source>
          <target state="translated">既に保存されている永続性ポイントからワークフロー インスタンスを再度読み込むことはできません。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Terminate(System.String)">
          <source>After the in-memory workflow instance is cleared and the persistence service is informed of the termination, the <ph id="ph1">`Terminate`</ph> method raises the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated&gt;</ph> event and passes <ph id="ph3">`reason`</ph> in the <ph id="ph4">&lt;xref:System.Exception.Message%2A&gt;</ph> property of a <ph id="ph5">&lt;xref:System.Workflow.ComponentModel.WorkflowTerminatedException&gt;</ph> contained in the <ph id="ph6">&lt;xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs&gt;</ph>.</source>
          <target state="translated">メモリ内のワークフロー インスタンスがクリアされて永続性サービスに終了が通知されると、<ph id="ph1">`Terminate`</ph> メソッドは <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated&gt;</ph> イベントを発生させ、<ph id="ph3">`reason`</ph> に含まれる <ph id="ph4">&lt;xref:System.Exception.Message%2A&gt;</ph> の <ph id="ph5">&lt;xref:System.Workflow.ComponentModel.WorkflowTerminatedException&gt;</ph> プロパティに <ph id="ph6">&lt;xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs&gt;</ph> を渡します。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Terminate(System.String)">
          <source><ph id="ph1">`Terminate`</ph> is different from <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Abort%2A&gt;</ph> in that while Terminate clears the in-memory workflow instance and informs the persistence service of the termination, <ph id="ph3">`Abort`</ph> simply clears the in-memory workflow instance, which can then be restarted from the last persistence point.</source>
          <target state="translated"><ph id="ph1">`Terminate`</ph> は <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Abort%2A&gt;</ph> と次の点で異なります。Terminate はメモリ内のワークフロー インスタンスをクリアして永続性サービスに終了を通知します。<ph id="ph3">`Abort`</ph> はメモリ内のワークフロー インスタンスをクリアするだけで、最後の永続性ポイントからワークフロー インスタンスを再開できます。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Terminate(System.String)">
          <source>The following code example demonstrates calling Terminate on a <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> オブジェクトに対する Terminate を呼び出す方法を次のコード例に示します。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.Terminate(System.String)">
          <source>The workflow runtime engine is not running.</source>
          <target state="translated">ワークフロー ランタイム エンジンが実行されていません。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.TryUnload">
          <source>Unloads the workflow instance from memory to the persistence store when the instance is suspended or idle.</source>
          <target state="translated">メモリ内のワークフロー インスタンスが中断状態またはアイドル状態のときに、そのワークフロー インスタンスを永続ストアにアンロードします。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.TryUnload">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the workflow instance was unloaded; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">ワークフロー インスタンスがアンロードされた場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.TryUnload">
          <source>If the workflow instance is idle or suspended, <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.TryUnload%2A&gt;</ph> uses the persistence service to remove the workflow instance from memory and persist it to a data store.</source>
          <target state="translated">ワークフロー インスタンスがアイドル状態または中断状態の場合、<ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.TryUnload%2A&gt;</ph> は永続性サービスを使用することによって、メモリからワークフロー インスタンスを削除し、削除したワークフロー インスタンスをデータ ストアに永続化します。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.TryUnload">
          <source>If there is no persistence service registered with the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>, <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.TryUnload%2A&gt;</ph> throws an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> に登録された永続性サービスがない場合、<ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.TryUnload%2A&gt;</ph> は <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph> をスローします。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.TryUnload">
          <source>If the workflow instance is successfully persisted, the runtime raises the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded&gt;</ph> event, and returns <ph id="ph2">`true`</ph>.</source>
          <target state="translated">ランタイムを発生させる場合は、ワークフロー インスタンスが正常に永続化、<ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded&gt;</ph>イベント、および返します<ph id="ph2">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.TryUnload">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A&gt;</ph> returns <ph id="ph2">`false`</ph> if the workflow instance has already been unloaded, has been terminated, has been aborted, or has already completed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A&gt;</ph> 返します<ph id="ph2">`false`</ph>が終了した場合は、ワークフロー インスタンスが既にアンロードされてが中止されました。 または、既に完了します。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.TryUnload">
          <source>The host can use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.TryUnload%2A&gt;</ph> to reclaim system resources from an idle workflow.</source>
          <target state="translated">ホストは <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.TryUnload%2A&gt;</ph> を使用して、アイドル状態のワークフローのシステム リソースを再利用できます。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.TryUnload">
          <source>The following example demonstrates using the TryUnload method to unload a workflow when the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled&gt;</ph> event fires.</source>
          <target state="translated">次の例は、<ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled&gt;</ph> イベントが発生したときに TryUnload メソッドを使用してワークフローをアンロードする方法を示しています。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.TryUnload">
          <source>This example is from the Using Persistence Services SDK sample, from the Program.cs file.</source>
          <target state="translated">この例は、Program.cs ファイルに含まれている永続性サービスの使用の SDK サンプルです。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.TryUnload">
          <source>For more information, see <bpt id="p1">[</bpt>Using Persistence Services Sample<ept id="p1">](http://msdn.microsoft.com/library/3176b7e7-ae49-4d5c-802b-85032d6ebde6)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>を使用した永続性サービス サンプル<ept id="p1">](http://msdn.microsoft.com/library/3176b7e7-ae49-4d5c-802b-85032d6ebde6)</ept>です。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.TryUnload">
          <source>There is no persistence service registered with the workflow runtime engine.</source>
          <target state="translated">ワークフロー ランタイム エンジンに登録されている永続性サービスがありません。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.Unload">
          <source>Unloads the workflow instance from memory to the persistence store.</source>
          <target state="translated">メモリ内のワークフロー インスタンスを永続ストアにアンロードします。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.Unload">
          <source>This call blocks until after the currently scheduled work is finished, or the end of a transaction scope.</source>
          <target state="translated">この呼び出しは、現在のスケジュール済み作業が完了するまで、またはトランザクション スコープが終了するまでブロックされます。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Unload">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A&gt;</ph> is synchronous; that is, it returns after completing any action that it performs.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A&gt;</ph> は同期的です。つまり、実行するアクションが完了した後に制御が戻ります。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Unload">
          <source>If the workflow instance is not idle, the runtime waits until the instance can be interrupted.</source>
          <target state="translated">ワークフロー インスタンスがアイドル状態でない場合、ランタイムはインスタンスを中断できるまで待機します。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Unload">
          <source>An instance can only be interrupted after the currently scheduled work item completes; this is typically when the currently running Activity returns from its <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Activity.Execute%2A&gt;</ph> method.</source>
          <target state="translated">インスタンスを中断できるのは、現在のスケジュール済み作業項目の完了後のみです。この完了のタイミングは通常、現在実行中のアクティビティがその <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Activity.Execute%2A&gt;</ph> メソッドから返されたときです。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Unload">
          <source>However, if the instance is executing a <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.TransactionScopeActivity&gt;</ph>, the transaction scope must complete execution before the instance can be interrupted.</source>
          <target state="translated">ただし、インスタンスが <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.TransactionScopeActivity&gt;</ph> を実行している場合、インスタンスを中断できるのは、トランザクション スコープが実行を完了してからです。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Unload">
          <source>Unload then uses the persistence service to remove the workflow instance from memory and persists it to a data store.</source>
          <target state="translated">アンロードは次に、永続性サービスを使用することによって、メモリからワークフロー インスタンスを削除し、削除したワークフロー インスタンスをデータ ストアに永続化します。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Unload">
          <source>If there is no persistence service registered with the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>, <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A&gt;</ph> throws an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> に登録された永続性サービスがない場合、<ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A&gt;</ph> は <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph> をスローします。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Unload">
          <source>If the workflow instance is successfully persisted, the runtime raises the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded&gt;</ph> event.</source>
          <target state="translated">ワークフロー インスタンスが正常に永続化されると、ランタイムは <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded&gt;</ph> イベントを発生させます。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Unload">
          <source>The host can use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A&gt;</ph> to reclaim system resources from an idle workflow.</source>
          <target state="translated">ホストは <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A&gt;</ph> を使用して、アイドル状態のワークフローのシステム リソースを再利用できます。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Unload">
          <source>The following example demonstrates calling <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A&gt;</ph> on a <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A&gt;</ph> オブジェクトでの <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> の呼び出しを次の例に示します。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.Unload">
          <source>There is no persistence service registered with the workflow runtime engine.</source>
          <target state="translated">ワークフロー ランタイム エンジンに登録されている永続性サービスがありません。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="P:System.Workflow.Runtime.WorkflowInstance.WorkflowRuntime">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> for this workflow instance.</source>
          <target state="translated">このワークフロー インスタンスの <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> を取得します。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowInstance.WorkflowRuntime">
          <source>A <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> that represents the execution environment in which this workflow instance is running.</source>
          <target state="translated">このワークフロー インスタンスが動作する実行環境を表す <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowInstance.WorkflowRuntime">
          <source>The following example demonstrates accessing the executing <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> of a <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> オブジェクトの実行環境 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> にアクセスする例を次に示します。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>