<Type Name="MetaModel" FullName="System.Web.DynamicData.MetaModel">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="33dbbe23c22350a8b13354c2777a269ab90f3472" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37546236" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MetaModel" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MetaModel extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.MetaModel" />
  <TypeSignature Language="VB.NET" Value="Public Class MetaModel" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetaModel" />
  <TypeSignature Language="F#" Value="type MetaModel = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DynamicData</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="d2825-101">ASP.NET Dynamic Data で使用する 1 つまたは複数のデータベースを表します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="d2825-101">Represents one or multiple databases that are used by ASP.NET Dynamic Data.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2825-102"><xref:System.Web.DynamicData.MetaModel>型では、動的データ Web アプリケーションの 1 つまたは複数のデータ コンテキストを登録することができます。</span><span class="sxs-lookup"><span data-stu-id="d2825-102">The <xref:System.Web.DynamicData.MetaModel> type lets you register one or multiple data contexts for a Dynamic Data Web application.</span></span>  
  
 <span data-ttu-id="d2825-103">データ コンテキストは、データベース接続を表すオブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="d2825-103">A data context is an object that represents a database connection.</span></span> <span data-ttu-id="d2825-104">データ コンテキストは、その接続で使用可能なデータベースを表す 1 つのデータ モデルへのアクセスです。</span><span class="sxs-lookup"><span data-stu-id="d2825-104">A data context has access to one data model which represents a database that is available through that connection.</span></span> <span data-ttu-id="d2825-105">データ モデルは、CLR 型として、データベースのデータ エンティティを表すオブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="d2825-105">A data model is an object that represents a database's data entities as CLR types.</span></span> <span data-ttu-id="d2825-106">動的データ LINQ to SQL と ADO.NET Entity Framework に基づいてデータ モデルをサポートしています。</span><span class="sxs-lookup"><span data-stu-id="d2825-106">Dynamic Data supports data models based on LINQ to SQL and on the ADO.NET Entity Framework.</span></span>  
  
 <span data-ttu-id="d2825-107">Visual Studio を使用してデータ モデルの型を生成することができます、 **LINQ to SQL クラス**テンプレートまたは**ADO.NET Entity Data Model**テンプレート。</span><span class="sxs-lookup"><span data-stu-id="d2825-107">In Visual Studio, you can generate data-model types by using the **LINQ to SQL Classes** template or the **ADO.NET Entity Data Model** template.</span></span> <span data-ttu-id="d2825-108">これらのテンプレートは、LINQ to SQL モデル、または、ADO.NET Entity Data Model デザイナー (エンティティ デザイナー)、Entity Framework モデルのオブジェクト リレーショナル デザイナー (O/R デザイナー) を使用します。</span><span class="sxs-lookup"><span data-stu-id="d2825-108">These templates use the Object Relational Designer (O/R Designer) for the LINQ to SQL model, or the ADO.NET Entity Data Model Designer (Entity Designer) for the Entity Framework model.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2825-109">次の例は、使用する方法を示します<xref:System.Web.DynamicData.MetaModel>ASP.NET Web サイトの自動スキャフォールディングを使用するには、次のタスクを実行する型。</span><span class="sxs-lookup"><span data-stu-id="d2825-109">The following example shows how to use <xref:System.Web.DynamicData.MetaModel> type to perform the following tasks in order to use automatic scaffolding in an ASP.NET Web site:</span></span>  
  
-   <span data-ttu-id="d2825-110">既定のデータ コンテキストのデータ モデルを取得します。</span><span class="sxs-lookup"><span data-stu-id="d2825-110">Get the data model for the default data context.</span></span>  
  
-   <span data-ttu-id="d2825-111">指定されたデータ コンテキストのデータ モデルを取得します。</span><span class="sxs-lookup"><span data-stu-id="d2825-111">Get the data model for a specified data context.</span></span>  
  
-   <span data-ttu-id="d2825-112">ルーティング パスを評価 (URL を調べる) 指定したテーブル。</span><span class="sxs-lookup"><span data-stu-id="d2825-112">Evaluate the routing path (determine the URL) for a specified table.</span></span>  
  
 <span data-ttu-id="d2825-113">例では、ページとその分離コード ファイルで構成されます。</span><span class="sxs-lookup"><span data-stu-id="d2825-113">The example consists of a page and its code-behind file.</span></span>  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/PlaceHolder.cs#1)]
 [!code-aspx-csharp[System.Web.DynamicData.MetaModel#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/PathModel.aspx#1)]
 [!code-aspx-vb[System.Web.DynamicData.MetaModel#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/PathModel.aspx#1)]
 [!code-vb[System.Web.DynamicData.MetaModel#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/PlaceHolder.vb#1)]  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/PathModel.aspx.cs#2)]
 [!code-vb[System.Web.DynamicData.MetaModel#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/PathModel.aspx.vb#2)]  
  
 <span data-ttu-id="d2825-114">例をコンパイルするには、次のものが必要。</span><span class="sxs-lookup"><span data-stu-id="d2825-114">To compile the example, you need the following:</span></span>  
  
-   [!INCLUDE[vs_dev10_long](~/includes/vs-dev10-long-md.md)]<span data-ttu-id="d2825-115"> または [!INCLUDE[vwd_exp_dev10_long](~/includes/vwd-exp-dev10-long-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="d2825-115"> or [!INCLUDE[vwd_exp_dev10_long](~/includes/vwd-exp-dev10-long-md.md)].</span></span>  
  
-   <span data-ttu-id="d2825-116">動的データ Web サイトです。</span><span class="sxs-lookup"><span data-stu-id="d2825-116">A Dynamic Data Web site.</span></span> <span data-ttu-id="d2825-117">詳細については、次を参照してください。[チュートリアル: 作成、新しい動的データ Web サイトを使用してスキャフォールディング](http://msdn.microsoft.com/library/1564aef2-9103-436a-9806-c8ad7abd616a)します。</span><span class="sxs-lookup"><span data-stu-id="d2825-117">For more information, see [Walkthrough: Creating a New Dynamic Data Web Site Using Scaffolding](http://msdn.microsoft.com/library/1564aef2-9103-436a-9806-c8ad7abd616a).</span></span>  
  
 <span data-ttu-id="d2825-118">この機能の実行時のコード例を参照してください:[実行](http://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.MetaModel)します。</span><span class="sxs-lookup"><span data-stu-id="d2825-118">See a run-time code example of this feature: [Run](http://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.MetaModel).</span></span>  
  
 ]]></format>
    </remarks>
    <exception cref="T:System.InvalidOperationException">
      <span data-ttu-id="d2825-119">データ コンテキスト登録エラーがあった場合に、メソッドによってスローされます。</span>
      <span class="sxs-lookup">
        <span data-stu-id="d2825-119">Can be thrown by any method if there has been a data context registration error.</span>
      </span>
    </exception>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d2825-120">
            <see cref="T:System.Web.DynamicData.MetaModel" /> クラスの新しいインスタンスを生成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2825-120">Instantiates a new instance of the <see cref="T:System.Web.DynamicData.MetaModel" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MetaModel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MetaModel();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d2825-121">
            <see cref="T:System.Web.DynamicData.MetaModel" /> クラスの新しいインスタンスを生成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2825-121">Instantiates a new instance of the <see cref="T:System.Web.DynamicData.MetaModel" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2825-122">通常、<xref:System.Web.DynamicData.MetaModel.%23ctor%2A>コンス トラクターで、 `Application_Start` Global.asax ファイルのメソッド。</span><span class="sxs-lookup"><span data-stu-id="d2825-122">You typically call the <xref:System.Web.DynamicData.MetaModel.%23ctor%2A> constructor in the `Application_Start` method of the Global.asax file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2825-123">次の例は、使用する方法を示します、<xref:System.Web.DynamicData.MetaModel.%23ctor%2A>コンス トラクターを次のタスクを実行します。</span><span class="sxs-lookup"><span data-stu-id="d2825-123">The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.%23ctor%2A> constructor to perform the following tasks:</span></span>  
  
-   <span data-ttu-id="d2825-124">インスタンスを作成、<xref:System.Web.DynamicData.MetaModel>クラス。</span><span class="sxs-lookup"><span data-stu-id="d2825-124">Instantiate the <xref:System.Web.DynamicData.MetaModel> class.</span></span>  
  
-   <span data-ttu-id="d2825-125">初期化し、登録、<xref:System.Web.DynamicData.MetaModel>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="d2825-125">Initialize and register the <xref:System.Web.DynamicData.MetaModel> instance.</span></span>  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#99](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/global.asax.cs#99)]
 [!code-vb[System.Web.DynamicData.MetaModel#99](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/global.asax.vb#99)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MetaModel (bool registerGlobally);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool registerGlobally) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (registerGlobally As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MetaModel(bool registerGlobally);" />
      <MemberSignature Language="F#" Value="new System.Web.DynamicData.MetaModel : bool -&gt; System.Web.DynamicData.MetaModel" Usage="new System.Web.DynamicData.MetaModel registerGlobally" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="registerGlobally" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="registerGlobally">
          <span data-ttu-id="d2825-126">モデルがグローバルに登録されたことを示す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2825-126">
              <see langword="true" /> to indicate that the model is registered globally; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="d2825-127">既定値は、<see langword="true" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2825-127">The default is <see langword="true" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d2825-128">
            <see cref="T:System.Web.DynamicData.MetaModel" /> クラスの新しいインスタンスを生成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2825-128">Instantiates a new instance of the <see cref="T:System.Web.DynamicData.MetaModel" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2825-129">このコンス トラクターは、データ モデルが使用して取得できるようにグローバルに登録されているかどうかを決定します。、<xref:System.Web.DynamicData.MetaModel.GetModel%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="d2825-129">This constructor determines whether the data model is registered globally so that it can be retrieved using the <xref:System.Web.DynamicData.MetaModel.GetModel%2A> method.</span></span> <span data-ttu-id="d2825-130">複数のモデルを作成して型の競合を回避しながら、同じエンティティ型を使用することができます。</span><span class="sxs-lookup"><span data-stu-id="d2825-130">It enables you to create multiple models and use the same entity types while avoiding type conflicts.</span></span>  
  
 <span data-ttu-id="d2825-131">通常、<xref:System.Web.DynamicData.MetaModel.%23ctor%2A>コンス トラクターで、 `Application_Start` Global.asax ファイルのメソッド。</span><span class="sxs-lookup"><span data-stu-id="d2825-131">You typically call the <xref:System.Web.DynamicData.MetaModel.%23ctor%2A> constructor in the `Application_Start` method of the Global.asax file.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTable">
      <MemberSignature Language="C#" Value="protected virtual System.Web.DynamicData.MetaTable CreateTable (System.Web.DynamicData.ModelProviders.TableProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.DynamicData.MetaTable CreateTable(class System.Web.DynamicData.ModelProviders.TableProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.CreateTable(System.Web.DynamicData.ModelProviders.TableProvider)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateTable (provider As TableProvider) As MetaTable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::DynamicData::MetaTable ^ CreateTable(System::Web::DynamicData::ModelProviders::TableProvider ^ provider);" />
      <MemberSignature Language="F#" Value="abstract member CreateTable : System.Web.DynamicData.ModelProviders.TableProvider -&gt; System.Web.DynamicData.MetaTable&#xA;override this.CreateTable : System.Web.DynamicData.ModelProviders.TableProvider -&gt; System.Web.DynamicData.MetaTable" Usage="metaModel.CreateTable provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.Web.DynamicData.ModelProviders.TableProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="d2825-132">テーブルのプロバイダー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2825-132">The provider for the table.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d2825-133">
            <see cref="T:System.Web.DynamicData.MetaTable" /> オブジェクトをインスタンス化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2825-133">Instantiates a <see cref="T:System.Web.DynamicData.MetaTable" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d2825-134">テーブルの新しいインスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2825-134">A new instance of the table.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2825-135"><xref:System.Web.DynamicData.MetaModel.CreateTable%2A>派生型をインスタンス化するメソッドをオーバーライドすることができます。</span><span class="sxs-lookup"><span data-stu-id="d2825-135">The <xref:System.Web.DynamicData.MetaModel.CreateTable%2A> method can be overridden to instantiate a derived type.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.DynamicData.MetaTable" />
        <altmember cref="T:System.Web.DynamicData.ModelProviders.TableProvider" />
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static System.Web.DynamicData.MetaModel Default { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.DynamicData.MetaModel Default" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaModel.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Default As MetaModel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::DynamicData::MetaModel ^ Default { System::Web::DynamicData::MetaModel ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Default : System.Web.DynamicData.MetaModel" Usage="System.Web.DynamicData.MetaModel.Default" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d2825-136">アプリケーションで作成されるデータ モデルの最初のインスタンスを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2825-136">Gets the first instance of a data model that is created by the application.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d2825-137">データ モデルのインスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2825-137">The data-model instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2825-138">このプロパティは、既定のデータ モデルのインスタンスを参照する簡単な方法を提供します。</span><span class="sxs-lookup"><span data-stu-id="d2825-138">This property provides a simple way to reference the default data-model instance.</span></span> <span data-ttu-id="d2825-139">アプリケーションでは、複数のモデルを使用する場合は、追加のデータ モデルへの参照を格納する独自の方法を提供する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d2825-139">If the application uses multiple models, you must provide your own way to store references to the additional data models.</span></span> <span data-ttu-id="d2825-140">特定のデータ モデルを検索するには、呼び出し、<xref:System.Web.DynamicData.MetaModel.GetModel%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="d2825-140">To find a specific data model, call the <xref:System.Web.DynamicData.MetaModel.GetModel%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2825-141">次の例は、使用する方法を示します、<xref:System.Web.DynamicData.MetaModel.Default%2A>プロパティ、<xref:System.Web.DynamicData.MetaModel.GetModel%2A>既定のデータ モデルを取得します。</span><span class="sxs-lookup"><span data-stu-id="d2825-141">The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.Default%2A> property in the <xref:System.Web.DynamicData.MetaModel.GetModel%2A> method to get the default data model.</span></span>  
  
 <span data-ttu-id="d2825-142">完全な例を参照してください、<xref:System.Web.DynamicData.MetaModel>クラスの概要。</span><span class="sxs-lookup"><span data-stu-id="d2825-142">For a complete example, see the <xref:System.Web.DynamicData.MetaModel> class overview.</span></span>  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#22](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/PathModel.aspx.cs#22)]
 [!code-vb[System.Web.DynamicData.MetaModel#22](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/PathModel.aspx.vb#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DynamicDataFolderVirtualPath">
      <MemberSignature Language="C#" Value="public string DynamicDataFolderVirtualPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DynamicDataFolderVirtualPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaModel.DynamicDataFolderVirtualPath" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicDataFolderVirtualPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DynamicDataFolderVirtualPath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DynamicDataFolderVirtualPath : string with get, set" Usage="System.Web.DynamicData.MetaModel.DynamicDataFolderVirtualPath" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaModel.DynamicDataFolderVirtualPath</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d2825-143">Web サイトの DynamicData フォルダーの仮想パスを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2825-143">Gets or sets the virtual path of the DynamicData folder in the Web site.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d2825-144">DynamicData フォルダーの仮想パス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2825-144">The virtual path of the DynamicData folder.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2825-145">このプロパティでは、DynamicData フォルダーの仮想パスを変更することができます。</span><span class="sxs-lookup"><span data-stu-id="d2825-145">This property enables you to change the virtual path of the DynamicData folder.</span></span> <span data-ttu-id="d2825-146">既定値は、"~/DynamicData"です。</span><span class="sxs-lookup"><span data-stu-id="d2825-146">The default value is "~/DynamicData".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityTemplateFactory">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.EntityTemplateFactory EntityTemplateFactory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.EntityTemplateFactory EntityTemplateFactory" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaModel.EntityTemplateFactory" />
      <MemberSignature Language="VB.NET" Value="Public Property EntityTemplateFactory As EntityTemplateFactory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::EntityTemplateFactory ^ EntityTemplateFactory { System::Web::DynamicData::EntityTemplateFactory ^ get(); void set(System::Web::DynamicData::EntityTemplateFactory ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EntityTemplateFactory : System.Web.DynamicData.EntityTemplateFactory with get, set" Usage="System.Web.DynamicData.MetaModel.EntityTemplateFactory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.EntityTemplateFactory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d2825-147">モデルに関連付けられている <see cref="T:System.Web.DynamicData.EntityTemplateFactory" /> オブジェクトを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2825-147">Gets or sets the <see cref="T:System.Web.DynamicData.EntityTemplateFactory" /> object that is associated with the model.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d2825-148">モデルに関連付けられている <see cref="T:System.Web.DynamicData.EntityTemplateFactory" /> オブジェクトのインスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2825-148">An instance of the <see cref="T:System.Web.DynamicData.EntityTemplateFactory" /> object that is associated with the model.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FieldTemplateFactory">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.IFieldTemplateFactory FieldTemplateFactory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.IFieldTemplateFactory FieldTemplateFactory" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaModel.FieldTemplateFactory" />
      <MemberSignature Language="VB.NET" Value="Public Property FieldTemplateFactory As IFieldTemplateFactory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::IFieldTemplateFactory ^ FieldTemplateFactory { System::Web::DynamicData::IFieldTemplateFactory ^ get(); void set(System::Web::DynamicData::IFieldTemplateFactory ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FieldTemplateFactory : System.Web.DynamicData.IFieldTemplateFactory with get, set" Usage="System.Web.DynamicData.MetaModel.FieldTemplateFactory" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaModel.FieldTemplateFactory</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.IFieldTemplateFactory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d2825-149">カスタム <see cref="T:System.Web.DynamicData.IFieldTemplateFactory" /> インターフェイスを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2825-149">Gets or sets a custom <see cref="T:System.Web.DynamicData.IFieldTemplateFactory" /> interface.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d2825-150">
            <see cref="T:System.Web.DynamicData.IFieldTemplateFactory" /> インターフェイス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2825-150">The <see cref="T:System.Web.DynamicData.IFieldTemplateFactory" /> interface.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2825-151"><xref:System.Web.DynamicData.IFieldTemplateFactory>インターフェイスを使用して、どのフィールド テンプレートは、テーブル列の作成を指定できます。</span><span class="sxs-lookup"><span data-stu-id="d2825-151">The <xref:System.Web.DynamicData.IFieldTemplateFactory> interface lets you specify which field templates are created for the table columns.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterFactory">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.FilterFactory FilterFactory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.FilterFactory FilterFactory" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaModel.FilterFactory" />
      <MemberSignature Language="VB.NET" Value="Public Property FilterFactory As FilterFactory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::FilterFactory ^ FilterFactory { System::Web::DynamicData::FilterFactory ^ get(); void set(System::Web::DynamicData::FilterFactory ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FilterFactory : System.Web.DynamicData.FilterFactory with get, set" Usage="System.Web.DynamicData.MetaModel.FilterFactory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.FilterFactory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d2825-152">モデルに関連付けられている <see cref="T:System.Web.DynamicData.FilterFactory" /> オブジェクトを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2825-152">Gets or sets the <see cref="T:System.Web.DynamicData.FilterFactory" /> object that is associated with the model.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d2825-153">モデルに関連付けられている <see cref="T:System.Web.DynamicData.FilterFactory" /> オブジェクトのインスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2825-153">An instance of the <see cref="T:System.Web.DynamicData.FilterFactory" /> object that is associated with the model.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActionPath">
      <MemberSignature Language="C#" Value="public string GetActionPath (string tableName, string action, object row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetActionPath(string tableName, string action, object row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.GetActionPath(System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetActionPath (tableName As String, action As String, row As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetActionPath(System::String ^ tableName, System::String ^ action, System::Object ^ row);" />
      <MemberSignature Language="F#" Value="abstract member GetActionPath : string * string * obj -&gt; string&#xA;override this.GetActionPath : string * string * obj -&gt; string" Usage="metaModel.GetActionPath (tableName, action, row)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaModel.GetActionPath(System.String,System.String,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tableName" Type="System.String" />
        <Parameter Name="action" Type="System.String" />
        <Parameter Name="row" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="tableName">
          <span data-ttu-id="d2825-154">アクションが適用されるテーブルの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2825-154">The name of the table that the action applies to.</span>
          </span>
        </param>
        <param name="action">
          <span data-ttu-id="d2825-155">テーブルに対して適用するアクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2825-155">The action to apply to the table.</span>
          </span>
        </param>
        <param name="row">
          <span data-ttu-id="d2825-156">テーブルの単一行のデータを表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2825-156">An object that represents a single row of data in a table.</span>
          </span>
          <span data-ttu-id="d2825-157">
            <c>row</c> は、クエリ文字列パラメーターの値を指定するために使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2825-157">
              <c>row</c> is used to provide values for query-string parameters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d2825-158">指定されたテーブルに関連付けられたアクション パスを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2825-158">Returns the action path that is associated with a specific table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d2825-159">ルートに関連付けられている URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2825-159">The URL that is associated with the route.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2825-160">ルートは、テーブル名とアクションの組み合わせによって決まります。</span><span class="sxs-lookup"><span data-stu-id="d2825-160">The route is determined by the combination of the table name and action.</span></span>  
  
 <span data-ttu-id="d2825-161">[実行](http://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.MetaModel&spage=PathModel.aspx)この機能のオンラインの例です。</span><span class="sxs-lookup"><span data-stu-id="d2825-161">[Run](http://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.MetaModel&spage=PathModel.aspx) an online example of this feature.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2825-162">次の例は、使用する方法を示します、<xref:System.Web.DynamicData.MetaModel.GetActionPath%28System.String%2CSystem.String%2CSystem.Object%29>ルーティング パスを評価するメソッド (URL を調べる) 指定したテーブル。</span><span class="sxs-lookup"><span data-stu-id="d2825-162">The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.GetActionPath%28System.String%2CSystem.String%2CSystem.Object%29> method to evaluate the routing path (determine the URL) for a specified table.</span></span> <span data-ttu-id="d2825-163">コード例全体については、「<xref:System.Web.DynamicData.MetaModel>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="d2825-163">For a complete example, see <xref:System.Web.DynamicData.MetaModel>.</span></span>  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#23](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/PathModel.aspx.cs#23)]
 [!code-vb[System.Web.DynamicData.MetaModel#23](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/PathModel.aspx.vb#23)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetModel">
      <MemberSignature Language="C#" Value="public static System.Web.DynamicData.MetaModel GetModel (Type contextType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.DynamicData.MetaModel GetModel(class System.Type contextType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.GetModel(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetModel (contextType As Type) As MetaModel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::DynamicData::MetaModel ^ GetModel(Type ^ contextType);" />
      <MemberSignature Language="F#" Value="static member GetModel : Type -&gt; System.Web.DynamicData.MetaModel" Usage="System.Web.DynamicData.MetaModel.GetModel contextType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaModel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contextType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="contextType">
          <span data-ttu-id="d2825-164">データ モデルに定義されているデータ コンテキストの型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2825-164">The type of the data context as defined in the data model.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d2825-165">指定されたコンテキストのデータ モデル インスタンスを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2825-165">Returns the data-model instance for the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d2825-166">指定されたコンテキスト型に関連付けられたデータ モデル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2825-166">The data model that is associated with the specified context type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d2825-167">次の例は、使用する方法を示します、<xref:System.Web.DynamicData.MetaModel.GetModel%28System.Type%29>メソッドは、次のタスクを実行します。</span><span class="sxs-lookup"><span data-stu-id="d2825-167">The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.GetModel%28System.Type%29> method to perform the following tasks:</span></span>  
  
-   <span data-ttu-id="d2825-168">既定のデータ モデルを取得します。</span><span class="sxs-lookup"><span data-stu-id="d2825-168">Getting the default data model.</span></span>  
  
-   <span data-ttu-id="d2825-169">渡されたコンテキストの型で指定されたデータ モデルを取得します。</span><span class="sxs-lookup"><span data-stu-id="d2825-169">Getting the data model specified by the passed context type.</span></span>  
  
 <span data-ttu-id="d2825-170">完全な例を参照してください、<xref:System.Web.DynamicData.MetaModel>クラスの概要。</span><span class="sxs-lookup"><span data-stu-id="d2825-170">For a complete example, see the <xref:System.Web.DynamicData.MetaModel> class overview.</span></span>  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#22](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/PathModel.aspx.cs#22)]
 [!code-vb[System.Web.DynamicData.MetaModel#22](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/PathModel.aspx.vb#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetTable">
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d2825-171">テーブルが見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2825-171">The table was not found.</span>
          </span>
        </exception>
        <summary>
          <span data-ttu-id="d2825-172">データ モデルのテーブルを表すメタデータを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2825-172">Returns the metadata that describes a data model table.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2825-173"><xref:System.Web.DynamicData.MetaTable>オーバー ロードされたメソッドによって返されるオブジェクトには、指定したテーブルに関連付けられているメタデータ情報が含まれています。</span><span class="sxs-lookup"><span data-stu-id="d2825-173">The <xref:System.Web.DynamicData.MetaTable> object that is returned by the overloaded methods contains the metadata information that is associated with the specified table.</span></span>  
  
 <span data-ttu-id="d2825-174">[実行](http://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.MetaModel&spage=GetTable.aspx)この機能のオンラインの例です。</span><span class="sxs-lookup"><span data-stu-id="d2825-174">[Run](http://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.MetaModel&spage=GetTable.aspx) an online example of this feature.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2825-175">次の例は、使用する方法を示します、<xref:System.Web.DynamicData.MetaModel.GetTable%2A>オーバー ロードされたメソッドは、次のタスクを実行します。</span><span class="sxs-lookup"><span data-stu-id="d2825-175">The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.GetTable%2A> overloaded methods to perform the following tasks:</span></span>  
  
-   <span data-ttu-id="d2825-176">取得、<xref:System.Web.DynamicData.MetaTable>指定されたテーブルのオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d2825-176">Get the <xref:System.Web.DynamicData.MetaTable> object for the specified table.</span></span>  
  
-   <span data-ttu-id="d2825-177">格納されているメタデータ情報にアクセス、<xref:System.Web.DynamicData.MetaTable>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d2825-177">Access the metadata information that is contained by the <xref:System.Web.DynamicData.MetaTable> object.</span></span>  
  
 <span data-ttu-id="d2825-178">例では、ページとその分離コード ファイルで構成されます。</span><span class="sxs-lookup"><span data-stu-id="d2825-178">The example consists of a page and its code-behind file.</span></span>  
  
 [!code-aspx-csharp[System.Web.DynamicData.MetaModel#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/GetTable.aspx#3)] -->
 [!code-aspx-vb[System.Web.DynamicData.MetaModel#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/GetTable.aspx#3)] --> 
  
 [!code-csharp[System.Web.DynamicData.MetaModel#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/GetTable.aspx.cs#4)]
 [!code-vb[System.Web.DynamicData.MetaModel#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/gettable.aspx.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.DynamicData.MetaTable" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetTable">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.MetaTable GetTable (string uniqueTableName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.DynamicData.MetaTable GetTable(string uniqueTableName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.GetTable(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTable (uniqueTableName As String) As MetaTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::DynamicData::MetaTable ^ GetTable(System::String ^ uniqueTableName);" />
      <MemberSignature Language="F#" Value="member this.GetTable : string -&gt; System.Web.DynamicData.MetaTable" Usage="metaModel.GetTable uniqueTableName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uniqueTableName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uniqueTableName">
          <span data-ttu-id="d2825-179">データ モデルのテーブルを識別する名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2825-179">The name that identifies the table in the data model.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d2825-180">指定されたテーブルに関連付けられたメタデータを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2825-180">Returns the metadata that is associated with the specified table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d2825-181">指定されたテーブルを表すメタデータ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2825-181">The metadata that describes the specified table.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2825-182">名前は一意にデータ モデル内のテーブルを識別し、ルーティングに関連する URL を生成するために使用します。</span><span class="sxs-lookup"><span data-stu-id="d2825-182">The name uniquely identifies a table in the data model and is used to generate the related URL for routing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2825-183">次の例は、使用する方法を示します、<xref:System.Web.DynamicData.MetaModel.GetTable%28System.String%29>メソッドを指定されたテーブルのメタデータを取得します。</span><span class="sxs-lookup"><span data-stu-id="d2825-183">The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.GetTable%28System.String%29> method to obtain the metadata for the specified table.</span></span> <span data-ttu-id="d2825-184">コード例全体については、「<xref:System.Web.DynamicData.MetaModel.GetTable%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="d2825-184">For a complete example, see <xref:System.Web.DynamicData.MetaModel.GetTable%2A>.</span></span>  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#42](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/GetTable.aspx.cs#42)]
 [!code-vb[System.Web.DynamicData.MetaModel#42](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/gettable.aspx.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d2825-185">データ モデルに名前が見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2825-185">The name was not found in the data model.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.DynamicData.MetaTable" />
      </Docs>
    </Member>
    <Member MemberName="GetTable">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.MetaTable GetTable (Type entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.DynamicData.MetaTable GetTable(class System.Type entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.GetTable(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTable (entityType As Type) As MetaTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::DynamicData::MetaTable ^ GetTable(Type ^ entityType);" />
      <MemberSignature Language="F#" Value="member this.GetTable : Type -&gt; System.Web.DynamicData.MetaTable" Usage="metaModel.GetTable entityType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="entityType">
          <span data-ttu-id="d2825-186">データ モデルのテーブルを識別する型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2825-186">The type that identifies the table in the data model.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d2825-187">指定されたテーブルを表すメタデータを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2825-187">Returns the metadata that describes the specified table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d2825-188">指定されたテーブルを表すメタデータ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2825-188">The metadata that describes the specified table.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d2825-189">次の例は、使用する方法を示します、<xref:System.Web.DynamicData.MetaModel.GetTable%28System.Type%29>メソッドを指定されたテーブルのメタデータを取得します。</span><span class="sxs-lookup"><span data-stu-id="d2825-189">The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.GetTable%28System.Type%29> method to obtain the metadata for the specified table.</span></span> <span data-ttu-id="d2825-190">コード例全体については、「<xref:System.Web.DynamicData.MetaModel.GetTable%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="d2825-190">For a complete example, see <xref:System.Web.DynamicData.MetaModel.GetTable%2A>.</span></span>  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#41](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/GetTable.aspx.cs#41)]
 [!code-vb[System.Web.DynamicData.MetaModel#41](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/gettable.aspx.vb#41)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d2825-191">データ モデルに型が見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2825-191">The type was not found in the data model.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.DynamicData.MetaTable" />
      </Docs>
    </Member>
    <Member MemberName="GetTable">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.MetaTable GetTable (string tableName, Type contextType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.DynamicData.MetaTable GetTable(string tableName, class System.Type contextType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.GetTable(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTable (tableName As String, contextType As Type) As MetaTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::DynamicData::MetaTable ^ GetTable(System::String ^ tableName, Type ^ contextType);" />
      <MemberSignature Language="F#" Value="member this.GetTable : string * Type -&gt; System.Web.DynamicData.MetaTable" Usage="metaModel.GetTable (tableName, contextType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tableName" Type="System.String" />
        <Parameter Name="contextType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="tableName">
          <span data-ttu-id="d2825-192">テーブルの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2825-192">The name of the table.</span>
          </span>
        </param>
        <param name="contextType">
          <span data-ttu-id="d2825-193">テーブルの検索の対象となるデータ コンテキスト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2825-193">The data context to search for the table.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d2825-194">指定されたテーブルを表すメタデータを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2825-194">Returns the metadata that describes the specified table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d2825-195">指定されたテーブルを表すメタデータ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2825-195">The metadata that describes the specified table.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d2825-196">次の例は、使用する方法を示します、<xref:System.Web.DynamicData.MetaModel.GetTable%28System.String%2CSystem.Type%29>メソッドを指定されたテーブルのメタデータを取得します。</span><span class="sxs-lookup"><span data-stu-id="d2825-196">The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.GetTable%28System.String%2CSystem.Type%29> method to obtain the metadata for the specified table.</span></span> <span data-ttu-id="d2825-197">コード例全体については、「<xref:System.Web.DynamicData.MetaModel.GetTable%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="d2825-197">For a complete example, see <xref:System.Web.DynamicData.MetaModel.GetTable%2A>.</span></span>  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#43](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/GetTable.aspx.cs#43)]
 [!code-vb[System.Web.DynamicData.MetaModel#43](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/gettable.aspx.vb#43)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d2825-198">
            <paramref name="tablename" /> または <paramref name="contextType" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2825-198">
              <paramref name="tablename" /> or <paramref name="contextType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d2825-199">コンテキストが登録されていないか、データ コンテキストにテーブルが存在しません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2825-199">The context is not registered or the table does not exist in the data context.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.DynamicData.MetaTable" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterContext">
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d2825-200">データ コンテキストを登録します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2825-200">Registers the data context.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2825-201">プロパティを使用してデータ コンテキストの初期化情報を定義することができます、<xref:System.Web.DynamicData.ContextConfiguration>クラス。</span><span class="sxs-lookup"><span data-stu-id="d2825-201">You can define data-context initialization information by using the properties of the <xref:System.Web.DynamicData.ContextConfiguration> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterContext">
      <MemberSignature Language="C#" Value="public void RegisterContext (Func&lt;object&gt; contextFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterContext(class System.Func`1&lt;object&gt; contextFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.RegisterContext(System.Func{System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterContext (contextFactory As Func(Of Object))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterContext(Func&lt;System::Object ^&gt; ^ contextFactory);" />
      <MemberSignature Language="F#" Value="abstract member RegisterContext : Func&lt;obj&gt; -&gt; unit&#xA;override this.RegisterContext : Func&lt;obj&gt; -&gt; unit" Usage="metaModel.RegisterContext contextFactory" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaModel.RegisterContext(System.Func{System.Object})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contextFactory" Type="System.Func&lt;System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="contextFactory">
          <span data-ttu-id="d2825-202">データ コンテキストのインスタンス化に使用するファクトリ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2825-202">The factory for instantiating the data context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d2825-203">コンテキスト ファクトリで指定されるデータ コンテキストを登録します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2825-203">Registers the data context that is specified by a context factory.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2825-204">このメソッドで定義されている既定のコンテキスト情報を使用して、<xref:System.Web.DynamicData.ContextConfiguration>クラス。</span><span class="sxs-lookup"><span data-stu-id="d2825-204">This method uses the default context information that is defined by the <xref:System.Web.DynamicData.ContextConfiguration> class.</span></span> <span data-ttu-id="d2825-205">独自のコンス トラクターを使用してデータ コンテキストをインスタンス化できます。</span><span class="sxs-lookup"><span data-stu-id="d2825-205">It enables you to instantiate the data context by using your own constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterContext">
      <MemberSignature Language="C#" Value="public void RegisterContext (Type contextType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterContext(class System.Type contextType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.RegisterContext(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterContext (contextType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterContext(Type ^ contextType);" />
      <MemberSignature Language="F#" Value="abstract member RegisterContext : Type -&gt; unit&#xA;override this.RegisterContext : Type -&gt; unit" Usage="metaModel.RegisterContext contextType" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaModel.RegisterContext(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contextType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="contextType">
          <span data-ttu-id="d2825-206">データ モデルに定義されているデータ コンテキストの型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2825-206">The type of the data context as defined in the data model.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d2825-207">データ コンテキストのインスタンスを登録します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2825-207">Registers a data-context instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2825-208">このメソッドで定義されている既定のコンテキスト情報を使用して、<xref:System.Web.DynamicData.ContextConfiguration>クラス。</span><span class="sxs-lookup"><span data-stu-id="d2825-208">This method uses the default context information as defined by the <xref:System.Web.DynamicData.ContextConfiguration> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterContext">
      <MemberSignature Language="C#" Value="public void RegisterContext (System.Web.DynamicData.ModelProviders.DataModelProvider dataModelProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterContext(class System.Web.DynamicData.ModelProviders.DataModelProvider dataModelProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.RegisterContext(System.Web.DynamicData.ModelProviders.DataModelProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterContext(System::Web::DynamicData::ModelProviders::DataModelProvider ^ dataModelProvider);" />
      <MemberSignature Language="F#" Value="abstract member RegisterContext : System.Web.DynamicData.ModelProviders.DataModelProvider -&gt; unit&#xA;override this.RegisterContext : System.Web.DynamicData.ModelProviders.DataModelProvider -&gt; unit" Usage="metaModel.RegisterContext dataModelProvider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaModel.RegisterContext(System.Web.DynamicData.ModelProviders.DataModelProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataModelProvider" Type="System.Web.DynamicData.ModelProviders.DataModelProvider" />
      </Parameters>
      <Docs>
        <param name="dataModelProvider">
          <span data-ttu-id="d2825-209">データ モデルのプロバイダー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2825-209">A provider for the data model.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d2825-210">データ モデル プロバイダーを使用してデータ コンテキスト インスタンスを登録します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2825-210">Registers a data context instance by using a data-model provider</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterContext">
      <MemberSignature Language="C#" Value="public void RegisterContext (Func&lt;object&gt; contextFactory, System.Web.DynamicData.ContextConfiguration configuration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterContext(class System.Func`1&lt;object&gt; contextFactory, class System.Web.DynamicData.ContextConfiguration configuration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.RegisterContext(System.Func{System.Object},System.Web.DynamicData.ContextConfiguration)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterContext (contextFactory As Func(Of Object), configuration As ContextConfiguration)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterContext(Func&lt;System::Object ^&gt; ^ contextFactory, System::Web::DynamicData::ContextConfiguration ^ configuration);" />
      <MemberSignature Language="F#" Value="abstract member RegisterContext : Func&lt;obj&gt; * System.Web.DynamicData.ContextConfiguration -&gt; unit&#xA;override this.RegisterContext : Func&lt;obj&gt; * System.Web.DynamicData.ContextConfiguration -&gt; unit" Usage="metaModel.RegisterContext (contextFactory, configuration)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaModel.RegisterContext(System.Func{System.Object},System.Web.DynamicData.ContextConfiguration)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contextFactory" Type="System.Func&lt;System.Object&gt;" />
        <Parameter Name="configuration" Type="System.Web.DynamicData.ContextConfiguration" />
      </Parameters>
      <Docs>
        <param name="contextFactory">
          <span data-ttu-id="d2825-211">データ モデル コンテキストのインスタンス化に使用するデリゲート。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2825-211">A delegate that is used to instantiate the data model context.</span>
          </span>
        </param>
        <param name="configuration">
          <span data-ttu-id="d2825-212">
            <see cref="T:System.Web.DynamicData.ContextConfiguration" /> クラスで定義されるコンテキスト情報。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2825-212">The context information as defined by the <see cref="T:System.Web.DynamicData.ContextConfiguration" /> class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d2825-213">指定されたコンテキスト構成を使用し、カスタム コンストラクターを有効にして、データ コンテキスト インスタンスを登録します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2825-213">Registers a data-context instance by using the specified context configuration and by enabling a custom constructor.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2825-214">このメソッドでコンテキスト ファクトリでは、カスタム コンス トラクターを使用してデータ モデルのコンテキストをインスタンス化することができます。</span><span class="sxs-lookup"><span data-stu-id="d2825-214">The context factory in this method enables you to instantiate a data model context by using a custom constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d2825-215">
            <paramref name="contextFactory" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2825-215">
              <paramref name="contextFactory" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d2825-216">
            <paramref name="contextType" /> でインスタンス化された <paramref name="contextFactory" /> が無効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2825-216">The <paramref name="contextType" /> that is instantiated by <paramref name="contextFactory" /> is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RegisterContext">
      <MemberSignature Language="C#" Value="public void RegisterContext (Type contextType, System.Web.DynamicData.ContextConfiguration configuration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterContext(class System.Type contextType, class System.Web.DynamicData.ContextConfiguration configuration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.RegisterContext(System.Type,System.Web.DynamicData.ContextConfiguration)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterContext (contextType As Type, configuration As ContextConfiguration)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterContext(Type ^ contextType, System::Web::DynamicData::ContextConfiguration ^ configuration);" />
      <MemberSignature Language="F#" Value="abstract member RegisterContext : Type * System.Web.DynamicData.ContextConfiguration -&gt; unit&#xA;override this.RegisterContext : Type * System.Web.DynamicData.ContextConfiguration -&gt; unit" Usage="metaModel.RegisterContext (contextType, configuration)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaModel.RegisterContext(System.Type,System.Web.DynamicData.ContextConfiguration)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contextType" Type="System.Type" />
        <Parameter Name="configuration" Type="System.Web.DynamicData.ContextConfiguration" />
      </Parameters>
      <Docs>
        <param name="contextType">
          <span data-ttu-id="d2825-217">データ モデルに定義されているデータ コンテキストの型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2825-217">The type of the data context as defined in the data model.</span>
          </span>
        </param>
        <param name="configuration">
          <span data-ttu-id="d2825-218">
            <see cref="T:System.Web.DynamicData.ContextConfiguration" /> クラスで定義される、コンテキストの構成情報。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2825-218">The configuration information for the context, as defined by the <see cref="T:System.Web.DynamicData.ContextConfiguration" /> class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d2825-219">指定されたコンテキスト構成を使用してデータ コンテキスト インスタンスを登録します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2825-219">Registers a data-context instance by using the specified context configuration.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d2825-220">次の例は、使用する方法を示します、<xref:System.Web.DynamicData.MetaModel.RegisterContext%28System.Type%2CSystem.Web.DynamicData.ContextConfiguration%29>にスキャフォールディングが有効にすると、データ コンテキストを登録する方法の指定に従って、`configuration`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="d2825-220">The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.RegisterContext%28System.Type%2CSystem.Web.DynamicData.ContextConfiguration%29> method to register a data context with scaffolding enabled, as specified by the `configuration` parameter.</span></span>  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#99](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/global.asax.cs#99)]
 [!code-vb[System.Web.DynamicData.MetaModel#99](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/global.asax.vb#99)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d2825-221">
            <paramref name="contextType" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2825-221">
              <paramref name="contextType" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RegisterContext">
      <MemberSignature Language="C#" Value="public virtual void RegisterContext (System.Web.DynamicData.ModelProviders.DataModelProvider dataModelProvider, System.Web.DynamicData.ContextConfiguration configuration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterContext(class System.Web.DynamicData.ModelProviders.DataModelProvider dataModelProvider, class System.Web.DynamicData.ContextConfiguration configuration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.RegisterContext(System.Web.DynamicData.ModelProviders.DataModelProvider,System.Web.DynamicData.ContextConfiguration)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterContext(System::Web::DynamicData::ModelProviders::DataModelProvider ^ dataModelProvider, System::Web::DynamicData::ContextConfiguration ^ configuration);" />
      <MemberSignature Language="F#" Value="abstract member RegisterContext : System.Web.DynamicData.ModelProviders.DataModelProvider * System.Web.DynamicData.ContextConfiguration -&gt; unit&#xA;override this.RegisterContext : System.Web.DynamicData.ModelProviders.DataModelProvider * System.Web.DynamicData.ContextConfiguration -&gt; unit" Usage="metaModel.RegisterContext (dataModelProvider, configuration)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaModel.RegisterContext(System.Web.DynamicData.ModelProviders.DataModelProvider,System.Web.DynamicData.ContextConfiguration)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataModelProvider" Type="System.Web.DynamicData.ModelProviders.DataModelProvider" />
        <Parameter Name="configuration" Type="System.Web.DynamicData.ContextConfiguration" />
      </Parameters>
      <Docs>
        <param name="dataModelProvider">
          <span data-ttu-id="d2825-222">データ モデルのプロバイダー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2825-222">A provider for the data model.</span>
          </span>
        </param>
        <param name="configuration">
          <span data-ttu-id="d2825-223">
            <see cref="T:System.Web.DynamicData.ContextConfiguration" /> クラスで定義されるコンテキスト情報。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2825-223">The context information as defined by the <see cref="T:System.Web.DynamicData.ContextConfiguration" /> class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d2825-224">指定されたコンテキスト構成を使用し、データ モデル プロバイダーを有効にして、データ コンテキスト インスタンスを登録します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2825-224">Registers a data-context instance by using the specified context configuration and by enabling a data-model provider.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d2825-225">
            <paramref name="dataModelProvider" /> または <paramref name="configuration" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2825-225">
              <paramref name="dataModelProvider" /> or <paramref name="configuration" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d2825-226">
            <paramref name="contextType" /> は既に登録されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2825-226">
              <paramref name="contextType" /> is already registered.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ResetRegistrationException">
      <MemberSignature Language="C#" Value="public static void ResetRegistrationException ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResetRegistrationException() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.ResetRegistrationException" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ResetRegistrationException ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ResetRegistrationException();" />
      <MemberSignature Language="F#" Value="static member ResetRegistrationException : unit -&gt; unit" Usage="System.Web.DynamicData.MetaModel.ResetRegistrationException " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d2825-227">以前に発生したコンテキスト登録エラーをリセットします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2825-227">Resets any previous context registration error that might have occurred.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2825-228">データ コンテキストの登録中にエラーが発生したときに、例外はキャッシュされ、後続のすべての操作でスローされます。</span><span class="sxs-lookup"><span data-stu-id="d2825-228">When an error occurs during data-context registration, the exception is cached and thrown on all subsequent operations.</span></span> <span data-ttu-id="d2825-229">たとえば、アプリケーションの起動時にエラーが発生した場合、すべての要求にスローされます。</span><span class="sxs-lookup"><span data-stu-id="d2825-229">For example, if an error occurs at application start, it is thrown on every request.</span></span> <span data-ttu-id="d2825-230">エラーをクリアしを実行する新しいコンテキストの登録を有効にするのには、このメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="d2825-230">Call this method to clear the error and to enable a new context registration to be performed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Tables">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.DynamicData.MetaTable&gt; Tables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Web.DynamicData.MetaTable&gt; Tables" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaModel.Tables" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Tables As ReadOnlyCollection(Of MetaTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Web::DynamicData::MetaTable ^&gt; ^ Tables { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Web::DynamicData::MetaTable ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Tables : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.DynamicData.MetaTable&gt;" Usage="System.Web.DynamicData.MetaModel.Tables" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.DynamicData.MetaTable&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d2825-231">データ モデルの一部を構成するすべてのテーブルのコレクションを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2825-231">Gets a collection of all the tables that are part of the data model.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d2825-232">データ モデルに属するすべてのテーブルを格納しているコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2825-232">A collection that contains the tables that belong to the data model.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2825-233">コレクションに表示されていないテーブルが含まれるデータ モデル内のすべてのテーブルが含まれています (は、動的データ スキャフォールディングの一部ではありません)。</span><span class="sxs-lookup"><span data-stu-id="d2825-233">The collection contains all the tables in the data model, which includes the tables that are not visible (are not part of Dynamic Data scaffolding).</span></span>  
  
 <span data-ttu-id="d2825-234">[実行](http://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.MetaModel&spage=TablesMenu.aspx)この機能のオンラインの例です。</span><span class="sxs-lookup"><span data-stu-id="d2825-234">[Run](http://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.MetaModel&spage=TablesMenu.aspx) an online example of this feature.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2825-235">次の例は、使用する方法を示します、<xref:System.Web.DynamicData.MetaModel.Tables%2A>と<xref:System.Web.DynamicData.MetaModel.VisibleTables%2A>プロパティは、次のタスクを実行します。</span><span class="sxs-lookup"><span data-stu-id="d2825-235">The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.Tables%2A> and <xref:System.Web.DynamicData.MetaModel.VisibleTables%2A> properties to perform the following tasks:</span></span>  
  
-   <span data-ttu-id="d2825-236">データ モデル内のすべてのテーブルのコレクションを取得し、それらを表示する、`GridView`コントロール。</span><span class="sxs-lookup"><span data-stu-id="d2825-236">Get a collection of all the tables in a data model and show them in a `GridView` control.</span></span>  
  
-   <span data-ttu-id="d2825-237">データ モデルで表示可能なテーブルのコレクションを取得し、それらを表示する、`GridView`コントロール。</span><span class="sxs-lookup"><span data-stu-id="d2825-237">Get a collection of the visible tables in a data model and show them in a `GridView` control.</span></span>  
  
 <span data-ttu-id="d2825-238">例では、ページとその分離コード ファイルで構成されます。</span><span class="sxs-lookup"><span data-stu-id="d2825-238">The example consists of a page and its code-behind file.</span></span>  
  
 [!code-aspx-csharp[System.Web.DynamicData.MetaModel#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/TablesMenu.aspx#5)]
 [!code-aspx-vb[System.Web.DynamicData.MetaModel#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/TablesMenu.aspx#5)]  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/TablesMenu.aspx.cs#6)]
 [!code-vb[System.Web.DynamicData.MetaModel#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/TablesMenu.aspx.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryGetTable">
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d2825-239">指定されたテーブルに関連付けられたメタデータの取得を試みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2825-239">Attempts to get the metadata that is associated with the specified table.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryGetTable">
      <MemberSignature Language="C#" Value="public bool TryGetTable (string uniqueTableName, out System.Web.DynamicData.MetaTable table);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetTable(string uniqueTableName, [out] class System.Web.DynamicData.MetaTable&amp; table) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.TryGetTable(System.String,System.Web.DynamicData.MetaTable@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetTable (uniqueTableName As String, ByRef table As MetaTable) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetTable(System::String ^ uniqueTableName, [Runtime::InteropServices::Out] System::Web::DynamicData::MetaTable ^ % table);" />
      <MemberSignature Language="F#" Value="member this.TryGetTable : string *  -&gt; bool" Usage="metaModel.TryGetTable (uniqueTableName, table)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uniqueTableName" Type="System.String" />
        <Parameter Name="table" Type="System.Web.DynamicData.MetaTable&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="uniqueTableName">
          <span data-ttu-id="d2825-240">テーブルを一意に識別する名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2825-240">The name that uniquely identifies the table.</span>
          </span>
        </param>
        <param name="table">
          <span data-ttu-id="d2825-241">このメソッドから制御が戻るときに、要求されたテーブルが見つかった場合は、そのテーブルのメタデータが格納されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2825-241">When this method returns, and if it has found the requested table, contains the metadata for that table.</span>
          </span>
          <span data-ttu-id="d2825-242">このパラメーターは初期化せずに渡されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2825-242">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d2825-243">指定されたテーブルに関連付けられたメタデータの取得を試みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2825-243">Attempts to get the metadata that is associated with the specified table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d2825-244">テーブルのメタデータが見つかった場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2825-244">
              <see langword="true" /> if the table metadata is found; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2825-245">このメソッドは、指定したテーブルに関連付けられているメタデータを取得します。</span><span class="sxs-lookup"><span data-stu-id="d2825-245">This method gets the metadata that is associated with the specified table.</span></span> <span data-ttu-id="d2825-246">テーブルが見つからないかどうか、このメソッドが戻る`false`します。</span><span class="sxs-lookup"><span data-stu-id="d2825-246">If the table is not found, this method returns `false`.</span></span> <span data-ttu-id="d2825-247">これに対し、<xref:System.Web.DynamicData.MetaModel.GetTable%2A>メソッドで、テーブルが見つからない場合は、例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="d2825-247">This differs from the <xref:System.Web.DynamicData.MetaModel.GetTable%2A> method, which throws an exception if the table is not found.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d2825-248">
            <paramref name="uniqueTableName" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2825-248">
              <paramref name="uniqueTableName" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TryGetTable">
      <MemberSignature Language="C#" Value="public bool TryGetTable (Type entityType, out System.Web.DynamicData.MetaTable table);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetTable(class System.Type entityType, [out] class System.Web.DynamicData.MetaTable&amp; table) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.TryGetTable(System.Type,System.Web.DynamicData.MetaTable@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetTable (entityType As Type, ByRef table As MetaTable) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetTable(Type ^ entityType, [Runtime::InteropServices::Out] System::Web::DynamicData::MetaTable ^ % table);" />
      <MemberSignature Language="F#" Value="member this.TryGetTable : Type *  -&gt; bool" Usage="metaModel.TryGetTable (entityType, table)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Type" />
        <Parameter Name="table" Type="System.Web.DynamicData.MetaTable&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="entityType">
          <span data-ttu-id="d2825-249">テーブルの型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2825-249">The table type.</span>
          </span>
        </param>
        <param name="table">
          <span data-ttu-id="d2825-250">このメソッドから制御が戻るときに、要求されたテーブルが見つかった場合は、指定されたテーブルのメタデータが格納されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2825-250">When this method returns, and if the requested table has been found, contains the metadata for the specified table.</span>
          </span>
          <span data-ttu-id="d2825-251">このパラメーターは初期化せずに渡されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2825-251">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d2825-252">指定されたテーブルに関連付けられたメタデータの取得を試みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2825-252">Attempts to get the metadata that is associated with the specified table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d2825-253">テーブル メタデータが見つかった場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2825-253">
              <see langword="true" /> if the table metadata is found; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2825-254">このメソッドは、指定したテーブルに関連付けられているメタデータを取得します。</span><span class="sxs-lookup"><span data-stu-id="d2825-254">This method gets the metadata that is associated with the specified table.</span></span> <span data-ttu-id="d2825-255">テーブルが見つからないかどうか、このメソッドが戻る`false`します。</span><span class="sxs-lookup"><span data-stu-id="d2825-255">If the table is not found, this method returns `false`.</span></span> <span data-ttu-id="d2825-256">これに対し、<xref:System.Web.DynamicData.MetaModel.GetTable%2A>メソッドで、テーブルが見つからない場合は、例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="d2825-256">This differs from the <xref:System.Web.DynamicData.MetaModel.GetTable%2A> method, which throws an exception if the table is not found.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d2825-257">
            <paramref name="entityType" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2825-257">
              <paramref name="entityType" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="VisibleTables">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;System.Web.DynamicData.MetaTable&gt; VisibleTables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.List`1&lt;class System.Web.DynamicData.MetaTable&gt; VisibleTables" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaModel.VisibleTables" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VisibleTables As List(Of MetaTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::List&lt;System::Web::DynamicData::MetaTable ^&gt; ^ VisibleTables { System::Collections::Generic::List&lt;System::Web::DynamicData::MetaTable ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.VisibleTables : System.Collections.Generic.List&lt;System.Web.DynamicData.MetaTable&gt;" Usage="System.Web.DynamicData.MetaModel.VisibleTables" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.Web.DynamicData.MetaTable&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d2825-258">データ モデルの可視テーブルのコレクションを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2825-258">Gets a collection of the visible tables in the data model.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d2825-259">可視テーブルとは、スキャフォールディングが有効なテーブルを指します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2825-259">A visible table refers to a table that has scaffolding enabled.</span>
          </span>
          <span data-ttu-id="d2825-260">つまり、List.aspx ページが存在するテーブルです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2825-260">This means that it is a table for which a List.aspx page exists.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d2825-261">次の例は、使用する方法を示します、<xref:System.Web.DynamicData.MetaModel.VisibleTables%2A>データ モデルの表示可能なテーブルのコレクションを取得するプロパティ。</span><span class="sxs-lookup"><span data-stu-id="d2825-261">The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.VisibleTables%2A> property to get a collection of the visible tables in the data model.</span></span> <span data-ttu-id="d2825-262">完全な例を参照してください、<xref:System.Web.DynamicData.MetaModel>クラスの概要。</span><span class="sxs-lookup"><span data-stu-id="d2825-262">For a complete example, see the <xref:System.Web.DynamicData.MetaModel> class overview.</span></span>  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#62](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/TablesMenu.aspx.cs#62)]
 [!code-vb[System.Web.DynamicData.MetaModel#62](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/TablesMenu.aspx.vb#62)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>