<Type Name="DynamicFilter" FullName="System.Web.DynamicData.DynamicFilter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f41522e7936ecab719707b142c69acb3c0848010" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36601471" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DynamicFilter : System.Web.UI.Control, System.Web.DynamicData.IFilterExpressionProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DynamicFilter extends System.Web.UI.Control implements class System.Web.DynamicData.IFilterExpressionProvider" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.DynamicFilter" />
  <TypeSignature Language="VB.NET" Value="Public Class DynamicFilter&#xA;Inherits Control&#xA;Implements IFilterExpressionProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class DynamicFilter : System::Web::UI::Control, System::Web::DynamicData::IFilterExpressionProvider" />
  <TypeSignature Language="F#" Value="type DynamicFilter = class&#xA;    inherit Control&#xA;    interface IFilterExpressionProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DynamicData</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.DynamicData.IFilterExpressionProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="e22ec-101">指定した列を使用してテーブル行をフィルター処理するための UI を表示します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="e22ec-101">Displays the UI for filtering table rows using a specified column.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e22ec-102">このトピックの内容:</span><span class="sxs-lookup"><span data-stu-id="e22ec-102">In this topic:</span></span>  
  
-   [<span data-ttu-id="e22ec-103">はじめに</span><span class="sxs-lookup"><span data-stu-id="e22ec-103">Introduction</span></span>](#introduction)  
  
-   [<span data-ttu-id="e22ec-104">ClassContext</span><span class="sxs-lookup"><span data-stu-id="e22ec-104">ClassContext</span></span>](#ClassContext)  
  
-   [<span data-ttu-id="e22ec-105">宣言型の構文</span><span class="sxs-lookup"><span data-stu-id="e22ec-105">Declarative Syntax</span></span>](#DeclarativeSyntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a><span data-ttu-id="e22ec-106">はじめに</span><span class="sxs-lookup"><span data-stu-id="e22ec-106">Introduction</span></span>  
 <span data-ttu-id="e22ec-107"><xref:System.Web.DynamicData.DynamicFilter>コントロールがテーブルの行をフィルター処理するための UI を生成するページのマークアップで使用します。</span><span class="sxs-lookup"><span data-stu-id="e22ec-107">The <xref:System.Web.DynamicData.DynamicFilter> control is used in a page markup to generate the UI for filtering table rows.</span></span> <span data-ttu-id="e22ec-108">動的なデータは、~\DynamicData\Filters フォルダー内にある既定のフィルターのテンプレートを使用して UI を作成します。</span><span class="sxs-lookup"><span data-stu-id="e22ec-108">Dynamic Data creates the UI by using the default filter templates that are in the ~\DynamicData\Filters folder.</span></span> <span data-ttu-id="e22ec-109">これらのテンプレートは、外部キー、ブール値、および列挙型の列の型をサポートします。</span><span class="sxs-lookup"><span data-stu-id="e22ec-109">These templates support foreign-key, Boolean, and enumeration column types.</span></span>  
  
 <span data-ttu-id="e22ec-110">次の表は、実行できるタスクの一部を示します。</span><span class="sxs-lookup"><span data-stu-id="e22ec-110">The following table shows some of the tasks you can perform.</span></span>  
  
|<span data-ttu-id="e22ec-111">シナリオ</span><span class="sxs-lookup"><span data-stu-id="e22ec-111">Scenario</span></span>|<span data-ttu-id="e22ec-112">説明</span><span class="sxs-lookup"><span data-stu-id="e22ec-112">Description</span></span>|  
|--------------|-----------------|  
|<span data-ttu-id="e22ec-113">テーブルの行のフィルター処理に使用する列を指定します。</span><span class="sxs-lookup"><span data-stu-id="e22ec-113">Specify the column to use for table row filtering.</span></span>|<span data-ttu-id="e22ec-114">プロパティを使用して<xref:System.Web.DynamicData.DynamicFilter.DataField%2A>テーブル行のフィルター処理に使用する列を指定します。</span><span class="sxs-lookup"><span data-stu-id="e22ec-114">Use the property <xref:System.Web.DynamicData.DynamicFilter.DataField%2A> to specify the column to use for table row filtering.</span></span>|  
|<span data-ttu-id="e22ec-115">使用して UI を作成するフィルターのテンプレートの名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="e22ec-115">Specify the name of the filter template to use to create the UI.</span></span>|<span data-ttu-id="e22ec-116">プロパティを使用して<xref:System.Web.DynamicData.DynamicFilter.FilterUIHint%2A>を使用して UI を作成するフィルターのテンプレートの名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="e22ec-116">Use the property <xref:System.Web.DynamicData.DynamicFilter.FilterUIHint%2A> to specify the name of the filter template to use to create the UI.</span></span>|  
|<span data-ttu-id="e22ec-117">UI が表示される前に、カスタム操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="e22ec-117">Perform custom operations before the UI is rendered.</span></span>|<span data-ttu-id="e22ec-118">使用して、 <xref:System.Web.DynamicData.DynamicFilter.FilterChanged> UI が表示される前に、カスタム操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="e22ec-118">Use the <xref:System.Web.DynamicData.DynamicFilter.FilterChanged> to perform custom operations before the UI is rendered.</span></span>|  
  
 <span data-ttu-id="e22ec-119">次の方法で使用するフィルターのテンプレートを指定できます。</span><span class="sxs-lookup"><span data-stu-id="e22ec-119">You can specify the filter template to use in the following ways:</span></span>  
  
-   <span data-ttu-id="e22ec-120">使用して、<xref:System.Web.DynamicData.DynamicFilter.FilterUIHint%2A>ページ マークアップ内のプロパティです。</span><span class="sxs-lookup"><span data-stu-id="e22ec-120">By using the <xref:System.Web.DynamicData.DynamicFilter.FilterUIHint%2A> property in page markup.</span></span> <span data-ttu-id="e22ec-121">この方法は、プレゼンテーション層のカスタマイズではスキーマ (データベース) に依存しないと、1 つのページに適用されます。</span><span class="sxs-lookup"><span data-stu-id="e22ec-121">This approach is a presentation-layer customization, which is independent of the schema (database), and which applies to a single page.</span></span>  
  
-   <span data-ttu-id="e22ec-122">使用して、<xref:System.ComponentModel.DataAnnotations.FilterUIHintAttribute>モデルの属性です。</span><span class="sxs-lookup"><span data-stu-id="e22ec-122">By using the <xref:System.ComponentModel.DataAnnotations.FilterUIHintAttribute> attribute in the model.</span></span> <span data-ttu-id="e22ec-123">この方法は、データ層のカスタマイズ、特定のスキーマ (データベース) に依存して、アプリケーション全体に適用されます。</span><span class="sxs-lookup"><span data-stu-id="e22ec-123">This approach is a data-layer customization, which depends on the specific schema (database), and which applies to the entire application.</span></span>  
  
 <span data-ttu-id="e22ec-124">両方のアプローチを使用する場合は、マークアップで指定されているフィルターのテンプレートが、データ モデルで指定されているテンプレートよりも優先されます。</span><span class="sxs-lookup"><span data-stu-id="e22ec-124">If you use both approaches, the filter template that is specified in the markup takes precedence over the template that is specified in the data model.</span></span>  
  
<a name="ClassContext"></a>   
## <a name="class-context"></a><span data-ttu-id="e22ec-125">クラスのコンテキスト</span><span class="sxs-lookup"><span data-stu-id="e22ec-125">Class Context</span></span>  
 <span data-ttu-id="e22ec-126"><xref:System.Web.DynamicData.DynamicFilter>コントロールを使用するように設計された、<xref:System.Web.UI.WebControls.QueryExtender>コントロール。</span><span class="sxs-lookup"><span data-stu-id="e22ec-126">The <xref:System.Web.DynamicData.DynamicFilter> control is designed to work with the <xref:System.Web.UI.WebControls.QueryExtender> control.</span></span> <span data-ttu-id="e22ec-127"><xref:System.Web.DynamicData.DynamicFilter>コントロールで参照されます、<xref:System.Web.DynamicData.DynamicFilterExpression>内インスタンス、<xref:System.Web.UI.WebControls.QueryExtender>ページ マークアップ内のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e22ec-127">The <xref:System.Web.DynamicData.DynamicFilter> control is referenced by a <xref:System.Web.DynamicData.DynamicFilterExpression> instance inside a <xref:System.Web.UI.WebControls.QueryExtender> object in the page markup.</span></span>  
  
 <span data-ttu-id="e22ec-128">次の図は、動的なデータがテーブル行の外部キー列でフィルター処理を実装するために次の手順を示します。</span><span class="sxs-lookup"><span data-stu-id="e22ec-128">The following figure shows the steps that Dynamic Data follows in order to implement table row filtering by a foreign-key column.</span></span>  
  
 <span data-ttu-id="e22ec-129">![動的データ クエリ要素](~/add/media/dynamic-dataquery.png "動的データ クエリ要素")</span><span class="sxs-lookup"><span data-stu-id="e22ec-129">![Dynamic Data Query Elements](~/add/media/dynamic-dataquery.png "Dynamic Data Query Elements")</span></span>  
  
1.  <span data-ttu-id="e22ec-130"><xref:System.Web.DynamicData.DynamicFilter>コントロールを選択した値を渡します、<xref:System.Web.UI.WebControls.QueryExtender>コントロール。</span><span class="sxs-lookup"><span data-stu-id="e22ec-130">The <xref:System.Web.DynamicData.DynamicFilter> control passes the selected value to the <xref:System.Web.UI.WebControls.QueryExtender> control.</span></span>  
  
2.  <span data-ttu-id="e22ec-131"><xref:System.Web.UI.WebControls.QueryExtender>コントロールでは、値を使用して、情報をフィルター処理、クエリを作成します。</span><span class="sxs-lookup"><span data-stu-id="e22ec-131">The <xref:System.Web.UI.WebControls.QueryExtender> control uses the value to create the query filtering information.</span></span> <span data-ttu-id="e22ec-132">次に、この情報をデータ ソース コントロールに渡します。</span><span class="sxs-lookup"><span data-stu-id="e22ec-132">It then passes this information to the data source control.</span></span>  
  
3.  <span data-ttu-id="e22ec-133">データ ソース コントロールは、フィルターのクエリ情報をデータ ソース プロバイダーに渡します。</span><span class="sxs-lookup"><span data-stu-id="e22ec-133">The data source control passes the filtering query information to the data source provider.</span></span>  
  
4.  <span data-ttu-id="e22ec-134">データ ソース プロバイダーでは、データベースにクエリを渡します。</span><span class="sxs-lookup"><span data-stu-id="e22ec-134">The data source provider passes the query to the database.</span></span>  
  
5.  <span data-ttu-id="e22ec-135">データベースでは、フィルター選択されたテーブルの行を返します。</span><span class="sxs-lookup"><span data-stu-id="e22ec-135">The database returns the filtered table rows.</span></span>  
  
6.  <span data-ttu-id="e22ec-136">データ ソース プロバイダーでは、データ ソース コントロールにこのデータを送信します。</span><span class="sxs-lookup"><span data-stu-id="e22ec-136">The data source provider sends this data back to the data source control.</span></span>  
  
7.  <span data-ttu-id="e22ec-137">データ ソース コントロールでは、表示用のデータ バインド コントロールにフィルター選択されたテーブルの行を渡します。</span><span class="sxs-lookup"><span data-stu-id="e22ec-137">The data source control passes the filtered table rows to the data-bound control for display.</span></span>  
  
<a name="DeclarativeSyntax"></a>   
## <a name="declarative-syntax"></a><span data-ttu-id="e22ec-138">宣言型の構文</span><span class="sxs-lookup"><span data-stu-id="e22ec-138">Declarative Syntax</span></span>  
  
```  
<asp:DynamicFilter  
    ID="Control ID"  
    DataField="Name of the data field to use for filtering"  
    EnableViewState="True|False"   
    FilterUIHint="Name of the filter template to generate the UI"  
    OnFilterChanged="Filter changed event handler"  
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"   
    Visible="True|False"  
    runat="server"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="e22ec-139">Visual Studio プロジェクトとソース コードがこの場所で使用可能な:[ダウンロード](http://go.microsoft.com/fwlink/?LinkId=168914)です。</span><span class="sxs-lookup"><span data-stu-id="e22ec-139">A Visual Studio project with source code is available at this location: [Download](http://go.microsoft.com/fwlink/?LinkId=168914).</span></span>  
  
 <span data-ttu-id="e22ec-140">次の例では、既定 ForeignKey.ascx フィルター テンプレートを使用して、ProductCategory の外部キー列によって、製品テーブルの行をフィルター処理するための UI を作成します。</span><span class="sxs-lookup"><span data-stu-id="e22ec-140">The following examples use the default ForeignKey.ascx filter template to create the UI for filtering the Products table rows by the ProductCategory foreign-key column.</span></span> <span data-ttu-id="e22ec-141">ユーザーは、ProductCategory の値を選択するときの値を含む行のみが表示されます。</span><span class="sxs-lookup"><span data-stu-id="e22ec-141">When the user selects a ProductCategory value, only the rows that contain that value are displayed.</span></span>  
  
 <span data-ttu-id="e22ec-142">次の例が必要です。</span><span class="sxs-lookup"><span data-stu-id="e22ec-142">The example requires the following:</span></span>  
  
-   <span data-ttu-id="e22ec-143">動的データ Web サイトまたは動的データ Web アプリケーションです。</span><span class="sxs-lookup"><span data-stu-id="e22ec-143">A Dynamic Data Web site or a Dynamic Data Web application.</span></span> <span data-ttu-id="e22ec-144">これにより、作成、`AdventureWorksLTDataContext`データ コンテキスト、データベースとテーブルにアクセスするためのクラスを作成します。</span><span class="sxs-lookup"><span data-stu-id="e22ec-144">This enables you to create the `AdventureWorksLTDataContext` data context for the database and to create the classes for the tables to access.</span></span> <span data-ttu-id="e22ec-145">詳細については、「`Walkthrough: Creating a New Dynamic Data Web Site using Scaffolding`」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="e22ec-145">For more information, see `Walkthrough: Creating a New Dynamic Data Web Site using Scaffolding`.</span></span>  
  
 [!code-aspx-csharp[System.Web.DynamicData.DynamicFilter#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.dynamicdata.dynamicfilter/cs/dynamicfilter.aspx#1)]
 [!code-aspx-vb[System.Web.DynamicData.DynamicFilter#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.dynamicdata.dynamicfilter/vb/dynamicfilter.aspx#1)]  
  
 [!code-csharp[System.Web.DynamicData.DynamicFilter#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.dynamicdata.dynamicfilter/cs/dynamicfilter.aspx.cs#2)]
 [!code-vb[System.Web.DynamicData.DynamicFilter#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.dynamicdata.dynamicfilter/vb/dynamicfilter.aspx.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.DynamicData.QueryableFilterRepeater" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DynamicFilter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicFilter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DynamicFilter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e22ec-146">
            <see cref="T:System.Web.DynamicData.DynamicFilter" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e22ec-146">Initializes a new instance of the <see cref="T:System.Web.DynamicData.DynamicFilter" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e22ec-147">通常呼び出すことはありません、<xref:System.Web.DynamicData.DynamicFilter.%23ctor%2A>直接コンス トラクターです。</span><span class="sxs-lookup"><span data-stu-id="e22ec-147">Typically you do not call the <xref:System.Web.DynamicData.DynamicFilter.%23ctor%2A> constructor directly.</span></span> <span data-ttu-id="e22ec-148">代わりに、使用する、<xref:System.Web.DynamicData.DynamicFilter>ページ マークアップ内のクラスとクラスには、ページが読み込まれるときに初期化されます。</span><span class="sxs-lookup"><span data-stu-id="e22ec-148">Instead, you use the <xref:System.Web.DynamicData.DynamicFilter> class in page markup and the class is initialized when the page is loaded.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Column">
      <MemberSignature Language="C#" Value="protected internal System.Web.DynamicData.MetaColumn Column { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.MetaColumn Column" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicFilter.Column" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property Column As MetaColumn" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Web::DynamicData::MetaColumn ^ Column { System::Web::DynamicData::MetaColumn ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Column : System.Web.DynamicData.MetaColumn" Usage="System.Web.DynamicData.DynamicFilter.Column" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaColumn</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e22ec-149">フィルター処理に使用するテーブル列を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e22ec-149">Gets or sets the table column to use for filtering.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e22ec-150">フィルター処理に使用するテーブル列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e22ec-150">The table column to use for filtering.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e22ec-151">このプロパティは内部でのみ使用されます。</span><span class="sxs-lookup"><span data-stu-id="e22ec-151">This property is for internal use only.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataField">
      <MemberSignature Language="C#" Value="public string DataField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataField" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicFilter.DataField" />
      <MemberSignature Language="VB.NET" Value="Public Property DataField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataField : string with get, set" Usage="System.Web.DynamicData.DynamicFilter.DataField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e22ec-152">テーブル行のフィルター処理に使用する列の名前を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e22ec-152">Gets or sets the name of the column to use for table row filtering.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e22ec-153">テーブル行のフィルター処理に使用する列の名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e22ec-153">The name of the column used for table row filtering.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e22ec-154">次の例では、マークアップでのフィルタ リング テーブル行の列を指定する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="e22ec-154">The following example shows how to specify the column for table row filtering in markup.</span></span>  
  
```  
<asp:DynamicFilter ID="CategoryFilter" runat="server"   
    DataField="ProductCategory" />  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterChanged">
      <MemberSignature Language="C#" Value="public event EventHandler FilterChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler FilterChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.DynamicData.DynamicFilter.FilterChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event FilterChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ FilterChanged;" />
      <MemberSignature Language="F#" Value="member this.FilterChanged : EventHandler " Usage="member this.FilterChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e22ec-155">ユーザーが外部キーの値を選択すると発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e22ec-155">Occurs when the user select a value for the foreign key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e22ec-156"><xref:System.Web.DynamicData.DynamicFilter.FilterChanged>イベントは、新しい値が表示される前に、ユーザーは、外部キーの値を選択したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="e22ec-156">The <xref:System.Web.DynamicData.DynamicFilter.FilterChanged> event is raised when the user selects a foreign-key value and before the new value is rendered.</span></span> <span data-ttu-id="e22ec-157">これにより、カスタム ページングなどのカスタム操作を実行できるイベント処理メソッドを提供できます。</span><span class="sxs-lookup"><span data-stu-id="e22ec-157">This enables you to provide an event-handling method that can perform custom operations, such as custom paging.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e22ec-158">次の例では、フィルターの変更イベントを処理する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="e22ec-158">The following example shows how to handle a filter-changed event.</span></span> <span data-ttu-id="e22ec-159">ハンドラーは、フィルター選択された行が表示される前に ページのインデックスをリセットします。</span><span class="sxs-lookup"><span data-stu-id="e22ec-159">The handler resets the page index before the filtered rows are displayed.</span></span>  
  
 [!code-csharp[System.Web.DynamicData.DynamicFilter#3](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.dynamicdata.dynamicfilter/cs/dynamicfilter.aspx.cs#3)]
 [!code-vb[System.Web.DynamicData.DynamicFilter#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.dynamicdata.dynamicfilter/vb/dynamicfilter.aspx.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterTemplate">
      <MemberSignature Language="C#" Value="public System.Web.UI.Control FilterTemplate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Control FilterTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicFilter.FilterTemplate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FilterTemplate As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::Control ^ FilterTemplate { System::Web::UI::Control ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FilterTemplate : System.Web.UI.Control" Usage="System.Web.DynamicData.DynamicFilter.FilterTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e22ec-160">このコントロールの現在のインスタンスに関連付けられた、フィルター テンプレートを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e22ec-160">Gets the filter template that is associated with the current instance of this control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e22ec-161">このコントロールの現在のインスタンスに関連付けられた、フィルター テンプレート。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e22ec-161">The filter template that is associated with the current instance of this control.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e22ec-162">動的なデータは、サポートされている列の型のテーブル行をフィルター処理するための UI を生成します。</span><span class="sxs-lookup"><span data-stu-id="e22ec-162">Dynamic Data generates the UI for filtering table rows for supported column types.</span></span> <span data-ttu-id="e22ec-163">~\DynamicData\Filters フォルダー内にある既定のフィルターのテンプレートを使用します。</span><span class="sxs-lookup"><span data-stu-id="e22ec-163">It uses the default filter templates that are in the ~\DynamicData\Filters folder.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterUIHint">
      <MemberSignature Language="C#" Value="public string FilterUIHint { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FilterUIHint" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicFilter.FilterUIHint" />
      <MemberSignature Language="VB.NET" Value="Public Property FilterUIHint As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FilterUIHint { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FilterUIHint : string with get, set" Usage="System.Web.DynamicData.DynamicFilter.FilterUIHint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e22ec-164">UI の作成に使用するフィルター テンプレートの名前を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e22ec-164">Gets or sets the name of the filter template that is used to create the UI.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e22ec-165">フィルター テンプレートの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e22ec-165">The name of the filter template.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e22ec-166"><xref:System.Web.DynamicData.DynamicFilter.FilterUIHint%2A>プロパティを使用して、テーブル行のフィルター処理するための UI を作成するフィルターのテンプレートを指定できます。</span><span class="sxs-lookup"><span data-stu-id="e22ec-166">The <xref:System.Web.DynamicData.DynamicFilter.FilterUIHint%2A> property lets you specify the filter template to create the UI for table row filtering.</span></span> <span data-ttu-id="e22ec-167">次の方法で使用するフィルターのテンプレートを指定できます。</span><span class="sxs-lookup"><span data-stu-id="e22ec-167">You can specify the filter template to use in the following ways:</span></span>  
  
-   <span data-ttu-id="e22ec-168">使用して、<xref:System.Web.DynamicData.DynamicFilter.FilterUIHint%2A>ページ マークアップ内のプロパティです。</span><span class="sxs-lookup"><span data-stu-id="e22ec-168">By using the <xref:System.Web.DynamicData.DynamicFilter.FilterUIHint%2A> property in page markup.</span></span> <span data-ttu-id="e22ec-169">この方法は、プレゼンテーション層のカスタマイズではスキーマ (データベース) に依存しないと、1 つのページに適用されます。</span><span class="sxs-lookup"><span data-stu-id="e22ec-169">This approach is a presentation-layer customization, which is independent of the schema (database) and which applies to a single page.</span></span>  
  
-   <span data-ttu-id="e22ec-170">使用して、<xref:System.ComponentModel.DataAnnotations.FilterUIHintAttribute>モデルの属性です。</span><span class="sxs-lookup"><span data-stu-id="e22ec-170">By using the <xref:System.ComponentModel.DataAnnotations.FilterUIHintAttribute> attribute in the model.</span></span> <span data-ttu-id="e22ec-171">この方法は、データ層のカスタマイズ、特定のスキーマ (データベース) に依存して、アプリケーション全体に適用されます。</span><span class="sxs-lookup"><span data-stu-id="e22ec-171">This approach is a data-layer customization, which depends on the specific schema (database) and which applies to the entire application.</span></span>  
  
 <span data-ttu-id="e22ec-172">両方のアプローチを使用する場合は、マークアップで指定されたフィルターのテンプレートが、データ モデルに指定されたテンプレートよりも優先されます。</span><span class="sxs-lookup"><span data-stu-id="e22ec-172">If you use both approaches, the filter template specified in the markup takes precedence over the template specified in the data model.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e22ec-173">次の例では、フィルター処理に使用するマークアップでフィルター テンプレートを指定する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="e22ec-173">The following example shows how to specify the filter template in markup to use for filtering.</span></span>  
  
```  
<asp:DynamicFilter ID="CategoryFilter" runat="server"   
    FilterUIHint="ForeignKey" />  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicFilter.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member Render : System.Web.UI.HtmlTextWriter -&gt; unit&#xA;override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="dynamicFilter.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="e22ec-174">サーバー コントロールのコンテンツを受け取るオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e22ec-174">The object that receives the server control content.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e22ec-175">指定された <see cref="T:System.Web.UI.HtmlTextWriter" /> オブジェクトにサーバー コントロールのコンテンツを送信します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e22ec-175">Sends server control content to the specified <see cref="T:System.Web.UI.HtmlTextWriter" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e22ec-176">ライターは、ページにコンテンツをレンダリングします。</span><span class="sxs-lookup"><span data-stu-id="e22ec-176">The writer renders the content to the page.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.DynamicData.IFilterExpressionProvider.GetQueryable">
      <MemberSignature Language="C#" Value="System.Linq.IQueryable IFilterExpressionProvider.GetQueryable (System.Linq.IQueryable source);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Linq.IQueryable System.Web.DynamicData.IFilterExpressionProvider.GetQueryable(class System.Linq.IQueryable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicFilter.System#Web#DynamicData#IFilterExpressionProvider#GetQueryable(System.Linq.IQueryable)" />
      <MemberSignature Language="VB.NET" Value="Function GetQueryable (source As IQueryable) As IQueryable Implements IFilterExpressionProvider.GetQueryable" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Linq::IQueryable ^ System.Web.DynamicData.IFilterExpressionProvider.GetQueryable(System::Linq::IQueryable ^ source) = System::Web::DynamicData::IFilterExpressionProvider::GetQueryable;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IFilterExpressionProvider.GetQueryable(System.Linq.IQueryable)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="e22ec-177">データ ソース クエリ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e22ec-177">The data source query.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e22ec-178">現在のフィルター値を使用して変更されたクエリを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e22ec-178">Gets the modified query using the current filter value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e22ec-179">フィルターです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e22ec-179">The filter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e22ec-180">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="e22ec-180">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e22ec-181">これは、<xref:System.Web.DynamicData.DynamicFilter> のインスタンスが <xref:System.Web.DynamicData.IFilterExpressionProvider> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="e22ec-181">It can be used only when the <xref:System.Web.DynamicData.DynamicFilter> instance is cast to an <xref:System.Web.DynamicData.IFilterExpressionProvider> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.DynamicData.IFilterExpressionProvider.Initialize">
      <MemberSignature Language="C#" Value="void IFilterExpressionProvider.Initialize (System.Web.UI.WebControls.IQueryableDataSource dataSource);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.DynamicData.IFilterExpressionProvider.Initialize(class System.Web.UI.WebControls.IQueryableDataSource dataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicFilter.System#Web#DynamicData#IFilterExpressionProvider#Initialize(System.Web.UI.WebControls.IQueryableDataSource)" />
      <MemberSignature Language="VB.NET" Value="Sub Initialize (dataSource As IQueryableDataSource) Implements IFilterExpressionProvider.Initialize" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.DynamicData.IFilterExpressionProvider.Initialize(System::Web::UI::WebControls::IQueryableDataSource ^ dataSource) = System::Web::DynamicData::IFilterExpressionProvider::Initialize;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IFilterExpressionProvider.Initialize(System.Web.UI.WebControls.IQueryableDataSource)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Web.UI.WebControls.IQueryableDataSource" />
      </Parameters>
      <Docs>
        <param name="dataSource">
          <span data-ttu-id="e22ec-182">データ ソース。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e22ec-182">The data source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e22ec-183">
            <see cref="T:System.Web.DynamicData.DynamicFilter" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e22ec-183">Initializes a new instance of the <see cref="T:System.Web.DynamicData.DynamicFilter" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e22ec-184">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="e22ec-184">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e22ec-185">これは、<xref:System.Web.DynamicData.DynamicFilter> のインスタンスが <xref:System.Web.DynamicData.IFilterExpressionProvider> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="e22ec-185">It can be used only when the <xref:System.Web.DynamicData.DynamicFilter> instance is cast to an <xref:System.Web.DynamicData.IFilterExpressionProvider> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>