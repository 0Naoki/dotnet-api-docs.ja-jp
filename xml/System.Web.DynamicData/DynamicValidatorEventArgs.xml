<Type Name="DynamicValidatorEventArgs" FullName="System.Web.DynamicData.DynamicValidatorEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6f925b0977265d7d416c6bf77c7e57f9b40bb0be" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30537146" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DynamicValidatorEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DynamicValidatorEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.DynamicValidatorEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class DynamicValidatorEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class DynamicValidatorEventArgs : EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>イベント データが格納されている <see cref="T:System.Web.DynamicData.DynamicValidator" /> クラスの基本クラスです。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.DynamicData.DynamicValidator>クラスは LINQ to SQL クラスやデータ モデルの Entity Framework メソッドからスローされる例外をキャッチします。 このクラスでは、イベント データは含まれません。 イベントが発生したときに状態情報をイベント ハンドラーに渡さないイベントによって使用されます。 イベント ハンドラーは、状態情報を必要とする場合は、データを保持するには、このクラスから派生クラスを作成する必要があります。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DynamicValidatorEventArgs (Exception exception, System.Web.DynamicData.DynamicDataSourceOperation operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Exception exception, valuetype System.Web.DynamicData.DynamicDataSourceOperation operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicValidatorEventArgs.#ctor(System.Exception,System.Web.DynamicData.DynamicDataSourceOperation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DynamicValidatorEventArgs(Exception ^ exception, System::Web::DynamicData::DynamicDataSourceOperation operation);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
        <Parameter Name="operation" Type="System.Web.DynamicData.DynamicDataSourceOperation" />
      </Parameters>
      <Docs>
        <param name="exception">発生した例外。</param>
        <param name="operation">例外の原因となったデータ ソース操作。</param>
        <summary>発生した例外およびその例外の原因となったデータ ソース操作に基づいて、<see cref="T:System.Web.DynamicData.DynamicValidatorEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET 動的データは、データ ソース オブジェクトで実行できるデータ ソースの操作を提供します。 これらの操作を含める`Delete`、 `Insert`、`Select`と`Update`と`ContextCreate`です。 例外と発生した例外の原因となったデータ ソース操作がによって表される場合は、データ ソース操作中に例外が発生した、<xref:System.Web.DynamicData.DynamicValidatorEventArgs.Operation%2A>と<xref:System.Web.DynamicData.DynamicValidatorEventArgs.Exception%2A>それぞれします。  
  
 このコンス トラクターは、の新しいインスタンスを初期化します、<xref:System.Web.DynamicData.DynamicValidatorEventArgs>クラスこれらのプロパティを使用します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicValidatorEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ ソース操作イベント時に発生した例外を取得します。</summary>
        <value>データ ソース操作イベント時に発生した例外。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET 動的データは、データ ソース オブジェクトで実行できるデータ ソースの操作を提供します。 これらの操作を含める`Delete`、 `Insert`、`Select`と`Update`と`ContextCreate`です。 例外が発生する場合、<xref:System.Web.DynamicData.DynamicValidator>クラスでは、このプロパティを使用してデータ ソース操作中に発生する例外の種類を取得します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Operation">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.DynamicDataSourceOperation Operation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.DynamicData.DynamicDataSourceOperation Operation" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicValidatorEventArgs.Operation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Operation As DynamicDataSourceOperation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::DynamicDataSourceOperation Operation { System::Web::DynamicData::DynamicDataSourceOperation get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.DynamicDataSourceOperation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.DynamicData.DynamicValidator" /> クラスの例外の原因となったデータ ソース操作を取得します。</summary>
        <value>例外の原因となったデータ ソース操作。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET 動的データは、データ ソース オブジェクトで実行できるデータ ソースの操作を提供します。 これらの操作を含める`Delete`、 `Insert`、`Select`と`Update`と`ContextCreate`です。 例外が発生する場合、<xref:System.Web.DynamicData.DynamicValidator>クラスでは、このプロパティを使用して、その例外をトリガーした操作を取得します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>