<Type Name="OracleLob" FullName="System.Data.OracleClient.OracleLob">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a83f377d4f34b227bcd3770e76cd7f0e774d7ce6" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70684504" /></Metadata><TypeSignature Language="C#" Value="public sealed class OracleLob : System.IO.Stream, ICloneable, System.Data.SqlTypes.INullable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OracleLob extends System.IO.Stream implements class System.Data.SqlTypes.INullable, class System.ICloneable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Data.OracleClient.OracleLob" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OracleLob&#xA;Inherits Stream&#xA;Implements ICloneable, INullable" />
  <TypeSignature Language="C++ CLI" Value="public ref class OracleLob sealed : System::IO::Stream, ICloneable, System::Data::SqlTypes::INullable" />
  <TypeSignature Language="F#" Value="type OracleLob = class&#xA;    inherit Stream&#xA;    interface ICloneable&#xA;    interface IDisposable&#xA;    interface INullable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.OracleClient</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.Stream</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.SqlTypes.INullable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="794e2-101">Oracle サーバーに格納される、<see langword="LOB" /> (Large Object Binary) データ型を表します。</span><span class="sxs-lookup"><span data-stu-id="794e2-101">Represents a large object binary (<see langword="LOB" />) data type stored on an Oracle server.</span></span> <span data-ttu-id="794e2-102">このクラスは継承できません。</span><span class="sxs-lookup"><span data-stu-id="794e2-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="794e2-103">は、データが<xref:System.Data.OracleClient.OracleBFile>オペレーティングシステムの物理ファイルではなくサーバーに格納されるという点で、とは異なります。 <xref:System.Data.OracleClient.OracleLob></span><span class="sxs-lookup"><span data-stu-id="794e2-103">An <xref:System.Data.OracleClient.OracleLob> differs from an <xref:System.Data.OracleClient.OracleBFile> in that the data is stored on the server instead of in a physical file in the operating system.</span></span> <span data-ttu-id="794e2-104">常に読み取り専用であるとは異なり<xref:System.Data.OracleClient.OracleBFile>、読み取り/書き込みオブジェクトにすることもできます。</span><span class="sxs-lookup"><span data-stu-id="794e2-104">It can also be a read-write object, unlike an <xref:System.Data.OracleClient.OracleBFile>, which is always read-only.</span></span>  
  
 <span data-ttu-id="794e2-105">に<xref:System.Data.OracleClient.OracleLob>は、次<xref:System.Data.OracleClient.OracleType>のいずれかのデータ型を指定できます。</span><span class="sxs-lookup"><span data-stu-id="794e2-105">An <xref:System.Data.OracleClient.OracleLob> may be one of these <xref:System.Data.OracleClient.OracleType> data types.</span></span>  
  
|<span data-ttu-id="794e2-106">OracleType データ型</span><span class="sxs-lookup"><span data-stu-id="794e2-106">OracleType data type</span></span>|<span data-ttu-id="794e2-107">説明</span><span class="sxs-lookup"><span data-stu-id="794e2-107">Description</span></span>|  
|--------------------------|-----------------|  
|`Blob`|<span data-ttu-id="794e2-108">最大サイズ`BLOB`が 4 gb のバイナリデータを含む Oracle データ型。</span><span class="sxs-lookup"><span data-stu-id="794e2-108">An Oracle `BLOB` data type that contains binary data with a maximum size of 4 gigabytes (GB).</span></span> <span data-ttu-id="794e2-109"><xref:System.Array> 型の <xref:System.Byte> に割り当てられます。</span><span class="sxs-lookup"><span data-stu-id="794e2-109">This maps to an <xref:System.Array> of type <xref:System.Byte>.</span></span>|  
|`Clob`|<span data-ttu-id="794e2-110">サーバー上`CLOB`の既定の文字セットに基づいた文字データを格納する Oracle データ型。最大サイズは 4 GB です。</span><span class="sxs-lookup"><span data-stu-id="794e2-110">An Oracle `CLOB` data type that contains character data, based on the default character set on the server, with a maximum size of 4 GB.</span></span> <span data-ttu-id="794e2-111"><xref:System.String> に割り当てられます。</span><span class="sxs-lookup"><span data-stu-id="794e2-111">This maps to <xref:System.String>.</span></span>|  
|`NClob`|<span data-ttu-id="794e2-112">最大サイズ`NCLOB`が 4 GB のサーバー上の各国語文字セットに基づいて、文字データを格納する Oracle データ型。</span><span class="sxs-lookup"><span data-stu-id="794e2-112">An Oracle `NCLOB` data type that contains character data, based on the national character set on the server with a maximum size of 4 GB.</span></span> <span data-ttu-id="794e2-113"><xref:System.String> に割り当てられます。</span><span class="sxs-lookup"><span data-stu-id="794e2-113">This maps to <xref:System.String>.</span></span>|  
  
 <span data-ttu-id="794e2-114">.Net アプリケーション開発者は、 `LOB` Oracle の値を、型や<xref:System.String>型<xref:System.Byte>など<xref:System.Array>の基本的な .net データ型、または<xref:System.Data.OracleClient.OracleLob>特殊なデータ型に取得できます。</span><span class="sxs-lookup"><span data-stu-id="794e2-114">A .NET application developer can retrieve the Oracle `LOB` values into basic .NET data types, such as <xref:System.Array> of type <xref:System.Byte> and <xref:System.String>, or the specialized <xref:System.Data.OracleClient.OracleLob> data type.</span></span> <span data-ttu-id="794e2-115">クラス<xref:System.Data.OracleClient.OracleLob>では、oracle データベースの oracle `LOB`に対するデータの読み取りと書き込みをサポートしています。</span><span class="sxs-lookup"><span data-stu-id="794e2-115">The <xref:System.Data.OracleClient.OracleLob> class supports reading data from and writing to the Oracle `LOB` in the Oracle database.</span></span>  
  
 <span data-ttu-id="794e2-116">基本的な .net データ型と区別する<xref:System.Data.OracleClient.OracleLob>データ型の主な特性は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="794e2-116">The following are the main characteristics of an <xref:System.Data.OracleClient.OracleLob> data type that distinguish it from basic .NET data types:</span></span>  
  
-   <span data-ttu-id="794e2-117">Oracle データベースから<xref:System.Data.OracleClient.OracleLob>クラスに`LOB` oracle の値を取得した後は、開いている`LOB`トランザクションのデータを変更することができ、変更内容はデータベースに直接反映されます。</span><span class="sxs-lookup"><span data-stu-id="794e2-117">After you retrieve the Oracle `LOB` value from the Oracle database into the <xref:System.Data.OracleClient.OracleLob> class, you can change the `LOB` data in an open transaction and your changes are directly reflected to the database.</span></span> <span data-ttu-id="794e2-118">Oracle `LOB`の値<xref:System.Array>を型または<xref:System.String>型<xref:System.Byte>のに取得し、これらの配列を更新した場合、変更内容はデータベースに反映されません。</span><span class="sxs-lookup"><span data-stu-id="794e2-118">If you retrieve the Oracle `LOB` value into an <xref:System.Array> of type <xref:System.Byte> or <xref:System.String> and update these arrays, your changes are not reflected to the database.</span></span>  
  
-   <span data-ttu-id="794e2-119"><xref:System.Data.OracleClient.OracleLob>クラスを使用して`LOB`値のチャンクにアクセスする場合、そのチャンクのみが Oracle データベースからクライアントに渡されます。</span><span class="sxs-lookup"><span data-stu-id="794e2-119">When you use the <xref:System.Data.OracleClient.OracleLob> class to access a chunk of a `LOB` value, only that chunk is passed from the Oracle database to the client.</span></span> <span data-ttu-id="794e2-120">メソッドを使用し<xref:System.Data.OracleClient.OracleDataReader.GetChars%2A>て`LOB`値のチャンクにアクセスする場合、値の内容全体が Oracle データベースからクライアントに渡されます。</span><span class="sxs-lookup"><span data-stu-id="794e2-120">When you use the <xref:System.Data.OracleClient.OracleDataReader.GetChars%2A> method to access a chunk of a `LOB` value, the entire contents of the value are passed from the Oracle database to the client.</span></span>  
  
 <span data-ttu-id="794e2-121"><xref:System.Data.OracleClient.OracleLob>オブジェクトを取得するには、 <xref:System.Data.OracleClient.OracleDataReader.GetOracleLob%2A>メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="794e2-121">To obtain an <xref:System.Data.OracleClient.OracleLob> object, call the <xref:System.Data.OracleClient.OracleDataReader.GetOracleLob%2A> method.</span></span>  
  
 <span data-ttu-id="794e2-122">次の形式を<xref:System.Data.OracleClient.OracleLob>使用して、NULL であるを構築できます。</span><span class="sxs-lookup"><span data-stu-id="794e2-122">You can construct an <xref:System.Data.OracleClient.OracleLob> that is NULL using this format:</span></span>  
  
```  
OracleLob myLob = OracleLob.Null;  
```  
  
 <span data-ttu-id="794e2-123">この手法は、主に、サーバーから`LOB`返されたが NULL であるかどうかをテストするために使用されます。この例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="794e2-123">This technique is used primarily to test whether a `LOB` returned from the server is NULL, as this example illustrates:</span></span>  
  
```  
If(myLob == OracleLob.Null)  
```  
  
 <span data-ttu-id="794e2-124">NULL `LOB`は、で<xref:System.Data.OracleClient.OracleLob.Read%2A>成功し、常に`LOB` 0 バイトを返すの0バイトと同様に動作します。</span><span class="sxs-lookup"><span data-stu-id="794e2-124">A NULL `LOB` behaves similarly to a zero-byte `LOB` in that <xref:System.Data.OracleClient.OracleLob.Read%2A> succeeds and always returns zero bytes.</span></span>  
  
 <span data-ttu-id="794e2-125">Null 値を含む<xref:System.Data.OracleClient.OracleLob.Null>列を選択すると、が返されます。 `LOB`</span><span class="sxs-lookup"><span data-stu-id="794e2-125">Selecting a `LOB` column that contains a null value returns <xref:System.Data.OracleClient.OracleLob.Null>.</span></span>  
  
 <span data-ttu-id="794e2-126">一時`LOB`を取得する前に、トランザクションを開始する必要があります。</span><span class="sxs-lookup"><span data-stu-id="794e2-126">You must begin a transaction before obtaining a temporary `LOB`.</span></span> <span data-ttu-id="794e2-127">それ以外の<xref:System.Data.OracleClient.OracleDataReader>場合、は後でデータの取得に失敗する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="794e2-127">Otherwise, the <xref:System.Data.OracleClient.OracleDataReader> may fail to obtain data later.</span></span>  
  
 <span data-ttu-id="794e2-128">DBMS_LOB を呼び出すことに`LOB`より、Oracle で一時的なを開くこともできます。Createtemporary システムストアドプロシージャを指定し`LOB` 、出力パラメーターをバインドします。</span><span class="sxs-lookup"><span data-stu-id="794e2-128">You can also open a temporary `LOB` in Oracle by calling the DBMS_LOB.CREATETEMPORARY system stored procedure and binding a `LOB` output parameter.</span></span> <span data-ttu-id="794e2-129">クライアント側では、一時`LOB`はテーブルベース`LOB`のように動作します。</span><span class="sxs-lookup"><span data-stu-id="794e2-129">On the client side, a temporary `LOB` behaves like a table-based `LOB`.</span></span> <span data-ttu-id="794e2-130">たとえば、一時的`LOB`なを更新するには、トランザクションで囲む必要があります。</span><span class="sxs-lookup"><span data-stu-id="794e2-130">For example, to update the temporary `LOB`, it must be enclosed in a transaction.</span></span>  
  
 <span data-ttu-id="794e2-131">次C#の例では、一時`LOB`を開く方法を示します。</span><span class="sxs-lookup"><span data-stu-id="794e2-131">The following C# example demonstrates how to open a temporary `LOB`.</span></span>  
  
```  
OracleConnection connection = new OracleConnection("server=MyServer; integrated security=yes;");  
connection.Open();  
OracleTransaction transaction = connection.BeginTransaction();  
OracleCommand command = connection.CreateCommand();  
command.Transaction = transaction;  
command.CommandText = "declare xx blob; begin dbms_lob.createtemporary(xx, false, 0); :tempblob := xx; end;";  
command.Parameters.Add(new OracleParameter("tempblob", OracleType.Blob)).Direction = ParameterDirection.Output;  
command.ExecuteNonQuery();  
OracleLob tempLob = (OracleLob)command.Parameters[0].Value;  
byte[] tempbuff = new byte[10000];  
tempLob.BeginBatch(OracleLobOpenMode.ReadWrite);  
tempLob.Write(tempbuff,0,tempbuff.Length);  
tempLob.EndBatch();  
command.Parameters.Clear();  
command.CommandText = "MyTable.MyProc";  
command.CommandType = CommandType.StoredProcedure;    
command.Parameters.Add(new OracleParameter("ImportDoc", OracleType.Blob)).Value = tempLob;  
command.ExecuteNonQuery();  
transaction.Commit();  
connection.Close  
```  
  
> [!NOTE]
>  <span data-ttu-id="794e2-132">継承<xref:System.IO.Stream.WriteByte%2A>されたメソッドは、文字データと共に<xref:System.InvalidOperationException>使用すると失敗し、がスローされます。</span><span class="sxs-lookup"><span data-stu-id="794e2-132">The inherited <xref:System.IO.Stream.WriteByte%2A> method fails if used with character data, and an <xref:System.InvalidOperationException> is thrown.</span></span> <span data-ttu-id="794e2-133">代わりに、<xref:System.Data.OracleClient.OracleLob.Write%2A> メソッドを使用してください。</span><span class="sxs-lookup"><span data-stu-id="794e2-133">Use the <xref:System.Data.OracleClient.OracleLob.Write%2A> method instead.</span></span>  
>   
>  <span data-ttu-id="794e2-134">一時的`LOB`なは、接続が閉じられたときにのみ閉じられます。ただし`LOB`、プールと負荷がかかっている場合、一時的なは閉じられません。</span><span class="sxs-lookup"><span data-stu-id="794e2-134">Temporary `LOB`s are only closed when the connection is closed, but with pooling and under load, temporary `LOB`s do not close.</span></span> <span data-ttu-id="794e2-135">これは、を呼び出し`LOB` `tempLob.Dispose()`て一時を破棄することによって解決できます。</span><span class="sxs-lookup"><span data-stu-id="794e2-135">This can be resolved by disposing the temporary `LOB`, by invoking `tempLob.Dispose()`.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (System.Data.OracleClient.OracleLob source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(class System.Data.OracleClient.OracleLob source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleLob.Append(System.Data.OracleClient.OracleLob)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (source As OracleLob)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::Data::OracleClient::OracleLob ^ source);" />
      <MemberSignature Language="F#" Value="member this.Append : System.Data.OracleClient.OracleLob -&gt; unit" Usage="oracleLob.Append source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.OracleClient.OracleLob" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="794e2-136">データの追加元の <see langword="LOB" />。</span><span class="sxs-lookup"><span data-stu-id="794e2-136">The <see langword="LOB" /> from which to append data.</span></span></param>
        <summary><span data-ttu-id="794e2-137">指定した <see langword="LOB" /> のデータを現在の <see langword="LOB" /> に追加します。</span><span class="sxs-lookup"><span data-stu-id="794e2-137">Appends data from the specified <see langword="LOB" /> to the current <see langword="LOB" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="794e2-138">に`LOB`書き込むには、SQL SELECT ステートメントで FOR `LOB` UPDATE 句を使用してを取得しておく必要があります。また、ローカルトランザクションを開始する必要があります。</span><span class="sxs-lookup"><span data-stu-id="794e2-138">To write to the `LOB`, you must have retrieved the `LOB` using the FOR UPDATE clause in the SQL SELECT statement, and you must have a local transaction started.</span></span>  
  
 <span data-ttu-id="794e2-139">ソース`LOB`からのすべてのデータが、現在`LOB`のの末尾に追加されます。</span><span class="sxs-lookup"><span data-stu-id="794e2-139">All data from the source `LOB` is appended to the end of the current `LOB`.</span></span> <span data-ttu-id="794e2-140">このプロセスでは`LOB` 、の位置が評価または変更されません。</span><span class="sxs-lookup"><span data-stu-id="794e2-140">The position of neither `LOB` is evaluated or changed during this process.</span></span>  
  
 <span data-ttu-id="794e2-141">基になるデータ型は、常に同じである必要があります。</span><span class="sxs-lookup"><span data-stu-id="794e2-141">The underlying data types must always be the same.</span></span> <span data-ttu-id="794e2-142">たとえば、から<xref:System.Data.OracleClient.OracleType.NClob>を追加する場合、変換先<xref:System.Data.OracleClient.OracleLob>も<xref:System.Data.OracleClient.OracleType.NClob>である必要があります。</span><span class="sxs-lookup"><span data-stu-id="794e2-142">For example, if you are appending from an <xref:System.Data.OracleClient.OracleType.NClob>, the destination <xref:System.Data.OracleClient.OracleLob> must also be an <xref:System.Data.OracleClient.OracleType.NClob>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="794e2-143">このリリースでは、読み取り`LOB`専用への書き込み操作は成功する可能性がありますが、サーバー上のは`LOB`更新されません。</span><span class="sxs-lookup"><span data-stu-id="794e2-143">In this release, a write operation to a read-only `LOB` might succeed, but does not update the `LOB` on the server.</span></span> <span data-ttu-id="794e2-144">ただし、この場合、の`LOB`ローカルコピーは更新されます。</span><span class="sxs-lookup"><span data-stu-id="794e2-144">In this case, however, the local copy of the `LOB` is updated.</span></span> <span data-ttu-id="794e2-145">そのため、後で<xref:System.Data.OracleClient.OracleLob>オブジェクトに対して読み取り操作を実行すると、書き込み操作の結果が返される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="794e2-145">Therefore, later read operations on the <xref:System.Data.OracleClient.OracleLob> object might return the results of the write operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="794e2-146">ソースの <see cref="T:System.Data.OracleClient.OracleLob" /> が null です。</span><span class="sxs-lookup"><span data-stu-id="794e2-146">The source <see cref="T:System.Data.OracleClient.OracleLob" /> is null.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="794e2-147">ソースの <see cref="T:System.Data.OracleClient.OracleLob" /> が null か、接続が閉じられています。</span><span class="sxs-lookup"><span data-stu-id="794e2-147">The source <see cref="T:System.Data.OracleClient.OracleLob" /> is null, or the connection is closed.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="794e2-148">ソースの <see cref="T:System.Data.OracleClient.OracleLob" /> オブジェクトが閉じているか破棄されています。</span><span class="sxs-lookup"><span data-stu-id="794e2-148">The source <see cref="T:System.Data.OracleClient.OracleLob" /> object was closed or disposed.</span></span></exception>
        <exception cref="T:System.Data.OracleClient.OracleException"><span data-ttu-id="794e2-149">Oracle エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="794e2-149">An Oracle error has occurred.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginBatch">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="794e2-150">複数の書き込み操作の実行中に、サーバー側のトリガーが発生しないようにします。</span><span class="sxs-lookup"><span data-stu-id="794e2-150">Prevents server-side triggers from firing while performing multiple write operations.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginBatch">
      <MemberSignature Language="C#" Value="public void BeginBatch ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginBatch() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleLob.BeginBatch" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginBatch ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginBatch();" />
      <MemberSignature Language="F#" Value="member this.BeginBatch : unit -&gt; unit" Usage="oracleLob.BeginBatch " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="794e2-151">複数の読み取り操作の実行中に、サーバー側のトリガーが発生しないようにします。</span><span class="sxs-lookup"><span data-stu-id="794e2-151">Prevents server-side triggers from firing while performing multiple read operations.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="794e2-152">`LOB` <xref:System.Data.OracleClient.OracleLob.EndBatch%2A>モードでを <xref:System.Data.OracleClient.OracleLobOpenMode.ReadOnly> 開きます。したがって、は、への対応する呼び出しまで、に書き込むことはできません。 `LOB`</span><span class="sxs-lookup"><span data-stu-id="794e2-152">Opens the `LOB` in <xref:System.Data.OracleClient.OracleLobOpenMode.ReadOnly> mode; therefore, the `LOB` can only be read from, not written to, until the corresponding call to <xref:System.Data.OracleClient.OracleLob.EndBatch%2A>.</span></span> <span data-ttu-id="794e2-153">への`LOB`バッチ書き込みを実行するには<xref:System.Data.OracleClient.OracleLobOpenMode.ReadWrite>、を使用してを呼び出し<xref:System.Data.OracleClient.OracleLob.BeginBatch%2A>ます。</span><span class="sxs-lookup"><span data-stu-id="794e2-153">To perform batch writes to the `LOB`, call <xref:System.Data.OracleClient.OracleLob.BeginBatch%2A> with <xref:System.Data.OracleClient.OracleLobOpenMode.ReadWrite>.</span></span>  
  
 <span data-ttu-id="794e2-154">同じ<xref:System.Data.OracleClient.OracleLob.BeginBatch%2A>トランザクション内で複数回呼び出すと、現在、Oracle の "ORA-22293: LOB は同じトランザクションで既に開かれています" というエラーがスローされます。</span><span class="sxs-lookup"><span data-stu-id="794e2-154">Calling <xref:System.Data.OracleClient.OracleLob.BeginBatch%2A> more than one time within the same transaction currently throws the Oracle "ORA-22293: LOB already opened in the same transaction" error.</span></span> <span data-ttu-id="794e2-155">また、別`LOB` <xref:System.Data.OracleClient.OracleDataReader>のを使用してを取得し、元の<xref:System.Data.OracleClient.OracleLob.EndBatch%2A>呼び出し元がメソッドを呼び出していない場合も、同じエラーが生成されます。</span><span class="sxs-lookup"><span data-stu-id="794e2-155">In addition, if you obtain the `LOB` using another <xref:System.Data.OracleClient.OracleDataReader>, and the original caller has not called the <xref:System.Data.OracleClient.OracleLob.EndBatch%2A> method, the same error is generated.</span></span> <span data-ttu-id="794e2-156">そのため、の<xref:System.Data.OracleClient.OracleLob.EndBatch%2A> <xref:System.Data.OracleClient.OracleLob>使用が終了したら、メソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="794e2-156">Therefore, you must call the <xref:System.Data.OracleClient.OracleLob.EndBatch%2A> method when you are finished using the <xref:System.Data.OracleClient.OracleLob>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="794e2-157">接続が閉じています。</span><span class="sxs-lookup"><span data-stu-id="794e2-157">The connection is closed.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="794e2-158">オブジェクトが閉じられているか、破棄されています。</span><span class="sxs-lookup"><span data-stu-id="794e2-158">The object was closed or disposed.</span></span></exception>
        <exception cref="T:System.Data.OracleClient.OracleException"><span data-ttu-id="794e2-159">Oracle エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="794e2-159">An Oracle error has occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginBatch">
      <MemberSignature Language="C#" Value="public void BeginBatch (System.Data.OracleClient.OracleLobOpenMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginBatch(valuetype System.Data.OracleClient.OracleLobOpenMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleLob.BeginBatch(System.Data.OracleClient.OracleLobOpenMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginBatch (mode As OracleLobOpenMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginBatch(System::Data::OracleClient::OracleLobOpenMode mode);" />
      <MemberSignature Language="F#" Value="member this.BeginBatch : System.Data.OracleClient.OracleLobOpenMode -&gt; unit" Usage="oracleLob.BeginBatch mode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.Data.OracleClient.OracleLobOpenMode" />
      </Parameters>
      <Docs>
        <param name="mode"><span data-ttu-id="794e2-160">この <see cref="T:System.Data.OracleClient.OracleLobOpenMode" /> 呼び出しと、対応する <see cref="M:System.Data.OracleClient.OracleLob.BeginBatch(System.Data.OracleClient.OracleLobOpenMode)" /> 呼び出しの間に <see langword="LOB" /> にアクセスできるモード (いずれかの <see cref="M:System.Data.OracleClient.OracleLob.EndBatch" /> 値)。</span><span class="sxs-lookup"><span data-stu-id="794e2-160">Mode (one of the <see cref="T:System.Data.OracleClient.OracleLobOpenMode" /> values) in which the <see langword="LOB" /> can be accessed between this <see cref="M:System.Data.OracleClient.OracleLob.BeginBatch(System.Data.OracleClient.OracleLobOpenMode)" /> call and the corresponding <see cref="M:System.Data.OracleClient.OracleLob.EndBatch" /> call.</span></span></param>
        <summary><span data-ttu-id="794e2-161">指定したアクセス モードでの、複数の読み取り操作と書き込み操作の実行中に、サーバー側のトリガーが発生しないようにします。</span><span class="sxs-lookup"><span data-stu-id="794e2-161">Prevents server-side triggers from firing while performing multiple read and write operations in the specified access mode.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="794e2-162">に`LOB`書き込むには、SQL SELECT ステートメントで FOR `LOB` UPDATE 句を使用してを取得しておく必要があります。また、ローカルトランザクションを開始する必要があります。</span><span class="sxs-lookup"><span data-stu-id="794e2-162">To write to the `LOB`, you must have retrieved the `LOB` using the FOR UPDATE clause in the SQL SELECT statement, and you must have a local transaction started.</span></span>  
  
 <span data-ttu-id="794e2-163">同じ<xref:System.Data.OracleClient.OracleLob.BeginBatch%2A>トランザクション内で複数回呼び出すと、現在、Oracle の "ORA-22293: LOB は同じトランザクションで既に開かれています" というエラーがスローされます。</span><span class="sxs-lookup"><span data-stu-id="794e2-163">Calling <xref:System.Data.OracleClient.OracleLob.BeginBatch%2A> more than one time within the same transaction currently throws the Oracle "ORA-22293: LOB already opened in the same transaction" error.</span></span> <span data-ttu-id="794e2-164">また、別`LOB` <xref:System.Data.OracleClient.OracleDataReader>のを使用してを取得し、元の<xref:System.Data.OracleClient.OracleLob.EndBatch%2A>呼び出し元がメソッドを呼び出していない場合も、同じエラーが生成されます。</span><span class="sxs-lookup"><span data-stu-id="794e2-164">In addition, if you obtain the `LOB` using another <xref:System.Data.OracleClient.OracleDataReader>, and the original caller has not called the <xref:System.Data.OracleClient.OracleLob.EndBatch%2A> method, the same error is generated.</span></span> <span data-ttu-id="794e2-165">そのため、の<xref:System.Data.OracleClient.OracleLob.EndBatch%2A> <xref:System.Data.OracleClient.OracleLob>使用が終了したら、メソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="794e2-165">Therefore, you must call the <xref:System.Data.OracleClient.OracleLob.EndBatch%2A> method when you are finished using the <xref:System.Data.OracleClient.OracleLob>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="794e2-166">接続が閉じています。</span><span class="sxs-lookup"><span data-stu-id="794e2-166">The connection is closed.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="794e2-167">オブジェクトが閉じられているか、破棄されています。</span><span class="sxs-lookup"><span data-stu-id="794e2-167">The object was closed or disposed.</span></span></exception>
        <exception cref="T:System.Data.OracleClient.OracleException"><span data-ttu-id="794e2-168">Oracle エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="794e2-168">An Oracle error has occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public override bool CanRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRead" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleLob.CanRead" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanRead As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRead { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRead : bool" Usage="System.Data.OracleClient.OracleLob.CanRead" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="794e2-169"><see langword="LOB" /> ストリームを読み取ることができるかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="794e2-169">Gets a value indicating whether the <see langword="LOB" /> stream can be read.</span></span></summary>
        <value><span data-ttu-id="794e2-170"><see langword="true" /> ストリームが読み取りをサポートしている場合は <see langword="LOB" />。<see langword="false" /> が閉じているか破棄されている場合は <see langword="LOB" />。</span><span class="sxs-lookup"><span data-stu-id="794e2-170"><see langword="true" /> if the <see langword="LOB" /> stream supports reading, otherwise <see langword="false" /> if a <see langword="LOB" /> is closed or disposed.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSeek">
      <MemberSignature Language="C#" Value="public override bool CanSeek { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSeek" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleLob.CanSeek" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanSeek As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSeek { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSeek : bool" Usage="System.Data.OracleClient.OracleLob.CanSeek" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="794e2-171">前方シークおよび後方シーク操作を実行できるかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="794e2-171">Gets a value indicating whether forward and backward seek operations can be performed.</span></span></summary>
        <value><span data-ttu-id="794e2-172"><see langword="false" /> が閉じているか破棄されている場合は <see langword="LOB" />。それ以外の場合は <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="794e2-172"><see langword="false" /> if a <see langword="LOB" /> is closed or disposed, otherwise <see langword="true" />.</span></span> <span data-ttu-id="794e2-173"><see cref="F:System.Data.OracleClient.OracleLob.Null" /> の場合は、常に <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="794e2-173">Always <see langword="true" /> for <see cref="F:System.Data.OracleClient.OracleLob.Null" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWrite">
      <MemberSignature Language="C#" Value="public override bool CanWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWrite" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleLob.CanWrite" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanWrite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanWrite { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanWrite : bool" Usage="System.Data.OracleClient.OracleLob.CanWrite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="794e2-174"><see langword="LOB" /> が書き込みをサポートしているかどうかに関係なく、常に true を返します。</span><span class="sxs-lookup"><span data-stu-id="794e2-174">Always returns true, regardless of whether the <see langword="LOB" /> supports writing or not.</span></span></summary>
        <value><span data-ttu-id="794e2-175"><see langword="true" /> が開いている場合、または破棄されていない場合は、書き込みをサポートしているかどうかに関係なく、常に <see langword="LOB" /> を返します。<see langword="false" /> が閉じているか破棄されている場合は <see langword="LOB" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="794e2-175">Always returns <see langword="true" />, regardless of whether an opened or undisposed <see langword="LOB" /> supports writing or not, <see langword="false" /> if a <see langword="LOB" /> is closed or disposed.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="794e2-176">に`LOB`書き込むには、SQL SELECT ステートメントで FOR `LOB` UPDATE 句を使用してを取得しておく必要があります。また、ローカルトランザクションを開始しておく必要があります。</span><span class="sxs-lookup"><span data-stu-id="794e2-176">To write to the `LOB`, you must have retrieved the `LOB` using the FOR UPDATE clause in the SQL SELECT statement, and you must have started a local transaction.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChunkSize">
      <MemberSignature Language="C#" Value="public int ChunkSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ChunkSize" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleLob.ChunkSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChunkSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ChunkSize { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ChunkSize : int" Usage="System.Data.OracleClient.OracleLob.ChunkSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="794e2-177">読み取りまたは書き込み操作でサーバーから取得する、またはサーバーに送信する最小バイト数を示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="794e2-177">Gets a value indicating the minimum number of bytes to retrieve from or send to the server during a read/write operation.</span></span></summary>
        <value><span data-ttu-id="794e2-178">取得または送信する最小バイト数。</span><span class="sxs-lookup"><span data-stu-id="794e2-178">The minimum number of bytes to retrieve or send.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="794e2-179"><xref:System.Data.OracleClient.OracleLob.ChunkSize%2A>プロパティによって返された値は、Oracle の .NET Framework Data Provider の設定ではありません。</span><span class="sxs-lookup"><span data-stu-id="794e2-179">The value returned by the <xref:System.Data.OracleClient.OracleLob.ChunkSize%2A> property is not a setting of the .NET Framework Data Provider for Oracle.</span></span> <span data-ttu-id="794e2-180">代わりに、Oracle Call Interface (OCI) がサーバーと通信するときに使用する値です。</span><span class="sxs-lookup"><span data-stu-id="794e2-180">Instead, it is the value that the Oracle Call Interface (OCI) uses when communicating with the server.</span></span> <span data-ttu-id="794e2-181">クライアント<xref:System.Data.OracleClient.OracleLob.ChunkSize%2A>側のチャンクが同じサイズであることを確認するには、を使用します。</span><span class="sxs-lookup"><span data-stu-id="794e2-181">Use <xref:System.Data.OracleClient.OracleLob.ChunkSize%2A> to ensure that client-side chunks are the same size.</span></span> <span data-ttu-id="794e2-182">より小さなチャンクで読み取りまたは書き込みを行ってもデータはキャッシュされず、サーバーへのラウンドトリップがあまり最適化されません。これは、完全なパケットが受信または送信されないためです。</span><span class="sxs-lookup"><span data-stu-id="794e2-182">Reading or writing in smaller chunks does not cache data, and causes a less-optimized round trip to the server, because a full packet is not received or sent.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="794e2-183">接続が閉じています。</span><span class="sxs-lookup"><span data-stu-id="794e2-183">The connection is closed.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="794e2-184">オブジェクトが閉じられているか、破棄されています。</span><span class="sxs-lookup"><span data-stu-id="794e2-184">The object was closed or disposed.</span></span></exception>
        <exception cref="T:System.Data.OracleClient.OracleException"><span data-ttu-id="794e2-185">Oracle エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="794e2-185">An Oracle error has occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleLob.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="oracleLob.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="794e2-186">元の <see cref="T:System.Data.OracleClient.OracleLob" /> オブジェクトと同じ Oracle の <see langword="LOB" /> を参照する、新しい <see cref="T:System.Data.OracleClient.OracleLob" /> オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="794e2-186">Creates a new <see cref="T:System.Data.OracleClient.OracleLob" /> object that references the same Oracle <see langword="LOB" /> as the original <see cref="T:System.Data.OracleClient.OracleLob" /> object.</span></span></summary>
        <returns><span data-ttu-id="794e2-187">元の <see cref="T:System.Data.OracleClient.OracleLob" /> オブジェクトと同じ Oracle の <see langword="LOB" /> を参照する、新しい <see cref="T:System.Data.OracleClient.OracleLob" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="794e2-187">A new <see cref="T:System.Data.OracleClient.OracleLob" /> object that references the same Oracle <see langword="LOB" /> as the original <see cref="T:System.Data.OracleClient.OracleLob" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="794e2-188">新しい<xref:System.Data.OracleClient.OracleLob>オブジェクトのプロパティは、最初は元のオブジェクトと同じ値になります。</span><span class="sxs-lookup"><span data-stu-id="794e2-188">The properties of the new <xref:System.Data.OracleClient.OracleLob> object initially have the same values as those of the original object.</span></span> <span data-ttu-id="794e2-189">ただし、 <xref:System.Data.OracleClient.OracleLob.Clone%2A>が完了した後、 <xref:System.Data.OracleClient.OracleLob>各オブジェクトは互いに独立しています。</span><span class="sxs-lookup"><span data-stu-id="794e2-189">However, after the <xref:System.Data.OracleClient.OracleLob.Clone%2A> is complete, each <xref:System.Data.OracleClient.OracleLob> object is independent from the other.</span></span> <span data-ttu-id="794e2-190">たとえば、元<xref:System.Data.OracleClient.OracleLob.Position%2A> <xref:System.Data.OracleClient.OracleLob>ののプロパティの値を変更しても、コピーのの<xref:System.Data.OracleClient.OracleLob.Position%2A>値は変更されません。</span><span class="sxs-lookup"><span data-stu-id="794e2-190">For example, changing the value of the <xref:System.Data.OracleClient.OracleLob.Position%2A> property on the original <xref:System.Data.OracleClient.OracleLob> does not change the value of <xref:System.Data.OracleClient.OracleLob.Position%2A> on the copy.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="794e2-191">接続が閉じています。</span><span class="sxs-lookup"><span data-stu-id="794e2-191">The connection is closed.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="794e2-192">オブジェクトが閉じられているか、破棄されています。</span><span class="sxs-lookup"><span data-stu-id="794e2-192">The object was closed or disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleLob.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="oracleLob.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="794e2-193">現在のストリームを終了し、ストリームに関連付けられたリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="794e2-193">Closes the current stream and releases resources that are associated with the stream.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleConnection Connection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OracleClient.OracleConnection Connection" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleLob.Connection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Connection As OracleConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OracleClient::OracleConnection ^ Connection { System::Data::OracleClient::OracleConnection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Connection : System.Data.OracleClient.OracleConnection" Usage="System.Data.OracleClient.OracleLob.Connection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="794e2-194">この <see cref="T:System.Data.OracleClient.OracleConnection" /> のインスタンスで使用される <see cref="T:System.Data.OracleClient.OracleLob" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="794e2-194">Gets the <see cref="T:System.Data.OracleClient.OracleConnection" /> used by this instance of the <see cref="T:System.Data.OracleClient.OracleLob" />.</span></span></summary>
        <value><span data-ttu-id="794e2-195">データ ソースへの接続。</span><span class="sxs-lookup"><span data-stu-id="794e2-195">The connection to a data source.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="794e2-196">オブジェクトが閉じられているか、破棄されています。</span><span class="sxs-lookup"><span data-stu-id="794e2-196">The object was closed or disposed.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyTo">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="794e2-197">この <see cref="T:System.Data.OracleClient.OracleLob" /> のデータをコピー先の <see cref="T:System.Data.OracleClient.OracleLob" /> にコピーします。</span><span class="sxs-lookup"><span data-stu-id="794e2-197">Copies from this <see cref="T:System.Data.OracleClient.OracleLob" /> to a destination <see cref="T:System.Data.OracleClient.OracleLob" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public long CopyTo (System.Data.OracleClient.OracleLob destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 CopyTo(class System.Data.OracleClient.OracleLob destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob)" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyTo (destination As OracleLob) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long CopyTo(System::Data::OracleClient::OracleLob ^ destination);" />
      <MemberSignature Language="F#" Value="override this.CopyTo : System.Data.OracleClient.OracleLob -&gt; int64" Usage="oracleLob.CopyTo destination" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Data.OracleClient.OracleLob" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="794e2-198">コピー先の <see cref="T:System.Data.OracleClient.OracleLob" />。</span><span class="sxs-lookup"><span data-stu-id="794e2-198">The destination <see cref="T:System.Data.OracleClient.OracleLob" />.</span></span></param>
        <summary><span data-ttu-id="794e2-199">この <see cref="T:System.Data.OracleClient.OracleLob" /> のデータをコピー先の <see cref="T:System.Data.OracleClient.OracleLob" /> にコピーします。</span><span class="sxs-lookup"><span data-stu-id="794e2-199">Copies from this <see cref="T:System.Data.OracleClient.OracleLob" /> to a destination <see cref="T:System.Data.OracleClient.OracleLob" />.</span></span></summary>
        <returns><span data-ttu-id="794e2-200">コピーされたバイト数。</span><span class="sxs-lookup"><span data-stu-id="794e2-200">The number of bytes copied.</span></span> <span data-ttu-id="794e2-201">これはすべての埋め込みバイトを除外します。</span><span class="sxs-lookup"><span data-stu-id="794e2-201">This excludes any padded bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="794e2-202">基になるデータ型は、常に同じである必要があります。</span><span class="sxs-lookup"><span data-stu-id="794e2-202">The underlying data types must always be the same.</span></span> <span data-ttu-id="794e2-203">たとえば、から<xref:System.Data.OracleClient.OracleType.NClob>コピーする場合は、コピー先<xref:System.Data.OracleClient.OracleLob>も<xref:System.Data.OracleClient.OracleType.NClob>である必要があります。</span><span class="sxs-lookup"><span data-stu-id="794e2-203">For example, if you are copying from an <xref:System.Data.OracleClient.OracleType.NClob>, the destination <xref:System.Data.OracleClient.OracleLob> must also be an <xref:System.Data.OracleClient.OracleType.NClob>.</span></span>  
  
 <span data-ttu-id="794e2-204">コピー先のオフセットが変換先`LOB`の末尾を超えている場合、データのコピー先の`LOB`が拡張されます。</span><span class="sxs-lookup"><span data-stu-id="794e2-204">If the destination offset is beyond the end of destination `LOB`, the `LOB` to which the data is being copied is extended.</span></span> <span data-ttu-id="794e2-205">データ型と`LOB` `NCLOB`データ型の`CLOB`データ型およびスペースでは、の末尾と最後のオフセットの間のスペースに0が埋め`BLOB`込まれます。</span><span class="sxs-lookup"><span data-stu-id="794e2-205">The space between the end of the `LOB` and the destination offset beyond the end is padded with zeros for `BLOB` data types and spaces for `CLOB` and `NCLOB` data types.</span></span>  
  
 <span data-ttu-id="794e2-206">に`LOB`書き込むには、SQL SELECT ステートメントで FOR `LOB` UPDATE 句を使用してを取得しておく必要があります。また、ローカルトランザクションを開始する必要があります。</span><span class="sxs-lookup"><span data-stu-id="794e2-206">To write to the `LOB`, you must have retrieved the `LOB` using the FOR UPDATE clause in the SQL SELECT statement, and you must have a local transaction started.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="794e2-207">このリリースでは、読み取り`LOB`専用への書き込み操作は成功する可能性がありますが、サーバー `LOB`上のを更新することはできません。</span><span class="sxs-lookup"><span data-stu-id="794e2-207">In this release, a write operation to a read-only `LOB` might succeed, but not update the `LOB` on the server.</span></span> <span data-ttu-id="794e2-208">ただし、この場合、の`LOB`ローカルコピーが更新されます。</span><span class="sxs-lookup"><span data-stu-id="794e2-208">In this case, however, the local copy of the `LOB` will be updated.</span></span> <span data-ttu-id="794e2-209">そのため、後で<xref:System.Data.OracleClient.OracleLob>オブジェクトに対して読み取り操作を実行すると、書き込み操作の結果が返される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="794e2-209">Therefore, later read operations on the <xref:System.Data.OracleClient.OracleLob> object might return the results of the write operation.</span></span>  
>   
>  <span data-ttu-id="794e2-210">メソッド`CopyTo`は、コピー操作を実行する前に`OracleLob` 、コピー先の内容を消去しません。</span><span class="sxs-lookup"><span data-stu-id="794e2-210">The `CopyTo` method does not clear the contents of the destination `OracleLob` before performing the copy operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="794e2-211"><paramref name="destination" /> パラメーターで指定されている <see cref="T:System.Data.OracleClient.OracleLob" /> が null です。</span><span class="sxs-lookup"><span data-stu-id="794e2-211">The <see cref="T:System.Data.OracleClient.OracleLob" /> specified in the <paramref name="destination" /> parameter is null.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="794e2-212">操作がトランザクション内で実行されていないか、<see cref="T:System.Data.OracleClient.OracleLob" /> オブジェクトが null か、または接続が閉じられています。</span><span class="sxs-lookup"><span data-stu-id="794e2-212">The operation is not within a transaction, the <see cref="T:System.Data.OracleClient.OracleLob" /> object is null, or the connection is closed.</span></span></exception>
        <exception cref="T:System.Data.OracleClient.OracleException"><span data-ttu-id="794e2-213">Oracle エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="794e2-213">An Oracle error has occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public long CopyTo (System.Data.OracleClient.OracleLob destination, long destinationOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 CopyTo(class System.Data.OracleClient.OracleLob destination, int64 destinationOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyTo (destination As OracleLob, destinationOffset As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long CopyTo(System::Data::OracleClient::OracleLob ^ destination, long destinationOffset);" />
      <MemberSignature Language="F#" Value="override this.CopyTo : System.Data.OracleClient.OracleLob * int64 -&gt; int64" Usage="oracleLob.CopyTo (destination, destinationOffset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Data.OracleClient.OracleLob" />
        <Parameter Name="destinationOffset" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="794e2-214">コピー先の <see cref="T:System.Data.OracleClient.OracleLob" />。</span><span class="sxs-lookup"><span data-stu-id="794e2-214">The destination <see cref="T:System.Data.OracleClient.OracleLob" /></span></span></param>
        <param name="destinationOffset"><span data-ttu-id="794e2-215">コピー先のオフセット。</span><span class="sxs-lookup"><span data-stu-id="794e2-215">The offset to which to copy.</span></span> <span data-ttu-id="794e2-216"><see langword="CLOB" /> データ型および <see langword="NCLOB" /> データ型の場合、これは偶数のバイト数である必要があります。</span><span class="sxs-lookup"><span data-stu-id="794e2-216">For <see langword="CLOB" /> and <see langword="NCLOB" /> data types, this must be an even number of bytes.</span></span></param>
        <summary><span data-ttu-id="794e2-217">この <see cref="T:System.Data.OracleClient.OracleLob" /> のデータを、コピーするデータ サイズを指定して、コピー先の <see cref="T:System.Data.OracleClient.OracleLob" /> にコピーします。</span><span class="sxs-lookup"><span data-stu-id="794e2-217">Copies from this <see cref="T:System.Data.OracleClient.OracleLob" /> to a destination <see cref="T:System.Data.OracleClient.OracleLob" /> with the specified amount of data.</span></span></summary>
        <returns><span data-ttu-id="794e2-218">コピーされたバイト数。</span><span class="sxs-lookup"><span data-stu-id="794e2-218">The number of bytes copied.</span></span> <span data-ttu-id="794e2-219">これはすべての埋め込みバイトを除外します。</span><span class="sxs-lookup"><span data-stu-id="794e2-219">This excludes any padded bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="794e2-220">基になるデータ型は、常に同じである必要があります。</span><span class="sxs-lookup"><span data-stu-id="794e2-220">The underlying data types must always be the same.</span></span> <span data-ttu-id="794e2-221">たとえば、から<xref:System.Data.OracleClient.OracleType.NClob>コピーする場合は、コピー先<xref:System.Data.OracleClient.OracleLob>も<xref:System.Data.OracleClient.OracleType.NClob>である必要があります。</span><span class="sxs-lookup"><span data-stu-id="794e2-221">For example, if you are copying from an <xref:System.Data.OracleClient.OracleType.NClob>, the destination <xref:System.Data.OracleClient.OracleLob> must also be an <xref:System.Data.OracleClient.OracleType.NClob>.</span></span>  
  
 <span data-ttu-id="794e2-222">コピー先のオフセットが変換先`LOB`の末尾を超えている場合、データのコピー先の`LOB`が拡張されます。</span><span class="sxs-lookup"><span data-stu-id="794e2-222">If the destination offset is beyond the end of destination `LOB`, the `LOB` to which the data is being copied is extended.</span></span> <span data-ttu-id="794e2-223">データ型と`NCLOB`データ型の`LOB` `CLOB`データ型とスペースでは、末尾と末尾の間のスペースはゼロで埋め`BLOB`られます。</span><span class="sxs-lookup"><span data-stu-id="794e2-223">The space between the end of `LOB` and destination offset beyond the end is padded with zeros for `BLOB` data types and spaces for `CLOB` and `NCLOB` data types.</span></span>  
  
 <span data-ttu-id="794e2-224">に`LOB`書き込むには、SQL SELECT ステートメントで FOR `LOB` UPDATE 句を使用してを取得しておく必要があります。また、ローカルトランザクションを開始する必要があります。</span><span class="sxs-lookup"><span data-stu-id="794e2-224">To write to the `LOB`, you must have retrieved the `LOB` using the FOR UPDATE clause in the SQL SELECT statement, and you must have a local transaction started.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="794e2-225">このリリースでは、読み取り`LOB`専用への書き込み操作は成功する可能性がありますが、サーバー上のは`LOB`更新されません。</span><span class="sxs-lookup"><span data-stu-id="794e2-225">In this release, a write operation to a read-only `LOB` might succeed, but does not update the `LOB` on the server.</span></span> <span data-ttu-id="794e2-226">ただし、この場合、の`LOB`ローカルコピーは更新されます。</span><span class="sxs-lookup"><span data-stu-id="794e2-226">In this case, however, the local copy of the `LOB` is updated.</span></span> <span data-ttu-id="794e2-227">そのため、後で<xref:System.Data.OracleClient.OracleLob>オブジェクトに対して読み取り操作を実行すると、書き込み操作の結果が返される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="794e2-227">Therefore, later read operations on the <xref:System.Data.OracleClient.OracleLob> object might return the results of the write operation.</span></span>  
>   
>  <span data-ttu-id="794e2-228">メソッド`CopyTo`は、コピー操作を実行する前に`OracleLob` 、コピー先の内容を消去しません。</span><span class="sxs-lookup"><span data-stu-id="794e2-228">The `CopyTo` method does not clear the contents of the destination `OracleLob` before performing the copy operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="794e2-229"><paramref name="destination" /> パラメーターで指定されている <see cref="T:System.Data.OracleClient.OracleLob" /> が null です。</span><span class="sxs-lookup"><span data-stu-id="794e2-229">The <see cref="T:System.Data.OracleClient.OracleLob" /> specified in the <paramref name="destination" /> parameter is full.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="794e2-230"><paramref name="destinationOffset" /> で指定したパラメーターの値が 0 未満であるか、4 GB を超えています。</span><span class="sxs-lookup"><span data-stu-id="794e2-230">A value specified in the <paramref name="destinationOffset" /> parameter is less than zero or greater than 4 gigabytes.</span></span>  
  
<span data-ttu-id="794e2-231">- または -</span><span class="sxs-lookup"><span data-stu-id="794e2-231">-or-</span></span> 
<span data-ttu-id="794e2-232"><paramref name="destinationOffset" /> パラメーターで <see langword="CLOB" /> または <see langword="NCLOB" /> データ型に指定した値が偶数ではありません。</span><span class="sxs-lookup"><span data-stu-id="794e2-232">A value specified in the <paramref name="destinationOffset" /> parameter for a <see langword="CLOB" /> or <see langword="NCLOB" /> data type is not even.</span></span>  
  
<span data-ttu-id="794e2-233">または</span><span class="sxs-lookup"><span data-stu-id="794e2-233">-or-</span></span> 
<span data-ttu-id="794e2-234"><see langword="CLOB" /> および <see langword="NCLOB" /> データ型には、偶数のバイト数を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="794e2-234">You must specify <see langword="CLOB" /> and <see langword="NCLOB" /> data types as an even number of bytes.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="794e2-235">操作がトランザクション内で実行されていないか、<see cref="T:System.Data.OracleClient.OracleLob" /> オブジェクトが null か、または接続が閉じられています。</span><span class="sxs-lookup"><span data-stu-id="794e2-235">The operation is not within a transaction, the <see cref="T:System.Data.OracleClient.OracleLob" /> object is null, or the connection is closed.</span></span></exception>
        <exception cref="T:System.Data.OracleClient.OracleException"><span data-ttu-id="794e2-236">Oracle エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="794e2-236">An Oracle error has occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public long CopyTo (long sourceOffset, System.Data.OracleClient.OracleLob destination, long destinationOffset, long amount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 CopyTo(int64 sourceOffset, class System.Data.OracleClient.OracleLob destination, int64 destinationOffset, int64 amount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyTo (sourceOffset As Long, destination As OracleLob, destinationOffset As Long, amount As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long CopyTo(long sourceOffset, System::Data::OracleClient::OracleLob ^ destination, long destinationOffset, long amount);" />
      <MemberSignature Language="F#" Value="override this.CopyTo : int64 * System.Data.OracleClient.OracleLob * int64 * int64 -&gt; int64" Usage="oracleLob.CopyTo (sourceOffset, destination, destinationOffset, amount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceOffset" Type="System.Int64" />
        <Parameter Name="destination" Type="System.Data.OracleClient.OracleLob" />
        <Parameter Name="destinationOffset" Type="System.Int64" />
        <Parameter Name="amount" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="sourceOffset"><span data-ttu-id="794e2-237">コピー元のオフセット。</span><span class="sxs-lookup"><span data-stu-id="794e2-237">The offset from which to copy.</span></span> <span data-ttu-id="794e2-238"><see langword="CLOB" /> 型および <see langword="NCLOB" /> 型の場合、これは偶数である必要があります。</span><span class="sxs-lookup"><span data-stu-id="794e2-238">For <see langword="CLOB" /> and <see langword="NCLOB" /> data types, this must be an even number.</span></span></param>
        <param name="destination"><span data-ttu-id="794e2-239">コピー先 <see langword="OracleLob" /><see cref="N:System.Data.OracleClient" />。</span><span class="sxs-lookup"><span data-stu-id="794e2-239">The destination <see langword="OracleLob" /><see cref="N:System.Data.OracleClient" />.</span></span></param>
        <param name="destinationOffset"><span data-ttu-id="794e2-240">コピー先のオフセット。</span><span class="sxs-lookup"><span data-stu-id="794e2-240">The destination offset to which to copy.</span></span> <span data-ttu-id="794e2-241"><see langword="CLOB" /> 型および <see langword="NCLOB" /> 型の場合、これは偶数である必要があります。</span><span class="sxs-lookup"><span data-stu-id="794e2-241">For <see langword="CLOB" /> and <see langword="NCLOB" /> data types, this must be an even number.</span></span></param>
        <param name="amount"><span data-ttu-id="794e2-242">コピーするデータのサイズ (バイト単位)。</span><span class="sxs-lookup"><span data-stu-id="794e2-242">The quantity of data, in bytes, to copy.</span></span> <span data-ttu-id="794e2-243"><see langword="CLOB" /> 型および <see langword="NCLOB" /> 型の場合、これは偶数である必要があります。</span><span class="sxs-lookup"><span data-stu-id="794e2-243">For <see langword="CLOB" /> and <see langword="NCLOB" /> data types, this must be an even number.</span></span></param>
        <summary><span data-ttu-id="794e2-244">データ サイズとコピー先のオフセットを指定して、この <see cref="T:System.Data.OracleClient.OracleLob" /> からコピー先の <see cref="T:System.Data.OracleClient.OracleLob" /> にコピーします。</span><span class="sxs-lookup"><span data-stu-id="794e2-244">Copies from this <see cref="T:System.Data.OracleClient.OracleLob" /> to a destination <see cref="T:System.Data.OracleClient.OracleLob" /> with the specified amount of data, and the source offset.</span></span></summary>
        <returns><span data-ttu-id="794e2-245">コピーされたバイト数。</span><span class="sxs-lookup"><span data-stu-id="794e2-245">The number of bytes copied.</span></span> <span data-ttu-id="794e2-246">これはすべての埋め込みバイトを除外します。</span><span class="sxs-lookup"><span data-stu-id="794e2-246">This excludes any padded bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="794e2-247">基になるデータ型は、常に同じである必要があります。</span><span class="sxs-lookup"><span data-stu-id="794e2-247">The underlying data types must always be the same.</span></span> <span data-ttu-id="794e2-248">たとえば、から<xref:System.Data.OracleClient.OracleType.NClob>コピーする場合は、コピー先<xref:System.Data.OracleClient.OracleLob>も<xref:System.Data.OracleClient.OracleType.NClob>である必要があります。</span><span class="sxs-lookup"><span data-stu-id="794e2-248">For example, if you are copying from an <xref:System.Data.OracleClient.OracleType.NClob>, the destination <xref:System.Data.OracleClient.OracleLob> must also be an <xref:System.Data.OracleClient.OracleType.NClob>.</span></span>  
  
 <span data-ttu-id="794e2-249">コピー先のオフセットが変換先`LOB`の末尾を超えている場合、データのコピー先の`LOB`が拡張されます。</span><span class="sxs-lookup"><span data-stu-id="794e2-249">If the destination offset is beyond the end of destination `LOB`, the `LOB` to which the data is being copied is extended.</span></span> <span data-ttu-id="794e2-250">データ型と`NCLOB`データ型の`LOB` `CLOB`データ型とスペースでは、末尾と末尾の間のスペースはゼロで埋め`BLOB`られます。</span><span class="sxs-lookup"><span data-stu-id="794e2-250">The space between the end of `LOB` and destination offset beyond the end is padded with zeros for `BLOB` data types and spaces for `CLOB` and `NCLOB` data types.</span></span>  
  
 <span data-ttu-id="794e2-251">に`LOB`書き込むには、SQL SELECT ステートメントで FOR `LOB` UPDATE 句を使用してを取得しておく必要があります。また、ローカルトランザクションを開始する必要があります。</span><span class="sxs-lookup"><span data-stu-id="794e2-251">To write to the `LOB`, you must have retrieved the `LOB` using the FOR UPDATE clause in the SQL SELECT statement, and you must have a local transaction started.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="794e2-252">このリリースでは、読み取り`LOB`専用への書き込み操作は成功する可能性がありますが、サーバー上のは`LOB`更新されません。</span><span class="sxs-lookup"><span data-stu-id="794e2-252">In this release, a write operation to a read-only `LOB` might succeed, but does not update the `LOB` on the server.</span></span> <span data-ttu-id="794e2-253">ただし、この場合、の`LOB`ローカルコピーは更新されます。</span><span class="sxs-lookup"><span data-stu-id="794e2-253">In this case, however, the local copy of the `LOB` is updated.</span></span> <span data-ttu-id="794e2-254">そのため、後で<xref:System.Data.OracleClient.OracleLob>オブジェクトに対して読み取り操作を実行すると、書き込み操作の結果が返される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="794e2-254">Therefore, later read operations on the <xref:System.Data.OracleClient.OracleLob> object might return the results of the write operation.</span></span>  
>   
>  <span data-ttu-id="794e2-255">メソッド`CopyTo`は、コピー操作を実行する前に`OracleLob` 、コピー先の内容を消去しません。</span><span class="sxs-lookup"><span data-stu-id="794e2-255">The `CopyTo` method does not clear the contents of the destination `OracleLob` before performing the copy operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="794e2-256"><paramref name="destination" /> パラメーターで指定されている <see cref="T:System.Data.OracleClient.OracleLob" /> が null です。</span><span class="sxs-lookup"><span data-stu-id="794e2-256">The <see cref="T:System.Data.OracleClient.OracleLob" /> specified in the <paramref name="destination" /> parameter is full.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="794e2-257"><paramref name="amount" />、<paramref name="sourceOffset" />、または <paramref name="destinationOffset" /> パラメーターで指定したパラメーターの値が 0 未満であるか、4 GB を超えています。</span><span class="sxs-lookup"><span data-stu-id="794e2-257">A value specified in the <paramref name="amount" />, <paramref name="sourceOffset" />, or <paramref name="destinationOffset" /> parameter is less than zero or greater than 4 gigabytes.</span></span>  
  
<span data-ttu-id="794e2-258">- または -</span><span class="sxs-lookup"><span data-stu-id="794e2-258">-or-</span></span> 
<span data-ttu-id="794e2-259"><paramref name="amount" />、<paramref name="sourceOffset" />、または <paramref name="destinationOffset" /> パラメーターで <see langword="CLOB" /> または <see langword="NCLOB" /> データ型に指定した値が偶数ではありません。</span><span class="sxs-lookup"><span data-stu-id="794e2-259">A value specified in the <paramref name="amount" />, <paramref name="sourceOffset" />, or <paramref name="destinationOffset" /> parameter for a <see langword="CLOB" /> or <see langword="NCLOB" /> data type is not even.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="794e2-260">操作がトランザクション内で実行されていないか、<see cref="T:System.Data.OracleClient.OracleLob" /> オブジェクトが null か、または接続が閉じられています。</span><span class="sxs-lookup"><span data-stu-id="794e2-260">The operation is not within a transaction, the <see cref="T:System.Data.OracleClient.OracleLob" /> object is null, or the connection is closed.</span></span></exception>
        <exception cref="T:System.Data.OracleClient.OracleException"><span data-ttu-id="794e2-261">Oracle エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="794e2-261">An Oracle error has occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleLob.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="oracleLob.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="794e2-262">このオブジェクトによって使用されているリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="794e2-262">Releases the resources that are used by this object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleLob.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="oracleLob.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndBatch">
      <MemberSignature Language="C#" Value="public void EndBatch ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndBatch() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleLob.EndBatch" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndBatch ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndBatch();" />
      <MemberSignature Language="F#" Value="member this.EndBatch : unit -&gt; unit" Usage="oracleLob.EndBatch " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="794e2-263">複数の書き込み操作の実行後に、サーバー側のトリガーの発生を再開します。</span><span class="sxs-lookup"><span data-stu-id="794e2-263">Allows server-side triggers to resume firing after performing multiple write operations.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="794e2-264">に対する<xref:System.Data.OracleClient.OracleLob.BeginBatch%2A>書き込み操作の実行を開始する前に、メソッドを呼び出します。 <xref:System.Data.OracleClient.OracleLob></span><span class="sxs-lookup"><span data-stu-id="794e2-264">Call the <xref:System.Data.OracleClient.OracleLob.BeginBatch%2A> method before you begin performing write operations on the <xref:System.Data.OracleClient.OracleLob>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="794e2-265">接続が閉じています。</span><span class="sxs-lookup"><span data-stu-id="794e2-265">The connection is closed.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="794e2-266">オブジェクトが閉じられているか、破棄されています。</span><span class="sxs-lookup"><span data-stu-id="794e2-266">The object was closed or disposed.</span></span></exception>
        <exception cref="T:System.Data.OracleClient.OracleException"><span data-ttu-id="794e2-267">Oracle エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="794e2-267">An Oracle error has occurred.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Erase">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="794e2-268">この <see cref="T:System.Data.OracleClient.OracleLob" /> からデータを消去します。</span><span class="sxs-lookup"><span data-stu-id="794e2-268">Erases data from this <see cref="T:System.Data.OracleClient.OracleLob" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Erase">
      <MemberSignature Language="C#" Value="public long Erase ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 Erase() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleLob.Erase" />
      <MemberSignature Language="VB.NET" Value="Public Function Erase () As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long Erase();" />
      <MemberSignature Language="F#" Value="member this.Erase : unit -&gt; int64" Usage="oracleLob.Erase " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="794e2-269">この <see cref="T:System.Data.OracleClient.OracleLob" /> からすべてのデータを消去します。</span><span class="sxs-lookup"><span data-stu-id="794e2-269">Erases all data from this <see cref="T:System.Data.OracleClient.OracleLob" />.</span></span></summary>
        <returns><span data-ttu-id="794e2-270">消去したバイト数。</span><span class="sxs-lookup"><span data-stu-id="794e2-270">The number of bytes erased.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="794e2-271"><xref:System.Data.OracleClient.OracleLob.Erase%2A>では、データは切り捨てられません。</span><span class="sxs-lookup"><span data-stu-id="794e2-271"><xref:System.Data.OracleClient.OracleLob.Erase%2A> does not truncate data.</span></span> <span data-ttu-id="794e2-272">長さ`LOB`は`BLOB`データ型に対して同じままで、消去されたデータは0x00 で置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="794e2-272">The `LOB` length remains the same for a `BLOB` data type, and the erased data is replaced by 0x00.</span></span> <span data-ttu-id="794e2-273">`CLOB`および`NCLOB`データ型はスペースで置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="794e2-273">`CLOB` and `NCLOB` data types are replaced by spaces.</span></span>  
  
 <span data-ttu-id="794e2-274">に`LOB`書き込むには、SQL SELECT ステートメントで FOR `LOB` UPDATE 句を使用してを取得しておく必要があります。また、ローカルトランザクションを開始する必要があります。</span><span class="sxs-lookup"><span data-stu-id="794e2-274">To write to the `LOB`, you must have retrieved the `LOB` using the FOR UPDATE clause in the SQL SELECT statement, and you must have a local transaction started.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="794e2-275">このリリースでは、読み取り`LOB`専用への書き込み操作は成功する可能性がありますが、サーバー上のは`LOB`更新されません。</span><span class="sxs-lookup"><span data-stu-id="794e2-275">In this release, a write operation to a read-only `LOB` might succeed, but does not update the `LOB` on the server.</span></span> <span data-ttu-id="794e2-276">ただし、この場合、の`LOB`ローカルコピーは更新されます。</span><span class="sxs-lookup"><span data-stu-id="794e2-276">In this case, however, the local copy of the `LOB` is updated.</span></span> <span data-ttu-id="794e2-277">そのため、後で<xref:System.Data.OracleClient.OracleLob>オブジェクトに対して読み取り操作を実行すると、書き込み操作の結果が返される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="794e2-277">Therefore, later read operations on the <xref:System.Data.OracleClient.OracleLob> object might return the results of the write operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="794e2-278">操作がトランザクション内で実行されていないか、<see cref="T:System.Data.OracleClient.OracleLob" /> オブジェクトが null か、または接続が閉じられています。</span><span class="sxs-lookup"><span data-stu-id="794e2-278">The operation is not within a transaction, the <see cref="T:System.Data.OracleClient.OracleLob" /> object is null, or the connection is closed.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="794e2-279">オブジェクトが閉じられているか、破棄されています。</span><span class="sxs-lookup"><span data-stu-id="794e2-279">The object was closed or disposed.</span></span></exception>
        <exception cref="T:System.Data.OracleClient.OracleException"><span data-ttu-id="794e2-280">Oracle エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="794e2-280">An Oracle error has occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Erase">
      <MemberSignature Language="C#" Value="public long Erase (long offset, long amount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 Erase(int64 offset, int64 amount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleLob.Erase(System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Erase (offset As Long, amount As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long Erase(long offset, long amount);" />
      <MemberSignature Language="F#" Value="member this.Erase : int64 * int64 -&gt; int64" Usage="oracleLob.Erase (offset, amount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="amount" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="794e2-281">消去対象のオフセット。</span><span class="sxs-lookup"><span data-stu-id="794e2-281">The offset from which to erase.</span></span> <span data-ttu-id="794e2-282"><see langword="CLOB" /> 型および <see langword="NCLOB" /> 型の場合、これは偶数である必要があります。</span><span class="sxs-lookup"><span data-stu-id="794e2-282">For <see langword="CLOB" /> and <see langword="NCLOB" /> data types, this must be an even number.</span></span></param>
        <param name="amount"><span data-ttu-id="794e2-283">消去するデータのサイズ (バイト単位)。</span><span class="sxs-lookup"><span data-stu-id="794e2-283">The quantity of data, in bytes, to erase.</span></span> <span data-ttu-id="794e2-284"><see langword="CLOB" /> 型および <see langword="NCLOB" /> 型の場合、これは偶数である必要があります。</span><span class="sxs-lookup"><span data-stu-id="794e2-284">For <see langword="CLOB" /> and <see langword="NCLOB" /> data types, this must be an even number.</span></span></param>
        <summary><span data-ttu-id="794e2-285">この <see cref="T:System.Data.OracleClient.OracleLob" /> から、指定したサイズのデータを消去します。</span><span class="sxs-lookup"><span data-stu-id="794e2-285">Erases the specified amount of data from this <see cref="T:System.Data.OracleClient.OracleLob" />.</span></span></summary>
        <returns><span data-ttu-id="794e2-286">消去したバイト数。</span><span class="sxs-lookup"><span data-stu-id="794e2-286">The number of bytes erased.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="794e2-287">パラメーター `offset` <xref:System.Data.OracleClient.OracleLob>と`amount`パラメーターの値の合計は、のサイズよりも大きくなる場合があります。</span><span class="sxs-lookup"><span data-stu-id="794e2-287">The sum of the values in the `offset` and `amount` parameters can be greater than that of the size of the <xref:System.Data.OracleClient.OracleLob>.</span></span> <span data-ttu-id="794e2-288">したがって、 <xref:System.Data.OracleClient.OracleLob.Length%2A>プロパティによって返された値よりも大きい値を指定すると成功します<xref:System.Data.OracleClient.OracleLob>。ただし<xref:System.Data.OracleClient.OracleLob.Erase%2A> 、の末尾にのみが消去されます。</span><span class="sxs-lookup"><span data-stu-id="794e2-288">Therefore, specifying a value greater than that returned by the <xref:System.Data.OracleClient.OracleLob.Length%2A> property succeeds; however <xref:System.Data.OracleClient.OracleLob.Erase%2A> only erases to the end of the <xref:System.Data.OracleClient.OracleLob>.</span></span> <span data-ttu-id="794e2-289">(同様に、負の値がに`offset`渡されると、 <xref:System.Data.OracleClient.OracleLob.Erase%2A>は成功し<xref:System.Data.OracleClient.OracleLob>ますが、はの先頭からのみ消去されます)。この動作は、メソッド<xref:System.Data.OracleClient.OracleLob.Read%2A>と<xref:System.Data.OracleClient.OracleLob.Write%2A>メソッドの動作とは異なり、サーバーとの間に追加のラウンドトリップを行わなくても`offset` 、によって指定された値からすべてのデータを消去できるという利点があります。幅.</span><span class="sxs-lookup"><span data-stu-id="794e2-289">(Similarly, if a negative value is passed to `offset`, <xref:System.Data.OracleClient.OracleLob.Erase%2A> will succeed, but only erase starting from the beginning of the <xref:System.Data.OracleClient.OracleLob>.) This behavior is different from that of the <xref:System.Data.OracleClient.OracleLob.Read%2A> and <xref:System.Data.OracleClient.OracleLob.Write%2A> methods, and offers the advantage of being able to erase all data from the value specified by `offset` without making an additional roundtrip to the server to verify the actual size.</span></span>  
  
 <span data-ttu-id="794e2-290"><xref:System.Data.OracleClient.OracleLob.Erase%2A>では、データは切り捨てられません。</span><span class="sxs-lookup"><span data-stu-id="794e2-290"><xref:System.Data.OracleClient.OracleLob.Erase%2A> does not truncate data.</span></span> <span data-ttu-id="794e2-291">長さ`LOB`は`BLOB`データ型に対して同じままで、消去されたデータは0x00 で置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="794e2-291">The `LOB` length remains the same for a `BLOB` data type, and the erased data is replaced by 0x00.</span></span> <span data-ttu-id="794e2-292">`CLOB`および`NCLOB`データ型はスペースで置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="794e2-292">`CLOB` and `NCLOB` data types are replaced by spaces.</span></span>  
  
 <span data-ttu-id="794e2-293">に`LOB`書き込むには、SQL SELECT ステートメントで FOR `LOB` UPDATE 句を使用してを取得しておく必要があります。また、ローカルトランザクションを開始する必要があります。</span><span class="sxs-lookup"><span data-stu-id="794e2-293">To write to the `LOB`, you must have retrieved the `LOB` using the FOR UPDATE clause in the SQL SELECT statement, and you must have a local transaction started.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="794e2-294">このリリースでは、読み取り`LOB`専用への書き込み操作は成功する可能性がありますが、サーバー上のは`LOB`更新されません。</span><span class="sxs-lookup"><span data-stu-id="794e2-294">In this release, a write operation to a read-only `LOB` might succeed, but does not update the `LOB` on the server.</span></span> <span data-ttu-id="794e2-295">ただし、この場合、の`LOB`ローカルコピーは更新されます。</span><span class="sxs-lookup"><span data-stu-id="794e2-295">In this case, however, the local copy of the `LOB` is updated.</span></span> <span data-ttu-id="794e2-296">そのため、後で<xref:System.Data.OracleClient.OracleLob>オブジェクトに対して読み取り操作を実行すると、書き込み操作の結果が返される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="794e2-296">Therefore, later read operations on the <xref:System.Data.OracleClient.OracleLob> object might return the results of the write operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="794e2-297">操作がトランザクション内で実行されていないか、<see cref="T:System.Data.OracleClient.OracleLob" /> オブジェクトが null か、または接続が閉じられています。</span><span class="sxs-lookup"><span data-stu-id="794e2-297">The operation is not within a transaction, the <see cref="T:System.Data.OracleClient.OracleLob" /> object is null, or the connection is closed.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="794e2-298">オブジェクトが閉じられているか、破棄されています。</span><span class="sxs-lookup"><span data-stu-id="794e2-298">The object was closed or disposed.</span></span></exception>
        <exception cref="T:System.Data.OracleClient.OracleException"><span data-ttu-id="794e2-299">Oracle エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="794e2-299">An Oracle error has occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleLob.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="oracleLob.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="794e2-300">現在サポートされていません。</span><span class="sxs-lookup"><span data-stu-id="794e2-300">Not currently supported.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="794e2-301">このリリースでは、このメソッドは機能しません。</span><span class="sxs-lookup"><span data-stu-id="794e2-301">In this release, this method is not functional.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBatched">
      <MemberSignature Language="C#" Value="public bool IsBatched { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBatched" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleLob.IsBatched" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsBatched As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBatched { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsBatched : bool" Usage="System.Data.OracleClient.OracleLob.IsBatched" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="794e2-302">アプリケーションから <see cref="M:System.Data.OracleClient.OracleLob.BeginBatch" /> メソッドが呼び出されたかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="794e2-302">Gets a value indicating whether an application called the <see cref="M:System.Data.OracleClient.OracleLob.BeginBatch" /> method.</span></span></summary>
        <value><span data-ttu-id="794e2-303"><see cref="M:System.Data.OracleClient.OracleLob.BeginBatch" /> メソッドがアプリケーションから呼び出された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="794e2-303"><see langword="true" /> if application called the <see cref="M:System.Data.OracleClient.OracleLob.BeginBatch" /> method, otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="794e2-304">Oracle 8.0.5 サーバーを使用すると、Oracle の "ORA-00600: 内部エラーコード" 例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="794e2-304">When using an Oracle 8.0.5 server, an Oracle "ORA-00600: internal error code" exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.OracleClient.OracleException"><span data-ttu-id="794e2-305">Oracle エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="794e2-305">An Oracle error has occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public bool IsNull { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNull" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleLob.IsNull" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNull { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNull : bool" Usage="System.Data.OracleClient.OracleLob.IsNull" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.SqlTypes.INullable.IsNull</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="794e2-306"><see cref="T:System.Data.OracleClient.OracleLob" /> が <see cref="F:System.Data.OracleClient.OracleBFile.Null" /> ストリームであるかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="794e2-306">Gets a value that indicates whether the <see cref="T:System.Data.OracleClient.OracleLob" /> is a <see cref="F:System.Data.OracleClient.OracleBFile.Null" /> stream.</span></span></summary>
        <value><span data-ttu-id="794e2-307"><see cref="T:System.Data.OracleClient.OracleLob" /> が <see cref="F:System.Data.OracleClient.OracleBFile.Null" /> ストリームである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="794e2-307"><see langword="true" /> if the <see cref="T:System.Data.OracleClient.OracleLob" /> is a <see cref="F:System.Data.OracleClient.OracleBFile.Null" /> stream, otherwise <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTemporary">
      <MemberSignature Language="C#" Value="public bool IsTemporary { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTemporary" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleLob.IsTemporary" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsTemporary As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsTemporary { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsTemporary : bool" Usage="System.Data.OracleClient.OracleLob.IsTemporary" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="794e2-308"><see cref="T:System.Data.OracleClient.OracleLob" /> が一時 <see langword="LOB" /> であるかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="794e2-308">Gets a value indicating whether the <see cref="T:System.Data.OracleClient.OracleLob" /> is a temporary <see langword="LOB" />.</span></span></summary>
        <value><span data-ttu-id="794e2-309"><see cref="T:System.Data.OracleClient.OracleLob" /> が一時 <see langword="true" /> である場合は <see langword="LOB" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="794e2-309"><see langword="true" /> if the <see cref="T:System.Data.OracleClient.OracleLob" /> is a temporary <see langword="LOB" />, otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="794e2-310">次の例では、一時`LOB`を作成する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="794e2-310">The following example demonstrates how to create a temporary `LOB`.</span></span>  
  
```  
OracleConnection connection = new OracleConnection("server=MyServer; integrated security=yes;");  
connection.Open();  
OracleTransaction transaction = connection.BeginTransaction();  
OracleCommand command = connection.CreateCommand();  
command.Transaction = transaction;  
command.CommandText = "declare xx blob; begin dbms_lob.createtemporary(xx, false, 0); :tempblob := xx; end;";  
command.Parameters.Add(new OracleParameter("tempblob", OracleType.Blob)).Direction = ParameterDirection.Output;  
command.ExecuteNonQuery();  
OracleLob tempLob = (OracleLob)command.Parameters[0].Value;  
tempLob.BeginBatch(OracleLobOpenMode.ReadWrite);  
tempLob.Write(tempbuff,0,tempbuff.Length);  
tempLob.EndBatch();  
command.Parameters.Clear();  
command.CommandText = "MyTable.MyProc";  
command.CommandType = CommandType.StoredProcedure;    
command.Parameters.Add(new OracleParameter("ImportDoc", OracleType.Blob)).Value = tempLob;  
command.ExecuteNonQuery();  
transaction.Commit();  
connection.Close  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="794e2-311">接続が閉じています。</span><span class="sxs-lookup"><span data-stu-id="794e2-311">The connection is closed.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="794e2-312">オブジェクトが閉じられているか、破棄されています。</span><span class="sxs-lookup"><span data-stu-id="794e2-312">The object was closed or disposed.</span></span></exception>
        <exception cref="T:System.Data.OracleClient.OracleException"><span data-ttu-id="794e2-313">Oracle エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="794e2-313">An Oracle error has occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public override long Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Length" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleLob.Length" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Length As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Length { long get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int64" Usage="System.Data.OracleClient.OracleLob.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="794e2-314"><see cref="T:System.Data.OracleClient.OracleLob" /> のサイズを返す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="794e2-314">Gets a value that returns the size of the <see cref="T:System.Data.OracleClient.OracleLob" />.</span></span></summary>
        <value><span data-ttu-id="794e2-315"><see cref="T:System.Data.OracleClient.OracleLob" /> のサイズ (バイト単位)。</span><span class="sxs-lookup"><span data-stu-id="794e2-315">The size of the <see cref="T:System.Data.OracleClient.OracleLob" /> in bytes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="794e2-316">のサイズは常<xref:System.Data.OracleClient.OracleLob>に、すべてのデータ型についてバイト単位で返されます。</span><span class="sxs-lookup"><span data-stu-id="794e2-316">The size of the <xref:System.Data.OracleClient.OracleLob> is always returned in bytes for all data types.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="794e2-317">接続が閉じています。</span><span class="sxs-lookup"><span data-stu-id="794e2-317">The connection is closed.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="794e2-318">オブジェクトが閉じられているか、破棄されています。</span><span class="sxs-lookup"><span data-stu-id="794e2-318">The object was closed or disposed.</span></span></exception>
        <exception cref="T:System.Data.OracleClient.OracleException"><span data-ttu-id="794e2-319">Oracle エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="794e2-319">An Oracle error has occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LobType">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleType LobType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.OracleClient.OracleType LobType" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleLob.LobType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LobType As OracleType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OracleClient::OracleType LobType { System::Data::OracleClient::OracleType get(); };" />
      <MemberSignature Language="F#" Value="member this.LobType : System.Data.OracleClient.OracleType" Usage="System.Data.OracleClient.OracleLob.LobType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="794e2-320"><see langword="LOB" /> データ型を返す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="794e2-320">Gets a value that returns the <see langword="LOB" /> data type.</span></span></summary>
        <value><span data-ttu-id="794e2-321"><see cref="T:System.Data.OracleClient.OracleType" /><see langword="LOB" /> データ型の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="794e2-321">One of the <see cref="T:System.Data.OracleClient.OracleType" /><see langword="LOB" /> data types.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="794e2-322">に<xref:System.Data.OracleClient.OracleLob>は、次<xref:System.Data.OracleClient.OracleType>のいずれかのデータ型を指定できます。</span><span class="sxs-lookup"><span data-stu-id="794e2-322">An <xref:System.Data.OracleClient.OracleLob> may be one of the following <xref:System.Data.OracleClient.OracleType> data types.</span></span>  
  
|<span data-ttu-id="794e2-323">OracleType データ型</span><span class="sxs-lookup"><span data-stu-id="794e2-323">OracleType data type</span></span>|<span data-ttu-id="794e2-324">説明</span><span class="sxs-lookup"><span data-stu-id="794e2-324">Description</span></span>|  
|--------------------------|-----------------|  
|`Blob`|<span data-ttu-id="794e2-325">最大 4 GB のバイナリ データを格納する Oracle の `BLOB` 型。</span><span class="sxs-lookup"><span data-stu-id="794e2-325">An Oracle `BLOB` data type that contains binary data with a maximum size of 4 gigabytes.</span></span> <span data-ttu-id="794e2-326"><xref:System.Array> 型の <xref:System.Byte> に割り当てられます。</span><span class="sxs-lookup"><span data-stu-id="794e2-326">This maps to an <xref:System.Array> of type <xref:System.Byte>.</span></span>|  
|`Clob`|<span data-ttu-id="794e2-327">サーバーの既定の文字セットに基づいて、最大 4 GB の文字データを格納する Oracle の `CLOB` 型。</span><span class="sxs-lookup"><span data-stu-id="794e2-327">An Oracle `CLOB` data type that contains character data, based on the default character set on the server, with a maximum size of 4 gigabytes.</span></span> <span data-ttu-id="794e2-328"><xref:System.String> に割り当てられます。</span><span class="sxs-lookup"><span data-stu-id="794e2-328">This maps to <xref:System.String>.</span></span>|  
|`NClob`|<span data-ttu-id="794e2-329">最大サイズ`NCLOB`が 4 gb のサーバー上の各国語文字セットに基づいて、文字データを格納する Oracle データ型。</span><span class="sxs-lookup"><span data-stu-id="794e2-329">An Oracle `NCLOB` data type that contains character data, based on the national character set on the server with a maximum size of 4 gigabytes.</span></span> <span data-ttu-id="794e2-330"><xref:System.String> に割り当てられます。</span><span class="sxs-lookup"><span data-stu-id="794e2-330">This maps to <xref:System.String>.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Null">
      <MemberSignature Language="C#" Value="public static readonly System.Data.OracleClient.OracleLob Null;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Data.OracleClient.OracleLob Null" />
      <MemberSignature Language="DocId" Value="F:System.Data.OracleClient.OracleLob.Null" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Null As OracleLob " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Data::OracleClient::OracleLob ^ Null;" />
      <MemberSignature Language="F#" Value=" staticval mutable Null : System.Data.OracleClient.OracleLob" Usage="System.Data.OracleClient.OracleLob.Null" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleLob</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="794e2-331">null の <see cref="T:System.Data.OracleClient.OracleLob" /> オブジェクトを表します。</span><span class="sxs-lookup"><span data-stu-id="794e2-331">Represents a null <see cref="T:System.Data.OracleClient.OracleLob" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="794e2-332">次の形式を<xref:System.Data.OracleClient.OracleLob>使用して、NULL であるを構築できます。</span><span class="sxs-lookup"><span data-stu-id="794e2-332">You can construct an <xref:System.Data.OracleClient.OracleLob> that is NULL using this format:</span></span>  
  
```  
OracleLob myLob = OracleLOB.Null;  
```  
  
 <span data-ttu-id="794e2-333">この手法は、主に、サーバーから`LOB`返されたが NULL であるかどうかをテストするために使用されます。この例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="794e2-333">This technique is used primarily to test whether a `LOB` returned from the server is NULL, as this example illustrates:</span></span>  
  
```  
If(myLob == OracleLob.Null)  
```  
  
 <span data-ttu-id="794e2-334">NULL `LOB`は、 `LOB` の <xref:System.Data.OracleClient.OracleLob.Read%2A>  0 バイトと同様に動作し、常にゼロバイトを返します。</span><span class="sxs-lookup"><span data-stu-id="794e2-334">A NULL `LOB` behaves similarly to a zero byte `LOB` in that <xref:System.Data.OracleClient.OracleLob.Read%2A> succeeds and always returns zero bytes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public override long Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Position" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleLob.Position" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Position As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Position { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.Position : int64 with get, set" Usage="System.Data.OracleClient.OracleLob.Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="794e2-335"><see cref="T:System.Data.OracleClient.OracleLob" /> ストリーム内の現在の読み込み位置を取得します。</span><span class="sxs-lookup"><span data-stu-id="794e2-335">Gets the current read position in the <see cref="T:System.Data.OracleClient.OracleLob" /> stream.</span></span></summary>
        <value><span data-ttu-id="794e2-336"><see cref="T:System.Data.OracleClient.OracleLob" /> ストリーム内の現在位置。</span><span class="sxs-lookup"><span data-stu-id="794e2-336">The current position within the <see cref="T:System.Data.OracleClient.OracleLob" /> stream.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="794e2-337">ストリームは、位置を取得または設定するシークをサポートする必要があります。</span><span class="sxs-lookup"><span data-stu-id="794e2-337">The stream must support seeking to get or set the position.</span></span> <span data-ttu-id="794e2-338"><xref:System.Data.OracleClient.OracleLob.CanSeek%2A>プロパティを使用して、ストリームでシークがサポートされているかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="794e2-338">Use the <xref:System.Data.OracleClient.OracleLob.CanSeek%2A> property to determine whether the stream supports seeking.</span></span>  
  
 <span data-ttu-id="794e2-339">ストリームの長さを超えた場所へのシークはサポートされています。</span><span class="sxs-lookup"><span data-stu-id="794e2-339">Seeking to any location beyond the length of the stream is supported.</span></span> <span data-ttu-id="794e2-340">`CLOB` および `NCLOB` データ型の奇数位置のシークもサポートされています。</span><span class="sxs-lookup"><span data-stu-id="794e2-340">Seeking to an odd position for `CLOB` and `NCLOB` data types is also supported.</span></span> <span data-ttu-id="794e2-341">詳細については、 <xref:System.Data.OracleClient.OracleLob.Read%2A>プロパティの「解説」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="794e2-341">For more information, see the Remarks section of the <xref:System.Data.OracleClient.OracleLob.Read%2A> property.</span></span>  
  
 <span data-ttu-id="794e2-342"><xref:System.Data.OracleClient.OracleLob.Position%2A>プロパティは、ストリームから取得されたバイト数 (使用、スキップ、またはその両方) を追跡しません。</span><span class="sxs-lookup"><span data-stu-id="794e2-342">The <xref:System.Data.OracleClient.OracleLob.Position%2A> property does not keep track of the number of bytes from the stream that have been consumed, skipped, or both.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="794e2-343">接続が閉じています。</span><span class="sxs-lookup"><span data-stu-id="794e2-343">The connection is closed.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="794e2-344">オブジェクトが閉じられているか、破棄されています。</span><span class="sxs-lookup"><span data-stu-id="794e2-344">The object was closed or disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (buffer As Byte(), offset As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="override this.Read : byte[] * int * int -&gt; int" Usage="oracleLob.Read (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="794e2-345">バイト配列。</span><span class="sxs-lookup"><span data-stu-id="794e2-345">An array of bytes.</span></span> <span data-ttu-id="794e2-346">このメソッドが戻るとき、指定したバイト配列の <paramref name="offset" /> から (<paramref name="offset" /> + <paramref name="count" />) までの値が、現在のソースから読み取られたバイトに置き換えられて含まれます。</span><span class="sxs-lookup"><span data-stu-id="794e2-346">When this method returns, the buffer contains the specified byte array with the values between <paramref name="offset" /> and (<paramref name="offset" /> + <paramref name="count" />) replaced by the bytes read from the current source.</span></span></param>
        <param name="offset"><span data-ttu-id="794e2-347">現在のストリームから読み取ったデータの格納を開始する位置を示す <paramref name="buffer" /> 内のバイト オフセット。インデックス番号は 0 から始まります。</span><span class="sxs-lookup"><span data-stu-id="794e2-347">The zero-based byte offset in <paramref name="buffer" /> at which to begin storing the data read from the current stream.</span></span> <span data-ttu-id="794e2-348"><see langword="CLOB" /> 型および <see langword="NCLOB" /> 型の場合、これは偶数である必要があります。</span><span class="sxs-lookup"><span data-stu-id="794e2-348">For <see langword="CLOB" /> and <see langword="NCLOB" /> data types, this must be an even number.</span></span></param>
        <param name="count"><span data-ttu-id="794e2-349">現在のストリームから読み取る最大バイト数。</span><span class="sxs-lookup"><span data-stu-id="794e2-349">The maximum number of bytes to be read from the current stream.</span></span> <span data-ttu-id="794e2-350"><see langword="CLOB" /> 型および <see langword="NCLOB" /> 型の場合、これは偶数である必要があります。</span><span class="sxs-lookup"><span data-stu-id="794e2-350">For <see langword="CLOB" /> and <see langword="NCLOB" /> data types, this must be an even number.</span></span></param>
        <summary><span data-ttu-id="794e2-351">現在の <see cref="T:System.Data.OracleClient.OracleLob" /> ストリームからバイト シーケンスを読み取り、読み取ったバイト数の分だけストリーム内の位置を進めます。</span><span class="sxs-lookup"><span data-stu-id="794e2-351">Reads a sequence of bytes from the current <see cref="T:System.Data.OracleClient.OracleLob" /> stream and advances the position within the stream by the number of bytes read.</span></span></summary>
        <returns><span data-ttu-id="794e2-352">バッファーに読み取られた合計バイト数。</span><span class="sxs-lookup"><span data-stu-id="794e2-352">The total number of bytes read into the buffer.</span></span> <span data-ttu-id="794e2-353">要求しただけのバイト数を読み取ることができなかった場合、この値は要求したバイト数より小さくなります。ストリームの末尾に到達した場合は 0 になることがあります。</span><span class="sxs-lookup"><span data-stu-id="794e2-353">This may be less than the number of bytes requested if that many bytes are not currently available, or zero (0) if the end of the stream has been reached.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="794e2-354">メソッド<xref:System.Data.OracleClient.OracleLob.Read%2A>は、現在のストリーム`count`から最大バイトを読み取り、から始まるに`buffer` `offset`格納します。</span><span class="sxs-lookup"><span data-stu-id="794e2-354">The <xref:System.Data.OracleClient.OracleLob.Read%2A> method reads a maximum of `count` bytes from the current stream and stores them in `buffer` beginning at `offset`.</span></span> <span data-ttu-id="794e2-355">ストリーム内の現在位置は、読み取ったバイト数だけ進んでいます。ただし、例外が発生した場合、ストリーム内の現在位置は変更されません。</span><span class="sxs-lookup"><span data-stu-id="794e2-355">The current position within the stream is advanced by the number of bytes read; however, if an exception occurs, the current position within the stream remains unchanged.</span></span> <span data-ttu-id="794e2-356"><xref:System.Data.OracleClient.OracleLob.Read%2A>読み取ったバイト数を返します。</span><span class="sxs-lookup"><span data-stu-id="794e2-356"><xref:System.Data.OracleClient.OracleLob.Read%2A> returns the number of bytes read.</span></span> <span data-ttu-id="794e2-357">位置が現在ストリームの末尾にある場合にのみ、戻り値は0です。</span><span class="sxs-lookup"><span data-stu-id="794e2-357">The return value is zero only if the position is currently at the end of the stream.</span></span> <span data-ttu-id="794e2-358"><xref:System.Data.OracleClient.OracleLob.Read%2A>は、データが使用できない場合に、少なくとも1バイトのデータを読み取ることができるようになるまでブロックされます。<xref:System.Data.OracleClient.OracleLob.Read%2A></span><span class="sxs-lookup"><span data-stu-id="794e2-358"><xref:System.Data.OracleClient.OracleLob.Read%2A> will block until at least one byte of data can be read, in the event that no data is available.<xref:System.Data.OracleClient.OracleLob.Read%2A></span></span> <span data-ttu-id="794e2-359">現在の位置がの`LOB` `LOB`最後にあるときに、から読み取ろうとした場合は0を返します。</span><span class="sxs-lookup"><span data-stu-id="794e2-359">returns 0 if you attempt to read from a `LOB` when the current position is at the end of `LOB`.</span></span> <span data-ttu-id="794e2-360"><xref:System.Data.OracleClient.OracleLob.Read%2A>は、ストリームの末尾に到達していない場合でも、要求されたバイト数よりも小さい値を返すことができます。</span><span class="sxs-lookup"><span data-stu-id="794e2-360"><xref:System.Data.OracleClient.OracleLob.Read%2A> can return fewer bytes than requested even if the end of the stream has not been reached.</span></span>  
  
 <span data-ttu-id="794e2-361">Oracle 用の .NET Framework Data Provider は、 `CLOB`すべて`NCLOB`のおよびデータを Unicode として処理します。</span><span class="sxs-lookup"><span data-stu-id="794e2-361">The .NET Framework Data Provider for Oracle handles all `CLOB` and `NCLOB` data as Unicode.</span></span> <span data-ttu-id="794e2-362">したがって、データ`CLOB`型`NCLOB`およびデータ型にアクセスする場合は、常にバイト数を処理します。各文字は2バイトです。</span><span class="sxs-lookup"><span data-stu-id="794e2-362">Therefore, when accessing `CLOB` and `NCLOB` data types, you are always dealing with the number of bytes, where each character is 2 bytes.</span></span> <span data-ttu-id="794e2-363">たとえば、3つの文字を含むテキストの文字列が Oracle サーバー `NCLOB`のとして保存されていて、文字セットが1文字に4バイトで、 `Read`操作を実行する場合、文字列の長さを6バイトに指定しますが、サーバーに12バイトとして格納されます。</span><span class="sxs-lookup"><span data-stu-id="794e2-363">For example, if a string of text containing three characters is saved as an `NCLOB` on an Oracle server where the character set is 4 bytes per character, and you perform a `Read` operation, you specify the length of the string as 6 bytes, although it is stored as 12 bytes on the server.</span></span>  
  
 <span data-ttu-id="794e2-364">次C#の例は、オブジェクトの<xref:System.Data.OracleClient.OracleLob>読み取り方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="794e2-364">The following C# example demonstrates how to read <xref:System.Data.OracleClient.OracleLob> objects.</span></span>  
  
```  
public static void ReadLobExample(OracleCommand command)  
{  
   int actual = 0;  
  
   //Select some data.  
   // Table Schema:  
   //  "CREATE TABLE TableWithLobs (a int, b BLOB, c CLOB, d NCLOB)";  
   //  "INSERT INTO TableWithLobs values (1, 'AA', 'AAA', N'AAAA')";  
   command.CommandText = "SELECT * FROM TableWithLobs";  
   OracleDataReader reader = command.ExecuteReader();  
   using(reader)  
   {  
      //Obtain the first row of data.  
      reader.Read();  
      //Obtain the LOBs (all 3 varieties).  
      OracleLob BLOB = reader.GetOracleLob(1);  
      OracleLob CLOB  = reader.GetOracleLob(2);  
      OracleLob NCLOB = reader.GetOracleLob(3);  
  
      //Example - Reading binary data (in chunks).  
      byte[] buffer = new byte[100];  
      while((actual = BLOB.Read(buffer, 0, buffer.Length)) >0)  
         Console.WriteLine(BLOB.LobType + ".Read(" + buffer + ", " + buffer.Length + ") => " + actual);  
  
      //Example - Reading CLOB/NCLOB data (in chunks).  
      //Note: You can read character data as raw Unicode bytes (using OracleLob.Read as in the above example).  
      //However, because the OracleLob object inherits directly from the.NET stream object,   
      //all the existing classes that manipulate streams can also be used. For example, the   
      //.NET StreamReader makes converting the raw bytes into actual characters easier.  
      StreamReader streamreader = new StreamReader(CLOB, Encoding.Unicode);  
      char[] cbuffer = new char[100];  
      while((actual = streamreader.Read(cbuffer, 0, cbuffer.Length)) >0)  
         Console.WriteLine(CLOB.LobType + ".Read(" + new string(cbuffer, 0, actual) + ", " + cbuffer.Length + ") => " + actual);  
  
      //Example - Reading data (all at once).  
      //You could use StreamReader.ReadToEnd to obtain all the string data,or simply  
      //call OracleLob.Value to obtain a contiguous allocation of all the data.  
      Console.WriteLine(NCLOB.LobType + ".Value => " + NCLOB.Value);  
   }  
}  
```  
  
 <span data-ttu-id="794e2-365">次の形式を<xref:System.Data.OracleClient.OracleLob>使用して、NULL であるを構築できます。</span><span class="sxs-lookup"><span data-stu-id="794e2-365">You can construct an <xref:System.Data.OracleClient.OracleLob> that is NULL using this format:</span></span>  
  
```  
OracleLob myLob = OracleLob.Null;  
```  
  
 <span data-ttu-id="794e2-366">この手法は、次の例に示す`LOB`ように、主にサーバーから返されたが NULL かどうかをテストするために使用されます。</span><span class="sxs-lookup"><span data-stu-id="794e2-366">This technique is used primarily to test whether a `LOB` returned from the server is NULL, as the following example illustrates.</span></span>  
  
```  
If(myLob == OracleLob.Null)  
```  
  
 <span data-ttu-id="794e2-367">NULL `LOB`は、 `LOB` の <xref:System.Data.OracleClient.OracleLob.Read%2A>  0 バイトと同様に動作し、常にゼロバイトを返します。</span><span class="sxs-lookup"><span data-stu-id="794e2-367">A NULL `LOB` behaves similarly to a zero byte `LOB` in that <xref:System.Data.OracleClient.OracleLob.Read%2A> succeeds and always returns zero bytes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="794e2-368"><paramref name="buffer" /> が null 参照 (Visual Basic の場合は <see langword="Nothing" />) です。</span><span class="sxs-lookup"><span data-stu-id="794e2-368">The <paramref name="buffer" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="794e2-369"><paramref name="offset" /> パラメーターまたは <paramref name="count" /> パラメーターの値が正の値ではありません。</span><span class="sxs-lookup"><span data-stu-id="794e2-369">A value in the <paramref name="offset" /> or <paramref name="count" /> parameter is not positive.</span></span>  
  
<span data-ttu-id="794e2-370">- または -</span><span class="sxs-lookup"><span data-stu-id="794e2-370">-or-</span></span> 
<span data-ttu-id="794e2-371">オフセット パラメーターとカウント パラメーターの合計値が、バッファー長を超えています。</span><span class="sxs-lookup"><span data-stu-id="794e2-371">The sum of the offset and count parameters is larger than the buffer length.</span></span>  
  
<span data-ttu-id="794e2-372">または</span><span class="sxs-lookup"><span data-stu-id="794e2-372">-or-</span></span> 
<span data-ttu-id="794e2-373"><paramref name="amount" /> パラメーターまたは <paramref name="offset" /> パラメーターに指定された値が 0 より小さいか、4 GB を超えています。</span><span class="sxs-lookup"><span data-stu-id="794e2-373">A value specified in the <paramref name="amount" /> or <paramref name="offset" /> parameter is less than zero or greater than 4 gigabytes.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="794e2-374">操作がトランザクション内で実行されていないか、<see cref="T:System.Data.OracleClient.OracleLob" /> オブジェクトが null か、または接続が閉じられています。</span><span class="sxs-lookup"><span data-stu-id="794e2-374">The operation is not within a transaction, the <see cref="T:System.Data.OracleClient.OracleLob" /> object is null, or the connection is closed.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="794e2-375">オブジェクトが閉じられているか、破棄されています。</span><span class="sxs-lookup"><span data-stu-id="794e2-375">The object was closed or disposed.</span></span></exception>
        <exception cref="T:System.Data.OracleClient.OracleException"><span data-ttu-id="794e2-376">Oracle エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="794e2-376">An Oracle error has occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public override long Seek (long offset, System.IO.SeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 Seek(int64 offset, valuetype System.IO.SeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleLob.Seek(System.Int64,System.IO.SeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Seek (offset As Long, origin As SeekOrigin) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long Seek(long offset, System::IO::SeekOrigin origin);" />
      <MemberSignature Language="F#" Value="override this.Seek : int64 * System.IO.SeekOrigin -&gt; int64" Usage="oracleLob.Seek (offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="origin" Type="System.IO.SeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="794e2-377">原点からのバイト オフセット。</span><span class="sxs-lookup"><span data-stu-id="794e2-377">A byte offset relative to origin.</span></span> <span data-ttu-id="794e2-378"><paramref name="offset" /> が負の値の場合は、<paramref name="origin" /> で指定した位置から <paramref name="offset" /> で指定したバイト数だけさかのぼった位置が新しい位置になります。</span><span class="sxs-lookup"><span data-stu-id="794e2-378">If <paramref name="offset" /> is negative, the new position precedes the position specified by <paramref name="origin" /> by the number of bytes specified by <paramref name="offset" />.</span></span> <span data-ttu-id="794e2-379"><paramref name="offset" /> が 0 の場合は、<paramref name="origin" /> で指定した位置が新しい位置になります。</span><span class="sxs-lookup"><span data-stu-id="794e2-379">If <paramref name="offset" /> is zero, the new position is the position specified by <paramref name="origin" />.</span></span> <span data-ttu-id="794e2-380"><paramref name="offset" /> が正の値の場合は、<paramref name="origin" /> で指定した位置から <paramref name="offset" /> で指定したバイト数だけ進んだ位置が新しい位置になります。</span><span class="sxs-lookup"><span data-stu-id="794e2-380">If <paramref name="offset" /> is positive, the new position follows the position specified by <paramref name="origin" /> by the number of bytes specified by <paramref name="offset" />.</span></span></param>
        <param name="origin"><span data-ttu-id="794e2-381">新しい位置を取得するために使用する参照ポイントを示す <see cref="T:System.IO.SeekOrigin" /> 型の値。</span><span class="sxs-lookup"><span data-stu-id="794e2-381">A value of type <see cref="T:System.IO.SeekOrigin" /> indicating the reference point used to obtain the new position.</span></span></param>
        <summary><span data-ttu-id="794e2-382">現在の <see cref="T:System.Data.OracleClient.OracleLob" /> ストリームで位置を設定します。</span><span class="sxs-lookup"><span data-stu-id="794e2-382">Sets the position on the current <see cref="T:System.Data.OracleClient.OracleLob" /> stream.</span></span></summary>
        <returns><span data-ttu-id="794e2-383">現在のストリーム内の新しい位置。</span><span class="sxs-lookup"><span data-stu-id="794e2-383">The new position within the current stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="794e2-384">が`offset`負の値の場合、で`origin`指定した位置の前に、で指定した`offset`バイト数だけ新しい位置を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="794e2-384">If `offset` is negative, the new position must precede the position specified by `origin` by the number of bytes specified by `offset`.</span></span> <span data-ttu-id="794e2-385">が`offset` 0 の場合、新しい位置はで`origin`指定された位置である必要があります。</span><span class="sxs-lookup"><span data-stu-id="794e2-385">If `offset` is zero, the new position must be the position specified by `origin`.</span></span> <span data-ttu-id="794e2-386">が`offset`正の値の `origin` 場合、新しい位置はで指定されたバイト数で指定された位置に従う必要があります。 `offset`</span><span class="sxs-lookup"><span data-stu-id="794e2-386">If `offset` is positive, the new position must follow the position specified by `origin` by the number of bytes specified by `offset`.</span></span>  
  
 <span data-ttu-id="794e2-387">ストリームの長さを超えた場所へのシークはサポートされています。</span><span class="sxs-lookup"><span data-stu-id="794e2-387">Seeking to any location beyond the length of the stream is supported.</span></span> <span data-ttu-id="794e2-388">`CLOB` および `NCLOB` データ型の奇数位置のシークもサポートされています。</span><span class="sxs-lookup"><span data-stu-id="794e2-388">Seeking to an odd position for `CLOB` and `NCLOB` data types is also supported.</span></span> <span data-ttu-id="794e2-389">詳細については、 <xref:System.Data.OracleClient.OracleLob.Read%2A>プロパティの「解説」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="794e2-389">For more information, see the Remarks section of the <xref:System.Data.OracleClient.OracleLob.Read%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="794e2-390"><paramref name="origin" /> パラメーターが、有効な値を格納していません。</span><span class="sxs-lookup"><span data-stu-id="794e2-390">The <paramref name="origin" /> parameter does not contain a valid value.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="794e2-391">結果として得られた位置が値の長さを超えています。</span><span class="sxs-lookup"><span data-stu-id="794e2-391">The resulting position is beyond the length of the value.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="794e2-392"><see cref="T:System.Data.OracleClient.OracleLob" /> オブジェクトが閉じているか、破棄されています。</span><span class="sxs-lookup"><span data-stu-id="794e2-392">The <see cref="T:System.Data.OracleClient.OracleLob" /> object was closed or disposed.</span></span></exception>
        <exception cref="T:System.Data.OracleClient.OracleException"><span data-ttu-id="794e2-393">Oracle エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="794e2-393">An Oracle error has occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetLength">
      <MemberSignature Language="C#" Value="public override void SetLength (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetLength(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleLob.SetLength(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetLength (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetLength(long value);" />
      <MemberSignature Language="F#" Value="override this.SetLength : int64 -&gt; unit" Usage="oracleLob.SetLength value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="794e2-394">現在の <see cref="T:System.Data.OracleClient.OracleLob" /> ストリームの希望の長さ (バイト数)。</span><span class="sxs-lookup"><span data-stu-id="794e2-394">The desired length of the current <see cref="T:System.Data.OracleClient.OracleLob" /> stream in bytes.</span></span> <span data-ttu-id="794e2-395"><see langword="CLOB" /> 型および <see langword="NCLOB" /> 型の場合、これは偶数である必要があります。</span><span class="sxs-lookup"><span data-stu-id="794e2-395">For <see langword="CLOB" /> and <see langword="NCLOB" /> data types, this must be an even number.</span></span></param>
        <summary><span data-ttu-id="794e2-396"><see cref="T:System.Data.OracleClient.OracleLob" /> ストリームの長さを、現在の長さより短い値に設定します。</span><span class="sxs-lookup"><span data-stu-id="794e2-396">Sets the length of the <see cref="T:System.Data.OracleClient.OracleLob" /> stream to a value less than the current length.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="794e2-397"><xref:System.Data.OracleClient.OracleLob>ストリームの長さを増やす試みは失敗し、"Message: ORA-22926: 指定されたトリミングの長さが現在の LOB 値の長さを超えています" が Oracle サーバーから返されます。</span><span class="sxs-lookup"><span data-stu-id="794e2-397">An attempt to increase the length of the <xref:System.Data.OracleClient.OracleLob> stream fails, and returns "Message: ORA-22926: specified trim length is greater than current LOB value's length" from the Oracle server.</span></span>  
  
 <span data-ttu-id="794e2-398">ストリームでは、の書き込みとシークの<xref:System.Data.OracleClient.OracleLob.SetLength%2A>両方がサポートされている必要があります。</span><span class="sxs-lookup"><span data-stu-id="794e2-398">A stream must support both writing and seeking for <xref:System.Data.OracleClient.OracleLob.SetLength%2A> to function.</span></span>  
  
 <span data-ttu-id="794e2-399">Oracle 用の .NET Framework Data Provider は、 `CLOB`すべて`NCLOB`のおよびデータを Unicode として処理します。</span><span class="sxs-lookup"><span data-stu-id="794e2-399">The .NET Framework Data Provider for Oracle handles all `CLOB` and `NCLOB` data as Unicode.</span></span> <span data-ttu-id="794e2-400">したがって、データ`CLOB`型`NCLOB`およびデータ型にアクセスする場合は、常にバイト数を処理します。各文字は2バイトです。</span><span class="sxs-lookup"><span data-stu-id="794e2-400">Therefore, when accessing `CLOB` and `NCLOB` data types, you are always dealing with the number of bytes, where each character is 2 bytes.</span></span> <span data-ttu-id="794e2-401">たとえば、3つの文字を含むテキストの文字列が Oracle サーバー `NCLOB`のとして保存されていて、文字セットが1文字に4バイトで、 `SetLength`操作を実行する場合、文字列の長さを6バイトに指定しますが、サーバーに12バイトとして格納されます。</span><span class="sxs-lookup"><span data-stu-id="794e2-401">For example, if a string of text containing three characters is saved as an `NCLOB` on an Oracle server where the character set is 4 bytes per character, and you perform a `SetLength` operation, you specify the length of the string as 6 bytes, although it is stored as 12 bytes on the server.</span></span>  
  
 <span data-ttu-id="794e2-402">に`LOB`書き込むには、SQL SELECT ステートメントで FOR `LOB` UPDATE 句を使用してを取得しておく必要があります。また、ローカルトランザクションを開始する必要があります。</span><span class="sxs-lookup"><span data-stu-id="794e2-402">To write to the `LOB`, you must have retrieved the `LOB` using the FOR UPDATE clause in the SQL SELECT statement, and you must have a local transaction started.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="794e2-403">読み取り`LOB`専用への書き込み操作は成功する可能性がありますが、サーバー `LOB`上のは更新されません。</span><span class="sxs-lookup"><span data-stu-id="794e2-403">A write operation to a read-only `LOB` might succeed, but does not update the `LOB` on the server.</span></span> <span data-ttu-id="794e2-404">ただし、この場合、の`LOB`ローカルコピーは更新されます。</span><span class="sxs-lookup"><span data-stu-id="794e2-404">In this case, however, the local copy of the `LOB` is updated.</span></span> <span data-ttu-id="794e2-405">そのため、後で<xref:System.Data.OracleClient.OracleLob>オブジェクトに対して読み取り操作を実行すると、書き込み操作の結果が返される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="794e2-405">Therefore, later read operations on the <xref:System.Data.OracleClient.OracleLob> object might return the results of the write operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="794e2-406"><paramref name="value" /> パラメーターで <see langword="CLOB" /> または <see langword="NCLOB" /> データ型に指定した値が偶数ではありません。</span><span class="sxs-lookup"><span data-stu-id="794e2-406">A value specified in the <paramref name="value" /> parameter for a <see langword="CLOB" /> or <see langword="NCLOB" /> data type is not even.</span></span>  
  
<span data-ttu-id="794e2-407">または</span><span class="sxs-lookup"><span data-stu-id="794e2-407">-or-</span></span> 
<span data-ttu-id="794e2-408"><paramref name="value" /> で指定したパラメーターの値が 0 未満であるか、4 GB を超えています。</span><span class="sxs-lookup"><span data-stu-id="794e2-408">A value specified in the <paramref name="value" /> parameter is less than zero or greater than 4 gigabytes.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="794e2-409">操作がトランザクション内で実行されていないか、<see cref="T:System.Data.OracleClient.OracleLob" /> オブジェクトが null か、または接続が閉じられています。</span><span class="sxs-lookup"><span data-stu-id="794e2-409">The operation is not within a transaction, the <see cref="T:System.Data.OracleClient.OracleLob" /> object is null, or the connection is closed.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="794e2-410">オブジェクトが閉じられているか、破棄されています。</span><span class="sxs-lookup"><span data-stu-id="794e2-410">The object was closed or disposed.</span></span></exception>
        <exception cref="T:System.Data.OracleClient.OracleException"><span data-ttu-id="794e2-411">Oracle エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="794e2-411">An Oracle error has occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleLob.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : obj" Usage="System.Data.OracleClient.OracleLob.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="794e2-412">基になる値と等価の共通言語ランタイムの値を取得します。</span><span class="sxs-lookup"><span data-stu-id="794e2-412">Gets the common language runtime stream value equivalent of the underlying value.</span></span></summary>
        <value><span data-ttu-id="794e2-413"><see cref="F:System.Data.OracleClient.OracleType.Blob" /> の場合、<see langword="Byte[]" /> 型の配列。</span><span class="sxs-lookup"><span data-stu-id="794e2-413">For <see cref="F:System.Data.OracleClient.OracleType.Blob" />, an array of type <see langword="Byte[]" />.</span></span> <span data-ttu-id="794e2-414"><see cref="F:System.Data.OracleClient.OracleType.Clob" /> および <see cref="F:System.Data.OracleClient.OracleType.NClob" /> の場合、<see langword="String" />。</span><span class="sxs-lookup"><span data-stu-id="794e2-414">For <see cref="F:System.Data.OracleClient.OracleType.Clob" /> and <see cref="F:System.Data.OracleClient.OracleType.NClob" />, a <see langword="String" />.</span></span> <span data-ttu-id="794e2-415">null データの場合、<see cref="T:System.DBNull" />。</span><span class="sxs-lookup"><span data-stu-id="794e2-415">For null data, <see cref="T:System.DBNull" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="794e2-416">データ<xref:System.Data.OracleClient.OracleType.Blob>型の場合<xref:System.Data.OracleClient.OracleLob.Value%2A>は、基になるデータ全体を型`Byte[]`の連続した配列として返します。</span><span class="sxs-lookup"><span data-stu-id="794e2-416">For <xref:System.Data.OracleClient.OracleType.Blob> data types, <xref:System.Data.OracleClient.OracleLob.Value%2A> returns the entire underlying data as a contiguous array of type `Byte[]`.</span></span> <span data-ttu-id="794e2-417">および<xref:System.Data.OracleClient.OracleType.Clob> <xref:System.Data.OracleClient.OracleLob.Value%2A> `String`データ型の場合は、すべてのデータがデータ型として返されます。 <xref:System.Data.OracleClient.OracleType.NClob></span><span class="sxs-lookup"><span data-stu-id="794e2-417">For <xref:System.Data.OracleClient.OracleType.Clob> and <xref:System.Data.OracleClient.OracleType.NClob> data types, <xref:System.Data.OracleClient.OracleLob.Value%2A> returns all the data as a `String` data type.</span></span> <span data-ttu-id="794e2-418">Null データの場合<xref:System.Data.OracleClient.OracleLob.Value%2A> 、 <xref:System.DBNull>はを返します。</span><span class="sxs-lookup"><span data-stu-id="794e2-418">For null data, <xref:System.Data.OracleClient.OracleLob.Value%2A> returns <xref:System.DBNull>.</span></span> <span data-ttu-id="794e2-419">返された値を比較することによって、空のデータ、null データ、およびデータを区別できます。</span><span class="sxs-lookup"><span data-stu-id="794e2-419">By comparing the returned values, you can distinguish among empty data, null data, and data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="794e2-420">データ型を使用`LOB`する利点は、クライアントで大量のデータをチャンク単位で取得する機能です。</span><span class="sxs-lookup"><span data-stu-id="794e2-420">A benefit of using `LOB` data types is the capability to retrieve large amounts of data in chunks at the client.</span></span> <span data-ttu-id="794e2-421">ただし、を使用<xref:System.Data.OracleClient.OracleLob.Value%2A>すると、 `LOB`列のすべてのデータが1つの連続するチャンクとして取得されるため、アプリケーションのオーバーヘッドが大幅に増加する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="794e2-421">However, when you use <xref:System.Data.OracleClient.OracleLob.Value%2A>, you obtain all the data for the `LOB` column as one contiguous chunk, which can significantly increase application overhead.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="794e2-422">オブジェクトが閉じられているか、破棄されています。</span><span class="sxs-lookup"><span data-stu-id="794e2-422">The object was closed or disposed.</span></span></exception>
        <exception cref="T:System.Data.OracleClient.OracleException"><span data-ttu-id="794e2-423">Oracle エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="794e2-423">An Oracle error has occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Byte(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="override this.Write : byte[] * int * int -&gt; unit" Usage="oracleLob.Write (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="794e2-424">バイト配列。</span><span class="sxs-lookup"><span data-stu-id="794e2-424">An array of bytes.</span></span> <span data-ttu-id="794e2-425">このメソッドは、<paramref name="count" /> から現在のストリームに、<paramref name="buffer" /> で指定されたバイト数だけコピーします。</span><span class="sxs-lookup"><span data-stu-id="794e2-425">This method copies the number of bytes specified in <paramref name="count" /> from <paramref name="buffer" /> to the current stream.</span></span></param>
        <param name="offset"><span data-ttu-id="794e2-426">現在のストリームへのバイトのコピーを開始する位置を示す <paramref name="buffer" /> 内のバイト オフセット。インデックス番号は 0 から始まります。</span><span class="sxs-lookup"><span data-stu-id="794e2-426">The zero-based byte offset in <paramref name="buffer" /> at which to begin copying bytes to the current stream.</span></span> <span data-ttu-id="794e2-427"><see langword="CLOB" /> 型および <see langword="NCLOB" /> 型の場合、これは偶数である必要があります。</span><span class="sxs-lookup"><span data-stu-id="794e2-427">For <see langword="CLOB" /> and <see langword="NCLOB" /> data types, this must be an even number.</span></span></param>
        <param name="count"><span data-ttu-id="794e2-428">現在のストリームに書き込むバイト数。</span><span class="sxs-lookup"><span data-stu-id="794e2-428">The number of bytes to be written to the current stream.</span></span> <span data-ttu-id="794e2-429"><see langword="CLOB" /> 型および <see langword="NCLOB" /> 型の場合、これは偶数である必要があります。</span><span class="sxs-lookup"><span data-stu-id="794e2-429">For <see langword="CLOB" /> and <see langword="NCLOB" /> data types, this must be an even number.</span></span></param>
        <summary><span data-ttu-id="794e2-430">バイト シーケンスを現在の <see cref="T:System.Data.OracleClient.OracleLob" /> ストリームに書き込み、書き込んだバイト数の分だけストリーム内の現在位置を進めます。</span><span class="sxs-lookup"><span data-stu-id="794e2-430">Writes a sequence of bytes to the current <see cref="T:System.Data.OracleClient.OracleLob" /> stream, and advances the current position within this stream by the number of bytes written.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="794e2-431">書き込み操作が成功した場合、ストリーム内の位置は、書き込まれたバイト数だけ進みます。</span><span class="sxs-lookup"><span data-stu-id="794e2-431">If the write operation is successful, the position within the stream advances by the number of bytes written.</span></span> <span data-ttu-id="794e2-432">例外が発生した場合、ストリーム内の位置は変更されません。</span><span class="sxs-lookup"><span data-stu-id="794e2-432">If an exception occurs, the position within the stream remains unchanged.</span></span>  
  
 <span data-ttu-id="794e2-433">の`LOB`末尾を超えた書き込みが許可され`LOB` 、書き込まれたバイト数だけを拡大します。</span><span class="sxs-lookup"><span data-stu-id="794e2-433">Writing beyond the end of `LOB` is allowed and enlarges the `LOB` by the number of bytes written.</span></span>  
  
 <span data-ttu-id="794e2-434">Oracle 用の .NET Framework Data Provider は、 `CLOB`すべて`NCLOB`のおよびデータを Unicode として処理します。</span><span class="sxs-lookup"><span data-stu-id="794e2-434">The .NET Framework Data Provider for Oracle handles all `CLOB` and `NCLOB` data as Unicode.</span></span> <span data-ttu-id="794e2-435">したがって、データ`CLOB`型`NCLOB`およびデータ型にアクセスする場合は、常にバイト数を処理します。各文字は2バイトです。</span><span class="sxs-lookup"><span data-stu-id="794e2-435">Therefore, when accessing `CLOB` and `NCLOB` data types, you are always dealing with the number of bytes, where each character is 2 bytes.</span></span> <span data-ttu-id="794e2-436">たとえば、3つの文字を含むテキストの文字列が Oracle サーバー `NCLOB`のとして保存されていて、文字セットが1文字に4バイトで、 `Write`操作を実行する場合、文字列の長さを6バイトに指定しますが、サーバーに12バイトとして格納されます。</span><span class="sxs-lookup"><span data-stu-id="794e2-436">For example, if a string of text containing three characters is saved as an `NCLOB` on an Oracle server where the character set is 4 bytes per character, and you perform a `Write` operation, you specify the length of the string as 6 bytes, although it is stored as 12 bytes on the server.</span></span>  
  
 <span data-ttu-id="794e2-437">に`LOB`書き込むには、SQL SELECT ステートメントで FOR `LOB` UPDATE 句を使用してを取得しておく必要があります。また、ローカルトランザクションを開始する必要があります。</span><span class="sxs-lookup"><span data-stu-id="794e2-437">To write to the `LOB`, you must have retrieved the `LOB` using the FOR UPDATE clause in the SQL SELECT statement, and you must have a local transaction started.</span></span>  
  
 <span data-ttu-id="794e2-438">次C#の例は、オブジェクトに<xref:System.Data.OracleClient.OracleLob>書き込む方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="794e2-438">The following C# example demonstrates how to write to <xref:System.Data.OracleClient.OracleLob> objects.</span></span>  
  
```  
public static void WriteLobExample(OracleCommand command)  
{  
   //Note: Updating LOB data requires a transaction.  
   command.Transaction = command.Connection.BeginTransaction();  
   //Select some data.  
   //    Table Schema:  
   //        "CREATE TABLE tablewithlobs (a int, b BLOB, c BLOB)";  
   //        "INSERT INTO tablewithlobs values (1, 'AA', 'AAA')";  
   command.CommandText = "SELECT * FROM TableWithLobs FOR UPDATE";  
   OracleDataReader reader = command.ExecuteReader();  
   using(reader)  
   {  
      //Obtain the first row of data.  
      reader.Read();  
      //Obtain both LOBs.  
      OracleLob BLOB1    = reader.GetOracleLob(1);  
      OracleLob BLOB2    = reader.GetOracleLob(2);  
      //Perform any desired operations on the LOB, (read, position, and so on).  
      //...  
      //Example - Writing binary data (directly to the backend).  
      //To write, you can use any of the stream classes, or write raw binary data using   
      //the OracleLob write method. Writing character vs. binary is the same;  
      //however note that character is always in terms of Unicode byte counts  
      //(for example: even number of bytes - 2 bytes for every Unicode character).  
      byte[] buffer = new byte[100];  
      buffer[0] = 0xCC;  
      buffer[1] = 0xDD;  
      BLOB1.Write(buffer, 0, 2);  
      BLOB1.Position = 0;  
      Console.WriteLine(BLOB1.LobType + ".Write(" + buffer + ", 0, 2) => " + BLOB1.Value);  
  
      //Example - Copying data into another LOB.  
      long actual = BLOB1.CopyTo(BLOB2);  
      Console.WriteLine(BLOB1.LobType + ".CopyTo(" + BLOB2.Value + ") => " + actual);  
  
      //Commit the transaction now that everything succeeded.  
      //Note: On error, Transaction.Dispose is called (from the using statement)  
      //and will automatically roll-back the pending transaction.  
      command.Transaction.Commit();  
   }  
}  
```  
  
> [!NOTE]
>  <span data-ttu-id="794e2-439">読み取り`LOB`専用への書き込み操作は成功する可能性がありますが、サーバー `LOB`上のは更新されません。</span><span class="sxs-lookup"><span data-stu-id="794e2-439">A write operation to a read-only `LOB` might succeed, but does not update the `LOB` on the server.</span></span> <span data-ttu-id="794e2-440">ただし、この場合、の`LOB`ローカルコピーは更新されます。</span><span class="sxs-lookup"><span data-stu-id="794e2-440">In this case, however, the local copy of the `LOB` is updated.</span></span> <span data-ttu-id="794e2-441">そのため、後で<xref:System.Data.OracleClient.OracleLob>オブジェクトに対して読み取り操作を実行すると、書き込み操作の結果が返される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="794e2-441">Therefore, later read operations on the <xref:System.Data.OracleClient.OracleLob> object might return the results of the write operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="794e2-442"><paramref name="buffer" /> パラメーターが null 参照 (Visual Basic の場合は <see langword="Nothing" />) です。</span><span class="sxs-lookup"><span data-stu-id="794e2-442">The <paramref name="buffer" /> parameter is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="794e2-443"><paramref name="offset" /> パラメーターまたは <paramref name="count" /> パラメーターの値が正の値ではありません。</span><span class="sxs-lookup"><span data-stu-id="794e2-443">A value in the <paramref name="offset" /> or <paramref name="count" /> parameter is not positive.</span></span>  
  
<span data-ttu-id="794e2-444">または</span><span class="sxs-lookup"><span data-stu-id="794e2-444">-or-</span></span> 
<span data-ttu-id="794e2-445"><paramref name="offset" /> パラメーターと <paramref name="count" /> パラメーターの合計値が、<paramref name="buffer" /> の長さを超えています。</span><span class="sxs-lookup"><span data-stu-id="794e2-445">The sum of the <paramref name="offset" /> and <paramref name="count" /> parameters is larger than the <paramref name="buffer" /> length.</span></span>  
  
<span data-ttu-id="794e2-446">または</span><span class="sxs-lookup"><span data-stu-id="794e2-446">-or-</span></span> 
<span data-ttu-id="794e2-447"><paramref name="count" /> パラメーターまたは <paramref name="offset" /> パラメーターに指定された値が 0 より小さいか、4 GB を超えています。</span><span class="sxs-lookup"><span data-stu-id="794e2-447">A value specified in the <paramref name="count" /> or <paramref name="offset" /> parameter is less than zero or greater than 4 gigabytes.</span></span>  
  
<span data-ttu-id="794e2-448">または</span><span class="sxs-lookup"><span data-stu-id="794e2-448">-or-</span></span> 
<span data-ttu-id="794e2-449"><see langword="CLOB" /> および <see langword="NCLOB" /> データ型には、偶数のバイト数を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="794e2-449">You must specify <see langword="CLOB" /> and <see langword="NCLOB" /> data types as an even number of bytes.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="794e2-450">操作がトランザクション内で実行されていないか、<see cref="T:System.Data.OracleClient.OracleLob" /> オブジェクトが null か、または接続が閉じられています。</span><span class="sxs-lookup"><span data-stu-id="794e2-450">The operation is not within a transaction, the <see cref="T:System.Data.OracleClient.OracleLob" /> object is null, or the connection is closed.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="794e2-451">オブジェクトが閉じられているか、破棄されています。</span><span class="sxs-lookup"><span data-stu-id="794e2-451">The object was closed or disposed.</span></span></exception>
        <exception cref="T:System.Data.OracleClient.OracleException"><span data-ttu-id="794e2-452">Oracle エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="794e2-452">An Oracle error has occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteByte">
      <MemberSignature Language="C#" Value="public override void WriteByte (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteByte(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleLob.WriteByte(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteByte (value As Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteByte(System::Byte value);" />
      <MemberSignature Language="F#" Value="override this.WriteByte : byte -&gt; unit" Usage="oracleLob.WriteByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="794e2-453">ストリームに書き込むバイト。</span><span class="sxs-lookup"><span data-stu-id="794e2-453">The byte to write to the stream.</span></span></param>
        <summary><span data-ttu-id="794e2-454"><see cref="T:System.Data.OracleClient.OracleLob" /> ストリームの現在位置にバイトを書き込み、ストリームの位置を 1 バイトだけ進めます。</span><span class="sxs-lookup"><span data-stu-id="794e2-454">Writes a byte to the current position in the <see cref="T:System.Data.OracleClient.OracleLob" /> stream, and advances the position within the stream by one byte.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="794e2-455">書き込み操作が成功した場合、ストリーム内の位置は1バイト進められます。</span><span class="sxs-lookup"><span data-stu-id="794e2-455">If the write operation is successful, the position within the stream advances by one byte.</span></span> <span data-ttu-id="794e2-456">例外が発生した場合、ストリーム内の位置は変更されません。</span><span class="sxs-lookup"><span data-stu-id="794e2-456">If an exception occurs, the position within the stream remains unchanged.</span></span>  
  
 <span data-ttu-id="794e2-457">の末尾`LOB`を越えた書き込みが許可され、 `LOB`を1バイトだけ拡大します。</span><span class="sxs-lookup"><span data-stu-id="794e2-457">Writing beyond the end of the `LOB` is allowed and enlarges the `LOB` by one byte.</span></span>  
  
 <span data-ttu-id="794e2-458">に`LOB`書き込むには、SQL SELECT ステートメントで FOR `LOB` UPDATE 句を使用してを取得しておく必要があります。また、ローカルトランザクションを開始する必要があります。</span><span class="sxs-lookup"><span data-stu-id="794e2-458">To write to the `LOB`, you must have retrieved the `LOB` using the FOR UPDATE clause in the SQL SELECT statement, and you must have a local transaction started.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="794e2-459">読み取り`LOB`専用への書き込み操作は成功する可能性がありますが、サーバー `LOB`上のは更新されません。</span><span class="sxs-lookup"><span data-stu-id="794e2-459">A write operation to a read-only `LOB` might succeed, but does not update the `LOB` on the server.</span></span> <span data-ttu-id="794e2-460">ただし、この場合、の`LOB`ローカルコピーは更新されます。</span><span class="sxs-lookup"><span data-stu-id="794e2-460">In this case, however, the local copy of the `LOB` is updated.</span></span> <span data-ttu-id="794e2-461">そのため、後で<xref:System.Data.OracleClient.OracleLob>オブジェクトに対して読み取り操作を実行すると、書き込み操作の結果が返される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="794e2-461">Therefore, later read operations on the <xref:System.Data.OracleClient.OracleLob> object might return the results of the write operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
