<Type Name="OracleBFile" FullName="System.Data.OracleClient.OracleBFile">
  <TypeSignature Language="C#" Value="public sealed class OracleBFile : System.IO.Stream, ICloneable, System.Data.SqlTypes.INullable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OracleBFile extends System.IO.Stream implements class System.Data.SqlTypes.INullable, class System.ICloneable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Data.OracleClient.OracleBFile" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OracleBFile&#xA;Inherits Stream&#xA;Implements ICloneable, INullable" />
  <TypeSignature Language="C++ CLI" Value="public ref class OracleBFile sealed : System::IO::Stream, ICloneable, System::Data::SqlTypes::INullable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.OracleClient</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.Stream</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.SqlTypes.INullable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="bda7e-101">Oracle の <see langword="BFILE" /> データ型で動作する、マネージ オブジェクト <see cref="T:System.Data.OracleClient.OracleBFile" /> を表します。</span><span class="sxs-lookup"><span data-stu-id="bda7e-101">Represents a managed <see cref="T:System.Data.OracleClient.OracleBFile" /> object designed to work with the Oracle <see langword="BFILE" /> data type.</span></span> <span data-ttu-id="bda7e-102">このクラスは継承できません。</span><span class="sxs-lookup"><span data-stu-id="bda7e-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bda7e-103">Oracle`BFILE`データ型は、Oracle`LOB`を 4 ギガバイト単位の最大サイズのバイナリ データへの参照を含むデータ型。</span><span class="sxs-lookup"><span data-stu-id="bda7e-103">The Oracle `BFILE` data type is an Oracle `LOB` data type that contains a reference to binary data with a maximum size of 4 gigabytes.</span></span> <span data-ttu-id="bda7e-104">Oracle`BFILE`他の Oracle とは異なります`LOB`データ型の代わりに、オペレーティング システムで、サーバー上の物理ファイルにそのデータを格納します。</span><span class="sxs-lookup"><span data-stu-id="bda7e-104">An Oracle `BFILE` differs from other Oracle `LOB` data types in that its data is stored in a physical file in the operating system instead of on the server.</span></span> <span data-ttu-id="bda7e-105">なお、`BFILE`データ型は、データへの読み取り専用のアクセスを提供します。</span><span class="sxs-lookup"><span data-stu-id="bda7e-105">Note that the `BFILE` data type provides read-only access to data.</span></span> <span data-ttu-id="bda7e-106">そのため、書き込み指向のメソッドが継承、<xref:System.IO.Stream>クラスはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="bda7e-106">Therefore, write-oriented methods inherited from the <xref:System.IO.Stream> class are not supported.</span></span>  
  
 <span data-ttu-id="bda7e-107">他の特性、`BFILE`から区別するためのデータ型、`LOB`データ型はできることです。</span><span class="sxs-lookup"><span data-stu-id="bda7e-107">Other characteristics of a `BFILE` data type that distinguish it from a `LOB` data type are that it:</span></span>  
  
-   <span data-ttu-id="bda7e-108">非構造化データの保持。</span><span class="sxs-lookup"><span data-stu-id="bda7e-108">Contains unstructured data.</span></span>  
  
-   <span data-ttu-id="bda7e-109">サーバー側チャンキングのサポート。</span><span class="sxs-lookup"><span data-stu-id="bda7e-109">Supports server-side chunking.</span></span>  
  
-   <span data-ttu-id="bda7e-110">参照コピーのセマンティクスの使用。</span><span class="sxs-lookup"><span data-stu-id="bda7e-110">Uses reference copy semantics.</span></span> <span data-ttu-id="bda7e-111">コピー操作を実行する場合など、 `BFILE`、のみ、`BFILE`ロケーター (ファイルへの参照は、) をコピーします。</span><span class="sxs-lookup"><span data-stu-id="bda7e-111">For example, if you perform a copy operation on a `BFILE`, only the `BFILE` locator (which is a reference to the file) is copied.</span></span> <span data-ttu-id="bda7e-112">ファイル内のデータはコピーされません。</span><span class="sxs-lookup"><span data-stu-id="bda7e-112">The data in the file is not copied.</span></span>  
  
 <span data-ttu-id="bda7e-113">`BFILE`データ型を参照するために使用する必要があります`LOB`s、大きいサイズであるため、データベースに格納するには実用的ではないです。</span><span class="sxs-lookup"><span data-stu-id="bda7e-113">The `BFILE` data type should be used for referencing `LOB`s that are large in size, and therefore, not practical to store in the database.</span></span> <span data-ttu-id="bda7e-114">使用するためのクライアント、サーバー、および通信のオーバーヘッドが、`BFILE`データ型と比較して、`LOB`データ型。</span><span class="sxs-lookup"><span data-stu-id="bda7e-114">There is client, server, and communication overhead for using a `BFILE` data type compared to the `LOB` data type.</span></span> <span data-ttu-id="bda7e-115">アクセスする方が効率的である、`BFILE`のみ少量のデータを取得する必要がある場合。</span><span class="sxs-lookup"><span data-stu-id="bda7e-115">It is more efficient to access a `BFILE` if you only need to obtain a small amount of data.</span></span> <span data-ttu-id="bda7e-116">Access データベースに常駐する方が効率的である`LOB`s 全体のオブジェクトを取得する必要がある場合。</span><span class="sxs-lookup"><span data-stu-id="bda7e-116">It is more efficient to access database-resident `LOB`s if you need to obtain the entire object.</span></span>  
  
 <span data-ttu-id="bda7e-117">各 NULL<xref:System.Data.OracleClient.OracleBFile>オブジェクトが、基になる物理ファイルの場所を定義する 2 つのエンティティと関連付けられています。</span><span class="sxs-lookup"><span data-stu-id="bda7e-117">Each non-NULL <xref:System.Data.OracleClient.OracleBFile> object is associated with two entities that define the location of the underlying physical file:</span></span>  
  
-   <span data-ttu-id="bda7e-118">Oracle DIRECTORY オブジェクト。ファイル システムのディレクトリに対するデータベースのエイリアスです。</span><span class="sxs-lookup"><span data-stu-id="bda7e-118">An Oracle DIRECTORY object, which is a database alias for a directory in the file system, and</span></span>  
  
-   <span data-ttu-id="bda7e-119">基になる物理ファイルのファイル名。このファイルは、DIRECTORY オブジェクトに関連付けられたディレクトリに配置されています。</span><span class="sxs-lookup"><span data-stu-id="bda7e-119">The file name of the underlying physical file, which is located in the directory associated with the DIRECTORY object.</span></span>  
  
 <span data-ttu-id="bda7e-120">後に、`BFILE`が作成されるの形式でそのロケーターを取得することができます、<xref:System.Data.OracleClient.OracleBFile>オブジェクトを使用して、<xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>または<xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="bda7e-120">After a `BFILE` is created, you can retrieve its locator in the form of an <xref:System.Data.OracleClient.OracleBFile> object using the <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> or <xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A> methods.</span></span>  
  
 <span data-ttu-id="bda7e-121">取得する、<xref:System.Data.OracleClient.OracleBFile>オブジェクトを呼び出し、<xref:System.Data.OracleClient.OracleDataReader.GetOracleBFile%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="bda7e-121">To obtain an <xref:System.Data.OracleClient.OracleBFile> object, call the <xref:System.Data.OracleClient.OracleDataReader.GetOracleBFile%2A> method.</span></span>  
  
 <span data-ttu-id="bda7e-122">物理ファイルを<xref:System.Data.OracleClient.OracleBFile>オブジェクトが関連付けられているとする必要はありません、アクセスしようとするまで存在します。</span><span class="sxs-lookup"><span data-stu-id="bda7e-122">The physical file that an <xref:System.Data.OracleClient.OracleBFile> object is associated with does not need to exist until you attempt to access it.</span></span> <span data-ttu-id="bda7e-123">アプリケーションをバインドする<xref:System.Data.OracleClient.OracleBFile>、存在しないファイルに必要な場所に物理ファイルを作成し、<xref:System.Data.OracleClient.OracleBFile.Read%2A>です。</span><span class="sxs-lookup"><span data-stu-id="bda7e-123">An application can bind an <xref:System.Data.OracleClient.OracleBFile> to a nonexistent file, create the physical file in the expected location, and then call <xref:System.Data.OracleClient.OracleBFile.Read%2A>.</span></span>  
  
 <span data-ttu-id="bda7e-124">アクセス、閉じられた試行<xref:System.Data.OracleClient.OracleBFile>を使用して、<xref:System.Data.OracleClient.OracleBFile.Read%2A>または<xref:System.Data.OracleClient.OracleBFile.Seek%2A>メソッド再度、<xref:System.Data.OracleClient.OracleBFile>自動的にストリーム配信します。</span><span class="sxs-lookup"><span data-stu-id="bda7e-124">Any attempt to access a closed <xref:System.Data.OracleClient.OracleBFile> using the <xref:System.Data.OracleClient.OracleBFile.Read%2A> or <xref:System.Data.OracleClient.OracleBFile.Seek%2A> methods reopens an <xref:System.Data.OracleClient.OracleBFile> stream automatically.</span></span>  
  
 <span data-ttu-id="bda7e-125">次の c# の例では、作成する方法を示しています、 `BFILE` Oracle のテーブル、およびそれの形式で読み込む、<xref:System.Data.OracleClient.OracleBFile>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bda7e-125">The following C# example demonstrates how you can create a `BFILE` in an Oracle table, and then retrieve it in the form of an <xref:System.Data.OracleClient.OracleBFile> object.</span></span> <span data-ttu-id="bda7e-126">使用、例を示します、<xref:System.Data.OracleClient.OracleDataReader>オブジェクトおよび<xref:System.Data.OracleClient.OracleBFile><xref:System.Data.OracleClient.OracleBFile.Seek%2A>と<xref:System.Data.OracleClient.OracleBFile.Read%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="bda7e-126">The example demonstrates the use of the <xref:System.Data.OracleClient.OracleDataReader> object and the <xref:System.Data.OracleClient.OracleBFile><xref:System.Data.OracleClient.OracleBFile.Seek%2A> and <xref:System.Data.OracleClient.OracleBFile.Read%2A> methods.</span></span>  
  
 [!code-csharp[DataWorks OracleClient.BFile#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks OracleClient.BFile/CS/source.cs#1)]  
  
 <span data-ttu-id="bda7e-127">作成して、Oracle の使用の詳細については`BFILE`、適切な Oracle のマニュアルを参照してください。</span><span class="sxs-lookup"><span data-stu-id="bda7e-127">For more information about creating and using an Oracle `BFILE`, see the appropriate topic in your Oracle documentation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bda7e-128">`BeginWrite`、 `EndWrite`、および`WriteByte`から継承するメソッドを`System.IO.Stream`クラス、ためにサポートされていません、`BFILE`データ型は読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="bda7e-128">The `BeginWrite`, `EndWrite`, and `WriteByte` methods, which are inherited from the `System.IO.Stream` class, are not supported because the `BFILE` data type is read-only.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public override bool CanRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRead" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.CanRead" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanRead As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRead { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bda7e-129"><see langword="BFILE" /> ストリームを読み取ることができるかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="bda7e-129">Gets a value indicating whether the <see langword="BFILE" /> stream can be read.</span></span></summary>
        <value>
          <span data-ttu-id="bda7e-130"><see langword="false" /> が閉じているか破棄されている場合は <see langword="BFILE" />。それ以外の場合は <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="bda7e-130"><see langword="false" /> if a <see langword="BFILE" /> is closed or disposed; otherwise <see langword="true" />.</span></span> <span data-ttu-id="bda7e-131"><see cref="F:System.Data.OracleClient.OracleBFile.Null" /> の場合は、常に <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="bda7e-131">Always <see langword="true" /> for <see cref="F:System.Data.OracleClient.OracleBFile.Null" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSeek">
      <MemberSignature Language="C#" Value="public override bool CanSeek { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSeek" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.CanSeek" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanSeek As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSeek { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bda7e-132">前方シークおよび後方シーク操作を実行できるかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="bda7e-132">Gets a value indicating whether forward-seek and backward-seek operations can be performed.</span></span></summary>
        <value>
          <span data-ttu-id="bda7e-133"><see langword="false" /> が閉じているか破棄されている場合は <see langword="BFILE" />。それ以外の場合は <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="bda7e-133"><see langword="false" /> if a <see langword="BFILE" /> is closed or disposed; otherwise <see langword="true" />.</span></span> <span data-ttu-id="bda7e-134"><see cref="F:System.Data.OracleClient.OracleBFile.Null" /> の場合は、常に <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="bda7e-134">Always <see langword="true" /> for <see cref="F:System.Data.OracleClient.OracleBFile.Null" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWrite">
      <MemberSignature Language="C#" Value="public override bool CanWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWrite" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.CanWrite" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanWrite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanWrite { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bda7e-135">オブジェクトが書き込みをサポートしているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="bda7e-135">Gets a value indicating whether the object supports writing.</span></span></summary>
        <value><span data-ttu-id="bda7e-136">Oracle の <see langword="false" /> データ型は読み取り専用であるため、常に <see langword="BFILE" /> が返されます。</span><span class="sxs-lookup"><span data-stu-id="bda7e-136">Always returns <see langword="false" /> because the Oracle <see langword="BFILE" /> data type is read-only.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bda7e-137">元のオブジェクトと同じ物理ファイルに関連付けられた、この <see cref="T:System.Data.OracleClient.OracleBFile" /> オブジェクトのコピーを作成します。</span><span class="sxs-lookup"><span data-stu-id="bda7e-137">Creates a copy of this <see cref="T:System.Data.OracleClient.OracleBFile" /> object associated with the same physical file as the original.</span></span></summary>
        <returns><span data-ttu-id="bda7e-138">元の <see langword="OracleBFile" /> オブジェクトと同じ物理ファイルに関連付けられた、新しい <see cref="T:System.Data.OracleClient.OracleBFile" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bda7e-138">A new <see cref="T:System.Data.OracleClient.OracleBFile" /> object associated with the same physical file as the original <see langword="OracleBFile" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bda7e-139">新しいプロパティ<xref:System.Data.OracleClient.OracleBFile>オブジェクトが最初に元のオブジェクトと同じ値を持ちます。</span><span class="sxs-lookup"><span data-stu-id="bda7e-139">The properties of the new <xref:System.Data.OracleClient.OracleBFile> object initially have the same values as those of the original object.</span></span> <span data-ttu-id="bda7e-140">ただし後、<xref:System.Data.OracleClient.OracleBFile.Clone%2A>が完了したら、各<xref:System.Data.OracleClient.OracleBFile>オブジェクトは、他から独立しています。</span><span class="sxs-lookup"><span data-stu-id="bda7e-140">However, after the <xref:System.Data.OracleClient.OracleBFile.Clone%2A> is complete, each <xref:System.Data.OracleClient.OracleBFile> object is independent from the other.</span></span> <span data-ttu-id="bda7e-141">値を変更するなど、<xref:System.Data.OracleClient.OracleBFile.Position%2A>元のプロパティ<xref:System.Data.OracleClient.OracleBFile>の値は変わりません<xref:System.Data.OracleClient.OracleBFile.Position%2A>コピーにします。</span><span class="sxs-lookup"><span data-stu-id="bda7e-141">For example, changing the value of the <xref:System.Data.OracleClient.OracleBFile.Position%2A> property on the original <xref:System.Data.OracleClient.OracleBFile> does not change the value of <xref:System.Data.OracleClient.OracleBFile.Position%2A> on the copy.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleConnection Connection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OracleClient.OracleConnection Connection" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.Connection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Connection As OracleConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OracleClient::OracleConnection ^ Connection { System::Data::OracleClient::OracleConnection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bda7e-142">この <see cref="T:System.Data.OracleClient.OracleConnection" /> のインスタンスで使用される <see cref="T:System.Data.OracleClient.OracleBFile" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="bda7e-142">Gets the <see cref="T:System.Data.OracleClient.OracleConnection" /> used by this instance of the <see cref="T:System.Data.OracleClient.OracleBFile" />.</span></span></summary>
        <value><span data-ttu-id="bda7e-143">データ ソースへの接続。</span><span class="sxs-lookup"><span data-stu-id="bda7e-143">The connection to a data source.</span></span> <span data-ttu-id="bda7e-144">既定は null 値です。</span><span class="sxs-lookup"><span data-stu-id="bda7e-144">The default is a null value.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyTo">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bda7e-145">この <see cref="T:System.Data.OracleClient.OracleBFile" /> のデータをコピー先の <see cref="T:System.Data.OracleClient.OracleLob" /> にコピーします。</span><span class="sxs-lookup"><span data-stu-id="bda7e-145">Copies data from this <see cref="T:System.Data.OracleClient.OracleBFile" /> to a destination <see cref="T:System.Data.OracleClient.OracleLob" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public long CopyTo (System.Data.OracleClient.OracleLob destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 CopyTo(class System.Data.OracleClient.OracleLob destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob)" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyTo (destination As OracleLob) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long CopyTo(System::Data::OracleClient::OracleLob ^ destination);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Data.OracleClient.OracleLob" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="bda7e-146">コピー先の <see cref="T:System.Data.OracleClient.OracleLob" />。</span><span class="sxs-lookup"><span data-stu-id="bda7e-146">The destination <see cref="T:System.Data.OracleClient.OracleLob" /></span></span></param>
        <summary><span data-ttu-id="bda7e-147">この <see cref="T:System.Data.OracleClient.OracleBFile" /> 全体の内容をコピー先の <see cref="T:System.Data.OracleClient.OracleLob" /> の先頭にコピーします。</span><span class="sxs-lookup"><span data-stu-id="bda7e-147">Copies the entire contents of this <see cref="T:System.Data.OracleClient.OracleBFile" /> to the beginning of a destination <see cref="T:System.Data.OracleClient.OracleLob" />.</span></span></summary>
        <returns><span data-ttu-id="bda7e-148">コピーされたバイト数。</span><span class="sxs-lookup"><span data-stu-id="bda7e-148">The number of bytes copied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bda7e-149">ソースの基になるデータ型<xref:System.Data.OracleClient.OracleBFile>と変換先<xref:System.Data.OracleClient.OracleLob>互換性のある必要があります。</span><span class="sxs-lookup"><span data-stu-id="bda7e-149">The underlying data types of the source <xref:System.Data.OracleClient.OracleBFile> and the destination <xref:System.Data.OracleClient.OracleLob> must be compatible.</span></span> <span data-ttu-id="bda7e-150">たとえば、先にバイナリ データをコピーすることはできません<xref:System.Data.OracleClient.OracleLob>文字データ型を持ちます。</span><span class="sxs-lookup"><span data-stu-id="bda7e-150">For example, you cannot copy binary data to a destination <xref:System.Data.OracleClient.OracleLob> that has a character data type.</span></span>  
  
 <span data-ttu-id="bda7e-151">変換先に書き込みアクセス権が必要<xref:System.Data.OracleClient.OracleLob>の<xref:System.Data.OracleClient.OracleBFile.CopyTo%2A>操作が正常に実行します。</span><span class="sxs-lookup"><span data-stu-id="bda7e-151">You must have write access to the destination <xref:System.Data.OracleClient.OracleLob> for the <xref:System.Data.OracleClient.OracleBFile.CopyTo%2A> operation to execute correctly.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="bda7e-152">コピー先の <see langword="OracleLob" /> は null オブジェクト参照です。</span><span class="sxs-lookup"><span data-stu-id="bda7e-152">The destination <see langword="OracleLob" /> is a null object reference.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="bda7e-153">コピー先が null <see langword="OracleLob" /> です。</span><span class="sxs-lookup"><span data-stu-id="bda7e-153">The destination is a null <see langword="OracleLob" />.</span></span>  
  
 <span data-ttu-id="bda7e-154">- または -</span><span class="sxs-lookup"><span data-stu-id="bda7e-154">-or-</span></span>  
  
 <span data-ttu-id="bda7e-155">この <see langword="OracleBFile" /> が関連付けられている接続が閉じています。</span><span class="sxs-lookup"><span data-stu-id="bda7e-155">The connection with which this <see langword="OracleBFile" /> is associated is closed.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="bda7e-156"><see langword="OracleBFile" /> オブジェクトが閉じているか破棄されています。</span><span class="sxs-lookup"><span data-stu-id="bda7e-156">The <see langword="OracleBFile" /> object is closed or disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public long CopyTo (System.Data.OracleClient.OracleLob destination, long destinationOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 CopyTo(class System.Data.OracleClient.OracleLob destination, int64 destinationOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyTo (destination As OracleLob, destinationOffset As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long CopyTo(System::Data::OracleClient::OracleLob ^ destination, long destinationOffset);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Data.OracleClient.OracleLob" />
        <Parameter Name="destinationOffset" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="bda7e-157">コピー先 <see cref="T:System.Data.OracleClient.OracleLob" />。</span><span class="sxs-lookup"><span data-stu-id="bda7e-157">The destination <see cref="T:System.Data.OracleClient.OracleLob" />.</span></span></param>
        <param name="destinationOffset"><span data-ttu-id="bda7e-158">コピー先のオフセット。</span><span class="sxs-lookup"><span data-stu-id="bda7e-158">The offset to which to copy.</span></span></param>
        <summary><span data-ttu-id="bda7e-159">この <see cref="T:System.Data.OracleClient.OracleBFile" /> 全体の内容をコピー先の <see cref="T:System.Data.OracleClient.OracleLob" /> の指定したオフセット位置にコピーします。</span><span class="sxs-lookup"><span data-stu-id="bda7e-159">Copies the entire contents of this <see cref="T:System.Data.OracleClient.OracleBFile" /> to a destination <see cref="T:System.Data.OracleClient.OracleLob" /> at the specified offset.</span></span></summary>
        <returns><span data-ttu-id="bda7e-160">コピーされたバイト数。</span><span class="sxs-lookup"><span data-stu-id="bda7e-160">The number of bytes copied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bda7e-161">ソースの基になるデータ型<xref:System.Data.OracleClient.OracleBFile>と変換先<xref:System.Data.OracleClient.OracleLob>互換性のある必要があります。</span><span class="sxs-lookup"><span data-stu-id="bda7e-161">The underlying data types of the source <xref:System.Data.OracleClient.OracleBFile> and the destination <xref:System.Data.OracleClient.OracleLob> must be compatible.</span></span> <span data-ttu-id="bda7e-162">たとえば、先にバイナリ データをコピーすることはできません<xref:System.Data.OracleClient.OracleLob>文字データ型を持ちます。</span><span class="sxs-lookup"><span data-stu-id="bda7e-162">For example, you cannot copy binary data to a destination <xref:System.Data.OracleClient.OracleLob> that has a character data type.</span></span>  
  
 <span data-ttu-id="bda7e-163">変換先に書き込みアクセス権が必要<xref:System.Data.OracleClient.OracleLob>の<xref:System.Data.OracleClient.OracleBFile.CopyTo%2A>操作が正常に実行します。</span><span class="sxs-lookup"><span data-stu-id="bda7e-163">You must have write access to the destination <xref:System.Data.OracleClient.OracleLob> for the <xref:System.Data.OracleClient.OracleBFile.CopyTo%2A> operation to execute correctly.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="bda7e-164">コピー先の <see langword="OracleLob" /> は null オブジェクト参照です。</span><span class="sxs-lookup"><span data-stu-id="bda7e-164">The destination <see langword="OracleLob" /> is a null object reference.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="bda7e-165">コピー先が null <see langword="OracleLob" /> です。</span><span class="sxs-lookup"><span data-stu-id="bda7e-165">The destination is a null <see langword="OracleLob" />.</span></span>  
  
 <span data-ttu-id="bda7e-166">- または -</span><span class="sxs-lookup"><span data-stu-id="bda7e-166">-or-</span></span>  
  
 <span data-ttu-id="bda7e-167">この <see langword="OracleBFile" /> が関連付けられている接続が閉じています。</span><span class="sxs-lookup"><span data-stu-id="bda7e-167">The connection with which this <see langword="OracleBFile" /> is associated is closed.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="bda7e-168"><see langword="OracleBFile" /> オブジェクトが閉じているか破棄されています。</span><span class="sxs-lookup"><span data-stu-id="bda7e-168">The <see langword="OracleBFile" /> object is closed or disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public long CopyTo (long sourceOffset, System.Data.OracleClient.OracleLob destination, long destinationOffset, long amount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 CopyTo(int64 sourceOffset, class System.Data.OracleClient.OracleLob destination, int64 destinationOffset, int64 amount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyTo (sourceOffset As Long, destination As OracleLob, destinationOffset As Long, amount As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long CopyTo(long sourceOffset, System::Data::OracleClient::OracleLob ^ destination, long destinationOffset, long amount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceOffset" Type="System.Int64" />
        <Parameter Name="destination" Type="System.Data.OracleClient.OracleLob" />
        <Parameter Name="destinationOffset" Type="System.Int64" />
        <Parameter Name="amount" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="sourceOffset"><span data-ttu-id="bda7e-169">コピー元のオフセット。</span><span class="sxs-lookup"><span data-stu-id="bda7e-169">The offset from which to copy.</span></span></param>
        <param name="destination"><span data-ttu-id="bda7e-170">コピー先 <see cref="T:System.Data.OracleClient.OracleLob" />。</span><span class="sxs-lookup"><span data-stu-id="bda7e-170">The destination <see cref="T:System.Data.OracleClient.OracleLob" />.</span></span></param>
        <param name="destinationOffset"><span data-ttu-id="bda7e-171">コピー先のオフセット。</span><span class="sxs-lookup"><span data-stu-id="bda7e-171">The offset to which to copy.</span></span></param>
        <param name="amount"><span data-ttu-id="bda7e-172">コピーするデータのサイズ (バイト単位)。</span><span class="sxs-lookup"><span data-stu-id="bda7e-172">The quantity of data, in bytes, to copy.</span></span></param>
        <summary><span data-ttu-id="bda7e-173">データ サイズ、コピー元のオフセット、およびコピー先のオフセットを指定して、この <see cref="T:System.Data.OracleClient.OracleBFile" /> からコピー先の <see cref="T:System.Data.OracleClient.OracleLob" /> にコピーします。</span><span class="sxs-lookup"><span data-stu-id="bda7e-173">Copies from this <see cref="T:System.Data.OracleClient.OracleBFile" /> to a destination <see cref="T:System.Data.OracleClient.OracleLob" /> with the specified amount of data, the source offset, and the destination offset.</span></span></summary>
        <returns><span data-ttu-id="bda7e-174">コピーされたバイト数。</span><span class="sxs-lookup"><span data-stu-id="bda7e-174">The number of bytes copied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bda7e-175">ソースの基になるデータ型<xref:System.Data.OracleClient.OracleBFile>と変換先<xref:System.Data.OracleClient.OracleLob>互換性のある必要があります。</span><span class="sxs-lookup"><span data-stu-id="bda7e-175">The underlying data types of the source <xref:System.Data.OracleClient.OracleBFile> and the destination <xref:System.Data.OracleClient.OracleLob> must be compatible.</span></span> <span data-ttu-id="bda7e-176">たとえば、先にバイナリ データをコピーすることはできません<xref:System.Data.OracleClient.OracleLob>文字データ型を持ちます。</span><span class="sxs-lookup"><span data-stu-id="bda7e-176">For example, you cannot copy binary data to a destination <xref:System.Data.OracleClient.OracleLob> that has a character data type.</span></span>  
  
 <span data-ttu-id="bda7e-177">変換先に書き込みアクセス権が必要<xref:System.Data.OracleClient.OracleLob>の<xref:System.Data.OracleClient.OracleBFile.CopyTo%2A>操作が正常に実行します。</span><span class="sxs-lookup"><span data-stu-id="bda7e-177">You must have write access to the destination <xref:System.Data.OracleClient.OracleLob> for the <xref:System.Data.OracleClient.OracleBFile.CopyTo%2A> operation to execute correctly.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="bda7e-178">データ サイズ パラメーターの値が 0 未満であるか、4 ギガバイトを超えています。</span><span class="sxs-lookup"><span data-stu-id="bda7e-178">The value of the amount parameter is less than zero or greater than 4 gigabytes.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="bda7e-179">コピー先の <see langword="OracleLob" /> は null オブジェクト参照です。</span><span class="sxs-lookup"><span data-stu-id="bda7e-179">The destination <see langword="OracleLob" /> is a null object reference.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="bda7e-180">コピー先が null <see langword="OracleLob" /> です。</span><span class="sxs-lookup"><span data-stu-id="bda7e-180">The destination is a null <see langword="OracleLob" />.</span></span>  
  
 <span data-ttu-id="bda7e-181">- または -</span><span class="sxs-lookup"><span data-stu-id="bda7e-181">-or-</span></span>  
  
 <span data-ttu-id="bda7e-182">この <see langword="OracleBFile" /> が関連付けられている接続が閉じています。</span><span class="sxs-lookup"><span data-stu-id="bda7e-182">The connection with which this <see langword="OracleBFile" /> is associated is closed.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="bda7e-183"><see langword="OracleBFile" /> オブジェクトが閉じているか破棄されています。</span><span class="sxs-lookup"><span data-stu-id="bda7e-183">The <see langword="OracleBFile" /> object is closed or disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DirectoryName">
      <MemberSignature Language="C#" Value="public string DirectoryName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DirectoryName" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.DirectoryName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DirectoryName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DirectoryName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bda7e-184"><see cref="T:System.Data.OracleClient.OracleBFile" /> オブジェクトが関連付けられている DIRECTORY オブジェクトの名前を取得します。</span><span class="sxs-lookup"><span data-stu-id="bda7e-184">Gets the name of the DIRECTORY object, with which an <see cref="T:System.Data.OracleClient.OracleBFile" /> object is associated.</span></span></summary>
        <value><span data-ttu-id="bda7e-185">DIRECTORY オブジェクトの名前。</span><span class="sxs-lookup"><span data-stu-id="bda7e-185">The name of the DIRECTORY object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bda7e-186">各 NULL<xref:System.Data.OracleClient.OracleBFile>オブジェクトが基になる物理ファイルの場所を定義する 2 つのエンティティと関連付けられています。</span><span class="sxs-lookup"><span data-stu-id="bda7e-186">Each non-NULL <xref:System.Data.OracleClient.OracleBFile> object is associated with two entities that define the location of underlying physical file:</span></span>  
  
-   <span data-ttu-id="bda7e-187">Oracle DIRECTORY オブジェクト。ファイル システムのディレクトリに対するデータベースのエイリアスです。</span><span class="sxs-lookup"><span data-stu-id="bda7e-187">An Oracle DIRECTORY object, which is a database alias for a directory in the file system, and</span></span>  
  
-   <span data-ttu-id="bda7e-188">基になる物理ファイルのファイル名。このファイルは、DIRECTORY オブジェクトに関連付けられたディレクトリに配置されています。</span><span class="sxs-lookup"><span data-stu-id="bda7e-188">The file name of the underlying physical file, which is located in the directory associated with the DIRECTORY object.</span></span>  
  
 <span data-ttu-id="bda7e-189"><xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A>プロパティは、Oracle データベースからディレクトリ オブジェクトの名前を返します。</span><span class="sxs-lookup"><span data-stu-id="bda7e-189">The <xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A> property returns the name of the DIRECTORY object from the Oracle database.</span></span>  
  
 <span data-ttu-id="bda7e-190">作成して、Oracle の使用の詳細については`BFILE`、適切な Oracle のマニュアルを参照してください。</span><span class="sxs-lookup"><span data-stu-id="bda7e-190">For more information about creating and using an Oracle `BFILE`, see the appropriate topic in your Oracle documentation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="bda7e-191">閉じている、または破棄された <see langword="DirectoryName" /> オブジェクトに対して <see langword="OracleBFile" /> を呼び出そうとしました。</span><span class="sxs-lookup"><span data-stu-id="bda7e-191">Attempted to call <see langword="DirectoryName" /> on a closed or disposed <see langword="OracleBFile" /> object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileExists">
      <MemberSignature Language="C#" Value="public bool FileExists { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FileExists" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.FileExists" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileExists As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FileExists { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bda7e-192"><see langword="BFILE" /> データを格納している物理ファイルがオペレーティング システム上に存在するかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="bda7e-192">Gets a value indicating whether a physical file containing <see langword="BFILE" /> data exists in the operating system.</span></span></summary>
        <value>
          <span data-ttu-id="bda7e-193"><see langword="true" /> データを格納している物理ファイルが存在する場合は <see langword="BFILE" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="bda7e-193"><see langword="true" /> if a physical file containing <see langword="BFILE" /> data exists; otherwise <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="bda7e-194"><see cref="T:System.Data.OracleClient.OracleBFile" /> オブジェクトが閉じているか破棄されています。</span><span class="sxs-lookup"><span data-stu-id="bda7e-194">The <see cref="T:System.Data.OracleClient.OracleBFile" /> object is closed or disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="bda7e-195"><see langword="BFILE" /> に関連付けられている接続が閉じています。</span><span class="sxs-lookup"><span data-stu-id="bda7e-195">The connection with which a <see langword="BFILE" /> is associated is closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FileName">
      <MemberSignature Language="C#" Value="public string FileName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FileName" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.FileName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FileName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bda7e-196">パス名なしの <see langword="BFILE" /> の名前を取得します。</span><span class="sxs-lookup"><span data-stu-id="bda7e-196">Gets the name of the <see langword="BFILE" /> without the path.</span></span></summary>
        <value><span data-ttu-id="bda7e-197">BFILE の名前。</span><span class="sxs-lookup"><span data-stu-id="bda7e-197">The name of the BFILE.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bda7e-198"><xref:System.Data.OracleClient.OracleBFile.Null>、空の文字列が返されます。</span><span class="sxs-lookup"><span data-stu-id="bda7e-198">For <xref:System.Data.OracleClient.OracleBFile.Null>, an empty string is returned.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="bda7e-199"><see cref="T:System.Data.OracleClient.OracleBFile" /> オブジェクトが閉じているか破棄されています。</span><span class="sxs-lookup"><span data-stu-id="bda7e-199">The <see cref="T:System.Data.OracleClient.OracleBFile" /> object is closed or disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bda7e-200">現在サポートされていません。</span><span class="sxs-lookup"><span data-stu-id="bda7e-200">Not currently supported.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public bool IsNull { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNull" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.IsNull" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNull { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.SqlTypes.INullable.IsNull</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bda7e-201"><see cref="T:System.Data.OracleClient.OracleBFile" /> が <see cref="F:System.Data.OracleClient.OracleBFile.Null" /> ストリームであるかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="bda7e-201">Gets a value that indicates whether the <see cref="T:System.Data.OracleClient.OracleBFile" /> is a <see cref="F:System.Data.OracleClient.OracleBFile.Null" /> stream.</span></span></summary>
        <value>
          <span data-ttu-id="bda7e-202"><see cref="T:System.Data.OracleClient.OracleBFile" /> が <see cref="F:System.Data.OracleClient.OracleBFile.Null" /> ストリームである場合は、<see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="bda7e-202"><see langword="true" /> if the <see cref="T:System.Data.OracleClient.OracleBFile" /> is a <see cref="F:System.Data.OracleClient.OracleBFile.Null" /> stream; otherwise <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public override long Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Length" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.Length" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Length As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Length { long get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bda7e-203"><see cref="T:System.Data.OracleClient.OracleBFile" /> オブジェクトが関連付けられている物理ファイルの長さ (バイト数) を返す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="bda7e-203">Gets a value that returns the length in bytes of the physical file with which the <see cref="T:System.Data.OracleClient.OracleBFile" /> object is associated.</span></span></summary>
        <value><span data-ttu-id="bda7e-204">物理ファイルの長さ (バイト単位) を表す long 値。</span><span class="sxs-lookup"><span data-stu-id="bda7e-204">A long value representing the length of the physical file in bytes.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="bda7e-205">ストリームが閉じられたか破棄された後で、メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="bda7e-205">Methods were called after the stream was closed or disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Null">
      <MemberSignature Language="C#" Value="public static readonly System.Data.OracleClient.OracleBFile Null;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Data.OracleClient.OracleBFile Null" />
      <MemberSignature Language="DocId" Value="F:System.Data.OracleClient.OracleBFile.Null" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Null As OracleBFile " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Data::OracleClient::OracleBFile ^ Null;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBFile</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bda7e-206">物理ファイルにバインドされていない、null の <see cref="T:System.Data.OracleClient.OracleBFile" /> オブジェクトを表します。</span><span class="sxs-lookup"><span data-stu-id="bda7e-206">Represents a null <see cref="T:System.Data.OracleClient.OracleBFile" /> object that is not bound to a physical file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bda7e-207"><xref:System.Data.OracleClient.OracleBFile.Null> 比較操作を実行するときに役に立ちます、<xref:System.Data.OracleClient.OracleBFile>を null 値許容属性を決定します。</span><span class="sxs-lookup"><span data-stu-id="bda7e-207"><xref:System.Data.OracleClient.OracleBFile.Null> can be useful when you want to perform a comparison operation on an <xref:System.Data.OracleClient.OracleBFile> to determine nullability.</span></span>  
  
 <span data-ttu-id="bda7e-208">に対して読み取り操作を実行しようとすると、<xref:System.Data.OracleClient.OracleBFile.Null>オブジェクトは成功しますが、任意のデータは返されません。</span><span class="sxs-lookup"><span data-stu-id="bda7e-208">Any attempt to perform a read operation on a <xref:System.Data.OracleClient.OracleBFile.Null> object succeeds, but does not return any data.</span></span> <span data-ttu-id="bda7e-209">書き込み操作を実行するしようとすると、<xref:System.Data.OracleClient.OracleBFile.Null>オブジェクトには、例外が生成されます。</span><span class="sxs-lookup"><span data-stu-id="bda7e-209">Any attempt to perform a write operation on a <xref:System.Data.OracleClient.OracleBFile.Null> object generates an exception.</span></span> <span data-ttu-id="bda7e-210">選択すると、 `BFILE` null 値を含む列を返します<xref:System.Data.OracleClient.OracleBFile.Null>です。</span><span class="sxs-lookup"><span data-stu-id="bda7e-210">Selecting a `BFILE` column that contains a null value returns <xref:System.Data.OracleClient.OracleBFile.Null>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public override long Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Position" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.Position" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Position As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Position { long get(); void set(long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bda7e-211"><see cref="T:System.Data.OracleClient.OracleBFile" /> ストリーム内の現在の読み込み位置を取得します。</span><span class="sxs-lookup"><span data-stu-id="bda7e-211">Gets the current read position in the <see cref="T:System.Data.OracleClient.OracleBFile" /> stream.</span></span></summary>
        <value><span data-ttu-id="bda7e-212"><see cref="T:System.Data.OracleClient.OracleBFile" /> ストリーム内の現在位置。</span><span class="sxs-lookup"><span data-stu-id="bda7e-212">The current position within the <see cref="T:System.Data.OracleClient.OracleBFile" /> stream.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bda7e-213">ストリームの長さを超えた位置にシークすることはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="bda7e-213">Seeking to any location beyond the length of the stream is not supported.</span></span>  
  
 <span data-ttu-id="bda7e-214">`Position`プロパティがないの追跡が消費されている、スキップ、ストリーム、またはその両方からのバイト数。</span><span class="sxs-lookup"><span data-stu-id="bda7e-214">The `Position` property does not keep track of the number of bytes from the stream that have been consumed, skipped, or both.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="bda7e-215">負の値またはストリーム長を超える値に、位置を設定しようとしました。</span><span class="sxs-lookup"><span data-stu-id="bda7e-215">Attempted to set a position with a negative value or greater than the length of the stream.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="bda7e-216">ストリームが閉じられたか破棄された後で、メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="bda7e-216">Methods were called after the stream was closed or disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.Read(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (buffer As Byte(), offset As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="bda7e-217">バイト配列。</span><span class="sxs-lookup"><span data-stu-id="bda7e-217">An array of bytes.</span></span> <span data-ttu-id="bda7e-218">このメソッドが返されるとき、バッファーは現在のソースから読み取ったバイトにより置き換えられた、<c>offset</c> から (<c>offset</c> + <c>count</c>) の間の値を持つ指定されたバイト配列を含みます。</span><span class="sxs-lookup"><span data-stu-id="bda7e-218">When this method returns, the buffer contains the specified byte array with the values between <c>offset</c> and (<c>offset</c> + <c>count</c>) replaced by the bytes read from the current source.</span></span></param>
        <param name="offset"><span data-ttu-id="bda7e-219">現在のストリームから読み取ったデータの格納を開始する位置を示す<c>バッファー</c>内の 0 から始まるバイト オフセット。</span><span class="sxs-lookup"><span data-stu-id="bda7e-219">The zero-based byte offset in <c>buffer</c> at which to begin storing the data read from the current stream.</span></span></param>
        <param name="count"><span data-ttu-id="bda7e-220">現在のストリームから読み取る最大バイト数。</span><span class="sxs-lookup"><span data-stu-id="bda7e-220">The maximum number of bytes to be read from the current stream.</span></span></param>
        <summary><span data-ttu-id="bda7e-221">現在の <see cref="T:System.Data.OracleClient.OracleBFile" /> ストリームからバイト シーケンスを読み取り、読み取ったバイト数の分だけストリーム内の位置を進めます。</span><span class="sxs-lookup"><span data-stu-id="bda7e-221">Reads a sequence of bytes from the current <see cref="T:System.Data.OracleClient.OracleBFile" /> stream and advances the position within the stream by the number of bytes read.</span></span></summary>
        <returns><span data-ttu-id="bda7e-222">バッファーに読み取られた合計バイト数。</span><span class="sxs-lookup"><span data-stu-id="bda7e-222">The total number of bytes read into the buffer.</span></span> <span data-ttu-id="bda7e-223">要求しただけのバイト数を読み取ることができなかった場合、この値は要求したバイト数より小さくなります。ファイルの末尾に到達した場合は、ゼロになることがあります。</span><span class="sxs-lookup"><span data-stu-id="bda7e-223">This may be less than the number of bytes requested if that many bytes are not currently available, or zero if the end of the file has been reached.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bda7e-224"><xref:System.Data.OracleClient.OracleBFile.Read%2A>メソッドは、最大を読み取る`count`現在からのバイト ストリームし、で格納`buffer`始点`offset`です。</span><span class="sxs-lookup"><span data-stu-id="bda7e-224">The <xref:System.Data.OracleClient.OracleBFile.Read%2A> method read a maximum of `count` bytes from the current stream and store them in `buffer` beginning at `offset`.</span></span> <span data-ttu-id="bda7e-225">読み取りバイト数だけストリーム内の現在位置が高度なただし、例外が発生する場合、ストリーム内の現在の位置は変更されません。</span><span class="sxs-lookup"><span data-stu-id="bda7e-225">The current position within the stream is advanced by the number of bytes read; however, if an exception occurs, the current position within the stream remains unchanged.</span></span> <span data-ttu-id="bda7e-226"><xref:System.Data.OracleClient.OracleBFile.Read%2A> 読み取られたバイト数を返します。</span><span class="sxs-lookup"><span data-stu-id="bda7e-226"><xref:System.Data.OracleClient.OracleBFile.Read%2A> returns the number of bytes read.</span></span> <span data-ttu-id="bda7e-227">ストリームの末尾には、位置は現在場合にのみ、戻り値は 0 です。</span><span class="sxs-lookup"><span data-stu-id="bda7e-227">The return value is zero only if the position is currently at the end of the stream.</span></span> <span data-ttu-id="bda7e-228"><xref:System.Data.OracleClient.OracleBFile.Read%2A> 少なくとも 1 バイトのデータを読み取ることができるまでデータがないこと、ブロックされます。</span><span class="sxs-lookup"><span data-stu-id="bda7e-228"><xref:System.Data.OracleClient.OracleBFile.Read%2A> will block until at least one byte of data can be read, in the event that no data is available.</span></span> <span data-ttu-id="bda7e-229"><xref:System.Data.OracleClient.OracleBFile.Read%2A> ファイルの末尾に達している場合にのみ、0 を返します。</span><span class="sxs-lookup"><span data-stu-id="bda7e-229"><xref:System.Data.OracleClient.OracleBFile.Read%2A> returns 0 only when the end of the file has been reached.</span></span> <span data-ttu-id="bda7e-230"><xref:System.Data.OracleClient.OracleBFile.Read%2A> ストリームの末尾に達していない場合でも、要求されたより少ないバイト数を返すことができます。</span><span class="sxs-lookup"><span data-stu-id="bda7e-230"><xref:System.Data.OracleClient.OracleBFile.Read%2A> is free to return fewer bytes than requested even if the end of the stream has not been reached.</span></span>  
  
 <span data-ttu-id="bda7e-231">アクセス、閉じられた試行<xref:System.Data.OracleClient.OracleBFile>を使用して、<xref:System.Data.OracleClient.OracleBFile.Read%2A>または<xref:System.Data.OracleClient.OracleBFile.Seek%2A>メソッド再度、<xref:System.Data.OracleClient.OracleBFile>自動的にストリーム配信します。</span><span class="sxs-lookup"><span data-stu-id="bda7e-231">Any attempt to access a closed <xref:System.Data.OracleClient.OracleBFile> using the <xref:System.Data.OracleClient.OracleBFile.Read%2A> or <xref:System.Data.OracleClient.OracleBFile.Seek%2A> methods reopens an <xref:System.Data.OracleClient.OracleBFile> stream automatically.</span></span>  
  
 <span data-ttu-id="bda7e-232">次の c# の例では、Oracle テーブルには、このスキーマが前提とします。</span><span class="sxs-lookup"><span data-stu-id="bda7e-232">The following C# example assumes this schema in an Oracle table:</span></span>  
  
```  
(col1 number, col2 BFILE)  
```  
  
 <span data-ttu-id="bda7e-233">この例では、使用方法を示します、<xref:System.Data.OracleClient.OracleBFile.Read%2A>と<xref:System.Data.OracleClient.OracleBFile.Seek%2A>メソッドにアクセスする、<xref:System.Data.OracleClient.OracleBFile>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bda7e-233">The example demonstrates using the <xref:System.Data.OracleClient.OracleBFile.Read%2A> and <xref:System.Data.OracleClient.OracleBFile.Seek%2A> methods to access an <xref:System.Data.OracleClient.OracleBFile> object.</span></span>  
  
```  
byte[] buffer = new byte[100];  
OracleDataReader dataReader = command.ExecuteReader();  
using (dataReader) {  
    if (dataReader.Read()) {  
            OracleBFile BFile = dataReader.GetOracleBFile(1);  
        using (BFile) {  
            BFile.Seek(0, SeekOrigin.Begin);  
            BFile.Read(buffer, 0, 100);  
        }  
    }  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="bda7e-234"><paramref name="offset" /> と <paramref name="count" /> の合計が、バッファーの長さよりも大きくなっています。</span><span class="sxs-lookup"><span data-stu-id="bda7e-234">The sum of <paramref name="offset" /> and <paramref name="count" /> is larger than the buffer length.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bda7e-235"><paramref name="buffer" /> が null 参照 (Visual Basic の場合は <see langword="Nothing" />) です。</span><span class="sxs-lookup"><span data-stu-id="bda7e-235"><paramref name="buffer" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="bda7e-236"><paramref name="offset" /> または <paramref name="count" /> が負の値です。</span><span class="sxs-lookup"><span data-stu-id="bda7e-236"><paramref name="offset" /> or <paramref name="count" /> is negative.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="bda7e-237"><see langword="BFILE" /> に関連付けられている接続が閉じています。</span><span class="sxs-lookup"><span data-stu-id="bda7e-237">The connection with which a <see langword="BFILE" /> is associated is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="bda7e-238">I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="bda7e-238">An I/O error occurred.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="bda7e-239">ストリームが閉じられたか破棄された後で、メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="bda7e-239">Methods were called after the stream was closed or disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public override long Seek (long offset, System.IO.SeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 Seek(int64 offset, valuetype System.IO.SeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.Seek(System.Int64,System.IO.SeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Seek (offset As Long, origin As SeekOrigin) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long Seek(long offset, System::IO::SeekOrigin origin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="origin" Type="System.IO.SeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="bda7e-240">原点からのバイト オフセット。</span><span class="sxs-lookup"><span data-stu-id="bda7e-240">A byte offset relative to origin.</span></span> <span data-ttu-id="bda7e-241"><c>オフセット</c>が負の値の場合は、<c>原点</c>で指定した位置から<c>オフセット</c>で指定したバイト数だけさかのぼった位置が新しい位置になります。</span><span class="sxs-lookup"><span data-stu-id="bda7e-241">If <c>offset</c> is negative, the new position will precede the position specified by <c>origin</c> by the number of bytes specified by <c>offset</c>.</span></span> <span data-ttu-id="bda7e-242"><c>オフセット</c>が 0 の場合は、<c>原点</c>で指定した位置が新しい位置になります。</span><span class="sxs-lookup"><span data-stu-id="bda7e-242">If <c>offset</c> is zero, the new position will be the position specified by <c>origin</c>.</span></span> <span data-ttu-id="bda7e-243"><c>オフセット</c>が正の値の場合は、<c>原点</c>で指定した位置から<c>オフセット</c>で指定したバイト数だけ進んだ位置が新しい位置になります。</span><span class="sxs-lookup"><span data-stu-id="bda7e-243">If <c>offset</c> is positive, the new position will follow the position specified by <c>origin</c> by the number of bytes specified by <c>offset</c>.</span></span></param>
        <param name="origin"><span data-ttu-id="bda7e-244">新しい位置を取得するために使用する参照ポイントを示す <see langword="System.IO.SeekOrigin" /> 型の値。</span><span class="sxs-lookup"><span data-stu-id="bda7e-244">A value of type <see langword="System.IO.SeekOrigin" /> indicating the reference point used to obtain the new position.</span></span></param>
        <summary><span data-ttu-id="bda7e-245">現在の <see cref="T:System.Data.OracleClient.OracleBFile" /> ストリームで位置を設定します。</span><span class="sxs-lookup"><span data-stu-id="bda7e-245">Sets the position on the current <see cref="T:System.Data.OracleClient.OracleBFile" /> stream.</span></span></summary>
        <returns><span data-ttu-id="bda7e-246">現在のストリーム内の新しい位置。</span><span class="sxs-lookup"><span data-stu-id="bda7e-246">The new position within the current stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bda7e-247">場合`offset`は負の場合、新しい位置が必要で指定した位置の前に`origin`で指定したバイト数だけ`offset`です。</span><span class="sxs-lookup"><span data-stu-id="bda7e-247">If `offset` is negative, the new position is required to precede the position specified by `origin` by the number of bytes specified by `offset`.</span></span> <span data-ttu-id="bda7e-248">場合`offset`0 の場合は、新しい位置に指定した位置である必要は`origin`します。</span><span class="sxs-lookup"><span data-stu-id="bda7e-248">If `offset` is zero, the new position is required to be the position specified by `origin`.</span></span> <span data-ttu-id="bda7e-249">場合`offset`が正の値であり、新しい位置は指定した位置に従う必要`origin`で指定したバイト数だけ`offset`です。</span><span class="sxs-lookup"><span data-stu-id="bda7e-249">If `offset` is positive, the new position is required to follow the position specified by `origin` by the number of bytes specified by `offset`.</span></span>  
  
 <span data-ttu-id="bda7e-250">ストリームの長さを超えた位置にシークすることはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="bda7e-250">Seeking to any location beyond the length of the stream is not supported.</span></span>  
  
 <span data-ttu-id="bda7e-251">アクセス、閉じられた試行<xref:System.Data.OracleClient.OracleBFile>を使用して、<xref:System.Data.OracleClient.OracleBFile.Read%2A>または<xref:System.Data.OracleClient.OracleBFile.Seek%2A>メソッド再度、<xref:System.Data.OracleClient.OracleBFile>自動的にストリーム配信します。</span><span class="sxs-lookup"><span data-stu-id="bda7e-251">Any attempt to access a closed <xref:System.Data.OracleClient.OracleBFile> using the <xref:System.Data.OracleClient.OracleBFile.Read%2A> or <xref:System.Data.OracleClient.OracleBFile.Seek%2A> methods reopens an <xref:System.Data.OracleClient.OracleBFile> stream automatically.</span></span>  
  
 <span data-ttu-id="bda7e-252">次の c# の例では、Oracle テーブルには、このスキーマが前提とします。</span><span class="sxs-lookup"><span data-stu-id="bda7e-252">The following C# example assumes this schema in an Oracle table:</span></span>  
  
```  
(col1 number, col2 BFILE)  
```  
  
 <span data-ttu-id="bda7e-253">この例では、使用方法を示します、<xref:System.Data.OracleClient.OracleBFile.Read%2A>と<xref:System.Data.OracleClient.OracleBFile.Seek%2A>メソッドにアクセスする、<xref:System.Data.OracleClient.OracleBFile>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bda7e-253">The example demonstrates using the <xref:System.Data.OracleClient.OracleBFile.Read%2A> and <xref:System.Data.OracleClient.OracleBFile.Seek%2A> methods to access an <xref:System.Data.OracleClient.OracleBFile> object.</span></span>  
  
```  
byte[] buffer = new byte[100];  
OracleDataReader dataReader = command.ExecuteReader();  
using (dataReader) {  
    if (dataReader.Read()) {  
            OracleBFile BFile = dataReader.GetOracleBFile(1);  
        using (BFile) {  
            BFile.Seek(0, SeekOrigin.Begin);  
            BFile.Read(buffer, 0, 100);  
        }  
    }  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="bda7e-254">負の値またはストリーム長を超える値に、位置を設定しようとしました。</span><span class="sxs-lookup"><span data-stu-id="bda7e-254">Attempted to set a position with a negative value or greater than the length of the stream.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="bda7e-255">ストリームが閉じられたか破棄された後で、メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="bda7e-255">Methods were called after the stream was closed or disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetFileName">
      <MemberSignature Language="C#" Value="public void SetFileName (string directory, string file);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFileName(string directory, string file) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.SetFileName(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFileName (directory As String, file As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFileName(System::String ^ directory, System::String ^ file);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directory" Type="System.String" />
        <Parameter Name="file" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="directory"><span data-ttu-id="bda7e-256">物理ファイルを格納しているディレクトリ オブジェクトの別名。</span><span class="sxs-lookup"><span data-stu-id="bda7e-256">The alias of the directory object that contains a physical file.</span></span></param>
        <param name="file"><span data-ttu-id="bda7e-257">オペレーティング システムでのファイル名。</span><span class="sxs-lookup"><span data-stu-id="bda7e-257">The name of the file in the operating system.</span></span></param>
        <summary><span data-ttu-id="bda7e-258"><see cref="T:System.Data.OracleClient.OracleBFile" /> オブジェクトをオペレーティング システムの別のファイルにバインドします。</span><span class="sxs-lookup"><span data-stu-id="bda7e-258">Binds the <see cref="T:System.Data.OracleClient.OracleBFile" /> object to a different file in the operating system.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bda7e-259"><xref:System.Data.OracleClient.OracleBFile.SetFileName%2A>操作が成功するトランザクション内である必要があります。</span><span class="sxs-lookup"><span data-stu-id="bda7e-259">The <xref:System.Data.OracleClient.OracleBFile.SetFileName%2A> operation must be within a transaction to succeed.</span></span> <span data-ttu-id="bda7e-260">だけを呼び出す<xref:System.Data.OracleClient.OracleBFile.SetFileName%2A>上、`BFILE`関連付けます、<xref:System.Data.OracleClient.OracleBFile>別のファイルを持つオブジェクトは Oracle のテーブルは更新されません。</span><span class="sxs-lookup"><span data-stu-id="bda7e-260">Simply calling <xref:System.Data.OracleClient.OracleBFile.SetFileName%2A> on a `BFILE` associates the <xref:System.Data.OracleClient.OracleBFile> object with a different file, but does not update the Oracle table.</span></span> <span data-ttu-id="bda7e-261">呼び出した後に、Oracle テーブルを更新する<xref:System.Data.OracleClient.OracleBFile.SetFileName%2A>、呼び出す必要があります、`Update`のメソッド、<xref:System.Data.OracleClient.OracleDataAdapter>し、トランザクションをコミットします。</span><span class="sxs-lookup"><span data-stu-id="bda7e-261">To update the Oracle table after calling <xref:System.Data.OracleClient.OracleBFile.SetFileName%2A>, you must call the `Update` method of the <xref:System.Data.OracleClient.OracleDataAdapter> and then commit the transaction.</span></span>  
  
 <span data-ttu-id="bda7e-262">取得した後、<xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A>または<xref:System.Data.OracleClient.OracleBFile.FileName%2A>にキャッシュされるプロパティを<xref:System.Data.OracleClient.OracleBFile>オブジェクトし、いずれかの複製による影響を受けません<xref:System.Data.OracleClient.OracleBFile>へのオブジェクトの呼び出し<xref:System.Data.OracleClient.OracleBFile.SetFileName%2A>、またはを変更して、`BFILE`データベースにします。</span><span class="sxs-lookup"><span data-stu-id="bda7e-262">Once you retrieve the <xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A> or <xref:System.Data.OracleClient.OracleBFile.FileName%2A> property, they are cached in the <xref:System.Data.OracleClient.OracleBFile> object and are unaffected by any cloned <xref:System.Data.OracleClient.OracleBFile> objects' calls to <xref:System.Data.OracleClient.OracleBFile.SetFileName%2A>, or by any changes to the `BFILE` in the database.</span></span> <span data-ttu-id="bda7e-263">つまり、他の実際の値を表すことがない、`BFILE`サーバー内のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bda7e-263">In other words, they might not represent the actual values of the `BFILE` object in the server.</span></span>  
  
 <span data-ttu-id="bda7e-264">さらに、いずれかのプロパティの取得 (<xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A>または<xref:System.Data.OracleClient.OracleBFile.FileName%2A>) により、サーバーから取得され、キャッシュの両方のプロパティ値、<xref:System.Data.OracleClient.OracleBFile>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bda7e-264">Furthermore, retrieving either property (<xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A> or <xref:System.Data.OracleClient.OracleBFile.FileName%2A>) causes both property values to be retrieved from the server and cached in the <xref:System.Data.OracleClient.OracleBFile> object.</span></span>  
  
 <span data-ttu-id="bda7e-265">次の c# の例では、Oracle テーブルには、このスキーマが前提とします。</span><span class="sxs-lookup"><span data-stu-id="bda7e-265">The following C# example assumes this schema in an Oracle table:</span></span>  
  
```  
(col1 number, col2 BFILE)  
```  
  
 <span data-ttu-id="bda7e-266">この例では、使用方法を示します、 <xref:System.Data.OracleClient.OracleBFile.SetFileName%2A>、<xref:System.Data.OracleClient.OracleBFile.Read%2A>と<xref:System.Data.OracleClient.OracleBFile.Seek%2A>メソッドにアクセスする、<xref:System.Data.OracleClient.OracleBFile>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bda7e-266">The example demonstrates using the <xref:System.Data.OracleClient.OracleBFile.SetFileName%2A>, <xref:System.Data.OracleClient.OracleBFile.Read%2A> and <xref:System.Data.OracleClient.OracleBFile.Seek%2A> methods to access an <xref:System.Data.OracleClient.OracleBFile> object.</span></span>  
  
```  
byte[] buffer = new byte[100];  
OracleDataReader dataReader = command.ExecuteReader();  
using (dataReader) {  
    if (dataReader.Read()) {  
        OracleBFile BFile = dataReader.GetOracleBFile(1);  
        using (BFile) {  
            BFile.Seek(0, SeekOrigin.Begin);  
            BFile.Read(buffer, 0, 100);  
            command.Transaction = connection.BeginTransaction();  
            BFile.SetFileName("TESTDIR", "File1.jpg");  
            BFile.Read(buffer, 0, 100);  
        }  
    }  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="bda7e-267">操作はトランザクション内で行う必要があります。</span><span class="sxs-lookup"><span data-stu-id="bda7e-267">The operation must be within a transaction.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetLength">
      <MemberSignature Language="C#" Value="public override void SetLength (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetLength(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.SetLength(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetLength (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetLength(long value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="bda7e-268">現在サポートされていません。</span><span class="sxs-lookup"><span data-stu-id="bda7e-268">Not currently supported.</span></span></param>
        <summary><span data-ttu-id="bda7e-269">現在サポートされていません。</span><span class="sxs-lookup"><span data-stu-id="bda7e-269">Not currently supported.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="bda7e-270">呼び出されたメソッドがサポートされていない場合、または呼び出された機能をサポートしないストリームに対して読み取り、シーク、または書き込みを行おうとした場合にスローされる例外。</span><span class="sxs-lookup"><span data-stu-id="bda7e-270">The exception that is thrown when an invoked method is not supported, or when there is an attempt to read, seek, or write to a stream that does not support the invoked functionality.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bda7e-271"><see cref="T:System.Array" /> データを格納している <see cref="T:System.Byte" /> 型の <see cref="T:System.Data.OracleClient.OracleBFile" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="bda7e-271">Gets an <see cref="T:System.Array" /> of type <see cref="T:System.Byte" /> that contains the <see cref="T:System.Data.OracleClient.OracleBFile" /> data.</span></span></summary>
        <value><span data-ttu-id="bda7e-272"><see cref="T:System.Array" /> データを格納している <see cref="T:System.Byte" /> 型の <see cref="T:System.Data.OracleClient.OracleBFile" /></span><span class="sxs-lookup"><span data-stu-id="bda7e-272">An <see cref="T:System.Array" /> of type <see cref="T:System.Byte" /> that contains the <see cref="T:System.Data.OracleClient.OracleBFile" /> data.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bda7e-273"><xref:System.Data.OracleClient.OracleBFile.Value%2A>プロパティには、全体が読み込まれる`BFILE`一度に 1 つです。</span><span class="sxs-lookup"><span data-stu-id="bda7e-273">The <xref:System.Data.OracleClient.OracleBFile.Value%2A> property reads the entire `BFILE` at one time.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bda7e-274">使用する利点`BFILE`大量のクライアント側のチャンク単位でデータを取得することができます。</span><span class="sxs-lookup"><span data-stu-id="bda7e-274">A benefit of using `BFILE`s is the ability to retrieve large amounts of data in chunks at the client.</span></span> <span data-ttu-id="bda7e-275">ただし、使用<xref:System.Data.OracleClient.OracleBFile.Value%2A>アプリケーションのオーバーヘッドを大幅に向上する可能性が 1 つの連続したチャンクとして BFILE 列のすべてのデータを取得します。</span><span class="sxs-lookup"><span data-stu-id="bda7e-275">However, when you use <xref:System.Data.OracleClient.OracleBFile.Value%2A>, you obtain all the data for the BFILE column as one contiguous chunk, which can significantly increase application overhead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.Write(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Byte(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="bda7e-276">現在サポートされていません。</span><span class="sxs-lookup"><span data-stu-id="bda7e-276">Not currently supported.</span></span></param>
        <param name="offset"><span data-ttu-id="bda7e-277">現在サポートされていません。</span><span class="sxs-lookup"><span data-stu-id="bda7e-277">Not currently supported.</span></span></param>
        <param name="count"><span data-ttu-id="bda7e-278">現在サポートされていません。</span><span class="sxs-lookup"><span data-stu-id="bda7e-278">Not currently supported.</span></span></param>
        <summary><span data-ttu-id="bda7e-279">現在サポートされていません。</span><span class="sxs-lookup"><span data-stu-id="bda7e-279">Not currently supported.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="bda7e-280">呼び出されたメソッドがサポートされていない場合、または呼び出された機能をサポートしないストリームに対して読み取り、シーク、または書き込みを行おうとした場合にスローされる例外。</span><span class="sxs-lookup"><span data-stu-id="bda7e-280">The exception that is thrown when an invoked method is not supported, or when there is an attempt to read, seek, or write to a stream that does not support the invoked functionality.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>