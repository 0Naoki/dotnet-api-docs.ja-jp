<Type Name="OracleConnection" FullName="System.Data.OracleClient.OracleConnection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fa1a9866a23f6fcdf2b9c06a76cf3108b5a6ad3c" /><Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="11/29/2018" /><Meta Name="ms.locfileid" Value="52596628" /></Metadata><TypeSignature Language="C#" Value="public sealed class OracleConnection : System.Data.Common.DbConnection, ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OracleConnection extends System.Data.Common.DbConnection implements class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Data.OracleClient.OracleConnection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OracleConnection&#xA;Inherits DbConnection&#xA;Implements ICloneable" />
  <TypeSignature Language="C++ CLI" Value="public ref class OracleConnection sealed : System::Data::Common::DbConnection, ICloneable" />
  <TypeSignature Language="F#" Value="type OracleConnection = class&#xA;    inherit DbConnection&#xA;    interface ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.OracleClient</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbConnection</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-1.1">System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.DefaultEvent("InfoMessage")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("OracleConnection has been deprecated. http://go.microsoft.com/fwlink/?LinkID=144260", false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="efca2-101">データベースへの開いた接続を表します。</span><span class="sxs-lookup"><span data-stu-id="efca2-101">Represents an open connection to a database.</span></span> <span data-ttu-id="efca2-102">このクラスは継承できません。</span><span class="sxs-lookup"><span data-stu-id="efca2-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efca2-103">この型は非推奨し、.NET Framework の将来のバージョンで削除される予定です。</span><span class="sxs-lookup"><span data-stu-id="efca2-103">This type is deprecated and will be removed in a future version of the .NET Framework.</span></span> <span data-ttu-id="efca2-104">詳細については、次を参照してください。 [Oracle および ADO.NET](~/docs/framework/data/adonet/oracle-and-adonet.md)します。</span><span class="sxs-lookup"><span data-stu-id="efca2-104">For more information, see [Oracle and ADO.NET](~/docs/framework/data/adonet/oracle-and-adonet.md).</span></span>  
  
 <span data-ttu-id="efca2-105"><xref:System.Data.OracleClient.OracleConnection>オブジェクトは、Oracle データベースへの一意の接続を表します。</span><span class="sxs-lookup"><span data-stu-id="efca2-105">An <xref:System.Data.OracleClient.OracleConnection> object represents a unique connection to an Oracle database.</span></span> <span data-ttu-id="efca2-106">クライアント/サーバー データベース システムでは、場合は、サーバーへのネットワーク接続と同じです。</span><span class="sxs-lookup"><span data-stu-id="efca2-106">In the case of a client/server database system, it is equivalent to a network connection to the server.</span></span>  
  
 <span data-ttu-id="efca2-107">インスタンスを作成するアプリケーション、<xref:System.Data.OracleClient.OracleConnection>オブジェクトをすべて直接および間接の呼び出し元コードに適切なアクセス許可を必要とする宣言型または命令型のセキュリティ確認要求を設定できます。</span><span class="sxs-lookup"><span data-stu-id="efca2-107">An application that creates an instance of the <xref:System.Data.OracleClient.OracleConnection> object can set declarative or imperative security demands that require all direct and indirect callers to have adequate permission to the code.</span></span> <span data-ttu-id="efca2-108"><xref:System.Data.OracleClient.OracleConnection> 使用してセキュリティの要求を作成、<xref:System.Data.OracleClient.OraclePermission>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="efca2-108"><xref:System.Data.OracleClient.OracleConnection> creates security demands by using the <xref:System.Data.OracleClient.OraclePermission> object.</span></span> <span data-ttu-id="efca2-109">ユーザーを使用して、コードが適切なアクセス許可を持つことを確認することができます、<xref:System.Data.OracleClient.OraclePermissionAttribute>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="efca2-109">Users can verify that their code has adequate permissions by using the <xref:System.Data.OracleClient.OraclePermissionAttribute> object.</span></span> <span data-ttu-id="efca2-110">ユーザーおよび管理者では、コンピューター、ユーザー、およびエンタープライズ レベルのセキュリティ ポリシーを変更するのにコード アクセス セキュリティ ポリシー ツール (Caspol.exe) を使用できますも。</span><span class="sxs-lookup"><span data-stu-id="efca2-110">Users and administrators can also use the Code Access Security Policy Tool (Caspol.exe) to modify security policy at the machine, user, and enterprise levels.</span></span> <span data-ttu-id="efca2-111">詳細については、[セキュリティ](https://msdn.microsoft.com/library/9a9621d7-8883-4a4f-a874-65e8e09e20a6)に関するページをご覧ください。</span><span class="sxs-lookup"><span data-stu-id="efca2-111">For more information, see [Security](https://msdn.microsoft.com/library/9a9621d7-8883-4a4f-a874-65e8e09e20a6).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="efca2-112">異なり、**接続**、他の .NET Framework データ プロバイダー (SQL Server、OLE DB および ODBC) 内のオブジェクト<xref:System.Data.OracleClient.OracleConnection>はサポートしていません、<xref:System.Data.OracleClient.OracleConnection.ConnectionTimeout%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="efca2-112">Unlike the **Connection** object in the other .NET Framework data providers (SQL Server, OLE DB, and ODBC), <xref:System.Data.OracleClient.OracleConnection> does not support a <xref:System.Data.OracleClient.OracleConnection.ConnectionTimeout%2A> property.</span></span> <span data-ttu-id="efca2-113">プロパティまたは接続文字列で接続タイムアウトの設定も何も起こりません、および返される値は常に 0 です。</span><span class="sxs-lookup"><span data-stu-id="efca2-113">Setting a connection time-out either as a property or in the connection string has no effect, and the value returned is always zero.</span></span> <span data-ttu-id="efca2-114"><xref:System.Data.OracleClient.OracleConnection> サポートされていません、<xref:System.Data.OracleClient.OracleConnection.Database%2A>プロパティまたは<xref:System.Data.OracleClient.OracleConnection.ChangeDatabase%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="efca2-114"><xref:System.Data.OracleClient.OracleConnection> also does not support a <xref:System.Data.OracleClient.OracleConnection.Database%2A> property or a <xref:System.Data.OracleClient.OracleConnection.ChangeDatabase%2A> method.</span></span>  
  
 <span data-ttu-id="efca2-115">場合、<xref:System.Data.OracleClient.OracleConnection>オブジェクトがスコープ外になる、未処理のままにします。</span><span class="sxs-lookup"><span data-stu-id="efca2-115">If the <xref:System.Data.OracleClient.OracleConnection> object goes out of scope, it remains open.</span></span> <span data-ttu-id="efca2-116">そのため、常を閉じてください<xref:System.Data.OracleClient.OracleConnection>オブジェクトを呼び出すことによって<xref:System.Data.OracleClient.OracleConnection.Close%2A>または**Dispose**、またはを使用して、<xref:System.Data.OracleClient.OracleConnection>オブジェクト内を`Using`ステートメント。</span><span class="sxs-lookup"><span data-stu-id="efca2-116">Therefore, you should always close <xref:System.Data.OracleClient.OracleConnection> objects by calling <xref:System.Data.OracleClient.OracleConnection.Close%2A> or **Dispose**, or by using the <xref:System.Data.OracleClient.OracleConnection> object within a `Using` statement.</span></span> <span data-ttu-id="efca2-117">それ以外の場合、ガベージ コレクションがそれらをすぐに解放しない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="efca2-117">Otherwise, the garbage collection might not free them immediately.</span></span> <span data-ttu-id="efca2-118">ガベージ コレクターによって削除される接続の数が待機している間に、接続の最大数に達した場合は、このような遅延をエラーになります。</span><span class="sxs-lookup"><span data-stu-id="efca2-118">Such delays can cause errors if the maximum number of connections is reached while a number of connections are waiting to be deleted by the garbage collector.</span></span> <span data-ttu-id="efca2-119">これに対し、呼び出すことによって、接続を閉じる<xref:System.Data.OracleClient.OracleConnection.Close%2A>スケーラビリティを向上し、アプリケーション全体のパフォーマンスを向上させるより効率的にネイティブ リソースを使用します。</span><span class="sxs-lookup"><span data-stu-id="efca2-119">By contrast, closing the connections by calling <xref:System.Data.OracleClient.OracleConnection.Close%2A> uses native resources more efficiently, enhancing scalability and improving overall application performance.</span></span> <span data-ttu-id="efca2-120">接続は常に閉じられることを確認するには、内の接続を開く、`Using`ブロックします。</span><span class="sxs-lookup"><span data-stu-id="efca2-120">To ensure that connections are always closed, open the connection inside of a `Using` block.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="efca2-121">高パフォーマンス アプリケーションを展開するには、多くの場合、接続プールを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="efca2-121">To deploy high-performance applications, you often need to use connection pooling.</span></span> <span data-ttu-id="efca2-122">ただし、.NET Framework Data Provider for Oracle を使用する場合、プロバイダーは、これを自動的に管理するために接続がプールを有効にする必要はありません。</span><span class="sxs-lookup"><span data-stu-id="efca2-122">However, when you use the .NET Framework Data Provider for Oracle, you do not need to enable connection pooling because the provider manages this automatically.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="efca2-123">次の例では、作成、<xref:System.Data.OracleClient.OracleCommand>と<xref:System.Data.OracleClient.OracleConnection>します。</span><span class="sxs-lookup"><span data-stu-id="efca2-123">The following example creates an <xref:System.Data.OracleClient.OracleCommand> and an <xref:System.Data.OracleClient.OracleConnection>.</span></span> <span data-ttu-id="efca2-124"><xref:System.Data.OracleClient.OracleConnection>を開き、として設定は、<xref:System.Data.OracleClient.OracleCommand.Connection%2A?displayProperty=nameWithType>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="efca2-124">The <xref:System.Data.OracleClient.OracleConnection> is opened and set as the <xref:System.Data.OracleClient.OracleCommand.Connection%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="efca2-125">例を呼び出して<xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A>接続を閉じます。</span><span class="sxs-lookup"><span data-stu-id="efca2-125">The example then calls <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A>, and closes the connection.</span></span> <span data-ttu-id="efca2-126">これを実現する、<xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A>接続文字列とは、SQL の INSERT ステートメントのクエリ文字列が渡されます。</span><span class="sxs-lookup"><span data-stu-id="efca2-126">To accomplish this, the <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A> is passed a connection string and a query string that is an SQL INSERT statement.</span></span>  
  
 [!code-csharp[Classic WebData OracleConnection#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleConnection/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleConnection#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleConnection/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Data.OracleClient.OracleDataAdapter" />
    <altmember cref="T:System.Data.OracleClient.OracleCommand" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="efca2-127"><see cref="T:System.Data.OracleClient.OracleConnection" />の新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="efca2-127">Initializes a new instance of the <see cref="T:System.Data.OracleClient.OracleConnection" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleConnection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleConnection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="efca2-128"><see cref="T:System.Data.OracleClient.OracleConnection" />の新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="efca2-128">Initializes a new instance of the <see cref="T:System.Data.OracleClient.OracleConnection" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="efca2-129">次の例では、作成し、開きます、<xref:System.Data.OracleClient.OracleConnection>します。</span><span class="sxs-lookup"><span data-stu-id="efca2-129">The following example creates and opens an <xref:System.Data.OracleClient.OracleConnection>.</span></span>  
  
 [!code-csharp[Classic WebData OracleConnection.OracleConnection1#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleConnection.OracleConnection1/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleConnection.OracleConnection1#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleConnection.OracleConnection1/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleConnection (string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleConnection(System::String ^ connectionString);" />
      <MemberSignature Language="F#" Value="new System.Data.OracleClient.OracleConnection : string -&gt; System.Data.OracleClient.OracleConnection" Usage="new System.Data.OracleClient.OracleConnection connectionString" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString"><span data-ttu-id="efca2-130">データベースを開くために使用される接続。</span><span class="sxs-lookup"><span data-stu-id="efca2-130">The connection used to open the database.</span></span></param>
        <summary><span data-ttu-id="efca2-131">接続文字列を指定して、<see cref="T:System.Data.OracleClient.OracleConnection" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="efca2-131">Initializes a new instance of the <see cref="T:System.Data.OracleClient.OracleConnection" /> class with the specified connection string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="efca2-132">次の例では、作成し、開きます、<xref:System.Data.OracleClient.OracleConnection>します。</span><span class="sxs-lookup"><span data-stu-id="efca2-132">The following example creates and opens an <xref:System.Data.OracleClient.OracleConnection>.</span></span>  
  
 [!code-csharp[Classic WebData OracleConnection.OracleConnection1#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleConnection.OracleConnection1/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleConnection.OracleConnection1#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleConnection.OracleConnection1/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginDbTransaction">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbTransaction BeginDbTransaction (System.Data.IsolationLevel isolationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbTransaction BeginDbTransaction(valuetype System.Data.IsolationLevel isolationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.BeginDbTransaction(System.Data.IsolationLevel)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbTransaction ^ BeginDbTransaction(System::Data::IsolationLevel isolationLevel);" />
      <MemberSignature Language="F#" Value="override this.BeginDbTransaction : System.Data.IsolationLevel -&gt; System.Data.Common.DbTransaction" Usage="oracleConnection.BeginDbTransaction isolationLevel" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isolationLevel" Type="System.Data.IsolationLevel" />
      </Parameters>
      <Docs>
        <param name="isolationLevel">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginTransaction">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="efca2-133">データベースでトランザクションを開始します。</span><span class="sxs-lookup"><span data-stu-id="efca2-133">Begins a transaction at the database.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginTransaction">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleTransaction BeginTransaction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleTransaction BeginTransaction() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.BeginTransaction" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTransaction () As OracleTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleTransaction ^ BeginTransaction();" />
      <MemberSignature Language="F#" Value="override this.BeginTransaction : unit -&gt; System.Data.OracleClient.OracleTransaction" Usage="oracleConnection.BeginTransaction " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleTransaction</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="efca2-134">データベースでトランザクションを開始します。</span><span class="sxs-lookup"><span data-stu-id="efca2-134">Begins a transaction at the database.</span></span></summary>
        <returns><span data-ttu-id="efca2-135">新しいトランザクションを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="efca2-135">An object representing the new transaction.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efca2-136">トランザクションをロールバックまたはコミットは、する必要があります明示的に使用する、<xref:System.Data.OracleClient.OracleTransaction.Commit%2A>または<xref:System.Data.OracleClient.OracleTransaction.Rollback%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="efca2-136">To commit or roll back the transaction, you must explicitly use the <xref:System.Data.OracleClient.OracleTransaction.Commit%2A> or <xref:System.Data.OracleClient.OracleTransaction.Rollback%2A> methods.</span></span>  
  
 <span data-ttu-id="efca2-137">.NET Framework Data Provider for Oracle トランザクションの管理モデルを正しく実行することを確認するには、データベースによって提供されるものなど、他のトランザクション管理モデルを使用しないでください。</span><span class="sxs-lookup"><span data-stu-id="efca2-137">To ensure that the .NET Framework Data Provider for Oracle transaction management model performs correctly, avoid using other transaction management models, such as those provided by the database.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="efca2-138">分離レベルを指定しない場合は、既定の分離レベルが使用されます。</span><span class="sxs-lookup"><span data-stu-id="efca2-138">If you do not specify an isolation level, the default isolation level is used.</span></span> <span data-ttu-id="efca2-139">分離レベルを指定する、<xref:System.Data.OracleClient.OracleConnection.BeginTransaction%2A>メソッドを使用して、<xref:System.Data.OracleClient.OracleConnection.BeginTransaction%2A>オーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="efca2-139">To specify an isolation level with the <xref:System.Data.OracleClient.OracleConnection.BeginTransaction%2A> method, use the <xref:System.Data.OracleClient.OracleConnection.BeginTransaction%2A> overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="efca2-140">次の例では、作成、<xref:System.Data.OracleClient.OracleConnection>と<xref:System.Data.OracleClient.OracleTransaction>します。</span><span class="sxs-lookup"><span data-stu-id="efca2-140">The following example creates an <xref:System.Data.OracleClient.OracleConnection> and an <xref:System.Data.OracleClient.OracleTransaction>.</span></span> <span data-ttu-id="efca2-141">使用する方法も示します、 <xref:System.Data.OracleClient.OracleConnection.BeginTransaction%2A>、 <xref:System.Data.OracleClient.OracleTransaction.Commit%2A>、および<xref:System.Data.OracleClient.OracleTransaction.Rollback%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="efca2-141">It also demonstrates how to use the <xref:System.Data.OracleClient.OracleConnection.BeginTransaction%2A>, <xref:System.Data.OracleClient.OracleTransaction.Commit%2A>, and <xref:System.Data.OracleClient.OracleTransaction.Rollback%2A> methods.</span></span>  
  
 [!code-csharp[Classic WebData OracleConnection.BeginTransaction#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleConnection.BeginTransaction/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleConnection.BeginTransaction#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleConnection.BeginTransaction/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="efca2-142">並列トランザクションはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="efca2-142">Parallel transactions are not supported.</span></span></exception>
        <altmember cref="M:System.Data.OracleClient.OracleTransaction.Commit" />
        <altmember cref="M:System.Data.OracleClient.OracleTransaction.Rollback" />
      </Docs>
    </Member>
    <Member MemberName="BeginTransaction">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleTransaction BeginTransaction (System.Data.IsolationLevel il);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleTransaction BeginTransaction(valuetype System.Data.IsolationLevel il) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.BeginTransaction(System.Data.IsolationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTransaction (il As IsolationLevel) As OracleTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleTransaction ^ BeginTransaction(System::Data::IsolationLevel il);" />
      <MemberSignature Language="F#" Value="override this.BeginTransaction : System.Data.IsolationLevel -&gt; System.Data.OracleClient.OracleTransaction" Usage="oracleConnection.BeginTransaction il" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="il" Type="System.Data.IsolationLevel" />
      </Parameters>
      <Docs>
        <param name="il"><span data-ttu-id="efca2-143">この接続のトランザクション分離レベル。</span><span class="sxs-lookup"><span data-stu-id="efca2-143">The transaction isolation level for this connection.</span></span></param>
        <summary><span data-ttu-id="efca2-144">指定した <see cref="T:System.Data.IsolationLevel" /> 値を使用して、データベースでトランザクションを開始します。</span><span class="sxs-lookup"><span data-stu-id="efca2-144">Begins a transaction at the database with the specified <see cref="T:System.Data.IsolationLevel" /> value.</span></span></summary>
        <returns><span data-ttu-id="efca2-145">新しいトランザクションを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="efca2-145">An object representing the new transaction.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efca2-146">トランザクションをロールバックまたはコミットは、する必要があります明示的に使用する、<xref:System.Data.OracleClient.OracleTransaction.Commit%2A>または<xref:System.Data.OracleClient.OracleTransaction.Rollback%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="efca2-146">To commit or roll back the transaction, you must explicitly use the <xref:System.Data.OracleClient.OracleTransaction.Commit%2A> or <xref:System.Data.OracleClient.OracleTransaction.Rollback%2A> methods.</span></span>  
  
 <span data-ttu-id="efca2-147">.NET Framework Data Provider for Oracle トランザクションの管理モデルを正しく実行することを確認するには、データベースによって提供されるものなど、他のトランザクション管理モデルを使用しないでください。</span><span class="sxs-lookup"><span data-stu-id="efca2-147">To ensure that the .NET Framework Data Provider for Oracle transaction management model performs correctly, avoid using other transaction management models, such as those provided by the database.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="efca2-148">次の例では、作成、<xref:System.Data.OracleClient.OracleConnection>と<xref:System.Data.OracleClient.OracleTransaction>します。</span><span class="sxs-lookup"><span data-stu-id="efca2-148">The following example creates an <xref:System.Data.OracleClient.OracleConnection> and an <xref:System.Data.OracleClient.OracleTransaction>.</span></span> <span data-ttu-id="efca2-149">使用する方法も示します、 <xref:System.Data.OracleClient.OracleConnection.BeginTransaction%2A>、 <xref:System.Data.OracleClient.OracleTransaction.Commit%2A>、および<xref:System.Data.OracleClient.OracleTransaction.Rollback%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="efca2-149">It also demonstrates how to use the <xref:System.Data.OracleClient.OracleConnection.BeginTransaction%2A>, <xref:System.Data.OracleClient.OracleTransaction.Commit%2A>, and <xref:System.Data.OracleClient.OracleTransaction.Rollback%2A> methods.</span></span>  
  
 [!code-csharp[Classic WebData OracleConnection.BeginTransaction#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleConnection.BeginTransaction/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleConnection.BeginTransaction#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleConnection.BeginTransaction/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="efca2-150">並列トランザクションはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="efca2-150">Parallel transactions are not supported.</span></span></exception>
        <altmember cref="M:System.Data.OracleClient.OracleTransaction.Commit" />
        <altmember cref="M:System.Data.OracleClient.OracleTransaction.Rollback" />
      </Docs>
    </Member>
    <Member MemberName="ChangeDatabase">
      <MemberSignature Language="C#" Value="public override void ChangeDatabase (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ChangeDatabase(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.ChangeDatabase(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ChangeDatabase (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ChangeDatabase(System::String ^ value);" />
      <MemberSignature Language="F#" Value="override this.ChangeDatabase : string -&gt; unit" Usage="oracleConnection.ChangeDatabase value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="efca2-151">現在のデータベースの代わりに使用するデータベースの名前。</span><span class="sxs-lookup"><span data-stu-id="efca2-151">The name of the database to use instead of the current database.</span></span></param>
        <summary><span data-ttu-id="efca2-152">開いている <see cref="T:System.Data.OracleClient.OracleConnection" /> の現在のデータベースを変更します。</span><span class="sxs-lookup"><span data-stu-id="efca2-152">Changes the current database for an open <see cref="T:System.Data.OracleClient.OracleConnection" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efca2-153">`value`パラメーターは、有効なデータベース名を含める必要があり、null 値、空の文字列を含めることはできません ("")、または空白文字だけを含む文字列。</span><span class="sxs-lookup"><span data-stu-id="efca2-153">The `value` parameter must contain a valid database name, and cannot contain a null value, an empty string (""), or a string with only blank characters.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="efca2-154">異なり、**接続**、他の .NET Framework データ プロバイダー (SQL Server、OLE DB および ODBC) 内のオブジェクト<xref:System.Data.OracleClient.OracleConnection>はサポートしていません、<xref:System.Data.OracleClient.OracleConnection.ConnectionTimeout%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="efca2-154">Unlike the **Connection** object in the other .NET Framework data providers (SQL Server, OLE DB, and ODBC), <xref:System.Data.OracleClient.OracleConnection> does not support a <xref:System.Data.OracleClient.OracleConnection.ConnectionTimeout%2A> property.</span></span> <span data-ttu-id="efca2-155">プロパティまたは接続文字列で接続タイムアウトの設定も何も起こりません、および返される値は常に 0 です。</span><span class="sxs-lookup"><span data-stu-id="efca2-155">Setting a connection time-out either as a property or in the connection string has no effect, and the value returned is always zero.</span></span> <span data-ttu-id="efca2-156"><xref:System.Data.OracleClient.OracleConnection> サポートされていません、<xref:System.Data.OracleClient.OracleConnection.Database%2A>プロパティまたは<xref:System.Data.OracleClient.OracleConnection.ChangeDatabase%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="efca2-156"><xref:System.Data.OracleClient.OracleConnection> also does not support a <xref:System.Data.OracleClient.OracleConnection.Database%2A> property or a <xref:System.Data.OracleClient.OracleConnection.ChangeDatabase%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="efca2-157">データベース名が正しくありません。</span><span class="sxs-lookup"><span data-stu-id="efca2-157">The database name is not valid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="efca2-158">接続が開かれていません。</span><span class="sxs-lookup"><span data-stu-id="efca2-158">The connection is not open.</span></span></exception>
        <exception cref="T:System.Data.OracleClient.OracleException"><span data-ttu-id="efca2-159">データベースを変更できません。</span><span class="sxs-lookup"><span data-stu-id="efca2-159">Cannot change the database.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ClearAllPools">
      <MemberSignature Language="C#" Value="public static void ClearAllPools ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClearAllPools() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.ClearAllPools" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ClearAllPools ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ClearAllPools();" />
      <MemberSignature Language="F#" Value="static member ClearAllPools : unit -&gt; unit" Usage="System.Data.OracleClient.OracleConnection.ClearAllPools " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="efca2-160">接続プールを空にします。</span><span class="sxs-lookup"><span data-stu-id="efca2-160">Empties the connection pool.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efca2-161"><xref:System.Data.OracleClient.OracleConnection.ClearAllPools%2A> 接続プールをリセットします (または空に)。</span><span class="sxs-lookup"><span data-stu-id="efca2-161"><xref:System.Data.OracleClient.OracleConnection.ClearAllPools%2A> resets (or empties) the connection pool.</span></span> <span data-ttu-id="efca2-162">接続が呼び出し時に使用されている場合に、これらが適切にマークとときに破棄<xref:System.Data.OracleClient.OracleConnection.Close%2A>がそれらで呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="efca2-162">If connections are in use at the time of the call, they are marked appropriately and are discarded when <xref:System.Data.OracleClient.OracleConnection.Close%2A> is called on them.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearPool">
      <MemberSignature Language="C#" Value="public static void ClearPool (System.Data.OracleClient.OracleConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClearPool(class System.Data.OracleClient.OracleConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.ClearPool(System.Data.OracleClient.OracleConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ClearPool (connection As OracleConnection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ClearPool(System::Data::OracleClient::OracleConnection ^ connection);" />
      <MemberSignature Language="F#" Value="static member ClearPool : System.Data.OracleClient.OracleConnection -&gt; unit" Usage="System.Data.OracleClient.OracleConnection.ClearPool connection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="System.Data.OracleClient.OracleConnection" />
      </Parameters>
      <Docs>
        <param name="connection"><span data-ttu-id="efca2-163">プールから削除される <see cref="T:System.Data.OracleClient.OracleConnection" />。</span><span class="sxs-lookup"><span data-stu-id="efca2-163">The <see cref="T:System.Data.OracleClient.OracleConnection" /> to be cleared from the pool.</span></span></param>
        <summary><span data-ttu-id="efca2-164">指定した接続に関連付けられている接続プールを空にします。</span><span class="sxs-lookup"><span data-stu-id="efca2-164">Empties the connection pool associated with the specified connection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efca2-165"><xref:System.Data.OracleClient.OracleConnection.ClearPool%2A> メソッドに関連付けられている接続プールをクリアします`connection`します。</span><span class="sxs-lookup"><span data-stu-id="efca2-165"><xref:System.Data.OracleClient.OracleConnection.ClearPool%2A> method clears the connection pool that is associated with `connection`.</span></span> <span data-ttu-id="efca2-166">追加の接続に関連付けられている場合`connection`は呼び出し時に使用して、これらが適切にマークと破棄されたときに<xref:System.Data.OracleClient.OracleConnection.Close%2A>がそれらで呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="efca2-166">If additional connections associated with `connection` are in use at the time of the call, they are marked appropriately and are discarded when <xref:System.Data.OracleClient.OracleConnection.Close%2A> is called on them.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="oracleConnection.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="efca2-167">データベースへの接続を閉じます。</span><span class="sxs-lookup"><span data-stu-id="efca2-167">Closes the connection to the database.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efca2-168"><xref:System.Data.OracleClient.OracleConnection.Close%2A>メソッドが保留中のトランザクションをロールバックします。</span><span class="sxs-lookup"><span data-stu-id="efca2-168">The <xref:System.Data.OracleClient.OracleConnection.Close%2A> method rolls back any pending transactions.</span></span> <span data-ttu-id="efca2-169">接続プールへの接続を解放し、または接続プールが無効になっている場合、接続を閉じます。</span><span class="sxs-lookup"><span data-stu-id="efca2-169">It then releases the connection to the connection pool, or closes the connection if connection pooling is disabled.</span></span>  
  
 <span data-ttu-id="efca2-170">アプリケーションが呼び出すことができます<xref:System.Data.OracleClient.OracleConnection.Close%2A>例外を生成せずに 2 回以上。</span><span class="sxs-lookup"><span data-stu-id="efca2-170">An application can call <xref:System.Data.OracleClient.OracleConnection.Close%2A> more than once without generating an exception.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="efca2-171">.NET Framework Data Provider for Oracle を使用する場合は、接続プロバイダーは、これを自動的に管理するためのプールを有効にする必要はありません。</span><span class="sxs-lookup"><span data-stu-id="efca2-171">When you use the .NET Framework Data Provider for Oracle, you do not need to enable connection pooling because the provider manages this automatically.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="efca2-172">呼び出さないでください<xref:System.Data.OracleClient.OracleConnection.Close%2A>上、 <xref:System.Data.OracleClient.OracleConnection>、 <xref:System.Data.OracleClient.OracleDataReader>、またはその他のマネージ オブジェクトで、`Finalize`クラスのメソッド。</span><span class="sxs-lookup"><span data-stu-id="efca2-172">Do not call <xref:System.Data.OracleClient.OracleConnection.Close%2A> on a <xref:System.Data.OracleClient.OracleConnection>, a <xref:System.Data.OracleClient.OracleDataReader>, or any other managed object in the `Finalize` method of your class.</span></span> <span data-ttu-id="efca2-173">ファイナライザーで、クラスが直接所有しているアンマネージ リソースだけを解放する必要があります。</span><span class="sxs-lookup"><span data-stu-id="efca2-173">In a finalizer, you should only release unmanaged resources that your class owns directly.</span></span> <span data-ttu-id="efca2-174">クラスがアンマネージ リソースを所有していない場合は、クラス定義に `Finalize` メソッドを含めないでください。</span><span class="sxs-lookup"><span data-stu-id="efca2-174">If your class does not own any unmanaged resources, do not include a `Finalize` method in your class definition.</span></span> <span data-ttu-id="efca2-175">詳細については、次を参照してください。[ガベージ コレクション](~/docs/standard/garbage-collection/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="efca2-175">For more information, see [Garbage Collection](~/docs/standard/garbage-collection/index.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionString">
      <MemberSignature Language="C#" Value="public override string ConnectionString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectionString" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleConnection.ConnectionString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ConnectionString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ConnectionString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConnectionString : string with get, set" Usage="System.Data.OracleClient.OracleConnection.ConnectionString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Oracle.Design.OracleConnectionStringEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Oracle.Design.OracleConnectionStringEditor, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Oracle.Design.OracleConnectionStringEditor, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="efca2-176">Oracle データベースを開くために使用する文字列を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="efca2-176">Gets or sets the string used to open an Oracle database.</span></span></summary>
        <value><span data-ttu-id="efca2-177">サーバー名など、初期接続を確立するために必要な設定を含んだ Oracle 接続文字列。</span><span class="sxs-lookup"><span data-stu-id="efca2-177">The Oracle connection string that includes settings, such as the server name, needed to establish the initial connection.</span></span> <span data-ttu-id="efca2-178">既定値は、空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="efca2-178">The default value is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efca2-179"><xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A>接続が閉じられたときにのみ設定できます。</span><span class="sxs-lookup"><span data-stu-id="efca2-179">The <xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A> can be set only when the connection is closed.</span></span>  
  
 <span data-ttu-id="efca2-180">使用することができます、<xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A>プロパティをデータベースに接続します。</span><span class="sxs-lookup"><span data-stu-id="efca2-180">You can use the <xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A> property to connect to a database.</span></span> <span data-ttu-id="efca2-181">次の例では、一般的な接続文字列を示します。</span><span class="sxs-lookup"><span data-stu-id="efca2-181">The following example illustrates a typical connection string.</span></span>  
  
```  
"Data Source=Oracle8i;Integrated Security=yes"  
```  
  
 <span data-ttu-id="efca2-182">対応する読み取り専用プロパティを持つ文字列で指定された設定の多く (たとえば、`Data Source=MyServer`に対応する、<xref:System.Data.OracleClient.OracleConnection.DataSource%2A>プロパティ)。</span><span class="sxs-lookup"><span data-stu-id="efca2-182">Many of the settings specified in the string have corresponding read-only properties (for example, `Data Source=MyServer`, which corresponds to the <xref:System.Data.OracleClient.OracleConnection.DataSource%2A> property).</span></span> <span data-ttu-id="efca2-183">接続文字列を設定すると、これらすべてのプロパティがいない限り、更新エラーが検出された場合、プロパティのいずれも更新されます。</span><span class="sxs-lookup"><span data-stu-id="efca2-183">When the connection string is set, all of these properties are updated, unless an error is detected, in which case none of the properties are updated.</span></span> <span data-ttu-id="efca2-184"><xref:System.Data.OracleClient.OracleConnection> プロパティは、既定の設定またはで指定されたこれらの設定のみを返す、<xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A>します。</span><span class="sxs-lookup"><span data-stu-id="efca2-184"><xref:System.Data.OracleClient.OracleConnection> properties return only default settings or those settings specified in the <xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A>.</span></span>  
  
 <span data-ttu-id="efca2-185">リセット、<xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A>閉じた接続に対して、すべての接続文字列の値 (と関連するプロパティ)、パスワードを含むをリセットします。</span><span class="sxs-lookup"><span data-stu-id="efca2-185">Resetting the <xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A> on a closed connection resets all connection string values (and related properties), including the password.</span></span>  
  
 <span data-ttu-id="efca2-186">接続文字列が設定されている後すぐに解析されます。</span><span class="sxs-lookup"><span data-stu-id="efca2-186">The connection string is parsed immediately after being set.</span></span> <span data-ttu-id="efca2-187">構文、実行時例外、エラーなどがわかった解析場合<xref:System.ArgumentException>が生成されます。</span><span class="sxs-lookup"><span data-stu-id="efca2-187">If parsing reveals errors in syntax, a run-time exception, such as <xref:System.ArgumentException>, is generated.</span></span> <span data-ttu-id="efca2-188">試行、接続を開く場合にのみ、その他のエラーを確認できます。</span><span class="sxs-lookup"><span data-stu-id="efca2-188">Other errors can be found only when an attempt is made to open the connection.</span></span>  
  
 <span data-ttu-id="efca2-189">接続文字列の基本形式は、一連のキーワード/値ペアのセミコロンで区切られたです。</span><span class="sxs-lookup"><span data-stu-id="efca2-189">The basic format of a connection string is a series of keyword/value pairs separated by semicolons.</span></span> <span data-ttu-id="efca2-190">それぞれのキーワードと値の関連付けには、等号 (=) が使用されます。</span><span class="sxs-lookup"><span data-stu-id="efca2-190">The equal sign (=) connects each keyword and its value.</span></span> <span data-ttu-id="efca2-191">セミコロン、単一引用符または二重引用符文字が含まれている値を含めるには、値を二重引用符で囲む必要があります。</span><span class="sxs-lookup"><span data-stu-id="efca2-191">To include values that contain a semicolon, single-quote character, or double-quote character, the value must be enclosed in double quotes.</span></span> <span data-ttu-id="efca2-192">セミコロンと二重引用符文字の両方が、値が含まれる場合、値は単一引用符で囲むことができます。</span><span class="sxs-lookup"><span data-stu-id="efca2-192">If the value contains both a semicolon and a double-quote character, the value can be enclosed in single quotes.</span></span> <span data-ttu-id="efca2-193">単一引用符も値が二重引用符文字で始まる場合に役立ちます。</span><span class="sxs-lookup"><span data-stu-id="efca2-193">The single quote is also useful if the value begins with a double-quote character.</span></span> <span data-ttu-id="efca2-194">逆に、値が単一引用符で開始する場合は、二重引用符を使用できます。</span><span class="sxs-lookup"><span data-stu-id="efca2-194">Conversely, the double quote can be used if the value begins with a single quote.</span></span> <span data-ttu-id="efca2-195">値に単一引用符と二重引用符の両方の文字が含まれている場合、値を囲むために使用する引用符文字は値の中で発生するたび倍する必要があります。</span><span class="sxs-lookup"><span data-stu-id="efca2-195">If the value contains both single-quote and double-quote characters, the quote character used to enclose the value must be doubled each time it occurs within the value.</span></span>  
  
 <span data-ttu-id="efca2-196">直前または文字列値の末尾のスペースを含めるには、一重引用符または二重引用符のいずれかの値を囲む必要があります。</span><span class="sxs-lookup"><span data-stu-id="efca2-196">To include preceding or trailing spaces in the string value, the value must be enclosed in either single quotes or double quotes.</span></span> <span data-ttu-id="efca2-197">引用符で囲まれている場合でも、整数、ブール値、列挙値の先頭または末尾の空白は無視されます。</span><span class="sxs-lookup"><span data-stu-id="efca2-197">Any leading or trailing spaces around integer, Boolean, or enumerated values are ignored, even if enclosed in quotes.</span></span> <span data-ttu-id="efca2-198">ただし、文字列リテラル キーワードまたは値内にスペースが保持されます。</span><span class="sxs-lookup"><span data-stu-id="efca2-198">However, spaces within a string literal keyword or value are preserved.</span></span> <span data-ttu-id="efca2-199">一重または二重引用符は、引用符文字をなど、値の最初または最後の文字がない限り、区切り記号を使用せず、接続文字列内で使用可能性があります`Data Source= my'Server`または`Data Source= my"Server`します。</span><span class="sxs-lookup"><span data-stu-id="efca2-199">Single or double quotes may be used within a connection string without using delimiters unless a quote character is the first or last character in the value, for example, `Data Source= my'Server` or `Data Source= my"Server`.</span></span>  
  
 <span data-ttu-id="efca2-200">キーワードまたは値を等号 (=) を含めるもう 1 つの等号 (=) を前する必要があります。</span><span class="sxs-lookup"><span data-stu-id="efca2-200">To include an equal sign (=) in a keyword or value, it must be preceded by another equal sign.</span></span> <span data-ttu-id="efca2-201">たとえば、仮想的な接続文字列で</span><span class="sxs-lookup"><span data-stu-id="efca2-201">For example, in the hypothetical connection string</span></span>  
  
```  
"key==word=value"  
```  
  
 <span data-ttu-id="efca2-202">キーワードは"キー = word"、値は"value"です。</span><span class="sxs-lookup"><span data-stu-id="efca2-202">the keyword is "key=word" and the value is "value".</span></span>  
  
 <span data-ttu-id="efca2-203">接続文字列のキーワード/値ペアの特定のキーワードが複数回発生した場合、最後に見つかった値のセットで使用されます。</span><span class="sxs-lookup"><span data-stu-id="efca2-203">If a specific keyword in a keyword/value pair occurs more than once in a connection string, the last occurrence is used in the value set.</span></span>  
  
 <span data-ttu-id="efca2-204">キーワードは、大文字と小文字を区別しません。</span><span class="sxs-lookup"><span data-stu-id="efca2-204">Keywords are case insensitive.</span></span>  
  
 <span data-ttu-id="efca2-205">次の表には、内の値の有効な名前が一覧表示、<xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A>します。</span><span class="sxs-lookup"><span data-stu-id="efca2-205">The following table lists the valid names for values within the <xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A>.</span></span>  
  
|<span data-ttu-id="efca2-206">name</span><span class="sxs-lookup"><span data-stu-id="efca2-206">Name</span></span>|<span data-ttu-id="efca2-207">既定値</span><span class="sxs-lookup"><span data-stu-id="efca2-207">Default</span></span>|<span data-ttu-id="efca2-208">説明</span><span class="sxs-lookup"><span data-stu-id="efca2-208">Description</span></span>|  
|----------|-------------|-----------------|  
|<span data-ttu-id="efca2-209">データ ソース</span><span class="sxs-lookup"><span data-stu-id="efca2-209">Data Source</span></span><br /><br /> <span data-ttu-id="efca2-210">- または -</span><span class="sxs-lookup"><span data-stu-id="efca2-210">-or-</span></span><br /><br /> <span data-ttu-id="efca2-211">サーバー</span><span class="sxs-lookup"><span data-stu-id="efca2-211">Server</span></span>||<span data-ttu-id="efca2-212">Oracle の接続先のインスタンスの名前またはネットワーク アドレス。</span><span class="sxs-lookup"><span data-stu-id="efca2-212">The name or network address of the instance of Oracle to which to connect.</span></span>|  
|<span data-ttu-id="efca2-213">Integrated Security</span><span class="sxs-lookup"><span data-stu-id="efca2-213">Integrated Security</span></span>|<span data-ttu-id="efca2-214">'false'</span><span class="sxs-lookup"><span data-stu-id="efca2-214">'false'</span></span>|<span data-ttu-id="efca2-215">接続がセキュリティで保護された接続であるかどうかをかどうか。</span><span class="sxs-lookup"><span data-stu-id="efca2-215">Whether the connection is to be a secure connection or not.</span></span><br /><br /> <span data-ttu-id="efca2-216">認識できる値は`true`(強く推奨)、 `false`、 `yes`、および`no`します。</span><span class="sxs-lookup"><span data-stu-id="efca2-216">Recognized values are `true` (strongly recommended), `false`, `yes`, and `no`.</span></span>|  
|<span data-ttu-id="efca2-217">パスワード</span><span class="sxs-lookup"><span data-stu-id="efca2-217">Password</span></span>||<span data-ttu-id="efca2-218">ログオン Oracle アカウントのパスワード。</span><span class="sxs-lookup"><span data-stu-id="efca2-218">The password for the Oracle account logging on.</span></span> <span data-ttu-id="efca2-219">高レベルのセキュリティを維持するために強くお勧め、統合セキュリティ キーワードを使用することです。</span><span class="sxs-lookup"><span data-stu-id="efca2-219">To maintain a high level of security, we strongly recommend that you use the Integrated Security keyword instead.</span></span>|  
|<span data-ttu-id="efca2-220">Persist Security Info</span><span class="sxs-lookup"><span data-stu-id="efca2-220">Persist Security Info</span></span>|<span data-ttu-id="efca2-221">'false'</span><span class="sxs-lookup"><span data-stu-id="efca2-221">'false'</span></span>|<span data-ttu-id="efca2-222">設定すると`false`または`no`(強く推奨)、接続が開いているか、開いているになった場合、接続文字列の一部として、パスワードなどの機密情報が返されません<xref:System.Data.OracleClient.OracleConnection.State%2A>します。</span><span class="sxs-lookup"><span data-stu-id="efca2-222">When set to `false` or `no` (strongly recommended), security-sensitive information such as the password is not returned as part of the connection if the connection is open or has ever been in an open <xref:System.Data.OracleClient.OracleConnection.State%2A>.</span></span> <span data-ttu-id="efca2-223">接続文字列をリセットするパスワードを含むすべての接続文字列の値をリセットします。</span><span class="sxs-lookup"><span data-stu-id="efca2-223">Resetting the connection string resets all connection string values, including the password.</span></span><br /><br /> <span data-ttu-id="efca2-224">認識される値は `true`、`false`、`yes` および `no` です。</span><span class="sxs-lookup"><span data-stu-id="efca2-224">Recognized values are `true`, `false`, `yes`, and `no`.</span></span>|  
|<span data-ttu-id="efca2-225">Unicode</span><span class="sxs-lookup"><span data-stu-id="efca2-225">Unicode</span></span>|<span data-ttu-id="efca2-226">'false'</span><span class="sxs-lookup"><span data-stu-id="efca2-226">'false'</span></span>|<span data-ttu-id="efca2-227">.NET Framework Data Provider for Oracle が UTF16 モードの API 呼び出しを使用するかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="efca2-227">Specifies whether the .NET Framework Data Provider for Oracle uses UTF16 mode API calls.</span></span> <span data-ttu-id="efca2-228">このキーワードは Oracle9i クライアント ソフトウェアを使用する場合を除き無視されます。</span><span class="sxs-lookup"><span data-stu-id="efca2-228">This keyword is ignored except when using Oracle9i client software.</span></span>|  
|<span data-ttu-id="efca2-229">User ID</span><span class="sxs-lookup"><span data-stu-id="efca2-229">User ID</span></span>||<span data-ttu-id="efca2-230">Oracle ログイン アカウントです。</span><span class="sxs-lookup"><span data-stu-id="efca2-230">The Oracle login account.</span></span> <span data-ttu-id="efca2-231">高レベルのセキュリティを維持するために強くお勧め、統合セキュリティ キーワードを使用することです。</span><span class="sxs-lookup"><span data-stu-id="efca2-231">To maintain a high level of security, we strongly recommend that you use the Integrated Security keyword instead.</span></span>|  
  
 <span data-ttu-id="efca2-232">次の表には、接続プール内の値の有効な名前が一覧表示、<xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A>します。</span><span class="sxs-lookup"><span data-stu-id="efca2-232">The following table lists the valid names for connection pooling values within the <xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A>.</span></span>  
  
|<span data-ttu-id="efca2-233">name</span><span class="sxs-lookup"><span data-stu-id="efca2-233">Name</span></span>|<span data-ttu-id="efca2-234">既定値</span><span class="sxs-lookup"><span data-stu-id="efca2-234">Default</span></span>|<span data-ttu-id="efca2-235">説明</span><span class="sxs-lookup"><span data-stu-id="efca2-235">Description</span></span>|  
|----------|-------------|-----------------|  
|<span data-ttu-id="efca2-236">接続の有効期間</span><span class="sxs-lookup"><span data-stu-id="efca2-236">Connection Lifetime</span></span>|<span data-ttu-id="efca2-237">0</span><span class="sxs-lookup"><span data-stu-id="efca2-237">0</span></span>|<span data-ttu-id="efca2-238">接続がプールに返された時点で、その接続の作成時刻と現在の時刻を比較し、その時間の長さ (秒) が `Connection Lifetime` で指定した値を超えている場合は、その接続が破棄されます。</span><span class="sxs-lookup"><span data-stu-id="efca2-238">When a connection is returned to the pool, its creation time is compared with the current time, and the connection is destroyed if that time span (in seconds) exceeds the value specified by `Connection Lifetime`.</span></span> <span data-ttu-id="efca2-239">これは、クラスター構成を採用している状況で、実行中のサーバーと、オンラインになったばかりのサーバーの間での、負荷を強制的に分散するのに便利です。</span><span class="sxs-lookup"><span data-stu-id="efca2-239">This is useful in clustered configurations to force load balancing between a running server and a server just brought online.</span></span><br /><br /> <span data-ttu-id="efca2-240">値 0 の場合、プールされた接続の最大接続タイムアウトにします。</span><span class="sxs-lookup"><span data-stu-id="efca2-240">A value of zero causes pooled connections to have the maximum connection time-out.</span></span>|  
|<span data-ttu-id="efca2-241">Enlist</span><span class="sxs-lookup"><span data-stu-id="efca2-241">Enlist</span></span>|<span data-ttu-id="efca2-242">'true'</span><span class="sxs-lookup"><span data-stu-id="efca2-242">'true'</span></span>|<span data-ttu-id="efca2-243">ときに`true`または`yes`、プーラーが、作成スレッドの現在のトランザクション コンテキストで接続を自動的に登録します。</span><span class="sxs-lookup"><span data-stu-id="efca2-243">When `true` or `yes`, the pooler automatically enlists the connection in the creation thread's current transaction context.</span></span><br /><br /> <span data-ttu-id="efca2-244">認識される値は `true`、`false`、`yes` および `no` です。</span><span class="sxs-lookup"><span data-stu-id="efca2-244">Recognized values are `true`, `false`, `yes`, and `no`.</span></span>|  
|<span data-ttu-id="efca2-245">Max Pool Size</span><span class="sxs-lookup"><span data-stu-id="efca2-245">Max Pool Size</span></span>|<span data-ttu-id="efca2-246">100</span><span class="sxs-lookup"><span data-stu-id="efca2-246">100</span></span>|<span data-ttu-id="efca2-247">プールに格納できる最大接続数。</span><span class="sxs-lookup"><span data-stu-id="efca2-247">The maximum number of connections allowed in the pool.</span></span> <span data-ttu-id="efca2-248">設定、`Max Pool Size`の値、<xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A>パフォーマンスに影響を与えることができます。</span><span class="sxs-lookup"><span data-stu-id="efca2-248">Setting the `Max Pool Size` value of the <xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A> can affect performance.</span></span> <span data-ttu-id="efca2-249">作成して積極的に 100 個の接続では複数使用する必要がありますを増やす場合`Max Pool Size`アプリケーションの安定した状態の接続の使用量の概算値にします。</span><span class="sxs-lookup"><span data-stu-id="efca2-249">If you plan to create and actively use more than 100 connections, you should increase `Max Pool Size` to a value that approximates the steady-state connection usage for the application.</span></span>|  
|<span data-ttu-id="efca2-250">Min Pool Size</span><span class="sxs-lookup"><span data-stu-id="efca2-250">Min Pool Size</span></span>|<span data-ttu-id="efca2-251">0</span><span class="sxs-lookup"><span data-stu-id="efca2-251">0</span></span>|<span data-ttu-id="efca2-252">プールで許可される接続の最小数。</span><span class="sxs-lookup"><span data-stu-id="efca2-252">The minimum number of connections allowed in the pool.</span></span>|  
|<span data-ttu-id="efca2-253">Pooling</span><span class="sxs-lookup"><span data-stu-id="efca2-253">Pooling</span></span>|<span data-ttu-id="efca2-254">'true'</span><span class="sxs-lookup"><span data-stu-id="efca2-254">'true'</span></span>|<span data-ttu-id="efca2-255">ときに`true`または`yes`、<xref:System.Data.OracleClient.OracleConnection>オブジェクトが適切なプールから描画または必要に応じてが作成され、適切なプールに追加します。</span><span class="sxs-lookup"><span data-stu-id="efca2-255">When `true` or `yes`, the <xref:System.Data.OracleClient.OracleConnection> object is drawn from the appropriate pool, or if necessary, is created and added to the appropriate pool.</span></span><br /><br /> <span data-ttu-id="efca2-256">認識される値は `true`、`false`、`yes` および `no` です。</span><span class="sxs-lookup"><span data-stu-id="efca2-256">Recognized values are `true`, `false`, `yes`, and `no`.</span></span>|  
  
 <span data-ttu-id="efca2-257">キーワードまたは接続プールをブール値を必要とする値を設定する場合は、'true' ではなくと 'no' に 'false' ではなく 'yes' を使用できます。</span><span class="sxs-lookup"><span data-stu-id="efca2-257">When setting keyword or connection pooling values that require a Boolean value, you can use 'yes' instead of 'true', and 'no' instead of 'false'.</span></span> <span data-ttu-id="efca2-258">整数値は文字列として表されます。</span><span class="sxs-lookup"><span data-stu-id="efca2-258">Integer values are represented as strings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="efca2-259">次の例では、作成、<xref:System.Data.OracleClient.OracleConnection>および接続文字列の一部のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="efca2-259">The following example creates an <xref:System.Data.OracleClient.OracleConnection> and sets some of its properties in the connection string.</span></span>  
  
 [!code-csharp[Classic WebData OracleConnection.DataSource#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleConnection.DataSource/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleConnection.DataSource#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleConnection.DataSource/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionTimeout">
      <MemberSignature Language="C#" Value="public override int ConnectionTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ConnectionTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleConnection.ConnectionTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ConnectionTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ConnectionTimeout { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ConnectionTimeout : int" Usage="System.Data.OracleClient.OracleConnection.ConnectionTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="efca2-260">試行を中断してエラーを生成する前に、接続の確立時に待機する時間を取得します。</span><span class="sxs-lookup"><span data-stu-id="efca2-260">Gets the time to wait to establish a connection before terminating the attempt and generating an error.</span></span></summary>
        <value><span data-ttu-id="efca2-261">接続が開くのを待機する時間 (秒単位)。</span><span class="sxs-lookup"><span data-stu-id="efca2-261">The time (in seconds) to wait for a connection to open.</span></span> <span data-ttu-id="efca2-262">既定値は 15 秒です。</span><span class="sxs-lookup"><span data-stu-id="efca2-262">The default value is 15 seconds.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efca2-263">使用してタイムアウトに接続が待機する時間の量を設定することができます、`Connect Timeout`または`Connection Timeout`接続文字列のキーワード。</span><span class="sxs-lookup"><span data-stu-id="efca2-263">You can set the amount of time a connection waits to time out by using the `Connect Timeout` or `Connection Timeout` keywords in the connection string.</span></span> <span data-ttu-id="efca2-264">値が 0 の制限がないことを示します。 およびに避ける必要があります、<xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A>接続の試みが無期限に待機するためです。</span><span class="sxs-lookup"><span data-stu-id="efca2-264">A value of 0 indicates no limit, and should be avoided in a <xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A> because an attempt to connect waits indefinitely.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="efca2-265">異なり、 `Connection` 、他の .NET Framework データ プロバイダー (SQL Server、OLE DB および ODBC) 内のオブジェクト<xref:System.Data.OracleClient.OracleConnection>はサポートしていません、<xref:System.Data.OracleClient.OracleConnection.ConnectionTimeout%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="efca2-265">Unlike the `Connection` object in the other .NET Framework data providers (SQL Server, OLE DB, and ODBC), <xref:System.Data.OracleClient.OracleConnection> does not support a <xref:System.Data.OracleClient.OracleConnection.ConnectionTimeout%2A> property.</span></span> <span data-ttu-id="efca2-266">接続タイムアウト プロパティを使用または接続文字列のいずれかの設定も何も起こりません、および返される値は常に 0 です。</span><span class="sxs-lookup"><span data-stu-id="efca2-266">Setting a connection time-out either with a property or in the connection string has no effect, and the value returned is always zero.</span></span> <span data-ttu-id="efca2-267"><xref:System.Data.OracleClient.OracleConnection> サポートされていません、<xref:System.Data.OracleClient.OracleConnection.Database%2A>プロパティまたは<xref:System.Data.OracleClient.OracleConnection.ChangeDatabase%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="efca2-267"><xref:System.Data.OracleClient.OracleConnection> also does not support a <xref:System.Data.OracleClient.OracleConnection.Database%2A> property or a <xref:System.Data.OracleClient.OracleConnection.ChangeDatabase%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="efca2-268">指定された値が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="efca2-268">The value specified is less than 0.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateCommand">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleCommand CreateCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleCommand CreateCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.CreateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateCommand () As OracleCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleCommand ^ CreateCommand();" />
      <MemberSignature Language="F#" Value="override this.CreateCommand : unit -&gt; System.Data.OracleClient.OracleCommand" Usage="oracleConnection.CreateCommand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="efca2-269"><see cref="T:System.Data.OracleClient.OracleCommand" /> に関連付けられている <see cref="T:System.Data.OracleClient.OracleConnection" /> オブジェクトを作成し、返します。</span><span class="sxs-lookup"><span data-stu-id="efca2-269">Creates and returns an <see cref="T:System.Data.OracleClient.OracleCommand" /> object associated with the <see cref="T:System.Data.OracleClient.OracleConnection" />.</span></span></summary>
        <returns><span data-ttu-id="efca2-270"><see cref="T:System.Data.OracleClient.OracleCommand" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="efca2-270">An <see cref="T:System.Data.OracleClient.OracleCommand" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDbCommand">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbCommand CreateDbCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbCommand CreateDbCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.CreateDbCommand" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateDbCommand () As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbCommand ^ CreateDbCommand();" />
      <MemberSignature Language="F#" Value="override this.CreateDbCommand : unit -&gt; System.Data.Common.DbCommand" Usage="oracleConnection.CreateDbCommand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Database">
      <MemberSignature Language="C#" Value="public override string Database { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Database" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleConnection.Database" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Database As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Database { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Database : string" Usage="System.Data.OracleClient.OracleConnection.Database" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="efca2-271">現在のデータベース、または接続が開いてから使用するデータベースの名前を取得します。</span><span class="sxs-lookup"><span data-stu-id="efca2-271">Gets the name of the current database or the database to be used after a connection is opened.</span></span></summary>
        <value><span data-ttu-id="efca2-272">現在のデータベース、または接続が開いてから使用するデータベースの名前。</span><span class="sxs-lookup"><span data-stu-id="efca2-272">The name of the current database or the name of the database to be used after a connection is opened.</span></span> <span data-ttu-id="efca2-273">既定値は空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="efca2-273">The default value is an empty string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efca2-274"><xref:System.Data.OracleClient.OracleConnection.Database%2A>プロパティを動的に更新します。</span><span class="sxs-lookup"><span data-stu-id="efca2-274">The <xref:System.Data.OracleClient.OracleConnection.Database%2A> property updates dynamically.</span></span> <span data-ttu-id="efca2-275">SQL ステートメントを使用して、現在のデータベースを変更するかどうか、または<xref:System.Data.OracleClient.OracleConnection.ChangeDatabase%2A>メソッド、情報メッセージが送信され、プロパティが自動的に更新されます。</span><span class="sxs-lookup"><span data-stu-id="efca2-275">If you change the current database using a SQL statement or the <xref:System.Data.OracleClient.OracleConnection.ChangeDatabase%2A> method, an informational message is sent and the property is updated automatically.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="efca2-276">異なり、 `Connection` 、他の .NET Framework データ プロバイダー (SQL Server、OLE DB および ODBC) 内のオブジェクト<xref:System.Data.OracleClient.OracleConnection>はサポートしていません、<xref:System.Data.OracleClient.OracleConnection.ConnectionTimeout%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="efca2-276">Unlike the `Connection` object in the other .NET Framework data providers (SQL Server, OLE DB, and ODBC), <xref:System.Data.OracleClient.OracleConnection> does not support a <xref:System.Data.OracleClient.OracleConnection.ConnectionTimeout%2A> property.</span></span> <span data-ttu-id="efca2-277">接続タイムアウト プロパティを使用または接続文字列のいずれかの設定も何も起こりません、および返される値は常に 0 です。</span><span class="sxs-lookup"><span data-stu-id="efca2-277">Setting a connection time-out either with a property or in the connection string has no effect, and the value returned is always zero.</span></span> <span data-ttu-id="efca2-278"><xref:System.Data.OracleClient.OracleConnection> サポートされていません、<xref:System.Data.OracleClient.OracleConnection.Database%2A>プロパティまたは<xref:System.Data.OracleClient.OracleConnection.ChangeDatabase%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="efca2-278"><xref:System.Data.OracleClient.OracleConnection> also does not support a <xref:System.Data.OracleClient.OracleConnection.Database%2A> property or a <xref:System.Data.OracleClient.OracleConnection.ChangeDatabase%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.OracleClient.OracleConnection.DataSource" />
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public override string DataSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleConnection.DataSource" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property DataSource As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataSource { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataSource : string" Usage="System.Data.OracleClient.OracleConnection.DataSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="efca2-279">接続する Oracle サーバーの名前を取得します。</span><span class="sxs-lookup"><span data-stu-id="efca2-279">Gets the name of the Oracle server to which to connect.</span></span></summary>
        <value><span data-ttu-id="efca2-280">接続する Oracle サーバーの名前。</span><span class="sxs-lookup"><span data-stu-id="efca2-280">The name of the Oracle server to which to connect.</span></span> <span data-ttu-id="efca2-281">既定値は、空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="efca2-281">The default value is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="efca2-282">次の例では、作成、<xref:System.Data.OracleClient.OracleConnection>し、一部の読み取り専用プロパティを表示します。</span><span class="sxs-lookup"><span data-stu-id="efca2-282">The following example creates an <xref:System.Data.OracleClient.OracleConnection> and displays some of its read-only properties.</span></span>  
  
 [!code-csharp[Classic WebData OracleConnection.DataSource#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleConnection.DataSource/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleConnection.DataSource#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleConnection.DataSource/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.OracleClient.OracleConnection.ConnectionString" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="oracleConnection.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnlistDistributedTransaction">
      <MemberSignature Language="C#" Value="public void EnlistDistributedTransaction (System.EnterpriseServices.ITransaction distributedTransaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnlistDistributedTransaction(class System.EnterpriseServices.ITransaction distributedTransaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnlistDistributedTransaction (distributedTransaction As ITransaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnlistDistributedTransaction(System::EnterpriseServices::ITransaction ^ distributedTransaction);" />
      <MemberSignature Language="F#" Value="member this.EnlistDistributedTransaction : System.EnterpriseServices.ITransaction -&gt; unit" Usage="oracleConnection.EnlistDistributedTransaction distributedTransaction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="distributedTransaction" Type="System.EnterpriseServices.ITransaction" />
      </Parameters>
      <Docs>
        <param name="distributedTransaction"><span data-ttu-id="efca2-283">登録先の既存の <see cref="T:System.EnterpriseServices.ITransaction" /> への参照。</span><span class="sxs-lookup"><span data-stu-id="efca2-283">A reference to an existing <see cref="T:System.EnterpriseServices.ITransaction" /> in which to enlist.</span></span></param>
        <summary><span data-ttu-id="efca2-284">分散トランザクションとして指定したトランザクションに参加します。</span><span class="sxs-lookup"><span data-stu-id="efca2-284">Enlists in the specified transaction as a distributed transaction.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efca2-285">新しい ADO.NET 2.0 では、サポートを使用するため、<xref:System.Data.Common.DbConnection.EnlistTransaction%2A>分散トランザクションに参加するメソッド。</span><span class="sxs-lookup"><span data-stu-id="efca2-285">New in ADO.NET 2.0 is support for using the <xref:System.Data.Common.DbConnection.EnlistTransaction%2A> method to enlist in a distributed transaction.</span></span> <span data-ttu-id="efca2-286">これにより、接続するため、<xref:System.Transactions.Transaction>インスタンス、 **EnlistTransaction**で利用できる機能を活用、<xref:System.Transactions>名前空間を管理するための分散トランザクション、する方が望ましいので**どちら**この目的のためです。</span><span class="sxs-lookup"><span data-stu-id="efca2-286">Because it enlists a connection in a <xref:System.Transactions.Transaction> instance, **EnlistTransaction** takes advantage of functionality available in the <xref:System.Transactions> namespace for managing distributed transactions, making it preferable to **EnlistDistributedTransaction** for this purpose.</span></span> <span data-ttu-id="efca2-287">詳細については、次を参照してください。[分散トランザクション](~/docs/framework/data/adonet/distributed-transactions.md)です。</span><span class="sxs-lookup"><span data-stu-id="efca2-287">For more information, see [Distributed Transactions](~/docs/framework/data/adonet/distributed-transactions.md).</span></span>  
  
 <span data-ttu-id="efca2-288">使用して既存の分散トランザクションに参加する続行することができます、</span><span class="sxs-lookup"><span data-stu-id="efca2-288">You can continue to enlist in an existing distributed transaction using the</span></span>  
  
 <span data-ttu-id="efca2-289"><xref:System.Data.OracleClient.OracleConnection.EnlistDistributedTransaction%2A> メソッドへの自動参加が無効になっている場合。</span><span class="sxs-lookup"><span data-stu-id="efca2-289"><xref:System.Data.OracleClient.OracleConnection.EnlistDistributedTransaction%2A> method if auto-enlistment is disabled.</span></span> <span data-ttu-id="efca2-290">つまり場合は、トランザクションがコミットまたはロールバックし、データ ソースにあるコードによって加えられた変更もコミットまたはロールバックにより、既存の分散トランザクションに参加します。</span><span class="sxs-lookup"><span data-stu-id="efca2-290">Enlisting in an existing distributed transaction ensures that, if the transaction is committed or rolled back, modifications made by the code at the data source are also committed or rolled back.</span></span>  
  
 <span data-ttu-id="efca2-291"><xref:System.Data.OracleClient.OracleConnection.EnlistDistributedTransaction%2A> 例外を返します、<xref:System.Data.OracleClient.OracleConnection>はトランザクションを使用して、既に開始<xref:System.Data.OracleClient.OracleConnection.BeginTransaction%2A>します。</span><span class="sxs-lookup"><span data-stu-id="efca2-291"><xref:System.Data.OracleClient.OracleConnection.EnlistDistributedTransaction%2A> returns an exception if the <xref:System.Data.OracleClient.OracleConnection> has already started a transaction using <xref:System.Data.OracleClient.OracleConnection.BeginTransaction%2A>.</span></span> <span data-ttu-id="efca2-292">ただし、トランザクションがデータ ソースで開始されたローカル トランザクション (BEGIN TRANSACTION ステートメントを使用して、明示的に実行することによってなど、<xref:System.Data.OracleClient.OracleCommand>オブジェクト)、<xref:System.Data.OracleClient.OracleConnection.EnlistDistributedTransaction%2A>ローカル トランザクションをロールバックし、既存の参加要求されたとして分散トランザクション。</span><span class="sxs-lookup"><span data-stu-id="efca2-292">However, if the transaction is a local transaction started at the data source (for example, by explicitly executing the BEGIN TRANSACTION statement using an <xref:System.Data.OracleClient.OracleCommand> object), <xref:System.Data.OracleClient.OracleConnection.EnlistDistributedTransaction%2A> rolls back the local transaction and enlists in the existing distributed transaction as requested.</span></span> <span data-ttu-id="efca2-293">ローカル トランザクションがロールバックはし、ないローカル トランザクションを管理する責任を負います開始するを使用して、通知が届きません<xref:System.Data.OracleClient.OracleConnection.BeginTransaction%2A>します。</span><span class="sxs-lookup"><span data-stu-id="efca2-293">You will not receive notice that the local transaction was rolled back, and are responsible for managing any local transactions not started using <xref:System.Data.OracleClient.OracleConnection.BeginTransaction%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnlistTransaction">
      <MemberSignature Language="C#" Value="public override void EnlistTransaction (System.Transactions.Transaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EnlistTransaction(class System.Transactions.Transaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.EnlistTransaction(System.Transactions.Transaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void EnlistTransaction(System::Transactions::Transaction ^ transaction);" />
      <MemberSignature Language="F#" Value="override this.EnlistTransaction : System.Transactions.Transaction -&gt; unit" Usage="oracleConnection.EnlistTransaction transaction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transaction" Type="System.Transactions.Transaction" />
      </Parameters>
      <Docs>
        <param name="transaction"><span data-ttu-id="efca2-294">登録先の既存の <see cref="T:System.Transactions.Transaction" /> への参照。</span><span class="sxs-lookup"><span data-stu-id="efca2-294">A reference to an existing <see cref="T:System.Transactions.Transaction" /> in which to enlist.</span></span></param>
        <summary><span data-ttu-id="efca2-295">分散トランザクションとして指定したトランザクションに参加します。</span><span class="sxs-lookup"><span data-stu-id="efca2-295">Enlists in the specified transaction as a distributed transaction.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efca2-296">新しい ADO.NET 2.0 では、サポートを使用するため、</span><span class="sxs-lookup"><span data-stu-id="efca2-296">New in ADO.NET 2.0 is support for using the</span></span>  
  
 <span data-ttu-id="efca2-297"><xref:System.Data.Common.DbConnection.EnlistTransaction%2A> 分散トランザクションに参加するメソッドです。</span><span class="sxs-lookup"><span data-stu-id="efca2-297"><xref:System.Data.Common.DbConnection.EnlistTransaction%2A> method to enlist in a distributed transaction.</span></span> <span data-ttu-id="efca2-298">これにより、接続するため、<xref:System.Transactions.Transaction>インスタンス、 **EnlistTransaction**で利用できる機能を活用、<xref:System.Transactions>名前空間を管理するための分散トランザクション、する方が望ましいので**どちら**、使用、 **System.EnterpriseServices.ITransaction**オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="efca2-298">Because it enlists a connection in a <xref:System.Transactions.Transaction> instance, **EnlistTransaction** takes advantage of functionality available in the <xref:System.Transactions> namespace for managing distributed transactions, making it preferable to **EnlistDistributedTransaction**, which uses a **System.EnterpriseServices.ITransaction** object.</span></span> <span data-ttu-id="efca2-299">異なる意味があります。 接続が明示的にトランザクションに参加していると、参加解除またはできません、最初のトランザクションが完了するまで、別のトランザクションに参加しています。</span><span class="sxs-lookup"><span data-stu-id="efca2-299">It also has slightly different semantics: once a connection is explicitly enlisted on a transaction, it cannot be unenlisted or enlisted in another transaction until the first transaction finishes.</span></span> <span data-ttu-id="efca2-300">分散トランザクションの詳細については、次を参照してください。[分散トランザクション](~/docs/framework/data/adonet/distributed-transactions.md)です。</span><span class="sxs-lookup"><span data-stu-id="efca2-300">For more information about distributed transactions, see [Distributed Transactions](~/docs/framework/data/adonet/distributed-transactions.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSchema">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="efca2-301">この <see cref="T:System.Data.OracleClient.OracleConnection" /> のデータ ソースのスキーマ情報を返します。</span><span class="sxs-lookup"><span data-stu-id="efca2-301">Returns schema information for the data source of this <see cref="T:System.Data.OracleClient.OracleConnection" />.</span></span></summary>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-database-schema-information.md"><span data-ttu-id="efca2-302">データベースからスキーマ情報の取得</span><span class="sxs-lookup"><span data-stu-id="efca2-302">Obtaining Schema Information from a Database</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchema ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchema() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.GetSchema" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchema () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchema();" />
      <MemberSignature Language="F#" Value="override this.GetSchema : unit -&gt; System.Data.DataTable" Usage="oracleConnection.GetSchema " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="efca2-303">この <see cref="T:System.Data.OracleClient.OracleConnection" /> のデータ ソースのスキーマ情報を返します。</span><span class="sxs-lookup"><span data-stu-id="efca2-303">Returns schema information for the data source of this <see cref="T:System.Data.OracleClient.OracleConnection" />.</span></span></summary>
        <returns><span data-ttu-id="efca2-304">スキーマ情報を格納する <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="efca2-304">A <see cref="T:System.Data.DataTable" /> that contains schema information.</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-database-schema-information.md"><span data-ttu-id="efca2-305">データベースからスキーマ情報の取得</span><span class="sxs-lookup"><span data-stu-id="efca2-305">Obtaining Schema Information from a Database</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchema (string collectionName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchema(string collectionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.GetSchema(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchema (collectionName As String) As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchema(System::String ^ collectionName);" />
      <MemberSignature Language="F#" Value="override this.GetSchema : string -&gt; System.Data.DataTable" Usage="oracleConnection.GetSchema collectionName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="collectionName"><span data-ttu-id="efca2-306">返すスキーマの名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="efca2-306">Specifies the name of the schema to return.</span></span></param>
        <summary><span data-ttu-id="efca2-307">スキーマ名として指定した文字列を使用して、この <see cref="T:System.Data.OracleClient.OracleConnection" /> のデータ ソースのスキーマ情報を返します。</span><span class="sxs-lookup"><span data-stu-id="efca2-307">Returns schema information for the data source of this <see cref="T:System.Data.OracleClient.OracleConnection" /> using the specified string for the schema name.</span></span></summary>
        <returns><span data-ttu-id="efca2-308">スキーマ情報を格納する <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="efca2-308">A <see cref="T:System.Data.DataTable" /> that contains schema information.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efca2-309">使用してクエリ<xref:System.Data.OracleClient.OracleConnection.GetSchema%2A>小文字が区別されます。</span><span class="sxs-lookup"><span data-stu-id="efca2-309">Queries using <xref:System.Data.OracleClient.OracleConnection.GetSchema%2A> are case sensitive.</span></span> <span data-ttu-id="efca2-310">ケースの Oracle の処理を行うのため、スキーマが作成されると、これにつながる予期しない結果。</span><span class="sxs-lookup"><span data-stu-id="efca2-310">Because of Oracle's treatment of cases when a schema is first created, this can lead to unexpected results.</span></span>  
  
 <span data-ttu-id="efca2-311">引用符は、スキーマが作成された場合`,`Oracle が大文字でオブジェクト名を格納します。</span><span class="sxs-lookup"><span data-stu-id="efca2-311">If the schema was created without quotes`,` Oracle stores the object name in upper case.</span></span> <span data-ttu-id="efca2-312">スキーマは、引用符で作成された、Oracle は、大文字と小文字の指定のオブジェクト名を格納します。</span><span class="sxs-lookup"><span data-stu-id="efca2-312">If the schema was created with quotes, Oracle stores the object name in the casing provided.</span></span>  
  
 <span data-ttu-id="efca2-313">たとえば、次の 2 つのステートメントのいずれかを使用して、MyTable という名前のテーブルを作成するとします。</span><span class="sxs-lookup"><span data-stu-id="efca2-313">For example, suppose that you create a table called MyTable, using one of the following two statements:</span></span>  
  
 `CREATE TABLE MyTable ...`  
  
 `CREATE TABLE "MyTable" ...`  
  
 <span data-ttu-id="efca2-314">使用してこのテーブルに関する情報を取得する、 **GetSchema**メソッドでは、最初のケース、しなければならないというで「mytable」という名前引数として渡します。</span><span class="sxs-lookup"><span data-stu-id="efca2-314">To retrieve information about this table via the **GetSchema** method in the first case, you would have to pass "MYTABLE" in as an argument.</span></span> <span data-ttu-id="efca2-315">2 番目のケースで「mytable」という名前引数として渡す必要があります。</span><span class="sxs-lookup"><span data-stu-id="efca2-315">In the second case, you would have to pass "MyTable" in as an argument.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="efca2-316"><paramref name="collectionName" /> は null として指定されます。</span><span class="sxs-lookup"><span data-stu-id="efca2-316"><paramref name="collectionName" /> is specified as null.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-database-schema-information.md"><span data-ttu-id="efca2-317">データベースからスキーマ情報の取得</span><span class="sxs-lookup"><span data-stu-id="efca2-317">Obtaining Schema Information from a Database</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchema (string collectionName, string[] restrictionValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchema(string collectionName, string[] restrictionValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.GetSchema(System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchema (collectionName As String, restrictionValues As String()) As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchema(System::String ^ collectionName, cli::array &lt;System::String ^&gt; ^ restrictionValues);" />
      <MemberSignature Language="F#" Value="override this.GetSchema : string * string[] -&gt; System.Data.DataTable" Usage="oracleConnection.GetSchema (collectionName, restrictionValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionName" Type="System.String" />
        <Parameter Name="restrictionValues" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="collectionName"><span data-ttu-id="efca2-318">返すスキーマの名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="efca2-318">Specifies the name of the schema to return.</span></span></param>
        <param name="restrictionValues"><span data-ttu-id="efca2-319">要求したスキーマの制限値のセット。</span><span class="sxs-lookup"><span data-stu-id="efca2-319">A set of restriction values for the requested schema.</span></span></param>
        <summary><span data-ttu-id="efca2-320">スキーマ名に指定した文字列と制限値に指定した文字列配列を使用して、この <see cref="T:System.Data.OracleClient.OracleConnection" /> のデータ ソースのスキーマ情報を返します。</span><span class="sxs-lookup"><span data-stu-id="efca2-320">Returns schema information for the data source of this <see cref="T:System.Data.OracleClient.OracleConnection" /> using the specified string for the schema name and the specified string array for the restriction values.</span></span></summary>
        <returns><span data-ttu-id="efca2-321">スキーマ情報を格納する <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="efca2-321">A <see cref="T:System.Data.DataTable" /> that contains schema information.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efca2-322">`restrictionValues`パラメーターは、特定のコレクションに対する制限のコレクションで指定されている値の n 個の深さを指定できます。</span><span class="sxs-lookup"><span data-stu-id="efca2-322">The `restrictionValues` parameter can supply n depth of values which are specified by the restrictions collection for a specific collection.</span></span> <span data-ttu-id="efca2-323">指定された制限の値を設定し、その他の制限の値を設定できません、ために、配置の値を指定するには制限の適切な値を null には、前述の制限を設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="efca2-323">In order to set values on a given restriction, and not set the values of other restrictions, you need to set the preceding restrictions to null and then put the appropriate value in for the restriction that you would like to specify a value for.</span></span>  
  
 <span data-ttu-id="efca2-324">この例では、"Tables"コレクションです。</span><span class="sxs-lookup"><span data-stu-id="efca2-324">An example of this is the "Tables" collection.</span></span> <span data-ttu-id="efca2-325">"Tables"コレクションに 3 つの制限がある場合: データベース、所有者、およびテーブル名。"Carl"の所有者に関連付けられているテーブルのみを取得するし、(少なくとも) 次の値で渡す必要がある場合:"Carl"は null です。</span><span class="sxs-lookup"><span data-stu-id="efca2-325">If the "Tables" collection has 3 restrictions: database, owner, and table name; and you want to get back only the tables associated with the owner "Carl", then you would need to pass in the following values (at a minimum): null, "Carl".</span></span> <span data-ttu-id="efca2-326">制限値が渡されたしない場合は、既定値がその制限に使用されます。</span><span class="sxs-lookup"><span data-stu-id="efca2-326">If a restriction value is not passed in, the default values are used for that restriction.</span></span> <span data-ttu-id="efca2-327">これは、これは、パラメーターの値に空の文字列を渡すこととは異なる null を渡すことと同じマッピングです。</span><span class="sxs-lookup"><span data-stu-id="efca2-327">This is the same mapping as passing in null, which is different than passing in an empty string for the parameter value.</span></span> <span data-ttu-id="efca2-328">その場合、空の文字列 ("") は、指定されたパラメーターの値であると見なされます。</span><span class="sxs-lookup"><span data-stu-id="efca2-328">In that case, the empty string ("") is considered to be the value for the specified parameter.</span></span>  
  
 <span data-ttu-id="efca2-329">使用してクエリ<xref:System.Data.OracleClient.OracleConnection.GetSchema%2A>小文字が区別されます。</span><span class="sxs-lookup"><span data-stu-id="efca2-329">Queries using <xref:System.Data.OracleClient.OracleConnection.GetSchema%2A> are case sensitive.</span></span> <span data-ttu-id="efca2-330">ケースの Oracle の処理を行うのため、スキーマが作成されると、これにつながる予期しない結果。</span><span class="sxs-lookup"><span data-stu-id="efca2-330">Because of Oracle's treatment of cases when a schema is first created, this can lead to unexpected results.</span></span>  
  
 <span data-ttu-id="efca2-331">引用符は、スキーマが作成された場合`,`Oracle が大文字でオブジェクト名を格納します。</span><span class="sxs-lookup"><span data-stu-id="efca2-331">If the schema was created without quotes`,` Oracle stores the object name in upper case.</span></span> <span data-ttu-id="efca2-332">スキーマは、引用符で作成された、Oracle は、大文字と小文字の指定のオブジェクト名を格納します。</span><span class="sxs-lookup"><span data-stu-id="efca2-332">If the schema was created with quotes, Oracle stores the object name in the casing provided.</span></span>  
  
 <span data-ttu-id="efca2-333">たとえば、次の 2 つのステートメントのいずれかを使用して、MyTable という名前のテーブルを作成するとします。</span><span class="sxs-lookup"><span data-stu-id="efca2-333">For example, suppose that you create a table called MyTable, using one of the following two statements:</span></span>  
  
 `CREATE TABLE MyTable ...`  
  
 `CREATE TABLE "MyTable" ...`  
  
 <span data-ttu-id="efca2-334">使用してこのテーブルに関する情報を取得する、 **GetSchema**メソッドでは、最初のケース、しなければならないというで「mytable」という名前引数として渡します。</span><span class="sxs-lookup"><span data-stu-id="efca2-334">To retrieve information about this table via the **GetSchema** method in the first case, you would have to pass "MYTABLE" in as an argument.</span></span> <span data-ttu-id="efca2-335">2 番目のケースで「mytable」という名前引数として渡す必要があります。</span><span class="sxs-lookup"><span data-stu-id="efca2-335">In the second case, you would have to pass "MyTable" in as an argument.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="efca2-336"><paramref name="collectionName" /> は null として指定されます。</span><span class="sxs-lookup"><span data-stu-id="efca2-336"><paramref name="collectionName" /> is specified as null.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-database-schema-information.md"><span data-ttu-id="efca2-337">データベースからスキーマ情報の取得</span><span class="sxs-lookup"><span data-stu-id="efca2-337">Obtaining Schema Information from a Database</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="InfoMessage">
      <MemberSignature Language="C#" Value="public event System.Data.OracleClient.OracleInfoMessageEventHandler InfoMessage;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.OracleClient.OracleInfoMessageEventHandler InfoMessage" />
      <MemberSignature Language="DocId" Value="E:System.Data.OracleClient.OracleConnection.InfoMessage" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event InfoMessage As OracleInfoMessageEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::OracleClient::OracleInfoMessageEventHandler ^ InfoMessage;" />
      <MemberSignature Language="F#" Value="member this.InfoMessage : System.Data.OracleClient.OracleInfoMessageEventHandler " Usage="member this.InfoMessage : System.Data.OracleClient.OracleInfoMessageEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleInfoMessageEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="efca2-338">Oracle が警告メッセージまたは情報メッセージを送信したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="efca2-338">Occurs when Oracle sends a warning or an informational message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efca2-339">データ プロバイダーが成功した場合に情報メッセージを受信するたびに、.NET Framework Data Provider for Oracle は、Oracle Call Interface (OCI) を使用するため、<xref:System.Data.OracleClient.OracleConnection.InfoMessage>イベントが生成されます。</span><span class="sxs-lookup"><span data-stu-id="efca2-339">Because the .NET Framework Data Provider for Oracle uses the Oracle Call Interface (OCI), whenever the data provider receives a Success With Info message, an <xref:System.Data.OracleClient.OracleConnection.InfoMessage> event is generated.</span></span> <span data-ttu-id="efca2-340">例には、構文エラーを含むストアド プロシージャを作成。</span><span class="sxs-lookup"><span data-stu-id="efca2-340">An example would be creating a stored procedure that contains a syntax error.</span></span> <span data-ttu-id="efca2-341">呼び出し、<xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A>メソッドは成功します。</span><span class="sxs-lookup"><span data-stu-id="efca2-341">The call to the <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A> method would succeed.</span></span> <span data-ttu-id="efca2-342">ただし、<xref:System.Data.OracleClient.OracleConnection.InfoMessage>構文エラーを通知イベントが生成されます。</span><span class="sxs-lookup"><span data-stu-id="efca2-342">However an <xref:System.Data.OracleClient.OracleConnection.InfoMessage> event would be generated informing you of the syntax error.</span></span>  
  
 <span data-ttu-id="efca2-343">警告または情報メッセージが、サーバーから送信された処理を希望するクライアントを作成する必要があります、<xref:System.Data.OracleClient.OracleInfoMessageEventHandler>このイベントを待機するデリゲート。</span><span class="sxs-lookup"><span data-stu-id="efca2-343">Clients who want to process warnings or informational messages sent by the server should create an <xref:System.Data.OracleClient.OracleInfoMessageEventHandler> delegate to listen to this event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public override void Open ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Open() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.Open" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Open ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Open();" />
      <MemberSignature Language="F#" Value="override this.Open : unit -&gt; unit" Usage="oracleConnection.Open " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="efca2-344"><see cref="P:System.Data.OracleClient.OracleConnection.ConnectionString" /> で指定したプロパティ設定を使用して、データベース接続を開きます。</span><span class="sxs-lookup"><span data-stu-id="efca2-344">Opens a connection to a database with the property settings specified by the <see cref="P:System.Data.OracleClient.OracleConnection.ConnectionString" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efca2-345"><xref:System.Data.OracleClient.OracleConnection>がある場合は、接続プールから開いている接続を描画します。</span><span class="sxs-lookup"><span data-stu-id="efca2-345">The <xref:System.Data.OracleClient.OracleConnection> draws an open connection from the connection pool if one is available.</span></span> <span data-ttu-id="efca2-346">それ以外の場合、データベースへの新しい接続を確立します。</span><span class="sxs-lookup"><span data-stu-id="efca2-346">Otherwise, it establishes a new connection to the database.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="efca2-347">場合、<xref:System.Data.OracleClient.OracleConnection>がスコープから外れたりを表す接続が自動的に閉じるされません。</span><span class="sxs-lookup"><span data-stu-id="efca2-347">If the <xref:System.Data.OracleClient.OracleConnection> goes out of scope, the connection it represents does not close automatically.</span></span> <span data-ttu-id="efca2-348">そのため、する必要があります明示的に閉じる接続呼び出して<xref:System.Data.OracleClient.OracleConnection.Close%2A>します。</span><span class="sxs-lookup"><span data-stu-id="efca2-348">Therefore, you must explicitly close the connection by calling <xref:System.Data.OracleClient.OracleConnection.Close%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="efca2-349">接続が開かれていません。</span><span class="sxs-lookup"><span data-stu-id="efca2-349">The connection is not open.</span></span></exception>
        <exception cref="T:System.Data.OracleClient.OracleException"><span data-ttu-id="efca2-350">データベースを変更できません。</span><span class="sxs-lookup"><span data-stu-id="efca2-350">Cannot change the database.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ServerVersion">
      <MemberSignature Language="C#" Value="public override string ServerVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ServerVersion" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleConnection.ServerVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ServerVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ServerVersion { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ServerVersion : string" Usage="System.Data.OracleClient.OracleConnection.ServerVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="efca2-351">クライアントが接続しているサーバーのバージョンが示された文字列を取得します。</span><span class="sxs-lookup"><span data-stu-id="efca2-351">Gets a string containing the version of the server to which the client is connected.</span></span></summary>
        <value><span data-ttu-id="efca2-352">接続されているサーバーのバージョン。</span><span class="sxs-lookup"><span data-stu-id="efca2-352">The version of the connected server.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efca2-353"><xref:System.Data.OracleClient.OracleConnection.ServerVersion%2A>プロパティは、Oracle のバージョンの形式にします。</span><span class="sxs-lookup"><span data-stu-id="efca2-353">The <xref:System.Data.OracleClient.OracleConnection.ServerVersion%2A> property is in Oracle version format.</span></span> <span data-ttu-id="efca2-354">たとえば、Oracle8 リリースの形式は、形式の文字列"8.1.7.0.0 Oracle8 8.1.7.0.0 - 運用環境にリリースします"。</span><span class="sxs-lookup"><span data-stu-id="efca2-354">For example, the format for an Oracle8 release is a string in the form "8.1.7.0.0 Oracle8 Release 8.1.7.0.0 - Production."</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="efca2-355">次の例では、作成、<xref:System.Data.OracleClient.OracleConnection>し、一部の読み取り専用プロパティを表示します。</span><span class="sxs-lookup"><span data-stu-id="efca2-355">The following example creates an <xref:System.Data.OracleClient.OracleConnection> and displays some of its read-only properties.</span></span>  
  
 [!code-csharp[Classic WebData OracleConnection.ServerVersion#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleConnection.ServerVersion/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleConnection.ServerVersion#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleConnection.ServerVersion/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="efca2-356">接続が閉じています。</span><span class="sxs-lookup"><span data-stu-id="efca2-356">The connection is closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public override System.Data.ConnectionState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.ConnectionState State" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleConnection.State" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property State As ConnectionState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::ConnectionState State { System::Data::ConnectionState get(); };" />
      <MemberSignature Language="F#" Value="member this.State : System.Data.ConnectionState" Usage="System.Data.OracleClient.OracleConnection.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.ConnectionState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="efca2-357">現在の接続の状態を取得します。</span><span class="sxs-lookup"><span data-stu-id="efca2-357">Gets the current state of the connection.</span></span></summary>
        <value><span data-ttu-id="efca2-358"><see cref="T:System.Data.ConnectionState" /> 値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="efca2-358">A bitwise combination of the <see cref="T:System.Data.ConnectionState" /> values.</span></span> <span data-ttu-id="efca2-359">既定値は、<see langword="Closed" /> です。</span><span class="sxs-lookup"><span data-stu-id="efca2-359">The default is <see langword="Closed" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efca2-360">許可されている状態の変更は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="efca2-360">The allowed state changes are:</span></span>  
  
-   <span data-ttu-id="efca2-361">`Closed`に`Open`を使用して、`Open`のメソッド、<xref:System.Data.OracleClient.OracleConnection>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="efca2-361">From `Closed` to `Open`, using the `Open` method of the <xref:System.Data.OracleClient.OracleConnection> object.</span></span>  
  
-   <span data-ttu-id="efca2-362">`Open`に`Closed`を使用して、<xref:System.Data.OracleClient.OracleConnection.Close%2A>のメソッド、<xref:System.Data.OracleClient.OracleConnection>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="efca2-362">From `Open` to `Closed`, using the <xref:System.Data.OracleClient.OracleConnection.Close%2A> method of the <xref:System.Data.OracleClient.OracleConnection> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="efca2-363">次の例は、派生クラスのインスタンスを作成します。 <xref:System.Data.OracleClient.OracleConnection>、設定、 <xref:System.Data.IDbConnection.ConnectionString%2A>、し、表示、<xref:System.Data.OracleClient.OracleConnection.State%2A>します。</span><span class="sxs-lookup"><span data-stu-id="efca2-363">The following example creates an instance of a derived class, <xref:System.Data.OracleClient.OracleConnection>, sets its <xref:System.Data.IDbConnection.ConnectionString%2A>, and displays its <xref:System.Data.OracleClient.OracleConnection.State%2A>.</span></span>  
  
 [!code-csharp[Classic WebData OracleConnection.State#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleConnection.State/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleConnection.State#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleConnection.State/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StateChange">
      <MemberSignature Language="C#" Value="public event System.Data.StateChangeEventHandler StateChange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.StateChangeEventHandler StateChange" />
      <MemberSignature Language="DocId" Value="E:System.Data.OracleClient.OracleConnection.StateChange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StateChange As StateChangeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::StateChangeEventHandler ^ StateChange;" />
      <MemberSignature Language="F#" Value="member this.StateChange : System.Data.StateChangeEventHandler " Usage="member this.StateChange : System.Data.StateChangeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.StateChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbConnection.BeginTransaction">
      <MemberSignature Language="C#" Value="System.Data.IDbTransaction IDbConnection.BeginTransaction ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Data.IDbTransaction System.Data.IDbConnection.BeginTransaction() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.System#Data#IDbConnection#BeginTransaction" />
      <MemberSignature Language="VB.NET" Value="Function BeginTransaction () As IDbTransaction Implements IDbConnection.BeginTransaction" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Data::IDbTransaction ^ System.Data.IDbConnection.BeginTransaction() = System::Data::IDbConnection::BeginTransaction;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbConnection.BeginTransaction</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbTransaction</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="efca2-364">データベース トランザクションを開始します。</span><span class="sxs-lookup"><span data-stu-id="efca2-364">Begins a database transaction.</span></span></summary>
        <returns><span data-ttu-id="efca2-365">新しいトランザクションを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="efca2-365">An object representing the new transaction.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="efca2-366">または明示的にコミットする必要がありますを使用してトランザクションをロールバック、トランザクションが完了すると、<xref:System.Data.IDbTransaction.Commit>または<xref:System.Data.IDbTransaction.Rollback>メソッド。</span><span class="sxs-lookup"><span data-stu-id="efca2-366">Once the transaction has completed, you must explicitly commit or roll back the transaction by using the <xref:System.Data.IDbTransaction.Commit> or <xref:System.Data.IDbTransaction.Rollback> methods.</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbConnection.BeginTransaction">
      <MemberSignature Language="C#" Value="System.Data.IDbTransaction IDbConnection.BeginTransaction (System.Data.IsolationLevel il);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Data.IDbTransaction System.Data.IDbConnection.BeginTransaction(valuetype System.Data.IsolationLevel il) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.System#Data#IDbConnection#BeginTransaction(System.Data.IsolationLevel)" />
      <MemberSignature Language="VB.NET" Value="Function BeginTransaction (il As IsolationLevel) As IDbTransaction Implements IDbConnection.BeginTransaction" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Data::IDbTransaction ^ System.Data.IDbConnection.BeginTransaction(System::Data::IsolationLevel il) = System::Data::IDbConnection::BeginTransaction;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbConnection.BeginTransaction(System.Data.IsolationLevel)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="il" Type="System.Data.IsolationLevel" />
      </Parameters>
      <Docs>
        <param name="il"><span data-ttu-id="efca2-367"><see cref="T:System.Data.IsolationLevel" /> 値のいずれか 1 つ。</span><span class="sxs-lookup"><span data-stu-id="efca2-367">One of the <see cref="T:System.Data.IsolationLevel" /> values.</span></span></param>
        <summary><span data-ttu-id="efca2-368">指定した <see cref="T:System.Data.IsolationLevel" /> 値を使用して、データベース トランザクションを開始します。</span><span class="sxs-lookup"><span data-stu-id="efca2-368">Begins a database transaction with the specified <see cref="T:System.Data.IsolationLevel" /> value.</span></span></summary>
        <returns><span data-ttu-id="efca2-369">新しいトランザクションを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="efca2-369">An object that represents the new transaction.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="efca2-370">または明示的にコミットする必要がありますを使用してトランザクションをロールバック、トランザクションが完了すると、<xref:System.Data.IDbTransaction.Commit>または<xref:System.Data.IDbTransaction.Rollback>メソッド。</span><span class="sxs-lookup"><span data-stu-id="efca2-370">Once the transaction has completed, you must explicitly commit or roll back the transaction by using the <xref:System.Data.IDbTransaction.Commit> or <xref:System.Data.IDbTransaction.Rollback> methods.</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbConnection.ChangeDatabase">
      <MemberSignature Language="C#" Value="void IDbConnection.ChangeDatabase (string value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Data.IDbConnection.ChangeDatabase(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.System#Data#IDbConnection#ChangeDatabase(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub ChangeDatabase (value As String) Implements IDbConnection.ChangeDatabase" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Data.IDbConnection.ChangeDatabase(System::String ^ value) = System::Data::IDbConnection::ChangeDatabase;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbConnection.ChangeDatabase(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="efca2-371">現在のデータベースの代わりに使用するデータベースの名前。</span><span class="sxs-lookup"><span data-stu-id="efca2-371">The name of the database to use in place of the current database.</span></span></param>
        <summary><span data-ttu-id="efca2-372">開いている Connection オブジェクトの現在のデータベースを変更します。</span><span class="sxs-lookup"><span data-stu-id="efca2-372">Changes the current database for an open Connection object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbConnection.CreateCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand IDbConnection.CreateCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Data.IDbCommand System.Data.IDbConnection.CreateCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.System#Data#IDbConnection#CreateCommand" />
      <MemberSignature Language="VB.NET" Value="Function CreateCommand () As IDbCommand Implements IDbConnection.CreateCommand" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Data::IDbCommand ^ System.Data.IDbConnection.CreateCommand() = System::Data::IDbConnection::CreateCommand;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbConnection.CreateCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="efca2-373">接続に関連付けられた Command オブジェクトを作成し、返します。</span><span class="sxs-lookup"><span data-stu-id="efca2-373">Creates and returns a Command object that is associated with the connection.</span></span></summary>
        <returns><span data-ttu-id="efca2-374">接続に関連付けられている Command オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="efca2-374">A Command object that is associated with the connection.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="efca2-375">現在のインスタンスのコピーである新しいオブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="efca2-375">Creates a new object that is a copy of the current instance.</span></span></summary>
        <returns><span data-ttu-id="efca2-376">このインスタンスのコピーである新しいオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="efca2-376">A new object that is a copy of this instance..</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efca2-377">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="efca2-377">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="efca2-378">これは、<xref:System.Data.OracleClient.OracleConnection> のインスタンスが <xref:System.ICloneable> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="efca2-378">It can be used only when the <xref:System.Data.OracleClient.OracleConnection> instance is cast to an <xref:System.ICloneable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>