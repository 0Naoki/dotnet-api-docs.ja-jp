<Type Name="OracleCommand" FullName="System.Data.OracleClient.OracleCommand">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d3206433275a12c1b96ab6e176e46ba31c1fcef8" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30390446" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class OracleCommand : System.Data.Common.DbCommand, ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OracleCommand extends System.Data.Common.DbCommand implements class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Data.OracleClient.OracleCommand" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OracleCommand&#xA;Inherits DbCommand&#xA;Implements ICloneable" />
  <TypeSignature Language="C++ CLI" Value="public ref class OracleCommand sealed : System::Data::Common::DbCommand, ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.OracleClient</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbCommand</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("RecordsAffected")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.OracleCommandDesigner, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Obsolete("OracleCommand has been deprecated. http://go.microsoft.com/fwlink/?LinkID=144260", false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="578cc-101">データベースに対して実行する SQL ステートメントまたはストアド プロシージャを表します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="578cc-101">Represents an SQL statement or stored procedure to execute against a database.</span>
      </span>
      <span data-ttu-id="578cc-102">このクラスは継承できません。</span>
      <span class="sxs-lookup">
        <span data-stu-id="578cc-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="578cc-103">この型は廃止されており、.NET Framework の将来のバージョンで削除される予定です。</span><span class="sxs-lookup"><span data-stu-id="578cc-103">This type is deprecated and will be removed in a future version of the .NET Framework.</span></span> <span data-ttu-id="578cc-104">詳細については、次を参照してください。 [Oracle および ADO.NET](~/docs/framework/data/adonet/oracle-and-adonet.md)です。</span><span class="sxs-lookup"><span data-stu-id="578cc-104">For more information, see [Oracle and ADO.NET](~/docs/framework/data/adonet/oracle-and-adonet.md).</span></span>  
  
 <span data-ttu-id="578cc-105"><xref:System.Data.OracleClient.OracleCommand>クラスは、データ ソースに対してコマンドを実行するための次のメソッドを提供します。</span><span class="sxs-lookup"><span data-stu-id="578cc-105">The <xref:System.Data.OracleClient.OracleCommand> class provides the following methods for executing commands against a data source:</span></span>  
  
|<span data-ttu-id="578cc-106">アイテム</span><span class="sxs-lookup"><span data-stu-id="578cc-106">Item</span></span>|<span data-ttu-id="578cc-107">説明</span><span class="sxs-lookup"><span data-stu-id="578cc-107">Description</span></span>|  
|----------|-----------------|  
|<xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>|<span data-ttu-id="578cc-108">行を返すコマンドを実行します。</span><span class="sxs-lookup"><span data-stu-id="578cc-108">Executes commands that return rows.</span></span>|  
|<xref:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery%2A>|<span data-ttu-id="578cc-109"><xref:System.Data.OracleClient.OracleCommand.Connection%2A> に対して SQL ステートメントを実行し、影響を受けた行数を返します。</span><span class="sxs-lookup"><span data-stu-id="578cc-109">Executes an SQL statement against the <xref:System.Data.OracleClient.OracleCommand.Connection%2A> and returns the number of rows affected.</span></span>|  
|<xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A>|<span data-ttu-id="578cc-110">SQL の INSERT、DELETE、UPDATE、および一連のステートメントなどのコマンドを実行します。</span><span class="sxs-lookup"><span data-stu-id="578cc-110">Executes commands such as SQL INSERT, DELETE, UPDATE, and SET statements.</span></span>|  
|<xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A>|<span data-ttu-id="578cc-111">.NET Framework データ型として、データベースから 1 つの値 (たとえば、集計値) を取得します。</span><span class="sxs-lookup"><span data-stu-id="578cc-111">Retrieves a single value (for example, an aggregate value) from a database as a .NET Framework data type.</span></span>|  
|<xref:System.Data.OracleClient.OracleCommand.ExecuteOracleScalar%2A>|<span data-ttu-id="578cc-112">Oracle 固有のデータ型として、データベースから 1 つの値 (たとえば、集計値) を取得します。</span><span class="sxs-lookup"><span data-stu-id="578cc-112">Retrieves a single value (for example, an aggregate value) from a database as an Oracle-specific data type.</span></span>|  
  
 <span data-ttu-id="578cc-113">リセットすることができます、<xref:System.Data.OracleClient.OracleCommand.CommandText%2A>プロパティと再利用、<xref:System.Data.OracleClient.OracleCommand>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="578cc-113">You can reset the <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> property and reuse the <xref:System.Data.OracleClient.OracleCommand> object.</span></span>  
  
 <span data-ttu-id="578cc-114">コマンドの実行結果致命的なエラーになった場合<xref:System.Data.OracleClient.OracleException>、<xref:System.Data.OracleClient.OracleConnection>閉じることがあります。</span><span class="sxs-lookup"><span data-stu-id="578cc-114">If execution of the command results in a fatal <xref:System.Data.OracleClient.OracleException>, the <xref:System.Data.OracleClient.OracleConnection> may close.</span></span> <span data-ttu-id="578cc-115">ただし、ユーザーは接続を再び開き、続行できます。</span><span class="sxs-lookup"><span data-stu-id="578cc-115">However, the user can reopen the connection and continue.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="578cc-116">異なり、**コマンド**、他の .NET Framework データ プロバイダー (SQL Server、OLE DB および ODBC) 内のオブジェクト、<xref:System.Data.OracleClient.OracleCommand>オブジェクトはサポートしません、<xref:System.Data.OracleClient.OracleCommand.CommandTimeout%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="578cc-116">Unlike the **Command** object in the other .NET Framework data providers (SQL Server, OLE DB, and ODBC), the <xref:System.Data.OracleClient.OracleCommand> object does not support a <xref:System.Data.OracleClient.OracleCommand.CommandTimeout%2A> property.</span></span> <span data-ttu-id="578cc-117">コマンドのタイムアウトを設定する影響は生じず、返される値は常に 0 です。</span><span class="sxs-lookup"><span data-stu-id="578cc-117">Setting a command timeout has no effect and the value returned is always zero.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="578cc-118">次の例では、<xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>のメソッド<xref:System.Data.OracleClient.OracleCommand>、と共に<xref:System.Data.OracleClient.OracleDataReader>と<xref:System.Data.OracleClient.OracleConnection>、テーブルから行を選択します。</span><span class="sxs-lookup"><span data-stu-id="578cc-118">The following example uses the <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> method of <xref:System.Data.OracleClient.OracleCommand>, along with <xref:System.Data.OracleClient.OracleDataReader> and <xref:System.Data.OracleClient.OracleConnection>, to select rows from a table.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="578cc-119">
            <see cref="T:System.Data.OracleClient.OracleCommand" />の新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="578cc-119">Initializes a new instance of the <see cref="T:System.Data.OracleClient.OracleCommand" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleCommand();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="578cc-120">
            <see cref="T:System.Data.OracleClient.OracleCommand" />の新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="578cc-120">Initializes a new instance of the <see cref="T:System.Data.OracleClient.OracleCommand" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="578cc-121">基本コンス トラクターは、すべてのフィールドを既定値を初期化します。</span><span class="sxs-lookup"><span data-stu-id="578cc-121">The base constructor initializes all fields to their default values.</span></span> <span data-ttu-id="578cc-122">次の表は、のインスタンスの初期プロパティ値を示しています。<xref:System.Data.OracleClient.OracleCommand>です。</span><span class="sxs-lookup"><span data-stu-id="578cc-122">The following table shows initial property values for an instance of <xref:System.Data.OracleClient.OracleCommand>.</span></span>  
  
|<span data-ttu-id="578cc-123">プロパティ</span><span class="sxs-lookup"><span data-stu-id="578cc-123">Properties</span></span>|<span data-ttu-id="578cc-124">初期値</span><span class="sxs-lookup"><span data-stu-id="578cc-124">Initial Value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.OracleClient.OracleCommand.CommandText%2A>|<span data-ttu-id="578cc-125">空の文字列 ("")</span><span class="sxs-lookup"><span data-stu-id="578cc-125">empty string ("")</span></span>|  
|<xref:System.Data.OracleClient.OracleCommand.CommandType%2A>|`Text`|  
|<xref:System.Data.OracleClient.OracleCommand.Connection%2A>|<span data-ttu-id="578cc-126">null</span><span class="sxs-lookup"><span data-stu-id="578cc-126">null</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="578cc-127">次の例を作成、<xref:System.Data.OracleClient.OracleCommand>し、一部のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="578cc-127">The following example creates an <xref:System.Data.OracleClient.OracleCommand> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.OracleCommand#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.OracleCommand/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.OracleCommand#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.OracleCommand/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleCommand (string commandText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string commandText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (commandText As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleCommand(System::String ^ commandText);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="commandText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="commandText">
          <span data-ttu-id="578cc-128">クエリのテキスト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="578cc-128">The text of the query.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="578cc-129">クエリ テキストを指定して、<see cref="T:System.Data.OracleClient.OracleCommand" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="578cc-129">Initializes a new instance of the <see cref="T:System.Data.OracleClient.OracleCommand" /> class with the text of the query.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleCommand (string commandText, System.Data.OracleClient.OracleConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string commandText, class System.Data.OracleClient.OracleConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.#ctor(System.String,System.Data.OracleClient.OracleConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (commandText As String, connection As OracleConnection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleCommand(System::String ^ commandText, System::Data::OracleClient::OracleConnection ^ connection);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="commandText" Type="System.String" />
        <Parameter Name="connection" Type="System.Data.OracleClient.OracleConnection" />
      </Parameters>
      <Docs>
        <param name="commandText">
          <span data-ttu-id="578cc-130">クエリのテキスト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="578cc-130">The text of the query.</span>
          </span>
        </param>
        <param name="connection">
          <span data-ttu-id="578cc-131">データベースへの接続を表す <see cref="T:System.Data.OracleClient.OracleConnection" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="578cc-131">An <see cref="T:System.Data.OracleClient.OracleConnection" /> object that represents the connection to a database.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="578cc-132">クエリ テキストと <see cref="T:System.Data.OracleClient.OracleCommand" /> オブジェクトを使用して、<see cref="T:System.Data.OracleClient.OracleConnection" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="578cc-132">Initializes a new instance of the <see cref="T:System.Data.OracleClient.OracleCommand" /> class with the text of the query and an <see cref="T:System.Data.OracleClient.OracleConnection" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="578cc-133">次の例を作成、<xref:System.Data.OracleClient.OracleCommand>です。</span><span class="sxs-lookup"><span data-stu-id="578cc-133">The following example creates an <xref:System.Data.OracleClient.OracleCommand>.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.OracleCommand2#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.OracleCommand2/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.OracleCommand2#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.OracleCommand2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleCommand (string commandText, System.Data.OracleClient.OracleConnection connection, System.Data.OracleClient.OracleTransaction tx);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string commandText, class System.Data.OracleClient.OracleConnection connection, class System.Data.OracleClient.OracleTransaction tx) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.#ctor(System.String,System.Data.OracleClient.OracleConnection,System.Data.OracleClient.OracleTransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (commandText As String, connection As OracleConnection, tx As OracleTransaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleCommand(System::String ^ commandText, System::Data::OracleClient::OracleConnection ^ connection, System::Data::OracleClient::OracleTransaction ^ tx);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="commandText" Type="System.String" />
        <Parameter Name="connection" Type="System.Data.OracleClient.OracleConnection" />
        <Parameter Name="tx" Type="System.Data.OracleClient.OracleTransaction" />
      </Parameters>
      <Docs>
        <param name="commandText">
          <span data-ttu-id="578cc-134">クエリのテキスト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="578cc-134">The text of the query.</span>
          </span>
        </param>
        <param name="connection">
          <span data-ttu-id="578cc-135">データベースへの接続を表す <see cref="T:System.Data.OracleClient.OracleConnection" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="578cc-135">An <see cref="T:System.Data.OracleClient.OracleConnection" /> object that represents the connection to a database.</span>
          </span>
        </param>
        <param name="tx">
          <span data-ttu-id="578cc-136">
            <see cref="T:System.Data.OracleClient.OracleCommand" /> が実行される <see cref="T:System.Data.OracleClient.OracleTransaction" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="578cc-136">The <see cref="T:System.Data.OracleClient.OracleTransaction" /> in which the <see cref="T:System.Data.OracleClient.OracleCommand" /> executes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="578cc-137">クエリ テキスト、<see cref="T:System.Data.OracleClient.OracleCommand" /> オブジェクト、および <see cref="T:System.Data.OracleClient.OracleConnection" /> を使用して、<see cref="T:System.Data.OracleClient.OracleTransaction" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="578cc-137">Initializes a new instance of the <see cref="T:System.Data.OracleClient.OracleCommand" /> class with the text of the query, an <see cref="T:System.Data.OracleClient.OracleConnection" /> object, and an <see cref="T:System.Data.OracleClient.OracleTransaction" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="578cc-138">次の表のこの実装のインスタンスの初期プロパティ値、<xref:System.Data.OracleClient.OracleCommand>です。</span><span class="sxs-lookup"><span data-stu-id="578cc-138">The following table shows initial property values for an instance of this implementation of the <xref:System.Data.OracleClient.OracleCommand>.</span></span>  
  
|<span data-ttu-id="578cc-139">プロパティ</span><span class="sxs-lookup"><span data-stu-id="578cc-139">Properties</span></span>|<span data-ttu-id="578cc-140">初期値</span><span class="sxs-lookup"><span data-stu-id="578cc-140">Initial Value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.OracleClient.OracleCommand.CommandText%2A>|`cmdText`|  
|<xref:System.Data.OracleClient.OracleCommand.CommandType%2A>|`Text`|  
|<xref:System.Data.OracleClient.OracleCommand.Connection%2A>|<span data-ttu-id="578cc-141">新しい<xref:System.Data.OracleClient.OracleConnection>の値である、`connection`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="578cc-141">A new <xref:System.Data.OracleClient.OracleConnection> that is the value for the `connection` parameter.</span></span>|  
  
 <span data-ttu-id="578cc-142">これらのパラメーターのいずれかの値を変更するには、関連するプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="578cc-142">You can change the value for any of these parameters by setting the related property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="578cc-143">次の例を作成、<xref:System.Data.OracleClient.OracleCommand>し、一部のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="578cc-143">The following example creates an <xref:System.Data.OracleClient.OracleCommand> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.OracleCommand3#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.OracleCommand3/CS/mysample.cs#1)]
 [!code-vb[Classic WebData OracleCommand.OracleCommand3#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.OracleCommand3/VB/mysample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public override void Cancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Cancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.Cancel" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Cancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Cancel();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="578cc-144">
            <see cref="T:System.Data.OracleClient.OracleCommand" /> の実行のキャンセルを試行します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="578cc-144">Attempts to cancel the execution of an <see cref="T:System.Data.OracleClient.OracleCommand" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="578cc-145">[キャンセル] を何も行われませんが、何も起こりません。</span><span class="sxs-lookup"><span data-stu-id="578cc-145">If there is nothing to cancel, nothing happens.</span></span> <span data-ttu-id="578cc-146">ただし、処理中のコマンドが存在し、キャンセルの試行が失敗した場合でも、例外は生成されません。</span><span class="sxs-lookup"><span data-stu-id="578cc-146">However, if there is a command in process, and the attempt to cancel fails, no exception is generated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="578cc-147">次の例を作成、<xref:System.Data.OracleClient.OracleCommand>を実行し、実行をキャンセルします。</span><span class="sxs-lookup"><span data-stu-id="578cc-147">The following example creates an <xref:System.Data.OracleClient.OracleCommand>, executes it, then cancels the execution.</span></span> <span data-ttu-id="578cc-148">これを実現するには、SQL SELECT ステートメントを表す文字列と、データベースへの接続に使用する文字列、メソッドに渡します。</span><span class="sxs-lookup"><span data-stu-id="578cc-148">To accomplish this, the method is passed a string that is an SQL SELECT statement and a string to use to connect to the database.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.Cancel#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.Cancel/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.Cancel#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.Cancel/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="578cc-149">この <see cref="T:System.Data.OracleClient.OracleCommand" /> オブジェクトのコピーを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="578cc-149">Creates a copy of this <see cref="T:System.Data.OracleClient.OracleCommand" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="578cc-150">すべてのプロパティ値が元のオブジェクトと同じ新しい <see cref="T:System.Data.OracleClient.OracleCommand" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="578cc-150">A new <see cref="T:System.Data.OracleClient.OracleCommand" /> object in which all property values are the same as the original.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandText">
      <MemberSignature Language="C#" Value="public override string CommandText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandText" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.CommandText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CommandText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CommandText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Oracle.Design.OracleCommandTextEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="578cc-151">データベースに対して実行する SQL ステートメントまたはストアド プロシージャを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="578cc-151">Gets or sets the SQL statement or stored procedure to execute against the database.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="578cc-152">実行する SQL ステートメントまたはストアド プロシージャ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="578cc-152">The SQL statement or stored procedure to execute.</span>
          </span>
          <span data-ttu-id="578cc-153">既定値は、空の文字列 ("") です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="578cc-153">The default value is an empty string ("").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="578cc-154">ときに、<xref:System.Data.OracleClient.OracleCommand.CommandType%2A>プロパティに設定されている`StoredProcedure`、<xref:System.Data.OracleClient.OracleCommand.CommandText%2A>プロパティは、ストアド プロシージャの名前に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="578cc-154">When the <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> property is set to `StoredProcedure`, the <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> property should be set to the name of the stored procedure.</span></span> <span data-ttu-id="578cc-155">ユーザーが、ストアド プロシージャ名に特殊文字が含まれている場合は、エスケープ文字構文を使用する必要あります。</span><span class="sxs-lookup"><span data-stu-id="578cc-155">The user may be required to use escape character syntax if the stored procedure name contains any special characters.</span></span> <span data-ttu-id="578cc-156">コマンドは、Execute メソッドの 1 つを呼び出すときに、このストアド プロシージャを実行します。</span><span class="sxs-lookup"><span data-stu-id="578cc-156">The command executes this stored procedure when you call one of the Execute methods.</span></span>  
  
 <span data-ttu-id="578cc-157">によって呼び出される SQL ステートメントにパラメーターを渡すに、.NET Framework Data Provider for Oracle が疑問符 (?) プレース ホルダーをサポートしない、<xref:System.Data.OracleClient.OracleCommand>の`CommandType.Text`します。</span><span class="sxs-lookup"><span data-stu-id="578cc-157">The .NET Framework Data Provider for Oracle does not support the question mark (?) placeholder for passing parameters to an SQL statement called by an <xref:System.Data.OracleClient.OracleCommand> of `CommandType.Text`.</span></span> <span data-ttu-id="578cc-158">この場合、名前付きパラメーターを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="578cc-158">In this case, named parameters must be used.</span></span> <span data-ttu-id="578cc-159">例:</span><span class="sxs-lookup"><span data-stu-id="578cc-159">For example:</span></span>  
  
```  
SELECT * FROM Customers WHERE CustomerID = :pCustomerID  
```  
  
 <span data-ttu-id="578cc-160">呼び出された SQL ステートメントで名前付きパラメーターを使用してとき、<xref:System.Data.OracleClient.OracleCommand>の`CommandType.Text`パラメーター名にコロン (:) を前に指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="578cc-160">When using named parameters in an SQL statement called by an <xref:System.Data.OracleClient.OracleCommand> of `CommandType.Text`, you must precede the parameter name with a colon (:).</span></span> <span data-ttu-id="578cc-161">ただし、ストアド プロシージャ、またはコード内の他の場所の名前付きパラメーターを参照する場合 (など、追加するときに<xref:System.Data.OracleClient.OracleParameter>オブジェクトを<xref:System.Data.OracleClient.OracleCommand.Parameters%2A>プロパティ)、コロン (:)、名前付きパラメーターは付けません。</span><span class="sxs-lookup"><span data-stu-id="578cc-161">However, in a stored procedure, or when referring to a named parameter elsewhere in your code (for example, when adding <xref:System.Data.OracleClient.OracleParameter> objects to the <xref:System.Data.OracleClient.OracleCommand.Parameters%2A> property), do not precede the named parameter with a colon (:).</span></span> <span data-ttu-id="578cc-162">.NET Framework Data Provider for Oracle では、コロンを自動的に提供します。</span><span class="sxs-lookup"><span data-stu-id="578cc-162">The .NET Framework Data Provider for Oracle supplies the colon automatically.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="578cc-163">次の例を作成、<xref:System.Data.OracleClient.OracleCommand>し、一部のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="578cc-163">The following example creates an <xref:System.Data.OracleClient.OracleCommand> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.CommandText#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.CommandText/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.CommandText#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.CommandText/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandTimeout">
      <MemberSignature Language="C#" Value="public override int CommandTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CommandTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.CommandTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CommandTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CommandTimeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="578cc-164">コマンドを実行する試みを終了してエラーが生成されるまでの待機時間を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="578cc-164">Gets or sets the wait time before terminating the attempt to execute a command and generating an error.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="578cc-165">コマンドが実行されるまでの待機時間 (秒)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="578cc-165">The time (in seconds) to wait for the command to execute.</span>
          </span>
          <span data-ttu-id="578cc-166">既定値は 30 秒です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="578cc-166">The default value is 30 seconds.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="578cc-167"><xref:System.ArgumentException>場合に生成される、割り当てられた<xref:System.Data.OracleClient.OracleCommand.CommandTimeout%2A>プロパティの値が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="578cc-167">An <xref:System.ArgumentException> is generated if the assigned <xref:System.Data.OracleClient.OracleCommand.CommandTimeout%2A> property value is less than 0.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandType">
      <MemberSignature Language="C#" Value="public override System.Data.CommandType CommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.CommandType CommandType" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.CommandType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CommandType As CommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::CommandType CommandType { System::Data::CommandType get(); void set(System::Data::CommandType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.CommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="578cc-168">
            <see cref="P:System.Data.OracleClient.OracleCommand.CommandText" /> プロパティの解釈方法を示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="578cc-168">Gets or sets a value indicating how the <see cref="P:System.Data.OracleClient.OracleCommand.CommandText" /> property is interpreted.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="578cc-169">
            <see cref="T:System.Data.CommandType" /> 値のいずれか 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="578cc-169">One of the <see cref="T:System.Data.CommandType" /> values.</span>
          </span>
          <span data-ttu-id="578cc-170">既定値は、<see langword="Text" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="578cc-170">The default is <see langword="Text" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="578cc-171">ときに、<xref:System.Data.OracleClient.OracleCommand.CommandType%2A>プロパティに設定されている`StoredProcedure`、設定する必要があります、<xref:System.Data.OracleClient.OracleCommand.CommandText%2A>プロパティを完全な Oracle 呼び出し構文。</span><span class="sxs-lookup"><span data-stu-id="578cc-171">When the <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> property is set to `StoredProcedure`, you should set the <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> property to the full Oracle call syntax.</span></span> <span data-ttu-id="578cc-172">コマンドは、Execute メソッドの 1 つを呼び出すときに、このストアド プロシージャを実行 (たとえば、<xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>または<xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A>)。</span><span class="sxs-lookup"><span data-stu-id="578cc-172">The command then executes this stored procedure when you call one of the Execute methods (for example, <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> or <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A>).</span></span>  
  
 <span data-ttu-id="578cc-173"><xref:System.Data.OracleClient.OracleCommand.Connection%2A>、<xref:System.Data.OracleClient.OracleCommand.CommandType%2A>と<xref:System.Data.OracleClient.OracleCommand.CommandText%2A>現在の接続が実行または fetch 操作を実行している場合、プロパティを設定することはできません。</span><span class="sxs-lookup"><span data-stu-id="578cc-173">The <xref:System.Data.OracleClient.OracleCommand.Connection%2A>, <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> and <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> properties cannot be set if the current connection is performing an execute or fetch operation.</span></span>  
  
 <span data-ttu-id="578cc-174">によって呼び出される SQL ステートメントにパラメーターを渡すに、.NET Framework Data Provider for Oracle が疑問符 (?) プレース ホルダーをサポートしない、<xref:System.Data.OracleClient.OracleCommand>の`CommandType.Text`します。</span><span class="sxs-lookup"><span data-stu-id="578cc-174">The .NET Framework Data Provider for Oracle does not support the question mark (?) placeholder for passing parameters to an SQL statement called by an <xref:System.Data.OracleClient.OracleCommand> of `CommandType.Text`.</span></span> <span data-ttu-id="578cc-175">この場合、名前付きパラメーターを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="578cc-175">In this case, named parameters must be used.</span></span> <span data-ttu-id="578cc-176">例:</span><span class="sxs-lookup"><span data-stu-id="578cc-176">For example:</span></span>  
  
```  
SELECT * FROM Customers WHERE CustomerID = :pCustomerID  
```  
  
 <span data-ttu-id="578cc-177">呼び出された SQL ステートメントで名前付きパラメーターを使用してとき、<xref:System.Data.OracleClient.OracleCommand>の`CommandType.Text`パラメーター名にコロン (:) を前に指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="578cc-177">When using named parameters in an SQL statement called by an <xref:System.Data.OracleClient.OracleCommand> of `CommandType.Text`, you must precede the parameter name with a colon (:).</span></span> <span data-ttu-id="578cc-178">ただし、ストアド プロシージャ、またはコード内の他の場所の名前付きパラメーターを参照する場合 (など、追加するときに<xref:System.Data.OracleClient.OracleParameter>オブジェクトを<xref:System.Data.OracleClient.OracleCommand.Parameters%2A>プロパティ)、コロン (:)、名前付きパラメーターは付けません。</span><span class="sxs-lookup"><span data-stu-id="578cc-178">However, in a stored procedure, or when referring to a named parameter elsewhere in your code (for example, when adding <xref:System.Data.OracleClient.OracleParameter> objects to the <xref:System.Data.OracleClient.OracleCommand.Parameters%2A> property), do not precede the named parameter with a colon (:).</span></span> <span data-ttu-id="578cc-179">.NET Framework Data Provider for Oracle では、コロンを自動的に提供します。</span><span class="sxs-lookup"><span data-stu-id="578cc-179">The .NET Framework Data Provider for Oracle supplies the colon automatically.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="578cc-180">次の例は、派生クラスのインスタンスを作成<xref:System.Data.OracleClient.OracleCommand>し、一部のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="578cc-180">The following example creates an instance of a derived class <xref:System.Data.OracleClient.OracleCommand> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.CommandType#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.CommandType/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.CommandType#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.CommandType/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="578cc-181">値が正しい <see cref="T:System.Data.CommandType" /> ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="578cc-181">The value was not a valid <see cref="T:System.Data.CommandType" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleConnection Connection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OracleClient.OracleConnection Connection" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.Connection" />
      <MemberSignature Language="VB.NET" Value="Public Property Connection As OracleConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OracleClient::OracleConnection ^ Connection { System::Data::OracleClient::OracleConnection ^ get(); void set(System::Data::OracleClient::OracleConnection ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DbConnectionEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="578cc-182">この <see cref="T:System.Data.OracleClient.OracleCommand" /> のインスタンスで使用する <see cref="T:System.Data.OracleClient.OracleConnection" /> を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="578cc-182">Gets or sets the <see cref="T:System.Data.OracleClient.OracleConnection" /> used by this instance of the <see cref="T:System.Data.OracleClient.OracleCommand" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="578cc-183">データ ソースへの接続。</span>
          <span class="sxs-lookup">
            <span data-stu-id="578cc-183">The connection to a data source.</span>
          </span>
          <span data-ttu-id="578cc-184">既定は null 値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="578cc-184">The default is a null value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="578cc-185">設定することはできません、 <xref:System.Data.OracleClient.OracleCommand.Connection%2A>、 <xref:System.Data.OracleClient.OracleCommand.CommandType%2A>、および<xref:System.Data.OracleClient.OracleCommand.CommandText%2A>プロパティの場合は、現在の接続で実行またはフェッチ操作が実行されます。</span><span class="sxs-lookup"><span data-stu-id="578cc-185">You cannot set the <xref:System.Data.OracleClient.OracleCommand.Connection%2A>, <xref:System.Data.OracleClient.OracleCommand.CommandType%2A>, and <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> properties if the current connection is performing an execute or fetch operation.</span></span>  
  
 <span data-ttu-id="578cc-186">トランザクションの進行中に <xref:System.Data.OracleClient.OracleCommand.Connection%2A> を設定した場合、<xref:System.Data.OracleClient.OracleCommand.Transaction%2A> プロパティが NULL でなければ、<xref:System.InvalidOperationException> が生成されます。</span><span class="sxs-lookup"><span data-stu-id="578cc-186">If you set <xref:System.Data.OracleClient.OracleCommand.Connection%2A> while a transaction is in progress and the <xref:System.Data.OracleClient.OracleCommand.Transaction%2A> property is not null, an <xref:System.InvalidOperationException> is generated.</span></span> <span data-ttu-id="578cc-187">設定した場合<xref:System.Data.OracleClient.OracleCommand.Connection%2A>トランザクションがコミットまたはロールバックされた後、<xref:System.Data.OracleClient.OracleCommand.Transaction%2A>プロパティが null でない、<xref:System.Data.OracleClient.OracleCommand.Transaction%2A>プロパティが null 値に設定し、します。</span><span class="sxs-lookup"><span data-stu-id="578cc-187">If you set <xref:System.Data.OracleClient.OracleCommand.Connection%2A> after the transaction has been committed or rolled back, and the <xref:System.Data.OracleClient.OracleCommand.Transaction%2A> property is not null, the <xref:System.Data.OracleClient.OracleCommand.Transaction%2A> property is then set to a null value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="578cc-188">次の例を作成、<xref:System.Data.OracleClient.OracleCommand>し、一部のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="578cc-188">The following example creates an <xref:System.Data.OracleClient.OracleCommand> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.Connection#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.Connection/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.Connection#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.Connection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="578cc-189">トランザクションの進行中に <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> プロパティが変更されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="578cc-189">The <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> property was changed while a transaction was in progress.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateDbParameter">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbParameter CreateDbParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbParameter CreateDbParameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.CreateDbParameter" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateDbParameter () As DbParameter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbParameter ^ CreateDbParameter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbParameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateParameter">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleParameter CreateParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleParameter CreateParameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.CreateParameter" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateParameter () As OracleParameter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleParameter ^ CreateParameter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleParameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="578cc-190">
            <see cref="T:System.Data.OracleClient.OracleParameter" /> オブジェクトの新しいインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="578cc-190">Creates a new instance of an <see cref="T:System.Data.OracleClient.OracleParameter" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="578cc-191">
            <see cref="T:System.Data.OracleClient.OracleParameter" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="578cc-191">An <see cref="T:System.Data.OracleClient.OracleParameter" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="578cc-192"><xref:System.Data.OracleClient.OracleCommand.CreateParameter%2A>メソッドは、厳密に型指定されたバージョンの<xref:System.Data.IDbCommand.CreateParameter%2A>します。</span><span class="sxs-lookup"><span data-stu-id="578cc-192">The <xref:System.Data.OracleClient.OracleCommand.CreateParameter%2A> method is a strongly-typed version of <xref:System.Data.IDbCommand.CreateParameter%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DbConnection">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbConnection DbConnection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbConnection DbConnection" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.DbConnection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Property DbConnection As DbConnection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbConnection ^ DbConnection { System::Data::Common::DbConnection ^ get(); void set(System::Data::Common::DbConnection ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DbParameterCollection">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbParameterCollection DbParameterCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbParameterCollection DbParameterCollection" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.DbParameterCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DbParameterCollection As DbParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbParameterCollection ^ DbParameterCollection { System::Data::Common::DbParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DbTransaction">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbTransaction DbTransaction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbTransaction DbTransaction" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.DbTransaction" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Property DbTransaction As DbTransaction" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbTransaction ^ DbTransaction { System::Data::Common::DbTransaction ^ get(); void set(System::Data::Common::DbTransaction ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbTransaction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DesignTimeVisible">
      <MemberSignature Language="C#" Value="public override bool DesignTimeVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DesignTimeVisible" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.DesignTimeVisible" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property DesignTimeVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool DesignTimeVisible { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="578cc-193">カスタマイズしたインターフェイス コントロールにコマンド オブジェクトを表示する必要があるかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="578cc-193">Gets or sets a value indicating whether the command object should be visible in a customized interface control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="578cc-194">コマンド オブジェクトをコントロールに表示する必要がある場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="578cc-194">
              <see langword="true" />, if the command object should be visible in a control; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="578cc-195">既定値は、<see langword="true" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="578cc-195">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteDbDataReader">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbDataReader ExecuteDbDataReader (System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbDataReader ExecuteDbDataReader(valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.ExecuteDbDataReader(System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ExecuteDbDataReader (behavior As CommandBehavior) As DbDataReader" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbDataReader ^ ExecuteDbDataReader(System::Data::CommandBehavior behavior);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="behavior">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteNonQuery">
      <MemberSignature Language="C#" Value="public override int ExecuteNonQuery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ExecuteNonQuery() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.ExecuteNonQuery" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ExecuteNonQuery () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ExecuteNonQuery();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="578cc-196">
            <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> に対して SQL ステートメントを実行し、影響を受けた行数を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="578cc-196">Executes an SQL statement against the <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> and returns the number of rows affected.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="578cc-197">UPDATE、INSERT、DELETE の各ステートメントで、戻り値はそのコマンドの影響を受ける行の数です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="578cc-197">For UPDATE, INSERT, and DELETE statements, the return value is the number of rows affected by the command.</span>
          </span>
          <span data-ttu-id="578cc-198">CREATE TABLE や DROP TABLE などのステートメントでの戻り値は、0 です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="578cc-198">For CREATE TABLE and DROP TABLE statements, the return value is 0.</span>
          </span>
          <span data-ttu-id="578cc-199">その他のすべての種類のステートメントでは、戻り値は -1 です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="578cc-199">For all other types of statements, the return value is -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="578cc-200">使用することができます<xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A>(データベースの構造をクエリやテーブルなどのデータベース オブジェクトを作成するなど); カタログ操作を実行するか、データベース内のデータの変更を使用せずに、<xref:System.Data.DataSet>で実行する、更新、挿入、または DELETE ステートメント。</span><span class="sxs-lookup"><span data-stu-id="578cc-200">You can use <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A> to perform catalog operations (for example, querying the structure of a database or creating database objects such as tables); or to change the data in a database, without using a <xref:System.Data.DataSet>, by executing UPDATE, INSERT, or DELETE statements.</span></span>  
  
 <span data-ttu-id="578cc-201"><xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A>戻り値の任意の行、すべての出力パラメーターまたはパラメーターにマップされている値には、データが挿入されますを返すしていません。</span><span class="sxs-lookup"><span data-stu-id="578cc-201">Although <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A> does not return any rows, any output parameters or return values mapped to parameters are populated with data.</span></span>  
  
 <span data-ttu-id="578cc-202">UPDATE、INSERT、DELETE の各ステートメントで、戻り値はそのコマンドの影響を受ける行の数です。</span><span class="sxs-lookup"><span data-stu-id="578cc-202">For UPDATE, INSERT, and DELETE statements, the return value is the number of rows affected by the command.</span></span> <span data-ttu-id="578cc-203">CREATE TABLE や DROP TABLE などのステートメントでの戻り値は、0 です。</span><span class="sxs-lookup"><span data-stu-id="578cc-203">For CREATE TABLE and DROP TABLE statements, the return value is 0.</span></span> <span data-ttu-id="578cc-204">その他のすべての種類のステートメントでは、戻り値は -1 です。</span><span class="sxs-lookup"><span data-stu-id="578cc-204">For all other types of statements, the return value is -1.</span></span> <span data-ttu-id="578cc-205">ロールバックが発生した場合、戻り値も-1 にです。</span><span class="sxs-lookup"><span data-stu-id="578cc-205">If a rollback occurs, the return value is also -1.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="578cc-206">次の例を作成、<xref:System.Data.OracleClient.OracleCommand>を使用して実行<xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A>です。</span><span class="sxs-lookup"><span data-stu-id="578cc-206">The following example creates an <xref:System.Data.OracleClient.OracleCommand> and then executes it by using <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A>.</span></span> <span data-ttu-id="578cc-207">例には、SQL ステートメント (UPDATE、INSERT、DELETE など) を表す文字列と、データベースへの接続に使用する文字列が渡されます。</span><span class="sxs-lookup"><span data-stu-id="578cc-207">The example is passed a string that is an SQL statement (such as UPDATE, INSERT, or DELETE) and a string to use to connect to the database.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.ExecuteNonQuery#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.ExecuteNonQuery/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.ExecuteNonQuery#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.ExecuteNonQuery/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="578cc-208">接続が存在しません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="578cc-208">The connection does not exist.</span>
          </span>
          <span data-ttu-id="578cc-209">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="578cc-209">-or-</span>
          </span>
          <span data-ttu-id="578cc-210">接続が開かれていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="578cc-210">The connection is not open.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ExecuteOracleNonQuery">
      <MemberSignature Language="C#" Value="public int ExecuteOracleNonQuery (out System.Data.OracleClient.OracleString rowid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 ExecuteOracleNonQuery([out] valuetype System.Data.OracleClient.OracleString&amp; rowid) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery(System.Data.OracleClient.OracleString@)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteOracleNonQuery (ByRef rowid As OracleString) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int ExecuteOracleNonQuery([Runtime::InteropServices::Out] System::Data::OracleClient::OracleString % rowid);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowid" Type="System.Data.OracleClient.OracleString&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="rowid">
          <span data-ttu-id="578cc-211">サーバーの実際の行 ID の base64 文字列表現。</span>
          <span class="sxs-lookup">
            <span data-stu-id="578cc-211">A base64 string representation of the actual row ID in the server.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="578cc-212">
            <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> に対して SQL ステートメントを実行し、影響を受けた行数を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="578cc-212">Executes an SQL statement against the <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> and returns the number of rows affected.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="578cc-213">UPDATE、INSERT、DELETE の各ステートメントで、戻り値はそのコマンドの影響を受ける行の数です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="578cc-213">For UPDATE, INSERT, and DELETE statements, the return value is the number of rows affected by the command.</span>
          </span>
          <span data-ttu-id="578cc-214">CREATE TABLE や DROP TABLE などのステートメントでの戻り値は、0 です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="578cc-214">For CREATE TABLE and DROP TABLE statements, the return value is 0.</span>
          </span>
          <span data-ttu-id="578cc-215">その他のすべての種類のステートメントでは、戻り値は -1 です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="578cc-215">For all other types of statements, the return value is -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="578cc-216">使用することができます<xref:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery%2A>(データベースの構造をクエリやテーブルなどのデータベース オブジェクトを作成するなど); カタログ操作を実行するか、データベース内のデータの変更を使用せずに、<xref:System.Data.DataSet>で実行する、更新、挿入、または DELETE ステートメント。</span><span class="sxs-lookup"><span data-stu-id="578cc-216">You can use <xref:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery%2A> to perform catalog operations (for example, querying the structure of a database or creating database objects such as tables); or to change the data in a database, without using a <xref:System.Data.DataSet>, by executing UPDATE, INSERT, or DELETE statements.</span></span>  
  
 <span data-ttu-id="578cc-217"><xref:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery%2A> 異なる<xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A>を返すという点で`rowid`ただ 1 つの行に影響する INSERT、DELETE、または UPDATE ステートメントを実行している場合、出力パラメーターとして。</span><span class="sxs-lookup"><span data-stu-id="578cc-217"><xref:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery%2A> differs from <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A> in that it returns `rowid` as an output parameter if you are executing an INSERT, DELETE, or UPDATE statement that affects exactly one row.</span></span> <span data-ttu-id="578cc-218">これにより、その後、関連するクエリのパフォーマンスが向上することができる Oracle データベース内の行を一意に識別できます。</span><span class="sxs-lookup"><span data-stu-id="578cc-218">This allows you to uniquely identify a row in the Oracle database, which can allow you to increase performance in subsequent, related queries.</span></span>  
  
 <span data-ttu-id="578cc-219"><xref:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery%2A>戻り値の任意の行、すべての出力パラメーターまたはパラメーターにマップされている値には、データが挿入されますを返すしていません。</span><span class="sxs-lookup"><span data-stu-id="578cc-219">Although <xref:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery%2A> does not return any rows, any output parameters or return values mapped to parameters are populated with data.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="578cc-220">接続が存在しません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="578cc-220">The connection does not exist.</span>
          </span>
          <span data-ttu-id="578cc-221">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="578cc-221">-or-</span>
          </span>
          <span data-ttu-id="578cc-222">接続が開かれていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="578cc-222">The connection is not open.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ExecuteOracleScalar">
      <MemberSignature Language="C#" Value="public object ExecuteOracleScalar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ExecuteOracleScalar() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.ExecuteOracleScalar" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteOracleScalar () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ExecuteOracleScalar();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="578cc-223">クエリを実行し、そのクエリが Oracle 固有のデータ型で返す結果セットの最初の行にある最初の列を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="578cc-223">Executes the query, and returns the first column of the first row in the result set returned by the query as an Oracle-specific data type.</span>
          </span>
          <span data-ttu-id="578cc-224">追加の列または行は無視されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="578cc-224">Extra columns or rows are ignored.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="578cc-225">Oracle 固有のデータ型の結果セットの最初の行の最初の列。結果が <see langword="REF CURSOR" /> の場合は、null 参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="578cc-225">The first column of the first row in the result set as an Oracle-specific data type, or a null reference if the result is a <see langword="REF CURSOR" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="578cc-226">使用して、<xref:System.Data.OracleClient.OracleCommand.ExecuteOracleScalar%2A>データベースから 1 つの値 (たとえば、集計値) を取得します。</span><span class="sxs-lookup"><span data-stu-id="578cc-226">Use the <xref:System.Data.OracleClient.OracleCommand.ExecuteOracleScalar%2A> method to retrieve a single value (for example, an aggregate value) from a database.</span></span> <span data-ttu-id="578cc-227">使用するよりも少ないコードが必要です、<xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>メソッド、およびによって返されるデータから 1 つの値を生成するために必要な操作を実行すること、<xref:System.Data.OracleClient.OracleDataReader>です。</span><span class="sxs-lookup"><span data-stu-id="578cc-227">This requires less code than using the <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> method, and then performing the operations necessary to generate the single value from the data returned by an <xref:System.Data.OracleClient.OracleDataReader>.</span></span>  
  
 <span data-ttu-id="578cc-228">一般的な<xref:System.Data.OracleClient.OracleCommand.ExecuteOracleScalar%2A>クエリは、c# の例を次のようにフォーマットされていることができます。</span><span class="sxs-lookup"><span data-stu-id="578cc-228">A typical <xref:System.Data.OracleClient.OracleCommand.ExecuteOracleScalar%2A> query can be formatted as in the following C# example:</span></span>  
  
```  
command.CommandText = "SELECT COUNT(*) AS NumberOfRegions FROM Region";  
count = command.ExecuteOracleScalar();  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ExecuteReader">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="578cc-229">
            <see cref="P:System.Data.OracleClient.OracleCommand.CommandText" /> を <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> に送信し、<see cref="T:System.Data.OracleClient.OracleDataReader" /> を構築します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="578cc-229">Sends the <see cref="P:System.Data.OracleClient.OracleCommand.CommandText" /> to the <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> and builds an <see cref="T:System.Data.OracleClient.OracleDataReader" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExecuteReader">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleDataReader ExecuteReader ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleDataReader ExecuteReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.ExecuteReader" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteReader () As OracleDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleDataReader ^ ExecuteReader();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleDataReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="578cc-230">
            <see cref="P:System.Data.OracleClient.OracleCommand.CommandText" /> を <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> に送信し、<see cref="T:System.Data.OracleClient.OracleDataReader" /> を構築します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="578cc-230">Sends the <see cref="P:System.Data.OracleClient.OracleCommand.CommandText" /> to the <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> and builds an <see cref="T:System.Data.OracleClient.OracleDataReader" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="578cc-231">
            <see cref="T:System.Data.OracleClient.OracleDataReader" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="578cc-231">An <see cref="T:System.Data.OracleClient.OracleDataReader" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="578cc-232">ときに、<xref:System.Data.OracleClient.OracleCommand.CommandType%2A>プロパティに設定されている`StoredProcedure`、<xref:System.Data.OracleClient.OracleCommand.CommandText%2A>プロパティは、ストアド プロシージャの名前に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="578cc-232">When the <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> property is set to `StoredProcedure`, the <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> property should be set to the name of the stored procedure.</span></span> <span data-ttu-id="578cc-233">コマンドは、呼び出すときに、このストアド プロシージャを実行<xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>です。</span><span class="sxs-lookup"><span data-stu-id="578cc-233">The command then executes this stored procedure when you call <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>.</span></span>  
  
 <span data-ttu-id="578cc-234">1 つ以上<xref:System.Data.OracleClient.OracleDataReader>特定の時点で開くことができます。</span><span class="sxs-lookup"><span data-stu-id="578cc-234">More than one <xref:System.Data.OracleClient.OracleDataReader> can be open at any given time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="578cc-235">次の例を作成、 <xref:System.Data.OracleClient.OracleCommand>、してでは、SQL SELECT ステートメント、文字列と、データ ソースへの接続に使用する文字列を渡すことによって実行します。</span><span class="sxs-lookup"><span data-stu-id="578cc-235">The following example creates an <xref:System.Data.OracleClient.OracleCommand>, and then executes it by passing a string that is an SQL SELECT statement, and a string to use to connect to the data source.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.ExecuteReader1#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.ExecuteReader1/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.ExecuteReader1#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.ExecuteReader1/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteReader">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleDataReader ExecuteReader (System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleDataReader ExecuteReader(valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.ExecuteReader(System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteReader (behavior As CommandBehavior) As OracleDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleDataReader ^ ExecuteReader(System::Data::CommandBehavior behavior);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="behavior">
          <span data-ttu-id="578cc-236">
            <see cref="T:System.Data.CommandBehavior" /> 値のいずれか 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="578cc-236">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="578cc-237">
            <see cref="P:System.Data.OracleClient.OracleCommand.CommandText" /> を <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> に送信し、<see cref="T:System.Data.CommandBehavior" /> 値のいずれかを使用して <see cref="T:System.Data.OracleClient.OracleDataReader" /> を構築します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="578cc-237">Sends the <see cref="P:System.Data.OracleClient.OracleCommand.CommandText" /> to the <see cref="P:System.Data.OracleClient.OracleCommand.Connection" />, and builds an <see cref="T:System.Data.OracleClient.OracleDataReader" /> using one of the <see cref="T:System.Data.CommandBehavior" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="578cc-238">
            <see cref="T:System.Data.OracleClient.OracleDataReader" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="578cc-238">An <see cref="T:System.Data.OracleClient.OracleDataReader" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="578cc-239">指定する 1 つの行のみを返す SQL ステートメントの場合、`SingleRow`として、<xref:System.Data.CommandBehavior>値は、アプリケーションのパフォーマンスを向上させることがあります。</span><span class="sxs-lookup"><span data-stu-id="578cc-239">If you expect your SQL statement to return only a single row, specifying `SingleRow` as the <xref:System.Data.CommandBehavior> value may improve application performance.</span></span>  
  
 <span data-ttu-id="578cc-240">ときに、<xref:System.Data.OracleClient.OracleCommand.CommandType%2A>プロパティに設定されている`StoredProcedure`、<xref:System.Data.OracleClient.OracleCommand.CommandText%2A>プロパティは、ストアド プロシージャの名前に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="578cc-240">When the <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> property is set to `StoredProcedure`, the <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> property should be set to the name of the stored procedure.</span></span> <span data-ttu-id="578cc-241">コマンドは、呼び出すときに、このストアド プロシージャを実行<xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>です。</span><span class="sxs-lookup"><span data-stu-id="578cc-241">The command then executes this stored procedure when you call <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>.</span></span>  
  
 <span data-ttu-id="578cc-242"><xref:System.Data.OracleClient.OracleDataReader>を効率的に読み込まれる大きなバイナリ値を有効にする、特殊なモードをサポートしています。</span><span class="sxs-lookup"><span data-stu-id="578cc-242">The <xref:System.Data.OracleClient.OracleDataReader> supports a special mode that enables large binary values to be read efficiently.</span></span> <span data-ttu-id="578cc-243">詳細については、次を参照してください。、`SequentialAccess`設定<xref:System.Data.CommandBehavior>です。</span><span class="sxs-lookup"><span data-stu-id="578cc-243">For more information, see the `SequentialAccess` setting for <xref:System.Data.CommandBehavior>.</span></span>  
  
 <span data-ttu-id="578cc-244">1 つ以上<xref:System.Data.OracleClient.OracleDataReader>特定の時点で開くことができます。</span><span class="sxs-lookup"><span data-stu-id="578cc-244">More than one <xref:System.Data.OracleClient.OracleDataReader> can be open at any given time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="578cc-245">次の例を作成、<xref:System.Data.OracleClient.OracleCommand>の SQL SELECT ステートメントを表す文字列とデータベースへの接続に使用する文字列を渡すことによって実行します。</span><span class="sxs-lookup"><span data-stu-id="578cc-245">The following example creates an <xref:System.Data.OracleClient.OracleCommand>, and then executes it by passing a string that is an SQL SELECT statement, and a string to use to connect to the database.</span></span> <span data-ttu-id="578cc-246"><xref:System.Data.CommandBehavior> 設定されているし、<xref:System.Data.CommandBehavior.CloseConnection>です。</span><span class="sxs-lookup"><span data-stu-id="578cc-246"><xref:System.Data.CommandBehavior> is then set to <xref:System.Data.CommandBehavior.CloseConnection>.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.ExecuteReader2#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.ExecuteReader2/CS/mysample.cs#1)]
 [!code-vb[Classic WebData OracleCommand.ExecuteReader2#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.ExecuteReader2/VB/mysample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteScalar">
      <MemberSignature Language="C#" Value="public override object ExecuteScalar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ExecuteScalar() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.ExecuteScalar" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ExecuteScalar () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ExecuteScalar();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="578cc-247">クエリを実行し、そのクエリが .NET Framework のデータ型で返す結果セットの最初の行の最初の列を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="578cc-247">Executes the query, and returns the first column of the first row in the result set returned by the query as a .NET Framework data type.</span>
          </span>
          <span data-ttu-id="578cc-248">追加の列または行は無視されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="578cc-248">Extra columns or rows are ignored.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="578cc-249">.NET Framework 固有のデータ型の結果セットの最初の行の最初の列。結果セットが空であるか、結果が <see langword="REF CURSOR" /> の場合、null 参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="578cc-249">The first column of the first row in the result set as a .NET Framework data type, or a null reference if the result set is empty or the result is a <see langword="REF CURSOR" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="578cc-250">使用して、<xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A>データベースから 1 つの値 (たとえば、集計値) を取得します。</span><span class="sxs-lookup"><span data-stu-id="578cc-250">Use the <xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A> method to retrieve a single value (for example, an aggregate value) from a database.</span></span> <span data-ttu-id="578cc-251">使用するよりも少ないコードが必要です、<xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>メソッド、およびによって返されるデータから 1 つの値を生成するために必要な操作を実行すること、<xref:System.Data.OracleClient.OracleDataReader>です。</span><span class="sxs-lookup"><span data-stu-id="578cc-251">This requires less code than using the <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> method, and then performing the operations necessary to generate the single value from the data returned by an <xref:System.Data.OracleClient.OracleDataReader>.</span></span>  
  
 <span data-ttu-id="578cc-252">一般的な<xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A>クエリは、c# の例を次のようにフォーマットされていることができます。</span><span class="sxs-lookup"><span data-stu-id="578cc-252">A typical <xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A> query can be formatted as in the following C# example:</span></span>  
  
```  
CommandText = "SELECT COUNT(*) FROM Region";  
Int32 count = (int32) ExecuteScalar();  
```  
  
   
  
## Examples  
 <span data-ttu-id="578cc-253">次の例を作成、<xref:System.Data.OracleClient.OracleCommand>を使用してそれを実行および<xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A>です。</span><span class="sxs-lookup"><span data-stu-id="578cc-253">The following example creates an <xref:System.Data.OracleClient.OracleCommand> and then executes it using <xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A>.</span></span> <span data-ttu-id="578cc-254">例には、集計の結果を返す SQL ステートメントを表す文字列と、データベースへの接続に使用する文字列が渡されます。</span><span class="sxs-lookup"><span data-stu-id="578cc-254">The example is passed a string that is an SQL statement that returns an aggregate result, and a string to use to connect to the database.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.ExecuteScalar#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.ExecuteScalar/CS/mysample.cs#1)]
 [!code-vb[Classic WebData OracleCommand.ExecuteScalar#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.ExecuteScalar/VB/mysample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleParameterCollection Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OracleClient.OracleParameterCollection Parameters" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parameters As OracleParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OracleClient::OracleParameterCollection ^ Parameters { System::Data::OracleClient::OracleParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="578cc-255">
            <see cref="T:System.Data.OracleClient.OracleParameterCollection" /> を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="578cc-255">Gets the <see cref="T:System.Data.OracleClient.OracleParameterCollection" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="578cc-256">SQL ステートメントまたはストアド プロシージャのパラメーター。</span>
          <span class="sxs-lookup">
            <span data-stu-id="578cc-256">The parameters of the SQL statement or stored procedure.</span>
          </span>
          <span data-ttu-id="578cc-257">既定値は空のコレクションです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="578cc-257">The default is an empty collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="578cc-258">ときに、<xref:System.Data.OracleClient.OracleCommand.CommandType%2A>プロパティに設定されている`StoredProcedure`、<xref:System.Data.OracleClient.OracleCommand.CommandText%2A>プロパティは、ストアド プロシージャの名前に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="578cc-258">When the <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> property is set to `StoredProcedure`, the <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> property should be set to the name of the stored procedure.</span></span> <span data-ttu-id="578cc-259">ユーザーが、ストアド プロシージャ名に特殊文字が含まれている場合は、エスケープ文字構文を使用する必要あります。</span><span class="sxs-lookup"><span data-stu-id="578cc-259">The user may be required to use escape character syntax if the stored procedure name contains any special characters.</span></span> <span data-ttu-id="578cc-260">コマンドは、Execute メソッドの 1 つを呼び出すときに、このストアド プロシージャを実行します。</span><span class="sxs-lookup"><span data-stu-id="578cc-260">The command executes this stored procedure when you call one of the Execute methods.</span></span>  
  
 <span data-ttu-id="578cc-261">によって呼び出される SQL ステートメントにパラメーターを渡すに、.NET Framework Data Provider for Oracle が疑問符 (?) プレース ホルダーをサポートしない、<xref:System.Data.OracleClient.OracleCommand>の`CommandType.Text`します。</span><span class="sxs-lookup"><span data-stu-id="578cc-261">The .NET Framework Data Provider for Oracle does not support the question mark (?) placeholder for passing parameters to an SQL statement called by an <xref:System.Data.OracleClient.OracleCommand> of `CommandType.Text`.</span></span> <span data-ttu-id="578cc-262">この場合、名前付きパラメーターを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="578cc-262">In this case, named parameters must be used.</span></span> <span data-ttu-id="578cc-263">例:</span><span class="sxs-lookup"><span data-stu-id="578cc-263">For example:</span></span>  
  
```  
SELECT * FROM Customers WHERE CustomerID = :pCustomerID  
```  
  
 <span data-ttu-id="578cc-264">呼び出された SQL ステートメントで名前付きパラメーターを使用してとき、<xref:System.Data.OracleClient.OracleCommand>の`CommandType.Text`パラメーター名にコロン (:) を前に指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="578cc-264">When using named parameters in an SQL statement called by an <xref:System.Data.OracleClient.OracleCommand> of `CommandType.Text`, you must precede the parameter name with a colon (:).</span></span> <span data-ttu-id="578cc-265">ただし、ストアド プロシージャ、またはコード内の他の場所の名前付きパラメーターを参照する場合 (など、追加するときに<xref:System.Data.OracleClient.OracleParameter>オブジェクトを<xref:System.Data.OracleClient.OracleCommand.Parameters%2A>プロパティ)、コロン (:)、名前付きパラメーターは付けません。</span><span class="sxs-lookup"><span data-stu-id="578cc-265">However, in a stored procedure, or when referring to a named parameter elsewhere in your code (for example, when adding <xref:System.Data.OracleClient.OracleParameter> objects to the <xref:System.Data.OracleClient.OracleCommand.Parameters%2A> property), do not precede the named parameter with a colon (:).</span></span> <span data-ttu-id="578cc-266">.NET Framework Data Provider for Oracle では、コロンを自動的に提供します。</span><span class="sxs-lookup"><span data-stu-id="578cc-266">The .NET Framework Data Provider for Oracle supplies the colon automatically.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="578cc-267">次の例を作成、<xref:System.Data.OracleClient.OracleCommand>し、そのパラメーターを表示します。</span><span class="sxs-lookup"><span data-stu-id="578cc-267">The following example creates an <xref:System.Data.OracleClient.OracleCommand> and displays its parameters.</span></span> <span data-ttu-id="578cc-268">これを実現する、メソッドに渡されます、 <xref:System.Data.OracleClient.OracleConnection>、クエリ文字列は、SQL SELECT ステートメントとの配列を<xref:System.Data.OracleClient.OracleParameter>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="578cc-268">To accomplish this, the method is passed an <xref:System.Data.OracleClient.OracleConnection>, a query string that is an SQL SELECT statement, and an array of <xref:System.Data.OracleClient.OracleParameter> objects.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.Parameters#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.Parameters/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.Parameters#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.Parameters/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Prepare">
      <MemberSignature Language="C#" Value="public override void Prepare ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Prepare() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.Prepare" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Prepare ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Prepare();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="578cc-269">データ ソースに対する準備済みの (コンパイルされた) コマンドを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="578cc-269">Creates a prepared (or compiled) version of the command at the data source.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="578cc-270">呼び出す前に<xref:System.Data.OracleClient.OracleCommand.Prepare%2A>、準備されたステートメント内の各パラメーターのデータ型を指定します。</span><span class="sxs-lookup"><span data-stu-id="578cc-270">Before you call <xref:System.Data.OracleClient.OracleCommand.Prepare%2A>, specify the data type of each parameter in the statement to be prepared.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="578cc-271">
            <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> が設定されていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="578cc-271">The <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> is not set.</span>
          </span>
          <span data-ttu-id="578cc-272">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="578cc-272">-or-</span>
          </span>
          <span data-ttu-id="578cc-273">
            <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> が <see cref="M:System.Data.OracleClient.OracleConnection.Open" /> ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="578cc-273">The <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> is not <see cref="M:System.Data.OracleClient.OracleConnection.Open" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ResetCommandTimeout">
      <MemberSignature Language="C#" Value="public void ResetCommandTimeout ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetCommandTimeout() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.ResetCommandTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetCommandTimeout ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetCommandTimeout();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="578cc-274">
            <see cref="P:System.Data.OracleClient.OracleCommand.CommandTimeout" /> プロパティを既定値にリセットします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="578cc-274">Resets the <see cref="P:System.Data.OracleClient.OracleCommand.CommandTimeout" /> property to the default value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="578cc-275">既定値、<xref:System.Data.OracleClient.OracleCommand.CommandTimeout%2A>は 30 秒です。</span><span class="sxs-lookup"><span data-stu-id="578cc-275">The default value of the <xref:System.Data.OracleClient.OracleCommand.CommandTimeout%2A> is 30 seconds.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transaction">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleTransaction Transaction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OracleClient.OracleTransaction Transaction" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.Transaction" />
      <MemberSignature Language="VB.NET" Value="Public Property Transaction As OracleTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OracleClient::OracleTransaction ^ Transaction { System::Data::OracleClient::OracleTransaction ^ get(); void set(System::Data::OracleClient::OracleTransaction ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleTransaction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="578cc-276">
            <see cref="T:System.Data.OracleClient.OracleTransaction" /> が実行される <see cref="T:System.Data.OracleClient.OracleCommand" /> を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="578cc-276">Gets or sets the <see cref="T:System.Data.OracleClient.OracleTransaction" /> within which the <see cref="T:System.Data.OracleClient.OracleCommand" /> executes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="578cc-277">
            <see cref="T:System.Data.OracleClient.OracleTransaction" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="578cc-277">An <see cref="T:System.Data.OracleClient.OracleTransaction" />.</span>
          </span>
          <span data-ttu-id="578cc-278">既定は null 値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="578cc-278">The default is a null value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="578cc-279">設定することはできません、<xref:System.Data.OracleClient.OracleCommand.Transaction%2A>場合は、既に特定の値に設定し、コマンドが実行中はプロパティです。</span><span class="sxs-lookup"><span data-stu-id="578cc-279">You cannot set the <xref:System.Data.OracleClient.OracleCommand.Transaction%2A> property if it is already set to a specific value, and the command is in the process of executing.</span></span> <span data-ttu-id="578cc-280">トランザクションのプロパティを設定する場合、<xref:System.Data.OracleClient.OracleTransaction>に同じ接続されていないオブジェクト<xref:System.Data.OracleClient.OracleConnection>として、<xref:System.Data.OracleClient.OracleCommand>オブジェクト、次回ステートメントを実行しようとすると、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="578cc-280">If you set the transaction property to an <xref:System.Data.OracleClient.OracleTransaction> object that is not connected to the same <xref:System.Data.OracleClient.OracleConnection> as the <xref:System.Data.OracleClient.OracleCommand> object, an exception will be thrown the next time you attempt to execute a statement.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdatedRowSource">
      <MemberSignature Language="C#" Value="public override System.Data.UpdateRowSource UpdatedRowSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.UpdateRowSource UpdatedRowSource" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.UpdatedRowSource" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property UpdatedRowSource As UpdateRowSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::UpdateRowSource UpdatedRowSource { System::Data::UpdateRowSource get(); void set(System::Data::UpdateRowSource value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.UpdateRowSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="578cc-281">
            <see langword="Update" /> メソッドがコマンドの結果を <see cref="T:System.Data.DataRow" /> に適用する方法を示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="578cc-281">Gets or sets a value that specifies how the <see langword="Update" /> method should apply command results to the <see cref="T:System.Data.DataRow" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="578cc-282">
            <see cref="T:System.Data.UpdateRowSource" /> 値のいずれか 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="578cc-282">One of the <see cref="T:System.Data.UpdateRowSource" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="578cc-283">既定値<xref:System.Data.UpdateRowSource>値は`Both`コマンドが自動的に生成される場合を除き、(同様の場合、 <xref:System.Data.OracleClient.OracleCommandBuilder>) の場合、既定値は`None`します。</span><span class="sxs-lookup"><span data-stu-id="578cc-283">The default <xref:System.Data.UpdateRowSource> value is `Both` unless the command is automatically generated (as in the case of the <xref:System.Data.OracleClient.OracleCommandBuilder>), in which case the default is `None`.</span></span>  
  
 <span data-ttu-id="578cc-284">使用しての詳細については、<xref:System.Data.UpdateRowSource>プロパティを参照してください[DataAdapter パラメーター](~/docs/framework/data/adonet/dataadapter-parameters.md)です。</span><span class="sxs-lookup"><span data-stu-id="578cc-284">For more information about using the <xref:System.Data.UpdateRowSource> property, see [DataAdapter Parameters](~/docs/framework/data/adonet/dataadapter-parameters.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="578cc-285">入力された値が、<see cref="T:System.Data.UpdateRowSource" /> 値ではありませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="578cc-285">The value entered was not one of the <see cref="T:System.Data.UpdateRowSource" /> values.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>