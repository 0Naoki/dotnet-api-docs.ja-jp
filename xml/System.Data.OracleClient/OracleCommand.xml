<Type Name="OracleCommand" FullName="System.Data.OracleClient.OracleCommand">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cfed5abf95356057a5be5b4929b5c39fc681cb81" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57930701" /></Metadata><TypeSignature Language="C#" Value="public sealed class OracleCommand : System.Data.Common.DbCommand, ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OracleCommand extends System.Data.Common.DbCommand implements class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Data.OracleClient.OracleCommand" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OracleCommand&#xA;Inherits DbCommand&#xA;Implements ICloneable" />
  <TypeSignature Language="C++ CLI" Value="public ref class OracleCommand sealed : System::Data::Common::DbCommand, ICloneable" />
  <TypeSignature Language="F#" Value="type OracleCommand = class&#xA;    inherit DbCommand&#xA;    interface ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.OracleClient</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbCommand</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-1.1">System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.DefaultEvent("RecordsAffected")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.OracleCommandDesigner, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("OracleCommand has been deprecated. http://go.microsoft.com/fwlink/?LinkID=144260", false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.OracleCommandDesigner, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.OracleCommandDesigner, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="ba1be-101">データベースに対して実行する SQL ステートメントまたはストアド プロシージャを表します。</span><span class="sxs-lookup"><span data-stu-id="ba1be-101">Represents an SQL statement or stored procedure to execute against a database.</span></span> <span data-ttu-id="ba1be-102">このクラスは継承できません。</span><span class="sxs-lookup"><span data-stu-id="ba1be-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba1be-103">この型は非推奨し、.NET Framework の将来のバージョンで削除される予定です。</span><span class="sxs-lookup"><span data-stu-id="ba1be-103">This type is deprecated and will be removed in a future version of the .NET Framework.</span></span> <span data-ttu-id="ba1be-104">詳細については、次を参照してください。 [Oracle および ADO.NET](~/docs/framework/data/adonet/oracle-and-adonet.md)します。</span><span class="sxs-lookup"><span data-stu-id="ba1be-104">For more information, see [Oracle and ADO.NET](~/docs/framework/data/adonet/oracle-and-adonet.md).</span></span>  
  
 <span data-ttu-id="ba1be-105"><xref:System.Data.OracleClient.OracleCommand>クラスは、データ ソースに対してコマンドを実行するために、次のメソッドを提供します。</span><span class="sxs-lookup"><span data-stu-id="ba1be-105">The <xref:System.Data.OracleClient.OracleCommand> class provides the following methods for executing commands against a data source:</span></span>  
  
|<span data-ttu-id="ba1be-106">アイテム</span><span class="sxs-lookup"><span data-stu-id="ba1be-106">Item</span></span>|<span data-ttu-id="ba1be-107">説明</span><span class="sxs-lookup"><span data-stu-id="ba1be-107">Description</span></span>|  
|----------|-----------------|  
|<xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>|<span data-ttu-id="ba1be-108">行を返すコマンドを実行します。</span><span class="sxs-lookup"><span data-stu-id="ba1be-108">Executes commands that return rows.</span></span>|  
|<xref:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery%2A>|<span data-ttu-id="ba1be-109"><xref:System.Data.OracleClient.OracleCommand.Connection%2A> に対して SQL ステートメントを実行し、影響を受けた行数を返します。</span><span class="sxs-lookup"><span data-stu-id="ba1be-109">Executes an SQL statement against the <xref:System.Data.OracleClient.OracleCommand.Connection%2A> and returns the number of rows affected.</span></span>|  
|<xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A>|<span data-ttu-id="ba1be-110">SQL の INSERT、DELETE、UPDATE、およびセット ステートメントなどのコマンドを実行します。</span><span class="sxs-lookup"><span data-stu-id="ba1be-110">Executes commands such as SQL INSERT, DELETE, UPDATE, and SET statements.</span></span>|  
|<xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A>|<span data-ttu-id="ba1be-111">.NET Framework のデータ型としては、データベースから 1 つの値 (たとえば、集計値) を取得します。</span><span class="sxs-lookup"><span data-stu-id="ba1be-111">Retrieves a single value (for example, an aggregate value) from a database as a .NET Framework data type.</span></span>|  
|<xref:System.Data.OracleClient.OracleCommand.ExecuteOracleScalar%2A>|<span data-ttu-id="ba1be-112">Oracle 固有のデータ型としては、データベースから 1 つの値 (たとえば、集計値) を取得します。</span><span class="sxs-lookup"><span data-stu-id="ba1be-112">Retrieves a single value (for example, an aggregate value) from a database as an Oracle-specific data type.</span></span>|  
  
 <span data-ttu-id="ba1be-113">リセットすることができます、<xref:System.Data.OracleClient.OracleCommand.CommandText%2A>プロパティと再利用、<xref:System.Data.OracleClient.OracleCommand>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ba1be-113">You can reset the <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> property and reuse the <xref:System.Data.OracleClient.OracleCommand> object.</span></span>  
  
 <span data-ttu-id="ba1be-114">コマンドの実行結果致命的なエラーの場合<xref:System.Data.OracleClient.OracleException>、<xref:System.Data.OracleClient.OracleConnection>閉じることがあります。</span><span class="sxs-lookup"><span data-stu-id="ba1be-114">If execution of the command results in a fatal <xref:System.Data.OracleClient.OracleException>, the <xref:System.Data.OracleClient.OracleConnection> may close.</span></span> <span data-ttu-id="ba1be-115">ただし、ユーザーは接続を再び開き、続行できます。</span><span class="sxs-lookup"><span data-stu-id="ba1be-115">However, the user can reopen the connection and continue.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ba1be-116">異なり、**コマンド**、他の .NET Framework データ プロバイダー (SQL Server、OLE DB および ODBC) 内のオブジェクト、<xref:System.Data.OracleClient.OracleCommand>オブジェクトがサポートしていません、<xref:System.Data.OracleClient.OracleCommand.CommandTimeout%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="ba1be-116">Unlike the **Command** object in the other .NET Framework data providers (SQL Server, OLE DB, and ODBC), the <xref:System.Data.OracleClient.OracleCommand> object does not support a <xref:System.Data.OracleClient.OracleCommand.CommandTimeout%2A> property.</span></span> <span data-ttu-id="ba1be-117">コマンドのタイムアウトを設定しても無効と返される値は常に 0 です。</span><span class="sxs-lookup"><span data-stu-id="ba1be-117">Setting a command timeout has no effect and the value returned is always zero.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba1be-118">次の例では、<xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>メソッドの<xref:System.Data.OracleClient.OracleCommand>、と共に<xref:System.Data.OracleClient.OracleDataReader>と<xref:System.Data.OracleClient.OracleConnection>、テーブルから行を選択します。</span><span class="sxs-lookup"><span data-stu-id="ba1be-118">The following example uses the <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> method of <xref:System.Data.OracleClient.OracleCommand>, along with <xref:System.Data.OracleClient.OracleDataReader> and <xref:System.Data.OracleClient.OracleConnection>, to select rows from a table.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md"><span data-ttu-id="ba1be-119">コマンドの操作</span><span class="sxs-lookup"><span data-stu-id="ba1be-119">Working with Commands</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ba1be-120"><see cref="T:System.Data.OracleClient.OracleCommand" />の新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="ba1be-120">Initializes a new instance of the <see cref="T:System.Data.OracleClient.OracleCommand" />.</span></span></summary>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md"><span data-ttu-id="ba1be-121">コマンドの操作</span><span class="sxs-lookup"><span data-stu-id="ba1be-121">Working with Commands</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleCommand();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ba1be-122"><see cref="T:System.Data.OracleClient.OracleCommand" />の新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="ba1be-122">Initializes a new instance of the <see cref="T:System.Data.OracleClient.OracleCommand" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba1be-123">基本コンス トラクターでは、すべてのフィールドを既定値を初期化します。</span><span class="sxs-lookup"><span data-stu-id="ba1be-123">The base constructor initializes all fields to their default values.</span></span> <span data-ttu-id="ba1be-124">次の表のインスタンスの初期プロパティ値<xref:System.Data.OracleClient.OracleCommand>します。</span><span class="sxs-lookup"><span data-stu-id="ba1be-124">The following table shows initial property values for an instance of <xref:System.Data.OracleClient.OracleCommand>.</span></span>  
  
|<span data-ttu-id="ba1be-125">プロパティ</span><span class="sxs-lookup"><span data-stu-id="ba1be-125">Properties</span></span>|<span data-ttu-id="ba1be-126">初期値</span><span class="sxs-lookup"><span data-stu-id="ba1be-126">Initial Value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.OracleClient.OracleCommand.CommandText%2A>|<span data-ttu-id="ba1be-127">空の文字列 ("")</span><span class="sxs-lookup"><span data-stu-id="ba1be-127">empty string ("")</span></span>|  
|<xref:System.Data.OracleClient.OracleCommand.CommandType%2A>|`Text`|  
|<xref:System.Data.OracleClient.OracleCommand.Connection%2A>|<span data-ttu-id="ba1be-128">null</span><span class="sxs-lookup"><span data-stu-id="ba1be-128">null</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="ba1be-129">次の例では、作成、<xref:System.Data.OracleClient.OracleCommand>および一部のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="ba1be-129">The following example creates an <xref:System.Data.OracleClient.OracleCommand> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.OracleCommand#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.OracleCommand/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.OracleCommand#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.OracleCommand/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md"><span data-ttu-id="ba1be-130">コマンドの操作</span><span class="sxs-lookup"><span data-stu-id="ba1be-130">Working with Commands</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleCommand (string commandText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string commandText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (commandText As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleCommand(System::String ^ commandText);" />
      <MemberSignature Language="F#" Value="new System.Data.OracleClient.OracleCommand : string -&gt; System.Data.OracleClient.OracleCommand" Usage="new System.Data.OracleClient.OracleCommand commandText" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="commandText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="commandText"><span data-ttu-id="ba1be-131">クエリのテキスト。</span><span class="sxs-lookup"><span data-stu-id="ba1be-131">The text of the query.</span></span></param>
        <summary><span data-ttu-id="ba1be-132">クエリ テキストを指定して、<see cref="T:System.Data.OracleClient.OracleCommand" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="ba1be-132">Initializes a new instance of the <see cref="T:System.Data.OracleClient.OracleCommand" /> class with the text of the query.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md"><span data-ttu-id="ba1be-133">コマンドの操作</span><span class="sxs-lookup"><span data-stu-id="ba1be-133">Working with Commands</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleCommand (string commandText, System.Data.OracleClient.OracleConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string commandText, class System.Data.OracleClient.OracleConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.#ctor(System.String,System.Data.OracleClient.OracleConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (commandText As String, connection As OracleConnection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleCommand(System::String ^ commandText, System::Data::OracleClient::OracleConnection ^ connection);" />
      <MemberSignature Language="F#" Value="new System.Data.OracleClient.OracleCommand : string * System.Data.OracleClient.OracleConnection -&gt; System.Data.OracleClient.OracleCommand" Usage="new System.Data.OracleClient.OracleCommand (commandText, connection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="commandText" Type="System.String" />
        <Parameter Name="connection" Type="System.Data.OracleClient.OracleConnection" />
      </Parameters>
      <Docs>
        <param name="commandText"><span data-ttu-id="ba1be-134">クエリのテキスト。</span><span class="sxs-lookup"><span data-stu-id="ba1be-134">The text of the query.</span></span></param>
        <param name="connection"><span data-ttu-id="ba1be-135">データベースへの接続を表す <see cref="T:System.Data.OracleClient.OracleConnection" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ba1be-135">An <see cref="T:System.Data.OracleClient.OracleConnection" /> object that represents the connection to a database.</span></span></param>
        <summary><span data-ttu-id="ba1be-136">クエリ テキストと <see cref="T:System.Data.OracleClient.OracleCommand" /> オブジェクトを使用して、<see cref="T:System.Data.OracleClient.OracleConnection" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="ba1be-136">Initializes a new instance of the <see cref="T:System.Data.OracleClient.OracleCommand" /> class with the text of the query and an <see cref="T:System.Data.OracleClient.OracleConnection" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ba1be-137">次の例では、作成、<xref:System.Data.OracleClient.OracleCommand>します。</span><span class="sxs-lookup"><span data-stu-id="ba1be-137">The following example creates an <xref:System.Data.OracleClient.OracleCommand>.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.OracleCommand2#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.OracleCommand2/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.OracleCommand2#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.OracleCommand2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md"><span data-ttu-id="ba1be-138">コマンドの操作</span><span class="sxs-lookup"><span data-stu-id="ba1be-138">Working with Commands</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleCommand (string commandText, System.Data.OracleClient.OracleConnection connection, System.Data.OracleClient.OracleTransaction tx);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string commandText, class System.Data.OracleClient.OracleConnection connection, class System.Data.OracleClient.OracleTransaction tx) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.#ctor(System.String,System.Data.OracleClient.OracleConnection,System.Data.OracleClient.OracleTransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (commandText As String, connection As OracleConnection, tx As OracleTransaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleCommand(System::String ^ commandText, System::Data::OracleClient::OracleConnection ^ connection, System::Data::OracleClient::OracleTransaction ^ tx);" />
      <MemberSignature Language="F#" Value="new System.Data.OracleClient.OracleCommand : string * System.Data.OracleClient.OracleConnection * System.Data.OracleClient.OracleTransaction -&gt; System.Data.OracleClient.OracleCommand" Usage="new System.Data.OracleClient.OracleCommand (commandText, connection, tx)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="commandText" Type="System.String" />
        <Parameter Name="connection" Type="System.Data.OracleClient.OracleConnection" />
        <Parameter Name="tx" Type="System.Data.OracleClient.OracleTransaction" />
      </Parameters>
      <Docs>
        <param name="commandText"><span data-ttu-id="ba1be-139">クエリのテキスト。</span><span class="sxs-lookup"><span data-stu-id="ba1be-139">The text of the query.</span></span></param>
        <param name="connection"><span data-ttu-id="ba1be-140">データベースへの接続を表す <see cref="T:System.Data.OracleClient.OracleConnection" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ba1be-140">An <see cref="T:System.Data.OracleClient.OracleConnection" /> object that represents the connection to a database.</span></span></param>
        <param name="tx"><span data-ttu-id="ba1be-141"><see cref="T:System.Data.OracleClient.OracleCommand" /> が実行される <see cref="T:System.Data.OracleClient.OracleTransaction" />。</span><span class="sxs-lookup"><span data-stu-id="ba1be-141">The <see cref="T:System.Data.OracleClient.OracleTransaction" /> in which the <see cref="T:System.Data.OracleClient.OracleCommand" /> executes.</span></span></param>
        <summary><span data-ttu-id="ba1be-142">クエリ テキスト、<see cref="T:System.Data.OracleClient.OracleCommand" /> オブジェクト、および <see cref="T:System.Data.OracleClient.OracleConnection" /> を使用して、<see cref="T:System.Data.OracleClient.OracleTransaction" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="ba1be-142">Initializes a new instance of the <see cref="T:System.Data.OracleClient.OracleCommand" /> class with the text of the query, an <see cref="T:System.Data.OracleClient.OracleConnection" /> object, and an <see cref="T:System.Data.OracleClient.OracleTransaction" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba1be-143">次の表のこの実装のインスタンスの初期プロパティ値、<xref:System.Data.OracleClient.OracleCommand>します。</span><span class="sxs-lookup"><span data-stu-id="ba1be-143">The following table shows initial property values for an instance of this implementation of the <xref:System.Data.OracleClient.OracleCommand>.</span></span>  
  
|<span data-ttu-id="ba1be-144">プロパティ</span><span class="sxs-lookup"><span data-stu-id="ba1be-144">Properties</span></span>|<span data-ttu-id="ba1be-145">初期値</span><span class="sxs-lookup"><span data-stu-id="ba1be-145">Initial Value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.OracleClient.OracleCommand.CommandText%2A>|`cmdText`|  
|<xref:System.Data.OracleClient.OracleCommand.CommandType%2A>|`Text`|  
|<xref:System.Data.OracleClient.OracleCommand.Connection%2A>|<span data-ttu-id="ba1be-146">新しい<xref:System.Data.OracleClient.OracleConnection>の値である、`connection`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="ba1be-146">A new <xref:System.Data.OracleClient.OracleConnection> that is the value for the `connection` parameter.</span></span>|  
  
 <span data-ttu-id="ba1be-147">これらのパラメーターのいずれかの値を変更するには、関連するプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="ba1be-147">You can change the value for any of these parameters by setting the related property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba1be-148">次の例では、作成、<xref:System.Data.OracleClient.OracleCommand>および一部のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="ba1be-148">The following example creates an <xref:System.Data.OracleClient.OracleCommand> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.OracleCommand3#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.OracleCommand3/CS/mysample.cs#1)]
 [!code-vb[Classic WebData OracleCommand.OracleCommand3#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.OracleCommand3/VB/mysample.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md"><span data-ttu-id="ba1be-149">コマンドの操作</span><span class="sxs-lookup"><span data-stu-id="ba1be-149">Working with Commands</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public override void Cancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Cancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.Cancel" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Cancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Cancel();" />
      <MemberSignature Language="F#" Value="override this.Cancel : unit -&gt; unit" Usage="oracleCommand.Cancel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ba1be-150"><see cref="T:System.Data.OracleClient.OracleCommand" /> の実行のキャンセルを試行します。</span><span class="sxs-lookup"><span data-stu-id="ba1be-150">Attempts to cancel the execution of an <see cref="T:System.Data.OracleClient.OracleCommand" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba1be-151">何をキャンセルする場合は、何も起こりません。</span><span class="sxs-lookup"><span data-stu-id="ba1be-151">If there is nothing to cancel, nothing happens.</span></span> <span data-ttu-id="ba1be-152">ただし、処理中のコマンドが存在し、キャンセルの試行が失敗した場合でも、例外は生成されません。</span><span class="sxs-lookup"><span data-stu-id="ba1be-152">However, if there is a command in process, and the attempt to cancel fails, no exception is generated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba1be-153">次の例では、作成、 <xref:System.Data.OracleClient.OracleCommand>、それを実行し、実行を取り消します。</span><span class="sxs-lookup"><span data-stu-id="ba1be-153">The following example creates an <xref:System.Data.OracleClient.OracleCommand>, executes it, then cancels the execution.</span></span> <span data-ttu-id="ba1be-154">これを行うには、SQL SELECT ステートメントである文字列と、データベースへの接続に使用する文字列をメソッドが渡されます。</span><span class="sxs-lookup"><span data-stu-id="ba1be-154">To accomplish this, the method is passed a string that is an SQL SELECT statement and a string to use to connect to the database.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.Cancel#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.Cancel/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.Cancel#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.Cancel/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md"><span data-ttu-id="ba1be-155">コマンドの操作</span><span class="sxs-lookup"><span data-stu-id="ba1be-155">Working with Commands</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="oracleCommand.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ba1be-156">この <see cref="T:System.Data.OracleClient.OracleCommand" /> オブジェクトのコピーを作成します。</span><span class="sxs-lookup"><span data-stu-id="ba1be-156">Creates a copy of this <see cref="T:System.Data.OracleClient.OracleCommand" /> object.</span></span></summary>
        <returns><span data-ttu-id="ba1be-157">すべてのプロパティ値が元のオブジェクトと同じ新しい <see cref="T:System.Data.OracleClient.OracleCommand" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ba1be-157">A new <see cref="T:System.Data.OracleClient.OracleCommand" /> object in which all property values are the same as the original.</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md"><span data-ttu-id="ba1be-158">コマンドの操作</span><span class="sxs-lookup"><span data-stu-id="ba1be-158">Working with Commands</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CommandText">
      <MemberSignature Language="C#" Value="public override string CommandText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandText" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.CommandText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CommandText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CommandText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CommandText : string with get, set" Usage="System.Data.OracleClient.OracleCommand.CommandText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Oracle.Design.OracleCommandTextEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Oracle.Design.OracleCommandTextEditor, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Oracle.Design.OracleCommandTextEditor, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba1be-159">データベースに対して実行する SQL ステートメントまたはストアド プロシージャを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ba1be-159">Gets or sets the SQL statement or stored procedure to execute against the database.</span></span></summary>
        <value><span data-ttu-id="ba1be-160">実行する SQL ステートメントまたはストアド プロシージャ。</span><span class="sxs-lookup"><span data-stu-id="ba1be-160">The SQL statement or stored procedure to execute.</span></span> <span data-ttu-id="ba1be-161">既定値は、空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="ba1be-161">The default value is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba1be-162">ときに、<xref:System.Data.OracleClient.OracleCommand.CommandType%2A>プロパティに設定されて`StoredProcedure`、<xref:System.Data.OracleClient.OracleCommand.CommandText%2A>プロパティは、ストアド プロシージャの名前に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ba1be-162">When the <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> property is set to `StoredProcedure`, the <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> property should be set to the name of the stored procedure.</span></span> <span data-ttu-id="ba1be-163">ユーザー ストアド プロシージャ名に特殊文字が含まれている場合は、エスケープ文字構文を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ba1be-163">The user may be required to use escape character syntax if the stored procedure name contains any special characters.</span></span> <span data-ttu-id="ba1be-164">コマンドは、Execute メソッドのいずれかを呼び出すときに、このストアド プロシージャを実行します。</span><span class="sxs-lookup"><span data-stu-id="ba1be-164">The command executes this stored procedure when you call one of the Execute methods.</span></span>  
  
 <span data-ttu-id="ba1be-165">.NET Framework Data Provider for Oracle が疑問符 (?) プレース ホルダーをサポートしていないと呼ばれる SQL ステートメントにパラメーターを渡す、<xref:System.Data.OracleClient.OracleCommand>の`CommandType.Text`します。</span><span class="sxs-lookup"><span data-stu-id="ba1be-165">The .NET Framework Data Provider for Oracle does not support the question mark (?) placeholder for passing parameters to an SQL statement called by an <xref:System.Data.OracleClient.OracleCommand> of `CommandType.Text`.</span></span> <span data-ttu-id="ba1be-166">ここでは、名前付きパラメーターを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ba1be-166">In this case, named parameters must be used.</span></span> <span data-ttu-id="ba1be-167">次に例を示します。</span><span class="sxs-lookup"><span data-stu-id="ba1be-167">For example:</span></span>  
  
```  
SELECT * FROM Customers WHERE CustomerID = :pCustomerID  
```  
  
 <span data-ttu-id="ba1be-168">呼び出すときに、SQL ステートメントの名前付きパラメーターを使用して、<xref:System.Data.OracleClient.OracleCommand>の`CommandType.Text`パラメーター名にコロン (:) を付ける必要があります。</span><span class="sxs-lookup"><span data-stu-id="ba1be-168">When using named parameters in an SQL statement called by an <xref:System.Data.OracleClient.OracleCommand> of `CommandType.Text`, you must precede the parameter name with a colon (:).</span></span> <span data-ttu-id="ba1be-169">ただし、ストアド プロシージャ、またはコード内の他の場所の名前付きパラメーターを参照する場合 (を追加するときに、<xref:System.Data.OracleClient.OracleParameter>オブジェクトを<xref:System.Data.OracleClient.OracleCommand.Parameters%2A>プロパティ)、コロン (:)、名前付きパラメーターを前に操作を行います。</span><span class="sxs-lookup"><span data-stu-id="ba1be-169">However, in a stored procedure, or when referring to a named parameter elsewhere in your code (for example, when adding <xref:System.Data.OracleClient.OracleParameter> objects to the <xref:System.Data.OracleClient.OracleCommand.Parameters%2A> property), do not precede the named parameter with a colon (:).</span></span> <span data-ttu-id="ba1be-170">.NET Framework Data Provider for Oracle では、コロンが自動的に用意されています。</span><span class="sxs-lookup"><span data-stu-id="ba1be-170">The .NET Framework Data Provider for Oracle supplies the colon automatically.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba1be-171">次の例では、作成、<xref:System.Data.OracleClient.OracleCommand>および一部のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="ba1be-171">The following example creates an <xref:System.Data.OracleClient.OracleCommand> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.CommandText#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.CommandText/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.CommandText#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.CommandText/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md"><span data-ttu-id="ba1be-172">コマンドの操作</span><span class="sxs-lookup"><span data-stu-id="ba1be-172">Working with Commands</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CommandTimeout">
      <MemberSignature Language="C#" Value="public override int CommandTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CommandTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.CommandTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CommandTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CommandTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CommandTimeout : int with get, set" Usage="System.Data.OracleClient.OracleCommand.CommandTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba1be-173">コマンドを実行する試みを終了してエラーが生成されるまでの待機時間を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ba1be-173">Gets or sets the wait time before terminating the attempt to execute a command and generating an error.</span></span></summary>
        <value><span data-ttu-id="ba1be-174">コマンドが実行されるまでの待機時間 (秒)。</span><span class="sxs-lookup"><span data-stu-id="ba1be-174">The time (in seconds) to wait for the command to execute.</span></span> <span data-ttu-id="ba1be-175">既定値は 30 秒です。</span><span class="sxs-lookup"><span data-stu-id="ba1be-175">The default value is 30 seconds.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba1be-176"><xref:System.ArgumentException>場合に生成される、割り当てられた<xref:System.Data.OracleClient.OracleCommand.CommandTimeout%2A>プロパティの値が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="ba1be-176">An <xref:System.ArgumentException> is generated if the assigned <xref:System.Data.OracleClient.OracleCommand.CommandTimeout%2A> property value is less than 0.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md"><span data-ttu-id="ba1be-177">コマンドの操作</span><span class="sxs-lookup"><span data-stu-id="ba1be-177">Working with Commands</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CommandType">
      <MemberSignature Language="C#" Value="public override System.Data.CommandType CommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.CommandType CommandType" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.CommandType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CommandType As CommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::CommandType CommandType { System::Data::CommandType get(); void set(System::Data::CommandType value); };" />
      <MemberSignature Language="F#" Value="member this.CommandType : System.Data.CommandType with get, set" Usage="System.Data.OracleClient.OracleCommand.CommandType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.CommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba1be-178"><see cref="P:System.Data.OracleClient.OracleCommand.CommandText" /> プロパティの解釈方法を示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ba1be-178">Gets or sets a value indicating how the <see cref="P:System.Data.OracleClient.OracleCommand.CommandText" /> property is interpreted.</span></span></summary>
        <value><span data-ttu-id="ba1be-179"><see cref="T:System.Data.CommandType" /> 値のいずれか。</span><span class="sxs-lookup"><span data-stu-id="ba1be-179">One of the <see cref="T:System.Data.CommandType" /> values.</span></span> <span data-ttu-id="ba1be-180">既定値は、<see langword="Text" /> です。</span><span class="sxs-lookup"><span data-stu-id="ba1be-180">The default is <see langword="Text" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba1be-181">ときに、<xref:System.Data.OracleClient.OracleCommand.CommandType%2A>プロパティに設定されて`StoredProcedure`を設定する必要があります、<xref:System.Data.OracleClient.OracleCommand.CommandText%2A>プロパティを完全な Oracle 呼び出し構文。</span><span class="sxs-lookup"><span data-stu-id="ba1be-181">When the <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> property is set to `StoredProcedure`, you should set the <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> property to the full Oracle call syntax.</span></span> <span data-ttu-id="ba1be-182">コマンドは、Execute メソッドのいずれかを呼び出すときに、このストアド プロシージャを実行 (たとえば、<xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>または<xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A>)。</span><span class="sxs-lookup"><span data-stu-id="ba1be-182">The command then executes this stored procedure when you call one of the Execute methods (for example, <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> or <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A>).</span></span>  
  
 <span data-ttu-id="ba1be-183"><xref:System.Data.OracleClient.OracleCommand.Connection%2A>、<xref:System.Data.OracleClient.OracleCommand.CommandType%2A>と<xref:System.Data.OracleClient.OracleCommand.CommandText%2A>現在の接続が実行または fetch 操作を実行する場合、プロパティを設定することはできません。</span><span class="sxs-lookup"><span data-stu-id="ba1be-183">The <xref:System.Data.OracleClient.OracleCommand.Connection%2A>, <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> and <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> properties cannot be set if the current connection is performing an execute or fetch operation.</span></span>  
  
 <span data-ttu-id="ba1be-184">.NET Framework Data Provider for Oracle が疑問符 (?) プレース ホルダーをサポートしていないと呼ばれる SQL ステートメントにパラメーターを渡す、<xref:System.Data.OracleClient.OracleCommand>の`CommandType.Text`します。</span><span class="sxs-lookup"><span data-stu-id="ba1be-184">The .NET Framework Data Provider for Oracle does not support the question mark (?) placeholder for passing parameters to an SQL statement called by an <xref:System.Data.OracleClient.OracleCommand> of `CommandType.Text`.</span></span> <span data-ttu-id="ba1be-185">ここでは、名前付きパラメーターを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ba1be-185">In this case, named parameters must be used.</span></span> <span data-ttu-id="ba1be-186">次に例を示します。</span><span class="sxs-lookup"><span data-stu-id="ba1be-186">For example:</span></span>  
  
```  
SELECT * FROM Customers WHERE CustomerID = :pCustomerID  
```  
  
 <span data-ttu-id="ba1be-187">呼び出すときに、SQL ステートメントの名前付きパラメーターを使用して、<xref:System.Data.OracleClient.OracleCommand>の`CommandType.Text`パラメーター名にコロン (:) を付ける必要があります。</span><span class="sxs-lookup"><span data-stu-id="ba1be-187">When using named parameters in an SQL statement called by an <xref:System.Data.OracleClient.OracleCommand> of `CommandType.Text`, you must precede the parameter name with a colon (:).</span></span> <span data-ttu-id="ba1be-188">ただし、ストアド プロシージャ、またはコード内の他の場所の名前付きパラメーターを参照する場合 (を追加するときに、<xref:System.Data.OracleClient.OracleParameter>オブジェクトを<xref:System.Data.OracleClient.OracleCommand.Parameters%2A>プロパティ)、コロン (:)、名前付きパラメーターを前に操作を行います。</span><span class="sxs-lookup"><span data-stu-id="ba1be-188">However, in a stored procedure, or when referring to a named parameter elsewhere in your code (for example, when adding <xref:System.Data.OracleClient.OracleParameter> objects to the <xref:System.Data.OracleClient.OracleCommand.Parameters%2A> property), do not precede the named parameter with a colon (:).</span></span> <span data-ttu-id="ba1be-189">.NET Framework Data Provider for Oracle では、コロンが自動的に用意されています。</span><span class="sxs-lookup"><span data-stu-id="ba1be-189">The .NET Framework Data Provider for Oracle supplies the colon automatically.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba1be-190">次の例は、派生クラスのインスタンスを作成します。<xref:System.Data.OracleClient.OracleCommand>および一部のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="ba1be-190">The following example creates an instance of a derived class <xref:System.Data.OracleClient.OracleCommand> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.CommandType#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.CommandType/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.CommandType#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.CommandType/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ba1be-191">値が正しい <see cref="T:System.Data.CommandType" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="ba1be-191">The value was not a valid <see cref="T:System.Data.CommandType" />.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md"><span data-ttu-id="ba1be-192">コマンドの操作</span><span class="sxs-lookup"><span data-stu-id="ba1be-192">Working with Commands</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleConnection Connection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OracleClient.OracleConnection Connection" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.Connection" />
      <MemberSignature Language="VB.NET" Value="Public Property Connection As OracleConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OracleClient::OracleConnection ^ Connection { System::Data::OracleClient::OracleConnection ^ get(); void set(System::Data::OracleClient::OracleConnection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Connection : System.Data.OracleClient.OracleConnection with get, set" Usage="System.Data.OracleClient.OracleCommand.Connection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DbConnectionEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DbConnectionEditor, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DbConnectionEditor, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba1be-193">この <see cref="T:System.Data.OracleClient.OracleCommand" /> のインスタンスで使用する <see cref="T:System.Data.OracleClient.OracleConnection" /> を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ba1be-193">Gets or sets the <see cref="T:System.Data.OracleClient.OracleConnection" /> used by this instance of the <see cref="T:System.Data.OracleClient.OracleCommand" />.</span></span></summary>
        <value><span data-ttu-id="ba1be-194">データ ソースへの接続。</span><span class="sxs-lookup"><span data-stu-id="ba1be-194">The connection to a data source.</span></span> <span data-ttu-id="ba1be-195">既定は null 値です。</span><span class="sxs-lookup"><span data-stu-id="ba1be-195">The default is a null value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba1be-196">設定することはできません、 <xref:System.Data.OracleClient.OracleCommand.Connection%2A>、 <xref:System.Data.OracleClient.OracleCommand.CommandType%2A>、および<xref:System.Data.OracleClient.OracleCommand.CommandText%2A>プロパティの場合は、現在の接続で実行またはフェッチ操作が実行されます。</span><span class="sxs-lookup"><span data-stu-id="ba1be-196">You cannot set the <xref:System.Data.OracleClient.OracleCommand.Connection%2A>, <xref:System.Data.OracleClient.OracleCommand.CommandType%2A>, and <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> properties if the current connection is performing an execute or fetch operation.</span></span>  
  
 <span data-ttu-id="ba1be-197">トランザクションの進行中に <xref:System.Data.OracleClient.OracleCommand.Connection%2A> を設定した場合、<xref:System.Data.OracleClient.OracleCommand.Transaction%2A> プロパティが NULL でなければ、<xref:System.InvalidOperationException> が生成されます。</span><span class="sxs-lookup"><span data-stu-id="ba1be-197">If you set <xref:System.Data.OracleClient.OracleCommand.Connection%2A> while a transaction is in progress and the <xref:System.Data.OracleClient.OracleCommand.Transaction%2A> property is not null, an <xref:System.InvalidOperationException> is generated.</span></span> <span data-ttu-id="ba1be-198">設定した場合<xref:System.Data.OracleClient.OracleCommand.Connection%2A>トランザクションがコミットまたはロールバックされた後、<xref:System.Data.OracleClient.OracleCommand.Transaction%2A>プロパティが null でない、<xref:System.Data.OracleClient.OracleCommand.Transaction%2A>プロパティが null 値に設定します。</span><span class="sxs-lookup"><span data-stu-id="ba1be-198">If you set <xref:System.Data.OracleClient.OracleCommand.Connection%2A> after the transaction has been committed or rolled back, and the <xref:System.Data.OracleClient.OracleCommand.Transaction%2A> property is not null, the <xref:System.Data.OracleClient.OracleCommand.Transaction%2A> property is then set to a null value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba1be-199">次の例では、作成、<xref:System.Data.OracleClient.OracleCommand>および一部のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="ba1be-199">The following example creates an <xref:System.Data.OracleClient.OracleCommand> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.Connection#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.Connection/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.Connection#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.Connection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ba1be-200">トランザクションの進行中に <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> プロパティが変更されました。</span><span class="sxs-lookup"><span data-stu-id="ba1be-200">The <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> property was changed while a transaction was in progress.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md"><span data-ttu-id="ba1be-201">コマンドの操作</span><span class="sxs-lookup"><span data-stu-id="ba1be-201">Working with Commands</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateDbParameter">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbParameter CreateDbParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbParameter CreateDbParameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.CreateDbParameter" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateDbParameter () As DbParameter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbParameter ^ CreateDbParameter();" />
      <MemberSignature Language="F#" Value="override this.CreateDbParameter : unit -&gt; System.Data.Common.DbParameter" Usage="oracleCommand.CreateDbParameter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbParameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateParameter">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleParameter CreateParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleParameter CreateParameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.CreateParameter" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateParameter () As OracleParameter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleParameter ^ CreateParameter();" />
      <MemberSignature Language="F#" Value="override this.CreateParameter : unit -&gt; System.Data.OracleClient.OracleParameter" Usage="oracleCommand.CreateParameter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleParameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ba1be-202"><see cref="T:System.Data.OracleClient.OracleParameter" /> オブジェクトの新しいインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="ba1be-202">Creates a new instance of an <see cref="T:System.Data.OracleClient.OracleParameter" /> object.</span></span></summary>
        <returns><span data-ttu-id="ba1be-203"><see cref="T:System.Data.OracleClient.OracleParameter" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ba1be-203">An <see cref="T:System.Data.OracleClient.OracleParameter" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba1be-204"><xref:System.Data.OracleClient.OracleCommand.CreateParameter%2A>メソッドは、厳密に型指定されたバージョンの<xref:System.Data.IDbCommand.CreateParameter%2A>します。</span><span class="sxs-lookup"><span data-stu-id="ba1be-204">The <xref:System.Data.OracleClient.OracleCommand.CreateParameter%2A> method is a strongly-typed version of <xref:System.Data.IDbCommand.CreateParameter%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md"><span data-ttu-id="ba1be-205">コマンドの操作</span><span class="sxs-lookup"><span data-stu-id="ba1be-205">Working with Commands</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DbConnection">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbConnection DbConnection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbConnection DbConnection" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.DbConnection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Property DbConnection As DbConnection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbConnection ^ DbConnection { System::Data::Common::DbConnection ^ get(); void set(System::Data::Common::DbConnection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DbConnection : System.Data.Common.DbConnection with get, set" Usage="System.Data.OracleClient.OracleCommand.DbConnection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DbParameterCollection">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbParameterCollection DbParameterCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbParameterCollection DbParameterCollection" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.DbParameterCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DbParameterCollection As DbParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbParameterCollection ^ DbParameterCollection { System::Data::Common::DbParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DbParameterCollection : System.Data.Common.DbParameterCollection" Usage="System.Data.OracleClient.OracleCommand.DbParameterCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DbTransaction">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbTransaction DbTransaction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbTransaction DbTransaction" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.DbTransaction" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Property DbTransaction As DbTransaction" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbTransaction ^ DbTransaction { System::Data::Common::DbTransaction ^ get(); void set(System::Data::Common::DbTransaction ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DbTransaction : System.Data.Common.DbTransaction with get, set" Usage="System.Data.OracleClient.OracleCommand.DbTransaction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbTransaction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DesignTimeVisible">
      <MemberSignature Language="C#" Value="public override bool DesignTimeVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DesignTimeVisible" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.DesignTimeVisible" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property DesignTimeVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool DesignTimeVisible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DesignTimeVisible : bool with get, set" Usage="System.Data.OracleClient.OracleCommand.DesignTimeVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignOnly(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba1be-206">カスタマイズしたインターフェイス コントロールにコマンド オブジェクトを表示する必要があるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ba1be-206">Gets or sets a value indicating whether the command object should be visible in a customized interface control.</span></span></summary>
        <value><span data-ttu-id="ba1be-207">コマンド オブジェクトをコントロールに表示する必要がある場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ba1be-207"><see langword="true" />, if the command object should be visible in a control; otherwise <see langword="false" />.</span></span> <span data-ttu-id="ba1be-208">既定値は、<see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="ba1be-208">The default is <see langword="true" />.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md"><span data-ttu-id="ba1be-209">コマンドの操作</span><span class="sxs-lookup"><span data-stu-id="ba1be-209">Working with Commands</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ExecuteDbDataReader">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbDataReader ExecuteDbDataReader (System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbDataReader ExecuteDbDataReader(valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.ExecuteDbDataReader(System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ExecuteDbDataReader (behavior As CommandBehavior) As DbDataReader" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbDataReader ^ ExecuteDbDataReader(System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.ExecuteDbDataReader : System.Data.CommandBehavior -&gt; System.Data.Common.DbDataReader" Usage="oracleCommand.ExecuteDbDataReader behavior" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="behavior">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteNonQuery">
      <MemberSignature Language="C#" Value="public override int ExecuteNonQuery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ExecuteNonQuery() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.ExecuteNonQuery" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ExecuteNonQuery () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ExecuteNonQuery();" />
      <MemberSignature Language="F#" Value="override this.ExecuteNonQuery : unit -&gt; int" Usage="oracleCommand.ExecuteNonQuery " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ba1be-210"><see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> に対して SQL ステートメントを実行し、影響を受けた行数を返します。</span><span class="sxs-lookup"><span data-stu-id="ba1be-210">Executes an SQL statement against the <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> and returns the number of rows affected.</span></span></summary>
        <returns><span data-ttu-id="ba1be-211">UPDATE、INSERT、DELETE の各ステートメントで、戻り値はそのコマンドの影響を受ける行の数です。</span><span class="sxs-lookup"><span data-stu-id="ba1be-211">For UPDATE, INSERT, and DELETE statements, the return value is the number of rows affected by the command.</span></span> <span data-ttu-id="ba1be-212">CREATE TABLE や DROP TABLE などのステートメントでの戻り値は、0 です。</span><span class="sxs-lookup"><span data-stu-id="ba1be-212">For CREATE TABLE and DROP TABLE statements, the return value is 0.</span></span> <span data-ttu-id="ba1be-213">その他のすべての種類のステートメントでは、戻り値は -1 です。</span><span class="sxs-lookup"><span data-stu-id="ba1be-213">For all other types of statements, the return value is -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba1be-214">使用することができます<xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A>カタログ操作 (データベースの構造をクエリまたはテーブルなどのデータベース オブジェクトの作成など) を実行するかを使用せず、データベース内のデータを変更する、<xref:System.Data.DataSet>で実行 UPDATE、INSERT、または削除ステートメント。</span><span class="sxs-lookup"><span data-stu-id="ba1be-214">You can use <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A> to perform catalog operations (for example, querying the structure of a database or creating database objects such as tables); or to change the data in a database, without using a <xref:System.Data.DataSet>, by executing UPDATE, INSERT, or DELETE statements.</span></span>  
  
 <span data-ttu-id="ba1be-215"><xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A>戻り値の行、すべての出力パラメーターまたはパラメーターにマップされている値には、データが設定されますを返すしていません。</span><span class="sxs-lookup"><span data-stu-id="ba1be-215">Although <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A> does not return any rows, any output parameters or return values mapped to parameters are populated with data.</span></span>  
  
 <span data-ttu-id="ba1be-216">UPDATE、INSERT、DELETE の各ステートメントで、戻り値はそのコマンドの影響を受ける行の数です。</span><span class="sxs-lookup"><span data-stu-id="ba1be-216">For UPDATE, INSERT, and DELETE statements, the return value is the number of rows affected by the command.</span></span> <span data-ttu-id="ba1be-217">CREATE TABLE や DROP TABLE などのステートメントでの戻り値は、0 です。</span><span class="sxs-lookup"><span data-stu-id="ba1be-217">For CREATE TABLE and DROP TABLE statements, the return value is 0.</span></span> <span data-ttu-id="ba1be-218">その他のすべての種類のステートメントでは、戻り値は -1 です。</span><span class="sxs-lookup"><span data-stu-id="ba1be-218">For all other types of statements, the return value is -1.</span></span> <span data-ttu-id="ba1be-219">ロールバックが発生した場合、戻り値も-1 にします。</span><span class="sxs-lookup"><span data-stu-id="ba1be-219">If a rollback occurs, the return value is also -1.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba1be-220">次の例では、作成、<xref:System.Data.OracleClient.OracleCommand>を使用して、それを実行および<xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A>します。</span><span class="sxs-lookup"><span data-stu-id="ba1be-220">The following example creates an <xref:System.Data.OracleClient.OracleCommand> and then executes it by using <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A>.</span></span> <span data-ttu-id="ba1be-221">例には、SQL ステートメント (UPDATE、INSERT、DELETE など) である文字列と、データベースに接続するために使用する文字列が渡されます。</span><span class="sxs-lookup"><span data-stu-id="ba1be-221">The example is passed a string that is an SQL statement (such as UPDATE, INSERT, or DELETE) and a string to use to connect to the database.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.ExecuteNonQuery#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.ExecuteNonQuery/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.ExecuteNonQuery#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.ExecuteNonQuery/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ba1be-222">接続が存在しません。</span><span class="sxs-lookup"><span data-stu-id="ba1be-222">The connection does not exist.</span></span>  
  
<span data-ttu-id="ba1be-223">または</span><span class="sxs-lookup"><span data-stu-id="ba1be-223">-or-</span></span> 
<span data-ttu-id="ba1be-224">接続が開かれていません。</span><span class="sxs-lookup"><span data-stu-id="ba1be-224">The connection is not open.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md"><span data-ttu-id="ba1be-225">コマンドの操作</span><span class="sxs-lookup"><span data-stu-id="ba1be-225">Working with Commands</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ExecuteOracleNonQuery">
      <MemberSignature Language="C#" Value="public int ExecuteOracleNonQuery (out System.Data.OracleClient.OracleString rowid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 ExecuteOracleNonQuery([out] valuetype System.Data.OracleClient.OracleString&amp; rowid) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery(System.Data.OracleClient.OracleString@)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteOracleNonQuery (ByRef rowid As OracleString) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int ExecuteOracleNonQuery([Runtime::InteropServices::Out] System::Data::OracleClient::OracleString % rowid);" />
      <MemberSignature Language="F#" Value="member this.ExecuteOracleNonQuery :  -&gt; int" Usage="oracleCommand.ExecuteOracleNonQuery rowid" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowid" Type="System.Data.OracleClient.OracleString" RefType="out" />
      </Parameters>
      <Docs>
        <param name="rowid"><span data-ttu-id="ba1be-226">サーバーの実際の行 ID の base64 文字列表現。</span><span class="sxs-lookup"><span data-stu-id="ba1be-226">A base64 string representation of the actual row ID in the server.</span></span></param>
        <summary><span data-ttu-id="ba1be-227"><see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> に対して SQL ステートメントを実行し、影響を受けた行数を返します。</span><span class="sxs-lookup"><span data-stu-id="ba1be-227">Executes an SQL statement against the <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> and returns the number of rows affected.</span></span></summary>
        <returns><span data-ttu-id="ba1be-228">UPDATE、INSERT、DELETE の各ステートメントで、戻り値はそのコマンドの影響を受ける行の数です。</span><span class="sxs-lookup"><span data-stu-id="ba1be-228">For UPDATE, INSERT, and DELETE statements, the return value is the number of rows affected by the command.</span></span> <span data-ttu-id="ba1be-229">CREATE TABLE や DROP TABLE などのステートメントでの戻り値は、0 です。</span><span class="sxs-lookup"><span data-stu-id="ba1be-229">For CREATE TABLE and DROP TABLE statements, the return value is 0.</span></span> <span data-ttu-id="ba1be-230">その他のすべての種類のステートメントでは、戻り値は -1 です。</span><span class="sxs-lookup"><span data-stu-id="ba1be-230">For all other types of statements, the return value is -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba1be-231">使用することができます<xref:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery%2A>カタログ操作 (データベースの構造をクエリまたはテーブルなどのデータベース オブジェクトの作成など) を実行するかを使用せず、データベース内のデータを変更する、<xref:System.Data.DataSet>で実行 UPDATE、INSERT、または削除ステートメント。</span><span class="sxs-lookup"><span data-stu-id="ba1be-231">You can use <xref:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery%2A> to perform catalog operations (for example, querying the structure of a database or creating database objects such as tables); or to change the data in a database, without using a <xref:System.Data.DataSet>, by executing UPDATE, INSERT, or DELETE statements.</span></span>  
  
 <span data-ttu-id="ba1be-232"><xref:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery%2A> 異なる<xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A>を返す点で`rowid`に 1 行に影響を与える INSERT、DELETE、または UPDATE ステートメントを実行している場合、出力パラメーターとして。</span><span class="sxs-lookup"><span data-stu-id="ba1be-232"><xref:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery%2A> differs from <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A> in that it returns `rowid` as an output parameter if you are executing an INSERT, DELETE, or UPDATE statement that affects exactly one row.</span></span> <span data-ttu-id="ba1be-233">これにより、その後、関連するクエリのパフォーマンスが向上することができる Oracle データベース内の行を一意に識別できます。</span><span class="sxs-lookup"><span data-stu-id="ba1be-233">This allows you to uniquely identify a row in the Oracle database, which can allow you to increase performance in subsequent, related queries.</span></span>  
  
 <span data-ttu-id="ba1be-234"><xref:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery%2A>戻り値の行、すべての出力パラメーターまたはパラメーターにマップされている値には、データが設定されますを返すしていません。</span><span class="sxs-lookup"><span data-stu-id="ba1be-234">Although <xref:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery%2A> does not return any rows, any output parameters or return values mapped to parameters are populated with data.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ba1be-235">接続が存在しません。</span><span class="sxs-lookup"><span data-stu-id="ba1be-235">The connection does not exist.</span></span>  
  
<span data-ttu-id="ba1be-236">または</span><span class="sxs-lookup"><span data-stu-id="ba1be-236">-or-</span></span> 
<span data-ttu-id="ba1be-237">接続が開かれていません。</span><span class="sxs-lookup"><span data-stu-id="ba1be-237">The connection is not open.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md"><span data-ttu-id="ba1be-238">コマンドの操作</span><span class="sxs-lookup"><span data-stu-id="ba1be-238">Working with Commands</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ExecuteOracleScalar">
      <MemberSignature Language="C#" Value="public object ExecuteOracleScalar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ExecuteOracleScalar() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.ExecuteOracleScalar" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteOracleScalar () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ExecuteOracleScalar();" />
      <MemberSignature Language="F#" Value="member this.ExecuteOracleScalar : unit -&gt; obj" Usage="oracleCommand.ExecuteOracleScalar " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ba1be-239">クエリを実行し、そのクエリが Oracle 固有のデータ型で返す結果セットの最初の行にある最初の列を返します。</span><span class="sxs-lookup"><span data-stu-id="ba1be-239">Executes the query, and returns the first column of the first row in the result set returned by the query as an Oracle-specific data type.</span></span> <span data-ttu-id="ba1be-240">追加の列または行は無視されます。</span><span class="sxs-lookup"><span data-stu-id="ba1be-240">Extra columns or rows are ignored.</span></span></summary>
        <returns><span data-ttu-id="ba1be-241">Oracle 固有のデータ型の結果セットの最初の行の最初の列。結果が <see langword="REF CURSOR" /> の場合は、null 参照。</span><span class="sxs-lookup"><span data-stu-id="ba1be-241">The first column of the first row in the result set as an Oracle-specific data type, or a null reference if the result is a <see langword="REF CURSOR" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba1be-242">使用して、<xref:System.Data.OracleClient.OracleCommand.ExecuteOracleScalar%2A>データベースから 1 つの値 (たとえば、集計値) を取得します。</span><span class="sxs-lookup"><span data-stu-id="ba1be-242">Use the <xref:System.Data.OracleClient.OracleCommand.ExecuteOracleScalar%2A> method to retrieve a single value (for example, an aggregate value) from a database.</span></span> <span data-ttu-id="ba1be-243">使用してよりも少ないコードが必要です、<xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>メソッド、および操作によって返されるデータから 1 つの値を生成するために必要な<xref:System.Data.OracleClient.OracleDataReader>します。</span><span class="sxs-lookup"><span data-stu-id="ba1be-243">This requires less code than using the <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> method, and then performing the operations necessary to generate the single value from the data returned by an <xref:System.Data.OracleClient.OracleDataReader>.</span></span>  
  
 <span data-ttu-id="ba1be-244">一般的な<xref:System.Data.OracleClient.OracleCommand.ExecuteOracleScalar%2A>クエリは、次の c# の例のように書式設定できます。</span><span class="sxs-lookup"><span data-stu-id="ba1be-244">A typical <xref:System.Data.OracleClient.OracleCommand.ExecuteOracleScalar%2A> query can be formatted as in the following C# example:</span></span>  
  
```  
command.CommandText = "SELECT COUNT(*) AS NumberOfRegions FROM Region";  
count = command.ExecuteOracleScalar();  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md"><span data-ttu-id="ba1be-245">コマンドの操作</span><span class="sxs-lookup"><span data-stu-id="ba1be-245">Working with Commands</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ExecuteReader">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ba1be-246"><see cref="P:System.Data.OracleClient.OracleCommand.CommandText" /> を <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> に送信し、<see cref="T:System.Data.OracleClient.OracleDataReader" /> を構築します。</span><span class="sxs-lookup"><span data-stu-id="ba1be-246">Sends the <see cref="P:System.Data.OracleClient.OracleCommand.CommandText" /> to the <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> and builds an <see cref="T:System.Data.OracleClient.OracleDataReader" />.</span></span></summary>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md"><span data-ttu-id="ba1be-247">コマンドの操作</span><span class="sxs-lookup"><span data-stu-id="ba1be-247">Working with Commands</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExecuteReader">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleDataReader ExecuteReader ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleDataReader ExecuteReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.ExecuteReader" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteReader () As OracleDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleDataReader ^ ExecuteReader();" />
      <MemberSignature Language="F#" Value="override this.ExecuteReader : unit -&gt; System.Data.OracleClient.OracleDataReader" Usage="oracleCommand.ExecuteReader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleDataReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ba1be-248"><see cref="P:System.Data.OracleClient.OracleCommand.CommandText" /> を <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> に送信し、<see cref="T:System.Data.OracleClient.OracleDataReader" /> を構築します。</span><span class="sxs-lookup"><span data-stu-id="ba1be-248">Sends the <see cref="P:System.Data.OracleClient.OracleCommand.CommandText" /> to the <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> and builds an <see cref="T:System.Data.OracleClient.OracleDataReader" />.</span></span></summary>
        <returns><span data-ttu-id="ba1be-249"><see cref="T:System.Data.OracleClient.OracleDataReader" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ba1be-249">An <see cref="T:System.Data.OracleClient.OracleDataReader" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba1be-250">ときに、<xref:System.Data.OracleClient.OracleCommand.CommandType%2A>プロパティに設定されて`StoredProcedure`、<xref:System.Data.OracleClient.OracleCommand.CommandText%2A>プロパティは、ストアド プロシージャの名前に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ba1be-250">When the <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> property is set to `StoredProcedure`, the <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> property should be set to the name of the stored procedure.</span></span> <span data-ttu-id="ba1be-251">コマンドは、呼び出すときに、このストアド プロシージャを実行<xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>します。</span><span class="sxs-lookup"><span data-stu-id="ba1be-251">The command then executes this stored procedure when you call <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>.</span></span>  
  
 <span data-ttu-id="ba1be-252">1 つ以上<xref:System.Data.OracleClient.OracleDataReader>一度に開くことができます。</span><span class="sxs-lookup"><span data-stu-id="ba1be-252">More than one <xref:System.Data.OracleClient.OracleDataReader> can be open at any given time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba1be-253">次の例では、作成、 <xref:System.Data.OracleClient.OracleCommand>、して、SQL SELECT ステートメントである文字列と、データ ソースへの接続に使用する文字列を渡すことで実行します。</span><span class="sxs-lookup"><span data-stu-id="ba1be-253">The following example creates an <xref:System.Data.OracleClient.OracleCommand>, and then executes it by passing a string that is an SQL SELECT statement, and a string to use to connect to the data source.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.ExecuteReader1#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.ExecuteReader1/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.ExecuteReader1#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.ExecuteReader1/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md"><span data-ttu-id="ba1be-254">コマンドの操作</span><span class="sxs-lookup"><span data-stu-id="ba1be-254">Working with Commands</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ExecuteReader">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleDataReader ExecuteReader (System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleDataReader ExecuteReader(valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.ExecuteReader(System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteReader (behavior As CommandBehavior) As OracleDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleDataReader ^ ExecuteReader(System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.ExecuteReader : System.Data.CommandBehavior -&gt; System.Data.OracleClient.OracleDataReader" Usage="oracleCommand.ExecuteReader behavior" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="behavior"><span data-ttu-id="ba1be-255"><see cref="T:System.Data.CommandBehavior" /> 値のいずれか。</span><span class="sxs-lookup"><span data-stu-id="ba1be-255">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span></span></param>
        <summary><span data-ttu-id="ba1be-256"><see cref="P:System.Data.OracleClient.OracleCommand.CommandText" /> を <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> に送信し、<see cref="T:System.Data.CommandBehavior" /> 値のいずれかを使用して <see cref="T:System.Data.OracleClient.OracleDataReader" /> を構築します。</span><span class="sxs-lookup"><span data-stu-id="ba1be-256">Sends the <see cref="P:System.Data.OracleClient.OracleCommand.CommandText" /> to the <see cref="P:System.Data.OracleClient.OracleCommand.Connection" />, and builds an <see cref="T:System.Data.OracleClient.OracleDataReader" /> using one of the <see cref="T:System.Data.CommandBehavior" /> values.</span></span></summary>
        <returns><span data-ttu-id="ba1be-257"><see cref="T:System.Data.OracleClient.OracleDataReader" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ba1be-257">An <see cref="T:System.Data.OracleClient.OracleDataReader" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba1be-258">SQL ステートメントを 1 つの行のみを返す場合を指定する`SingleRow`として、<xref:System.Data.CommandBehavior>値は、アプリケーションのパフォーマンスを向上させることがあります。</span><span class="sxs-lookup"><span data-stu-id="ba1be-258">If you expect your SQL statement to return only a single row, specifying `SingleRow` as the <xref:System.Data.CommandBehavior> value may improve application performance.</span></span>  
  
 <span data-ttu-id="ba1be-259">ときに、<xref:System.Data.OracleClient.OracleCommand.CommandType%2A>プロパティに設定されて`StoredProcedure`、<xref:System.Data.OracleClient.OracleCommand.CommandText%2A>プロパティは、ストアド プロシージャの名前に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ba1be-259">When the <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> property is set to `StoredProcedure`, the <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> property should be set to the name of the stored procedure.</span></span> <span data-ttu-id="ba1be-260">コマンドは、呼び出すときに、このストアド プロシージャを実行<xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>します。</span><span class="sxs-lookup"><span data-stu-id="ba1be-260">The command then executes this stored procedure when you call <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>.</span></span>  
  
 <span data-ttu-id="ba1be-261"><xref:System.Data.OracleClient.OracleDataReader>大きなバイナリ値を効率的に読み取ることができる、特殊なモードをサポートしています。</span><span class="sxs-lookup"><span data-stu-id="ba1be-261">The <xref:System.Data.OracleClient.OracleDataReader> supports a special mode that enables large binary values to be read efficiently.</span></span> <span data-ttu-id="ba1be-262">詳細については、次を参照してください。、`SequentialAccess`設定<xref:System.Data.CommandBehavior>します。</span><span class="sxs-lookup"><span data-stu-id="ba1be-262">For more information, see the `SequentialAccess` setting for <xref:System.Data.CommandBehavior>.</span></span>  
  
 <span data-ttu-id="ba1be-263">1 つ以上<xref:System.Data.OracleClient.OracleDataReader>一度に開くことができます。</span><span class="sxs-lookup"><span data-stu-id="ba1be-263">More than one <xref:System.Data.OracleClient.OracleDataReader> can be open at any given time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba1be-264">次の例では、作成、 <xref:System.Data.OracleClient.OracleCommand>、して、SQL SELECT ステートメントである文字列と、データベースへの接続に使用する文字列を渡すことで実行します。</span><span class="sxs-lookup"><span data-stu-id="ba1be-264">The following example creates an <xref:System.Data.OracleClient.OracleCommand>, and then executes it by passing a string that is an SQL SELECT statement, and a string to use to connect to the database.</span></span> <span data-ttu-id="ba1be-265"><xref:System.Data.CommandBehavior> 設定されている、<xref:System.Data.CommandBehavior.CloseConnection>します。</span><span class="sxs-lookup"><span data-stu-id="ba1be-265"><xref:System.Data.CommandBehavior> is then set to <xref:System.Data.CommandBehavior.CloseConnection>.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.ExecuteReader2#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.ExecuteReader2/CS/mysample.cs#1)]
 [!code-vb[Classic WebData OracleCommand.ExecuteReader2#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.ExecuteReader2/VB/mysample.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md"><span data-ttu-id="ba1be-266">コマンドの操作</span><span class="sxs-lookup"><span data-stu-id="ba1be-266">Working with Commands</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ExecuteScalar">
      <MemberSignature Language="C#" Value="public override object ExecuteScalar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ExecuteScalar() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.ExecuteScalar" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ExecuteScalar () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ExecuteScalar();" />
      <MemberSignature Language="F#" Value="override this.ExecuteScalar : unit -&gt; obj" Usage="oracleCommand.ExecuteScalar " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ba1be-267">クエリを実行し、そのクエリが .NET Framework のデータ型で返す結果セットの最初の行の最初の列を返します。</span><span class="sxs-lookup"><span data-stu-id="ba1be-267">Executes the query, and returns the first column of the first row in the result set returned by the query as a .NET Framework data type.</span></span> <span data-ttu-id="ba1be-268">追加の列または行は無視されます。</span><span class="sxs-lookup"><span data-stu-id="ba1be-268">Extra columns or rows are ignored.</span></span></summary>
        <returns><span data-ttu-id="ba1be-269">.NET Framework 固有のデータ型の結果セットの最初の行の最初の列。結果セットが空であるか、結果が <see langword="REF CURSOR" /> の場合、null 参照。</span><span class="sxs-lookup"><span data-stu-id="ba1be-269">The first column of the first row in the result set as a .NET Framework data type, or a null reference if the result set is empty or the result is a <see langword="REF CURSOR" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba1be-270">使用して、<xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A>データベースから 1 つの値 (たとえば、集計値) を取得します。</span><span class="sxs-lookup"><span data-stu-id="ba1be-270">Use the <xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A> method to retrieve a single value (for example, an aggregate value) from a database.</span></span> <span data-ttu-id="ba1be-271">使用してよりも少ないコードが必要です、<xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>メソッド、および操作によって返されるデータから 1 つの値を生成するために必要な<xref:System.Data.OracleClient.OracleDataReader>します。</span><span class="sxs-lookup"><span data-stu-id="ba1be-271">This requires less code than using the <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> method, and then performing the operations necessary to generate the single value from the data returned by an <xref:System.Data.OracleClient.OracleDataReader>.</span></span>  
  
 <span data-ttu-id="ba1be-272">一般的な<xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A>クエリは、次の c# の例のように書式設定できます。</span><span class="sxs-lookup"><span data-stu-id="ba1be-272">A typical <xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A> query can be formatted as in the following C# example:</span></span>  
  
```  
CommandText = "SELECT COUNT(*) FROM Region";  
Int32 count = (int32) ExecuteScalar();  
```  
  
   
  
## Examples  
 <span data-ttu-id="ba1be-273">次の例では、作成、<xref:System.Data.OracleClient.OracleCommand>しを使用して実行します<xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A>します。</span><span class="sxs-lookup"><span data-stu-id="ba1be-273">The following example creates an <xref:System.Data.OracleClient.OracleCommand> and then executes it using <xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A>.</span></span> <span data-ttu-id="ba1be-274">例には、集計の結果を返さない SQL ステートメントである文字列と、データベースに接続するために使用する文字列が渡されます。</span><span class="sxs-lookup"><span data-stu-id="ba1be-274">The example is passed a string that is an SQL statement that returns an aggregate result, and a string to use to connect to the database.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.ExecuteScalar#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.ExecuteScalar/CS/mysample.cs#1)]
 [!code-vb[Classic WebData OracleCommand.ExecuteScalar#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.ExecuteScalar/VB/mysample.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md"><span data-ttu-id="ba1be-275">コマンドの操作</span><span class="sxs-lookup"><span data-stu-id="ba1be-275">Working with Commands</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleParameterCollection Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OracleClient.OracleParameterCollection Parameters" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parameters As OracleParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OracleClient::OracleParameterCollection ^ Parameters { System::Data::OracleClient::OracleParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parameters : System.Data.OracleClient.OracleParameterCollection" Usage="System.Data.OracleClient.OracleCommand.Parameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba1be-276"><see cref="T:System.Data.OracleClient.OracleParameterCollection" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="ba1be-276">Gets the <see cref="T:System.Data.OracleClient.OracleParameterCollection" />.</span></span></summary>
        <value><span data-ttu-id="ba1be-277">SQL ステートメントまたはストアド プロシージャのパラメーター。</span><span class="sxs-lookup"><span data-stu-id="ba1be-277">The parameters of the SQL statement or stored procedure.</span></span> <span data-ttu-id="ba1be-278">既定値は空のコレクションです。</span><span class="sxs-lookup"><span data-stu-id="ba1be-278">The default is an empty collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba1be-279">ときに、<xref:System.Data.OracleClient.OracleCommand.CommandType%2A>プロパティに設定されて`StoredProcedure`、<xref:System.Data.OracleClient.OracleCommand.CommandText%2A>プロパティは、ストアド プロシージャの名前に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ba1be-279">When the <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> property is set to `StoredProcedure`, the <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> property should be set to the name of the stored procedure.</span></span> <span data-ttu-id="ba1be-280">ユーザー ストアド プロシージャ名に特殊文字が含まれている場合は、エスケープ文字構文を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ba1be-280">The user may be required to use escape character syntax if the stored procedure name contains any special characters.</span></span> <span data-ttu-id="ba1be-281">コマンドは、Execute メソッドのいずれかを呼び出すときに、このストアド プロシージャを実行します。</span><span class="sxs-lookup"><span data-stu-id="ba1be-281">The command executes this stored procedure when you call one of the Execute methods.</span></span>  
  
 <span data-ttu-id="ba1be-282">.NET Framework Data Provider for Oracle が疑問符 (?) プレース ホルダーをサポートしていないと呼ばれる SQL ステートメントにパラメーターを渡す、<xref:System.Data.OracleClient.OracleCommand>の`CommandType.Text`します。</span><span class="sxs-lookup"><span data-stu-id="ba1be-282">The .NET Framework Data Provider for Oracle does not support the question mark (?) placeholder for passing parameters to an SQL statement called by an <xref:System.Data.OracleClient.OracleCommand> of `CommandType.Text`.</span></span> <span data-ttu-id="ba1be-283">ここでは、名前付きパラメーターを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ba1be-283">In this case, named parameters must be used.</span></span> <span data-ttu-id="ba1be-284">次に例を示します。</span><span class="sxs-lookup"><span data-stu-id="ba1be-284">For example:</span></span>  
  
```  
SELECT * FROM Customers WHERE CustomerID = :pCustomerID  
```  
  
 <span data-ttu-id="ba1be-285">呼び出すときに、SQL ステートメントの名前付きパラメーターを使用して、<xref:System.Data.OracleClient.OracleCommand>の`CommandType.Text`パラメーター名にコロン (:) を付ける必要があります。</span><span class="sxs-lookup"><span data-stu-id="ba1be-285">When using named parameters in an SQL statement called by an <xref:System.Data.OracleClient.OracleCommand> of `CommandType.Text`, you must precede the parameter name with a colon (:).</span></span> <span data-ttu-id="ba1be-286">ただし、ストアド プロシージャ、またはコード内の他の場所の名前付きパラメーターを参照する場合 (を追加するときに、<xref:System.Data.OracleClient.OracleParameter>オブジェクトを<xref:System.Data.OracleClient.OracleCommand.Parameters%2A>プロパティ)、コロン (:)、名前付きパラメーターを前に操作を行います。</span><span class="sxs-lookup"><span data-stu-id="ba1be-286">However, in a stored procedure, or when referring to a named parameter elsewhere in your code (for example, when adding <xref:System.Data.OracleClient.OracleParameter> objects to the <xref:System.Data.OracleClient.OracleCommand.Parameters%2A> property), do not precede the named parameter with a colon (:).</span></span> <span data-ttu-id="ba1be-287">.NET Framework Data Provider for Oracle では、コロンが自動的に用意されています。</span><span class="sxs-lookup"><span data-stu-id="ba1be-287">The .NET Framework Data Provider for Oracle supplies the colon automatically.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba1be-288">次の例では、作成、<xref:System.Data.OracleClient.OracleCommand>し、そのパラメーターを表示します。</span><span class="sxs-lookup"><span data-stu-id="ba1be-288">The following example creates an <xref:System.Data.OracleClient.OracleCommand> and displays its parameters.</span></span> <span data-ttu-id="ba1be-289">これを実現する、メソッドに渡されますが、 <xref:System.Data.OracleClient.OracleConnection>、SQL SELECT ステートメント、およびの配列であるクエリ文字列<xref:System.Data.OracleClient.OracleParameter>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ba1be-289">To accomplish this, the method is passed an <xref:System.Data.OracleClient.OracleConnection>, a query string that is an SQL SELECT statement, and an array of <xref:System.Data.OracleClient.OracleParameter> objects.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.Parameters#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.Parameters/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.Parameters#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.Parameters/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md"><span data-ttu-id="ba1be-290">コマンドの操作</span><span class="sxs-lookup"><span data-stu-id="ba1be-290">Working with Commands</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Prepare">
      <MemberSignature Language="C#" Value="public override void Prepare ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Prepare() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.Prepare" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Prepare ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Prepare();" />
      <MemberSignature Language="F#" Value="override this.Prepare : unit -&gt; unit" Usage="oracleCommand.Prepare " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ba1be-291">データ ソースに対する準備済みの (コンパイルされた) コマンドを作成します。</span><span class="sxs-lookup"><span data-stu-id="ba1be-291">Creates a prepared (or compiled) version of the command at the data source.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba1be-292">呼び出す前に<xref:System.Data.OracleClient.OracleCommand.Prepare%2A>、準備されたステートメントの各パラメーターのデータ型を指定します。</span><span class="sxs-lookup"><span data-stu-id="ba1be-292">Before you call <xref:System.Data.OracleClient.OracleCommand.Prepare%2A>, specify the data type of each parameter in the statement to be prepared.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ba1be-293"><see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> が設定されていません。</span><span class="sxs-lookup"><span data-stu-id="ba1be-293">The <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> is not set.</span></span>  
  
<span data-ttu-id="ba1be-294">または</span><span class="sxs-lookup"><span data-stu-id="ba1be-294">-or-</span></span> 
<span data-ttu-id="ba1be-295"><see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> が <see cref="M:System.Data.OracleClient.OracleConnection.Open" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="ba1be-295">The <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> is not <see cref="M:System.Data.OracleClient.OracleConnection.Open" />.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md"><span data-ttu-id="ba1be-296">コマンドの操作</span><span class="sxs-lookup"><span data-stu-id="ba1be-296">Working with Commands</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ResetCommandTimeout">
      <MemberSignature Language="C#" Value="public void ResetCommandTimeout ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetCommandTimeout() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.ResetCommandTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetCommandTimeout ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetCommandTimeout();" />
      <MemberSignature Language="F#" Value="member this.ResetCommandTimeout : unit -&gt; unit" Usage="oracleCommand.ResetCommandTimeout " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ba1be-297"><see cref="P:System.Data.OracleClient.OracleCommand.CommandTimeout" /> プロパティを既定値にリセットします。</span><span class="sxs-lookup"><span data-stu-id="ba1be-297">Resets the <see cref="P:System.Data.OracleClient.OracleCommand.CommandTimeout" /> property to the default value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba1be-298">既定値、<xref:System.Data.OracleClient.OracleCommand.CommandTimeout%2A>は 30 秒です。</span><span class="sxs-lookup"><span data-stu-id="ba1be-298">The default value of the <xref:System.Data.OracleClient.OracleCommand.CommandTimeout%2A> is 30 seconds.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md"><span data-ttu-id="ba1be-299">コマンドの操作</span><span class="sxs-lookup"><span data-stu-id="ba1be-299">Working with Commands</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbCommand.CreateParameter">
      <MemberSignature Language="C#" Value="System.Data.IDbDataParameter IDbCommand.CreateParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Data.IDbDataParameter System.Data.IDbCommand.CreateParameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.System#Data#IDbCommand#CreateParameter" />
      <MemberSignature Language="VB.NET" Value="Function CreateParameter () As IDbDataParameter Implements IDbCommand.CreateParameter" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Data::IDbDataParameter ^ System.Data.IDbCommand.CreateParameter() = System::Data::IDbCommand::CreateParameter;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbCommand.CreateParameter</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbDataParameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ba1be-300"><see cref="T:System.Data.IDbDataParameter" /> オブジェクトの新しいインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="ba1be-300">Creates a new instance of an <see cref="T:System.Data.IDbDataParameter" /> object.</span></span></summary>
        <returns><span data-ttu-id="ba1be-301">IDbDataParameter オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ba1be-301">An IDbDataParameter object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="ba1be-302">詳細については、「<xref:System.Data.IDbCommand.CreateParameter>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ba1be-302">For more information, see <xref:System.Data.IDbCommand.CreateParameter>.</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbCommand.ExecuteReader">
      <MemberSignature Language="C#" Value="System.Data.IDataReader IDbCommand.ExecuteReader ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Data.IDataReader System.Data.IDbCommand.ExecuteReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.System#Data#IDbCommand#ExecuteReader" />
      <MemberSignature Language="VB.NET" Value="Function ExecuteReader () As IDataReader Implements IDbCommand.ExecuteReader" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Data::IDataReader ^ System.Data.IDbCommand.ExecuteReader() = System::Data::IDbCommand::ExecuteReader;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbCommand.ExecuteReader</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDataReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ba1be-303"><see cref="P:System.Data.IDbCommand.Connection" /> に対して <see cref="P:System.Data.IDbCommand.CommandText" /> を実行し、<see cref="P:System.Data.IDataReader" /> をビルドします。</span><span class="sxs-lookup"><span data-stu-id="ba1be-303">Executes the <see cref="P:System.Data.IDbCommand.CommandText" /> against the <see cref="P:System.Data.IDbCommand.Connection" /> and builds an <see cref="P:System.Data.IDataReader" />.</span></span></summary>
        <returns><span data-ttu-id="ba1be-304"><see cref="P:System.Data.IDataReader" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ba1be-304">An <see cref="P:System.Data.IDataReader" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbCommand.ExecuteReader">
      <MemberSignature Language="C#" Value="System.Data.IDataReader IDbCommand.ExecuteReader (System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Data.IDataReader System.Data.IDbCommand.ExecuteReader(valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.System#Data#IDbCommand#ExecuteReader(System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Function ExecuteReader (behavior As CommandBehavior) As IDataReader Implements IDbCommand.ExecuteReader" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Data::IDataReader ^ System.Data.IDbCommand.ExecuteReader(System::Data::CommandBehavior behavior) = System::Data::IDbCommand::ExecuteReader;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbCommand.ExecuteReader(System.Data.CommandBehavior)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" Index="0" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="behavior"><span data-ttu-id="ba1be-305"><see cref="P:System.Data.CommandBehavior" /> 値のいずれか。</span><span class="sxs-lookup"><span data-stu-id="ba1be-305">One of the <see cref="P:System.Data.CommandBehavior" /> values.</span></span></param>
        <summary><span data-ttu-id="ba1be-306"><see cref="P:System.Data.IDbCommand.CommandText" /> に対して <see cref="P:System.Data.IDbCommand.Connection" /> を実行し、<see cref="P:System.Data.IDataReader" /> 値の 1 つを使用して <see cref="P:System.Data.CommandBehavior" /> を構築します。</span><span class="sxs-lookup"><span data-stu-id="ba1be-306">Executes the <see cref="P:System.Data.IDbCommand.CommandText" /> against the <see cref="P:System.Data.IDbCommand.Connection" />, and builds an <see cref="P:System.Data.IDataReader" /> by using one of the <see cref="P:System.Data.CommandBehavior" /> values.</span></span></summary>
        <returns><span data-ttu-id="ba1be-307"><see cref="P:System.Data.IDataReader" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ba1be-307">An <see cref="P:System.Data.IDataReader" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="ba1be-308">詳細については、「<xref:System.Data.IDbCommand.ExecuteReader%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ba1be-308">For more information, see <xref:System.Data.IDbCommand.ExecuteReader%2A>.</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transaction">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleTransaction Transaction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OracleClient.OracleTransaction Transaction" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.Transaction" />
      <MemberSignature Language="VB.NET" Value="Public Property Transaction As OracleTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OracleClient::OracleTransaction ^ Transaction { System::Data::OracleClient::OracleTransaction ^ get(); void set(System::Data::OracleClient::OracleTransaction ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Transaction : System.Data.OracleClient.OracleTransaction with get, set" Usage="System.Data.OracleClient.OracleCommand.Transaction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleTransaction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba1be-309"><see cref="T:System.Data.OracleClient.OracleTransaction" /> が実行される <see cref="T:System.Data.OracleClient.OracleCommand" /> を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ba1be-309">Gets or sets the <see cref="T:System.Data.OracleClient.OracleTransaction" /> within which the <see cref="T:System.Data.OracleClient.OracleCommand" /> executes.</span></span></summary>
        <value><span data-ttu-id="ba1be-310"><see cref="T:System.Data.OracleClient.OracleTransaction" />。</span><span class="sxs-lookup"><span data-stu-id="ba1be-310">An <see cref="T:System.Data.OracleClient.OracleTransaction" />.</span></span> <span data-ttu-id="ba1be-311">既定は null 値です。</span><span class="sxs-lookup"><span data-stu-id="ba1be-311">The default is a null value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba1be-312">設定することはできません、<xref:System.Data.OracleClient.OracleCommand.Transaction%2A>プロパティが既に特定の値に設定し、コマンドが実行中は場合。</span><span class="sxs-lookup"><span data-stu-id="ba1be-312">You cannot set the <xref:System.Data.OracleClient.OracleCommand.Transaction%2A> property if it is already set to a specific value, and the command is in the process of executing.</span></span> <span data-ttu-id="ba1be-313">トランザクションのプロパティに設定する場合、<xref:System.Data.OracleClient.OracleTransaction>に同じ接続されていないオブジェクト<xref:System.Data.OracleClient.OracleConnection>として、<xref:System.Data.OracleClient.OracleCommand>オブジェクト、ステートメントを実行しようとしています。 次に、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="ba1be-313">If you set the transaction property to an <xref:System.Data.OracleClient.OracleTransaction> object that is not connected to the same <xref:System.Data.OracleClient.OracleConnection> as the <xref:System.Data.OracleClient.OracleCommand> object, an exception will be thrown the next time you attempt to execute a statement.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md"><span data-ttu-id="ba1be-314">コマンドの操作</span><span class="sxs-lookup"><span data-stu-id="ba1be-314">Working with Commands</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UpdatedRowSource">
      <MemberSignature Language="C#" Value="public override System.Data.UpdateRowSource UpdatedRowSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.UpdateRowSource UpdatedRowSource" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.UpdatedRowSource" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property UpdatedRowSource As UpdateRowSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::UpdateRowSource UpdatedRowSource { System::Data::UpdateRowSource get(); void set(System::Data::UpdateRowSource value); };" />
      <MemberSignature Language="F#" Value="member this.UpdatedRowSource : System.Data.UpdateRowSource with get, set" Usage="System.Data.OracleClient.OracleCommand.UpdatedRowSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.UpdateRowSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba1be-315"><see langword="Update" /> メソッドがコマンドの結果を <see cref="T:System.Data.DataRow" /> に適用する方法を示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ba1be-315">Gets or sets a value that specifies how the <see langword="Update" /> method should apply command results to the <see cref="T:System.Data.DataRow" />.</span></span></summary>
        <value><span data-ttu-id="ba1be-316"><see cref="T:System.Data.UpdateRowSource" /> 値のいずれか。</span><span class="sxs-lookup"><span data-stu-id="ba1be-316">One of the <see cref="T:System.Data.UpdateRowSource" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba1be-317">既定の<xref:System.Data.UpdateRowSource>値は`Both`コマンドが自動的に生成される場合を除き、(同様の場合、 <xref:System.Data.OracleClient.OracleCommandBuilder>)、既定値の場合は`None`します。</span><span class="sxs-lookup"><span data-stu-id="ba1be-317">The default <xref:System.Data.UpdateRowSource> value is `Both` unless the command is automatically generated (as in the case of the <xref:System.Data.OracleClient.OracleCommandBuilder>), in which case the default is `None`.</span></span>  
  
 <span data-ttu-id="ba1be-318">使用しての詳細については、<xref:System.Data.UpdateRowSource>プロパティを参照してください[DataAdapter パラメーター](~/docs/framework/data/adonet/dataadapter-parameters.md)します。</span><span class="sxs-lookup"><span data-stu-id="ba1be-318">For more information about using the <xref:System.Data.UpdateRowSource> property, see [DataAdapter Parameters](~/docs/framework/data/adonet/dataadapter-parameters.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ba1be-319">入力された値が、<see cref="T:System.Data.UpdateRowSource" /> 値ではありませんでした。</span><span class="sxs-lookup"><span data-stu-id="ba1be-319">The value entered was not one of the <see cref="T:System.Data.UpdateRowSource" /> values.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md"><span data-ttu-id="ba1be-320">コマンドの操作</span><span class="sxs-lookup"><span data-stu-id="ba1be-320">Working with Commands</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>