<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="AmbientPropertyValue.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5df7012b4ea55422811e1b4ba7b2619bb31b02d81.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">df7012b4ea55422811e1b4ba7b2619bb31b02d81</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xaml.AmbientPropertyValue">
          <source>Reports information about an ambient property, as part of an <ph id="ph1">&lt;see cref="T:System.Xaml.IAmbientProvider" /&gt;</ph> implementation.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xaml.IAmbientProvider" /&gt;</ph> 実装の一部として、アンビエント プロパティに関する情報を報告します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.AmbientPropertyValue">
          <source><ph id="ph1">&lt;xref:System.Xaml.AmbientPropertyValue&gt;</ph> represents an information item that is returned by calling an <ph id="ph2">&lt;xref:System.Xaml.IAmbientProvider&gt;</ph> service method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.AmbientPropertyValue&gt;</ph> 呼び出しによって返される情報項目を表す、<ph id="ph2">&lt;xref:System.Xaml.IAmbientProvider&gt;</ph>サービス メソッドです。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.AmbientPropertyValue">
          <source>The <ph id="ph1">`GetAll`</ph> methods return enumerations or arrays of <ph id="ph2">&lt;xref:System.Xaml.AmbientPropertyValue&gt;</ph> items; the <ph id="ph3">`GetFirst`</ph> methods return a single <ph id="ph4">&lt;xref:System.Xaml.AmbientPropertyValue&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`GetAll`</ph>メソッドは、列挙型または配列を返す<ph id="ph2">&lt;xref:System.Xaml.AmbientPropertyValue&gt;</ph>項目;、<ph id="ph3">`GetFirst`</ph>メソッドは、1 つを返します<ph id="ph4">&lt;xref:System.Xaml.AmbientPropertyValue&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.AmbientPropertyValue">
          <source>About Ambient Properties</source>
          <target state="translated">アンビエント プロパティについて</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.AmbientPropertyValue">
          <source>An ambient property is a property whose property value should be available to value converter usage in the XAML node structure and to the object graph underneath it.</source>
          <target state="translated">アンビエント プロパティは、プロパティの値を XAML ノードの構造で値コンバーターの使用法および下にある、オブジェクト グラフを利用できますにする必要がありますプロパティです。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.AmbientPropertyValue">
          <source>The ambient concept  is relevant for a XAML processor during the object-writing phase of the load path or the serialization phase of a save path.</source>
          <target state="translated">アンビエントの概念は、保存、読み込みパスのオブジェクトの記述フェーズまたは、シリアル化中に、XAML プロセッサに関連するパス。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.AmbientPropertyValue">
          <source>A type can also be attributed as ambient.</source>
          <target state="translated">型をアンビエントとして帰属できるはもします。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.AmbientPropertyValue">
          <source>In this case, all properties that use the attributed type are reported as ambient.</source>
          <target state="translated">この場合、属性付きの型を使用するすべてのプロパティは、アンビエントとして報告されます。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.AmbientPropertyValue">
          <source>In the load path case, the ambient property value might influence the object graph produced value of other properties that exist underneath it in a XAML node structure.</source>
          <target state="translated">読み込みパスの場合は、アンビエント プロパティの値がありますに影響を与える下にある XAML ノードの構造内に存在する他のプロパティのオブジェクトのグラフが生成される値。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.AmbientPropertyValue">
          <source>When processed as a XAML node stream, the ambient concept implies that the ambient property value must be available to type converters and markup extensions from <ph id="ph1">`StartObject`</ph> to <ph id="ph2">`EndObject`</ph>.</source>
          <target state="translated">アンビエントの概念のアンビエント プロパティの値が型コンバーターおよびマークアップ拡張機能から使用する必要がありますが意味を XAML ノード ストリームとして処理されるとき<ph id="ph1">`StartObject`</ph>に<ph id="ph2">`EndObject`</ph>です。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.AmbientPropertyValue">
          <source>Similarly, a type converter or markup extension that is used for the save path can look up the ambient property and its value.</source>
          <target state="translated">同様に、型コンバーターまたはマークアップ拡張機能を使用するファイルのパスがアンビエント プロパティとその値を検索できます。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.AmbientPropertyValue">
          <source>Therefore, the XAML that is produced is a better round-trip representation.</source>
          <target state="translated">そのため、生成される XAML より優れたラウンド トリップ表現です。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.AmbientPropertyValue">
          <source>By its language definition, XAML does not specify the order in which members of an object must be processed.</source>
          <target state="translated">その言語の定義が XAML ではオブジェクトのメンバーを処理する順序は指定しません。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.AmbientPropertyValue">
          <source>However, any ambient property value must be processed first by the XAML reader so that the type converter and markup extension usage that are contained in other properties can access it through the <ph id="ph1">&lt;xref:System.Xaml.IAmbientProvider&gt;</ph> service.</source>
          <target state="translated">ただし、すべてアンビエント プロパティ値必要があります最初に処理する XAML リーダーによってアクセスできるように、型コンバーターとマークアップ拡張機能の使用その他のプロパティに含まれていることができますを通じて、<ph id="ph1">&lt;xref:System.Xaml.IAmbientProvider&gt;</ph>サービス。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.AmbientPropertyValue">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlMember.DependsOn%2A&gt;</ph> is a similar concept that also influences XAML node-processing order.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlMember.DependsOn%2A&gt;</ph> XAML ノード処理順序にも影響を与えるような概念です。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.AmbientPropertyValue">
          <source>However, <ph id="ph1">&lt;xref:System.Xaml.XamlMember.DependsOn%2A&gt;</ph> can only be used for peer member and node relationships; it cannot influence all descendants.</source>
          <target state="translated">ただし、<ph id="ph1">&lt;xref:System.Xaml.XamlMember.DependsOn%2A&gt;</ph>ピア メンバーとノード リレーションシップにのみ使用できるすべての子孫の影響を与えることはできません。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.AmbientPropertyValue">
          <source>Also, <ph id="ph1">&lt;xref:System.Xaml.XamlMember.DependsOn%2A&gt;</ph> directly influences object graph property setting, whereas the ambient technique relies on type converters or markup extensions.</source>
          <target state="translated">また、<ph id="ph1">&lt;xref:System.Xaml.XamlMember.DependsOn%2A&gt;</ph>直接影響オブジェクトのグラフ プロパティを設定する一方、アンビエント手法は、型コンバーターまたはマークアップ拡張機能に依存しています。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.AmbientPropertyValue">
          <source>In the ambient technique, there must also be a specific type converter or markup extension definition.</source>
          <target state="translated">アンビエントの方法でもあります特定の型コンバーターまたはマークアップ拡張機能の定義。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.AmbientPropertyValue">
          <source>It is up to each type converter or markup extension to determine how the ambient property value should be interpreted and applied to the object graph location where the type converter or markup extension is used.</source>
          <target state="translated">各型コンバーターまたはマークアップ拡張機能をアンビエント プロパティ値を解釈され、型コンバーターまたはマークアップ拡張機能が使用されているオブジェクト グラフの場所に適用する方法を決定の責任です。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.AmbientPropertyValue">
          <source>WPF Usage Notes</source>
          <target state="translated">WPF の使用上の注意</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.AmbientPropertyValue">
          <source>An ambient property scenario that is illustrated in the <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> feature set is <ph id="ph2">&lt;xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType&gt;</ph>, which can qualify the necessary property name lookups for other values.</source>
          <target state="translated">説明しているアンビエント プロパティ シナリオ、<ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph>機能セットは<ph id="ph2">&lt;xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType&gt;</ph>、以外の値を必要なプロパティ名の参照を修飾することができます。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.AmbientPropertyValue">
          <source>In this case, the <ph id="ph1">&lt;xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType&gt;</ph> value qualifies the <ph id="ph2">&lt;xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType&gt;</ph> values in the XAML nodes underneath it.</source>
          <target state="translated">ここで、<ph id="ph1">&lt;xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType&gt;</ph>値を修飾、<ph id="ph2">&lt;xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType&gt;</ph>下にある XAML ノードの値。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.AmbientPropertyValue">
          <source><ph id="ph1">&lt;xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType&gt;</ph> uses the type converter behavior for a <ph id="ph2">&lt;xref:System.Windows.DependencyProperty&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType&gt;</ph> 型コンバーターの動作を使用して、<ph id="ph2">&lt;xref:System.Windows.DependencyProperty&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.AmbientPropertyValue">
          <source>This behavior accesses the ambient <ph id="ph1">&lt;xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType&gt;</ph> value by querying <ph id="ph2">&lt;xref:System.Xaml.IAmbientProvider.GetFirstAmbientValue%2A&gt;</ph> from a service context that is available to type converters and markup extensions.</source>
          <target state="translated">この動作は、アンビエントにアクセス<ph id="ph1">&lt;xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType&gt;</ph>クエリを実行して値<ph id="ph2">&lt;xref:System.Xaml.IAmbientProvider.GetFirstAmbientValue%2A&gt;</ph>型コンバーターおよびマークアップ拡張機能に利用できるサービス コンテキストからです。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Xaml.AmbientPropertyValue.#ctor(System.Xaml.XamlMember,System.Object)">
          <source>The identifier that represents the ambient property.</source>
          <target state="translated">アンビエント プロパティを表す識別子。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Xaml.AmbientPropertyValue.#ctor(System.Xaml.XamlMember,System.Object)">
          <source>The value to report.</source>
          <target state="translated">報告される値。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Xaml.AmbientPropertyValue.#ctor(System.Xaml.XamlMember,System.Object)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.AmbientPropertyValue" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xaml.AmbientPropertyValue" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="P:System.Xaml.AmbientPropertyValue.RetrievedProperty">
          <source>Gets the XAML type system identifier (<ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>) that represents the ambient property.</source>
          <target state="translated">アンビエント プロパティを表す XAML 型システム識別子 (<ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>) を取得します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.AmbientPropertyValue.RetrievedProperty">
          <source>The identifier that represents the ambient property.</source>
          <target state="translated">アンビエント プロパティを表す識別子。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="P:System.Xaml.AmbientPropertyValue.Value">
          <source>Gets the value of the ambient property.</source>
          <target state="translated">アンビエント プロパティの値を取得します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.AmbientPropertyValue.Value">
          <source>The value of the ambient property.</source>
          <target state="translated">アンビエント プロパティの値。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>