<Type Name="XamlMember" FullName="System.Xaml.XamlMember">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="043e180cfa1cd2c740edc299acbc22e34cd99019" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39978667" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XamlMember : IEquatable&lt;System.Xaml.XamlMember&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlMember extends System.Object implements class System.IEquatable`1&lt;class System.Xaml.XamlMember&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlMember" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlMember&#xA;Implements IEquatable(Of XamlMember)" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlMember : IEquatable&lt;System::Xaml::XamlMember ^&gt;" />
  <TypeSignature Language="F#" Value="type XamlMember = class&#xA;    interface IEquatable&lt;XamlMember&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Xaml.XamlMember&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="c6a37-101">XAML 型のメンバーの XAML 型システム識別子を提供します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="c6a37-101">Provides the XAML type system identifier for members of XAML types.</span>
      </span>
      <span data-ttu-id="c6a37-102">識別子は、メンバー ノードの処理時 (XAML リーダーの位置が <see cref="F:System.Xaml.XamlNodeType.StartMember" /> のとき) および一般的な XAML 型システムのロジックに、XAML リーダーおよび XAML ライターによって使用されます。</span>
      <span class="sxs-lookup">
        <span data-stu-id="c6a37-102">The identifier is used by XAML readers and XAML writers during processing of member nodes (when the XAML reader is positioned on a <see cref="F:System.Xaml.XamlNodeType.StartMember" />) and also for general XAML type system logic.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6a37-103"><xref:System.Xaml.XamlMember> XAML メンバーに関する情報を返すには次の 3 つの方法論を使用できます。 共通言語ランタイム (CLR) のリフレクション標準です。呼び出す内部参照専用のリフレクション技法 Api を使用して最適化されたビット フラグです。または仮想を呼び出すことがのオーバーライド、`Lookup*`可能な限りによって提供される API<xref:System.Xaml.XamlMember>サブクラスです。</span><span class="sxs-lookup"><span data-stu-id="c6a37-103"><xref:System.Xaml.XamlMember> can use three methodologies for returning information about a XAML member: standard common language runtime (CLR) reflection; a reference-only reflection technique calling internal APIs that use optimized bit flags; or calling into virtual overrides of the `Lookup*` API that is provided by possible <xref:System.Xaml.XamlMember> subclasses.</span></span> <span data-ttu-id="c6a37-104">.NET Framework XAML サービス Api のほとんどの用途の<xref:System.Xaml.XamlMember>API では、既定の XAML スキーマ コンテキストを使用します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-104">For most uses of .NET Framework XAML Services APIs and the <xref:System.Xaml.XamlMember> API, you use the default XAML schema context.</span></span> <span data-ttu-id="c6a37-105">.NET Framework XAML サービスの既定の XAML スキーマ コンテキストでは、CLR 型システムのバックアップを使用します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-105">The default XAML schema context for .NET Framework XAML Services uses CLR backing for the type system.</span></span> <span data-ttu-id="c6a37-106">これにより、任意の型またはメンバーが定義されているか、それ以外の場合に使用可能な CLR および、リフレクション技法を使用するには、XAML リーダーと XAML ライター。</span><span class="sxs-lookup"><span data-stu-id="c6a37-106">This enables the XAML readers and XAML writers to work with any type or member that is defined in, or otherwise available to, the CLR and its reflection techniques.</span></span>  
  
## <a name="lookup-apis-and-xamlmember-derived-classes"></a><span data-ttu-id="c6a37-107">派生クラスを参照 \* Api と XamlMember</span><span class="sxs-lookup"><span data-stu-id="c6a37-107">Lookup\* APIs and XamlMember Derived Classes</span></span>  
 <span data-ttu-id="c6a37-108"><xref:System.Xaml.XamlMember> いくつかを定義します。 派生クラスの仮想メンバーの方が優先されます。</span><span class="sxs-lookup"><span data-stu-id="c6a37-108"><xref:System.Xaml.XamlMember> defines several virtual members that derived classes might override.</span></span> <span data-ttu-id="c6a37-109">これらのメンバーは、常に、文字列で始まる名前を持つ`Lookup`します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-109">These members have names that always start with the string `Lookup`.</span></span> <span data-ttu-id="c6a37-110">API の残りの部分では、仮想メソッドに影響するプロパティ参照を名前します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-110">The remainder of the API name then references the property that the virtual method influences.</span></span> <span data-ttu-id="c6a37-111">たとえば、<xref:System.Xaml.XamlMember>派生クラスの方が優先<xref:System.Xaml.XamlMember.LookupTargetType%2A>どのような基本定義のプロパティに影響を与える<xref:System.Xaml.XamlMember.TargetType%2A>派生クラスで返します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-111">For example, a <xref:System.Xaml.XamlMember> derived class might override <xref:System.Xaml.XamlMember.LookupTargetType%2A> to influence what the base-defined property <xref:System.Xaml.XamlMember.TargetType%2A> returns in a derived class.</span></span> <span data-ttu-id="c6a37-112">そのようなプロパティの戻り値を予測する<xref:System.Xaml.XamlMember>や関連するドキュメントを読みの派生クラスの既存の`Lookup*`メソッド。</span><span class="sxs-lookup"><span data-stu-id="c6a37-112">You can predict return values for such properties in <xref:System.Xaml.XamlMember> or existing derived classes by reading the documentation for the relevant `Lookup*` methods.</span></span>  
  
 <span data-ttu-id="c6a37-113">目的、`Lookup*`メソッドが組み込まれている XAML 型システム拡張技術を提供する、<xref:System.Xaml.XamlMember>基本クラス。</span><span class="sxs-lookup"><span data-stu-id="c6a37-113">The purpose of the `Lookup*` methods is to provide a XAML type system extension technique that incorporates the <xref:System.Xaml.XamlMember> base class.</span></span> <span data-ttu-id="c6a37-114">派生することによって<xref:System.Xaml.XamlMember>をオーバーライドして、`Lookup`仮想メンバーを定義できます XAML スキーマの XAML メンバーの概念、XAML 型システムで、バッキング型システムまたはテクノロジの詳細に限定せずします。</span><span class="sxs-lookup"><span data-stu-id="c6a37-114">By deriving from <xref:System.Xaml.XamlMember> and overriding the `Lookup` virtual members, you can define the concept of a XAML member for a XAML schema in a XAML type system without being tied to the specifics of a backing type system or technology.</span></span> <span data-ttu-id="c6a37-115">このスキームで指定した XAML スキーマ コンテキストを使用してもと、目的の結果を返すことができます。</span><span class="sxs-lookup"><span data-stu-id="c6a37-115">You can also use a provided XAML schema context under this scheme and still return the results you want.</span></span>  
  
 <span data-ttu-id="c6a37-116">たとえばを検討してください、<xref:System.Xaml.XamlMember>プロパティ<xref:System.Xaml.XamlMember.IsWritePublic%2A>します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-116">As an example, consider the <xref:System.Xaml.XamlMember> property <xref:System.Xaml.XamlMember.IsWritePublic%2A>.</span></span> <span data-ttu-id="c6a37-117">このプロパティを使用するなど、その操作の呼び出し元に通知を<xref:System.Xaml.XamlWriter>のシリアル化は、対象のオブジェクトでこのメンバーの値を記述することができます。</span><span class="sxs-lookup"><span data-stu-id="c6a37-117">This property informs callers that operations such as using a <xref:System.Xaml.XamlWriter> for serialization can write a value for this member on a target object.</span></span> <span data-ttu-id="c6a37-118">既定の実装では、メンバーが書き込み可能かどうかの決定がバッキング CLR に対するリフレクションの手法を使用して行われます<xref:System.Type>とそのメンバー (、 <xref:System.Reflection.MemberInfo>)。</span><span class="sxs-lookup"><span data-stu-id="c6a37-118">In the default implementation, the determination of whether the member is writable is made by using reflection techniques against the backing CLR <xref:System.Type> and its members (the <xref:System.Reflection.MemberInfo>).</span></span> <span data-ttu-id="c6a37-119">そのため、既定では、CLR 型システムに、XAML 型システムがによって異なります。</span><span class="sxs-lookup"><span data-stu-id="c6a37-119">Therefore, by default, the XAML type system depends on the CLR type system.</span></span> <span data-ttu-id="c6a37-120">ただし、この依存関係を削除、XAML 型システム レポート用の<xref:System.Xaml.XamlMember.IsWritePublic%2A>API をオーバーライドすることで<xref:System.Xaml.XamlMember.LookupIsWritePublic%2A>します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-120">However, you can remove this dependency for your XAML type system reporting of <xref:System.Xaml.XamlMember.IsWritePublic%2A> by overriding the API <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A>.</span></span> <span data-ttu-id="c6a37-121">XAML メンバーがで書き込み可能かどうか、固定の XAML ボキャブラリまたはその他の戦略を決定するためのさまざまな用に最適化されたマスターのルックアップ テーブルをテクノロジに固有のメタデータなどの他の決定を使用する、オーバーライド内で、XAML のボキャブラリです。</span><span class="sxs-lookup"><span data-stu-id="c6a37-121">Within your override, you can use other determinations, such as metadata that is specific to your technology, a master lookup table that is optimized for a fixed XAML vocabulary, or a variety of other strategies for determining whether a XAML member is writable in your XAML vocabulary.</span></span>  
  
## <a name="constructing-xamlmember-without-xaml-schema-context"></a><span data-ttu-id="c6a37-122">XAML スキーマ コンテキストなし XamlMember を構築します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-122">Constructing XamlMember Without XAML Schema Context</span></span>  
 <span data-ttu-id="c6a37-123">ほとんどのコンス トラクター<xref:System.Xaml.XamlMember>を必要とする<xref:System.Xaml.XamlSchemaContext>の初期化の一環として。</span><span class="sxs-lookup"><span data-stu-id="c6a37-123">Most constructors of <xref:System.Xaml.XamlMember> require a <xref:System.Xaml.XamlSchemaContext> as part of their initialization.</span></span> <span data-ttu-id="c6a37-124"><xref:System.Xaml.XamlSchemaContext>も多くの内部に必要な<xref:System.Xaml.XamlSchemaContext>バッキング型から転送される情報の取得などの操作。</span><span class="sxs-lookup"><span data-stu-id="c6a37-124">The <xref:System.Xaml.XamlSchemaContext> is also necessary for many internal <xref:System.Xaml.XamlSchemaContext> operations, such as obtaining information that is being forwarded from the backing type.</span></span> <span data-ttu-id="c6a37-125">使用する場合、 <xref:System.Xaml.XamlMember> API では、通常がある、<xref:System.Xaml.XamlSchemaContext>など、周囲のコンストラクトから提供される、<xref:System.Xaml.XamlWriter>します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-125">When you are working with the <xref:System.Xaml.XamlMember> API, you typically have a <xref:System.Xaml.XamlSchemaContext> that is available from a surrounding construct such as a <xref:System.Xaml.XamlWriter>.</span></span> <span data-ttu-id="c6a37-126">この場合、渡すことができます、 <xref:System.Xaml.XamlSchemaContext> XAML スキーマ コンテキストを必要とするすべての XAML 型システム呼び出しへの参照を使用します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-126">In this case, you can pass the <xref:System.Xaml.XamlSchemaContext> reference through to all XAML type system calls that require a XAML schema context.</span></span>  
  
 <span data-ttu-id="c6a37-127">特定の 1 つのコンス トラクター<xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29>は必要ありません、<xref:System.Xaml.XamlSchemaContext>します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-127">One specific constructor, <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29>, does not require a <xref:System.Xaml.XamlSchemaContext>.</span></span> <span data-ttu-id="c6a37-128">ただし、<xref:System.Xaml.XamlMember>で構築されますが、<xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29>署名を返します`true`の<xref:System.Xaml.XamlMember.IsUnknown%2A>します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-128">However, a <xref:System.Xaml.XamlMember> that is constructed with the <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> signature returns `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span></span>  
  
 <span data-ttu-id="c6a37-129">関連する読み込みパスの<xref:System.Xaml.XamlObjectWriter>、そのようなメンバーをオブジェクト グラフに書き込まれることはできません。</span><span class="sxs-lookup"><span data-stu-id="c6a37-129">For a load path that involves <xref:System.Xaml.XamlObjectWriter>, such a member cannot be written into an object graph.</span></span> <span data-ttu-id="c6a37-130">.NET Framework XAML サービスの実装を使用して、<xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType>スローを呼び出す、<xref:System.Xaml.XamlObjectWriterException>ときに、関連する<xref:System.Xaml.XamlMember>レポート`true`の<xref:System.Xaml.XamlMember.IsUnknown%2A>します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-130">Using the .NET Framework XAML services implementation, the <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> call throws a <xref:System.Xaml.XamlObjectWriterException> when the relevant <xref:System.Xaml.XamlMember> reports `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span></span>  
  
 <span data-ttu-id="c6a37-131">構成しないでください、<xref:System.Xaml.XamlMember>の値を持つ`true`の<xref:System.Xaml.XamlMember.IsUnknown%2A>実装からの例外を処理できる場合を除き、 <xref:System.Xaml.XamlObjectWriter>、またはその他の方法を調整するが、<xref:System.Xaml.XamlObjectWriter>動作します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-131">You should not construct a <xref:System.Xaml.XamlMember> that has a value of `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A> unless your implementation can handle the exceptions from <xref:System.Xaml.XamlObjectWriter>, or you have other ways to adjust the <xref:System.Xaml.XamlObjectWriter> behavior.</span></span> <span data-ttu-id="c6a37-132">たとえば、次の 1 つ以上が、実装の場合は true。 可能性があります。</span><span class="sxs-lookup"><span data-stu-id="c6a37-132">For example, one or more of the  following might be true of your implementation:</span></span>  
  
-   <span data-ttu-id="c6a37-133">XAML スキーマ コンテキストが後で使用できます。</span><span class="sxs-lookup"><span data-stu-id="c6a37-133">The XAML schema context is available later.</span></span>  
  
-   <span data-ttu-id="c6a37-134">メンバーの呼び出し元のパターンを使用するとします。</span><span class="sxs-lookup"><span data-stu-id="c6a37-134">You use a member invoker pattern.</span></span>  
  
-   <span data-ttu-id="c6a37-135">意図的にオーバーライドする<xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType>カスタム XAML ライターにします。</span><span class="sxs-lookup"><span data-stu-id="c6a37-135">You deliberately override <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> in a custom XAML writer.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.XamlType" />
    <altmember cref="T:System.Xaml.XamlDirective" />
    <altmember cref="T:System.Xaml.XamlObjectWriter" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c6a37-136">
            <see cref="T:System.Xaml.XamlMember" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-136">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (System.Reflection.EventInfo eventInfo, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.EventInfo eventInfo, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::Reflection::EventInfo ^ eventInfo, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : System.Reflection.EventInfo * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (eventInfo, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="eventInfo" Type="System.Reflection.EventInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="eventInfo">
          <span data-ttu-id="c6a37-137">イベント メンバーを表す CLR 型システム <see cref="T:System.Reflection.EventInfo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-137">The CLR type system <see cref="T:System.Reflection.EventInfo" /> that represents the event member.</span>
          </span>
        </param>
        <param name="schemaContext">
          <span data-ttu-id="c6a37-138">メンバーを修飾する <see cref="T:System.Xaml.XamlSchemaContext" /> コンテキスト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-138">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6a37-139">CLR 型システムの <see cref="T:System.Xaml.XamlMember" /> および <see cref="T:System.Reflection.EventInfo" /> を使用して、<see cref="T:System.Xaml.XamlSchemaContext" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-139">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class using CLR type system <see cref="T:System.Reflection.EventInfo" /> and a <see cref="T:System.Xaml.XamlSchemaContext" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6a37-140">メンバーは、イベント (イベント ハンドラー接続ポイントのプロパティ) を表す場合は、このコンス トラクターを使用します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-140">Use this constructor if the member represents an event (event handler connection-point property).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (System.Reflection.PropertyInfo propertyInfo, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.PropertyInfo propertyInfo, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::Reflection::PropertyInfo ^ propertyInfo, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : System.Reflection.PropertyInfo * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (propertyInfo, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="propertyInfo" Type="System.Reflection.PropertyInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="propertyInfo">
          <span data-ttu-id="c6a37-141">プロパティ メンバーを表す CLR 型システム <see cref="T:System.Reflection.PropertyInfo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-141">The CLR type system <see cref="T:System.Reflection.PropertyInfo" /> that represents the property member.</span>
          </span>
        </param>
        <param name="schemaContext">
          <span data-ttu-id="c6a37-142">メンバーを修飾する <see cref="T:System.Xaml.XamlSchemaContext" /> コンテキスト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-142">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6a37-143">CLR 型システムの <see cref="T:System.Xaml.XamlMember" /> および <see cref="T:System.Reflection.PropertyInfo" /> を使用して、<see cref="T:System.Xaml.XamlSchemaContext" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-143">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class using CLR type system <see cref="T:System.Reflection.PropertyInfo" /> and a <see cref="T:System.Xaml.XamlSchemaContext" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6a37-144">メンバーのプロパティを表します (および具体的には、イベント ハンドラー接続ではない) 場合は、このコンス トラクターを使用します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-144">Use this constructor if the member represents a property (and specifically is not an event handler connection).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (System.Reflection.EventInfo eventInfo, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.EventInfo eventInfo, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.Schema.XamlMemberInvoker invoker) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::Reflection::EventInfo ^ eventInfo, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::Schema::XamlMemberInvoker ^ invoker);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : System.Reflection.EventInfo * System.Xaml.XamlSchemaContext * System.Xaml.Schema.XamlMemberInvoker -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (eventInfo, schemaContext, invoker)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="eventInfo" Type="System.Reflection.EventInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="invoker" Type="System.Xaml.Schema.XamlMemberInvoker" />
      </Parameters>
      <Docs>
        <param name="eventInfo">
          <span data-ttu-id="c6a37-145">イベント メンバーを表す CLR 型システム <see cref="T:System.Reflection.EventInfo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-145">The CLR type system <see cref="T:System.Reflection.EventInfo" /> that represents the event member.</span>
          </span>
        </param>
        <param name="schemaContext">
          <span data-ttu-id="c6a37-146">メンバーを修飾する <see cref="T:System.Xaml.XamlSchemaContext" /> コンテキスト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-146">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span>
          </span>
        </param>
        <param name="invoker">
          <span data-ttu-id="c6a37-147">
            <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> に対してランタイムのリフレクション呼び出しを処理する <see cref="T:System.Xaml.XamlMember" /> 実装。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-147">The <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> implementation that handles run-time reflection calls against the <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6a37-148">CLR 型システム <see cref="T:System.Xaml.XamlMember" /> および <see cref="T:System.Reflection.EventInfo" /> (<see cref="T:System.Xaml.XamlSchemaContext" /> の情報を含みます) を使用して、<see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-148">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class using CLR type system <see cref="T:System.Reflection.EventInfo" /> and a <see cref="T:System.Xaml.XamlSchemaContext" />, including <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6a37-149">メンバーは、イベント (または、イベント ハンドラー接続ポイントのプロパティ) を表す場合は、このコンス トラクターを使用します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-149">Use this constructor if the member represents an event (or an event handler connection-point property).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (System.Reflection.PropertyInfo propertyInfo, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.PropertyInfo propertyInfo, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.Schema.XamlMemberInvoker invoker) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::Reflection::PropertyInfo ^ propertyInfo, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::Schema::XamlMemberInvoker ^ invoker);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : System.Reflection.PropertyInfo * System.Xaml.XamlSchemaContext * System.Xaml.Schema.XamlMemberInvoker -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (propertyInfo, schemaContext, invoker)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="propertyInfo" Type="System.Reflection.PropertyInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="invoker" Type="System.Xaml.Schema.XamlMemberInvoker" />
      </Parameters>
      <Docs>
        <param name="propertyInfo">
          <span data-ttu-id="c6a37-150">プロパティ メンバーを表す CLR 型システム <see cref="T:System.Reflection.PropertyInfo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-150">The CLR type system <see cref="T:System.Reflection.PropertyInfo" /> that represents the property member.</span>
          </span>
        </param>
        <param name="schemaContext">
          <span data-ttu-id="c6a37-151">メンバーを修飾する <see cref="T:System.Xaml.XamlSchemaContext" /> コンテキスト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-151">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span>
          </span>
        </param>
        <param name="invoker">
          <span data-ttu-id="c6a37-152">
            <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> に対するランタイム呼び出しを処理する <see cref="T:System.Xaml.XamlMember" /> 実装。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-152">The <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> implementation that handles run-time invocation calls against the <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6a37-153">リフレクション <see cref="T:System.Xaml.XamlMember" /> および <see cref="T:System.Reflection.PropertyInfo" /> (<see cref="T:System.Xaml.XamlSchemaContext" /> の情報を含みます) を使用して、<see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-153">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class using reflection <see cref="T:System.Reflection.PropertyInfo" /> and a <see cref="T:System.Xaml.XamlSchemaContext" />, including <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6a37-154">メンバーがプロパティを表す場合にのみ、およびイベント ハンドラー接続ではない場合は、このコンス トラクターを使用します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-154">Use this constructor only if the member represents a property and if it is not an event handler connection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (string attachableEventName, System.Reflection.MethodInfo adder, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string attachableEventName, class System.Reflection.MethodInfo adder, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (attachableEventName As String, adder As MethodInfo, schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::String ^ attachableEventName, System::Reflection::MethodInfo ^ adder, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : string * System.Reflection.MethodInfo * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (attachableEventName, adder, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="attachableEventName" Type="System.String" />
        <Parameter Name="adder" Type="System.Reflection.MethodInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="attachableEventName">
          <span data-ttu-id="c6a37-155">アタッチ可能なイベントの文字列名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-155">The string name of the attachable event.</span>
          </span>
        </param>
        <param name="adder">
          <span data-ttu-id="c6a37-156">アタッチ可能なメンバーのバッキング実装のハンドラー <see langword="Add" /> メソッドに対する CLR 型システムの <see cref="T:System.Reflection.MethodInfo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-156">The CLR type system <see cref="T:System.Reflection.MethodInfo" /> for the handler <see langword="Add" /> method of the attachable member's backing implementation.</span>
          </span>
        </param>
        <param name="schemaContext">
          <span data-ttu-id="c6a37-157">メンバーを修飾する <see cref="T:System.Xaml.XamlSchemaContext" /> コンテキスト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-157">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6a37-158">アタッチ可能なイベントを表す <see cref="T:System.Xaml.XamlMember" /> に対する <see cref="T:System.Xaml.XamlMember" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-158">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class for a <see cref="T:System.Xaml.XamlMember" /> that represents an attachable event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6a37-159">メンバーがアタッチ可能なイベント メンバーを表す場合は、このコンス トラクターを使用します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-159">Use this constructor if the member represents an attachable event member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (string name, System.Xaml.XamlType declaringType, bool isAttachable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class System.Xaml.XamlType declaringType, bool isAttachable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, declaringType As XamlType, isAttachable As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::String ^ name, System::Xaml::XamlType ^ declaringType, bool isAttachable);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : string * System.Xaml.XamlType * bool -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (name, declaringType, isAttachable)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="declaringType" Type="System.Xaml.XamlType" />
        <Parameter Name="isAttachable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="c6a37-160">メンバーの文字列名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-160">The string name of the member.</span>
          </span>
        </param>
        <param name="declaringType">
          <span data-ttu-id="c6a37-161">宣言している型に対する <see cref="T:System.Xaml.XamlType" /> 情報。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-161">The <see cref="T:System.Xaml.XamlType" /> information for the declaring type.</span>
          </span>
        </param>
        <param name="isAttachable">
          <span data-ttu-id="c6a37-162">メンバーがアタッチ可能であることを示す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-162">
              <see langword="true" /> to indicate that the member is attachable; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6a37-163">文字列名と宣言 <see cref="T:System.Xaml.XamlMember" /> 情報を使用して、<see cref="T:System.Xaml.XamlType" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-163">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class using a string name and declaring <see cref="T:System.Xaml.XamlType" /> information.</span>
          </span>
          <span data-ttu-id="c6a37-164">このシグネチャで作成された <see cref="T:System.Xaml.XamlMember" /> には重要な制限があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-164">A <see cref="T:System.Xaml.XamlMember" /> that is constructed with this signature has significant limitations.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6a37-165">A<xref:System.Xaml.XamlMember>で構築されますが、<xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29>署名を返します`true`の<xref:System.Xaml.XamlMember.IsUnknown%2A>します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-165">A <xref:System.Xaml.XamlMember> that is constructed with the <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> signature returns `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span></span>  
  
 <span data-ttu-id="c6a37-166">関連する読み込みパスの<xref:System.Xaml.XamlObjectWriter>、そのようなメンバーをオブジェクト グラフに書き込まれることはできません。</span><span class="sxs-lookup"><span data-stu-id="c6a37-166">For a load path that involves <xref:System.Xaml.XamlObjectWriter>, such a member cannot be written into an object graph.</span></span> <span data-ttu-id="c6a37-167">.NET Framework XAML サービスの実装を使用して、<xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType>呼び出しがスローされます、<xref:System.Xaml.XamlObjectWriterException>ときに、関連する<xref:System.Xaml.XamlMember>レポート`true`の<xref:System.Xaml.XamlMember.IsUnknown%2A>。</span><span class="sxs-lookup"><span data-stu-id="c6a37-167">Using the .NET Framework XAML Services implementation, the <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> call throws a <xref:System.Xaml.XamlObjectWriterException> when the relevant <xref:System.Xaml.XamlMember> reports `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span></span>  
  
 <span data-ttu-id="c6a37-168">構成しないでください、<xref:System.Xaml.XamlMember>で<xref:System.Xaml.XamlMember.IsUnknown%2A>`true`実装からの例外を処理できる場合を除き、 <xref:System.Xaml.XamlObjectWriter>、またはその他の方法を調整するが、<xref:System.Xaml.XamlObjectWriter>動作します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-168">You should not construct a <xref:System.Xaml.XamlMember> with <xref:System.Xaml.XamlMember.IsUnknown%2A>`true` unless your implementation can handle the exceptions from <xref:System.Xaml.XamlObjectWriter>, or you have other ways to adjust the <xref:System.Xaml.XamlObjectWriter> behavior.</span></span> <span data-ttu-id="c6a37-169">たとえば、次の 1 つ以上が、実装の場合は true。 可能性があります。</span><span class="sxs-lookup"><span data-stu-id="c6a37-169">For example, one or more of the following might be true of your implementation:</span></span>  
  
-   <span data-ttu-id="c6a37-170">XAML スキーマ コンテキストが後で使用できます。</span><span class="sxs-lookup"><span data-stu-id="c6a37-170">The XAML schema context is available later.</span></span>  
  
-   <span data-ttu-id="c6a37-171">メンバーの呼び出し元のパターンを使用するとします。</span><span class="sxs-lookup"><span data-stu-id="c6a37-171">You use a member invoker pattern.</span></span>  
  
-   <span data-ttu-id="c6a37-172">意図的にオーバーライドする<xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType>カスタム XAML ライターにします。</span><span class="sxs-lookup"><span data-stu-id="c6a37-172">You deliberately override <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> in a custom XAML writer.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c6a37-173">
            <paramref name="name" /> または <paramref name="declaringType" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-173">
              <paramref name="name" /> or <paramref name="declaringType" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (string attachablePropertyName, System.Reflection.MethodInfo getter, System.Reflection.MethodInfo setter, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string attachablePropertyName, class System.Reflection.MethodInfo getter, class System.Reflection.MethodInfo setter, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (attachablePropertyName As String, getter As MethodInfo, setter As MethodInfo, schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::String ^ attachablePropertyName, System::Reflection::MethodInfo ^ getter, System::Reflection::MethodInfo ^ setter, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : string * System.Reflection.MethodInfo * System.Reflection.MethodInfo * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (attachablePropertyName, getter, setter, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="attachablePropertyName" Type="System.String" />
        <Parameter Name="getter" Type="System.Reflection.MethodInfo" />
        <Parameter Name="setter" Type="System.Reflection.MethodInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="attachablePropertyName">
          <span data-ttu-id="c6a37-174">アタッチ可能なプロパティの文字列名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-174">The string name of the attachable property.</span>
          </span>
        </param>
        <param name="getter">
          <span data-ttu-id="c6a37-175">アタッチ可能なメンバーのバッキング実装の <see langword="get" /> アクセサーに対する CLR 型システムの <see cref="T:System.Reflection.MethodInfo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-175">The CLR type system <see cref="T:System.Reflection.MethodInfo" /> for the <see langword="get" /> accessor of the attachable member's backing implementation.</span>
          </span>
        </param>
        <param name="setter">
          <span data-ttu-id="c6a37-176">アタッチ可能なメンバーのバッキング実装の <see langword="set" /> アクセサーに対する CLR 型システムの <see cref="T:System.Reflection.MethodInfo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-176">The CLR type system <see cref="T:System.Reflection.MethodInfo" /> for the <see langword="set" /> accessor of the attachable member's backing implementation.</span>
          </span>
        </param>
        <param name="schemaContext">
          <span data-ttu-id="c6a37-177">メンバーを修飾する <see cref="T:System.Xaml.XamlSchemaContext" /> コンテキスト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-177">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6a37-178">アタッチ可能なプロパティを表す <see cref="T:System.Xaml.XamlMember" /> に対する <see cref="T:System.Xaml.XamlMember" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-178">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class for a <see cref="T:System.Xaml.XamlMember" /> that represents an attachable property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6a37-179">メンバーがアタッチ可能なプロパティを表す場合は、このコンス トラクターを使用します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-179">Use this constructor if the member represents an attachable property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (string attachableEventName, System.Reflection.MethodInfo adder, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string attachableEventName, class System.Reflection.MethodInfo adder, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.Schema.XamlMemberInvoker invoker) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (attachableEventName As String, adder As MethodInfo, schemaContext As XamlSchemaContext, invoker As XamlMemberInvoker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::String ^ attachableEventName, System::Reflection::MethodInfo ^ adder, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::Schema::XamlMemberInvoker ^ invoker);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : string * System.Reflection.MethodInfo * System.Xaml.XamlSchemaContext * System.Xaml.Schema.XamlMemberInvoker -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (attachableEventName, adder, schemaContext, invoker)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="attachableEventName" Type="System.String" />
        <Parameter Name="adder" Type="System.Reflection.MethodInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="invoker" Type="System.Xaml.Schema.XamlMemberInvoker" />
      </Parameters>
      <Docs>
        <param name="attachableEventName">
          <span data-ttu-id="c6a37-180">アタッチ可能なイベントの文字列名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-180">The string name of the attachable event.</span>
          </span>
        </param>
        <param name="adder">
          <span data-ttu-id="c6a37-181">アタッチ可能なメンバーのバッキング実装のハンドラー <see langword="Add" /> メソッドに対する CLR 型システムの <see cref="T:System.Reflection.MethodInfo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-181">The CLR type system <see cref="T:System.Reflection.MethodInfo" /> for the handler <see langword="Add" /> method of the attachable member's backing implementation.</span>
          </span>
        </param>
        <param name="schemaContext">
          <span data-ttu-id="c6a37-182">メンバーを修飾する <see cref="T:System.Xaml.XamlSchemaContext" /> コンテキスト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-182">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span>
          </span>
        </param>
        <param name="invoker">
          <span data-ttu-id="c6a37-183">
            <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> に対するランタイム呼び出しを処理する <see cref="T:System.Xaml.XamlMember" /> 実装。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-183">The <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> implementation that handles run-time invocation calls against the <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6a37-184">アタッチ可能なイベントを表す <see cref="T:System.Xaml.XamlMember" /> (<see cref="T:System.Xaml.XamlMember" /> の情報を含みます) に対する <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-184">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class for a <see cref="T:System.Xaml.XamlMember" /> that represents an attachable event, including <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6a37-185">メンバーがアタッチ可能なイベント メンバーを表す場合は、このコンス トラクターを使用します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-185">Use this constructor if the member represents an attachable event member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (string attachablePropertyName, System.Reflection.MethodInfo getter, System.Reflection.MethodInfo setter, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string attachablePropertyName, class System.Reflection.MethodInfo getter, class System.Reflection.MethodInfo setter, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.Schema.XamlMemberInvoker invoker) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (attachablePropertyName As String, getter As MethodInfo, setter As MethodInfo, schemaContext As XamlSchemaContext, invoker As XamlMemberInvoker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::String ^ attachablePropertyName, System::Reflection::MethodInfo ^ getter, System::Reflection::MethodInfo ^ setter, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::Schema::XamlMemberInvoker ^ invoker);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : string * System.Reflection.MethodInfo * System.Reflection.MethodInfo * System.Xaml.XamlSchemaContext * System.Xaml.Schema.XamlMemberInvoker -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (attachablePropertyName, getter, setter, schemaContext, invoker)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="attachablePropertyName" Type="System.String" />
        <Parameter Name="getter" Type="System.Reflection.MethodInfo" />
        <Parameter Name="setter" Type="System.Reflection.MethodInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="invoker" Type="System.Xaml.Schema.XamlMemberInvoker" />
      </Parameters>
      <Docs>
        <param name="attachablePropertyName">
          <span data-ttu-id="c6a37-186">アタッチ可能なプロパティの文字列名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-186">The string name of the attachable property.</span>
          </span>
        </param>
        <param name="getter">
          <span data-ttu-id="c6a37-187">アタッチ可能なメンバーのバッキング実装の <see langword="get" /> アクセサーに対する CLR 型システムの <see cref="T:System.Reflection.MethodInfo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-187">The CLR type system <see cref="T:System.Reflection.MethodInfo" /> for the <see langword="get" /> accessor of the attachable member's backing implementation.</span>
          </span>
        </param>
        <param name="setter">
          <span data-ttu-id="c6a37-188">アタッチ可能なメンバーのバッキング実装の <see langword="set" /> アクセサーに対する CLR 型システムの <see cref="T:System.Reflection.MethodInfo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-188">The CLR type system <see cref="T:System.Reflection.MethodInfo" /> for the <see langword="set" /> accessor of the attachable member's backing implementation.</span>
          </span>
        </param>
        <param name="schemaContext">
          <span data-ttu-id="c6a37-189">メンバーを修飾する <see cref="T:System.Xaml.XamlSchemaContext" /> コンテキスト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-189">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span>
          </span>
        </param>
        <param name="invoker">
          <span data-ttu-id="c6a37-190">
            <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> に対するランタイム呼び出しを処理する <see cref="T:System.Xaml.XamlMember" /> 実装。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-190">The <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> implementation that handles run-time invocation calls against the <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6a37-191">アタッチ可能なプロパティを表す <see cref="T:System.Xaml.XamlMember" /> (<see cref="T:System.Xaml.XamlMember" /> の情報を含みます) に対する <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-191">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class for a <see cref="T:System.Xaml.XamlMember" /> that represents an attachable property, including <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6a37-192">メンバー、プロパティのアタッチ可能なメンバーを表す場合は、このコンス トラクターを使用します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-192">Use this constructor if the member represents an attachable property member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeclaringType">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType DeclaringType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType DeclaringType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.DeclaringType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeclaringType As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ DeclaringType { System::Xaml::XamlType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeclaringType : System.Xaml.XamlType" Usage="System.Xaml.XamlMember.DeclaringType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6a37-193">この <see cref="T:System.Xaml.XamlType" /> に関連付けられているメンバーを宣言する型の <see cref="T:System.Xaml.XamlMember" /> を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-193">Gets the <see cref="T:System.Xaml.XamlType" /> for the type that declares the member that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c6a37-194">この <see cref="T:System.Xaml.XamlType" /> に関連付けられているメンバーを宣言する型の <see cref="T:System.Xaml.XamlMember" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-194">The <see cref="T:System.Xaml.XamlType" /> for the type that declares the member that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6a37-195">この値は、通常の初期化中に設定し、は通常`null`します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-195">This value is typically set during initialization and is usually not `null`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c6a37-196"><xref:System.Xaml.XamlMember.DeclaringType%2A> 情報は、そのコンス トラクターによって初期化のためで渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="c6a37-196"><xref:System.Xaml.XamlMember.DeclaringType%2A> information can be passed in by constructors for initialization.</span></span> <span data-ttu-id="c6a37-197">基本コンス トラクターの初期化を直接呼び出すことによって<xref:System.Xaml.XamlMember>派生クラスは、一部の基本クラスで行われる値のチェックを省略できます。</span><span class="sxs-lookup"><span data-stu-id="c6a37-197">By calling directly into base constructors, initialization for <xref:System.Xaml.XamlMember> derived classes can omit some of the value-checks that are made in the base class.</span></span> <span data-ttu-id="c6a37-198">そのため、派生の初期化は、基になる CLR 宣言の型システムの情報と予想される方法で配置されなくように XAML メンバーの型の報告されるメンバーのリレーションシップ情報を変更できます。</span><span class="sxs-lookup"><span data-stu-id="c6a37-198">Therefore, the derived initialization can change the reported type-member relationship information of a XAML member so that it no longer aligns in an expected way with the type system information of its underlying CLR declaration.</span></span> <span data-ttu-id="c6a37-199">セキュリティ クリティカルなチェックの種類の情報を宣言するには、基になる CLR 型を代わりに使用します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-199">For any security-critical checks of declaring type information, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeferringLoader">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt; DeferringLoader { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Xaml.XamlDeferringLoader&gt; DeferringLoader" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.DeferringLoader" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeferringLoader As XamlValueConverter(Of XamlDeferringLoader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlValueConverter&lt;System::Xaml::XamlDeferringLoader ^&gt; ^ DeferringLoader { System::Xaml::Schema::XamlValueConverter&lt;System::Xaml::XamlDeferringLoader ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeferringLoader : System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;" Usage="System.Xaml.XamlMember.DeferringLoader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6a37-200">
            <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> オブジェクトを取得します。これは XAML で宣言されたオブジェクトの遅延読み込みに使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-200">Gets a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> object, which is used for deferred loading of XAML declared objects.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c6a37-201">ジェネリックの <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> 制約のある <see cref="T:System.Xaml.XamlDeferringLoader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-201">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> with <see cref="T:System.Xaml.XamlDeferringLoader" /> constraint on the generic.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6a37-202">呼び出す<xref:System.Xaml.XamlMember.DeferringLoader%2A>呼び出す<xref:System.Xaml.XamlMember.LookupDeferringLoader%2A>またはそのメソッドの特定のオーバーライド。</span><span class="sxs-lookup"><span data-stu-id="c6a37-202">Calling <xref:System.Xaml.XamlMember.DeferringLoader%2A> invokes <xref:System.Xaml.XamlMember.LookupDeferringLoader%2A> or a specific override of that method.</span></span> <span data-ttu-id="c6a37-203">この動作は、初期の内部リフレクション ロジックで、情報がまだ設定されていない場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-203">This behavior occurs in cases where the initial internal reflection logic has not already set the information.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DependsOn">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt; DependsOn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlMember&gt; DependsOn" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.DependsOn" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DependsOn As IList(Of XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Xaml::XamlMember ^&gt; ^ DependsOn { System::Collections::Generic::IList&lt;System::Xaml::XamlMember ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DependsOn : System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt;" Usage="System.Xaml.XamlMember.DependsOn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6a37-204">
            <see cref="T:System.Xaml.XamlMember" /> オブジェクトの一覧を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-204">Gets a list of <see cref="T:System.Xaml.XamlMember" /> objects.</span>
          </span>
          <span data-ttu-id="c6a37-205">これらは、この <see cref="T:System.Xaml.XamlMember" /> に関連して初期化順序の依存関係が存在するメンバーを報告します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-205">These report the members where dependency relationships for initialization order exist relative to this <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c6a37-206">
            <see cref="T:System.Xaml.XamlMember" /> オブジェクトの一覧。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-206">A list of <see cref="T:System.Xaml.XamlMember" /> objects.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6a37-207">呼び出す<xref:System.Xaml.XamlMember.DependsOn%2A>呼び出す<xref:System.Xaml.XamlMember.LookupDependsOn%2A>またはそのメソッドの特定のオーバーライド。</span><span class="sxs-lookup"><span data-stu-id="c6a37-207">Calling <xref:System.Xaml.XamlMember.DependsOn%2A> invokes <xref:System.Xaml.XamlMember.LookupDependsOn%2A> or a specific override of that method.</span></span> <span data-ttu-id="c6a37-208">この動作は、初期の内部リフレクション ロジックで、情報がまだ設定されていない場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-208">This behavior occurs in cases where the initial internal reflection logic has not already set the information.</span></span>  
  
 <span data-ttu-id="c6a37-209">`DependsOn`パターンは、XAML の一般的な規則を意図的に矛盾するオブジェクト モデルのケースに適用できます。</span><span class="sxs-lookup"><span data-stu-id="c6a37-209">The `DependsOn` pattern can be applied to object model cases that deliberately contradict a general XAML rule.</span></span> <span data-ttu-id="c6a37-210">一般的な XAML 規則は、初期化テキストとして (または XAML 2009 のファクトリ メソッド) は渡されませんが、型のメンバーは任意の順序で割り当てることがある必要があります。</span><span class="sxs-lookup"><span data-stu-id="c6a37-210">The general XAML rule is that members of a type that are not passed as initialization text (or by a factory method in XAML 2009) must be able to be assigned in any order.</span></span> <span data-ttu-id="c6a37-211">適用することで、`DependsOn`パターン、メンバーに XAML ライターを指示することを常にこのメンバーの前に参照されているメンバーを処理します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-211">By applying a `DependsOn` pattern to a member, you can instruct XAML writers to always process the referenced member before this member.</span></span> <span data-ttu-id="c6a37-212">コンテキストまたはその他の情報は、その他のメンバーを設定した後にのみ使用できますが、現在のメンバーの値が必要とする状況では、このパターンを適用することができます。</span><span class="sxs-lookup"><span data-stu-id="c6a37-212">You can apply this pattern in situations where the value of the current member requires context or other information that is only available after the other member is set.</span></span>  
  
 <span data-ttu-id="c6a37-213">`DependsOn`パターンを慎重に適用され、アーキテクチャの目的を機能にプロパティのシナリオ用に予約する必要があります。</span><span class="sxs-lookup"><span data-stu-id="c6a37-213">The `DependsOn` pattern should be applied judiciously and reserved for property scenarios where it serves an architectural purpose.</span></span> <span data-ttu-id="c6a37-214">多数の依存関係には、XAML の処理速度が低下する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="c6a37-214">Large numbers of dependencies have the potential to slow down XAML processing.</span></span> <span data-ttu-id="c6a37-215">また、これが、循環依存関係を生成するために XAML 処理の動作が定義されている場合です。</span><span class="sxs-lookup"><span data-stu-id="c6a37-215">Also, it is possible to produce circular dependencies, in which case the XAML processing behavior is undefined.</span></span>  
  
 <span data-ttu-id="c6a37-216">例`DependsOn`WPF からのシナリオでは、特定のプロパティを含めるに<xref:System.Windows.Controls.ControlTemplate>と<xref:System.Windows.DataTemplate>の<xref:System.Windows.Trigger>、および<xref:System.Windows.Setter>します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-216">Example `DependsOn` scenarios from WPF include certain properties on <xref:System.Windows.Controls.ControlTemplate> and <xref:System.Windows.DataTemplate>, on <xref:System.Windows.Trigger>, and on <xref:System.Windows.Setter>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Markup.DependsOnAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c6a37-217">現在のオブジェクトが、別のオブジェクトと等しいかどうかを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-217">Indicates whether the current object is equal to another object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="xamlMember.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="c6a37-218">このオブジェクトと比較するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-218">The object to compare with this object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6a37-219">現在のオブジェクトが、別のオブジェクトと等しいかどうかを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-219">Indicates whether the current object is equal to another object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c6a37-220">現在のオブジェクトが <paramref name="obj" /> パラメーターと等しい場合は <see langword="true" />、それ以外の場合は <see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-220">
              <see langword="true" /> if the current object is equal to the <paramref name="obj" /> parameter; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Xaml.XamlMember other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.Xaml.XamlMember other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.Equals(System.Xaml.XamlMember)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As XamlMember) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Xaml::XamlMember ^ other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Xaml.XamlMember -&gt; bool" Usage="xamlMember.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Xaml.XamlMember" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="c6a37-221">このオブジェクトと比較するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-221">An object to compare with this object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6a37-222">現在のオブジェクトが、同じ型の別のオブジェクトと等しいかどうかを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-222">Indicates whether the current object is equal to another object of the same type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c6a37-223">現在のオブジェクトが <paramref name="other" /> パラメーターと等しい場合は <see langword="true" />、それ以外の場合は <see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-223">
              <see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="xamlMember.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c6a37-224">このオブジェクトのハッシュ コードを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-224">Returns the hash code for this object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c6a37-225">整数のハッシュ コード。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-225">An integer hash code.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXamlNamespaces">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;string&gt; GetXamlNamespaces ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;string&gt; GetXamlNamespaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.GetXamlNamespaces" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetXamlNamespaces () As IList(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IList&lt;System::String ^&gt; ^ GetXamlNamespaces();" />
      <MemberSignature Language="F#" Value="abstract member GetXamlNamespaces : unit -&gt; System.Collections.Generic.IList&lt;string&gt;&#xA;override this.GetXamlNamespaces : unit -&gt; System.Collections.Generic.IList&lt;string&gt;" Usage="xamlMember.GetXamlNamespaces " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c6a37-226">この XAML メンバーが存在することのできる XAML 名前空間のリストを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-226">Returns a list of XAML namespaces where this XAML member can exist.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c6a37-227">文字列としての XAML 名前空間識別子のリスト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-227">A list of XAML namespace identifiers as strings.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6a37-228">既定の実装を返します、<xref:System.Xaml.XamlType.GetXamlNamespaces%2A?displayProperty=nameWithType>から結果を呼び出し、<xref:System.Xaml.XamlMember.DeclaringType%2A>これに関連付けられている<xref:System.Xaml.XamlMember>します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-228">The default implementation returns the <xref:System.Xaml.XamlType.GetXamlNamespaces%2A?displayProperty=nameWithType> call result from the <xref:System.Xaml.XamlMember.DeclaringType%2A> that is associated with this <xref:System.Xaml.XamlMember>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoker">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlMemberInvoker Invoker { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlMemberInvoker Invoker" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.Invoker" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Invoker As XamlMemberInvoker" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlMemberInvoker ^ Invoker { System::Xaml::Schema::XamlMemberInvoker ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Invoker : System.Xaml.Schema.XamlMemberInvoker" Usage="System.Xaml.XamlMember.Invoker" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlMemberInvoker</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6a37-229">この <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> に関連付けられている <see cref="T:System.Xaml.XamlMember" /> の実装を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-229">Gets the <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> implementation that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c6a37-230">この <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> に関連付けられている <see cref="T:System.Xaml.XamlMember" /> 実装。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-230">The <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> implementation that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6a37-231">`Invoker`パターンは、高度な XAML 型システムの拡張機能手法です。</span><span class="sxs-lookup"><span data-stu-id="c6a37-231">The `Invoker` pattern is an advanced XAML type system extension technique.</span></span> <span data-ttu-id="c6a37-232">`Invoker`パターンは、.NET Framework XAML サービスからの XAML 型システムの定義を使用中に別のスキーマ型のマッピングの動作を挿入する方法を提供します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-232">The `Invoker` pattern provides a way to inject different schema type mapping behavior, while still using XAML type system definitions from .NET Framework XAML Services.</span></span>  
  
 <span data-ttu-id="c6a37-233">場合、<xref:System.Xaml.XamlMember.LookupInvoker%2A>のオーバーライド`null`、既定の実装を返す場合、または`null`がないため、<xref:System.Xaml.XamlMember.UnderlyingMember%2A>この<xref:System.Xaml.XamlMember>、<xref:System.Xaml.XamlMember.Invoker%2A>プロパティが返す<xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-233">If a <xref:System.Xaml.XamlMember.LookupInvoker%2A> override returns `null`, or if the default implementation returns `null` because it lacks the <xref:System.Xaml.XamlMember.UnderlyingMember%2A> for this <xref:System.Xaml.XamlMember>, the <xref:System.Xaml.XamlMember.Invoker%2A> property returns <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="c6a37-234"><xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=nameWithType> が既定値です。</span><span class="sxs-lookup"><span data-stu-id="c6a37-234"><xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=nameWithType> is the default.</span></span> <span data-ttu-id="c6a37-235">これはほとんど操作に .NET Framework XAML サービスと既定の XAML スキーマ コンテキストを使用して、特定が上書きされない場合は true。`Invoker`パターンは XAML 型システム エンティティを構築するために渡されます。</span><span class="sxs-lookup"><span data-stu-id="c6a37-235">This is true for most operations that use .NET Framework XAML Services and the default XAML schema context, and where no specific override `Invoker` patterns are passed for construction of XAML type system entities.</span></span>  
  
 <span data-ttu-id="c6a37-236">呼び出す<xref:System.Xaml.XamlMember.Invoker%2A>呼び出す<xref:System.Xaml.XamlMember.LookupInvoker%2A>またはそのメソッドの特定のオーバーライド。</span><span class="sxs-lookup"><span data-stu-id="c6a37-236">Calling <xref:System.Xaml.XamlMember.Invoker%2A> invokes <xref:System.Xaml.XamlMember.LookupInvoker%2A> or a specific override of that method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAmbient">
      <MemberSignature Language="C#" Value="public bool IsAmbient { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAmbient" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsAmbient" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAmbient As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAmbient { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAmbient : bool" Usage="System.Xaml.XamlMember.IsAmbient" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6a37-237">この <see cref="T:System.Xaml.XamlMember" /> をアンビエント プロパティとして報告するかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-237">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> is reported as an ambient property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c6a37-238">この <see cref="T:System.Xaml.XamlMember" /> がアンビエント プロパティとして報告される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-238">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> is reported as an ambient property; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6a37-239">呼び出す<xref:System.Xaml.XamlMember.IsAmbient%2A>呼び出す<xref:System.Xaml.XamlMember.LookupIsAmbient%2A>またはそのメソッドの特定のオーバーライド。</span><span class="sxs-lookup"><span data-stu-id="c6a37-239">Calling <xref:System.Xaml.XamlMember.IsAmbient%2A> invokes <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> or a specific override of that method.</span></span> <span data-ttu-id="c6a37-240">この動作は、初期の内部リフレクション ロジックで、情報がまだ設定されていない実装で発生します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-240">This behavior occurs in implementations where the initial internal reflection logic has not already set the information.</span></span>  
  
 <span data-ttu-id="c6a37-241">アンビエント プロパティのチェックは、通常は、オブジェクトと、型の修飾アンビエントの使用状況に依存する値が正しく機能できることを確認する XAML の処理ロジックの一部です。</span><span class="sxs-lookup"><span data-stu-id="c6a37-241">Checking for ambient properties is are usually part of XAML processing logic to make sure that objects and values that rely on ambient usage for type qualification can function correctly.</span></span> <span data-ttu-id="c6a37-242">.NET Framework XAML サービス Api と、既定の XAML スキーマ コンテキストと属性に基づいてこの値を設定します。<xref:System.Windows.Markup.AmbientAttribute>します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-242">The .NET Framework XAML Services APIs and the default XAML schema context populates this value based on attribution with <xref:System.Windows.Markup.AmbientAttribute>.</span></span> <span data-ttu-id="c6a37-243">既定の実装<xref:System.Xaml.XamlMember.LookupIsAmbient%2A>既存を使用して<xref:System.Windows.Markup.AmbientAttribute>方法では、し、返されます`true`場合<xref:System.Windows.Markup.AmbientAttribute>メンバーの宣言に存在します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-243">The default implementation of <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> uses this existing <xref:System.Windows.Markup.AmbientAttribute> technique, and it returns `true` if <xref:System.Windows.Markup.AmbientAttribute> exists on a member declaration.</span></span>  
  
 <span data-ttu-id="c6a37-244"><xref:System.Windows.Markup.AmbientAttribute> など、いくつかの WPF 型のメンバーで検出された<xref:System.Windows.Application>、 <xref:System.Windows.Setter>、および<xref:System.Windows.Style>します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-244"><xref:System.Windows.Markup.AmbientAttribute> is found on members of several WPF types, which include <xref:System.Windows.Application>, <xref:System.Windows.Setter>, and <xref:System.Windows.Style>.</span></span> <span data-ttu-id="c6a37-245">見つかったも、<xref:System.Windows.ResourceDictionary>型で、使用するすべてのメンバーを伴う<xref:System.Windows.ResourceDictionary>ようにその型がアンビエントと見なす場合でも、メンバーは、具体的には属性化されません。</span><span class="sxs-lookup"><span data-stu-id="c6a37-245">It is also found on the <xref:System.Windows.ResourceDictionary> type, which connotes that any member that uses <xref:System.Windows.ResourceDictionary> as its type should be considered ambient even if the member is not specifically attributed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Markup.AmbientAttribute" />
      </Docs>
    </Member>
    <Member MemberName="IsAttachable">
      <MemberSignature Language="C#" Value="public bool IsAttachable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAttachable" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsAttachable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAttachable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAttachable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAttachable : bool" Usage="System.Xaml.XamlMember.IsAttachable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6a37-246">この <see cref="T:System.Xaml.XamlMember" /> がアタッチ可能なメンバーかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-246">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> is an attachable member.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c6a37-247">この <see cref="T:System.Xaml.XamlMember" /> がアタッチ可能なメンバーである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-247">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> is an attachable member; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6a37-248"><xref:System.Xaml.XamlMember.IsAttachable%2A>コンス トラクターは、構築に使用されたに基づいて値が初期化される、<xref:System.Xaml.XamlMember>します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-248">The <xref:System.Xaml.XamlMember.IsAttachable%2A> value is initialized based on which constructor was used to construct a <xref:System.Xaml.XamlMember>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDirective">
      <MemberSignature Language="C#" Value="public bool IsDirective { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirective" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsDirective" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDirective As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDirective { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDirective : bool" Usage="System.Xaml.XamlMember.IsDirective" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6a37-249">この <see cref="T:System.Xaml.XamlMember" /> が XAML ディレクティブかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-249">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> is a XAML directive.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c6a37-250">この <see cref="T:System.Xaml.XamlMember" /> が XAML ディレクティブである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-250">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> is a XAML directive; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6a37-251"><xref:System.Xaml.XamlMember.IsDirective%2A>コンス トラクターは、構築に使用されたに基づいて値が初期化される、<xref:System.Xaml.XamlMember>します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-251">The <xref:System.Xaml.XamlMember.IsDirective%2A> value is initialized based on which constructor was used to construct a <xref:System.Xaml.XamlMember>.</span></span> <span data-ttu-id="c6a37-252">基本<xref:System.Xaml.XamlMember>コンス トラクターを初期化できるように<xref:System.Xaml.XamlMember.IsDirective%2A>は`false`します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-252">The base <xref:System.Xaml.XamlMember> constructors initialize so that <xref:System.Xaml.XamlMember.IsDirective%2A> is `false`.</span></span> <span data-ttu-id="c6a37-253">ただし、<xref:System.Xaml.XamlDirective>クラス (、<xref:System.Xaml.XamlMember>派生クラス) を初期化しますように<xref:System.Xaml.XamlMember.IsDirective%2A>は`true`します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-253">However, the <xref:System.Xaml.XamlDirective> class (a <xref:System.Xaml.XamlMember> derived class) initializes so that <xref:System.Xaml.XamlMember.IsDirective%2A> is `true`.</span></span>  
  
 <span data-ttu-id="c6a37-254">レポートする場合<xref:System.Xaml.XamlMember.IsDirective%2A>として`true`XAML メンバーのカスタム XAML スキーマ クラスの呼び出し元にから派生することを確認<xref:System.Xaml.XamlDirective>その動作を有効にする唯一の方法であるためです。</span><span class="sxs-lookup"><span data-stu-id="c6a37-254">If you want to report <xref:System.Xaml.XamlMember.IsDirective%2A> as `true` to callers of a custom XAML schema class for XAML members, make sure you derive from <xref:System.Xaml.XamlDirective> because that is the only way to enable that behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEvent">
      <MemberSignature Language="C#" Value="public bool IsEvent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEvent" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsEvent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEvent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEvent { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEvent : bool" Usage="System.Xaml.XamlMember.IsEvent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6a37-255">この <see cref="T:System.Xaml.XamlMember" /> がイベント メンバーを表すかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-255">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> represents an event member.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c6a37-256">この <see cref="T:System.Xaml.XamlMember" /> がイベントを表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-256">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents an event; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6a37-257">呼び出す<xref:System.Xaml.XamlMember.IsEvent%2A>呼び出す<xref:System.Xaml.XamlMember.LookupIsEvent%2A>またはそのメソッドの特定のオーバーライド。</span><span class="sxs-lookup"><span data-stu-id="c6a37-257">Calling <xref:System.Xaml.XamlMember.IsEvent%2A> invokes <xref:System.Xaml.XamlMember.LookupIsEvent%2A> or a specific override of that method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNameValid">
      <MemberSignature Language="C#" Value="public bool IsNameValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNameValid" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsNameValid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNameValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNameValid { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNameValid : bool" Usage="System.Xaml.XamlMember.IsNameValid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6a37-258">この <see cref="T:System.Xaml.XamlMember" /> が <see cref="P:System.Xaml.XamlMember.Name" /> として有効な <see langword="xamlName" /> 文字列を使用して初期化されているかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-258">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> is initialized with a valid <see langword="xamlName" /> string as its <see cref="P:System.Xaml.XamlMember.Name" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c6a37-259">この <see cref="T:System.Xaml.XamlMember" /> が有効な <see langword="true" /> 文字列で初期化されている場合は <see langword="xamlName" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-259">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> is initialized with a valid <see langword="xamlName" /> string; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Xaml.XamlMember.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6a37-260">この <see cref="T:System.Xaml.XamlMember" /> が読み取り専用のメンバーを表すかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-260">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> represents a read-only member.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c6a37-261">この <see cref="T:System.Xaml.XamlMember" /> が読み取り専用メンバーを表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-261">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a read-only member; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6a37-262">呼び出す<xref:System.Xaml.XamlMember.IsReadOnly%2A>呼び出す<xref:System.Xaml.XamlMember.LookupIsReadOnly%2A>またはそのメソッドの特定のオーバーライド。</span><span class="sxs-lookup"><span data-stu-id="c6a37-262">Calling <xref:System.Xaml.XamlMember.IsReadOnly%2A> invokes <xref:System.Xaml.XamlMember.LookupIsReadOnly%2A> or a specific override of that method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadPublic">
      <MemberSignature Language="C#" Value="public bool IsReadPublic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadPublic" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsReadPublic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadPublic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadPublic { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadPublic : bool" Usage="System.Xaml.XamlMember.IsReadPublic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6a37-263">この <see cref="T:System.Xaml.XamlMember" /> が、呼び出し可能なパブリックの <see langword="get" /> アクセサーを持つメンバーを表すかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-263">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> represents a member with a callable public <see langword="get" /> accessor.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c6a37-264">この <see cref="T:System.Xaml.XamlMember" /> が呼び出し可能なパブリックの <see langword="true" /> アクセサーを表す場合は <see langword="get" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-264">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a callable public <see langword="get" /> accessor; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6a37-265"><xref:System.Xaml.XamlMember.IsReadPublic%2A>値かどうかのチェック、<xref:System.Xaml.XamlMember.DeclaringType%2A>がパブリック。</span><span class="sxs-lookup"><span data-stu-id="c6a37-265">The <xref:System.Xaml.XamlMember.IsReadPublic%2A> value checks whether the <xref:System.Xaml.XamlMember.DeclaringType%2A> is public.</span></span> <span data-ttu-id="c6a37-266">場合<xref:System.Xaml.XamlMember.DeclaringType%2A>が非パブリック、 `get` 、実用的な方法で呼び出すことはないと<xref:System.Xaml.XamlMember.IsReadPublic%2A>返します`false`。</span><span class="sxs-lookup"><span data-stu-id="c6a37-266">If <xref:System.Xaml.XamlMember.DeclaringType%2A> is nonpublic, the `get` accessor is not callable in a practical way, and <xref:System.Xaml.XamlMember.IsReadPublic%2A> returns `false`.</span></span>  
  
 <span data-ttu-id="c6a37-267">呼び出す<xref:System.Xaml.XamlMember.IsReadPublic%2A>呼び出す<xref:System.Xaml.XamlMember.LookupIsReadPublic%2A>またはそのメソッドの特定のオーバーライド。</span><span class="sxs-lookup"><span data-stu-id="c6a37-267">Calling <xref:System.Xaml.XamlMember.IsReadPublic%2A> invokes <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> or a specific override of that method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c6a37-268"><xref:System.Xaml.XamlMember.LookupIsReadPublic%2A>メソッドは仮想であり、そのため、オーバーライドされることができます。</span><span class="sxs-lookup"><span data-stu-id="c6a37-268">The <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> method is virtual and therefore, can be overridden.</span></span> <span data-ttu-id="c6a37-269">オーバーライドでは、情報を変更する (故意またはそれ以外の場合)、報告されたアクセス XAML メンバーの基になる CLR 宣言の型システムへのアクセスの情報と予想される方法で配置されなくように可能性があります。</span><span class="sxs-lookup"><span data-stu-id="c6a37-269">The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration.</span></span> <span data-ttu-id="c6a37-270">アクセス レベルのセキュリティ クリティカルなチェックには、代わりに、基になる CLR 型を使用します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-270">For any security-critical checks of access levels, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUnknown">
      <MemberSignature Language="C#" Value="public bool IsUnknown { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUnknown" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsUnknown" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsUnknown As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUnknown { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsUnknown : bool" Usage="System.Xaml.XamlMember.IsUnknown" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6a37-271">型およびメンバーの解決に使用されるバッキング システムによって解決できないメンバーであるかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-271">Gets a value that indicates whether the member is not resolvable by the backing system that is used for type and member resolution.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c6a37-272">メンバーを解決できない場合は <see langword="true" />。メンバーを解決できる場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-272">
              <see langword="true" /> if the member is not resolvable; <see langword="false" /> if the member is resolvable.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6a37-273">A<xref:System.Xaml.XamlMember>で構築されますが、<xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29>署名を返します`true`の<xref:System.Xaml.XamlMember.IsUnknown%2A>します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-273">A <xref:System.Xaml.XamlMember> that is constructed with the <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> signature returns `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span></span>  
  
 <span data-ttu-id="c6a37-274">関連する読み込みパスの<xref:System.Xaml.XamlObjectWriter>、<xref:System.Xaml.XamlMember>で`true`の<xref:System.Xaml.XamlMember.IsUnknown%2A>オブジェクト グラフに書き込まれることはできません。</span><span class="sxs-lookup"><span data-stu-id="c6a37-274">For a load path that involves <xref:System.Xaml.XamlObjectWriter>, a <xref:System.Xaml.XamlMember> with `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A> cannot be written into an object graph.</span></span> <span data-ttu-id="c6a37-275">.NET Framework XAML サービスの Api では既定の実装、<xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType>スローを呼び出し、<xref:System.Xaml.XamlObjectWriterException>ときに、関連する<xref:System.Xaml.XamlMember>レポート`true`の<xref:System.Xaml.XamlMember.IsUnknown%2A>。</span><span class="sxs-lookup"><span data-stu-id="c6a37-275">Under the default implementations in .NET Framework XAML Services APIs, the <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> call throws a <xref:System.Xaml.XamlObjectWriterException> when the relevant <xref:System.Xaml.XamlMember> reports `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span></span>  
  
 <span data-ttu-id="c6a37-276">構成しないでください、<xref:System.Xaml.XamlMember>の値を持つ`true`の<xref:System.Xaml.XamlMember.IsUnknown%2A>実装からの例外を処理できる場合を除き、 <xref:System.Xaml.XamlObjectWriter>、またはその他の方法を調整するが、<xref:System.Xaml.XamlObjectWriter>動作します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-276">You should not construct a <xref:System.Xaml.XamlMember> that has a value of `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A> unless your implementation can handle the exceptions from <xref:System.Xaml.XamlObjectWriter>, or you have other ways to adjust the <xref:System.Xaml.XamlObjectWriter> behavior.</span></span>  
  
 <span data-ttu-id="c6a37-277">呼び出す<xref:System.Xaml.XamlMember.IsUnknown%2A>呼び出す<xref:System.Xaml.XamlMember.LookupIsUnknown%2A>またはそのメソッドの特定のオーバーライド。</span><span class="sxs-lookup"><span data-stu-id="c6a37-277">Calling <xref:System.Xaml.XamlMember.IsUnknown%2A> invokes <xref:System.Xaml.XamlMember.LookupIsUnknown%2A> or a specific override of that method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWriteOnly">
      <MemberSignature Language="C#" Value="public bool IsWriteOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWriteOnly" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsWriteOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsWriteOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsWriteOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsWriteOnly : bool" Usage="System.Xaml.XamlMember.IsWriteOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6a37-278">この <see cref="T:System.Xaml.XamlMember" /> が書き込み専用のメンバーを表すかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-278">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> represents a write-only member.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c6a37-279">この <see cref="T:System.Xaml.XamlMember" /> が書き込み専用メンバーを表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-279">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a write-only member; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6a37-280">呼び出す<xref:System.Xaml.XamlMember.IsWriteOnly%2A>呼び出す<xref:System.Xaml.XamlMember.LookupIsWriteOnly%2A>またはそのメソッドの特定のオーバーライド。</span><span class="sxs-lookup"><span data-stu-id="c6a37-280">Calling <xref:System.Xaml.XamlMember.IsWriteOnly%2A> invokes <xref:System.Xaml.XamlMember.LookupIsWriteOnly%2A> or a specific override of that method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWritePublic">
      <MemberSignature Language="C#" Value="public bool IsWritePublic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWritePublic" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsWritePublic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsWritePublic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsWritePublic { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsWritePublic : bool" Usage="System.Xaml.XamlMember.IsWritePublic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6a37-281">この <see cref="T:System.Xaml.XamlMember" /> が、呼び出し可能なパブリックの <see langword="set" /> アクセサーを持つメンバーを表すかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-281">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> represents a member that has a callable public <see langword="set" /> accessor.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c6a37-282">この <see cref="T:System.Xaml.XamlMember" /> が呼び出し可能なパブリックの <see langword="true" /> アクセサーを表す場合は <see langword="set" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-282">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a callable public <see langword="set" /> accessor; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6a37-283"><xref:System.Xaml.XamlMember.IsWritePublic%2A>値を考慮するかどうか、<xref:System.Xaml.XamlMember.DeclaringType%2A>パブリック決定の一部として。</span><span class="sxs-lookup"><span data-stu-id="c6a37-283">The <xref:System.Xaml.XamlMember.IsWritePublic%2A> value considers whether the <xref:System.Xaml.XamlMember.DeclaringType%2A> is public as part of the determination.</span></span> <span data-ttu-id="c6a37-284">場合<xref:System.Xaml.XamlMember.DeclaringType%2A>が非パブリック、 `set` 、実用的な方法で呼び出すことはないと<xref:System.Xaml.XamlMember.IsWritePublic%2A>返します`false`。</span><span class="sxs-lookup"><span data-stu-id="c6a37-284">If <xref:System.Xaml.XamlMember.DeclaringType%2A> is nonpublic, the `set` accessor is not callable in a practical way, and <xref:System.Xaml.XamlMember.IsWritePublic%2A> returns `false`.</span></span>  
  
 <span data-ttu-id="c6a37-285">呼び出す<xref:System.Xaml.XamlMember.IsWritePublic%2A>呼び出す<xref:System.Xaml.XamlMember.LookupIsWritePublic%2A>またはそのメソッドの特定のオーバーライド。</span><span class="sxs-lookup"><span data-stu-id="c6a37-285">Calling <xref:System.Xaml.XamlMember.IsWritePublic%2A> invokes <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> or a specific override of that method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c6a37-286"><xref:System.Xaml.XamlMember.LookupIsWritePublic%2A>メソッドは仮想であり、そのため、オーバーライドされることができます。</span><span class="sxs-lookup"><span data-stu-id="c6a37-286">The <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> method is virtual and therefore, can be overridden.</span></span> <span data-ttu-id="c6a37-287">オーバーライドでは、情報を変更する (故意またはそれ以外の場合)、報告されたアクセス XAML メンバーの基になる CLR 宣言の型システムへのアクセスの情報と予想される方法で配置されなくように可能性があります。</span><span class="sxs-lookup"><span data-stu-id="c6a37-287">The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration.</span></span> <span data-ttu-id="c6a37-288">アクセス レベルのセキュリティ クリティカルなチェックには、代わりに、基になる CLR 型を使用します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-288">For any security-critical checks of access levels, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupCustomAttributeProvider">
      <MemberSignature Language="C#" Value="protected virtual System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupCustomAttributeProvider" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupCustomAttributeProvider () As ICustomAttributeProvider" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Reflection::ICustomAttributeProvider ^ LookupCustomAttributeProvider();" />
      <MemberSignature Language="F#" Value="abstract member LookupCustomAttributeProvider : unit -&gt; System.Reflection.ICustomAttributeProvider&#xA;override this.LookupCustomAttributeProvider : unit -&gt; System.Reflection.ICustomAttributeProvider" Usage="xamlMember.LookupCustomAttributeProvider " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ICustomAttributeProvider</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c6a37-289">派生クラスで実装される場合、<see cref="T:System.Reflection.ICustomAttributeProvider" /> 実装を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-289">When implemented in a derived class, returns an <see cref="T:System.Reflection.ICustomAttributeProvider" /> implementation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c6a37-290">
            <see cref="T:System.Reflection.ICustomAttributeProvider" /> の実装。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-290">An <see cref="T:System.Reflection.ICustomAttributeProvider" /> implementation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6a37-291">CLR 属性の値を取得する代替方法を内部のリフレクションを提供するのには、このメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="c6a37-291">Override this method to provide the internal reflection with an alternative way to obtain CLR attribute values.</span></span> <span data-ttu-id="c6a37-292">呼び出しなどの一般的な CLR リフレクション ロジックを使用してオーバーライドがない場合、内部の reflector<xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A>します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-292">In the absence of an override, the internal reflector uses typical CLR reflection logic such as calls to <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A>.</span></span>  
  
 <span data-ttu-id="c6a37-293">既定の実装では、`null` が返されます。</span><span class="sxs-lookup"><span data-stu-id="c6a37-293">The default implementation returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupDeferringLoader">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt; LookupDeferringLoader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Xaml.XamlDeferringLoader&gt; LookupDeferringLoader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupDeferringLoader" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupDeferringLoader () As XamlValueConverter(Of XamlDeferringLoader)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlValueConverter&lt;System::Xaml::XamlDeferringLoader ^&gt; ^ LookupDeferringLoader();" />
      <MemberSignature Language="F#" Value="abstract member LookupDeferringLoader : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;&#xA;override this.LookupDeferringLoader : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;" Usage="xamlMember.LookupDeferringLoader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c6a37-294">
            <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> オブジェクトを返します。これは XAML で宣言されたオブジェクトの遅延読み込みに使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-294">Returns a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> object, which is used for deferred loading of XAML declared objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c6a37-295">ジェネリックの <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> 制約のある <see cref="T:System.Xaml.XamlDeferringLoader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-295">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> that has a <see cref="T:System.Xaml.XamlDeferringLoader" /> constraint on the generic.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6a37-296">呼び出し元から値を取得するときに、このメソッドが呼び出され、<xref:System.Xaml.XamlMember.DeferringLoader%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="c6a37-296">This method is invoked when a caller gets a value from the <xref:System.Xaml.XamlMember.DeferringLoader%2A> property.</span></span> <span data-ttu-id="c6a37-297">このメソッドをオーバーライドする場合は<xref:System.Xaml.XamlMember.DeferringLoader%2A>リフレクションの内部に既定で有効になっている値からとは異なる値を返すカスタムも指定する場合と<xref:System.Xaml.Schema.XamlMemberInvoker>情報。</span><span class="sxs-lookup"><span data-stu-id="c6a37-297">Override this method if you want <xref:System.Xaml.XamlMember.DeferringLoader%2A> to return a value that differs from the value that is enabled by default internal reflection, and if you are also providing custom <xref:System.Xaml.Schema.XamlMemberInvoker> information.</span></span>  
  
 <span data-ttu-id="c6a37-298">既定の実装オブジェクトを返しますの読み取りをするか<xref:System.Windows.Markup.XamlDeferLoadAttribute>またはを使用して、<xref:System.Xaml.XamlDeferringLoader>宣言する型から。</span><span class="sxs-lookup"><span data-stu-id="c6a37-298">The default implementation returns an object either by reading <xref:System.Windows.Markup.XamlDeferLoadAttribute> or using a <xref:System.Xaml.XamlDeferringLoader> from the declaring type.</span></span> <span data-ttu-id="c6a37-299">どちらのオブジェクトがあるか、このメソッドが返す可能性があります`null`します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-299">If neither object is available, this method might return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.DeferringLoader" />
      </Docs>
    </Member>
    <Member MemberName="LookupDependsOn">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt; LookupDependsOn ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlMember&gt; LookupDependsOn() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupDependsOn" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupDependsOn () As IList(Of XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IList&lt;System::Xaml::XamlMember ^&gt; ^ LookupDependsOn();" />
      <MemberSignature Language="F#" Value="abstract member LookupDependsOn : unit -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt;&#xA;override this.LookupDependsOn : unit -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt;" Usage="xamlMember.LookupDependsOn " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c6a37-300">
            <see cref="T:System.Xaml.XamlMember" /> オブジェクトの一覧を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-300">Returns a list of <see cref="T:System.Xaml.XamlMember" /> objects.</span>
          </span>
          <span data-ttu-id="c6a37-301">一覧の項目では、この <see cref="T:System.Xaml.XamlMember" /> に関連して初期化順序の依存関係が存在するメンバーが報告されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-301">Items in the list report the members where dependency relationships for initialization order exist relative to this <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c6a37-302">
            <see cref="T:System.Xaml.XamlMember" /> オブジェクトの一覧。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-302">A list of <see cref="T:System.Xaml.XamlMember" /> objects.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6a37-303">呼び出し元から値を取得するときに、このメソッドが呼び出され、<xref:System.Xaml.XamlMember.DependsOn%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="c6a37-303">This method is invoked when a caller gets a value from the <xref:System.Xaml.XamlMember.DependsOn%2A> property.</span></span> <span data-ttu-id="c6a37-304">このメソッドをオーバーライドする場合は<xref:System.Xaml.XamlMember.DependsOn%2A>リフレクションの内部に既定で有効になっている値からとは異なる値を返すカスタムも指定する場合と<xref:System.Xaml.Schema.XamlMemberInvoker>情報。</span><span class="sxs-lookup"><span data-stu-id="c6a37-304">Override this method if you want <xref:System.Xaml.XamlMember.DependsOn%2A> to return a value that differs from the value that is enabled by default internal reflection, and if you are also providing custom <xref:System.Xaml.Schema.XamlMemberInvoker> information.</span></span>  
  
 <span data-ttu-id="c6a37-305">WPF XAML リーダーとライターの実装では、このケースの属性<xref:System.Windows.Markup.DependsOnAttribute>します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-305">The WPF XAML reader and writer implementations attribute this case with <xref:System.Windows.Markup.DependsOnAttribute>.</span></span> <span data-ttu-id="c6a37-306">既存のこの既定の実装を使用して<xref:System.Windows.Markup.DependsOnAttribute>手法です。</span><span class="sxs-lookup"><span data-stu-id="c6a37-306">The default implementation uses this existing <xref:System.Windows.Markup.DependsOnAttribute> technique.</span></span>  
  
 <span data-ttu-id="c6a37-307">使用していない場合は、このメソッドをオーバーライド<xref:System.Windows.Markup.DependsOnAttribute>この目的で、独自の方法でプロパティの処理順序を示すためには、その手法を置き換えます。</span><span class="sxs-lookup"><span data-stu-id="c6a37-307">Override this method if you are not using <xref:System.Windows.Markup.DependsOnAttribute> for this purpose and intend to replace that technique for indicating property processing order with your own technique.</span></span> <span data-ttu-id="c6a37-308">プロパティの処理順序をサポートする予定がない場合は、その結果は返されません、これは適切なため、既定の実装を使用できます。</span><span class="sxs-lookup"><span data-stu-id="c6a37-308">If you do not intend to support a property processing order, you can use the default implementation because it returns no results, which is appropriate.</span></span>  
  
 <span data-ttu-id="c6a37-309">リストは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="c6a37-309">The list is read-only.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.DependsOn" />
      </Docs>
    </Member>
    <Member MemberName="LookupInvoker">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlMemberInvoker LookupInvoker ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlMemberInvoker LookupInvoker() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupInvoker" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupInvoker () As XamlMemberInvoker" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlMemberInvoker ^ LookupInvoker();" />
      <MemberSignature Language="F#" Value="abstract member LookupInvoker : unit -&gt; System.Xaml.Schema.XamlMemberInvoker&#xA;override this.LookupInvoker : unit -&gt; System.Xaml.Schema.XamlMemberInvoker" Usage="xamlMember.LookupInvoker " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlMemberInvoker</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c6a37-310">この <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> に関連付けられた <see cref="T:System.Xaml.XamlMember" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-310">Returns a <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c6a37-311">この <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> の <see cref="T:System.Xaml.XamlMember" /> 情報、または <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-311">The <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> information for this <see cref="T:System.Xaml.XamlMember" />; or <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6a37-312">このメソッドを呼び出して<xref:System.Xaml.XamlMember.Invoker%2A>します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-312">This method is invoked by calls to <xref:System.Xaml.XamlMember.Invoker%2A>.</span></span>  
  
 <span data-ttu-id="c6a37-313">既定の実装いる必要はありません、<xref:System.Xaml.XamlMember>初期を渡すコンス トラクターのいずれかを使用して構築する<xref:System.Xaml.Schema.XamlMemberInvoker>します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-313">The default implementation does not require that a <xref:System.Xaml.XamlMember> be constructed by using one of the constructors that pass an initial <xref:System.Xaml.Schema.XamlMemberInvoker>.</span></span> <span data-ttu-id="c6a37-314">ただし、<xref:System.Xaml.XamlMember.UnderlyingMember%2A>の値が存在する必要があります、 <xref:System.Xaml.XamlMember>、それ以外の既定の実装を返します`null`します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-314">However, an <xref:System.Xaml.XamlMember.UnderlyingMember%2A> value must exist for the <xref:System.Xaml.XamlMember>; otherwise, the default implementation returns `null`.</span></span>  
  
 <span data-ttu-id="c6a37-315">派生させることも、このメソッドをオーバーライド<xref:System.Xaml.Schema.XamlMemberInvoker>派生クラスを返すしようとします。</span><span class="sxs-lookup"><span data-stu-id="c6a37-315">Override this method if you also derive from <xref:System.Xaml.Schema.XamlMemberInvoker> and intend to return the derived class.</span></span> <span data-ttu-id="c6a37-316">値を返す場合`null`、<xref:System.Xaml.XamlMember.Invoker%2A>返します<xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=nameWithType>呼び出し元にします。</span><span class="sxs-lookup"><span data-stu-id="c6a37-316">If you return `null`, <xref:System.Xaml.XamlMember.Invoker%2A> returns <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=nameWithType> to callers.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.Invoker" />
        <altmember cref="T:System.Xaml.Schema.XamlMemberInvoker" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsAmbient">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsAmbient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsAmbient() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsAmbient" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsAmbient () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsAmbient();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsAmbient : unit -&gt; bool&#xA;override this.LookupIsAmbient : unit -&gt; bool" Usage="xamlMember.LookupIsAmbient " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c6a37-317">この <see cref="T:System.Xaml.XamlMember" /> がアンビエント プロパティとして報告されているかどうかを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-317">Returns whether this <see cref="T:System.Xaml.XamlMember" /> is reported as an ambient property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c6a37-318">この <see cref="T:System.Xaml.XamlMember" /> をアンビエント プロパティとして報告する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-318">
              <see langword="true" /> to report this <see cref="T:System.Xaml.XamlMember" /> as an ambient property; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6a37-319">このメソッドは、アンビエント XAML プロパティの情報をチェックする内部の呼び出しによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="c6a37-319">This method is invoked by internal calls that check for ambient XAML property information.</span></span> <span data-ttu-id="c6a37-320">アンビエント プロパティの動作は、XAML リーダーと XAML ライターのパブリック API の動作に反映します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-320">Ambient property behavior is accounted for in the public API behavior of XAML readers and XAML writers.</span></span> <span data-ttu-id="c6a37-321">参照する内部呼び出し<xref:System.Xaml.XamlMember.LookupIsAmbient%2A>オブジェクトと、型の修飾アンビエントの使用状況に依存する値が正しく機能できることを確認する XAML の処理ロジックの一部では、通常、します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-321">The internal calls that reference <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> are usually part of XAML processing logic to make sure that objects and values that rely on ambient usage for type qualification can function correctly.</span></span> <span data-ttu-id="c6a37-322">既定の .NET Framework XAML サービス実装では、CLR バッキング型にリフレクションからこの情報を取得する属性を使用します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-322">The default .NET Framework XAML Services implementation uses CLR attributing to obtain this information from reflection over backing types.</span></span> <span data-ttu-id="c6a37-323">具体的には、既定の実装をチェック<xref:System.Windows.Markup.AmbientAttribute>返します`true`の<xref:System.Xaml.XamlMember.LookupIsAmbient%2A>場合<xref:System.Windows.Markup.AmbientAttribute>はメンバーの定義に存在します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-323">Specifically, the default implementation checks for <xref:System.Windows.Markup.AmbientAttribute> and returns `true` for <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> if <xref:System.Windows.Markup.AmbientAttribute> exists on a member definition.</span></span>  
  
 <span data-ttu-id="c6a37-324">使用していない場合は、このメソッドをオーバーライド<xref:System.Windows.Markup.AmbientAttribute>この目的で、独自の方法では、XAML のアンビエント プロパティを示すためには、その手法を置き換えます。</span><span class="sxs-lookup"><span data-stu-id="c6a37-324">Override this method if you are not using <xref:System.Windows.Markup.AmbientAttribute> for this purpose and intend to replace that technique for indicating ambient XAML properties with your own technique.</span></span>  
  
 <span data-ttu-id="c6a37-325">属性を WPF から Api の使用例<xref:System.Windows.Markup.AmbientAttribute>は<xref:System.Windows.Trigger.Property%2A?displayProperty=nameWithType>と<xref:System.Windows.Style.BasedOn%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-325">Example APIs from WPF that attribute with <xref:System.Windows.Markup.AmbientAttribute> are <xref:System.Windows.Trigger.Property%2A?displayProperty=nameWithType> and <xref:System.Windows.Style.BasedOn%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Markup.AmbientAttribute" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsEvent">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsEvent" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsEvent () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsEvent();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsEvent : unit -&gt; bool&#xA;override this.LookupIsEvent : unit -&gt; bool" Usage="xamlMember.LookupIsEvent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c6a37-326">この <see cref="T:System.Xaml.XamlMember" /> がイベントを表すかどうかを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-326">Returns whether this <see cref="T:System.Xaml.XamlMember" /> represents an event.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c6a37-327">この <see cref="T:System.Xaml.XamlMember" /> がイベントを表すことを報告する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-327">
              <see langword="true" /> to report that this <see cref="T:System.Xaml.XamlMember" /> represents an event; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6a37-328">既定の実装のチェックするかどうか<xref:System.Xaml.XamlMember.UnderlyingMember%2A>の種類は<xref:System.Reflection.EventInfo>、し場合を返します`true`します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-328">The default implementation checks whether <xref:System.Xaml.XamlMember.UnderlyingMember%2A> is of type <xref:System.Reflection.EventInfo>, and if it is, returns `true`.</span></span>  
  
 <span data-ttu-id="c6a37-329">呼び出し元から値を取得するときに、このメソッドが呼び出される<xref:System.Xaml.XamlMember.IsEvent%2A>します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-329">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsEvent%2A>.</span></span> <span data-ttu-id="c6a37-330">全体の一貫した結果をレポートする場合は、このメソッドをオーバーライド<xref:System.Xaml.XamlMember>派生クラス、または XAML を決定する、解釈される使用可能なメタデータが特殊化されたかどうかは、ケースごとにシステム表現を入力します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-330">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available that can be interpreted to determine XAML type system representations on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsEvent" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsReadOnly">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsReadOnly () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsReadOnly();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsReadOnly : unit -&gt; bool&#xA;override this.LookupIsReadOnly : unit -&gt; bool" Usage="xamlMember.LookupIsReadOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c6a37-331">この <see cref="T:System.Xaml.XamlMember" /> が目的の読み取り専用プロパティを表すかどうかを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-331">Returns whether this <see cref="T:System.Xaml.XamlMember" /> represents an intended read-only property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c6a37-332">この <see cref="T:System.Xaml.XamlMember" /> を目的の読み取り専用プロパティとして報告する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-332">
              <see langword="true" /> to report this <see cref="T:System.Xaml.XamlMember" /> as an intended read-only property; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6a37-333">既定の実装を返します`true`場合<xref:System.Xaml.XamlMember.UnderlyingMember%2A>存在しますが、パブリック`set`アクセサーでは、内部のリフレクションによって決定されるには、存在しません。</span><span class="sxs-lookup"><span data-stu-id="c6a37-333">The default implementation returns `true` if <xref:System.Xaml.XamlMember.UnderlyingMember%2A> exists, but a public `set` accessor does not exist for it, as determined by internal reflection.</span></span>  
  
 <span data-ttu-id="c6a37-334">呼び出し元から値を取得するときに、このメソッドが呼び出される<xref:System.Xaml.XamlMember.IsReadOnly%2A>します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-334">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsReadOnly%2A>.</span></span> <span data-ttu-id="c6a37-335">全体の一貫した結果をレポートする場合は、このメソッドをオーバーライド<xref:System.Xaml.XamlMember>派生クラス、または XAML を決定する、解釈される使用可能なメタデータが特殊化されたかどうかは、ケースごとにシステム表現を入力します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-335">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available that can be interpreted to determine XAML type system representations on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsReadPublic">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsReadPublic ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsReadPublic() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsReadPublic" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsReadPublic () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsReadPublic();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsReadPublic : unit -&gt; bool&#xA;override this.LookupIsReadPublic : unit -&gt; bool" Usage="xamlMember.LookupIsReadPublic " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c6a37-336">この <see cref="T:System.Xaml.XamlMember" /> がパブリックの <see langword="get" /> アクセサーを持つプロパティを表すかどうかを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-336">Returns whether this <see cref="T:System.Xaml.XamlMember" /> represents a property that has a public <see langword="get" /> accessor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c6a37-337">この <see cref="T:System.Xaml.XamlMember" /> がパブリックの <see langword="true" /> アクセサーを持つプロパティを表す場合は <see langword="get" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-337">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a property that has a public <see langword="get" /> accessor; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6a37-338">既定の実装は、内部のリフレクションまたは否定の結果を返します<xref:System.Xaml.XamlMember.IsWriteOnly%2A>、その順序で処理します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-338">The default implementation returns results based either on internal reflection or the negation of <xref:System.Xaml.XamlMember.IsWriteOnly%2A>, processing in that order.</span></span>  
  
 <span data-ttu-id="c6a37-339"><xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> そのメンバー自体がパブリックかどうかを返します返します`true`型を宣言する非パブリックのパブリック メンバーにします。</span><span class="sxs-lookup"><span data-stu-id="c6a37-339"><xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> returns whether the member itself is public; it returns `true` for a public member on a nonpublic declaring type.</span></span> <span data-ttu-id="c6a37-340">使用<xref:System.Xaml.XamlMember.IsReadPublic%2A>代わりに、宣言型の可視性を検討する場合。</span><span class="sxs-lookup"><span data-stu-id="c6a37-340">Use <xref:System.Xaml.XamlMember.IsReadPublic%2A> instead, if you also want to consider the visibility of the declaring type.</span></span>  
  
 <span data-ttu-id="c6a37-341">呼び出し元から値を取得するときに、このメソッドが呼び出される<xref:System.Xaml.XamlMember.IsReadPublic%2A>します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-341">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsReadPublic%2A>.</span></span> <span data-ttu-id="c6a37-342">全体の一貫した結果をレポートする場合は、このメソッドをオーバーライド<xref:System.Xaml.XamlMember>派生クラスでは、ケースごとにこれを確認する利用可能なメタデータを特殊化した場合またはします。</span><span class="sxs-lookup"><span data-stu-id="c6a37-342">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c6a37-343"><xref:System.Xaml.XamlMember.LookupIsReadPublic%2A>メソッドは仮想であり、そのため、オーバーライドされることができます。</span><span class="sxs-lookup"><span data-stu-id="c6a37-343">The <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> method is virtual and therefore, can be overridden.</span></span> <span data-ttu-id="c6a37-344">オーバーライドでは、情報を変更する (故意またはそれ以外の場合)、報告されたアクセス XAML メンバーの基になる CLR 宣言の型システムへのアクセスの情報と予想される方法で配置されなくように可能性があります。</span><span class="sxs-lookup"><span data-stu-id="c6a37-344">The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration.</span></span> <span data-ttu-id="c6a37-345">アクセス レベルのセキュリティ クリティカルなチェックには、代わりに、基になる CLR 型を使用します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-345">For any security-critical checks of access levels, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsReadPublic" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsUnknown">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsUnknown ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsUnknown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsUnknown" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsUnknown () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsUnknown();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsUnknown : unit -&gt; bool&#xA;override this.LookupIsUnknown : unit -&gt; bool" Usage="xamlMember.LookupIsUnknown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c6a37-346">この <see cref="T:System.Xaml.XamlMember" /> が型およびメンバーの解決に使用されるバッキング システムによって解決できないメンバーを表すかどうかを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-346">Returns whether this <see cref="T:System.Xaml.XamlMember" /> represents a member that is not resolvable by the backing system that is used for type and member resolution.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c6a37-347">この <see cref="T:System.Xaml.XamlMember" /> が解決できないメンバーを表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-347">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a non-resolvable member; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6a37-348">呼び出し元から値を取得するときに、このメソッドを呼び出すことが<xref:System.Xaml.XamlMember.IsUnknown%2A>します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-348">This method may be invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span></span> <span data-ttu-id="c6a37-349">既定の実装が reflection 内部に基づいてかのチェックの結果を返します、`null`値<xref:System.Xaml.XamlMember.UnderlyingMember%2A>、その順序で処理します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-349">The default implementation returns results that are based on either internal reflection or checking for a `null` value of <xref:System.Xaml.XamlMember.UnderlyingMember%2A>, processing in that order.</span></span>  
  
 <span data-ttu-id="c6a37-350">全体の一貫した結果をレポートする場合は、このメソッドをオーバーライド<xref:System.Xaml.XamlMember>派生クラスでは、ケースごとにこれを確認する利用可能なメタデータを特殊化した場合またはします。</span><span class="sxs-lookup"><span data-stu-id="c6a37-350">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsUnknown" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsWriteOnly">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsWriteOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsWriteOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsWriteOnly" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsWriteOnly () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsWriteOnly();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsWriteOnly : unit -&gt; bool&#xA;override this.LookupIsWriteOnly : unit -&gt; bool" Usage="xamlMember.LookupIsWriteOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c6a37-351">この <see cref="T:System.Xaml.XamlMember" /> が、パブリックの <see langword="set" /> アクセサーを持ちパブリックの <see langword="get" /> アクセサーを持たないメンバーを表すかどうかを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-351">Returns whether this <see cref="T:System.Xaml.XamlMember" /> represents a member that has a public <see langword="set" /> accessor but not a public <see langword="get" /> accessor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c6a37-352">この <see cref="T:System.Xaml.XamlMember" /> が書き込み専用メンバーを表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-352">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a write-only member; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6a37-353">既定の実装を返します`true`場合、<xref:System.Xaml.XamlMember.UnderlyingMember%2A>が存在するが、パブリック`set`アクセサーと、非パブリック`get`アクセサー、内部のリフレクションによって決定されます。</span><span class="sxs-lookup"><span data-stu-id="c6a37-353">The default implementation returns `true` if an <xref:System.Xaml.XamlMember.UnderlyingMember%2A> exists that has a public `set` accessor and a nonpublic `get` accessor, as determined by internal reflection.</span></span>  
  
 <span data-ttu-id="c6a37-354">呼び出し元から値を取得するときに、このメソッドが呼び出される<xref:System.Xaml.XamlMember.IsWriteOnly%2A>します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-354">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsWriteOnly%2A>.</span></span> <span data-ttu-id="c6a37-355">全体の一貫した結果をレポートする場合は、このメソッドをオーバーライド<xref:System.Xaml.XamlMember>派生クラスでは、ケースごとにこれを確認する利用可能なメタデータを特殊化した場合またはします。</span><span class="sxs-lookup"><span data-stu-id="c6a37-355">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsWriteOnly" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsWritePublic">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsWritePublic ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsWritePublic() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsWritePublic" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsWritePublic () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsWritePublic();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsWritePublic : unit -&gt; bool&#xA;override this.LookupIsWritePublic : unit -&gt; bool" Usage="xamlMember.LookupIsWritePublic " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c6a37-356">この <see cref="T:System.Xaml.XamlMember" /> がパブリックの <see langword="set" /> アクセサーを持つメンバーを表すかどうかを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-356">Returns whether this <see cref="T:System.Xaml.XamlMember" /> represents a member that has a public <see langword="set" /> accessor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c6a37-357">この <see cref="T:System.Xaml.XamlMember" /> が書き込み可能なメンバーを表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-357">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a writable member; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6a37-358">既定の実装は、内部のリフレクションまたはの否定のいずれかに基づく結果を返します<xref:System.Xaml.XamlMember.IsReadOnly%2A>、その順序で処理します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-358">The default implementation returns results based  either internal reflection or the negation of <xref:System.Xaml.XamlMember.IsReadOnly%2A>, processing in that order.</span></span>  
  
 <span data-ttu-id="c6a37-359">呼び出し元から値を取得するときに、このメソッドが呼び出される<xref:System.Xaml.XamlMember.IsWritePublic%2A>します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-359">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsWritePublic%2A>.</span></span> <span data-ttu-id="c6a37-360">全体の一貫した結果をレポートする場合は、このメソッドをオーバーライド<xref:System.Xaml.XamlMember>派生クラスでは、ケースごとにこれを確認する利用可能なメタデータを特殊化した場合またはします。</span><span class="sxs-lookup"><span data-stu-id="c6a37-360">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c6a37-361"><xref:System.Xaml.XamlMember.LookupIsWritePublic%2A>メソッドは仮想であり、そのため、オーバーライドされることができます。</span><span class="sxs-lookup"><span data-stu-id="c6a37-361">The <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> method is virtual and therefore, can be overridden.</span></span> <span data-ttu-id="c6a37-362">オーバーライドでは、情報を変更する (故意またはそれ以外の場合)、報告されたアクセス XAML メンバーの基になる CLR 宣言の型システムへのアクセスの情報と予想される方法で配置されなくように可能性があります。</span><span class="sxs-lookup"><span data-stu-id="c6a37-362">The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration.</span></span> <span data-ttu-id="c6a37-363">アクセス レベルのセキュリティ クリティカルなチェックには、代わりに、基になる CLR 型を使用します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-363">For any security-critical checks of access levels, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsWritePublic" />
      </Docs>
    </Member>
    <Member MemberName="LookupMarkupExtensionBracketCharacters">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IReadOnlyDictionary&lt;char,char&gt; LookupMarkupExtensionBracketCharacters ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IReadOnlyDictionary`2&lt;char, char&gt; LookupMarkupExtensionBracketCharacters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupMarkupExtensionBracketCharacters" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupMarkupExtensionBracketCharacters () As IReadOnlyDictionary(Of Char, Char)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IReadOnlyDictionary&lt;char, char&gt; ^ LookupMarkupExtensionBracketCharacters();" />
      <MemberSignature Language="F#" Value="abstract member LookupMarkupExtensionBracketCharacters : unit -&gt; System.Collections.Generic.IReadOnlyDictionary&lt;char, char&gt;&#xA;override this.LookupMarkupExtensionBracketCharacters : unit -&gt; System.Collections.Generic.IReadOnlyDictionary&lt;char, char&gt;" Usage="xamlMember.LookupMarkupExtensionBracketCharacters " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyDictionary&lt;System.Char,System.Char&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c6a37-364">マークアップ拡張の左角かっこと右角かっこ文字を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-364">Returns the opening and closing bracket characters for a markup extension.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c6a37-365">左角かっこと右角かっこ文字を含むコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-365">A collection containing the opening and closing bracket characters.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupTargetType">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlType LookupTargetType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlType LookupTargetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupTargetType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupTargetType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlType ^ LookupTargetType();" />
      <MemberSignature Language="F#" Value="abstract member LookupTargetType : unit -&gt; System.Xaml.XamlType&#xA;override this.LookupTargetType : unit -&gt; System.Xaml.XamlType" Usage="xamlMember.LookupTargetType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c6a37-366">
            <see cref="T:System.Xaml.XamlType" /> が存在できる型の <see cref="T:System.Xaml.XamlMember" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-366">Returns the <see cref="T:System.Xaml.XamlType" /> of the type where the <see cref="T:System.Xaml.XamlMember" /> can exist.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c6a37-367">
            <see cref="T:System.Xaml.XamlMember" /> が存在できる型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-367">The type where the <see cref="T:System.Xaml.XamlMember" /> can exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6a37-368">既定の実装は、アタッチ可能な不可能なメンバーによって区別されます。</span><span class="sxs-lookup"><span data-stu-id="c6a37-368">The default implementation distinguishes between attachable and non-attachable members.</span></span> <span data-ttu-id="c6a37-369">アタッチできないメンバーは、<xref:System.Xaml.XamlMember.LookupTargetType%2A>は常に返します<xref:System.Xaml.XamlMember.DeclaringType%2A>します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-369">For non-attachable members, <xref:System.Xaml.XamlMember.LookupTargetType%2A> always returns <xref:System.Xaml.XamlMember.DeclaringType%2A>.</span></span> <span data-ttu-id="c6a37-370">アタッチ可能なメンバーの場合<xref:System.Xaml.XamlMember.LookupTargetType%2A>を調べることに基づく結果を返します、<xref:System.Xaml.XamlMember.UnderlyingMember%2A>アクセサーのパラメーター型と型は XAML スキーマ コンテキストに基づいて解釈されます。</span><span class="sxs-lookup"><span data-stu-id="c6a37-370">For attachable members, <xref:System.Xaml.XamlMember.LookupTargetType%2A> returns a result based on examining the <xref:System.Xaml.XamlMember.UnderlyingMember%2A> accessor parameter type and interprets that type based on XAML schema context.</span></span>  
  
 <span data-ttu-id="c6a37-371">呼び出し元から値を取得するときに、このメソッドが呼び出される<xref:System.Xaml.XamlMember.TargetType%2A>します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-371">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.TargetType%2A>.</span></span> <span data-ttu-id="c6a37-372">全体の一貫した結果をレポートする場合は、このメソッドをオーバーライド<xref:System.Xaml.XamlMember>派生クラスでは、ケースごとにこれを確認する利用可能なメタデータを特殊化した場合またはします。</span><span class="sxs-lookup"><span data-stu-id="c6a37-372">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.TargetType" />
      </Docs>
    </Member>
    <Member MemberName="LookupType">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlType LookupType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlType LookupType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlType ^ LookupType();" />
      <MemberSignature Language="F#" Value="abstract member LookupType : unit -&gt; System.Xaml.XamlType&#xA;override this.LookupType : unit -&gt; System.Xaml.XamlType" Usage="xamlMember.LookupType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c6a37-373">メンバーで使用される型の <see cref="T:System.Xaml.XamlType" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-373">Returns the <see cref="T:System.Xaml.XamlType" /> of the type that is used by the member.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c6a37-374">メンバーで使用される型の <see cref="T:System.Xaml.XamlType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-374">The <see cref="T:System.Xaml.XamlType" /> of the type that is used by the member.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6a37-375">呼び出し元から値を取得するときに、このメソッドが呼び出される<xref:System.Xaml.XamlMember.Type%2A>します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-375">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.Type%2A>.</span></span> <span data-ttu-id="c6a37-376">このメソッドをオーバーライドする場合は<xref:System.Xaml.XamlMember.Type%2A>リフレクションの内部に既定で有効になっている値からとは異なる値を返すカスタムも指定する場合と<xref:System.Xaml.Schema.XamlMemberInvoker>情報。</span><span class="sxs-lookup"><span data-stu-id="c6a37-376">Override this method if you want <xref:System.Xaml.XamlMember.Type%2A> to return a value that differs from the value that is enabled by default internal reflection, and if you are also providing custom <xref:System.Xaml.Schema.XamlMemberInvoker> information.</span></span>  
  
 <span data-ttu-id="c6a37-377">既定の実装はコード パスが異なると概念の意味を使用して、返される<xref:System.Xaml.XamlType>かどうかに基づいているこの<xref:System.Xaml.XamlMember>プロパティ、メソッド、またはイベントを表します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-377">The default implementation uses different code paths and conceptual meanings for the returned <xref:System.Xaml.XamlType> that is based on whether this <xref:System.Xaml.XamlMember> represents a property, method, or event.</span></span>  
  
-   <span data-ttu-id="c6a37-378">プロパティの場合、返された<xref:System.Xaml.XamlType>プロパティを設定またはプロパティによって返される型です。</span><span class="sxs-lookup"><span data-stu-id="c6a37-378">For a property, the returned <xref:System.Xaml.XamlType> is the type that sets the property or is returned by the property.</span></span>  
  
-   <span data-ttu-id="c6a37-379">返されたイベントの<xref:System.Xaml.XamlType>が必要なイベント ハンドラーの型 (CLR 実装内のデリゲート)。</span><span class="sxs-lookup"><span data-stu-id="c6a37-379">For an event, the returned <xref:System.Xaml.XamlType> is the required event handler type (a delegate in a CLR implementation).</span></span>  
  
-   <span data-ttu-id="c6a37-380">メソッドで<xref:System.Xaml.XamlType>は戻り値の型。</span><span class="sxs-lookup"><span data-stu-id="c6a37-380">For a method, <xref:System.Xaml.XamlType> is the return type.</span></span>  
  
 <span data-ttu-id="c6a37-381">各ケースでは、XAML スキーマ コンテキストが基になるシステム型からの XAML 型の評価に使用されます。</span><span class="sxs-lookup"><span data-stu-id="c6a37-381">In each case, XAML schema context is used to evaluate the XAML type from the underlying system type.</span></span>  
  
 <span data-ttu-id="c6a37-382">呼び出し元から値を取得するときに、このメソッドが呼び出される<xref:System.Xaml.XamlMember.Type%2A>します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-382">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.Type%2A>.</span></span> <span data-ttu-id="c6a37-383">全体の一貫した結果をレポートする場合は、このメソッドをオーバーライド<xref:System.Xaml.XamlMember>派生クラスでは、ケースごとにこれを確認する利用可能なメタデータを特殊化した場合またはします。</span><span class="sxs-lookup"><span data-stu-id="c6a37-383">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.Type" />
      </Docs>
    </Member>
    <Member MemberName="LookupTypeConverter">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt; LookupTypeConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.ComponentModel.TypeConverter&gt; LookupTypeConverter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupTypeConverter" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupTypeConverter () As XamlValueConverter(Of TypeConverter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ LookupTypeConverter();" />
      <MemberSignature Language="F#" Value="abstract member LookupTypeConverter : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;&#xA;override this.LookupTypeConverter : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;" Usage="xamlMember.LookupTypeConverter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c6a37-384">この <see cref="T:System.Xaml.XamlMember" /> に関連付けられている型コンバーターの実装を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-384">Returns a type converter implementation that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c6a37-385">
            <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> 制約のある <see cref="T:System.ComponentModel.TypeConverter" /> インスタンス、または <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-385">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> instance with <see cref="T:System.ComponentModel.TypeConverter" /> constraint; or <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6a37-386">既定の実装では、次のロジックと処理順序を使用します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-386">The default implementation uses the following logic and processing order:</span></span>  
  
-   <span data-ttu-id="c6a37-387">属性メンバーのレベルに存在する場合 (<xref:System.ComponentModel.TypeConverterAttribute>) への呼び出しの属性情報が使用される<xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A>に対して XAML スキーマ コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="c6a37-387">If attributing exists at the member level (<xref:System.ComponentModel.TypeConverterAttribute>), the attribute information is used for a call to <xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A> against the XAML schema context.</span></span>  
  
-   <span data-ttu-id="c6a37-388">場合<xref:System.Xaml.XamlMember.Type%2A>が有効で、型に関連付けられている型コンバーターが返されます。</span><span class="sxs-lookup"><span data-stu-id="c6a37-388">If <xref:System.Xaml.XamlMember.Type%2A> is valid, a type converter that is associated with the type is returned.</span></span>  
  
-   <span data-ttu-id="c6a37-389">メンバーがイベントの場合は、イベント固有の型コンバーターが返されます。</span><span class="sxs-lookup"><span data-stu-id="c6a37-389">If the member is an event, an event-specific type converter is returned.</span></span>  
  
 <span data-ttu-id="c6a37-390">呼び出し元から値を取得するときに、このメソッドが呼び出される<xref:System.Xaml.XamlMember.TypeConverter%2A>します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-390">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.TypeConverter%2A>.</span></span> <span data-ttu-id="c6a37-391">全体の一貫した結果をレポートする場合は、このメソッドをオーバーライド<xref:System.Xaml.XamlMember>派生クラスでは、ケースごとにこれを確認する利用可能なメタデータを特殊化した場合またはします。</span><span class="sxs-lookup"><span data-stu-id="c6a37-391">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.TypeConverter" />
      </Docs>
    </Member>
    <Member MemberName="LookupUnderlyingGetter">
      <MemberSignature Language="C#" Value="protected virtual System.Reflection.MethodInfo LookupUnderlyingGetter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Reflection.MethodInfo LookupUnderlyingGetter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupUnderlyingGetter" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupUnderlyingGetter () As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Reflection::MethodInfo ^ LookupUnderlyingGetter();" />
      <MemberSignature Language="F#" Value="abstract member LookupUnderlyingGetter : unit -&gt; System.Reflection.MethodInfo&#xA;override this.LookupUnderlyingGetter : unit -&gt; System.Reflection.MethodInfo" Usage="xamlMember.LookupUnderlyingGetter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c6a37-392">この <see cref="T:System.Xaml.XamlMember" /> に関連付けられている <see langword="get" /> アクセサーを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-392">Returns a <see langword="get" /> accessor that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c6a37-393">関連付けられている <see langword="get" /> アクセサーの <see cref="T:System.Reflection.MethodInfo" />、または <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-393">The <see cref="T:System.Reflection.MethodInfo" /> for the associated <see langword="get" /> accessor; or <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6a37-394">既定の実装の解釈、<xref:System.Xaml.XamlMember.UnderlyingMember%2A>プロパティとして<xref:System.Reflection.PropertyInfo>の値を返します<xref:System.Reflection.PropertyInfo.GetGetMethod%2A?displayProperty=nameWithType>(パラメーターを設定して`true`)、つまり、返されるメソッドが非パブリックにできます。</span><span class="sxs-lookup"><span data-stu-id="c6a37-394">The default implementation interprets the <xref:System.Xaml.XamlMember.UnderlyingMember%2A> property as <xref:System.Reflection.PropertyInfo> and returns the value of <xref:System.Reflection.PropertyInfo.GetGetMethod%2A?displayProperty=nameWithType> (with the parameter set to `true`), which means that the returned method can be nonpublic.</span></span> <span data-ttu-id="c6a37-395">この動作により`null`場合します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-395">This behavior can result in `null` for certain cases.</span></span> <span data-ttu-id="c6a37-396">関連付けられているアクセサーが存在しない場合や、メンバーがプロパティではない場合などです。</span><span class="sxs-lookup"><span data-stu-id="c6a37-396">including cases where no associated accessor exists or the member is not a property.</span></span>  
  
 <span data-ttu-id="c6a37-397">呼び出し元から値を取得するときに、このメソッドが呼び出され、<xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter%2A>プロパティに関連付けられている<xref:System.Xaml.Schema.XamlMemberInvoker>します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-397">This method is invoked when a caller gets a value from the <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter%2A> property on an associated <xref:System.Xaml.Schema.XamlMemberInvoker>.</span></span> <span data-ttu-id="c6a37-398">全体の一貫した結果をレポートする場合は、このメソッドをオーバーライド<xref:System.Xaml.XamlMember>派生クラスでは、ケースごとにこれを確認する利用可能なメタデータを特殊化した場合またはします。</span><span class="sxs-lookup"><span data-stu-id="c6a37-398">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span> <span data-ttu-id="c6a37-399">実装することを確認<xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>、 <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>、および<xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A>相関関係を持つ結果を返すようにします。</span><span class="sxs-lookup"><span data-stu-id="c6a37-399">Make sure to implement <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, and <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> so that they all return correlated results.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupUnderlyingMember">
      <MemberSignature Language="C#" Value="protected virtual System.Reflection.MemberInfo LookupUnderlyingMember ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Reflection.MemberInfo LookupUnderlyingMember() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupUnderlyingMember" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupUnderlyingMember () As MemberInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Reflection::MemberInfo ^ LookupUnderlyingMember();" />
      <MemberSignature Language="F#" Value="abstract member LookupUnderlyingMember : unit -&gt; System.Reflection.MemberInfo&#xA;override this.LookupUnderlyingMember : unit -&gt; System.Reflection.MemberInfo" Usage="xamlMember.LookupUnderlyingMember " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c6a37-400">この <see cref="T:System.Reflection.MemberInfo" /> に関連付けられている CLR 型システムの <see cref="T:System.Xaml.XamlMember" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-400">Returns a CLR type system <see cref="T:System.Reflection.MemberInfo" /> that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c6a37-401">この <see cref="T:System.Reflection.MemberInfo" /> に関連付けられている CLR 型システムの <see cref="T:System.Xaml.XamlMember" />、または <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-401">A CLR type system <see cref="T:System.Reflection.MemberInfo" /> object that is associated with this <see cref="T:System.Xaml.XamlMember" />; or <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6a37-402">既定の実装では、構築に基づく、基になるメンバー情報を返します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-402">The default implementation returns the underlying member information, which is based on construction.</span></span> <span data-ttu-id="c6a37-403">場合、<xref:System.Reflection.MemberInfo>基になるメンバーを設定するための十分な情報を提供しないシグネチャを持つオブジェクトを構築すると、このメソッドが戻る`null`します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-403">If the <xref:System.Reflection.MemberInfo> object is constructed with a signature that does not provide enough information to set the underlying member, this method returns `null`.</span></span>  
  
 <span data-ttu-id="c6a37-404">基になるメンバーは、構築時に設定されている場合は、このメソッドを呼び出す必要ありません。</span><span class="sxs-lookup"><span data-stu-id="c6a37-404">If an underlying member was set during construction, you should not need to call this method.</span></span>  
  
 <span data-ttu-id="c6a37-405">呼び出し元から値を取得するときに、このメソッドが呼び出される<xref:System.Xaml.XamlMember.UnderlyingMember%2A>します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-405">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.UnderlyingMember%2A>.</span></span> <span data-ttu-id="c6a37-406">全体の一貫した結果をレポートする場合は、このメソッドをオーバーライド<xref:System.Xaml.XamlMember>派生クラスでは、ケースごとにこれを確認する利用可能なメタデータを特殊化した場合またはします。</span><span class="sxs-lookup"><span data-stu-id="c6a37-406">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span> <span data-ttu-id="c6a37-407">実装することを確認<xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>、 <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>、および<xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A>相関関係を持つ結果を返すようにします。</span><span class="sxs-lookup"><span data-stu-id="c6a37-407">Make sure to implement <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, and <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> so that they all return correlated results.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.UnderlyingMember" />
      </Docs>
    </Member>
    <Member MemberName="LookupUnderlyingSetter">
      <MemberSignature Language="C#" Value="protected virtual System.Reflection.MethodInfo LookupUnderlyingSetter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Reflection.MethodInfo LookupUnderlyingSetter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupUnderlyingSetter" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupUnderlyingSetter () As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Reflection::MethodInfo ^ LookupUnderlyingSetter();" />
      <MemberSignature Language="F#" Value="abstract member LookupUnderlyingSetter : unit -&gt; System.Reflection.MethodInfo&#xA;override this.LookupUnderlyingSetter : unit -&gt; System.Reflection.MethodInfo" Usage="xamlMember.LookupUnderlyingSetter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c6a37-408">この <see cref="T:System.Xaml.XamlMember" /> に関連付けられている <see langword="set" /> アクセサーを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-408">Returns a <see langword="set" /> accessor that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c6a37-409">関連付けられている <see langword="set" /> アクセサーの <see cref="T:System.Reflection.MethodInfo" />、または <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-409">The <see cref="T:System.Reflection.MethodInfo" /> for the associated <see langword="set" /> accessor; or <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6a37-410">既定の実装が解釈<xref:System.Xaml.XamlMember.UnderlyingMember%2A>として<xref:System.Reflection.PropertyInfo>の値を返します<xref:System.Reflection.PropertyInfo.GetSetMethod%2A?displayProperty=nameWithType>(パラメーターを設定して`true`)、つまり、返されるメソッドが非パブリックにできます。</span><span class="sxs-lookup"><span data-stu-id="c6a37-410">The default implementation interprets <xref:System.Xaml.XamlMember.UnderlyingMember%2A> as <xref:System.Reflection.PropertyInfo> and returns the value of <xref:System.Reflection.PropertyInfo.GetSetMethod%2A?displayProperty=nameWithType> (with the parameter set to `true`), which means that the returned method can be nonpublic.</span></span> <span data-ttu-id="c6a37-411">これにより`null`特定の場合は、といった状況で、このようなアクセサーがないか、メンバーがプロパティではありません。</span><span class="sxs-lookup"><span data-stu-id="c6a37-411">This can result in `null` for certain cases, including cases where there is no such accessor, or the member is not a property.</span></span>  
  
 <span data-ttu-id="c6a37-412">呼び出し元から値を取得するときに、このメソッドが呼び出される<xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter%2A>に関連付けられている<xref:System.Xaml.Schema.XamlMemberInvoker>します。全体の一貫した結果をレポートする場合は、このメソッドをオーバーライド<xref:System.Xaml.XamlMember>派生クラスでは、ケースごとにこれを確認する利用可能なメタデータを特殊化した場合またはします。</span><span class="sxs-lookup"><span data-stu-id="c6a37-412">This method is invoked when a caller gets a value from <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter%2A> on an associated <xref:System.Xaml.Schema.XamlMemberInvoker>.Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span> <span data-ttu-id="c6a37-413">実装することを確認<xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>、 <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>、および<xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A>相関関係を持つ結果を返すようにします。</span><span class="sxs-lookup"><span data-stu-id="c6a37-413">Make sure to implement <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, and <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> so that they all return correlated results.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupValueSerializer">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt; LookupValueSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Windows.Markup.ValueSerializer&gt; LookupValueSerializer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupValueSerializer" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupValueSerializer () As XamlValueConverter(Of ValueSerializer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlValueConverter&lt;System::Windows::Markup::ValueSerializer ^&gt; ^ LookupValueSerializer();" />
      <MemberSignature Language="F#" Value="abstract member LookupValueSerializer : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;&#xA;override this.LookupValueSerializer : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;" Usage="xamlMember.LookupValueSerializer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c6a37-414">この <see cref="T:System.Xaml.XamlMember" /> に関連付けられている値シリアライザーの実装を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-414">Returns a value serializer implementation that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c6a37-415">
            <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> 制約のある <see cref="T:System.Windows.Markup.ValueSerializer" /> インスタンス、または <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-415">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> instance with <see cref="T:System.Windows.Markup.ValueSerializer" /> constraint, or <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6a37-416">既定の実装では、次のロジックと処理順序を使用します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-416">The default implementation uses the following logic and processing order:</span></span>  
  
-   <span data-ttu-id="c6a37-417">属性メンバーのレベルに存在する場合 (<xref:System.Windows.Markup.ValueSerializerAttribute>) への呼び出しの属性情報が使用される<xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A>に対して XAML スキーマ コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="c6a37-417">If attributing exists at the member level (<xref:System.Windows.Markup.ValueSerializerAttribute>), the attribute information is used for a call to <xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A> against the XAML schema context.</span></span>  
  
-   <span data-ttu-id="c6a37-418">場合<xref:System.Xaml.XamlMember.Type%2A>が有効で、型に関連付けられている値コンバーターが返されます。</span><span class="sxs-lookup"><span data-stu-id="c6a37-418">If <xref:System.Xaml.XamlMember.Type%2A> is valid, a value converter that is associated with the type is returned.</span></span>  
  
-   <span data-ttu-id="c6a37-419">前述の条件が該当しない場合`null`が返されます。</span><span class="sxs-lookup"><span data-stu-id="c6a37-419">If the previous conditions do not apply, `null` is returned.</span></span>  
  
 <span data-ttu-id="c6a37-420">呼び出し元から値を取得するときに、このメソッドが呼び出される<xref:System.Xaml.XamlMember.ValueSerializer%2A>します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-420">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.ValueSerializer%2A>.</span></span> <span data-ttu-id="c6a37-421">全体の一貫した結果をレポートする場合は、このメソッドをオーバーライド<xref:System.Xaml.XamlMember>派生クラスでは、ケースごとにこれを確認する利用可能なメタデータを特殊化した場合またはします。</span><span class="sxs-lookup"><span data-stu-id="c6a37-421">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.ValueSerializer" />
      </Docs>
    </Member>
    <Member MemberName="MarkupExtensionBracketCharacters">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyDictionary&lt;char,char&gt; MarkupExtensionBracketCharacters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyDictionary`2&lt;char, char&gt; MarkupExtensionBracketCharacters" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.MarkupExtensionBracketCharacters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MarkupExtensionBracketCharacters As IReadOnlyDictionary(Of Char, Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IReadOnlyDictionary&lt;char, char&gt; ^ MarkupExtensionBracketCharacters { System::Collections::Generic::IReadOnlyDictionary&lt;char, char&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MarkupExtensionBracketCharacters : System.Collections.Generic.IReadOnlyDictionary&lt;char, char&gt;" Usage="System.Xaml.XamlMember.MarkupExtensionBracketCharacters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyDictionary&lt;System.Char,System.Char&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6a37-422">マークアップ拡張の左角かっこと右角かっこ文字を定義します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-422">Defines the opening and closing bracket characters for a markup extension.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c6a37-423">左角かっこと右角かっこ文字を含むコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-423">A collection containing the opening and closing bracket characters.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Xaml.XamlMember.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6a37-424">この <see cref="T:System.Xaml.XamlMember" /> を宣言する <see langword="xamlName" /> 名文字列を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-424">Gets the <see langword="xamlName" /> name string that declares this <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c6a37-425">この <see cref="T:System.Xaml.XamlMember" /> を宣言する <see langword="xamlName" /> 名文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-425">The <see langword="xamlName" /> name string that declares this <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6a37-426">この値は、構築時に常に設定されます。</span><span class="sxs-lookup"><span data-stu-id="c6a37-426">This value is always set during construction.</span></span> <span data-ttu-id="c6a37-427">コンス トラクターによって実装される<xref:System.Xaml.XamlMember>通常は例外をスロー場合は、最初の名前が指定されていませんそのため、予期しないにするには、このプロパティ`null`または既定の .NET Framework XAML サービスを使用している場合、空の文字列。実装。</span><span class="sxs-lookup"><span data-stu-id="c6a37-427">The constructors that are implemented by <xref:System.Xaml.XamlMember> typically throw an exception if an initial name is not specified; therefore, do not expect this property to be `null` or an empty string, if you are using default .NET Framework XAML Services implementations.</span></span>  
  
 <span data-ttu-id="c6a37-428">[XamlName の文法](~/docs/framework/xaml-services/xamlname-grammar.md)CLR 型とメンバーの名前付け規則は、正確な intersect はできません。</span><span class="sxs-lookup"><span data-stu-id="c6a37-428">[XamlName Grammar](~/docs/framework/xaml-services/xamlname-grammar.md) and naming rules for CLR type and members are not an exact intersect.</span></span> <span data-ttu-id="c6a37-429">CLR で有効なメンバー名を宣言することが、名前付けを XAML が無効です。</span><span class="sxs-lookup"><span data-stu-id="c6a37-429">It is possible to declare a member name that is legal under CLR but not valid under XAML naming.</span></span> <span data-ttu-id="c6a37-430">このような状況は、可能であれば避ける必要があります。</span><span class="sxs-lookup"><span data-stu-id="c6a37-430">You should avoid this situation if possible.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Xaml.XamlMember xamlMember1, System.Xaml.XamlMember xamlMember2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Xaml.XamlMember xamlMember1, class System.Xaml.XamlMember xamlMember2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.op_Equality(System.Xaml.XamlMember,System.Xaml.XamlMember)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (xamlMember1 As XamlMember, xamlMember2 As XamlMember) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Xaml::XamlMember ^ xamlMember1, System::Xaml::XamlMember ^ xamlMember2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Xaml.XamlMember * System.Xaml.XamlMember -&gt; bool" Usage="xamlMember1 = xamlMember2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlMember1" Type="System.Xaml.XamlMember" />
        <Parameter Name="xamlMember2" Type="System.Xaml.XamlMember" />
      </Parameters>
      <Docs>
        <param name="xamlMember1">
          <span data-ttu-id="c6a37-431">
            <see cref="T:System.Xaml.XamlMember" /> または <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-431">A <see cref="T:System.Xaml.XamlMember" /> or <see langword="null" />.</span>
          </span>
        </param>
        <param name="xamlMember2">
          <span data-ttu-id="c6a37-432">
            <see cref="T:System.Xaml.XamlMember" /> または <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-432">A <see cref="T:System.Xaml.XamlMember" /> or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6a37-433">指定した 2 つの <see cref="T:System.Xaml.XamlMember" /> オブジェクトの値が同一かどうかを判断します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-433">Determines whether two specified <see cref="T:System.Xaml.XamlMember" /> objects have the same value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c6a37-434">
            <paramref name="xamlMember1" /> の値が <paramref name="xamlMember2" /> の値と同じ場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-434">
              <see langword="true" /> if the value of <paramref name="xamlMember1" /> is the same as the value of <paramref name="xamlMember2" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Xaml.XamlMember xamlMember1, System.Xaml.XamlMember xamlMember2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Xaml.XamlMember xamlMember1, class System.Xaml.XamlMember xamlMember2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.op_Inequality(System.Xaml.XamlMember,System.Xaml.XamlMember)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (xamlMember1 As XamlMember, xamlMember2 As XamlMember) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Xaml::XamlMember ^ xamlMember1, System::Xaml::XamlMember ^ xamlMember2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Xaml.XamlMember * System.Xaml.XamlMember -&gt; bool" Usage="System.Xaml.XamlMember.op_Inequality (xamlMember1, xamlMember2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlMember1" Type="System.Xaml.XamlMember" />
        <Parameter Name="xamlMember2" Type="System.Xaml.XamlMember" />
      </Parameters>
      <Docs>
        <param name="xamlMember1">
          <span data-ttu-id="c6a37-435">
            <see cref="T:System.Xaml.XamlMember" /> または <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-435">A <see cref="T:System.Xaml.XamlMember" /> or <see langword="null" />.</span>
          </span>
        </param>
        <param name="xamlMember2">
          <span data-ttu-id="c6a37-436">
            <see cref="T:System.Xaml.XamlMember" /> または <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-436">A <see cref="T:System.Xaml.XamlMember" /> or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6a37-437">指定した 2 つの <see cref="T:System.Xaml.XamlMember" /> オブジェクトの値が異なるかどうかを判断します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-437">Determines whether two specified <see cref="T:System.Xaml.XamlMember" /> objects have different values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c6a37-438">
            <paramref name="xamlMember1" /> の値が <paramref name="xamlMember2" /> の値と異なる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-438">
              <see langword="true" /> if the value of <paramref name="xamlMember1" /> differs from the value of <paramref name="xamlMember2" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredXamlNamespace">
      <MemberSignature Language="C#" Value="public string PreferredXamlNamespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PreferredXamlNamespace" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.PreferredXamlNamespace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreferredXamlNamespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PreferredXamlNamespace { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PreferredXamlNamespace : string" Usage="System.Xaml.XamlMember.PreferredXamlNamespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6a37-439">
            <see cref="T:System.Xaml.XamlMember" /> のプライマリ XAML 名前空間を識別する単一の XAML 名前空間の URI を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-439">Gets the single XAML namespace URI that identifies the primary XAML namespace for this <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c6a37-440">この <see cref="T:System.Xaml.XamlMember" /> のプライマリ XAML 名前空間の識別子を示す文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-440">The identifier for the primary XAML namespace for this <see cref="T:System.Xaml.XamlMember" />, as a string.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6a37-441"><xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A>プロパティは、呼び出し元と同じ値を提供します。<xref:System.Xaml.XamlMember.GetXamlNamespaces%2A>と返された一覧から最初の値の文字列を取得します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-441">The <xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A> property provides the same value as calling <xref:System.Xaml.XamlMember.GetXamlNamespaces%2A> and then getting the first value string from the returned list.</span></span> <span data-ttu-id="c6a37-442">テキストに戻る または XAML 名前空間の情報を保持する他の表現は、メンバーを記述する場合は、任意の XAML 名前空間を使用してください。</span><span class="sxs-lookup"><span data-stu-id="c6a37-442">The preferred XAML namespace should be used when writing the member back to text or other representations that preserve XAML namespace information.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializationVisibility">
      <MemberSignature Language="C#" Value="public System.ComponentModel.DesignerSerializationVisibility SerializationVisibility { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.DesignerSerializationVisibility SerializationVisibility" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.SerializationVisibility" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SerializationVisibility As DesignerSerializationVisibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::DesignerSerializationVisibility SerializationVisibility { System::ComponentModel::DesignerSerializationVisibility get(); };" />
      <MemberSignature Language="F#" Value="member this.SerializationVisibility : System.ComponentModel.DesignerSerializationVisibility" Usage="System.Xaml.XamlMember.SerializationVisibility" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.DesignerSerializationVisibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6a37-443">ビジュアルなデザイナーでのメンバーの処理方法を示す <see cref="T:System.ComponentModel.DesignerSerializationVisibility" /> 値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-443">Gets a <see cref="T:System.ComponentModel.DesignerSerializationVisibility" /> value, which indicates how a visual designer should process the member.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c6a37-444">
            <see cref="T:System.ComponentModel.DesignerSerializationVisibility" /> 列挙体の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-444">A value of the <see cref="T:System.ComponentModel.DesignerSerializationVisibility" /> enumeration.</span>
          </span>
          <span data-ttu-id="c6a37-445">既定値は、<see cref="F:System.ComponentModel.DesignerSerializationVisibility.Visible" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-445">The default is <see cref="F:System.ComponentModel.DesignerSerializationVisibility.Visible" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetType">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType TargetType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType TargetType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.TargetType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetType As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ TargetType { System::Xaml::XamlType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetType : System.Xaml.XamlType" Usage="System.Xaml.XamlMember.TargetType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6a37-446">
            <see cref="T:System.Xaml.XamlType" /> が存在できる型の <see cref="T:System.Xaml.XamlMember" /> を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-446">Gets the <see cref="T:System.Xaml.XamlType" /> of the type where the <see cref="T:System.Xaml.XamlMember" /> can exist.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c6a37-447">
            <see cref="T:System.Xaml.XamlMember" /> が存在できる型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-447">The type where the <see cref="T:System.Xaml.XamlMember" /> can exist.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6a37-448">戻り値は、アタッチ可能な不可能なメンバーに異なります。</span><span class="sxs-lookup"><span data-stu-id="c6a37-448">The returned value is different for attachable and non-attachable members.</span></span> <span data-ttu-id="c6a37-449">アタッチできないメンバーは、<xref:System.Xaml.XamlMember.TargetType%2A>返します<xref:System.Xaml.XamlMember.DeclaringType%2A>します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-449">For non-attachable members, <xref:System.Xaml.XamlMember.TargetType%2A> returns <xref:System.Xaml.XamlMember.DeclaringType%2A>.</span></span> <span data-ttu-id="c6a37-450">アタッチ可能なメンバーの<xref:System.Xaml.XamlMember.LookupTargetType%2A>このロジックに基づく結果を返します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-450">For attachable members, <xref:System.Xaml.XamlMember.LookupTargetType%2A> returns a result that is based on this logic:</span></span>  
  
-   <span data-ttu-id="c6a37-451">リフレクションは、バッキングを解決できない場合 (<xref:System.Xaml.XamlMember.IsUnknown%2A> `true`)、このメソッドは、オブジェクトのジェネリック型を表す内部の定数を返します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-451">If reflection cannot resolve a backing (<xref:System.Xaml.XamlMember.IsUnknown%2A> `true`), this method returns an internal constant that represents a generic object type.</span></span>  
  
-   <span data-ttu-id="c6a37-452">前の条件が適用されない場合<xref:System.Xaml.XamlMember.LookupTargetType%2A>が呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="c6a37-452">If the previous condition does not apply, <xref:System.Xaml.XamlMember.LookupTargetType%2A> is called.</span></span> <span data-ttu-id="c6a37-453">既定の実装を返します、<xref:System.Xaml.XamlType>を実装するメソッドを調べることに基づく、`get`と`set`アクセサー。</span><span class="sxs-lookup"><span data-stu-id="c6a37-453">The default implementation returns a <xref:System.Xaml.XamlType> that is based on examining the methods that implement the `get` and `set` accessors.</span></span> <span data-ttu-id="c6a37-454">クラスの方が優先<xref:System.Xaml.XamlMember.LookupTargetType%2A>フォームの他のメタデータなど、さまざまな動作を使用する場合がありますレポート対象の種類のアタッチ可能なメンバー。</span><span class="sxs-lookup"><span data-stu-id="c6a37-454">A class might override <xref:System.Xaml.XamlMember.LookupTargetType%2A> to use a different behavior such as other metadata forms that might report target types for attachable members.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="xamlMember.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c6a37-455">この <see cref="T:System.Xaml.XamlMember" /> の文字列表現を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-455">Returns a string representation of this <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c6a37-456">この <see cref="T:System.Xaml.XamlMember" /> の文字列表現。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-456">A string representation of this <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6a37-457">この実装を返します<xref:System.Xaml.XamlMember.Name%2A>します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-457">This implementation returns <xref:System.Xaml.XamlMember.Name%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType Type" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ Type { System::Xaml::XamlType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Type : System.Xaml.XamlType" Usage="System.Xaml.XamlMember.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6a37-458">メンバーで使用される型の <see cref="T:System.Xaml.XamlType" /> を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-458">Gets the <see cref="T:System.Xaml.XamlType" /> of the type that is used by the member.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c6a37-459">メンバーで使用される型の <see cref="T:System.Xaml.XamlType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-459">The <see cref="T:System.Xaml.XamlType" /> of the type that is used by the member.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6a37-460">呼び出す<xref:System.Xaml.XamlMember.Type%2A>呼び出す<xref:System.Xaml.XamlMember.LookupType%2A>またはそのメソッドの特定のオーバーライド。</span><span class="sxs-lookup"><span data-stu-id="c6a37-460">Calling <xref:System.Xaml.XamlMember.Type%2A> invokes <xref:System.Xaml.XamlMember.LookupType%2A> or a specific override of that method.</span></span> <span data-ttu-id="c6a37-461">これには、初期の内部リフレクション ロジックで、情報が既に設定されていないときに発生します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-461">This occurs when the initial internal reflection logic has not already set the information.</span></span>  
  
 <span data-ttu-id="c6a37-462">既定の動作 (ありません<xref:System.Xaml.XamlMember.LookupType%2A>オーバーライド)、返された<xref:System.Xaml.XamlType>異なる概念の意味を持つことができます。</span><span class="sxs-lookup"><span data-stu-id="c6a37-462">In the default behavior (no <xref:System.Xaml.XamlMember.LookupType%2A> override), the returned <xref:System.Xaml.XamlType> can have different conceptual meanings.</span></span> <span data-ttu-id="c6a37-463">かどうかに依存する意味が適用されるこの<xref:System.Xaml.XamlMember>として次の一覧に示すプロパティ、メソッド、またはイベントを表します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-463">Which meaning applies depends on whether this <xref:System.Xaml.XamlMember> represents a property, method, or event, as the following list shows:</span></span>  
  
-   <span data-ttu-id="c6a37-464">プロパティの場合、返された<xref:System.Xaml.XamlType>プロパティを設定またはプロパティによって返される型です。</span><span class="sxs-lookup"><span data-stu-id="c6a37-464">For a property, the returned <xref:System.Xaml.XamlType> is the type that sets the property or is returned by the property.</span></span>  
  
-   <span data-ttu-id="c6a37-465">返されたイベントの<xref:System.Xaml.XamlType>が必要なイベント ハンドラーの型 (CLR 実装内のデリゲート)。</span><span class="sxs-lookup"><span data-stu-id="c6a37-465">For an event, the returned <xref:System.Xaml.XamlType> is the required event handler type (a delegate in a CLR implementation).</span></span>  
  
-   <span data-ttu-id="c6a37-466">メソッドで<xref:System.Xaml.XamlType>、可能性のあるメソッドの戻り値の型は、`null`します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-466">For a method, <xref:System.Xaml.XamlType> is the return type of that method, which may be `null`.</span></span>  
  
 <span data-ttu-id="c6a37-467">各ケースでは、XAML スキーマ コンテキストがバッキング型からの XAML 型を評価に使用されます。</span><span class="sxs-lookup"><span data-stu-id="c6a37-467">In each case, the XAML schema context is used to evaluate the XAML type from the backing type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeConverter">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt; TypeConverter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.ComponentModel.TypeConverter&gt; TypeConverter" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.TypeConverter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeConverter As XamlValueConverter(Of TypeConverter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ TypeConverter { System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TypeConverter : System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;" Usage="System.Xaml.XamlMember.TypeConverter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6a37-468">XAML で宣言されたオブジェクトの型変換の構築に使用できる <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> オブジェクトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-468">Gets a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> object, which can be used for type conversion construction of XAML declared objects.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c6a37-469">ジェネリックの <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> 制約のある <see cref="T:System.ComponentModel.TypeConverter" /> の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-469">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> value, with a <see cref="T:System.ComponentModel.TypeConverter" /> constraint on the generic.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6a37-470">呼び出す<xref:System.Xaml.XamlMember.TypeConverter%2A>呼び出す<xref:System.Xaml.XamlMember.LookupTypeConverter%2A>またはそのメソッドの特定のオーバーライド。</span><span class="sxs-lookup"><span data-stu-id="c6a37-470">Calling <xref:System.Xaml.XamlMember.TypeConverter%2A> invokes <xref:System.Xaml.XamlMember.LookupTypeConverter%2A> or a specific override of that method.</span></span> <span data-ttu-id="c6a37-471">この動作は、初期の内部リフレクション ロジックで、情報が既に設定されていない場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-471">This behavior occurs when the initial internal reflection logic has not already set the information.</span></span>  
  
 <span data-ttu-id="c6a37-472">値を null 以外のプロパティを返す実装<xref:System.Xaml.XamlMember.TypeConverter%2A>作業とは限らない<xref:System.ComponentModel.TypeConverter>します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-472">Implementations that return a non-null property value for <xref:System.Xaml.XamlMember.TypeConverter%2A> are not necessarily a working <xref:System.ComponentModel.TypeConverter>.</span></span> <span data-ttu-id="c6a37-473">可能な非 null 戻り値の一覧を次に<xref:System.Xaml.XamlMember.TypeConverter%2A>これらの値が何を表しているとします。</span><span class="sxs-lookup"><span data-stu-id="c6a37-473">The following is a list of possible non-null return values for <xref:System.Xaml.XamlMember.TypeConverter%2A> and what these values represent:</span></span>  
  
-   <span data-ttu-id="c6a37-474">戻り値は、具体的にはそのメンバーにまたはより一般的には、コンバーターのターゲット型に指定される型コンバーターを報告します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-474">The return value reports a type converter that is attributed specifically to that member or more generally to the target type of the converter.</span></span> <span data-ttu-id="c6a37-475">この動作は、どのようなほとんどの XAML 型システムでは通常、XAML プロセッサが型コンバーターのインスタンスを作成し、そのメソッドを呼び出すために探します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-475">This behavior is typically what most XAML type systems and XAML processors look for in order to instantiate a type converter and invoke its methods.</span></span>  
  
-   <span data-ttu-id="c6a37-476">戻り値は、組み込みの値コンバーターを報告します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-476">The return value reports a built-in value converter.</span></span> <span data-ttu-id="c6a37-477">これらのコンバーターは、XAML ライターによって実行される特定の内部処理に存在します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-477">These converters exist for certain internal operations that are performed by a XAML writer.</span></span> <span data-ttu-id="c6a37-478">具体的には、これらの組み込みの値コンバーターは、生の属性の文字列値を XAML 言語レベルのプリミティブに変換します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-478">In particular, these built-in value converters convert the raw attribute string values to the XAML language-level primitives.</span></span> <span data-ttu-id="c6a37-479">.NET Framework XAML サービス実装では、これらの組み込み型の変換は、多くの場合、システム アセンブリで定義されている型コンバーターに転送します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-479">For the .NET Framework XAML Services implementation, these built-in type conversions often forward to a type converter that is defined in the System assembly.</span></span> <span data-ttu-id="c6a37-480">変換など、<xref:System.Int32>値が組み込みの変換を転送し、そのため、<xref:System.Xaml.Schema.XamlValueConverter%601.ConverterType%2A>参照値<xref:System.ComponentModel.Int32Converter>します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-480">For example, a conversion for an <xref:System.Int32> value has built-in forwarded conversion, and therefore, the <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterType%2A> value references <xref:System.ComponentModel.Int32Converter>.</span></span>  
  
-   <span data-ttu-id="c6a37-481">戻り値は、制約のないオブジェクト モデルの特殊なケースを報告します。つまり、<xref:System.Xaml.XamlMember>が、 <xref:System.Xaml.XamlMember.Type%2A> @property <xref:System.Object>。</span><span class="sxs-lookup"><span data-stu-id="c6a37-481">The return value reports the special case of an unconstrained object model; that is, the <xref:System.Xaml.XamlMember> has a <xref:System.Xaml.XamlMember.Type%2A> value of <xref:System.Object>.</span></span> <span data-ttu-id="c6a37-482">ここで、<xref:System.Xaml.Schema.XamlValueConverter%601>で提供されるレポート、<xref:System.Xaml.Schema.XamlValueConverter%601.Name%2A?displayProperty=nameWithType>は {`Object}`します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-482">In this case, the <xref:System.Xaml.Schema.XamlValueConverter%601> reports that the <xref:System.Xaml.Schema.XamlValueConverter%601.Name%2A?displayProperty=nameWithType> is {`Object}`.</span></span> <span data-ttu-id="c6a37-483">ただし、<xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A>は`null`実際の型またはインスタンスがしないため、この変換を実行します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-483">However, <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A> is `null` because no actual type or instance is available to perform this conversion.</span></span> <span data-ttu-id="c6a37-484">代わりに、オブジェクト モデルの動作は、特定のテクノロジのランタイムがオブジェクト グラフの処理を判断するとき、実行時まで判断できません。</span><span class="sxs-lookup"><span data-stu-id="c6a37-484">Instead, the object model behavior cannot be determined until run time, when the runtime of the specific technology determines the handling of its object graph.</span></span>  
  
 <span data-ttu-id="c6a37-485">作業中にアクセスできる場合<xref:System.ComponentModel.TypeConverter>から<xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A>、その変換メソッドを呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="c6a37-485">If you can access a working <xref:System.ComponentModel.TypeConverter> from <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A>, you can invoke its conversion methods.</span></span> <span data-ttu-id="c6a37-486">ただし、多くの変換メソッドは、サービス コンテキストに依存します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-486">However, many conversion methods rely on service context.</span></span> <span data-ttu-id="c6a37-487">型コンバーターがオブジェクト グラフのオブジェクトを作成する一般的な役割が必要ですが使用可能な同じサービス コンテキストがない、コンバーターのメソッドは例外をスローすることができます。</span><span class="sxs-lookup"><span data-stu-id="c6a37-487">If you do not have the same service context available that the type converter expects for its typical role of writing objects for object graphs, the converter methods can throw exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnderlyingMember">
      <MemberSignature Language="C#" Value="public System.Reflection.MemberInfo UnderlyingMember { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MemberInfo UnderlyingMember" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.UnderlyingMember" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UnderlyingMember As MemberInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MemberInfo ^ UnderlyingMember { System::Reflection::MemberInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UnderlyingMember : System.Reflection.MemberInfo" Usage="System.Xaml.XamlMember.UnderlyingMember" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6a37-488">
            <see cref="T:System.Reflection.MemberInfo" />、<see cref="T:System.Reflection.PropertyInfo" />、または <see cref="T:System.Reflection.MethodInfo" /> によって構築されるメンバーで使用できる CLR 型システム <see cref="T:System.Reflection.EventInfo" /> を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-488">Gets the CLR type system <see cref="T:System.Reflection.MemberInfo" /> that is available for a member that is constructed by <see cref="T:System.Reflection.PropertyInfo" />, <see cref="T:System.Reflection.MethodInfo" />, or <see cref="T:System.Reflection.EventInfo" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c6a37-489">初期コンストラクター パラメーターからキャストされた CLR 型システム <see cref="T:System.Reflection.MemberInfo" /> の情報。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-489">CLR type system <see cref="T:System.Reflection.MemberInfo" /> information, as cast from the initial constructor parameters.</span>
          </span>
          <span data-ttu-id="c6a37-490">
            <see cref="T:System.Xaml.XamlMember" /> シグネチャを使用して構築された <see cref="M:System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)" /> は、<see langword="null" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-490">A <see cref="T:System.Xaml.XamlMember" /> that is constructed with the <see cref="M:System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)" /> signature returns <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6a37-491">呼び出す<xref:System.Xaml.XamlMember.UnderlyingMember%2A>呼び出す<xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A>またはそのメソッドの特定のオーバーライド。</span><span class="sxs-lookup"><span data-stu-id="c6a37-491">Calling <xref:System.Xaml.XamlMember.UnderlyingMember%2A> invokes <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> or a specific override of that method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValueSerializer">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt; ValueSerializer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Windows.Markup.ValueSerializer&gt; ValueSerializer" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.ValueSerializer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValueSerializer As XamlValueConverter(Of ValueSerializer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlValueConverter&lt;System::Windows::Markup::ValueSerializer ^&gt; ^ ValueSerializer { System::Xaml::Schema::XamlValueConverter&lt;System::Windows::Markup::ValueSerializer ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValueSerializer : System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;" Usage="System.Xaml.XamlMember.ValueSerializer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6a37-492">
            <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> オブジェクトを取得します。これは XAML で宣言されたオブジェクトの値のシリアル化に使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-492">Gets a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> object, which is used for value serialization of XAML declared objects.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c6a37-493">ジェネリックの <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> 制約のある <see cref="T:System.Windows.Markup.ValueSerializer" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6a37-493">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> with <see cref="T:System.Windows.Markup.ValueSerializer" /> constraint on the generic.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6a37-494">呼び出す<xref:System.Xaml.XamlMember.ValueSerializer%2A>呼び出す<xref:System.Xaml.XamlMember.LookupValueSerializer%2A>またはそのメソッドの特定のオーバーライド。</span><span class="sxs-lookup"><span data-stu-id="c6a37-494">Calling <xref:System.Xaml.XamlMember.ValueSerializer%2A> invokes <xref:System.Xaml.XamlMember.LookupValueSerializer%2A> or a specific override of that method.</span></span> <span data-ttu-id="c6a37-495">この動作は、初期の内部リフレクション ロジックで、情報が既に設定されていない場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-495">This behavior occurs when the initial internal reflection logic has not already set the information.</span></span>  
  
 <span data-ttu-id="c6a37-496">値の null 以外のプロパティを返すすべてのケース<xref:System.Xaml.XamlMember.ValueSerializer%2A>作業では必ずしも<xref:System.Windows.Markup.ValueSerializer>します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-496">Not all cases that return a non-null property value for <xref:System.Xaml.XamlMember.ValueSerializer%2A> are necessarily a working <xref:System.Windows.Markup.ValueSerializer>.</span></span> <span data-ttu-id="c6a37-497">参照してください<xref:System.Xaml.XamlMember.TypeConverter%2A>; に、同じ考慮事項が適用<xref:System.Xaml.XamlMember.ValueSerializer%2A>します。</span><span class="sxs-lookup"><span data-stu-id="c6a37-497">See <xref:System.Xaml.XamlMember.TypeConverter%2A>; the same considerations apply to <xref:System.Xaml.XamlMember.ValueSerializer%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>