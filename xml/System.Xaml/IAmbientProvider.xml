<Type Name="IAmbientProvider" FullName="System.Xaml.IAmbientProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b1efea7e8c431289711e4bdfb3feaf27fa12d53e" /><Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="11/29/2018" /><Meta Name="ms.locfileid" Value="52590844" /></Metadata><TypeSignature Language="C#" Value="public interface IAmbientProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IAmbientProvider" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.IAmbientProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IAmbientProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IAmbientProvider" />
  <TypeSignature Language="F#" Value="type IAmbientProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>型コンバーターおよびマークアップ拡張機能に、アンビエント プロパティまたはアンビエント型に関する情報アイテムを返すことのできるサービスを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このインターフェイスは、型コンバーターと XAML 型システムのアンビエント プロパティの識別子を取得するマークアップ拡張に役立つサービスを表します (<xref:System.Xaml.XamlMember>オブジェクト)。 サービスは、クラスのアンビエント プロパティの値を取得もできます。 型をアンビエントにすることもできます。アンビエント値としてその型を使用するすべてのメンバーを検討してください。  
  
 このサービスが呼び出しによって返される通常<xref:System.IServiceProvider.GetService%2A>、コンテキスト固有のサービス プロバイダーに対するこれが作成されます。 サービス プロバイダーは、一般に、値コンバーターの実行コードなど、必要なコンテキストを提供します。 詳細については、次を参照してください。[型コンバーターと XAML のマークアップ拡張機能](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md)と[Service Contexts Available to Type Converters and Markup Extensions](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md)します。  
  
## <a name="about-ambient-properties"></a>アンビエント プロパティについて  
 アンビエント プロパティは、プロパティの値は、XAML ノード構造とから作成されたオブジェクト グラフ内に、コンバーターとマークアップ拡張機能の使用に存在するを入力できるようにプロパティです。 これは、保存、読み込みパスのオブジェクト記述フェーズまたは、シリアル化中に XAML プロセッサの関係のパス。  
  
 読み込みパスの場合は、アンビエント プロパティの値はその下にある XAML ノード構造内に存在するその他のプロパティのオブジェクト グラフ内の値を与える可能性があります。 アンビエントの概念では、アンビエント プロパティの値が型コンバーターおよびマークアップ拡張機能で使用できる必要がある意味 XAML ノード ストリームとして処理されると、`StartObject`に`EndObject`します。 同様に、型コンバーターを使用するパス、保存のアンビエント プロパティとその値についての知識を使用できます。 したがって、生成される XAML より適切なラウンド トリップ表現です。  
  
 メンバーの一般に、XAML は順序は指定されないオブジェクトのメンバーを処理する必要があります。 ただし、任意のアンビエント プロパティ値が処理しなければならない最初 XAML リーダー、型コンバーターとマークアップ拡張機能の使用に含まれるその他のプロパティには、を通じてアクセスできるように、<xref:System.Xaml.IAmbientProvider>サービス。  
  
 <xref:System.Xaml.XamlMember.DependsOn%2A> XAML ノードの処理順序にも影響を与えるような概念です。 ただし、<xref:System.Xaml.XamlMember.DependsOn%2A>ピア メンバーとノード リレーションシップにのみ使用できますがすべての子孫に影響を与えることはできません。 また、<xref:System.Xaml.XamlMember.DependsOn%2A>直接影響オブジェクトのグラフ プロパティを設定します。 一方、アンビエント手法は、型コンバーターまたはマークアップ拡張機能に依存します。 アンビエントの手法にする必要がありますもあります特定の型コンバーターまたはマークアップ拡張機能の定義をアンビエント プロパティ値を解釈され、オブジェクトに適用する方法を指定します。  
  
## <a name="wpf-usage-notes"></a>WPF の使用上の注意  
 示されているアンビエント プロパティ シナリオ、[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]機能セットは<xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType>、以外の値を必要なプロパティ名の参照を修飾することができます。 ここで、<xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType>値は修飾、<xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType>その下にある XAML ノードに配置されている値。 <xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType> 型コンバーターの動作を使用して、<xref:System.Windows.DependencyProperty>します。 この動作は、アンビエントにアクセス<xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType>クエリを実行して値<xref:System.Xaml.IAmbientProvider.GetFirstAmbientValue%2A>型コンバーターおよびマークアップ拡張機能の使用可能なサービス コンテキストから。  
  
 WPF の機能セットに示されているアンビエント型シナリオでは<xref:System.Windows.ResourceDictionary>します。 <xref:System.Windows.ResourceDictionary> <xref:System.Windows.ResourceDictionary.MergedDictionaries%2A>を含むその他のプロパティを<xref:System.Windows.ResourceDictionary>をマージするには、オブジェクトと、目的のリソース解決順序シナリオのマージの競合の型が読み込まれている順序で。 <xref:System.Windows.ResourceDictionary> 適用対象<xref:System.Windows.Markup.AmbientAttribute>XAML プロセッサが使用してマージされたディクショナリ内の参照を正しく処理できるように`StaticResource`使用法。 具体的には、`StaticResource`はマークアップ拡張機能は、呼び出す<xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%2A>します。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.AmbientPropertyValue" />
  </Docs>
  <Members>
    <MemberGroup MemberName="GetAllAmbientValues">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>要求されたスコープのアンビエント型またはアンビエント プロパティの情報アイテムの列挙可能なセットを返します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAllAmbientValues">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;object&gt; GetAllAmbientValues (params System.Xaml.XamlType[] types);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;object&gt; GetAllAmbientValues(class System.Xaml.XamlType[] types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAmbientProvider.GetAllAmbientValues(System.Xaml.XamlType[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllAmbientValues (ParamArray types As XamlType()) As IEnumerable(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Object ^&gt; ^ GetAllAmbientValues(... cli::array &lt;System::Xaml::XamlType ^&gt; ^ types);" />
      <MemberSignature Language="F#" Value="abstract member GetAllAmbientValues : System.Xaml.XamlType[] -&gt; seq&lt;obj&gt;" Usage="iAmbientProvider.GetAllAmbientValues types" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="System.Xaml.XamlType[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="types">アンビエント型情報を取得する型のセット。</param>
        <summary>要求された型に対する使用可能なアンビエント型のオブジェクト インスタンスの列挙可能なセットを返します。</summary>
        <returns>要求した <see cref="T:System.Xaml.XamlType" /> 識別子のセットに対する値を表す列挙可能なオブジェクトのセット。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllAmbientValues">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Xaml.AmbientPropertyValue&gt; GetAllAmbientValues (System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt; ceilingTypes, params System.Xaml.XamlMember[] properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.AmbientPropertyValue&gt; GetAllAmbientValues(class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.XamlType&gt; ceilingTypes, class System.Xaml.XamlMember[] properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAmbientProvider.GetAllAmbientValues(System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Xaml.XamlMember[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllAmbientValues (ceilingTypes As IEnumerable(Of XamlType), ParamArray properties As XamlMember()) As IEnumerable(Of AmbientPropertyValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Xaml::AmbientPropertyValue ^&gt; ^ GetAllAmbientValues(System::Collections::Generic::IEnumerable&lt;System::Xaml::XamlType ^&gt; ^ ceilingTypes, ... cli::array &lt;System::Xaml::XamlMember ^&gt; ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member GetAllAmbientValues : seq&lt;System.Xaml.XamlType&gt; * System.Xaml.XamlMember[] -&gt; seq&lt;System.Xaml.AmbientPropertyValue&gt;" Usage="iAmbientProvider.GetAllAmbientValues (ceilingTypes, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Xaml.AmbientPropertyValue&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ceilingTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt;" />
        <Parameter Name="properties" Type="System.Xaml.XamlMember[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="ceilingTypes">オブジェクト グラフの上方向の走査で検出された場合に評価を停止する 1 つ以上の型を指定します。 この型に目的のアンビエント プロパティが保持されています。 <see langword="null" /> でもかまいません。</param>
        <param name="properties">アンビエントと見なされるプロパティを識別する 1 つ以上のプロパティ識別子オブジェクトを指定します。</param>
        <summary>要求されたプロパティ セットに対するアンビエント プロパティ情報アイテムの列挙可能なセットを返します。</summary>
        <returns>要求されたプロパティ セットに対するアンビエント プロパティ情報アイテムの列挙可能なセット。 返された各 <see cref="T:System.Xaml.AmbientPropertyValue" /> のプロパティ情報は、入力された <paramref name="properties" /> のいずれかに一致します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 各<xref:System.Xaml.AmbientPropertyValue>を含む返される、<xref:System.Xaml.XamlMember>識別子とプロパティの値。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllAmbientValues">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Xaml.AmbientPropertyValue&gt; GetAllAmbientValues (System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt; ceilingTypes, bool searchLiveStackOnly, System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt; types, params System.Xaml.XamlMember[] properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.AmbientPropertyValue&gt; GetAllAmbientValues(class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.XamlType&gt; ceilingTypes, bool searchLiveStackOnly, class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.XamlType&gt; types, class System.Xaml.XamlMember[] properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAmbientProvider.GetAllAmbientValues(System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Boolean,System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Xaml.XamlMember[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllAmbientValues (ceilingTypes As IEnumerable(Of XamlType), searchLiveStackOnly As Boolean, types As IEnumerable(Of XamlType), ParamArray properties As XamlMember()) As IEnumerable(Of AmbientPropertyValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Xaml::AmbientPropertyValue ^&gt; ^ GetAllAmbientValues(System::Collections::Generic::IEnumerable&lt;System::Xaml::XamlType ^&gt; ^ ceilingTypes, bool searchLiveStackOnly, System::Collections::Generic::IEnumerable&lt;System::Xaml::XamlType ^&gt; ^ types, ... cli::array &lt;System::Xaml::XamlMember ^&gt; ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member GetAllAmbientValues : seq&lt;System.Xaml.XamlType&gt; * bool * seq&lt;System.Xaml.XamlType&gt; * System.Xaml.XamlMember[] -&gt; seq&lt;System.Xaml.AmbientPropertyValue&gt;" Usage="iAmbientProvider.GetAllAmbientValues (ceilingTypes, searchLiveStackOnly, types, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Xaml.AmbientPropertyValue&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ceilingTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt;" />
        <Parameter Name="searchLiveStackOnly" Type="System.Boolean" />
        <Parameter Name="types" Type="System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt;" />
        <Parameter Name="properties" Type="System.Xaml.XamlMember[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="ceilingTypes">オブジェクト グラフの上方向の走査で検出された場合に評価を停止する 1 つ以上の型を指定します。 この型に目的のアンビエント プロパティが保持されています。 <see langword="null" /> でもかまいません。</param>
        <param name="searchLiveStackOnly">保存されたコンテキストを使用しない場合は <see langword="true" />。保存されたコンテキストを使用する場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</param>
        <param name="types">アンビエントと見なされる型を識別する 1 つ以上の型識別子オブジェクトを指定します。</param>
        <param name="properties">アンビエントと見なされるプロパティを識別する 1 つ以上のプロパティ識別子オブジェクトを指定します。</param>
        <summary>要求された型とプロパティのセットに対するアンビエント プロパティ情報項目の列挙可能なセットを返します。</summary>
        <returns>要求された型とプロパティのセットに対するアンビエント プロパティ情報アイテムの列挙可能なセット。 返された各 <see cref="T:System.Xaml.AmbientPropertyValue" /> のプロパティ情報は、入力された <paramref name="types" /> または <paramref name="properties" /> のいずれかに一致します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 各<xref:System.Xaml.AmbientPropertyValue>を含む返される、<xref:System.Xaml.XamlMember>識別子とプロパティの値。  
  
 この特定の<xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%2A>アンビエント型のオーバー ロードを検索でき、アンビエント プロパティと同じでは、ツリーを通過します。 このオーバー ロードを使用する結果とは異なる戻り値内の項目の順序が付け<xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%28System.Collections.Generic.IEnumerable%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlMember%5B%5D%29>または<xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%28System.Xaml.XamlType%5B%5D%29>します。  
  
 このオーバー ロードには、任意の保存されたコンテキストを使用しないように検索も許可されます。 <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%28System.Collections.Generic.IEnumerable%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlMember%5B%5D%29>または<xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%28System.Xaml.XamlType%5B%5D%29>オーバー ロードは保存されたコンテキストを暗黙的に使用可能な場合 (場合、暗黙的なと常に機能`searchLiveStackOnly`パラメーターが`false`)。 特定の XAML スキーマ コンテキスト、XAML が組み込まれたフレームワーク、保存されたコンテキストの概念は異なる方法で処理可能性があるがします。 WPF XAML 実装では、テンプレートの展開など、他の機能領域の保存されたコンテキストを使用します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFirstAmbientValue">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>最初に検出されたプロパティに基づいて、要求されたセットから単一のアンビエント型またはアンビエント プロパティの情報アイテムを返します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFirstAmbientValue">
      <MemberSignature Language="C#" Value="public object GetFirstAmbientValue (params System.Xaml.XamlType[] types);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetFirstAmbientValue(class System.Xaml.XamlType[] types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAmbientProvider.GetFirstAmbientValue(System.Xaml.XamlType[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFirstAmbientValue (ParamArray types As XamlType()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetFirstAmbientValue(... cli::array &lt;System::Xaml::XamlType ^&gt; ^ types);" />
      <MemberSignature Language="F#" Value="abstract member GetFirstAmbientValue : System.Xaml.XamlType[] -&gt; obj" Usage="iAmbientProvider.GetFirstAmbientValue types" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="System.Xaml.XamlType[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="types">アンビエント型情報を取得する型のセット。</param>
        <summary>要求された型に対する使用可能なアンビエント型の最初に一致したオブジェクトを返します。</summary>
        <returns>要求されたセットに対する最初の結果オブジェクト。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFirstAmbientValue">
      <MemberSignature Language="C#" Value="public System.Xaml.AmbientPropertyValue GetFirstAmbientValue (System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt; ceilingTypes, params System.Xaml.XamlMember[] properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xaml.AmbientPropertyValue GetFirstAmbientValue(class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.XamlType&gt; ceilingTypes, class System.Xaml.XamlMember[] properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAmbientProvider.GetFirstAmbientValue(System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Xaml.XamlMember[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFirstAmbientValue (ceilingTypes As IEnumerable(Of XamlType), ParamArray properties As XamlMember()) As AmbientPropertyValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xaml::AmbientPropertyValue ^ GetFirstAmbientValue(System::Collections::Generic::IEnumerable&lt;System::Xaml::XamlType ^&gt; ^ ceilingTypes, ... cli::array &lt;System::Xaml::XamlMember ^&gt; ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member GetFirstAmbientValue : seq&lt;System.Xaml.XamlType&gt; * System.Xaml.XamlMember[] -&gt; System.Xaml.AmbientPropertyValue" Usage="iAmbientProvider.GetFirstAmbientValue (ceilingTypes, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.AmbientPropertyValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ceilingTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt;" />
        <Parameter Name="properties" Type="System.Xaml.XamlMember[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="ceilingTypes">オブジェクト グラフの上方向の走査で検出された場合に評価を停止する 1 つ以上の型を指定します。 この型に目的のアンビエント プロパティが保持されています。</param>
        <param name="properties">アンビエントと見なされるプロパティを識別する 1 つ以上のオブジェクトを指定します。</param>
        <summary>最初に検出されたプロパティに基づいて、要求されたプロパティ セットから単一のアンビエント プロパティの情報アイテムを返します。</summary>
        <returns><paramref name="properties" /> リストで最初に見つかったアンビエント プロパティ値の単一のアンビエント プロパティの情報アイテム。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 各<xref:System.Xaml.AmbientPropertyValue>を含む返される、<xref:System.Xaml.XamlMember>識別子とプロパティの値。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>