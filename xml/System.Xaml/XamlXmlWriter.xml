<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XamlXmlWriter.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac54386495bae40713632b22d0af871e9adf9f3d979.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4386495bae40713632b22d0af871e9adf9f3d979</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xaml.XamlXmlWriter">
          <source>Uses a <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> support class to write a XAML node stream to a text or markup serialized form.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> または <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> サポート クラスを使用して、XAML ノード ストリームをテキストまたはマークアップのシリアル化形式に書き込みます。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlXmlWriter">
          <source>This class is typically used in serialization scenarios.</source>
          <target state="translated">このクラスは通常、シリアル化のシナリオで使用されます。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlXmlWriter">
          <source>How to Use XamlXmlWriter</source>
          <target state="translated">XamlXmlWriter を使用する方法</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlXmlWriter">
          <source>The <ph id="ph1">&lt;xref:System.Xaml.XamlWriter&gt;</ph> API has several methods that write different types of XAML nodes.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlWriter&gt;</ph> API には複数のメソッドを XAML ノードのさまざまな種類を記述します。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlXmlWriter">
          <source>Collectively, these are referred to in documentation as the <ph id="ph1">`Write`</ph> methods of a <ph id="ph2">&lt;xref:System.Xaml.XamlWriter&gt;</ph>.</source>
          <target state="translated">集合的に、これらを呼びますドキュメントで、<ph id="ph1">`Write`</ph>のメソッド、<ph id="ph2">&lt;xref:System.Xaml.XamlWriter&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlXmlWriter">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph> uses several internal state classes to determine what to do when one of its <ph id="ph2">`Write`</ph> implementations is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph> いくつかの内部状態クラスを使用して、決定した場合のいずれかの<ph id="ph2">`Write`</ph>実装が呼び出されます。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlXmlWriter">
          <source>A <ph id="ph1">`Write`</ph> call uses the states to determine whether the requested element, attribute, or value can be written, or whether an exception is thrown.</source>
          <target state="translated">A<ph id="ph1">`Write`</ph>かどうか、要求された要素、属性、または値を書き込む、または例外をスローするかどうかを確認する呼び出しは状態を使用します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlXmlWriter">
          <source>For example, if you call <ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriter.WriteEndObject%2A&gt;</ph> and the state of the <ph id="ph2">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph> current node position is on a value or within a member, an exception is thrown.</source>
          <target state="translated">呼び出す場合など、<ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriter.WriteEndObject%2A&gt;</ph>およびの状態、<ph id="ph2">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph>値またはメンバー内に現在のノードの位置は、例外がスローされます。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlXmlWriter">
          <source>Typically, callers of the <ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph> API should be aware of the type of the current XAML node that is coming from the XAML reader and the XAML node stream.</source>
          <target state="translated">一般的に、呼び出し元、 <ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph> API は、XAML リーダーと XAML ノード ストリームから読み込まれている現在の XAML ノードの種類を認識する必要があります。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlXmlWriter">
          <source>Based on this knowledge, callers should avoid calling <ph id="ph1">`Write`</ph> APIs that are not relevant to the current node type.</source>
          <target state="translated">このナレッジに基づいて、呼び出し元は呼び出しを避ける必要があります<ph id="ph1">`Write`</ph>いない現在のノード型に関連する Api。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlXmlWriter">
          <source>XAML Namespaces and XamlXmlWriter</source>
          <target state="translated">XAML 名前空間および XamlXmlWriter</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlXmlWriter">
          <source>The XAML namespace writing behavior of <ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph> is complex and is not limited to explicit calls to <ph id="ph2">&lt;xref:System.Xaml.XamlXmlWriter.WriteNamespace%2A&gt;</ph>.</source>
          <target state="translated">XAML 名前空間の動作を記述<ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph>は複雑であり、明示的な呼び出しに限定されません<ph id="ph2">&lt;xref:System.Xaml.XamlXmlWriter.WriteNamespace%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlXmlWriter">
          <source>Instead, other <ph id="ph1">`Write`</ph> calls, such as <ph id="ph2">&lt;xref:System.Xaml.XamlXmlWriter.WriteStartObject%2A&gt;</ph>, might require that the namespace declaration be written at particular points in the node structure.</source>
          <target state="translated">代わりに、その他の<ph id="ph1">`Write`</ph>などの呼び出し<ph id="ph2">&lt;xref:System.Xaml.XamlXmlWriter.WriteStartObject%2A&gt;</ph>ノードの構造内の特定の時点で、名前空間宣言を書く必要があります。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlXmlWriter">
          <source>The XAML writer either generates a prefix by its own logic, or uses information from the <ph id="ph1">&lt;xref:System.Xaml.INamespacePrefixLookup&gt;</ph> service to determine a preferred prefix.</source>
          <target state="translated">XAML ライターは、独自のロジックではプレフィックスを生成またはのいずれかから情報を使用して、<ph id="ph1">&lt;xref:System.Xaml.INamespacePrefixLookup&gt;</ph>推奨されるプレフィックスを判別するサービスです。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlXmlWriter">
          <source>Also, explicit <ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriter.WriteNamespace%2A&gt;</ph> calls might defer or might return nothing if the XAML namespace declaration is already applicable and declared elsewhere.</source>
          <target state="translated">また、明示的な<ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriter.WriteNamespace%2A&gt;</ph>呼び出しを延期または何も返されない可能性があります、XAML 名前空間宣言は既に宣言され、適用の場合。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlXmlWriter">
          <source>Write Method Exceptions</source>
          <target state="translated">書き込みメソッドの例外</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlXmlWriter">
          <source>Exceptions thrown by the <ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph><ph id="ph2">`Write`</ph> methods are typically either <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph> or <ph id="ph4">&lt;xref:System.Xaml.XamlXmlWriterException&gt;</ph>.</source>
          <target state="translated">によってスローされた例外、 <ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph> <ph id="ph2">`Write`</ph>メソッドは、いずれかでは通常<ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>または<ph id="ph4">&lt;xref:System.Xaml.XamlXmlWriterException&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlXmlWriter">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> often indicates that a XAML reader passed an invalid node structure into the XAML node stream.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>多くの場合、XAML リーダーが XAML ノード ストリームに無効なノード構造を渡されることを示します。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlXmlWriter">
          <source>In this case the node structure is invalid for reasons that are not related to validation of a XAML schema or a XAML schema context.</source>
          <target state="translated">ここでは、ノード構造が無効の XAML スキーマまたは XAML スキーマ コンテキストの検証に関連付けられていない理由。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlXmlWriter">
          <source>Rather, the node stream is invalid in its basic form.</source>
          <target state="translated">代わりに、ノード ストリームは、その基本的な形式では有効ではありません。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlXmlWriter">
          <source>For example, if a faulty XAML reader implementation generated a XAML node stream that contained two consecutive <ph id="ph1">`StartObject`</ph> nodes, the attempt to call the second <ph id="ph2">&lt;xref:System.Xaml.XamlXmlWriter.WriteStartObject%2A&gt;</ph> would throw an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">たとえば、障害のある XAML リーダーの実装が含まれている 2 つの連続する XAML ノード ストリームを生成<ph id="ph1">`StartObject`</ph>ノード、2 つ目を呼び出そうとした<ph id="ph2">&lt;xref:System.Xaml.XamlXmlWriter.WriteStartObject%2A&gt;</ph>をスローした場合、<ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlXmlWriter">
          <source>All XAML writers would consider such an operation to be invalid.</source>
          <target state="translated">すべての XAML ライターでは、無効になるような操作を考慮します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlXmlWriter">
          <source>Another example of an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> is when XAML namespace information is unavailable through the XAML schema context that applies to the current node stream position.</source>
          <target state="translated">別の例として、<ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>は XAML 名前空間情報が、現在のノード ストリームの位置に適用される、XAML スキーマ コンテキストを使用できない場合。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlXmlWriter">
          <source>A <ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriterException&gt;</ph> indicates an exception where this particular XAML writer implementation chooses to throw an exception based on its intended functionality.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriterException&gt;</ph>この特定の XAML ライターの実装が、目的の機能に基づく例外をスローする選択した例外を示します。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlXmlWriter">
          <source>A <ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriterException&gt;</ph> can indicate specific cases where a <ph id="ph2">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph> violates its own state or settings.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriterException&gt;</ph>特定のケースを示すことができます、<ph id="ph2">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph>状態またはの設定に違反しています。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlXmlWriter">
          <source>For example, a <ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriterException&gt;</ph> might result from attempts to write XAML namespace information into a position that the <ph id="ph2">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph> and its serialization format do not support, or writing duplicate members when the instance's <ph id="ph3">&lt;xref:System.Xaml.XamlXmlWriterSettings&gt;</ph> forbid it.</source>
          <target state="translated">など、<ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriterException&gt;</ph>位置に XAML 名前空間情報の書き込み試行からなる可能性がありますを<ph id="ph2">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph>のシリアル化形式しないようにしてくださいサポート、または重複するメンバーの書き込み時にインスタンスの<ph id="ph3">&lt;xref:System.Xaml.XamlXmlWriterSettings&gt;</ph>で禁止されています。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="T:System.Xaml.XamlXmlWriter">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlXmlWriter" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xaml.XamlXmlWriter" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext)">
          <source>The stream to write.</source>
          <target state="translated">書き込むストリーム。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext)">
          <source>The XAML schema context for the XAML writer.</source>
          <target state="translated">XAML ライターの XAML スキーマ コンテキスト。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlXmlWriter" /&gt;</ph> class from a stream.</source>
          <target state="translated">ストリームから <ph id="ph1">&lt;see cref="T:System.Xaml.XamlXmlWriter" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext)">
          <source><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext)">
          <source><ph id="ph1">&lt;paramref name="schemaContext" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="schemaContext" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.TextWriter,System.Xaml.XamlSchemaContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> that writes the output.</source>
          <target state="translated">出力を書き込む <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.TextWriter,System.Xaml.XamlSchemaContext)">
          <source>The XAML schema context for the XAML writer.</source>
          <target state="translated">XAML ライターの XAML スキーマ コンテキスト。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.TextWriter,System.Xaml.XamlSchemaContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlXmlWriter" /&gt;</ph> class from a <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> basis.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xaml.XamlXmlWriter" /&gt;</ph> を基礎として <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.TextWriter,System.Xaml.XamlSchemaContext)">
          <source><ph id="ph1">&lt;paramref name="textWriter" /&gt;</ph> or <ph id="ph2">&lt;paramref name="schemaContext" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="textWriter" /&gt;</ph> または <ph id="ph2">&lt;paramref name="schemaContext" /&gt;</ph> が <ph id="ph3">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.Xml.XmlWriter,System.Xaml.XamlSchemaContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> that writes the output.</source>
          <target state="translated">出力を書き込む <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.Xml.XmlWriter,System.Xaml.XamlSchemaContext)">
          <source>The XAML schema context for the XAML writer.</source>
          <target state="translated">XAML ライターの XAML スキーマ コンテキスト。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.Xml.XmlWriter,System.Xaml.XamlSchemaContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlXmlWriter" /&gt;</ph> class from a <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> basis.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xaml.XamlXmlWriter" /&gt;</ph> を基礎として <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.Xml.XmlWriter,System.Xaml.XamlSchemaContext)">
          <source><ph id="ph1">&lt;paramref name="xmlWriter" /&gt;</ph> or <ph id="ph2">&lt;paramref name="schemaContext" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="xmlWriter" /&gt;</ph> または <ph id="ph2">&lt;paramref name="schemaContext" /&gt;</ph> が <ph id="ph3">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
          <source>The stream to write.</source>
          <target state="translated">書き込むストリーム。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
          <source>The XAML schema context for the XAML writer.</source>
          <target state="translated">XAML ライターの XAML スキーマ コンテキスト。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
          <source>An instance of <ph id="ph1">&lt;see cref="T:System.Xaml.XamlXmlWriterSettings" /&gt;</ph>, which typically has specific non-default settings.</source>
          <target state="translated">通常は既定以外の固有の設定を持つ、<ph id="ph1">&lt;see cref="T:System.Xaml.XamlXmlWriterSettings" /&gt;</ph> のインスタンス。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlXmlWriter" /&gt;</ph> class from a stream using a writer settings object.</source>
          <target state="translated">ライター設定オブジェクトを使用して、ストリームから <ph id="ph1">&lt;see cref="T:System.Xaml.XamlXmlWriter" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
          <source>Do not change any values of the <ph id="ph1">`settings`</ph> object after the <ph id="ph2">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph> instance is constructed.</source>
          <target state="translated">任意の値を変更しないで、<ph id="ph1">`settings`</ph>オブジェクトの後に、<ph id="ph2">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph>インスタンスを構築します。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph> cannot update its internal settings based on settings values that are mutable at run time.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph> 実行時に変更可能な設定値に基づく内部の設定を更新できません。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
          <source>Settings should be provided for initialization only.</source>
          <target state="translated">設定は、初期化のみを提供する必要があります。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
          <source>You can merge settings from an active XAML writer by using one of the <ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriterSettings&gt;</ph> constructor signatures; however, you must then apply these settings to a new XAML writer instance instead of attempting to adjust the existing one.</source>
          <target state="translated">いずれかを使用して、アクティブな XAML ライターの設定をマージすることができます、<ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriterSettings&gt;</ph>コンス トラクターのシグネチャです。 ただし、必要がありますに適用するこれらの設定を既存のものを調整するのではなく新しい XAML ライターのインスタンス。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
          <source><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> or <ph id="ph2">&lt;paramref name="schemaContext" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> または <ph id="ph2">&lt;paramref name="schemaContext" /&gt;</ph> が <ph id="ph3">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.TextWriter,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> that writes the output.</source>
          <target state="translated">出力を書き込む <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.TextWriter,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
          <source>The XAML schema context for the XAML writer.</source>
          <target state="translated">XAML ライターの XAML スキーマ コンテキスト。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.TextWriter,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
          <source>An instance of <ph id="ph1">&lt;see cref="T:System.Xaml.XamlXmlWriterSettings" /&gt;</ph>, which typically has specific non-default settings.</source>
          <target state="translated">通常は既定以外の固有の設定を持つ、<ph id="ph1">&lt;see cref="T:System.Xaml.XamlXmlWriterSettings" /&gt;</ph> のインスタンス。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.TextWriter,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlXmlWriter" /&gt;</ph> class from a <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> basis using a settings object.</source>
          <target state="translated">設定オブジェクトを使用して、<ph id="ph1">&lt;see cref="T:System.Xaml.XamlXmlWriter" /&gt;</ph> を基礎として <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.TextWriter,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
          <source>Do not change any values of the <ph id="ph1">`settings`</ph> object after the <ph id="ph2">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph> instance is constructed.</source>
          <target state="translated">任意の値を変更しないで、<ph id="ph1">`settings`</ph>オブジェクトの後に、<ph id="ph2">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph>インスタンスを構築します。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.TextWriter,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph> cannot update its internal settings based on settings values that are mutable at run time.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph> 実行時に変更可能な設定値に基づく内部の設定を更新できません。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.TextWriter,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
          <source>Settings should be provided for initialization only.</source>
          <target state="translated">設定は、初期化のみを提供する必要があります。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.TextWriter,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
          <source>You can merge settings from an active XAML writer by using one of the <ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriterSettings&gt;</ph> constructor signatures; however, you must then apply these settings to a new XAML writer instance instead of attempting to adjust the existing one.</source>
          <target state="translated">いずれかを使用して、アクティブな XAML ライターの設定をマージすることができます、<ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriterSettings&gt;</ph>コンス トラクターのシグネチャです。 ただし、必要がありますに適用するこれらの設定を既存のものを調整するのではなく新しい XAML ライターのインスタンス。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.TextWriter,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
          <source><ph id="ph1">&lt;paramref name="textWriter" /&gt;</ph> or <ph id="ph2">&lt;paramref name="schemaContext" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="textWriter" /&gt;</ph> または <ph id="ph2">&lt;paramref name="schemaContext" /&gt;</ph> が <ph id="ph3">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.Xml.XmlWriter,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> that writes the output.</source>
          <target state="translated">出力を書き込む <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.Xml.XmlWriter,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
          <source>The XAML schema context for the XAML writer.</source>
          <target state="translated">XAML ライターの XAML スキーマ コンテキスト。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.Xml.XmlWriter,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
          <source>An instance of <ph id="ph1">&lt;see cref="T:System.Xaml.XamlXmlWriterSettings" /&gt;</ph>, which typically has specific non-default settings.</source>
          <target state="translated">通常は既定以外の固有の設定を持つ、<ph id="ph1">&lt;see cref="T:System.Xaml.XamlXmlWriterSettings" /&gt;</ph> のインスタンス。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.Xml.XmlWriter,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlXmlWriter" /&gt;</ph> class from a <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> basis using a settings object.</source>
          <target state="translated">設定オブジェクトを使用して、<ph id="ph1">&lt;see cref="T:System.Xaml.XamlXmlWriter" /&gt;</ph> を基礎として <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.Xml.XmlWriter,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
          <source>Do not change any values of the <ph id="ph1">`settings`</ph> object after the <ph id="ph2">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph> instance is constructed.</source>
          <target state="translated">任意の値を変更しないで、<ph id="ph1">`settings`</ph>オブジェクトの後に、<ph id="ph2">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph>インスタンスを構築します。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.Xml.XmlWriter,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph> cannot update its internal settings based on settings values that are mutable at run time.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph> 実行時に変更可能な設定値に基づく内部の設定を更新できません。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.Xml.XmlWriter,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
          <source>Settings should be provided for initialization only.</source>
          <target state="translated">設定は、初期化のみを提供する必要があります。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.Xml.XmlWriter,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
          <source>You can merge settings from an active XAML writer by using one of the <ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriterSettings&gt;</ph> constructor signatures; however, you must then apply these settings to a new XAML writer instance instead of attempting to adjust the existing one.</source>
          <target state="translated">いずれかを使用して、アクティブな XAML ライターの設定をマージすることができます、<ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriterSettings&gt;</ph>コンス トラクターのシグネチャです。 ただし、必要がありますに適用するこれらの設定を既存のものを調整するのではなく新しい XAML ライターのインスタンス。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.Xml.XmlWriter,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
          <source><ph id="ph1">&lt;paramref name="xmlWriter" /&gt;</ph> or <ph id="ph2">&lt;paramref name="schemaContext" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="xmlWriter" /&gt;</ph> または <ph id="ph2">&lt;paramref name="schemaContext" /&gt;</ph> が <ph id="ph3">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release the unmanaged resources; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">アンマネージ リソースを解放するには <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by <ph id="ph1">&lt;see cref="T:System.Xaml.XamlXmlWriter" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xaml.XamlXmlWriter" /&gt;</ph> によって使用されているアンマネージ リソースを解放し、オプションでマネージ リソースも解放します。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlXmlWriter.Dispose(System.Boolean)">
          <source>This implementation calls <ph id="ph1">`Close`</ph> on the underlying <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> or <ph id="ph3">&lt;xref:System.IO.TextWriter&gt;</ph> for cases where <ph id="ph4">&lt;xref:System.Xaml.XamlXmlWriterSettings.CloseOutput%2A&gt;</ph> is <ph id="ph5">`true`</ph> in any supplied <ph id="ph6">&lt;xref:System.Xaml.XamlXmlWriterSettings&gt;</ph>.</source>
          <target state="translated">この実装を呼び出す<ph id="ph1">`Close`</ph>、基になるで<ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph>または<ph id="ph3">&lt;xref:System.IO.TextWriter&gt;</ph>のケースの場所<ph id="ph4">&lt;xref:System.Xaml.XamlXmlWriterSettings.CloseOutput%2A&gt;</ph>は<ph id="ph5">`true`</ph>指定されたいずれかで<ph id="ph6">&lt;xref:System.Xaml.XamlXmlWriterSettings&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlXmlWriter.Dispose(System.Boolean)">
          <source>Otherwise, it calls <ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriter.Flush%2A&gt;</ph>.</source>
          <target state="translated">それ以外の場合、呼び出し<ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriter.Flush%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.Flush">
          <source>Calls the <ph id="ph1">&lt;see langword="Flush" /&gt;</ph> method of the underlying <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>, which writes anything that is currently in the buffer, and then closes the writer.</source>
          <target state="translated">基になる <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> または <ph id="ph3">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> の <ph id="ph1">&lt;see langword="Flush" /&gt;</ph> メソッドを呼び出します。これにより、現在のバッファーの内容がすべて書き込まれ、ライターが閉じられます。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlXmlWriter.Flush">
          <source>The <ph id="ph1">`Dispose`</ph> behavior for a <ph id="ph2">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph> can be influenced by its writer settings, especially by <ph id="ph3">&lt;xref:System.Xaml.XamlXmlWriterSettings.CloseOutput%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose`</ph>の動作、<ph id="ph2">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph>によって特にそのライターの設定が反映されることができます<ph id="ph3">&lt;xref:System.Xaml.XamlXmlWriterSettings.CloseOutput%2A?displayProperty=nameWithType&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlXmlWriter.SchemaContext">
          <source>Gets the XAML schema context that this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlXmlWriter" /&gt;</ph> uses for processing.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.Xaml.XamlXmlWriter" /&gt;</ph> が処理に使用する XAML スキーマ コンテキストを取得します。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlXmlWriter.SchemaContext">
          <source>The XAML schema context that this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlXmlWriter" /&gt;</ph> uses for XAML processing.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.Xaml.XamlXmlWriter" /&gt;</ph> が XAML 処理に使用する XAML スキーマ コンテキスト。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlXmlWriter.SchemaContext">
          <source>A XAML writer typically gets its XAML schema context from the associated XAML reader that is supplying the XAML node stream.</source>
          <target state="translated">XAML ライターは、通常、関連付けられている XAML リーダーは XAML ノード ストリームを提供しているから XAML スキーマ コンテキストを取得します。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlXmlWriter.Settings">
          <source>Gets the writer settings that this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlXmlWriter" /&gt;</ph> uses for XAML processing.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.Xaml.XamlXmlWriter" /&gt;</ph> が XAML 処理に使用するライター設定を取得します。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlXmlWriter.Settings">
          <source>The writer settings that this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlXmlWriter" /&gt;</ph> uses for XAML processing.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.Xaml.XamlXmlWriter" /&gt;</ph> が XAML 処理に使用するライター設定を取得します。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlXmlWriter.Settings">
          <source>The value that you get from this property is a copy and not a reference.</source>
          <target state="translated">このプロパティから取得する値は、コピーと参照ではなくです。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlXmlWriter.Settings">
          <source>Changing property values on the settings does not affect the active <ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph>.</source>
          <target state="translated">プロパティの値の設定を変更するには影響しません、アクティブな<ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph>します。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteEndMember">
          <source>Writes a XAML end member node to the underlying <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>.</source>
          <target state="translated">基になる <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> または <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> に XAML 終了メンバー ノードを書き込みます。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteEndMember">
          <source>Throws an exception if the current position of the XAML node stream is not within a member, or if the internal writer state does not support writing to an end member.</source>
          <target state="translated">XAML ノード ストリームの現在位置がメンバー内にない場合、または終了メンバーの書き込みが内部ライター状態でサポートされていない場合は、例外をスローします。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteEndMember">
          <source>The current position of the XAML node stream is not within a member.</source>
          <target state="translated">XAML ノード ストリームの現在位置が、メンバー内にありません。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteEndMember">
          <source>The current writer state does not support writing an end member.</source>
          <target state="translated">現在のライター状態は、終了メンバーの書き込みをサポートしていません。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteEndObject">
          <source>Writes a XAML end object node to the underlying <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>.</source>
          <target state="translated">基になる <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> または <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> に XAML 終了オブジェクト ノードを書き込みます。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteEndObject">
          <source>Throws an exception if the current position of the XAML node stream that is being processed is incompatible with writing an end object.</source>
          <target state="translated">処理される XAML ノード ストリームの現在位置に終了オブジェクトの書き込みとの互換性がない場合は、例外をスローします。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlXmlWriter.WriteEndObject">
          <source>In markup and text representations of XAML, an end object is a closing tag.</source>
          <target state="translated">XAML のマークアップとテキスト表現では、終了オブジェクトは、終了タグがします。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlXmlWriter.WriteEndObject">
          <source>The most common case where <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown by <ph id="ph2">&lt;xref:System.Xaml.XamlXmlWriter.WriteEndObject%2A&gt;</ph> is when the current XAML node stream position is still within a member, and <ph id="ph3">&lt;xref:System.Xaml.XamlXmlWriter.WriteEndObject%2A&gt;</ph> is called.</source>
          <target state="translated">最も一般的なケース<ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>によってスローされる<ph id="ph2">&lt;xref:System.Xaml.XamlXmlWriter.WriteEndObject%2A&gt;</ph>は、XAML ノード ストリームの現在位置が、メンバー内である場合と<ph id="ph3">&lt;xref:System.Xaml.XamlXmlWriter.WriteEndObject%2A&gt;</ph>と呼びます。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteEndObject">
          <source>The current position of the XAML node stream is not in a scope where an end member can be written.</source>
          <target state="translated">XAML ノード ストリームの現在位置が、終了メンバーを書き込むことができるスコープ内にありません。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteEndObject">
          <source>The current writer state does not support writing an end object.</source>
          <target state="translated">現在のライター状態は、終了オブジェクトの書き込みをサポートしていません。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteGetObject">
          <source>Writes an object for cases where the specified object is a default or implicit value of the property that is being written, instead of being specified as an object value in the input XAML node set.</source>
          <target state="translated">指定したオブジェクトが入力 XAML ノード セットでオブジェクト値として指定されているのではなく、書き込まれるプロパティの既定または暗黙の値である場合に、オブジェクトを書き込みます。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)">
          <source>The XAML namespace declaration to write.</source>
          <target state="translated">書き込む XAML 名前空間宣言。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)">
          <source>Writes namespace information to the underlying <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>.</source>
          <target state="translated">基になる <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> または <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> に名前空間の情報を書き込みます。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)">
          <source>May throw an exception for certain states; however, may instead defer writing the namespace information until the writer and the XAML node stream that is being processed reaches a position where a XAML namespace declaration can be inserted.</source>
          <target state="translated">特定の状態で例外がスローされる可能性がありますが、例外をスローする代わりに、XAML 名前空間の宣言を挿入できる位置にライターおよび処理される XAML ノード ストリームが到達するまで名前空間情報の書き込みを遅延させる場合があります。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)">
          <source><ph id="ph1">&lt;paramref name="namespaceDeclaration" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="namespaceDeclaration" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)">
          <source><ph id="ph1">&lt;paramref name="namespaceDeclaration" /&gt;</ph> is not a valid XAML namespace declaration (has a null prefix or null identifier component).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="namespaceDeclaration" /&gt;</ph> は、有効な XAML 名前空間の宣言ではありません (null プレフィックスまたは null 識別子コンポーネントがあります)。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)">
          <source>The current writer state does not support writing a XAML namespace declaration.</source>
          <target state="translated">現在のライター状態は、XAML 名前空間の宣言の書き込みをサポートしていません。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteStartMember(System.Xaml.XamlMember)">
          <source>The XAML member identifier for the member to write.</source>
          <target state="translated">書き込むメンバーの XAML メンバー識別子。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteStartMember(System.Xaml.XamlMember)">
          <source>Writes a XAML start member node to the underlying <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>.</source>
          <target state="translated">基になる <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> または <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> に XAML 開始メンバー ノードを書き込みます。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteStartMember(System.Xaml.XamlMember)">
          <source>Throws an exception if the current position of the XAML node stream is within another member, or if it is not in a scope or writer state where a start member can be written.</source>
          <target state="translated">XAML ノード ストリームの現在位置が別のメンバー内にある場合、または開始メンバーを書き込むことのできるスコープまたはライター状態にない場合は、例外をスローします。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlXmlWriter.WriteStartMember(System.Xaml.XamlMember)">
          <source>Internal default logic in the <ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph> first attempts to write the member in attribute form.</source>
          <target state="translated">内部の既定のロジックで、<ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph>属性の形式でメンバーを作成しようとするは最初にします。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlXmlWriter.WriteStartMember(System.Xaml.XamlMember)">
          <source>If no attribute form is supported because the property or its value does not support text syntax, a property element is written instead.</source>
          <target state="translated">プロパティまたはその値がテキストの構文をサポートしていないために、属性の形式はサポートされていません、プロパティ要素が代わりに書き込まれます。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlXmlWriter.WriteStartMember(System.Xaml.XamlMember)">
          <source>If the property is a XAML content property, a <ph id="ph1">`GetObject`</ph> case, or an implicit property, other XAML forms might be written, such as inner text or an object child that has no intervening member.</source>
          <target state="translated">プロパティが、XAML コンテンツ プロパティである場合、<ph id="ph1">`GetObject`</ph>ケース、または暗黙的なプロパティ、内部テキ ストまたは介在するメンバーを持たないオブジェクトの子など、他の XAML 形式を記述する場合があります。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlXmlWriter.WriteStartMember(System.Xaml.XamlMember)">
          <source>The duplicate member exception is never thrown if <ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriterSettings.AssumeValidInput%2A&gt;</ph> is <ph id="ph2">`true`</ph> in the <ph id="ph3">&lt;xref:System.Xaml.XamlXmlWriterSettings&gt;</ph> object that was used for settings for this <ph id="ph4">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph>.</source>
          <target state="translated">場合、重複するメンバーは、例外はスローされません<ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriterSettings.AssumeValidInput%2A&gt;</ph>は<ph id="ph2">`true`</ph>で、<ph id="ph3">&lt;xref:System.Xaml.XamlXmlWriterSettings&gt;</ph>これの設定を使用したオブジェクトを<ph id="ph4">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteStartMember(System.Xaml.XamlMember)">
          <source><ph id="ph1">&lt;paramref name="property" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="property" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteStartMember(System.Xaml.XamlMember)">
          <source><ph id="ph1">&lt;paramref name="property" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="property" /&gt;</ph> は有効な <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> ではありません。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteStartMember(System.Xaml.XamlMember)">
          <source>The current position of the XAML node stream is invalid for writing a start member.</source>
          <target state="translated">XAML ノード ストリームの現在位置が、開始メンバーの書き込みに対して無効です。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteStartMember(System.Xaml.XamlMember)">
          <source>The writer state is not valid for writing a start member.</source>
          <target state="translated">ライター状態は、開始メンバーの書き込みについて有効ではありません。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteStartMember(System.Xaml.XamlMember)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteStartMember(System.Xaml.XamlMember)">
          <source>The XAML writer attempted to write a duplicate member.</source>
          <target state="translated">XAML ライターが重複するメンバーを記述しようとしました。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteStartMember(System.Xaml.XamlMember)">
          <source>This exception may have a more precise inner exception.</source>
          <target state="translated">この例外には、より正確な内部例外がある可能性があります。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteStartObject(System.Xaml.XamlType)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> (XAML type identifier) for the object to write.</source>
          <target state="translated">書き込むオブジェクトの <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> (XAML 型識別子)。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteStartObject(System.Xaml.XamlType)">
          <source>Writes a XAML start object node to the underlying <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>.</source>
          <target state="translated">基になる <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> または <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> に XAML 開始オブジェクト ノードを書き込みます。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteStartObject(System.Xaml.XamlType)">
          <source>Throws an exception if the current position of the XAML node stream is not in a scope where a start object can be written, or if the writer is not in a state that can write a start object.</source>
          <target state="translated">XAML ノード ストリームの現在位置が開始オブジェクトを書き込むことのできるスコープにない場合、またはライターが開始オブジェクトを書き込むことのできる状態にない場合は、例外をスローします。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteStartObject(System.Xaml.XamlType)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteStartObject(System.Xaml.XamlType)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> は有効な <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> ではありません。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteStartObject(System.Xaml.XamlType)">
          <source>The current position of the XAML node stream is not valid for writing a new start object.</source>
          <target state="translated">XAML ノード ストリームの現在位置が、新規開始オブジェクトの書き込みに対して有効ではありません。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteStartObject(System.Xaml.XamlType)">
          <source>The state of the XAML writer is not valid for writing a new start object.</source>
          <target state="translated">XAML ライターの状態が、新規開始オブジェクトの書き込みに対して有効ではありません。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteValue(System.Object)">
          <source>The value information to write.</source>
          <target state="translated">書き込む値情報。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteValue(System.Object)">
          <source>Writes a XAML value node to the underlying <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>.</source>
          <target state="translated">基になる <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> または <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> に XAML 値ノードを書き込みます。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteValue(System.Object)">
          <source>Throws an exception if the current position of the XAML node stream is invalid for writing a value, or the writer is in a state where a value cannot be written.</source>
          <target state="translated">XAML ノード ストリームの現在位置が値の書き込みに対して無効である場合、またはライターが値を書き込めない状態にある場合は、例外をスローします。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlXmlWriter.WriteValue(System.Object)">
          <source>The input <ph id="ph1">`value`</ph> may be <ph id="ph2">`null`</ph>, which supports explicitly writing out null as a serialized value.</source>
          <target state="translated">入力<ph id="ph1">`value`</ph>可能性があります<ph id="ph2">`null`</ph>、シリアル化された値として null を明示的に記述をサポートします。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlXmlWriter.WriteValue(System.Object)">
          <source>This behavior uses the <ph id="ph1">&lt;xref:System.Xaml.XamlLanguage.Null%2A?displayProperty=nameWithType&gt;</ph> definition as <ph id="ph2">&lt;xref:System.Xaml.XamlXmlWriter.WriteStartObject%2A&gt;</ph> input and then immediately calls <ph id="ph3">&lt;xref:System.Xaml.XamlXmlWriter.WriteEndObject%2A&gt;</ph>.</source>
          <target state="translated">この動作を使用して、<ph id="ph1">&lt;xref:System.Xaml.XamlLanguage.Null%2A?displayProperty=nameWithType&gt;</ph>として定義<ph id="ph2">&lt;xref:System.Xaml.XamlXmlWriter.WriteStartObject%2A&gt;</ph>入力し、すぐに呼び出して<ph id="ph3">&lt;xref:System.Xaml.XamlXmlWriter.WriteEndObject%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteValue(System.Object)">
          <source>The current position of the XAML node stream is not valid for writing a value.</source>
          <target state="translated">XAML ノード ストリームの現在位置が、値の書き込みに対して有効ではありません。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteValue(System.Object)">
          <source>The XAML writer state does not support the writing of a value node.</source>
          <target state="translated">XAML ライター状態は、値ノードの書き込みをサポートしていません。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteValue(System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> specifies a value that is not null or a string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> に、null でも文字列でもない値が指定されています。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>