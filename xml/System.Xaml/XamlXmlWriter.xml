<Type Name="XamlXmlWriter" FullName="System.Xaml.XamlXmlWriter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5db12b0b313c0c2b62fbd959982afe9fc1ab4266" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36443849" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XamlXmlWriter : System.Xaml.XamlWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlXmlWriter extends System.Xaml.XamlWriter" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlXmlWriter" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlXmlWriter&#xA;Inherits XamlWriter" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlXmlWriter : System::Xaml::XamlWriter" />
  <TypeSignature Language="F#" Value="type XamlXmlWriter = class&#xA;    inherit XamlWriter" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xaml.XamlWriter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="T:System.IO.TextWriter" /> または <see cref="T:System.Xml.XmlWriter" /> サポート クラスを使用して、XAML ノード ストリームをテキストまたはマークアップのシリアル化形式に書き込みます。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このクラスは通常、シリアル化のシナリオで使用されます。  
  
## <a name="how-to-use-xamlxmlwriter"></a>XamlXmlWriter を使用する方法  
 <xref:System.Xaml.XamlWriter> API には複数のメソッドを XAML ノードのさまざまな種類を記述します。 集合的に、これらを呼びますドキュメントで、`Write`のメソッド、<xref:System.Xaml.XamlWriter>です。 <xref:System.Xaml.XamlXmlWriter> いくつかの内部状態クラスを使用して、決定した場合のいずれかの`Write`実装が呼び出されます。 A`Write`かどうか、要求された要素、属性、または値を書き込む、または例外をスローするかどうかを確認する呼び出しは状態を使用します。 呼び出す場合など、<xref:System.Xaml.XamlXmlWriter.WriteEndObject%2A>およびの状態、<xref:System.Xaml.XamlXmlWriter>値またはメンバー内に現在のノードの位置は、例外がスローされます。 一般的に、呼び出し元、 <xref:System.Xaml.XamlXmlWriter> API は、XAML リーダーと XAML ノード ストリームから読み込まれている現在の XAML ノードの種類を認識する必要があります。 このナレッジに基づいて、呼び出し元は呼び出しを避ける必要があります`Write`いない現在のノード型に関連する Api。  
  
## <a name="xaml-namespaces-and-xamlxmlwriter"></a>XAML 名前空間および XamlXmlWriter  
 XAML 名前空間の動作を記述<xref:System.Xaml.XamlXmlWriter>は複雑であり、明示的な呼び出しに限定されません<xref:System.Xaml.XamlXmlWriter.WriteNamespace%2A>です。 代わりに、その他の`Write`などの呼び出し<xref:System.Xaml.XamlXmlWriter.WriteStartObject%2A>ノードの構造内の特定の時点で、名前空間宣言を書く必要があります。 XAML ライターは、独自のロジックではプレフィックスを生成またはのいずれかから情報を使用して、<xref:System.Xaml.INamespacePrefixLookup>推奨されるプレフィックスを判別するサービスです。 また、明示的な<xref:System.Xaml.XamlXmlWriter.WriteNamespace%2A>呼び出しを延期または何も返されない可能性があります、XAML 名前空間宣言は既に宣言され、適用の場合。  
  
## <a name="write-method-exceptions"></a>書き込みメソッドの例外  
 によってスローされた例外、 <xref:System.Xaml.XamlXmlWriter> `Write`メソッドは、いずれかでは通常<xref:System.InvalidOperationException>または<xref:System.Xaml.XamlXmlWriterException>です。  
  
 <xref:System.InvalidOperationException>多くの場合、XAML リーダーが XAML ノード ストリームに無効なノード構造を渡されることを示します。 ここでは、ノード構造が無効の XAML スキーマまたは XAML スキーマ コンテキストの検証に関連付けられていない理由。 代わりに、ノード ストリームは、その基本的な形式では有効ではありません。 たとえば、障害のある XAML リーダーの実装が含まれている 2 つの連続する XAML ノード ストリームを生成`StartObject`ノード、2 つ目を呼び出そうとした<xref:System.Xaml.XamlXmlWriter.WriteStartObject%2A>をスローした場合、<xref:System.InvalidOperationException>です。 すべての XAML ライターでは、無効になるような操作を考慮します。 別の例として、<xref:System.InvalidOperationException>は XAML 名前空間情報が、現在のノード ストリームの位置に適用される、XAML スキーマ コンテキストを使用できない場合。  
  
 A<xref:System.Xaml.XamlXmlWriterException>この特定の XAML ライターの実装が、目的の機能に基づく例外をスローする選択した例外を示します。 A<xref:System.Xaml.XamlXmlWriterException>特定のケースを示すことができます、<xref:System.Xaml.XamlXmlWriter>状態またはの設定に違反しています。 など、<xref:System.Xaml.XamlXmlWriterException>位置に XAML 名前空間情報の書き込み試行からなる可能性がありますを<xref:System.Xaml.XamlXmlWriter>のシリアル化形式しないようにしてくださいサポート、または重複するメンバーの書き込み時にインスタンスの<xref:System.Xaml.XamlXmlWriterSettings>で禁止されています。  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Xaml.XamlServices.Save(System.IO.Stream,System.Object)" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Xaml.XamlXmlWriter" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlXmlWriter (System.IO.Stream stream, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlXmlWriter(System::IO::Stream ^ stream, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlXmlWriter : System.IO.Stream * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlXmlWriter" Usage="new System.Xaml.XamlXmlWriter (stream, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="stream">書き込むストリーム。</param>
        <param name="schemaContext">XAML ライターの XAML スキーマ コンテキスト。</param>
        <summary>ストリームから <see cref="T:System.Xaml.XamlXmlWriter" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="stream" /> は <see langword="null" />です。  または、<paramref name="schemaContext" /> が <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlXmlWriter (System.IO.TextWriter textWriter, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter textWriter, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.TextWriter,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlXmlWriter(System::IO::TextWriter ^ textWriter, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlXmlWriter : System.IO.TextWriter * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlXmlWriter" Usage="new System.Xaml.XamlXmlWriter (textWriter, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="textWriter" Type="System.IO.TextWriter" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="textWriter">出力を書き込む <see cref="T:System.IO.TextWriter" />。</param>
        <param name="schemaContext">XAML ライターの XAML スキーマ コンテキスト。</param>
        <summary>
          <see cref="T:System.Xaml.XamlXmlWriter" /> を基礎として <see cref="T:System.IO.TextWriter" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="textWriter" /> または <paramref name="schemaContext" /> が <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlXmlWriter (System.Xml.XmlWriter xmlWriter, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlWriter xmlWriter, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlWriter.#ctor(System.Xml.XmlWriter,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlXmlWriter(System::Xml::XmlWriter ^ xmlWriter, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlXmlWriter : System.Xml.XmlWriter * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlXmlWriter" Usage="new System.Xaml.XamlXmlWriter (xmlWriter, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlWriter" Type="System.Xml.XmlWriter" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="xmlWriter">出力を書き込む <see cref="T:System.Xml.XmlWriter" />。</param>
        <param name="schemaContext">XAML ライターの XAML スキーマ コンテキスト。</param>
        <summary>
          <see cref="T:System.Xaml.XamlXmlWriter" /> を基礎として <see cref="T:System.Xml.XmlWriter" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="xmlWriter" /> または <paramref name="schemaContext" /> が <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlXmlWriter (System.IO.Stream stream, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.XamlXmlWriterSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.XamlXmlWriterSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlXmlWriter(System::IO::Stream ^ stream, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::XamlXmlWriterSettings ^ settings);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlXmlWriter : System.IO.Stream * System.Xaml.XamlSchemaContext * System.Xaml.XamlXmlWriterSettings -&gt; System.Xaml.XamlXmlWriter" Usage="new System.Xaml.XamlXmlWriter (stream, schemaContext, settings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="settings" Type="System.Xaml.XamlXmlWriterSettings" />
      </Parameters>
      <Docs>
        <param name="stream">書き込むストリーム。</param>
        <param name="schemaContext">XAML ライターの XAML スキーマ コンテキスト。</param>
        <param name="settings">通常は既定以外の固有の設定を持つ、<see cref="T:System.Xaml.XamlXmlWriterSettings" /> のインスタンス。</param>
        <summary>ライター設定オブジェクトを使用して、ストリームから <see cref="T:System.Xaml.XamlXmlWriter" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 任意の値を変更しないで、`settings`オブジェクトの後に、<xref:System.Xaml.XamlXmlWriter>インスタンスを構築します。 <xref:System.Xaml.XamlXmlWriter> 実行時に変更可能な設定値に基づく内部の設定を更新できません。 設定は、初期化のみを提供する必要があります。 いずれかを使用して、アクティブな XAML ライターの設定をマージすることができます、<xref:System.Xaml.XamlXmlWriterSettings>コンス トラクターのシグネチャです。 ただし、必要がありますに適用するこれらの設定を既存のものを調整するのではなく新しい XAML ライターのインスタンス。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="stream" /> または <paramref name="schemaContext" /> が <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlXmlWriter (System.IO.TextWriter textWriter, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.XamlXmlWriterSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter textWriter, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.XamlXmlWriterSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.TextWriter,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlXmlWriter(System::IO::TextWriter ^ textWriter, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::XamlXmlWriterSettings ^ settings);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlXmlWriter : System.IO.TextWriter * System.Xaml.XamlSchemaContext * System.Xaml.XamlXmlWriterSettings -&gt; System.Xaml.XamlXmlWriter" Usage="new System.Xaml.XamlXmlWriter (textWriter, schemaContext, settings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="textWriter" Type="System.IO.TextWriter" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="settings" Type="System.Xaml.XamlXmlWriterSettings" />
      </Parameters>
      <Docs>
        <param name="textWriter">出力を書き込む <see cref="T:System.IO.TextWriter" />。</param>
        <param name="schemaContext">XAML ライターの XAML スキーマ コンテキスト。</param>
        <param name="settings">通常は既定以外の固有の設定を持つ、<see cref="T:System.Xaml.XamlXmlWriterSettings" /> のインスタンス。</param>
        <summary>設定オブジェクトを使用して、<see cref="T:System.Xaml.XamlXmlWriter" /> を基礎として <see cref="T:System.IO.TextWriter" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 任意の値を変更しないで、`settings`オブジェクトの後に、<xref:System.Xaml.XamlXmlWriter>インスタンスを構築します。 <xref:System.Xaml.XamlXmlWriter> 実行時に変更可能な設定値に基づく内部の設定を更新できません。 設定は、初期化のみを提供する必要があります。 いずれかを使用して、アクティブな XAML ライターの設定をマージすることができます、<xref:System.Xaml.XamlXmlWriterSettings>コンス トラクターのシグネチャです。 ただし、必要がありますに適用するこれらの設定を既存のものを調整するのではなく新しい XAML ライターのインスタンス。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="textWriter" /> または <paramref name="schemaContext" /> が <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlXmlWriter (System.Xml.XmlWriter xmlWriter, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.XamlXmlWriterSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlWriter xmlWriter, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.XamlXmlWriterSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlWriter.#ctor(System.Xml.XmlWriter,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlXmlWriter(System::Xml::XmlWriter ^ xmlWriter, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::XamlXmlWriterSettings ^ settings);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlXmlWriter : System.Xml.XmlWriter * System.Xaml.XamlSchemaContext * System.Xaml.XamlXmlWriterSettings -&gt; System.Xaml.XamlXmlWriter" Usage="new System.Xaml.XamlXmlWriter (xmlWriter, schemaContext, settings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlWriter" Type="System.Xml.XmlWriter" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="settings" Type="System.Xaml.XamlXmlWriterSettings" />
      </Parameters>
      <Docs>
        <param name="xmlWriter">出力を書き込む <see cref="T:System.Xml.XmlWriter" />。</param>
        <param name="schemaContext">XAML ライターの XAML スキーマ コンテキスト。</param>
        <param name="settings">通常は既定以外の固有の設定を持つ、<see cref="T:System.Xaml.XamlXmlWriterSettings" /> のインスタンス。</param>
        <summary>設定オブジェクトを使用して、<see cref="T:System.Xaml.XamlXmlWriter" /> を基礎として <see cref="T:System.Xml.XmlWriter" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 任意の値を変更しないで、`settings`オブジェクトの後に、<xref:System.Xaml.XamlXmlWriter>インスタンスを構築します。 <xref:System.Xaml.XamlXmlWriter> 実行時に変更可能な設定値に基づく内部の設定を更新できません。 設定は、初期化のみを提供する必要があります。 いずれかを使用して、アクティブな XAML ライターの設定をマージすることができます、<xref:System.Xaml.XamlXmlWriterSettings>コンス トラクターのシグネチャです。 ただし、必要がありますに適用するこれらの設定を既存のものを調整するのではなく新しい XAML ライターのインスタンス。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="xmlWriter" /> または <paramref name="schemaContext" /> が <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlWriter.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="xamlXmlWriter.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">アンマネージ リソースを解放するには <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
        <summary>ph x="1" /&amp;gt; によって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この実装を呼び出す`Close`、基になるで<xref:System.Xml.XmlWriter>または<xref:System.IO.TextWriter>のケースの場所<xref:System.Xaml.XamlXmlWriterSettings.CloseOutput%2A>は`true`指定されたいずれかで<xref:System.Xaml.XamlXmlWriterSettings>です。 それ以外の場合、呼び出し<xref:System.Xaml.XamlXmlWriter.Flush%2A>です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlWriter.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flush();" />
      <MemberSignature Language="F#" Value="member this.Flush : unit -&gt; unit" Usage="xamlXmlWriter.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>基になる <see cref="T:System.Xml.XmlWriter" /> または <see cref="T:System.IO.TextWriter" /> の <see langword="Flush" /> メソッドを呼び出します。これにより、現在のバッファーの内容がすべて書き込まれ、ライターが閉じられます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Dispose`の動作、<xref:System.Xaml.XamlXmlWriter>によって特にそのライターの設定が反映されることができます<xref:System.Xaml.XamlXmlWriterSettings.CloseOutput%2A?displayProperty=nameWithType>です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SchemaContext">
      <MemberSignature Language="C#" Value="public override System.Xaml.XamlSchemaContext SchemaContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlSchemaContext SchemaContext" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlXmlWriter.SchemaContext" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SchemaContext As XamlSchemaContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xaml::XamlSchemaContext ^ SchemaContext { System::Xaml::XamlSchemaContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SchemaContext : System.Xaml.XamlSchemaContext" Usage="System.Xaml.XamlXmlWriter.SchemaContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlSchemaContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Xaml.XamlXmlWriter" /> が処理に使用する XAML スキーマ コンテキストを取得します。</summary>
        <value>この <see cref="T:System.Xaml.XamlXmlWriter" /> が XAML 処理に使用する XAML スキーマ コンテキスト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 XAML ライターは、通常、関連付けられている XAML リーダーは XAML ノード ストリームを提供しているから XAML スキーマ コンテキストを取得します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Settings">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlXmlWriterSettings Settings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlXmlWriterSettings Settings" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlXmlWriter.Settings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Settings As XamlXmlWriterSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlXmlWriterSettings ^ Settings { System::Xaml::XamlXmlWriterSettings ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Settings : System.Xaml.XamlXmlWriterSettings" Usage="System.Xaml.XamlXmlWriter.Settings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlXmlWriterSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Xaml.XamlXmlWriter" /> が XAML 処理に使用するライター設定を取得します。</summary>
        <value>この <see cref="T:System.Xaml.XamlXmlWriter" /> が XAML 処理に使用するライター設定を取得します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティから取得する値は、コピーと参照ではなくです。 プロパティの値の設定を変更するには影響しません、アクティブな<xref:System.Xaml.XamlXmlWriter>します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEndMember">
      <MemberSignature Language="C#" Value="public override void WriteEndMember ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndMember() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlWriter.WriteEndMember" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndMember ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndMember();" />
      <MemberSignature Language="F#" Value="override this.WriteEndMember : unit -&gt; unit" Usage="xamlXmlWriter.WriteEndMember " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>基になる <see cref="T:System.Xml.XmlWriter" /> または <see cref="T:System.IO.TextWriter" /> に XAML 終了メンバー ノードを書き込みます。 XAML ノード ストリームの現在位置がメンバー内にない場合、または終了メンバーの書き込みが内部ライター状態でサポートされていない場合は、例外をスローします。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">XAML ノード ストリームの現在位置が、メンバー内にありません。</exception>
        <exception cref="T:System.Xaml.XamlXmlWriterException">現在のライター状態は、終了メンバーの書き込みをサポートしていません。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndObject">
      <MemberSignature Language="C#" Value="public override void WriteEndObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlWriter.WriteEndObject" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndObject ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndObject();" />
      <MemberSignature Language="F#" Value="override this.WriteEndObject : unit -&gt; unit" Usage="xamlXmlWriter.WriteEndObject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>基になる <see cref="T:System.Xml.XmlWriter" /> または <see cref="T:System.IO.TextWriter" /> に XAML 終了オブジェクト ノードを書き込みます。 処理される XAML ノード ストリームの現在位置に終了オブジェクトの書き込みとの互換性がない場合は、例外をスローします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 XAML のマークアップとテキスト表現では、終了オブジェクトは、終了タグがします。  
  
 最も一般的なケース<xref:System.InvalidOperationException>によってスローされる<xref:System.Xaml.XamlXmlWriter.WriteEndObject%2A>は、XAML ノード ストリームの現在位置が、メンバー内である場合と<xref:System.Xaml.XamlXmlWriter.WriteEndObject%2A>と呼びます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">XAML ノード ストリームの現在位置が、終了メンバーを書き込むことができるスコープ内にありません。</exception>
        <exception cref="T:System.Xaml.XamlXmlWriterException">現在のライター状態は、終了オブジェクトの書き込みをサポートしていません。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteGetObject">
      <MemberSignature Language="C#" Value="public override void WriteGetObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteGetObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlWriter.WriteGetObject" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteGetObject ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteGetObject();" />
      <MemberSignature Language="F#" Value="override this.WriteGetObject : unit -&gt; unit" Usage="xamlXmlWriter.WriteGetObject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>指定したオブジェクトが入力 XAML ノード セットでオブジェクト値として指定されているのではなく、書き込まれるプロパティの既定または暗黙の値である場合に、オブジェクトを書き込みます。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteNamespace">
      <MemberSignature Language="C#" Value="public override void WriteNamespace (System.Xaml.NamespaceDeclaration namespaceDeclaration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteNamespace(class System.Xaml.NamespaceDeclaration namespaceDeclaration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteNamespace(System::Xaml::NamespaceDeclaration ^ namespaceDeclaration);" />
      <MemberSignature Language="F#" Value="override this.WriteNamespace : System.Xaml.NamespaceDeclaration -&gt; unit" Usage="xamlXmlWriter.WriteNamespace namespaceDeclaration" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="namespaceDeclaration" Type="System.Xaml.NamespaceDeclaration" />
      </Parameters>
      <Docs>
        <param name="namespaceDeclaration">書き込む XAML 名前空間宣言。</param>
        <summary>基になる <see cref="T:System.Xml.XmlWriter" /> または <see cref="T:System.IO.TextWriter" /> に名前空間の情報を書き込みます。 特定の状態で例外がスローされる可能性がありますが、例外をスローする代わりに、XAML 名前空間の宣言を挿入できる位置にライターおよび処理される XAML ノード ストリームが到達するまで名前空間情報の書き込みを遅延させる場合があります。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="namespaceDeclaration" /> は <see langword="null" />です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="namespaceDeclaration" /> は、有効な XAML 名前空間の宣言ではありません (null プレフィックスまたは null 識別子コンポーネントがあります)。</exception>
        <exception cref="T:System.Xaml.XamlXmlWriterException">現在のライター状態は、XAML 名前空間の宣言の書き込みをサポートしていません。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartMember">
      <MemberSignature Language="C#" Value="public override void WriteStartMember (System.Xaml.XamlMember property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartMember(class System.Xaml.XamlMember property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlWriter.WriteStartMember(System.Xaml.XamlMember)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartMember (property As XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartMember(System::Xaml::XamlMember ^ property);" />
      <MemberSignature Language="F#" Value="override this.WriteStartMember : System.Xaml.XamlMember -&gt; unit" Usage="xamlXmlWriter.WriteStartMember property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Xaml.XamlMember" />
      </Parameters>
      <Docs>
        <param name="property">書き込むメンバーの XAML メンバー識別子。</param>
        <summary>基になる <see cref="T:System.Xml.XmlWriter" /> または <see cref="T:System.IO.TextWriter" /> に XAML 開始メンバー ノードを書き込みます。 XAML ノード ストリームの現在位置が別のメンバー内にある場合、または開始メンバーを書き込むことのできるスコープまたはライター状態にない場合は、例外をスローします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 内部の既定のロジックで、<xref:System.Xaml.XamlXmlWriter>属性の形式でメンバーを作成しようとするは最初にします。 プロパティまたはその値がテキストの構文をサポートしていないために、属性の形式はサポートされていません、プロパティ要素が代わりに書き込まれます。 プロパティが、XAML コンテンツ プロパティである場合、`GetObject`ケース、または暗黙的なプロパティ、内部テキ ストまたは介在するメンバーを持たないオブジェクトの子など、他の XAML 形式を記述する場合があります。  
  
 場合、重複するメンバーは、例外はスローされません<xref:System.Xaml.XamlXmlWriterSettings.AssumeValidInput%2A>は`true`で、<xref:System.Xaml.XamlXmlWriterSettings>これの設定を使用したオブジェクトを<xref:System.Xaml.XamlXmlWriter>です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="property" /> は <see langword="null" />です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="property" /> は有効な <see cref="T:System.Xaml.XamlMember" /> ではありません。</exception>
        <exception cref="T:System.InvalidOperationException">XAML ノード ストリームの現在位置が、開始メンバーの書き込みに対して無効です。</exception>
        <exception cref="T:System.Xaml.XamlXmlWriterException">ライター状態は、開始メンバーの書き込みについて有効ではありません。  または、XAML ライターが重複するメンバーを記述しようとしました。 この例外には、より正確な内部例外がある可能性があります。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartObject">
      <MemberSignature Language="C#" Value="public override void WriteStartObject (System.Xaml.XamlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartObject(class System.Xaml.XamlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlWriter.WriteStartObject(System.Xaml.XamlType)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartObject (type As XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartObject(System::Xaml::XamlType ^ type);" />
      <MemberSignature Language="F#" Value="override this.WriteStartObject : System.Xaml.XamlType -&gt; unit" Usage="xamlXmlWriter.WriteStartObject type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="type">書き込むオブジェクトの <see cref="T:System.Xaml.XamlType" /> (XAML 型識別子)。</param>
        <summary>基になる <see cref="T:System.Xml.XmlWriter" /> または <see cref="T:System.IO.TextWriter" /> に XAML 開始オブジェクト ノードを書き込みます。 XAML ノード ストリームの現在位置が開始オブジェクトを書き込むことのできるスコープにない場合、またはライターが開始オブジェクトを書き込むことのできる状態にない場合は、例外をスローします。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="type" /> は <see langword="null" />です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="type" /> は有効な <see cref="T:System.Xaml.XamlType" /> ではありません。</exception>
        <exception cref="T:System.InvalidOperationException">XAML ノード ストリームの現在位置が、新規開始オブジェクトの書き込みに対して有効ではありません。</exception>
        <exception cref="T:System.Xaml.XamlXmlWriterException">XAML ライターの状態が、新規開始オブジェクトの書き込みに対して有効ではありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public override void WriteValue (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteValue(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlWriter.WriteValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteValue (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteValue(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.WriteValue : obj -&gt; unit" Usage="xamlXmlWriter.WriteValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">書き込む値情報。</param>
        <summary>基になる <see cref="T:System.Xml.XmlWriter" /> または <see cref="T:System.IO.TextWriter" /> に XAML 値ノードを書き込みます。 XAML ノード ストリームの現在位置が値の書き込みに対して無効である場合、またはライターが値を書き込めない状態にある場合は、例外をスローします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 入力`value`可能性があります`null`、シリアル化された値として null を明示的に記述をサポートします。 この動作を使用して、<xref:System.Xaml.XamlLanguage.Null%2A?displayProperty=nameWithType>として定義<xref:System.Xaml.XamlXmlWriter.WriteStartObject%2A>入力し、すぐに呼び出して<xref:System.Xaml.XamlXmlWriter.WriteEndObject%2A>です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">XAML ノード ストリームの現在位置が、値の書き込みに対して有効ではありません。</exception>
        <exception cref="T:System.Xaml.XamlXmlWriterException">XAML ライター状態は、値ノードの書き込みをサポートしていません。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="value" /> に、null でも文字列でもない値が指定されています。</exception>
      </Docs>
    </Member>
  </Members>
</Type>