<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XamlReader.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5b2c5d677ab741eb848cf99fa1f0d969968ff9639.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b2c5d677ab741eb848cf99fa1f0d969968ff9639</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xaml.XamlReader">
          <source>Provides base definitions for classes that consume XAML input and produce XAML node streams.</source>
          <target state="translated">XAML 入力を処理して XAML ノード ストリームを生成するクラスの基本定義を提供します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlReader">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlReader&gt;</ph> is an abstract class and does not provide implementations or definitions that have a working result for all members.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlReader&gt;</ph> 抽象クラスは、実装や作業結果があるすべてのメンバーの定義を提供しません。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlReader">
          <source>Members that do have an implementation in <ph id="ph1">&lt;xref:System.Xaml.XamlReader&gt;</ph> are noted in the remarks for that member.</source>
          <target state="translated">メンバーの実装が<ph id="ph1">&lt;xref:System.Xaml.XamlReader&gt;</ph>はそのメンバーの「解説」に記載されています。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlReader">
          <source>Specifically, <ph id="ph1">&lt;xref:System.Xaml.XamlReader&gt;</ph> has several abstract members that must be implemented, and several virtual members.</source>
          <target state="translated">具体的には、<ph id="ph1">&lt;xref:System.Xaml.XamlReader&gt;</ph>いくつかの抽象メンバーを実装する必要がある、いくつかの仮想メンバーです。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlReader">
          <source>Of the virtual members, <ph id="ph1">&lt;xref:System.Xaml.XamlReader.ReadSubtree%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Xaml.XamlReader.Skip%2A&gt;</ph> each provide a default implementation that is appropriate for most cases.</source>
          <target state="translated">仮想メンバーの<ph id="ph1">&lt;xref:System.Xaml.XamlReader.ReadSubtree%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Xaml.XamlReader.Skip%2A&gt;</ph>各ほとんどの場合に適切な既定の実装を提供します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlReader">
          <source>However, the <ph id="ph1">&lt;xref:System.Xaml.XamlReader.ReadSubtree%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Xaml.XamlReader.Skip%2A&gt;</ph> default implementations rely on other expected behavior of the implementing XAML reader; in particular, they rely on the <ph id="ph3">&lt;xref:System.Xaml.XamlReader.Read%2A&gt;</ph> override.</source>
          <target state="translated">ただし、<ph id="ph1">&lt;xref:System.Xaml.XamlReader.ReadSubtree%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Xaml.XamlReader.Skip%2A&gt;</ph>実装の XAML リーダーの他の予期される動作に依存して既定の実装です。 具体的には、依存している、<ph id="ph3">&lt;xref:System.Xaml.XamlReader.Read%2A&gt;</ph>をオーバーライドします。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlReader">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlReader.Dispose%2A&gt;</ph> is also a virtual member that has a working default implementation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlReader.Dispose%2A&gt;</ph> 作業用の既定の実装を持つ仮想メンバーです。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlReader">
          <source>The following two classes are the most relevant and practical derived classes in .NET Framework XAML Services and the System.Xaml assembly:</source>
          <target state="translated">次の 2 つのクラスは、.NET Framework XAML サービスと System.Xaml アセンブリに最も関連するかつ実用的な派生クラスです。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlReader">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlObjectReader&gt;</ph>, which reads an object graph, such as the active object graph of an application at run time.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlObjectReader&gt;</ph>、実行時にアプリケーションのアクティブなオブジェクト グラフなど、オブジェクト グラフを読み取ります。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlReader">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlXmlReader&gt;</ph>, which reads XAML in the form of a XML text file by using a general <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> that loads the file as an intermediary helper class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlXmlReader&gt;</ph>、、[全般] を使用して XML テキスト ファイルの形式で XAML を読み取ります<ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>中間ヘルパー クラスとしてファイルを読み込みます。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlReader">
          <source>Other XAML readers from other frameworks include <ph id="ph1">&lt;xref:System.Windows.Baml2006.Baml2006Reader&gt;</ph> and <ph id="ph2">&lt;xref:System.Activities.Debugger.XamlDebuggerXmlReader&gt;</ph>.</source>
          <target state="translated">その他のフレームワークから他の XAML リーダーは、<ph id="ph1">&lt;xref:System.Windows.Baml2006.Baml2006Reader&gt;</ph>と<ph id="ph2">&lt;xref:System.Activities.Debugger.XamlDebuggerXmlReader&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlReader">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlReader&gt;</ph> differs from <ph id="ph2">[!INCLUDE[TLA#tla_xmldom](~/includes/tlasharptla-xmldom-md.md)]</ph> and <ph id="ph3">&lt;xref:System.Xml.XmlReader&gt;</ph> design principles because <ph id="ph4">&lt;xref:System.Xaml.XamlReader&gt;</ph> does not have a <ph id="ph5">`Create`</ph> method to return underlying default XAML reader implementations.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlReader&gt;</ph> 異なります<ph id="ph2">[!INCLUDE[TLA#tla_xmldom](~/includes/tlasharptla-xmldom-md.md)]</ph>と<ph id="ph3">&lt;xref:System.Xml.XmlReader&gt;</ph>ためにのデザイン原則<ph id="ph4">&lt;xref:System.Xaml.XamlReader&gt;</ph>はありません、<ph id="ph5">`Create`</ph>を基になる既定の XAML リーダーの実装を返すメソッド。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlReader">
          <source>You must instead instantiate specific derived XAML reader classes by calling their constructors or other class-specific helper APIs.</source>
          <target state="translated">代わりに、そのコンス トラクターまたはその他のクラスに固有のヘルパー Api を呼び出すことによって派生の特定の XAML リーダー クラスをインスタンス化する必要があります。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlReader">
          <source>Subtree Readers</source>
          <target state="translated">サブツリー リーダー</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlReader">
          <source>For the most part, you call <ph id="ph1">&lt;xref:System.Xaml.XamlReader&gt;</ph> API in the context of specific XAML reader classes that derive from <ph id="ph2">&lt;xref:System.Xaml.XamlReader&gt;</ph>.</source>
          <target state="translated">ほとんどの場合を呼び出す<ph id="ph1">&lt;xref:System.Xaml.XamlReader&gt;</ph>から派生する特定の XAML リーダー クラスのコンテキストで API<ph id="ph2">&lt;xref:System.Xaml.XamlReader&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlReader">
          <source>However, in one particular case, you access <ph id="ph1">&lt;xref:System.Xaml.XamlReader&gt;</ph> API on a practical XAML reader instance that is not public and not derived from <ph id="ph2">&lt;xref:System.Xaml.XamlObjectReader&gt;</ph> or <ph id="ph3">&lt;xref:System.Xaml.XamlXmlReader&gt;</ph>.</source>
          <target state="translated">ただし、特定の 1 つのケースではアクセス<ph id="ph1">&lt;xref:System.Xaml.XamlReader&gt;</ph>とパブリックでない派生ではない実用的な XAML リーダー インスタンスの API<ph id="ph2">&lt;xref:System.Xaml.XamlObjectReader&gt;</ph>または<ph id="ph3">&lt;xref:System.Xaml.XamlXmlReader&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlReader">
          <source>This case is when you call <ph id="ph1">&lt;xref:System.Xaml.XamlReader.ReadSubtree%2A&gt;</ph>, which returns a <ph id="ph2">&lt;xref:System.Xaml.XamlReader&gt;</ph> instance.</source>
          <target state="translated">この例を呼び出すときは、 <ph id="ph1">&lt;xref:System.Xaml.XamlReader.ReadSubtree%2A&gt;</ph>、返された、<ph id="ph2">&lt;xref:System.Xaml.XamlReader&gt;</ph>インスタンス。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlReader">
          <source>In the default implementation, the <ph id="ph1">&lt;xref:System.Xaml.XamlReader&gt;</ph> that is returned by this API is an internal class.</source>
          <target state="translated">既定の実装で、<ph id="ph1">&lt;xref:System.Xaml.XamlReader&gt;</ph>は内部クラスは、この API によって返されます。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlReader">
          <source>The <ph id="ph1">&lt;xref:System.Xaml.XamlReader&gt;</ph> obtained for subtree reading has valid actions for APIs such as <ph id="ph2">&lt;xref:System.Xaml.XamlReader.Read%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Xaml.XamlReader.NodeType%2A&gt;</ph>, and those actions are based on the parent reader class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlReader&gt;</ph>サブツリーの閲覧には、Api の有効なアクションなどを取得した<ph id="ph2">&lt;xref:System.Xaml.XamlReader.Read%2A&gt;</ph>と<ph id="ph3">&lt;xref:System.Xaml.XamlReader.NodeType%2A&gt;</ph>、それらのアクションが親リーダー クラスに基づいています。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlReader">
          <source>This design enables the internal class to track the frame level where the subtree was entered.</source>
          <target state="translated">この設計により、内部クラスのサブツリーが入力されたフレームのレベルを追跡するためになります。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlReader">
          <source>The acting subtree <ph id="ph1">&lt;xref:System.Xaml.XamlReader&gt;</ph> makes sure that if the current node position is moved beyond the bounds of the subtree, the specific subtree reader reports end-of-file or <ph id="ph2">`null`</ph> at the current node.</source>
          <target state="translated">機能を実行するサブツリー<ph id="ph1">&lt;xref:System.Xaml.XamlReader&gt;</ph>により、現在のノードの位置は、サブツリーの境界外に移動する場合は、特定のサブツリー リーダー ファイルの終端と報告されることを確認または<ph id="ph2">`null`</ph>現在のノードにします。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlReader">
          <source>Notes about subtree reader usage are included on certain <ph id="ph1">&lt;xref:System.Xaml.XamlReader&gt;</ph> APIs.</source>
          <target state="translated">特定のサブツリー リーダーの使用状況に関する注意事項が含まれている<ph id="ph1">&lt;xref:System.Xaml.XamlReader&gt;</ph>Api です。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlReader.#ctor">
          <source>Initializes the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlReader" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xaml.XamlReader" /&gt;</ph> クラスを初期化します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlReader.Close">
          <source>Closes the XAML node stream.</source>
          <target state="translated">XAML ノード ストリームを閉じます。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlReader.Close">
          <source>In the base implementation, calling <ph id="ph1">&lt;xref:System.Xaml.XamlReader.Close%2A&gt;</ph> calls <ph id="ph2">&lt;xref:System.Xaml.XamlReader.Dispose%2A&gt;</ph> with the <ph id="ph3">`isDisposing`</ph> parameter as <ph id="ph4">`true`</ph>.</source>
          <target state="translated">基底クラスの実装を呼び出す<ph id="ph1">&lt;xref:System.Xaml.XamlReader.Close%2A&gt;</ph>呼び出し<ph id="ph2">&lt;xref:System.Xaml.XamlReader.Dispose%2A&gt;</ph>で、<ph id="ph3">`isDisposing`</ph>パラメーターとして<ph id="ph4">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlReader.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release the managed resources; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">マネージ リソースを解放するには <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlReader.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlReader" /&gt;</ph>, and optionally, releases the managed resources.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xaml.XamlReader" /&gt;</ph> によって使用されているアンマネージ リソースを解放し、オプションでマネージ リソースも解放します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlReader.Dispose(System.Boolean)">
          <source>You must call the base class to get <ph id="ph1">&lt;xref:System.Xaml.XamlReader.IsDisposed%2A&gt;</ph><ph id="ph2"> = </ph><ph id="ph3">`true`</ph>.</source>
          <target state="translated">取得する基本クラスを呼び出す必要があります<ph id="ph1">&lt;xref:System.Xaml.XamlReader.IsDisposed%2A&gt;</ph> <ph id="ph2"> = </ph><ph id="ph3">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlReader.IsDisposed">
          <source>Gets whether <ph id="ph1">&lt;see cref="M:System.Xaml.XamlReader.Dispose(System.Boolean)" /&gt;</ph> has been called.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Xaml.XamlReader.Dispose(System.Boolean)" /&gt;</ph> が呼び出されているかどうかを取得します。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlReader.IsDisposed">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;see cref="M:System.Xaml.XamlReader.Dispose(System.Boolean)" /&gt;</ph> has been called; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="M:System.Xaml.XamlReader.Dispose(System.Boolean)" /&gt;</ph> が呼び出されている場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlReader.IsEof">
          <source>When implemented in a derived class, gets a value that reports whether the reader position is at end-of-file.</source>
          <target state="translated">派生クラスで実装されている場合に、リーダーがファイルの末尾に配置されているかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlReader.IsEof">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the position is at the conceptual end-of-file of the XAML node stream; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">XAML ノード ストリームのファイルの概念上の末尾に配置されている場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlReader.IsEof">
          <source>Subtree readers can call <ph id="ph1">&lt;xref:System.Xaml.XamlReader.IsEof%2A&gt;</ph>, with behavior that correctly reflects the bounds of the entered subtree.</source>
          <target state="translated">サブツリーのリーダーを呼び出すことができます<ph id="ph1">&lt;xref:System.Xaml.XamlReader.IsEof%2A&gt;</ph>、入力されたサブツリーの境界を正しく反映して動作します。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlReader.IsEof">
          <source>For more information, see the "Subtree Readers" section in <ph id="ph1">&lt;xref:System.Xaml.XamlReader&gt;</ph>, or see <ph id="ph2">&lt;xref:System.Xaml.XamlReader.ReadSubtree%2A&gt;</ph>.</source>
          <target state="translated">詳細についてを参照してください「サブツリー リーダー」<ph id="ph1">&lt;xref:System.Xaml.XamlReader&gt;</ph>を参照してくださいまたは<ph id="ph2">&lt;xref:System.Xaml.XamlReader.ReadSubtree%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlReader.Member">
          <source>When implemented in a derived class, gets the current member at the reader position, if the reader position is on a <ph id="ph1">&lt;see cref="F:System.Xaml.XamlNodeType.StartMember" /&gt;</ph>.</source>
          <target state="translated">派生クラスで実装されており、リーダーが <ph id="ph1">&lt;see cref="F:System.Xaml.XamlNodeType.StartMember" /&gt;</ph> 上に配置されている場合は、リーダーが現在配置されているメンバーを取得します。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlReader.Member">
          <source>The current member; or <ph id="ph1">&lt;see langword="null" /&gt;</ph>, if the reader position is not on a member.</source>
          <target state="translated">現在のメンバー。リーダーがメンバー上に配置されていない場合は <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlReader.Member">
          <source>Subtree readers can call <ph id="ph1">&lt;xref:System.Xaml.XamlReader.Member%2A&gt;</ph>, with behavior restrictions.</source>
          <target state="translated">サブツリーのリーダーを呼び出すことができます<ph id="ph1">&lt;xref:System.Xaml.XamlReader.Member%2A&gt;</ph>動作の制限があります。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlReader.Member">
          <source>For more information, see the "Subtree Readers" section in <ph id="ph1">&lt;xref:System.Xaml.XamlReader&gt;</ph>, or see <ph id="ph2">&lt;xref:System.Xaml.XamlReader.ReadSubtree%2A&gt;</ph>.</source>
          <target state="translated">詳細についてを参照してください「サブツリー リーダー」<ph id="ph1">&lt;xref:System.Xaml.XamlReader&gt;</ph>を参照してくださいまたは<ph id="ph2">&lt;xref:System.Xaml.XamlReader.ReadSubtree%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlReader.Namespace">
          <source>When implemented in a derived class, gets the XAML namespace information from the current node.</source>
          <target state="translated">派生クラスで実装されている場合に、現在のノードから XAML 名前空間情報を取得します。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlReader.Namespace">
          <source>The XAML namespace information, if it is available; otherwise, <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">XAML 名前空間情報 (使用可能な場合)。それ以外の場合は <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlReader.Namespace">
          <source>The intended design of this API is to return a non-null result only if the <ph id="ph1">&lt;xref:System.Xaml.XamlReader.NodeType%2A&gt;</ph> of the current node is <ph id="ph2">&lt;xref:System.Xaml.XamlNodeType.NamespaceDeclaration&gt;</ph>.</source>
          <target state="translated">この API の設計が null 以外の結果の場合にのみを返すには、<ph id="ph1">&lt;xref:System.Xaml.XamlReader.NodeType%2A&gt;</ph>は、現在のノードの<ph id="ph2">&lt;xref:System.Xaml.XamlNodeType.NamespaceDeclaration&gt;</ph>します。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlReader.Namespace">
          <source>The property does not report the XAML namespace that applies to objects or members in a general scoping sense, as interpreted under a XAML schema context.</source>
          <target state="translated">プロパティでは、XAML スキーマ コンテキストで解釈されるよう、オブジェクトまたは一般的なスコープの意味、メンバーに適用される XAML 名前空間は報告されません。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlReader.Namespace">
          <source>Your application must provide a means to cache information for the acting XAML namespace as it traverses XAML nodes, if you need that information in a manner other than how the XAML schema context reports it to a writer.</source>
          <target state="translated">アプリケーションが機能しているの情報をキャッシュするための手段を提供する必要がありますのでの XAML 名前空間は、方法、XAML スキーマ コンテキストにレポートをそのライター以外の方法では、その情報が必要な場合、XAML ノードを通過する時間します。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlReader.Namespace">
          <source>See <ph id="ph1">&lt;xref:System.Xaml.XamlXmlReader.Namespace%2A&gt;</ph> for notes on the reference implementation.</source>
          <target state="translated">参照してください<ph id="ph1">&lt;xref:System.Xaml.XamlXmlReader.Namespace%2A&gt;</ph>参照の実装に関する注意事項にします。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlReader.NodeType">
          <source>When implemented in a derived class, gets the type of the current node.</source>
          <target state="translated">派生クラスで実装された場合、現在のノードの型を取得します。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlReader.NodeType">
          <source>A value of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlNodeType" /&gt;</ph> enumeration.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xaml.XamlNodeType" /&gt;</ph> 列挙体の値。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlReader.NodeType">
          <source>Subtree readers can call <ph id="ph1">&lt;xref:System.Xaml.XamlReader.NodeType%2A&gt;</ph>, with behavior restrictions.</source>
          <target state="translated">サブツリーのリーダーを呼び出すことができます<ph id="ph1">&lt;xref:System.Xaml.XamlReader.NodeType%2A&gt;</ph>動作の制限があります。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlReader.NodeType">
          <source>For more information, see the "Subtree Readers" section in <ph id="ph1">&lt;xref:System.Xaml.XamlReader&gt;</ph>, or see <ph id="ph2">&lt;xref:System.Xaml.XamlReader.ReadSubtree%2A&gt;</ph>.</source>
          <target state="translated">詳細についてを参照してください「サブツリー リーダー」<ph id="ph1">&lt;xref:System.Xaml.XamlReader&gt;</ph>を参照してくださいまたは<ph id="ph2">&lt;xref:System.Xaml.XamlReader.ReadSubtree%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlReader.Read">
          <source>When implemented in a derived class, provides the next XAML node from the source, if a node is available.</source>
          <target state="translated">派生クラスで実装された場合、処理対象から次の XAML ノードを読み取ります (ノードがある場合)。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlReader.Read">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a node is available; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">ノードがある場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlReader.Read">
          <source>Subtree readers can call <ph id="ph1">&lt;xref:System.Xaml.XamlReader.Read%2A&gt;</ph>, with behavior restrictions.</source>
          <target state="translated">サブツリーのリーダーを呼び出すことができます<ph id="ph1">&lt;xref:System.Xaml.XamlReader.Read%2A&gt;</ph>動作の制限があります。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlReader.Read">
          <source>For more information, see the "Subtree Readers" section in <ph id="ph1">&lt;xref:System.Xaml.XamlReader&gt;</ph>, or see <ph id="ph2">&lt;xref:System.Xaml.XamlReader.ReadSubtree%2A&gt;</ph>.</source>
          <target state="translated">詳細についてを参照してください「サブツリー リーダー」<ph id="ph1">&lt;xref:System.Xaml.XamlReader&gt;</ph>を参照してくださいまたは<ph id="ph2">&lt;xref:System.Xaml.XamlReader.ReadSubtree%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlReader.ReadSubtree">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Xaml.XamlReader" /&gt;</ph> that is based on the current <ph id="ph2">&lt;see cref="T:System.Xaml.XamlReader" /&gt;</ph>, where the returned <ph id="ph3">&lt;see cref="T:System.Xaml.XamlReader" /&gt;</ph> is used to iterate through a subtree of the XAML node structure.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.Xaml.XamlReader" /&gt;</ph> に基づく <ph id="ph2">&lt;see cref="T:System.Xaml.XamlReader" /&gt;</ph> を返します。返された <ph id="ph3">&lt;see cref="T:System.Xaml.XamlReader" /&gt;</ph> は、XAML ノード構造のサブツリーでの反復処理に使用されます。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlReader.ReadSubtree">
          <source>A new XAML reader instance for the subtree.</source>
          <target state="translated">サブツリーの新しい XAML リーダー インスタンス。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlReader.ReadSubtree">
          <source>This method has a default implementation and returns a valid <ph id="ph1">&lt;xref:System.Xaml.XamlReader&gt;</ph>.</source>
          <target state="translated">このメソッドを持ち、既定の実装を返す有効な<ph id="ph1">&lt;xref:System.Xaml.XamlReader&gt;</ph>します。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlReader.ReadSubtree">
          <source>The returned <ph id="ph1">&lt;xref:System.Xaml.XamlReader&gt;</ph> is an internal class that restricts certain <ph id="ph2">&lt;xref:System.Xaml.XamlReader&gt;</ph> actions.</source>
          <target state="translated">返された<ph id="ph1">&lt;xref:System.Xaml.XamlReader&gt;</ph>特定を制限する内部クラスは、<ph id="ph2">&lt;xref:System.Xaml.XamlReader&gt;</ph>アクション。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlReader.ReadSubtree">
          <source>The restrictions are consistent with the purpose of reading only a dimensioned subtree of a larger source for a XAML node set, and of returning end-of-file or <ph id="ph1">`null`</ph> at the current node when the subtree is exited.</source>
          <target state="translated">制限は次元設定されたサブツリーの XAML ノード セットは、大規模ソースとファイルの終端を返すだけに読み取り目的に設定された一貫性のあるまたは<ph id="ph1">`null`</ph>サブツリーが終了したときに、現在のノードにします。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlReader.ReadSubtree">
          <source>Generally, you should check the current node from the initial <ph id="ph1">&lt;xref:System.Xaml.XamlReader.Read%2A&gt;</ph> to determine whether you need a subtree reader.</source>
          <target state="translated">一般に、最初から現在のノードを確認する必要があります<ph id="ph1">&lt;xref:System.Xaml.XamlReader.Read%2A&gt;</ph>サブツリー リーダーが必要かどうかを判断します。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlReader.ReadSubtree">
          <source>How you check this may be implementation-specific; however, avoid creating multiple subtree readers for every subtree.</source>
          <target state="translated">これをチェックする方法があります実装に固有です。ただし、すべてのサブツリーの複数のサブツリー リーダーを作成しないでください。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlReader.ReadSubtree">
          <source>In addition, avoid invoking a subtree reader for certain node cases (for example, for <ph id="ph1">&lt;xref:System.Xaml.XamlNodeType.NamespaceDeclaration&gt;</ph>) that cannot contain a subtree of nodes.</source>
          <target state="translated">さらに、特定のノードのケースのサブツリー リーダーの呼び出しを回避する (たとえば、 <ph id="ph1">&lt;xref:System.Xaml.XamlNodeType.NamespaceDeclaration&gt;</ph>) ノードのサブツリーを含めることはできません。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlReader.ReadSubtree">
          <source>After you obtain a subtree reader, you must call <ph id="ph1">&lt;xref:System.Xaml.XamlReader.Read%2A&gt;</ph> on it to obtain a current node (or call <ph id="ph2">&lt;xref:System.Xaml.XamlReader.Skip%2A&gt;</ph> to obtain a next node).</source>
          <target state="translated">サブツリー リーダーを取得した後に呼び出す必要があります<ph id="ph1">&lt;xref:System.Xaml.XamlReader.Read%2A&gt;</ph>を現在のノードを取得することで (または呼び出す<ph id="ph2">&lt;xref:System.Xaml.XamlReader.Skip%2A&gt;</ph>を次のノードを取得する)。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlReader.ReadSubtree">
          <source>You do not automatically obtain an initial node position from the subtree reader when you create it.</source>
          <target state="translated">自動的に取得しない初期ノード位置サブツリー リーダーから作成するときにします。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlReader.ReadSubtree">
          <source>The reader you obtain by calling <ph id="ph1">&lt;xref:System.Xaml.XamlReader.ReadSubtree%2A&gt;</ph> from this default implementation is an internal class.</source>
          <target state="translated">呼び出して取得するリーダー<ph id="ph1">&lt;xref:System.Xaml.XamlReader.ReadSubtree%2A&gt;</ph>この既定の実装は、内部クラス。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlReader.ReadSubtree">
          <source>The internal class bases its behavior on the <ph id="ph1">&lt;xref:System.Xaml.XamlReader&gt;</ph> implementation that is being used when <ph id="ph2">&lt;xref:System.Xaml.XamlReader.ReadSubtree%2A&gt;</ph> is called.</source>
          <target state="translated">内部クラスに基づいて、その動作、<ph id="ph1">&lt;xref:System.Xaml.XamlReader&gt;</ph>実装されている場合に使用<ph id="ph2">&lt;xref:System.Xaml.XamlReader.ReadSubtree%2A&gt;</ph>と呼びます。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlReader.ReadSubtree">
          <source>The purpose of the internal class is to wrap the <ph id="ph1">&lt;xref:System.Xaml.XamlReader.Read%2A&gt;</ph> and general traversal behavior.</source>
          <target state="translated">内部クラスの目的は、ラップする、<ph id="ph1">&lt;xref:System.Xaml.XamlReader.Read%2A&gt;</ph>と一般的な走査の各動作します。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlReader.ReadSubtree">
          <source>The traversal stays within the intended subtree by keeping track of <ph id="ph1">&lt;xref:System.Xaml.XamlNodeType.StartMember&gt;</ph><ph id="ph2">/</ph><ph id="ph3">&lt;xref:System.Xaml.XamlNodeType.EndMember&gt;</ph> pairs or <ph id="ph4">&lt;xref:System.Xaml.XamlNodeType.StartObject&gt;</ph><ph id="ph5">/</ph><ph id="ph6">&lt;xref:System.Xaml.XamlNodeType.EndObject&gt;</ph> pairs.</source>
          <target state="translated">走査まま、目的のサブツリー内で追跡することにより<ph id="ph1">&lt;xref:System.Xaml.XamlNodeType.StartMember&gt;</ph> <ph id="ph2">/</ph> <ph id="ph3">&lt;xref:System.Xaml.XamlNodeType.EndMember&gt;</ph>ペアまたは<ph id="ph4">&lt;xref:System.Xaml.XamlNodeType.StartObject&gt;</ph> <ph id="ph5">/</ph> <ph id="ph6">&lt;xref:System.Xaml.XamlNodeType.EndObject&gt;</ph>ペア。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlReader.ReadSubtree">
          <source>It also correctly returns <ph id="ph1">`false`</ph> for <ph id="ph2">&lt;xref:System.Xaml.XamlReader.Read%2A&gt;</ph> and <ph id="ph3">`true`</ph> for <ph id="ph4">&lt;xref:System.Xaml.XamlReader.IsEof%2A&gt;</ph> when the reader is at the end of the subtree, as defined by its entry point.</source>
          <target state="translated">正しく返す<ph id="ph1">`false`</ph>の<ph id="ph2">&lt;xref:System.Xaml.XamlReader.Read%2A&gt;</ph>と<ph id="ph3">`true`</ph>の<ph id="ph4">&lt;xref:System.Xaml.XamlReader.IsEof%2A&gt;</ph>ときにリーダーが配置されて、サブツリーの最後のエントリ ポイントで定義されています。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlReader.ReadSubtree">
          <source>In general, you assume that any <ph id="ph1">&lt;xref:System.Xaml.XamlReader&gt;</ph> API you call from a subtree reader has the same implementation as the overall <ph id="ph2">&lt;xref:System.Xaml.XamlReader&gt;</ph> except for the traversal bounding behavior.</source>
          <target state="translated">一般に、想定すること、 <ph id="ph1">&lt;xref:System.Xaml.XamlReader&gt;</ph> API サブツリー リーダーから呼び出しが、全体的なと同じ実装<ph id="ph2">&lt;xref:System.Xaml.XamlReader&gt;</ph>動作を境界の検査を除く。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlReader.ReadSubtree">
          <source>However, <ph id="ph1">&lt;xref:System.Xaml.XamlReader.ReadSubtree%2A&gt;</ph> is virtual.</source>
          <target state="translated">ただし、<ph id="ph1">&lt;xref:System.Xaml.XamlReader.ReadSubtree%2A&gt;</ph>は仮想です。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlReader.ReadSubtree">
          <source>Therefore, a specific <ph id="ph1">&lt;xref:System.Xaml.XamlReader&gt;</ph> implementation can provide behavior that differs from the <ph id="ph2">&lt;xref:System.Xaml.XamlReader&gt;</ph> internal wrapper behavior; and a <ph id="ph3">&lt;xref:System.Xaml.XamlReader&gt;</ph> implementation can even disable subtree reader functionality by returning <ph id="ph4">&lt;xref:System.NotImplementedException&gt;</ph> or other exceptions.</source>
          <target state="translated">したがって、特定<ph id="ph1">&lt;xref:System.Xaml.XamlReader&gt;</ph>実装とは異なる動作を提供できます、<ph id="ph2">&lt;xref:System.Xaml.XamlReader&gt;</ph>内部ラッパーの動作と<ph id="ph3">&lt;xref:System.Xaml.XamlReader&gt;</ph>実装でもを無効にできますサブツリー リーダー機能を返すことによって<ph id="ph4">&lt;xref:System.NotImplementedException&gt;</ph>またはその他の例外。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlReader.SchemaContext">
          <source>When implemented in a derived class, gets an object that provides XAML schema context information for the information set.</source>
          <target state="translated">派生クラスで実装されている場合に、情報セットに XAML スキーマ コンテキスト情報を提供するオブジェクトを取得します。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlReader.SchemaContext">
          <source>An object that provides XAML schema context information for the information set.</source>
          <target state="translated">情報セットに XAML スキーマ コンテキスト情報を提供するオブジェクト。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlReader.Skip">
          <source>Skips the current node and advances the reader position to the next node.</source>
          <target state="translated">現在のノードをスキップして、リーダーの位置を次のノードに進めます。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlReader.Skip">
          <source>Once skipped, <ph id="ph1">&lt;xref:System.Xaml.XamlReader.Read%2A&gt;</ph> is called by the default <ph id="ph2">&lt;xref:System.Xaml.XamlReader.Skip%2A&gt;</ph> implementation.</source>
          <target state="translated">1 回スキップ、 <ph id="ph1">&lt;xref:System.Xaml.XamlReader.Read%2A&gt;</ph> 、既定により呼び出されます<ph id="ph2">&lt;xref:System.Xaml.XamlReader.Skip%2A&gt;</ph>実装します。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlReader.Skip">
          <source>You typically do not call <ph id="ph1">&lt;xref:System.Xaml.XamlReader.Skip%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Xaml.XamlReader.Read%2A&gt;</ph> in sequence.</source>
          <target state="translated">通常呼び出さない<ph id="ph1">&lt;xref:System.Xaml.XamlReader.Skip%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Xaml.XamlReader.Read%2A&gt;</ph>順番です。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlReader.Skip">
          <source>In the default <ph id="ph1">&lt;xref:System.Xaml.XamlReader.Skip%2A&gt;</ph> implementation, different actions are taken depending on which <ph id="ph2">&lt;xref:System.Xaml.XamlReader.NodeType%2A&gt;</ph> the reader position is currently on.</source>
          <target state="translated">既定値で<ph id="ph1">&lt;xref:System.Xaml.XamlReader.Skip%2A&gt;</ph>実装では、さまざまなアクションが実行されますに応じて<ph id="ph2">&lt;xref:System.Xaml.XamlReader.NodeType%2A&gt;</ph>リーダーの位置が現在オン。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlReader.Skip">
          <source>If the reader position is currently on a <ph id="ph1">&lt;xref:System.Xaml.XamlNodeType.StartMember&gt;</ph> or <ph id="ph2">&lt;xref:System.Xaml.XamlNodeType.StartObject&gt;</ph>, that member or object is skipped.</source>
          <target state="translated">リーダーの位置が現在オンの場合、<ph id="ph1">&lt;xref:System.Xaml.XamlNodeType.StartMember&gt;</ph>または<ph id="ph2">&lt;xref:System.Xaml.XamlNodeType.StartObject&gt;</ph>、そのメンバーまたはオブジェクトはスキップされます。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlReader.Skip">
          <source>For other <ph id="ph1">&lt;xref:System.Xaml.XamlReader.NodeType%2A&gt;</ph> values, no action is taken other than calling <ph id="ph2">&lt;xref:System.Xaml.XamlReader.Read%2A&gt;</ph> from the current position.</source>
          <target state="translated">その他の<ph id="ph1">&lt;xref:System.Xaml.XamlReader.NodeType%2A&gt;</ph>値、何も処理呼び出し以外<ph id="ph2">&lt;xref:System.Xaml.XamlReader.Read%2A&gt;</ph>現在の位置から。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlReader.Skip">
          <source>Subtree readers can call <ph id="ph1">&lt;xref:System.Xaml.XamlReader.Skip%2A&gt;</ph>, with behavior restrictions.</source>
          <target state="translated">サブツリーのリーダーを呼び出すことができます<ph id="ph1">&lt;xref:System.Xaml.XamlReader.Skip%2A&gt;</ph>動作の制限があります。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlReader.Skip">
          <source>For more information, see the "Subtree Readers" section in <ph id="ph1">&lt;xref:System.Xaml.XamlReader&gt;</ph>, or see <ph id="ph2">&lt;xref:System.Xaml.XamlReader.ReadSubtree%2A&gt;</ph>.</source>
          <target state="translated">詳細についてを参照してください「サブツリー リーダー」<ph id="ph1">&lt;xref:System.Xaml.XamlReader&gt;</ph>を参照してくださいまたは<ph id="ph2">&lt;xref:System.Xaml.XamlReader.ReadSubtree%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlReader.Skip">
          <source>The node tree behavior of <ph id="ph1">&lt;xref:System.Xaml.XamlReader.Skip%2A?displayProperty=nameWithType&gt;</ph> is based on the XML equivalent <ph id="ph2">&lt;xref:System.Xml.XmlReader.Skip%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">ノード ツリー動作<ph id="ph1">&lt;xref:System.Xaml.XamlReader.Skip%2A?displayProperty=nameWithType&gt;</ph>は同等の XML に基づいて<ph id="ph2">&lt;xref:System.Xml.XmlReader.Skip%2A?displayProperty=nameWithType&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlReader.Skip">
          <source>Based on the <ph id="ph1">&lt;xref:System.Xml.XmlReader.Skip%2A?displayProperty=nameWithType&gt;</ph> behavior equivalence, <ph id="ph2">&lt;xref:System.Xaml.XamlReader.Skip%2A?displayProperty=nameWithType&gt;</ph> skips the node and its subtree, not just the single entry node.</source>
          <target state="translated">に基づいて、<ph id="ph1">&lt;xref:System.Xml.XmlReader.Skip%2A?displayProperty=nameWithType&gt;</ph>動作等価<ph id="ph2">&lt;xref:System.Xaml.XamlReader.Skip%2A?displayProperty=nameWithType&gt;</ph>ノードとそのサブツリーでは、1 つのエントリのノードだけでなくをスキップします。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlReader.System#IDisposable#Dispose">
          <source>Releases all resources used by the current instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlReader" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xaml.XamlReader" /&gt;</ph> クラスの現在のインスタンスによって使用されているすべてのリソースを解放します。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlReader.Type">
          <source>When implemented in a derived class, gets the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> of the current node.</source>
          <target state="translated">派生クラスで実装されている場合に、現在のノードの <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> を取得します。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlReader.Type">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> of the current node; or <ph id="ph2">&lt;see langword="null" /&gt;</ph>, if the current reader position is not on an object.</source>
          <target state="translated">現在のノードの <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>。現在のリーダーの位置がオブジェクト上にない場合は <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlReader.Type">
          <source>Subtree readers can call <ph id="ph1">&lt;xref:System.Xaml.XamlReader.Type%2A&gt;</ph>, with behavior restrictions.</source>
          <target state="translated">サブツリーのリーダーを呼び出すことができます<ph id="ph1">&lt;xref:System.Xaml.XamlReader.Type%2A&gt;</ph>動作の制限があります。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlReader.Type">
          <source>For more information, see the "Subtree Readers" section in <ph id="ph1">&lt;xref:System.Xaml.XamlReader&gt;</ph>, or see <ph id="ph2">&lt;xref:System.Xaml.XamlReader.ReadSubtree%2A&gt;</ph>.</source>
          <target state="translated">詳細についてを参照してください「サブツリー リーダー」<ph id="ph1">&lt;xref:System.Xaml.XamlReader&gt;</ph>を参照してくださいまたは<ph id="ph2">&lt;xref:System.Xaml.XamlReader.ReadSubtree%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlReader.Value">
          <source>When implemented in a derived class, gets the value of the current node.</source>
          <target state="translated">派生クラスで実装された場合、現在のノードの値を取得します。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlReader.Value">
          <source>The value of the current node; or <ph id="ph1">&lt;see langword="null" /&gt;</ph>, if the current reader position is not on a <ph id="ph2">&lt;see cref="F:System.Xaml.XamlNodeType.Value" /&gt;</ph> node type.</source>
          <target state="translated">現在のノードの値。現在のリーダーの位置が <ph id="ph2">&lt;see cref="F:System.Xaml.XamlNodeType.Value" /&gt;</ph> ノード型にない場合は <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>