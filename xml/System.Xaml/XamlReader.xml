<Type Name="XamlReader" FullName="System.Xaml.XamlReader">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b2c5d677ab741eb848cf99fa1f0d969968ff9639" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class XamlReader : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit XamlReader extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlReader" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class XamlReader&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlReader abstract : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="25905-101">XAML 入力を処理して XAML ノード ストリームを生成するクラスの基本定義を提供します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="25905-101">Provides base definitions for classes that consume XAML input and produce XAML node streams.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25905-102"><xref:System.Xaml.XamlReader> 抽象クラスは、実装や作業結果があるすべてのメンバーの定義を提供しません。</span><span class="sxs-lookup"><span data-stu-id="25905-102"><xref:System.Xaml.XamlReader> is an abstract class and does not provide implementations or definitions that have a working result for all members.</span></span> <span data-ttu-id="25905-103">メンバーの実装が<xref:System.Xaml.XamlReader>はそのメンバーの「解説」に記載されています。</span><span class="sxs-lookup"><span data-stu-id="25905-103">Members that do have an implementation in <xref:System.Xaml.XamlReader> are noted in the remarks for that member.</span></span> <span data-ttu-id="25905-104">具体的には、<xref:System.Xaml.XamlReader>いくつかの抽象メンバーを実装する必要がある、いくつかの仮想メンバーです。</span><span class="sxs-lookup"><span data-stu-id="25905-104">Specifically, <xref:System.Xaml.XamlReader> has several abstract members that must be implemented, and several virtual members.</span></span>  
  
 <span data-ttu-id="25905-105">仮想メンバーの<xref:System.Xaml.XamlReader.ReadSubtree%2A>と<xref:System.Xaml.XamlReader.Skip%2A>各ほとんどの場合に適切な既定の実装を提供します。</span><span class="sxs-lookup"><span data-stu-id="25905-105">Of the virtual members, <xref:System.Xaml.XamlReader.ReadSubtree%2A> and <xref:System.Xaml.XamlReader.Skip%2A> each provide a default implementation that is appropriate for most cases.</span></span> <span data-ttu-id="25905-106">ただし、<xref:System.Xaml.XamlReader.ReadSubtree%2A>と<xref:System.Xaml.XamlReader.Skip%2A>実装の XAML リーダーの他の予期される動作に依存して既定の実装です。 具体的には、依存している、<xref:System.Xaml.XamlReader.Read%2A>をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="25905-106">However, the <xref:System.Xaml.XamlReader.ReadSubtree%2A> and <xref:System.Xaml.XamlReader.Skip%2A> default implementations rely on other expected behavior of the implementing XAML reader; in particular, they rely on the <xref:System.Xaml.XamlReader.Read%2A> override.</span></span> <span data-ttu-id="25905-107"><xref:System.Xaml.XamlReader.Dispose%2A> 作業用の既定の実装を持つ仮想メンバーです。</span><span class="sxs-lookup"><span data-stu-id="25905-107"><xref:System.Xaml.XamlReader.Dispose%2A> is also a virtual member that has a working default implementation.</span></span>  
  
 <span data-ttu-id="25905-108">次の 2 つのクラスは、.NET Framework XAML サービスと System.Xaml アセンブリに最も関連するかつ実用的な派生クラスです。</span><span class="sxs-lookup"><span data-stu-id="25905-108">The following two classes are the most relevant and practical derived classes in .NET Framework XAML Services and the System.Xaml assembly:</span></span>  
  
-   <span data-ttu-id="25905-109"><xref:System.Xaml.XamlObjectReader>、実行時にアプリケーションのアクティブなオブジェクト グラフなど、オブジェクト グラフを読み取ります。</span><span class="sxs-lookup"><span data-stu-id="25905-109"><xref:System.Xaml.XamlObjectReader>, which reads an object graph, such as the active object graph of an application at run time.</span></span>  
  
-   <span data-ttu-id="25905-110"><xref:System.Xaml.XamlXmlReader>、、[全般] を使用して XML テキスト ファイルの形式で XAML を読み取ります<xref:System.Xml.XmlReader>中間ヘルパー クラスとしてファイルを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="25905-110"><xref:System.Xaml.XamlXmlReader>, which reads XAML in the form of a XML text file by using a general <xref:System.Xml.XmlReader> that loads the file as an intermediary helper class.</span></span>  
  
 <span data-ttu-id="25905-111">その他のフレームワークから他の XAML リーダーは、<xref:System.Windows.Baml2006.Baml2006Reader>と<xref:System.Activities.Debugger.XamlDebuggerXmlReader>です。</span><span class="sxs-lookup"><span data-stu-id="25905-111">Other XAML readers from other frameworks include <xref:System.Windows.Baml2006.Baml2006Reader> and <xref:System.Activities.Debugger.XamlDebuggerXmlReader>.</span></span>  
  
 <span data-ttu-id="25905-112"><xref:System.Xaml.XamlReader> 異なります[!INCLUDE[TLA#tla_xmldom](~/includes/tlasharptla-xmldom-md.md)]と<xref:System.Xml.XmlReader>ためにのデザイン原則<xref:System.Xaml.XamlReader>はありません、`Create`を基になる既定の XAML リーダーの実装を返すメソッド。</span><span class="sxs-lookup"><span data-stu-id="25905-112"><xref:System.Xaml.XamlReader> differs from [!INCLUDE[TLA#tla_xmldom](~/includes/tlasharptla-xmldom-md.md)] and <xref:System.Xml.XmlReader> design principles because <xref:System.Xaml.XamlReader> does not have a `Create` method to return underlying default XAML reader implementations.</span></span> <span data-ttu-id="25905-113">代わりに、そのコンス トラクターまたはその他のクラスに固有のヘルパー Api を呼び出すことによって派生の特定の XAML リーダー クラスをインスタンス化する必要があります。</span><span class="sxs-lookup"><span data-stu-id="25905-113">You must instead instantiate specific derived XAML reader classes by calling their constructors or other class-specific helper APIs.</span></span>  
  
## <a name="subtree-readers"></a><span data-ttu-id="25905-114">サブツリー リーダー</span><span class="sxs-lookup"><span data-stu-id="25905-114">Subtree Readers</span></span>  
 <span data-ttu-id="25905-115">ほとんどの場合を呼び出す<xref:System.Xaml.XamlReader>から派生する特定の XAML リーダー クラスのコンテキストで API<xref:System.Xaml.XamlReader>です。</span><span class="sxs-lookup"><span data-stu-id="25905-115">For the most part, you call <xref:System.Xaml.XamlReader> API in the context of specific XAML reader classes that derive from <xref:System.Xaml.XamlReader>.</span></span> <span data-ttu-id="25905-116">ただし、特定の 1 つのケースではアクセス<xref:System.Xaml.XamlReader>とパブリックでない派生ではない実用的な XAML リーダー インスタンスの API<xref:System.Xaml.XamlObjectReader>または<xref:System.Xaml.XamlXmlReader>です。</span><span class="sxs-lookup"><span data-stu-id="25905-116">However, in one particular case, you access <xref:System.Xaml.XamlReader> API on a practical XAML reader instance that is not public and not derived from <xref:System.Xaml.XamlObjectReader> or <xref:System.Xaml.XamlXmlReader>.</span></span> <span data-ttu-id="25905-117">この例を呼び出すときは、 <xref:System.Xaml.XamlReader.ReadSubtree%2A>、返された、<xref:System.Xaml.XamlReader>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="25905-117">This case is when you call <xref:System.Xaml.XamlReader.ReadSubtree%2A>, which returns a <xref:System.Xaml.XamlReader> instance.</span></span> <span data-ttu-id="25905-118">既定の実装で、<xref:System.Xaml.XamlReader>は内部クラスは、この API によって返されます。</span><span class="sxs-lookup"><span data-stu-id="25905-118">In the default implementation, the <xref:System.Xaml.XamlReader> that is returned by this API is an internal class.</span></span>  
  
 <span data-ttu-id="25905-119"><xref:System.Xaml.XamlReader>サブツリーの閲覧には、Api の有効なアクションなどを取得した<xref:System.Xaml.XamlReader.Read%2A>と<xref:System.Xaml.XamlReader.NodeType%2A>、それらのアクションが親リーダー クラスに基づいています。</span><span class="sxs-lookup"><span data-stu-id="25905-119">The <xref:System.Xaml.XamlReader> obtained for subtree reading has valid actions for APIs such as <xref:System.Xaml.XamlReader.Read%2A> and <xref:System.Xaml.XamlReader.NodeType%2A>, and those actions are based on the parent reader class.</span></span> <span data-ttu-id="25905-120">この設計により、内部クラスのサブツリーが入力されたフレームのレベルを追跡するためになります。</span><span class="sxs-lookup"><span data-stu-id="25905-120">This design enables the internal class to track the frame level where the subtree was entered.</span></span> <span data-ttu-id="25905-121">機能を実行するサブツリー<xref:System.Xaml.XamlReader>により、現在のノードの位置は、サブツリーの境界外に移動する場合は、特定のサブツリー リーダー ファイルの終端と報告されることを確認または`null`現在のノードにします。</span><span class="sxs-lookup"><span data-stu-id="25905-121">The acting subtree <xref:System.Xaml.XamlReader> makes sure that if the current node position is moved beyond the bounds of the subtree, the specific subtree reader reports end-of-file or `null` at the current node.</span></span>  
  
 <span data-ttu-id="25905-122">特定のサブツリー リーダーの使用状況に関する注意事項が含まれている<xref:System.Xaml.XamlReader>Api です。</span><span class="sxs-lookup"><span data-stu-id="25905-122">Notes about subtree reader usage are included on certain <xref:System.Xaml.XamlReader> APIs.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.XamlObjectReader" />
    <altmember cref="T:System.Xaml.XamlXmlReader" />
    <altmember cref="T:System.Xaml.XamlReaderSettings" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XamlReader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlReader.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XamlReader();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="25905-123">
            <see cref="T:System.Xaml.XamlReader" /> クラスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25905-123">Initializes the <see cref="T:System.Xaml.XamlReader" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="25905-124">XAML ノード ストリームを閉じます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25905-124">Closes the XAML node stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25905-125">基底クラスの実装を呼び出す<xref:System.Xaml.XamlReader.Close%2A>呼び出し<xref:System.Xaml.XamlReader.Dispose%2A>で、`isDisposing`パラメーターとして`true`です。</span><span class="sxs-lookup"><span data-stu-id="25905-125">In the base implementation, calling <xref:System.Xaml.XamlReader.Close%2A> calls <xref:System.Xaml.XamlReader.Dispose%2A> with the `isDisposing` parameter as `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlReader.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="25905-126">マネージ リソースを解放するには <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25905-126">
              <see langword="true" /> to release the managed resources; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25905-127">
            <see cref="T:System.Xaml.XamlReader" /> によって使用されているアンマネージ リソースを解放し、オプションでマネージ リソースも解放します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25905-127">Releases the unmanaged resources used by the <see cref="T:System.Xaml.XamlReader" />, and optionally, releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25905-128">取得する基本クラスを呼び出す必要があります<xref:System.Xaml.XamlReader.IsDisposed%2A>  = `true`です。</span><span class="sxs-lookup"><span data-stu-id="25905-128">You must call the base class to get <xref:System.Xaml.XamlReader.IsDisposed%2A> = `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDisposed">
      <MemberSignature Language="C#" Value="protected bool IsDisposed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDisposed" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlReader.IsDisposed" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsDisposed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsDisposed { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25905-129">
            <see cref="M:System.Xaml.XamlReader.Dispose(System.Boolean)" /> が呼び出されているかどうかを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25905-129">Gets whether <see cref="M:System.Xaml.XamlReader.Dispose(System.Boolean)" /> has been called.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="25905-130">
            <see cref="M:System.Xaml.XamlReader.Dispose(System.Boolean)" /> が呼び出されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25905-130">
              <see langword="true" /> if <see cref="M:System.Xaml.XamlReader.Dispose(System.Boolean)" /> has been called; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEof">
      <MemberSignature Language="C#" Value="public abstract bool IsEof { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEof" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlReader.IsEof" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsEof As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsEof { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25905-131">派生クラスで実装されている場合に、リーダーがファイルの末尾に配置されているかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25905-131">When implemented in a derived class, gets a value that reports whether the reader position is at end-of-file.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="25905-132">XAML ノード ストリームのファイルの概念上の末尾に配置されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25905-132">
              <see langword="true" /> if the position is at the conceptual end-of-file of the XAML node stream; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25905-133">サブツリーのリーダーを呼び出すことができます<xref:System.Xaml.XamlReader.IsEof%2A>、入力されたサブツリーの境界を正しく反映して動作します。</span><span class="sxs-lookup"><span data-stu-id="25905-133">Subtree readers can call <xref:System.Xaml.XamlReader.IsEof%2A>, with behavior that correctly reflects the bounds of the entered subtree.</span></span> <span data-ttu-id="25905-134">詳細についてを参照してください「サブツリー リーダー」<xref:System.Xaml.XamlReader>を参照してくださいまたは<xref:System.Xaml.XamlReader.ReadSubtree%2A>です。</span><span class="sxs-lookup"><span data-stu-id="25905-134">For more information, see the "Subtree Readers" section in <xref:System.Xaml.XamlReader>, or see <xref:System.Xaml.XamlReader.ReadSubtree%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlObjectReader.IsEof" />
        <altmember cref="P:System.Xaml.XamlXmlReader.IsEof" />
      </Docs>
    </Member>
    <Member MemberName="Member">
      <MemberSignature Language="C#" Value="public abstract System.Xaml.XamlMember Member { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlMember Member" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlReader.Member" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Member As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Xaml::XamlMember ^ Member { System::Xaml::XamlMember ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25905-135">派生クラスで実装されており、リーダーが <see cref="F:System.Xaml.XamlNodeType.StartMember" /> 上に配置されている場合は、リーダーが現在配置されているメンバーを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25905-135">When implemented in a derived class, gets the current member at the reader position, if the reader position is on a <see cref="F:System.Xaml.XamlNodeType.StartMember" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="25905-136">現在のメンバー。リーダーがメンバー上に配置されていない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25905-136">The current member; or <see langword="null" />, if the reader position is not on a member.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25905-137">サブツリーのリーダーを呼び出すことができます<xref:System.Xaml.XamlReader.Member%2A>動作の制限があります。</span><span class="sxs-lookup"><span data-stu-id="25905-137">Subtree readers can call <xref:System.Xaml.XamlReader.Member%2A>, with behavior restrictions.</span></span> <span data-ttu-id="25905-138">詳細についてを参照してください「サブツリー リーダー」<xref:System.Xaml.XamlReader>を参照してくださいまたは<xref:System.Xaml.XamlReader.ReadSubtree%2A>です。</span><span class="sxs-lookup"><span data-stu-id="25905-138">For more information, see the "Subtree Readers" section in <xref:System.Xaml.XamlReader>, or see <xref:System.Xaml.XamlReader.ReadSubtree%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlObjectReader.Member" />
        <altmember cref="P:System.Xaml.XamlXmlReader.Member" />
        <altmember cref="T:System.Xaml.XamlMember" />
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public abstract System.Xaml.NamespaceDeclaration Namespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.NamespaceDeclaration Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlReader.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Namespace As NamespaceDeclaration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Xaml::NamespaceDeclaration ^ Namespace { System::Xaml::NamespaceDeclaration ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.NamespaceDeclaration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25905-139">派生クラスで実装されている場合に、現在のノードから XAML 名前空間情報を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25905-139">When implemented in a derived class, gets the XAML namespace information from the current node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="25905-140">XAML 名前空間情報 (使用可能な場合)。それ以外の場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25905-140">The XAML namespace information, if it is available; otherwise, <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25905-141">この API の設計が null 以外の結果の場合にのみを返すには、<xref:System.Xaml.XamlReader.NodeType%2A>は、現在のノードの<xref:System.Xaml.XamlNodeType.NamespaceDeclaration>します。</span><span class="sxs-lookup"><span data-stu-id="25905-141">The intended design of this API is to return a non-null result only if the <xref:System.Xaml.XamlReader.NodeType%2A> of the current node is <xref:System.Xaml.XamlNodeType.NamespaceDeclaration>.</span></span> <span data-ttu-id="25905-142">プロパティでは、XAML スキーマ コンテキストで解釈されるよう、オブジェクトまたは一般的なスコープの意味、メンバーに適用される XAML 名前空間は報告されません。</span><span class="sxs-lookup"><span data-stu-id="25905-142">The property does not report the XAML namespace that applies to objects or members in a general scoping sense, as interpreted under a XAML schema context.</span></span> <span data-ttu-id="25905-143">アプリケーションが機能しているの情報をキャッシュするための手段を提供する必要がありますのでの XAML 名前空間は、方法、XAML スキーマ コンテキストにレポートをそのライター以外の方法では、その情報が必要な場合、XAML ノードを通過する時間します。</span><span class="sxs-lookup"><span data-stu-id="25905-143">Your application must provide a means to cache information for the acting XAML namespace as it traverses XAML nodes, if you need that information in a manner other than how the XAML schema context reports it to a writer.</span></span> <span data-ttu-id="25905-144">参照してください<xref:System.Xaml.XamlXmlReader.Namespace%2A>参照の実装に関する注意事項にします。</span><span class="sxs-lookup"><span data-stu-id="25905-144">See <xref:System.Xaml.XamlXmlReader.Namespace%2A> for notes on the reference implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlObjectReader.Namespace" />
        <altmember cref="P:System.Xaml.XamlXmlReader.Namespace" />
      </Docs>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public abstract System.Xaml.XamlNodeType NodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xaml.XamlNodeType NodeType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlReader.NodeType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property NodeType As XamlNodeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Xaml::XamlNodeType NodeType { System::Xaml::XamlNodeType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlNodeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25905-145">派生クラスで実装された場合、現在のノードの型を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25905-145">When implemented in a derived class, gets the type of the current node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="25905-146">
            <see cref="T:System.Xaml.XamlNodeType" /> 列挙体の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25905-146">A value of the <see cref="T:System.Xaml.XamlNodeType" /> enumeration.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25905-147">サブツリーのリーダーを呼び出すことができます<xref:System.Xaml.XamlReader.NodeType%2A>動作の制限があります。</span><span class="sxs-lookup"><span data-stu-id="25905-147">Subtree readers can call <xref:System.Xaml.XamlReader.NodeType%2A>, with behavior restrictions.</span></span> <span data-ttu-id="25905-148">詳細についてを参照してください「サブツリー リーダー」<xref:System.Xaml.XamlReader>を参照してくださいまたは<xref:System.Xaml.XamlReader.ReadSubtree%2A>です。</span><span class="sxs-lookup"><span data-stu-id="25905-148">For more information, see the "Subtree Readers" section in <xref:System.Xaml.XamlReader>, or see <xref:System.Xaml.XamlReader.ReadSubtree%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlObjectReader.NodeType" />
        <altmember cref="P:System.Xaml.XamlXmlReader.NodeType" />
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public abstract bool Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Read () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Read();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="25905-149">派生クラスで実装された場合、処理対象から次の XAML ノードを読み取ります (ノードがある場合)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25905-149">When implemented in a derived class, provides the next XAML node from the source, if a node is available.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="25905-150">ノードがある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25905-150">
              <see langword="true" /> if a node is available; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25905-151">サブツリーのリーダーを呼び出すことができます<xref:System.Xaml.XamlReader.Read%2A>動作の制限があります。</span><span class="sxs-lookup"><span data-stu-id="25905-151">Subtree readers can call <xref:System.Xaml.XamlReader.Read%2A>, with behavior restrictions.</span></span> <span data-ttu-id="25905-152">詳細についてを参照してください「サブツリー リーダー」<xref:System.Xaml.XamlReader>を参照してくださいまたは<xref:System.Xaml.XamlReader.ReadSubtree%2A>です。</span><span class="sxs-lookup"><span data-stu-id="25905-152">For more information, see the "Subtree Readers" section in <xref:System.Xaml.XamlReader>, or see <xref:System.Xaml.XamlReader.ReadSubtree%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xaml.XamlXmlReader.Read" />
        <altmember cref="M:System.Xaml.XamlObjectReader.Read" />
      </Docs>
    </Member>
    <Member MemberName="ReadSubtree">
      <MemberSignature Language="C#" Value="public virtual System.Xaml.XamlReader ReadSubtree ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xaml.XamlReader ReadSubtree() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlReader.ReadSubtree" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadSubtree () As XamlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xaml::XamlReader ^ ReadSubtree();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="25905-153">現在の <see cref="T:System.Xaml.XamlReader" /> に基づく <see cref="T:System.Xaml.XamlReader" /> を返します。返された <see cref="T:System.Xaml.XamlReader" /> は、XAML ノード構造のサブツリーでの反復処理に使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25905-153">Returns a <see cref="T:System.Xaml.XamlReader" /> that is based on the current <see cref="T:System.Xaml.XamlReader" />, where the returned <see cref="T:System.Xaml.XamlReader" /> is used to iterate through a subtree of the XAML node structure.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="25905-154">サブツリーの新しい XAML リーダー インスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25905-154">A new XAML reader instance for the subtree.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25905-155">このメソッドを持ち、既定の実装を返す有効な<xref:System.Xaml.XamlReader>します。</span><span class="sxs-lookup"><span data-stu-id="25905-155">This method has a default implementation and returns a valid <xref:System.Xaml.XamlReader>.</span></span> <span data-ttu-id="25905-156">返された<xref:System.Xaml.XamlReader>特定を制限する内部クラスは、<xref:System.Xaml.XamlReader>アクション。</span><span class="sxs-lookup"><span data-stu-id="25905-156">The returned <xref:System.Xaml.XamlReader> is an internal class that restricts certain <xref:System.Xaml.XamlReader> actions.</span></span> <span data-ttu-id="25905-157">制限は次元設定されたサブツリーの XAML ノード セットは、大規模ソースとファイルの終端を返すだけに読み取り目的に設定された一貫性のあるまたは`null`サブツリーが終了したときに、現在のノードにします。</span><span class="sxs-lookup"><span data-stu-id="25905-157">The restrictions are consistent with the purpose of reading only a dimensioned subtree of a larger source for a XAML node set, and of returning end-of-file or `null` at the current node when the subtree is exited.</span></span>  
  
 <span data-ttu-id="25905-158">一般に、最初から現在のノードを確認する必要があります<xref:System.Xaml.XamlReader.Read%2A>サブツリー リーダーが必要かどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="25905-158">Generally, you should check the current node from the initial <xref:System.Xaml.XamlReader.Read%2A> to determine whether you need a subtree reader.</span></span> <span data-ttu-id="25905-159">これをチェックする方法があります実装に固有です。ただし、すべてのサブツリーの複数のサブツリー リーダーを作成しないでください。</span><span class="sxs-lookup"><span data-stu-id="25905-159">How you check this may be implementation-specific; however, avoid creating multiple subtree readers for every subtree.</span></span> <span data-ttu-id="25905-160">さらに、特定のノードのケースのサブツリー リーダーの呼び出しを回避する (たとえば、 <xref:System.Xaml.XamlNodeType.NamespaceDeclaration>) ノードのサブツリーを含めることはできません。</span><span class="sxs-lookup"><span data-stu-id="25905-160">In addition, avoid invoking a subtree reader for certain node cases (for example, for <xref:System.Xaml.XamlNodeType.NamespaceDeclaration>) that cannot contain a subtree of nodes.</span></span>  
  
 <span data-ttu-id="25905-161">サブツリー リーダーを取得した後に呼び出す必要があります<xref:System.Xaml.XamlReader.Read%2A>を現在のノードを取得することで (または呼び出す<xref:System.Xaml.XamlReader.Skip%2A>を次のノードを取得する)。</span><span class="sxs-lookup"><span data-stu-id="25905-161">After you obtain a subtree reader, you must call <xref:System.Xaml.XamlReader.Read%2A> on it to obtain a current node (or call <xref:System.Xaml.XamlReader.Skip%2A> to obtain a next node).</span></span> <span data-ttu-id="25905-162">自動的に取得しない初期ノード位置サブツリー リーダーから作成するときにします。</span><span class="sxs-lookup"><span data-stu-id="25905-162">You do not automatically obtain an initial node position from the subtree reader when you create it.</span></span>  
  
 <span data-ttu-id="25905-163">呼び出して取得するリーダー<xref:System.Xaml.XamlReader.ReadSubtree%2A>この既定の実装は、内部クラス。</span><span class="sxs-lookup"><span data-stu-id="25905-163">The reader you obtain by calling <xref:System.Xaml.XamlReader.ReadSubtree%2A> from this default implementation is an internal class.</span></span> <span data-ttu-id="25905-164">内部クラスに基づいて、その動作、<xref:System.Xaml.XamlReader>実装されている場合に使用<xref:System.Xaml.XamlReader.ReadSubtree%2A>と呼びます。</span><span class="sxs-lookup"><span data-stu-id="25905-164">The internal class bases its behavior on the <xref:System.Xaml.XamlReader> implementation that is being used when <xref:System.Xaml.XamlReader.ReadSubtree%2A> is called.</span></span> <span data-ttu-id="25905-165">内部クラスの目的は、ラップする、<xref:System.Xaml.XamlReader.Read%2A>と一般的な走査の各動作します。</span><span class="sxs-lookup"><span data-stu-id="25905-165">The purpose of the internal class is to wrap the <xref:System.Xaml.XamlReader.Read%2A> and general traversal behavior.</span></span> <span data-ttu-id="25905-166">走査まま、目的のサブツリー内で追跡することにより<xref:System.Xaml.XamlNodeType.StartMember> / <xref:System.Xaml.XamlNodeType.EndMember>ペアまたは<xref:System.Xaml.XamlNodeType.StartObject> / <xref:System.Xaml.XamlNodeType.EndObject>ペア。</span><span class="sxs-lookup"><span data-stu-id="25905-166">The traversal stays within the intended subtree by keeping track of <xref:System.Xaml.XamlNodeType.StartMember>/<xref:System.Xaml.XamlNodeType.EndMember> pairs or <xref:System.Xaml.XamlNodeType.StartObject>/<xref:System.Xaml.XamlNodeType.EndObject> pairs.</span></span> <span data-ttu-id="25905-167">正しく返す`false`の<xref:System.Xaml.XamlReader.Read%2A>と`true`の<xref:System.Xaml.XamlReader.IsEof%2A>ときにリーダーが配置されて、サブツリーの最後のエントリ ポイントで定義されています。</span><span class="sxs-lookup"><span data-stu-id="25905-167">It also correctly returns `false` for <xref:System.Xaml.XamlReader.Read%2A> and `true` for <xref:System.Xaml.XamlReader.IsEof%2A> when the reader is at the end of the subtree, as defined by its entry point.</span></span> <span data-ttu-id="25905-168">一般に、想定すること、 <xref:System.Xaml.XamlReader> API サブツリー リーダーから呼び出しが、全体的なと同じ実装<xref:System.Xaml.XamlReader>動作を境界の検査を除く。</span><span class="sxs-lookup"><span data-stu-id="25905-168">In general, you assume that any <xref:System.Xaml.XamlReader> API you call from a subtree reader has the same implementation as the overall <xref:System.Xaml.XamlReader> except for the traversal bounding behavior.</span></span>  
  
 <span data-ttu-id="25905-169">ただし、<xref:System.Xaml.XamlReader.ReadSubtree%2A>は仮想です。</span><span class="sxs-lookup"><span data-stu-id="25905-169">However, <xref:System.Xaml.XamlReader.ReadSubtree%2A> is virtual.</span></span> <span data-ttu-id="25905-170">したがって、特定<xref:System.Xaml.XamlReader>実装とは異なる動作を提供できます、<xref:System.Xaml.XamlReader>内部ラッパーの動作と<xref:System.Xaml.XamlReader>実装でもを無効にできますサブツリー リーダー機能を返すことによって<xref:System.NotImplementedException>またはその他の例外。</span><span class="sxs-lookup"><span data-stu-id="25905-170">Therefore, a specific <xref:System.Xaml.XamlReader> implementation can provide behavior that differs from the <xref:System.Xaml.XamlReader> internal wrapper behavior; and a <xref:System.Xaml.XamlReader> implementation can even disable subtree reader functionality by returning <xref:System.NotImplementedException> or other exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SchemaContext">
      <MemberSignature Language="C#" Value="public abstract System.Xaml.XamlSchemaContext SchemaContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlSchemaContext SchemaContext" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlReader.SchemaContext" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property SchemaContext As XamlSchemaContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Xaml::XamlSchemaContext ^ SchemaContext { System::Xaml::XamlSchemaContext ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlSchemaContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25905-171">派生クラスで実装されている場合に、情報セットに XAML スキーマ コンテキスト情報を提供するオブジェクトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25905-171">When implemented in a derived class, gets an object that provides XAML schema context information for the information set.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="25905-172">情報セットに XAML スキーマ コンテキスト情報を提供するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25905-172">An object that provides XAML schema context information for the information set.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Xaml.XamlObjectReader.SchemaContext" />
        <altmember cref="P:System.Xaml.XamlXmlReader.SchemaContext" />
      </Docs>
    </Member>
    <Member MemberName="Skip">
      <MemberSignature Language="C#" Value="public virtual void Skip ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Skip() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlReader.Skip" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Skip ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Skip();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="25905-173">現在のノードをスキップして、リーダーの位置を次のノードに進めます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25905-173">Skips the current node and advances the reader position to the next node.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25905-174">1 回スキップ、 <xref:System.Xaml.XamlReader.Read%2A> 、既定により呼び出されます<xref:System.Xaml.XamlReader.Skip%2A>実装します。</span><span class="sxs-lookup"><span data-stu-id="25905-174">Once skipped, <xref:System.Xaml.XamlReader.Read%2A> is called by the default <xref:System.Xaml.XamlReader.Skip%2A> implementation.</span></span> <span data-ttu-id="25905-175">通常呼び出さない<xref:System.Xaml.XamlReader.Skip%2A>と<xref:System.Xaml.XamlReader.Read%2A>順番です。</span><span class="sxs-lookup"><span data-stu-id="25905-175">You typically do not call <xref:System.Xaml.XamlReader.Skip%2A> and <xref:System.Xaml.XamlReader.Read%2A> in sequence.</span></span>  
  
 <span data-ttu-id="25905-176">既定値で<xref:System.Xaml.XamlReader.Skip%2A>実装では、さまざまなアクションが実行されますに応じて<xref:System.Xaml.XamlReader.NodeType%2A>リーダーの位置が現在オン。</span><span class="sxs-lookup"><span data-stu-id="25905-176">In the default <xref:System.Xaml.XamlReader.Skip%2A> implementation, different actions are taken depending on which <xref:System.Xaml.XamlReader.NodeType%2A> the reader position is currently on.</span></span> <span data-ttu-id="25905-177">リーダーの位置が現在オンの場合、<xref:System.Xaml.XamlNodeType.StartMember>または<xref:System.Xaml.XamlNodeType.StartObject>、そのメンバーまたはオブジェクトはスキップされます。</span><span class="sxs-lookup"><span data-stu-id="25905-177">If the reader position is currently on a <xref:System.Xaml.XamlNodeType.StartMember> or <xref:System.Xaml.XamlNodeType.StartObject>, that member or object is skipped.</span></span> <span data-ttu-id="25905-178">その他の<xref:System.Xaml.XamlReader.NodeType%2A>値、何も処理呼び出し以外<xref:System.Xaml.XamlReader.Read%2A>現在の位置から。</span><span class="sxs-lookup"><span data-stu-id="25905-178">For other <xref:System.Xaml.XamlReader.NodeType%2A> values, no action is taken other than calling <xref:System.Xaml.XamlReader.Read%2A> from the current position.</span></span>  
  
 <span data-ttu-id="25905-179">サブツリーのリーダーを呼び出すことができます<xref:System.Xaml.XamlReader.Skip%2A>動作の制限があります。</span><span class="sxs-lookup"><span data-stu-id="25905-179">Subtree readers can call <xref:System.Xaml.XamlReader.Skip%2A>, with behavior restrictions.</span></span> <span data-ttu-id="25905-180">詳細についてを参照してください「サブツリー リーダー」<xref:System.Xaml.XamlReader>を参照してくださいまたは<xref:System.Xaml.XamlReader.ReadSubtree%2A>です。</span><span class="sxs-lookup"><span data-stu-id="25905-180">For more information, see the "Subtree Readers" section in <xref:System.Xaml.XamlReader>, or see <xref:System.Xaml.XamlReader.ReadSubtree%2A>.</span></span>  
  
 <span data-ttu-id="25905-181">ノード ツリー動作<xref:System.Xaml.XamlReader.Skip%2A?displayProperty=nameWithType>は同等の XML に基づいて<xref:System.Xml.XmlReader.Skip%2A?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="25905-181">The node tree behavior of <xref:System.Xaml.XamlReader.Skip%2A?displayProperty=nameWithType> is based on the XML equivalent <xref:System.Xml.XmlReader.Skip%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="25905-182">に基づいて、<xref:System.Xml.XmlReader.Skip%2A?displayProperty=nameWithType>動作等価<xref:System.Xaml.XamlReader.Skip%2A?displayProperty=nameWithType>ノードとそのサブツリーでは、1 つのエントリのノードだけでなくをスキップします。</span><span class="sxs-lookup"><span data-stu-id="25905-182">Based on the <xref:System.Xml.XmlReader.Skip%2A?displayProperty=nameWithType> behavior equivalence, <xref:System.Xaml.XamlReader.Skip%2A?displayProperty=nameWithType> skips the node and its subtree, not just the single entry node.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlReader.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="25905-183">
            <see cref="T:System.Xaml.XamlReader" /> クラスの現在のインスタンスによって使用されているすべてのリソースを解放します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25905-183">Releases all resources used by the current instance of the <see cref="T:System.Xaml.XamlReader" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public abstract System.Xaml.XamlType Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType Type" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlReader.Type" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Type As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Xaml::XamlType ^ Type { System::Xaml::XamlType ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25905-184">派生クラスで実装されている場合に、現在のノードの <see cref="T:System.Xaml.XamlType" /> を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25905-184">When implemented in a derived class, gets the <see cref="T:System.Xaml.XamlType" /> of the current node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="25905-185">現在のノードの <see cref="T:System.Xaml.XamlType" />。現在のリーダーの位置がオブジェクト上にない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25905-185">The <see cref="T:System.Xaml.XamlType" /> of the current node; or <see langword="null" />, if the current reader position is not on an object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25905-186">サブツリーのリーダーを呼び出すことができます<xref:System.Xaml.XamlReader.Type%2A>動作の制限があります。</span><span class="sxs-lookup"><span data-stu-id="25905-186">Subtree readers can call <xref:System.Xaml.XamlReader.Type%2A>, with behavior restrictions.</span></span> <span data-ttu-id="25905-187">詳細についてを参照してください「サブツリー リーダー」<xref:System.Xaml.XamlReader>を参照してくださいまたは<xref:System.Xaml.XamlReader.ReadSubtree%2A>です。</span><span class="sxs-lookup"><span data-stu-id="25905-187">For more information, see the "Subtree Readers" section in <xref:System.Xaml.XamlReader>, or see <xref:System.Xaml.XamlReader.ReadSubtree%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlObjectReader.Type" />
        <altmember cref="P:System.Xaml.XamlXmlReader.Type" />
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public abstract object Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlReader.Value" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Object ^ Value { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25905-188">派生クラスで実装された場合、現在のノードの値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25905-188">When implemented in a derived class, gets the value of the current node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="25905-189">現在のノードの値。現在のリーダーの位置が <see cref="F:System.Xaml.XamlNodeType.Value" /> ノード型にない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25905-189">The value of the current node; or <see langword="null" />, if the current reader position is not on a <see cref="F:System.Xaml.XamlNodeType.Value" /> node type.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Xaml.XamlObjectReader.Value" />
        <altmember cref="P:System.Xaml.XamlXmlReader.Value" />
      </Docs>
    </Member>
  </Members>
</Type>