<Type Name="XamlObjectWriterSettings" FullName="System.Xaml.XamlObjectWriterSettings">
  <TypeSignature Language="C#" Value="public class XamlObjectWriterSettings : System.Xaml.XamlWriterSettings" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlObjectWriterSettings extends System.Xaml.XamlWriterSettings" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlObjectWriterSettings" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlObjectWriterSettings&#xA;Inherits XamlWriterSettings" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlObjectWriterSettings : System::Xaml::XamlWriterSettings" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xaml.XamlWriterSettings</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="316e3-101"><see cref="T:System.Xaml.XamlObjectWriter" /> 固有の XAML ライター設定を提供します。</span><span class="sxs-lookup"><span data-stu-id="316e3-101">Provides specific XAML writer settings for <see cref="T:System.Xaml.XamlObjectWriter" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="316e3-102">A<xref:System.Xaml.XamlObjectWriter>できます関数内で指定された<xref:System.Xaml.XamlObjectWriterSettings>です。</span><span class="sxs-lookup"><span data-stu-id="316e3-102">A <xref:System.Xaml.XamlObjectWriter> can function within specified <xref:System.Xaml.XamlObjectWriterSettings>.</span></span> <span data-ttu-id="316e3-103">設定が指定されていない場合、インスタンスの<xref:System.Xaml.XamlObjectWriterSettings>存在の構築された既定値を持つ<xref:System.Xaml.XamlObjectWriter>、派生クラスのこのインスタンスの設定のマージに使用できます。</span><span class="sxs-lookup"><span data-stu-id="316e3-103">Where settings are not specified, an instance of <xref:System.Xaml.XamlObjectWriterSettings> exists that has default values for a constructed <xref:System.Xaml.XamlObjectWriter>, and this instance can be used in merges of settings for a derived class.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.XamlObjectWriter" />
    <altmember cref="M:System.Xaml.IXamlObjectWriterFactory.GetXamlObjectWriter(System.Xaml.XamlObjectWriterSettings)" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="316e3-104"><see cref="T:System.Xaml.XamlObjectWriterSettings" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="316e3-104">Initializes a new instance of the <see cref="T:System.Xaml.XamlObjectWriterSettings" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlObjectWriterSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriterSettings.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlObjectWriterSettings();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="316e3-105"><see cref="T:System.Xaml.XamlObjectWriterSettings" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="316e3-105">Initializes a new instance of the <see cref="T:System.Xaml.XamlObjectWriterSettings" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlObjectWriterSettings (System.Xaml.XamlObjectWriterSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xaml.XamlObjectWriterSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriterSettings.#ctor(System.Xaml.XamlObjectWriterSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (settings As XamlObjectWriterSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlObjectWriterSettings(System::Xaml::XamlObjectWriterSettings ^ settings);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="settings" Type="System.Xaml.XamlObjectWriterSettings" />
      </Parameters>
      <Docs>
        <param name="settings"><span data-ttu-id="316e3-106">コピー対象の設定インスタンス。</span><span class="sxs-lookup"><span data-stu-id="316e3-106">The settings instance to copy.</span></span></param>
        <summary><span data-ttu-id="316e3-107">既存のインスタンスのコピーに基づく <see cref="T:System.Xaml.XamlObjectWriterSettings" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="316e3-107">Initializes a new instance of the <see cref="T:System.Xaml.XamlObjectWriterSettings" /> class that is based on the copy of an existing instance.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="316e3-108"><paramref name="settings" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="316e3-108"><paramref name="settings" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AccessLevel">
      <MemberSignature Language="C#" Value="public System.Xaml.Permissions.XamlAccessLevel AccessLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Permissions.XamlAccessLevel AccessLevel" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectWriterSettings.AccessLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property AccessLevel As XamlAccessLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Permissions::XamlAccessLevel ^ AccessLevel { System::Xaml::Permissions::XamlAccessLevel ^ get(); void set(System::Xaml::Permissions::XamlAccessLevel ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Permissions.XamlAccessLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="316e3-109">XAML ライターによって適用される <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> のアクセス許可を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="316e3-109">Gets or sets <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> permissions that the XAML writer observes.</span></span></summary>
        <value><span data-ttu-id="316e3-110"><see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> のアクセス許可。</span><span class="sxs-lookup"><span data-stu-id="316e3-110">The <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> permissions.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="316e3-111">このプロパティは、部分的に信頼されたトレラント ランタイムを通じて部分的な信頼でアクセスされる非パブリック メンバーの場合、期待されるアクセス レベルを示します。</span><span class="sxs-lookup"><span data-stu-id="316e3-111">This property indicates the expected access level for non-public members, which are accessed in partial trust through a partial-trust tolerant runtime.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AfterBeginInitHandler">
      <MemberSignature Language="C#" Value="public EventHandler&lt;System.Xaml.XamlObjectEventArgs&gt; AfterBeginInitHandler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.EventHandler`1&lt;class System.Xaml.XamlObjectEventArgs&gt; AfterBeginInitHandler" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler" />
      <MemberSignature Language="VB.NET" Value="Public Property AfterBeginInitHandler As EventHandler(Of XamlObjectEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property EventHandler&lt;System::Xaml::XamlObjectEventArgs ^&gt; ^ AfterBeginInitHandler { EventHandler&lt;System::Xaml::XamlObjectEventArgs ^&gt; ^ get(); void set(EventHandler&lt;System::Xaml::XamlObjectEventArgs ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Xaml.XamlObjectEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="316e3-112">作成された各オブジェクトの有効期間の <see cref="M:System.ComponentModel.ISupportInitialize.BeginInit" /> フェーズで XAML ライターによって呼び出されたコールバックへの参照を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="316e3-112">Gets or sets a reference to a callback that is invoked by the XAML writer at the <see cref="M:System.ComponentModel.ISupportInitialize.BeginInit" /> phase of the object lifetime for each created object.</span></span></summary>
        <value><span data-ttu-id="316e3-113">オブジェクトの有効期間の <see cref="M:System.ComponentModel.ISupportInitialize.BeginInit" /> フェーズで XAML ライターによって呼び出されたコールバック。</span><span class="sxs-lookup"><span data-stu-id="316e3-113">A callback that is invoked by the XAML writer at the <see cref="M:System.ComponentModel.ISupportInitialize.BeginInit" /> phase of object lifetime.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Xaml.XamlObjectWriter.OnAfterBeginInit(System.Object)" />
        <altmember cref="T:System.Xaml.XamlObjectEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="AfterEndInitHandler">
      <MemberSignature Language="C#" Value="public EventHandler&lt;System.Xaml.XamlObjectEventArgs&gt; AfterEndInitHandler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.EventHandler`1&lt;class System.Xaml.XamlObjectEventArgs&gt; AfterEndInitHandler" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler" />
      <MemberSignature Language="VB.NET" Value="Public Property AfterEndInitHandler As EventHandler(Of XamlObjectEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property EventHandler&lt;System::Xaml::XamlObjectEventArgs ^&gt; ^ AfterEndInitHandler { EventHandler&lt;System::Xaml::XamlObjectEventArgs ^&gt; ^ get(); void set(EventHandler&lt;System::Xaml::XamlObjectEventArgs ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Xaml.XamlObjectEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="316e3-114">作成された各オブジェクトの有効期間の <see cref="M:System.ComponentModel.ISupportInitialize.EndInit" /> フェーズで XAML ライターによって呼び出されたコールバックへの参照を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="316e3-114">Gets or sets a reference to a callback that is invoked by the XAML writer at the <see cref="M:System.ComponentModel.ISupportInitialize.EndInit" /> phase of the object lifetime for each created object.</span></span></summary>
        <value><span data-ttu-id="316e3-115">オブジェクトの有効期間の <see cref="M:System.ComponentModel.ISupportInitialize.EndInit" /> フェーズで XAML ライターによって呼び出されたコールバック。</span><span class="sxs-lookup"><span data-stu-id="316e3-115">A callback that is invoked by the XAML writer at the <see cref="M:System.ComponentModel.ISupportInitialize.EndInit" /> phase of object lifetime.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Xaml.XamlObjectWriter.OnAfterEndInit(System.Object)" />
        <altmember cref="T:System.Xaml.XamlObjectEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="AfterPropertiesHandler">
      <MemberSignature Language="C#" Value="public EventHandler&lt;System.Xaml.XamlObjectEventArgs&gt; AfterPropertiesHandler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.EventHandler`1&lt;class System.Xaml.XamlObjectEventArgs&gt; AfterPropertiesHandler" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler" />
      <MemberSignature Language="VB.NET" Value="Public Property AfterPropertiesHandler As EventHandler(Of XamlObjectEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property EventHandler&lt;System::Xaml::XamlObjectEventArgs ^&gt; ^ AfterPropertiesHandler { EventHandler&lt;System::Xaml::XamlObjectEventArgs ^&gt; ^ get(); void set(EventHandler&lt;System::Xaml::XamlObjectEventArgs ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Xaml.XamlObjectEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="316e3-116">作成された各オブジェクトの有効期間の post-member-write フェーズで XAML ライターによって呼び出されたコールバックへの参照を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="316e3-116">Gets or sets a reference to a callback that is invoked by the XAML writer at the post-member-write phase of the object lifetime for each created object.</span></span></summary>
        <value><span data-ttu-id="316e3-117">オブジェクトの有効期間の post-member-write フェーズで XAML ライターによって呼び出されたコールバック。</span><span class="sxs-lookup"><span data-stu-id="316e3-117">A callback that is invoked by the XAML writer at the post-member-write phase of object lifetime.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Xaml.XamlObjectWriter.OnAfterProperties(System.Object)" />
        <altmember cref="T:System.Xaml.XamlObjectEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="BeforePropertiesHandler">
      <MemberSignature Language="C#" Value="public EventHandler&lt;System.Xaml.XamlObjectEventArgs&gt; BeforePropertiesHandler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.EventHandler`1&lt;class System.Xaml.XamlObjectEventArgs&gt; BeforePropertiesHandler" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler" />
      <MemberSignature Language="VB.NET" Value="Public Property BeforePropertiesHandler As EventHandler(Of XamlObjectEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property EventHandler&lt;System::Xaml::XamlObjectEventArgs ^&gt; ^ BeforePropertiesHandler { EventHandler&lt;System::Xaml::XamlObjectEventArgs ^&gt; ^ get(); void set(EventHandler&lt;System::Xaml::XamlObjectEventArgs ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Xaml.XamlObjectEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="316e3-118">作成された各オブジェクトの有効期間の pre-member-write フェーズで XAML ライターによって呼び出されたコールバックへの参照を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="316e3-118">Gets or sets a reference to a callback that is invoked by the XAML writer at the pre-member-write phase of the object lifetime for each created object.</span></span></summary>
        <value><span data-ttu-id="316e3-119">オブジェクトの有効期間の pre-member-write フェーズで XAML ライターによって呼び出されたコールバック。</span><span class="sxs-lookup"><span data-stu-id="316e3-119">A callback that is invoked by the XAML writer at the pre-member-write phase of object lifetime.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Xaml.XamlObjectWriter.OnBeforeProperties(System.Object)" />
        <altmember cref="T:System.Xaml.XamlObjectEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="ExternalNameScope">
      <MemberSignature Language="C#" Value="public System.Windows.Markup.INameScope ExternalNameScope { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Markup.INameScope ExternalNameScope" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope" />
      <MemberSignature Language="VB.NET" Value="Public Property ExternalNameScope As INameScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Markup::INameScope ^ ExternalNameScope { System::Windows::Markup::INameScope ^ get(); void set(System::Windows::Markup::INameScope ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.INameScope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="316e3-120"><see cref="P:System.Xaml.XamlObjectWriterSettings.RegisterNamesOnExternalNamescope" /> が <see langword="true" /> の場合に、XAML ライターからの名前の登録に使用する XAML 名前スコープを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="316e3-120">Gets or sets the XAML namescope to use for registering names from the XAML writer if <see cref="P:System.Xaml.XamlObjectWriterSettings.RegisterNamesOnExternalNamescope" /> is <see langword="true" />.</span></span></summary>
        <value><span data-ttu-id="316e3-121">名前の登録に使用する XAML 名前スコープ。</span><span class="sxs-lookup"><span data-stu-id="316e3-121">The XAML namescope to use for registering names.</span></span> <span data-ttu-id="316e3-122">既定値は、<see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="316e3-122">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="316e3-123">特定のコンテキスト、<xref:System.Xaml.XamlObjectWriter>外部の XAML 名前スコープを使用する場合があります。</span><span class="sxs-lookup"><span data-stu-id="316e3-123">Specific contexts for a <xref:System.Xaml.XamlObjectWriter> might use an external XAML namescope.</span></span>  
  
## <a name="wpf-usage-notes"></a><span data-ttu-id="316e3-124">WPF の使用上の注意</span><span class="sxs-lookup"><span data-stu-id="316e3-124">WPF Usage Notes</span></span>  
 <span data-ttu-id="316e3-125">実装では、XAML の WPF XAML ライターの操作によって開始された<xref:System.Windows.FrameworkTemplate>別の XAML 名前スコープを指定します。</span><span class="sxs-lookup"><span data-stu-id="316e3-125">In the WPF XAML implementation, XAML writer operations that are initiated by <xref:System.Windows.FrameworkTemplate> specify a separate XAML namescope.</span></span> <span data-ttu-id="316e3-126">この WPF シナリオでテンプレートは、それを定義する XAML ページのルートと XAML 名前スコープを共有する必要があります。</span><span class="sxs-lookup"><span data-stu-id="316e3-126">In this WPF scenario, templates should not share a XAML namescope with the root of the XAML page that defines them.</span></span> <span data-ttu-id="316e3-127">代わりに、別の指定された XAML 名前スコープに処理する必要があります。</span><span class="sxs-lookup"><span data-stu-id="316e3-127">Instead, they should process into a separate, designated XAML namescope.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreCanConvert">
      <MemberSignature Language="C#" Value="public bool IgnoreCanConvert { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreCanConvert" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectWriterSettings.IgnoreCanConvert" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreCanConvert As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreCanConvert { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="316e3-128">型コンバーターを使用する状況で、XAML ライターが <see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" /> の <see cref="T:System.ComponentModel.TypeConverter" /> 実装を無視する (呼び出さない) かどうかを指定する値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="316e3-128">Gets or sets a value that specifies whether the XAML writer should ignore (not call) <see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" /> implementations on a <see cref="T:System.ComponentModel.TypeConverter" /> in type-converter situations.</span></span></summary>
        <value>
          <span data-ttu-id="316e3-129">XAML ライターが <see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" /> 実装を無視する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="316e3-129"><see langword="true" /> if the XAML writer ignores <see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" /> implementations; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="316e3-130">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="316e3-130">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="316e3-131"><xref:System.ComponentModel.TypeConverter>クラスとその<xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A>メソッドの CLR の型変換、総合的な設計の一部であります。</span><span class="sxs-lookup"><span data-stu-id="316e3-131">The <xref:System.ComponentModel.TypeConverter> class and its <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> method are part of an overall design for type conversion in the CLR.</span></span> <span data-ttu-id="316e3-132">XAML のシステムでは、通常、型コンバーターの入力および入力のため、XAML リーダーによって識別されることは、文字列は、常にことを想定することができます。</span><span class="sxs-lookup"><span data-stu-id="316e3-132">In XAML systems, you can typically assume that type-converter input is identifiable by the XAML reader, and for purposes of input, is always a string.</span></span> <span data-ttu-id="316e3-133">このプロパティを設定する場合`true`、XAML オブジェクト ライターの動作でこの想定を記述する、モードを有効にします。</span><span class="sxs-lookup"><span data-stu-id="316e3-133">If you set this property to `true`, you enable a mode where this assumption is codified in the XAML object writer behavior.</span></span>  
  
 <span data-ttu-id="316e3-134">このモードでは、WPF XAML の以前のバージョンの互換性の要件をサポートします。</span><span class="sxs-lookup"><span data-stu-id="316e3-134">This mode supports a compatibility requirement for previous versions of WPF XAML.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferUnconvertedDictionaryKeys">
      <MemberSignature Language="C#" Value="public bool PreferUnconvertedDictionaryKeys { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PreferUnconvertedDictionaryKeys" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectWriterSettings.PreferUnconvertedDictionaryKeys" />
      <MemberSignature Language="VB.NET" Value="Public Property PreferUnconvertedDictionaryKeys As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PreferUnconvertedDictionaryKeys { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="316e3-135">オブジェクト グラフ表現を書き込む前に <see cref="T:System.Xaml.XamlObjectWriter" /> の <paramref name="K" /> コンポーネントの型変換を実行する既定の <see cref="T:System.Collections.Generic.Dictionary`2" /> 機能を無効にするかどうかを判断する値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="316e3-135">Gets or sets a value that determines whether to disable a default <see cref="T:System.Xaml.XamlObjectWriter" /> feature that runs type conversion on the <paramref name="K" /> component of a <see cref="T:System.Collections.Generic.Dictionary`2" /> before writing the object graph representation.</span></span></summary>
        <value>
          <span data-ttu-id="316e3-136"><see cref="T:System.Collections.Generic.Dictionary`2" /> オブジェクトの <paramref name="K" /> 型変換を無効にする場合は <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="316e3-136"><see langword="true" /> if <paramref name="K" /> type conversion for a <see cref="T:System.Collections.Generic.Dictionary`2" /> object should be disabled.</span></span> <span data-ttu-id="316e3-137"><see cref="T:System.Collections.Generic.Dictionary`2" /> オブジェクトの <paramref name="K" /> 型変換を適用する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="316e3-137"><see langword="false" /> if performing <paramref name="K" /> type conversion for a <see cref="T:System.Collections.Generic.Dictionary`2" /> object applies.</span></span> <span data-ttu-id="316e3-138">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="316e3-138">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="316e3-139">詳細については、`K`変換機能を入力では、「解説」を参照してください<xref:System.Xaml.XamlObjectWriter>です。</span><span class="sxs-lookup"><span data-stu-id="316e3-139">For more information about the `K` type conversion feature, see Remarks in <xref:System.Xaml.XamlObjectWriter>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterNamesOnExternalNamescope">
      <MemberSignature Language="C#" Value="public bool RegisterNamesOnExternalNamescope { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RegisterNamesOnExternalNamescope" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectWriterSettings.RegisterNamesOnExternalNamescope" />
      <MemberSignature Language="VB.NET" Value="Public Property RegisterNamesOnExternalNamescope As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RegisterNamesOnExternalNamescope { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="316e3-140">指定された <see cref="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope" /> に対して名前の登録を行う必要があるかどうかを判断する値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="316e3-140">Gets or sets a value that determines whether name registration should occur against the specified <see cref="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope" />.</span></span></summary>
        <value>
          <span data-ttu-id="316e3-141"><see cref="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope" /> に対して名前の登録を行う場合は <see langword="true" />。名前の登録を親 XAML 名前スコープに行う場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="316e3-141"><see langword="true" /> if name registration should occur against the <see cref="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope" />; <see langword="false" /> if name registration should occur into the parent XAML namescope.</span></span> <span data-ttu-id="316e3-142">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="316e3-142">The default is <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RootObjectInstance">
      <MemberSignature Language="C#" Value="public object RootObjectInstance { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object RootObjectInstance" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectWriterSettings.RootObjectInstance" />
      <MemberSignature Language="VB.NET" Value="Public Property RootObjectInstance As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ RootObjectInstance { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="316e3-143"><see cref="T:System.Xaml.XamlObjectWriter" /> の操作に使用する既存のルート オブジェクトを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="316e3-143">Gets or sets a preexisting root object for <see cref="T:System.Xaml.XamlObjectWriter" /> operations.</span></span></summary>
        <value><span data-ttu-id="316e3-144"><see cref="T:System.Xaml.XamlObjectWriter" /> の操作に使用する既存のルート オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="316e3-144">A preexisting root object for <see cref="T:System.Xaml.XamlObjectWriter" /> operations.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="316e3-145">この値を設定する場合、ルート オブジェクトのインスタンスが暗黙として使用<xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A>(リーダーからのものではなく直接オブジェクトの入力) を使用して呼び出し、最初の明示的なノード書き込み呼び出しの直前まで、<xref:System.Xaml.XamlObjectWriter>です。</span><span class="sxs-lookup"><span data-stu-id="316e3-145">If you set this value, the root object instance is used as an implicit <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> call (with object input that is direct instead of coming from the reader) that precedes the first explicit node-write call by the <xref:System.Xaml.XamlObjectWriter>.</span></span> <span data-ttu-id="316e3-146">暗黙的になるまでに遅延が、指定されたルート オブジェクトの XAML 型の検証などの任意のエラー チェック、<xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A>呼び出し、この設定のプロパティを設定するときにチェックされる代わりにします。</span><span class="sxs-lookup"><span data-stu-id="316e3-146">Any error checking, such as verifying the XAML type of the provided root object, is deferred until that implicit <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> call, instead of being checked when you set this settings property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipDuplicatePropertyCheck">
      <MemberSignature Language="C#" Value="public bool SkipDuplicatePropertyCheck { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SkipDuplicatePropertyCheck" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectWriterSettings.SkipDuplicatePropertyCheck" />
      <MemberSignature Language="VB.NET" Value="Public Property SkipDuplicatePropertyCheck As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SkipDuplicatePropertyCheck { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="316e3-147">XAML ライターが重複するプロパティをチェックするコード パスのチェックを省略するかどうかを判断する値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="316e3-147">Gets or sets a value that determines whether the XAML writer omits to check for the code path that checks for duplicate properties.</span></span></summary>
        <value>
          <span data-ttu-id="316e3-148">重複するプロパティのチェックを省略する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="316e3-148"><see langword="true" /> if the duplicate property check should be omitted; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="316e3-149">指定したコード パスでは、現在割り当てられているプロパティをチェックし、名前付きのアンビエント プロパティの重複したプロパティ セットが実行されると、例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="316e3-149">The specified code path checks the currently assigned properties and throws an exception if a duplicate property set of the named ambient property is attempted.</span></span> <span data-ttu-id="316e3-150">詳細については、「<xref:System.Xaml.IAmbientProvider>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="316e3-150">For more information, see <xref:System.Xaml.IAmbientProvider>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipProvideValueOnRoot">
      <MemberSignature Language="C#" Value="public bool SkipProvideValueOnRoot { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SkipProvideValueOnRoot" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectWriterSettings.SkipProvideValueOnRoot" />
      <MemberSignature Language="VB.NET" Value="Public Property SkipProvideValueOnRoot As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SkipProvideValueOnRoot { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="316e3-151"><see cref="T:System.Xaml.XamlObjectWriter" /> がマークアップ拡張機能の <see langword="ProvideValue" /> の呼び出しを省略する必要があるかどうかを示す値を取得または設定します。これは、マークアップ拡張機能がオブジェクト グラフのルートを表す場合に使用します。</span><span class="sxs-lookup"><span data-stu-id="316e3-151">Gets or sets a value that indicates whether the <see cref="T:System.Xaml.XamlObjectWriter" /> should omit to call <see langword="ProvideValue" /> on a markup extension, which is relevant when the markup extension represents the root of an object graph.</span></span></summary>
        <value>
          <span data-ttu-id="316e3-152"><see cref="T:System.Xaml.XamlObjectWriter" /> がマークアップ拡張機能の <see langword="true" /> の呼び出しを省略する必要がある場合は <see langword="ProvideValue" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="316e3-152"><see langword="true" /> if the <see cref="T:System.Xaml.XamlObjectWriter" /> should omit to call <see langword="ProvideValue" /> on a markup extension; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="316e3-153">この設定が使用されるときに、<xref:System.Xaml.XamlObjectWriter>ルート ノードを処理 (<xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A>、またはルート ノード内のメンバー)。</span><span class="sxs-lookup"><span data-stu-id="316e3-153">This setting is used when the <xref:System.Xaml.XamlObjectWriter> processes the root node (<xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A>, or members within the root node).</span></span> <span data-ttu-id="316e3-154">このプロパティは、テンプレートと遅延読み込みのシナリオに関連します。</span><span class="sxs-lookup"><span data-stu-id="316e3-154">This property is relevant for template and defer-load scenarios.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceBamlUri">
      <MemberSignature Language="C#" Value="public Uri SourceBamlUri { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri SourceBamlUri" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectWriterSettings.SourceBamlUri" />
      <MemberSignature Language="VB.NET" Value="Public Property SourceBamlUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ SourceBamlUri { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="316e3-155">実際の <see langword="BaseUri" /> の代わりに <see langword="BeginInitHandler" /> に使用されました。</span><span class="sxs-lookup"><span data-stu-id="316e3-155">Used in the <see langword="BeginInitHandler" /> in place of the actual <see langword="BaseUri" />.</span></span></summary>
        <value><span data-ttu-id="316e3-156">A <see cref="T:System.Uri" /> 、実際の代わりに使用される<see langword="BaseUri" />です。</span><span class="sxs-lookup"><span data-stu-id="316e3-156">A <see cref="T:System.Uri" /> to be used in place of the actual <see langword="BaseUri" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="316e3-157">実行時の動作の完全な互換性を維持しながら、ハンドラーで適切な情報を提供するには、内部的に使用します。</span><span class="sxs-lookup"><span data-stu-id="316e3-157">Used internally to provide the correct info in the handler, while keeping runtime behavior fully compatible.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XamlSetValueHandler">
      <MemberSignature Language="C#" Value="public EventHandler&lt;System.Windows.Markup.XamlSetValueEventArgs&gt; XamlSetValueHandler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.EventHandler`1&lt;class System.Windows.Markup.XamlSetValueEventArgs&gt; XamlSetValueHandler" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler" />
      <MemberSignature Language="VB.NET" Value="Public Property XamlSetValueHandler As EventHandler(Of XamlSetValueEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property EventHandler&lt;System::Windows::Markup::XamlSetValueEventArgs ^&gt; ^ XamlSetValueHandler { EventHandler&lt;System::Windows::Markup::XamlSetValueEventArgs ^&gt; ^ get(); void set(EventHandler&lt;System::Windows::Markup::XamlSetValueEventArgs ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Markup.XamlSetValueEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="316e3-158">オブジェクト ライターが CLR で実装された、依存関係プロパティの <see langword="SetValue" /> を呼び出す場合に使用するハンドラーを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="316e3-158">Gets or sets the handler to use when the object writer calls into a CLR-implemented <see langword="SetValue" /> for dependency properties.</span></span></summary>
        <value><span data-ttu-id="316e3-159">このような場合の処理を行うハンドラーの実装。</span><span class="sxs-lookup"><span data-stu-id="316e3-159">A handler implementation that handles this case.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="316e3-160">イベント ハンドラーは、ジェネリックに基づきます<xref:System.EventHandler%601>デリゲートを使用する、<xref:System.Windows.Markup.XamlSetValueEventArgs>イベント データ。</span><span class="sxs-lookup"><span data-stu-id="316e3-160">The event handler is based on the generic <xref:System.EventHandler%601> delegate that uses the <xref:System.Windows.Markup.XamlSetValueEventArgs> event data.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>