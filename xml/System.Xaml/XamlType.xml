<Type Name="XamlType" FullName="System.Xaml.XamlType">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="14664bfd79f70a81adc02c3d6f947177210cafa4" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XamlType : IEquatable&lt;System.Xaml.XamlType&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlType extends System.Object implements class System.IEquatable`1&lt;class System.Xaml.XamlType&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlType" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlType&#xA;Implements IEquatable(Of XamlType)" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlType : IEquatable&lt;System::Xaml::XamlType ^&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Xaml.XamlType&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="8ebab-101">.NET Framework XAML サービスに実装されている XAML システム全体の一部として、XAML 型に関する情報を報告します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="8ebab-101">Reports information about XAML types as part of the overall XAML system that is implemented in .NET Framework XAML Services.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ebab-102">多くの Api、<xref:System.Xaml.XamlType>クラスで報告する概念は、XAML の仕様 [MS-XAML] の特定のセクションに似ています、XAML の型に関する情報を提供します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-102">Many APIs in the <xref:System.Xaml.XamlType> class provide information about XAML types, where the concept they report on is similar to particular sections of the XAML specification [MS-XAML].</span></span>  
  
 <span data-ttu-id="8ebab-103"><xref:System.Xaml.XamlType> 広く使われて、.NET Framework XAML サービス API の XAML 型に関するレポート情報です。</span><span class="sxs-lookup"><span data-stu-id="8ebab-103"><xref:System.Xaml.XamlType> is used extensively in the .NET Framework XAML Services API for reporting information about a XAML type.</span></span> <span data-ttu-id="8ebab-104"><xref:System.Xaml.XamlType> インスタンスを使用するために、または XAML ノード ストリーム、またはと同様に XAML 表現からのメンバーにアクセスする XAML の型について知っておく必要がある情報を報告します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-104"><xref:System.Xaml.XamlType> reports the information that you might need to know about a XAML type in order to work with an instance or to access its members from a XAML node stream, or a similar XAML representation.</span></span> <span data-ttu-id="8ebab-105">ような方法は、reporting<xref:System.Type>入力リフレクション クラスと共に、システムなど、CLR で<xref:System.Reflection.MemberInfo>CLR 型とその使用状況に関する情報を提供します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-105">Its reporting is similar to how the <xref:System.Type> in the CLR type system, together with reflection classes such as <xref:System.Reflection.MemberInfo>, provide information about a CLR type and its usage.</span></span>  
  
 <span data-ttu-id="8ebab-106">XAML 型システムを拡張するから派生できます<xref:System.Xaml.XamlType>です。</span><span class="sxs-lookup"><span data-stu-id="8ebab-106">To extend the XAML type system, you can derive from <xref:System.Xaml.XamlType>.</span></span> <span data-ttu-id="8ebab-107">実効上には、する必要がありますも実装する、<xref:System.Xaml.Schema.XamlTypeInvoker>です。</span><span class="sxs-lookup"><span data-stu-id="8ebab-107">To do so effectively, you might also need to implement a <xref:System.Xaml.Schema.XamlTypeInvoker>.</span></span> <span data-ttu-id="8ebab-108"><xref:System.Xaml.Schema.XamlTypeInvoker>一般化された XAML 型システム呼び出しの動作の一部として指定することをバッキング型システムを使用するようになります。</span><span class="sxs-lookup"><span data-stu-id="8ebab-108">The <xref:System.Xaml.Schema.XamlTypeInvoker> enables the generalized XAML type system to work with the type system backing that you specify as part of the invocation behavior.</span></span> <span data-ttu-id="8ebab-109">特定のカスタム<xref:System.Xaml.Schema.XamlTypeInvoker>、既定で使用される CLR 型システムへの依存関係を削減する方法を提供<xref:System.Xaml.XamlType>動作します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-109">The specific custom <xref:System.Xaml.Schema.XamlTypeInvoker> provides a way to reduce the dependencies on the CLR type system, which are used by the default <xref:System.Xaml.XamlType> behavior.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8ebab-110">
            <see cref="T:System.Xaml.XamlType" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-110">Initializes a new instance of the <see cref="T:System.Xaml.XamlType" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlType (Type underlyingType, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type underlyingType, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (underlyingType As Type, schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlType(Type ^ underlyingType, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="underlyingType" Type="System.Type" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="underlyingType">
          <span data-ttu-id="8ebab-111">作成する XAML 型の基になる CLR <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-111">The underlying CLR <see cref="T:System.Type" /> for the XAML type to construct.</span>
          </span>
        </param>
        <param name="schemaContext">
          <span data-ttu-id="8ebab-112">XAML リーダーまたは XAML ライターの XAML スキーマ コンテキスト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-112">XAML schema context for XAML readers or XAML writers.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8ebab-113">基になる CLR 型情報に基づいて、<see cref="T:System.Xaml.XamlType" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-113">Initializes a new instance of the <see cref="T:System.Xaml.XamlType" /> class based on the underlying CLR type information.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8ebab-114">1 つ以上の <paramref name="underlyingType" /> または <paramref name="schemaContext" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-114">One or more of <paramref name="underlyingType" /> or <paramref name="schemaContext" /> are <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XamlType (string typeName, System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; typeArguments, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string typeName, class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; typeArguments, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.#ctor(System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (typeName As String, typeArguments As IList(Of XamlType), schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XamlType(System::String ^ typeName, System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ typeArguments, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="typeArguments" Type="System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="typeName">
          <span data-ttu-id="8ebab-115">作成する型の名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-115">The name of the type to create.</span>
          </span>
        </param>
        <param name="typeArguments">
          <span data-ttu-id="8ebab-116">ジェネリック型を表す <see cref="T:System.Xaml.XamlType" /> の型引数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-116">The type arguments for a <see cref="T:System.Xaml.XamlType" /> that represents a generic type.</span>
          </span>
          <span data-ttu-id="8ebab-117">(多くの場合は) <see langword="null" /> にできます。この値は、表される型がジェネリック型でないことを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-117">Can be (and often is) <see langword="null" />, which indicates that the represented type is not a generic type.</span>
          </span>
        </param>
        <param name="schemaContext">
          <span data-ttu-id="8ebab-118">XAML リーダーおよび XAML ライターの XAML スキーマ コンテキスト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-118">XAML schema context for XAML readers and XAML writers.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8ebab-119">型の文字列名に基づいて、<see cref="T:System.Xaml.XamlType" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-119">Initializes a new instance of the <see cref="T:System.Xaml.XamlType" /> class based on a string name for the type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ebab-120">これは保護されたコンストラクターです。</span><span class="sxs-lookup"><span data-stu-id="8ebab-120">This is a protected constructor.</span></span> <span data-ttu-id="8ebab-121">現在のパブリック派生クラスが存在しない構築のこの特定のパスを使用します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-121">No current public derived classes exist that use this particular path for construction.</span></span> <span data-ttu-id="8ebab-122">既存のコンシューマーとして<xref:System.Xaml.XamlType>、他のコンス トラクター シグネチャを使用する必要があります (<xref:System.Xaml.XamlType.%23ctor%28System.Type%2CSystem.Xaml.XamlSchemaContext%2CSystem.Xaml.Schema.XamlTypeInvoker%29>、 <xref:System.Xaml.XamlType.%23ctor%28System.Type%2CSystem.Xaml.XamlSchemaContext%29>、または<xref:System.Xaml.XamlType.%23ctor%28System.String%2CSystem.String%2CSystem.Collections.Generic.IList%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlSchemaContext%29>) 初期化するために、<xref:System.Xaml.XamlType>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8ebab-122">As a consumer of the existing <xref:System.Xaml.XamlType>, you must use the other constructor signatures (<xref:System.Xaml.XamlType.%23ctor%28System.Type%2CSystem.Xaml.XamlSchemaContext%2CSystem.Xaml.Schema.XamlTypeInvoker%29>, <xref:System.Xaml.XamlType.%23ctor%28System.Type%2CSystem.Xaml.XamlSchemaContext%29>, or <xref:System.Xaml.XamlType.%23ctor%28System.String%2CSystem.String%2CSystem.Collections.Generic.IList%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlSchemaContext%29>) to initialize a <xref:System.Xaml.XamlType> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8ebab-123">1 つ以上の <paramref name="typeName" /> または <paramref name="schemaContext" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-123">One or more of <paramref name="typeName" /> or <paramref name="schemaContext" /> are <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlType (Type underlyingType, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlTypeInvoker invoker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type underlyingType, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.Schema.XamlTypeInvoker invoker) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlTypeInvoker)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (underlyingType As Type, schemaContext As XamlSchemaContext, invoker As XamlTypeInvoker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlType(Type ^ underlyingType, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::Schema::XamlTypeInvoker ^ invoker);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="underlyingType" Type="System.Type" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="invoker" Type="System.Xaml.Schema.XamlTypeInvoker" />
      </Parameters>
      <Docs>
        <param name="underlyingType">
          <span data-ttu-id="8ebab-124">作成する XAML 型の基になる型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-124">The underlying type for the XAML type to construct.</span>
          </span>
        </param>
        <param name="schemaContext">
          <span data-ttu-id="8ebab-125">XAML リーダーの XAML スキーマ コンテキスト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-125">XAML schema context for the XAML reader.</span>
          </span>
        </param>
        <param name="invoker">
          <span data-ttu-id="8ebab-126">
            <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> に対してランタイムのリフレクション呼び出しを処理する <see cref="T:System.Xaml.XamlType" /> 実装。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-126">The <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> implementation that handles run-time reflection calls against the <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8ebab-127">基になる型情報、および <see cref="T:System.Xaml.XamlType" /> の実装に基づいて、<see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-127">Initializes a new instance of the <see cref="T:System.Xaml.XamlType" /> class based on underlying type information and a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> implementation.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8ebab-128">1 つ以上の <paramref name="underlyingType" /> または <paramref name="schemaContext" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-128">One or more of <paramref name="underlyingType" /> or <paramref name="schemaContext" /> are <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlType (string unknownTypeNamespace, string unknownTypeName, System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; typeArguments, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string unknownTypeNamespace, string unknownTypeName, class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; typeArguments, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.#ctor(System.String,System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (unknownTypeNamespace As String, unknownTypeName As String, typeArguments As IList(Of XamlType), schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlType(System::String ^ unknownTypeNamespace, System::String ^ unknownTypeName, System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ typeArguments, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="unknownTypeNamespace" Type="System.String" />
        <Parameter Name="unknownTypeName" Type="System.String" />
        <Parameter Name="typeArguments" Type="System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="unknownTypeNamespace">
          <span data-ttu-id="8ebab-129">文字列としての、型の XAML 名前空間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-129">The XAML namespace for the type, as a string.</span>
          </span>
        </param>
        <param name="unknownTypeName">
          <span data-ttu-id="8ebab-130">指定された <c>unknownTypeNamespace</c> XAML 名前空間内の型の名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-130">The name of the type in the provided <c>unknownTypeNamespace</c> XAML namespace.</span>
          </span>
        </param>
        <param name="typeArguments">
          <span data-ttu-id="8ebab-131">ジェネリック型を表す <see cref="T:System.Xaml.XamlType" /> の型引数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-131">The type arguments for a <see cref="T:System.Xaml.XamlType" /> that represents a generic type.</span>
          </span>
          <span data-ttu-id="8ebab-132">(多くの場合は) <see langword="null" /> にできます。この値は、表される型がジェネリック型でないことを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-132">Can be (and often is) <see langword="null" />, which indicates that the represented type is not a generic type.</span>
          </span>
        </param>
        <param name="schemaContext">
          <span data-ttu-id="8ebab-133">XAML リーダーまたは XAML ライターの XAML スキーマ コンテキスト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-133">XAML schema context for XAML readers or XAML writers.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8ebab-134">XAML 名前空間と型の文字列名に基づいて、<see cref="T:System.Xaml.XamlType" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-134">Initializes a new instance of the <see cref="T:System.Xaml.XamlType" /> class based on the XAML namespace and a string name for the type.</span>
          </span>
          <span data-ttu-id="8ebab-135">このコンストラクターは、サポートする型システムと XAML スキーマ コンテキストにバッキングを持たないことがわかっている型の使用法の分析および XAML ノード記録にのみ使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-135">This constructor is exclusively for analysis and XAML-node recording of type usages that are known to not have backing in the supporting type system and XAML schema context.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ebab-136">このコンス トラクターを使用して、基になる型システムにマップされる XAML の型が使用可能な「不明」の種類に対してのみです。</span><span class="sxs-lookup"><span data-stu-id="8ebab-136">Use this constructor only for "unknown" types where a XAML type that maps to an underlying type system is unavailable.</span></span> <span data-ttu-id="8ebab-137">このコンス トラクターが、結果が得られない、<xref:System.Xaml.XamlType.IsUnknown%2A?displayProperty=nameWithType>は`true`します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-137">This constructor might not produce a result where <xref:System.Xaml.XamlType.IsUnknown%2A?displayProperty=nameWithType> is `true`.</span></span> <span data-ttu-id="8ebab-138">既定 reflector ロジックが、基になる型と型を報告する代わりに、<xref:System.Xaml.XamlLanguage.Object%2A?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="8ebab-138">Instead, the default reflector logic reports the underlying type as <xref:System.Xaml.XamlLanguage.Object%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="8ebab-139">ただし、この動作を変更のため、<xref:System.Xaml.XamlType.LookupIsUnknown%2A>をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="8ebab-139">However, this behavior can change because of the <xref:System.Xaml.XamlType.LookupIsUnknown%2A> override.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8ebab-140">1 つ以上の <paramref name="unknownTypeNamespace" />、<paramref name="unknownTypeName" />、または <paramref name="schemaContext" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-140">One or more of <paramref name="unknownTypeNamespace" />, <paramref name="unknownTypeName" />, or <paramref name="schemaContext" /> are <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AllowedContentTypes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; AllowedContentTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; AllowedContentTypes" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.AllowedContentTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowedContentTypes As IList(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ AllowedContentTypes { System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ebab-141">この <see cref="P:System.Xaml.XamlType.ContentProperty" /> の <see cref="T:System.Xaml.XamlType" /> の値として使用できる、型の読み取り専用のコレクションを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-141">Gets a read-only collection of the types that are usable as the <see cref="P:System.Xaml.XamlType.ContentProperty" /> value for this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8ebab-142">使用可能なコンテンツ型の読み取り専用のコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-142">A read-only collection of possible content types.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ebab-143">割り当て可能な型 (たとえば、許可されているコンテンツ型である基本型に割り当てることができる) 特定のコンテンツ タイプは考慮されませんの目的で複数の種類<xref:System.Xaml.XamlType.AllowedContentTypes%2A>です。</span><span class="sxs-lookup"><span data-stu-id="8ebab-143">Types that are assignable a specific content type (for example, assignable to a base type that is an allowed content type) are not considered multiple types for purposes of <xref:System.Xaml.XamlType.AllowedContentTypes%2A>.</span></span>  
  
 <span data-ttu-id="8ebab-144">既定値内部 CLR リフレクション手法を使用しないかどうか、 <xref:System.Xaml.XamlType>、このプロパティへの呼び出しを呼び出すことができます<xref:System.Xaml.XamlType.LookupAllowedContentTypes%2A>の上書きを<xref:System.Xaml.XamlType>クラスを派生します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-144">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupAllowedContentTypes%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseType">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType BaseType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType BaseType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.BaseType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseType As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ BaseType { System::Xaml::XamlType ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ebab-145">この XAML 型の直接の基本型の <see cref="T:System.Xaml.XamlType" /> を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-145">Gets the <see cref="T:System.Xaml.XamlType" /> for the immediate base type of this XAML type.</span>
          </span>
          <span data-ttu-id="8ebab-146">この値は、この <see cref="T:System.Xaml.XamlType" /> の基になる型とスキーマ コンテキストに基づいて決定されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-146">Determination of this value is based on the underlying type of this <see cref="T:System.Xaml.XamlType" /> and schema context.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8ebab-147">この XAML 型の直接の基本型の <see cref="T:System.Xaml.XamlType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-147">The <see cref="T:System.Xaml.XamlType" /> for the immediate base type of this XAML type.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ebab-148">既定値内部 CLR リフレクション手法を使用しないかどうか、 <xref:System.Xaml.XamlType>、このプロパティへの呼び出しを呼び出すことができます<xref:System.Xaml.XamlType.LookupBaseType%2A>の上書きを<xref:System.Xaml.XamlType>クラスを派生します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-148">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupBaseType%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="8ebab-149">戻り値およびその他の動作に関する詳細については、ドキュメントを参照して<xref:System.Xaml.XamlType.LookupBaseType%2A>この型にします。</span><span class="sxs-lookup"><span data-stu-id="8ebab-149">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupBaseType%2A> on this type.</span></span> <span data-ttu-id="8ebab-150">既定では、<xref:System.Xaml.XamlType.BaseType%2A>表す内部定数、<xref:System.Object>場合<xref:System.Xaml.XamlType.UnderlyingType%2A>は`null`します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-150">By default, <xref:System.Xaml.XamlType.BaseType%2A> returns an internal constant that represents an <xref:System.Object> if <xref:System.Xaml.XamlType.UnderlyingType%2A> is `null`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8ebab-151"><xref:System.Xaml.XamlType.LookupBaseType%2A> 仮想で、そのため、オーバーライドできます。</span><span class="sxs-lookup"><span data-stu-id="8ebab-151"><xref:System.Xaml.XamlType.LookupBaseType%2A> is virtual, and therefore, can be overridden.</span></span> <span data-ttu-id="8ebab-152">上書きされる可能性があります (悪意のあるものかどうかまたはそれ以外の場合) に報告された型の XAML 型情報が変更され、基になる CLR 型の型システム情報と予想される方法で整合不要になった。</span><span class="sxs-lookup"><span data-stu-id="8ebab-152">The override has the potential (whether for malicious purposes or otherwise) to change the reported type information about a XAML type so that it no longer aligns in an expected way with the type system information of its underlying CLR type.</span></span> <span data-ttu-id="8ebab-153">割り当て操作とアクセスのセキュリティ クリティカルなチェックには、基になる CLR 型を代わりに使用します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-153">For any security-critical checks of assignment operations and access, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanAssignTo">
      <MemberSignature Language="C#" Value="public virtual bool CanAssignTo (System.Xaml.XamlType xamlType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanAssignTo(class System.Xaml.XamlType xamlType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.CanAssignTo(System.Xaml.XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanAssignTo(System::Xaml::XamlType ^ xamlType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlType" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="xamlType">
          <span data-ttu-id="8ebab-154">現在の <see cref="T:System.Xaml.XamlType" /> に対して確認する型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-154">The type to check against the current <see cref="T:System.Xaml.XamlType" /> .</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8ebab-155">この <see cref="T:System.Xaml.XamlType" /> のインスタンスの割り当て可能な型のリスト内に、指定された <see cref="T:System.Xaml.XamlType" /> が含まれているかどうかを示す値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-155">Returns a value that indicates whether an instance of this <see cref="T:System.Xaml.XamlType" /> has the specified <see cref="T:System.Xaml.XamlType" /> in its list of assignable types.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8ebab-156">割り当て可能な型のリストに <paramref name="xamlType" /> が含まれている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-156">
              <see langword="true" /> if <paramref name="xamlType" /> is in the assignable types list; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ebab-157">割り当て可能な型では、参照型のすべての機能はありませんは、割り当てのため使用することができます。</span><span class="sxs-lookup"><span data-stu-id="8ebab-157">Although the assignable type does not have all the capabilities of the reference type, you can use it for assignment.</span></span> <span data-ttu-id="8ebab-158">たとえば、プロパティの値の型が一致するようにするのに割り当てを使用することができます。</span><span class="sxs-lookup"><span data-stu-id="8ebab-158">For example, you can use assignment to make type matches for the values of a property.</span></span> <span data-ttu-id="8ebab-159">XAML で割り当てることができる型の概念は、CLR 型システムへのキャストの概念に似ています。</span><span class="sxs-lookup"><span data-stu-id="8ebab-159">The concept of assignable types in XAML is similar to the concept of casting up in the CLR type system.</span></span> <span data-ttu-id="8ebab-160">たとえば、CLR 型システムでは、すべての型が、<xref:System.Object>割り当て可能な型のリストにします。</span><span class="sxs-lookup"><span data-stu-id="8ebab-160">For example, under a CLR type system, every type has an <xref:System.Object> in its assignable type list.</span></span>  
  
 <span data-ttu-id="8ebab-161">場合、2 つのいずれかの<xref:System.Xaml.XamlType>使用されるインスタンスの比較がある<xref:System.Xaml.XamlType.IsUnknown%2A>と等しい`true`、このメソッドは、特殊な不明なモードを返す`true`場合、2 つ<xref:System.Xaml.XamlType>のインスタンスが等しい。</span><span class="sxs-lookup"><span data-stu-id="8ebab-161">If one of the two <xref:System.Xaml.XamlType> instances that are used for comparison has <xref:System.Xaml.XamlType.IsUnknown%2A> equal to `true`, this method has a special Unknown mode that returns `true` if the two <xref:System.Xaml.XamlType> instances are equivalent.</span></span>  
  
 <span data-ttu-id="8ebab-162">既定の実装が CLR を使用して<xref:System.Type>から<xref:System.Xaml.XamlType.UnderlyingType%2A>この<xref:System.Xaml.XamlType>し、入力<xref:System.Xaml.XamlType>、および呼び出し<xref:System.Type.IsAssignableFrom%2A>です。</span><span class="sxs-lookup"><span data-stu-id="8ebab-162">The default implementation uses the CLR <xref:System.Type> from <xref:System.Xaml.XamlType.UnderlyingType%2A> for this <xref:System.Xaml.XamlType> and the input <xref:System.Xaml.XamlType>, and calls <xref:System.Type.IsAssignableFrom%2A>.</span></span> <span data-ttu-id="8ebab-163">割り当てられた型のさまざまな決定をする場合は、このメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="8ebab-163">Override this method if you want a different determination of assignable types.</span></span>  
  
 <span data-ttu-id="8ebab-164">Null を渡す`xamlType`、例外をスローしないと、常に返します`false`です。</span><span class="sxs-lookup"><span data-stu-id="8ebab-164">Passing a null `xamlType` does not throw an exception and always returns `false`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8ebab-165"><xref:System.Xaml.XamlType.CanAssignTo%2A> 仮想で、そのため、オーバーライドできます。</span><span class="sxs-lookup"><span data-stu-id="8ebab-165"><xref:System.Xaml.XamlType.CanAssignTo%2A> is virtual, and therefore, can be overridden.</span></span> <span data-ttu-id="8ebab-166">上書きされる可能性があります (悪意のあるものかどうかまたはそれ以外の場合) を基になる CLR 型の型キャストの動作に必要な方法で配置されなくされるように XAML 型の割り当てを変更します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-166">The override has the potential (whether for malicious purposes or otherwise) to change the assignability of a XAML type so that it no longer aligns in an expected way with the type-casting behavior of its underlying CLR type.</span></span> <span data-ttu-id="8ebab-167">割り当て操作とアクセスのセキュリティ クリティカルなチェックには、基になる CLR 型を代わりに使用します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-167">For any security-critical checks of assignment operations and access, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConstructionRequiresArguments">
      <MemberSignature Language="C#" Value="public bool ConstructionRequiresArguments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConstructionRequiresArguments" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.ConstructionRequiresArguments" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConstructionRequiresArguments As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ConstructionRequiresArguments { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ebab-168">型の有効なインスタンスを作成するために、この <see cref="T:System.Xaml.XamlType" /> が引数 (<see langword="x:TypeArguments" /> を通じたジェネリック制約、初期化テキスト、または他の XAML 手法) を持つ必要があるかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-168">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> must have arguments (generic constraints through <see langword="x:TypeArguments" />, initialization text, or other XAML techniques) to construct a valid instance of the type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8ebab-169">インスタンスの作成に引数値が必要な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-169">
              <see langword="true" /> if construction of an instance requires some argument value; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ebab-170">既定値内部 CLR リフレクション手法を使用しないかどうか、 <xref:System.Xaml.XamlType>、このプロパティへの呼び出しを呼び出すことができます<xref:System.Xaml.XamlType.LookupConstructionRequiresArguments%2A>の上書きを<xref:System.Xaml.XamlType>クラスを派生します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-170">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupConstructionRequiresArguments%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="8ebab-171">戻り値およびその他の動作に関する詳細については、ドキュメントを参照して<xref:System.Xaml.XamlType.LookupConstructionRequiresArguments%2A>この型にします。</span><span class="sxs-lookup"><span data-stu-id="8ebab-171">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupConstructionRequiresArguments%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentProperty">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlMember ContentProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlMember ContentProperty" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.ContentProperty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentProperty As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlMember ^ ContentProperty { System::Xaml::XamlMember ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ebab-172">この <see cref="T:System.Xaml.XamlMember" /> のコンテンツ プロパティの <see cref="T:System.Xaml.XamlType" /> 情報を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-172">Gets the <see cref="T:System.Xaml.XamlMember" /> information for the content property of this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8ebab-173">この <see cref="T:System.Xaml.XamlMember" /> のコンテンツ プロパティの <see cref="T:System.Xaml.XamlType" /> 情報。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-173">
              <see cref="T:System.Xaml.XamlMember" /> information for the content property of this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
          <span data-ttu-id="8ebab-174">コンテンツ プロパティがない場合は <see langword="null" /> になります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-174">May be <see langword="null" /> if no content property exists.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ebab-175">ときにバインディングを使用して、または CLR 型システムのバックアップ、XAML コンテンツ プロパティを指定できます型に適用することで<xref:System.Windows.Markup.ContentPropertyAttribute>種類の定義にします。</span><span class="sxs-lookup"><span data-stu-id="8ebab-175">When using the binding or backing of the CLR type system, the XAML content property can be specified on a type by applying <xref:System.Windows.Markup.ContentPropertyAttribute> to the type definition.</span></span>  
  
 <span data-ttu-id="8ebab-176">このプロパティに揃えます、 `[content property]` [MS-XAML] の仕様の情報項目。</span><span class="sxs-lookup"><span data-stu-id="8ebab-176">This property aligns to the `[content property]` information item in the [MS-XAML] specification.</span></span>  
  
 <span data-ttu-id="8ebab-177">既定値内部 CLR リフレクション手法を使用しないかどうか、 <xref:System.Xaml.XamlType>、このプロパティへの呼び出しを呼び出すことができます<xref:System.Xaml.XamlType.LookupContentProperty%2A>の上書きを<xref:System.Xaml.XamlType>クラスを派生します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-177">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupContentProperty%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="8ebab-178">戻り値およびその他の動作に関する詳細については、ドキュメントを参照して<xref:System.Xaml.XamlType.LookupContentProperty%2A>この型にします。</span><span class="sxs-lookup"><span data-stu-id="8ebab-178">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupContentProperty%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentWrappers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; ContentWrappers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; ContentWrappers" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.ContentWrappers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentWrappers As IList(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ ContentWrappers { System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ebab-179">厳密に型指定された <see langword="Collection&lt;T&gt;" /> の文字列などのように、型の一致が厳密でない場合に、コンテンツ プロパティのコンテンツをラップする型を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-179">Gets the types that are used to wrap content for a content property when it is not a strict type match, such as strings in a strongly typed <see langword="Collection&lt;T&gt;" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8ebab-180">使用可能なコンテンツ ラッパー型の読み取り専用のコレクション、または <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-180">A read-only collection of possible content wrapper types; otherwise, <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ebab-181">このプロパティは、型の一致が低下するためにラッパーがない場合は、`null`です。</span><span class="sxs-lookup"><span data-stu-id="8ebab-181">If there are no wrappers to account for type match loosening, this property is `null`.</span></span>  
  
 <span data-ttu-id="8ebab-182">型として評価される<xref:System.Xaml.XamlType.CanAssignTo%2A>特定のコンテンツ タイプは考慮されませんの目的で複数の種類<xref:System.Xaml.XamlType.ContentWrappers%2A>です。</span><span class="sxs-lookup"><span data-stu-id="8ebab-182">Types that evaluate as <xref:System.Xaml.XamlType.CanAssignTo%2A> for a specific content type are not considered multiple types for purposes of <xref:System.Xaml.XamlType.ContentWrappers%2A>.</span></span>  
  
 <span data-ttu-id="8ebab-183">CLR バインドで<xref:System.Xaml>と<xref:System.Xaml.XamlType>、として、型の XAML のコンテンツ ラッパー型を指定することができます、<xref:System.Windows.Markup.ContentWrapperAttribute>です。</span><span class="sxs-lookup"><span data-stu-id="8ebab-183">In the CLR binding for <xref:System.Xaml> and <xref:System.Xaml.XamlType>, the XAML content wrapper type can be specified on a type as a <xref:System.Windows.Markup.ContentWrapperAttribute>.</span></span>  
  
 <span data-ttu-id="8ebab-184">既定値内部 CLR リフレクション手法を使用しないかどうか、 <xref:System.Xaml.XamlType>、このプロパティへの呼び出しを呼び出すことができます<xref:System.Xaml.XamlType.LookupContentWrappers%2A>の上書きを<xref:System.Xaml.XamlType>クラスを派生します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-184">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupContentWrappers%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="8ebab-185">戻り値およびその他の動作に関する詳細については、ドキュメントを参照して<xref:System.Xaml.XamlType.LookupContentWrappers%2A>この型にします。</span><span class="sxs-lookup"><span data-stu-id="8ebab-185">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupContentWrappers%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeferringLoader">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt; DeferringLoader { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Xaml.XamlDeferringLoader&gt; DeferringLoader" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.DeferringLoader" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeferringLoader As XamlValueConverter(Of XamlDeferringLoader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlValueConverter&lt;System::Xaml::XamlDeferringLoader ^&gt; ^ DeferringLoader { System::Xaml::Schema::XamlValueConverter&lt;System::Xaml::XamlDeferringLoader ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ebab-186">この型の遅延読み込みの変換動作を表す <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-186">Gets the <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> that represents the deferred loading conversion behavior for this type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8ebab-187">この型の遅延読み込みの動作を表す <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> 制約のある <see cref="T:System.Xaml.XamlDeferringLoader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-187">The <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> with <see cref="T:System.Xaml.XamlDeferringLoader" /> constraint that represents the deferred loading behavior for this type.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ebab-188">WPF の XAML テンプレートの動作は、遅延読み込み動作の例を示します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-188">XAML template behavior in WPF is an example of deferred loading behavior.</span></span>  
  
 <span data-ttu-id="8ebab-189">既定値内部 CLR リフレクション手法を使用しないかどうか、 <xref:System.Xaml.XamlType>、このプロパティへの呼び出しを呼び出すことができます<xref:System.Xaml.XamlType.LookupDeferringLoader%2A>の上書きを<xref:System.Xaml.XamlType>クラスを派生します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-189">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupDeferringLoader%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="8ebab-190">戻り値およびその他の動作に関する詳細については、ドキュメントを参照して<xref:System.Xaml.XamlType.LookupDeferringLoader%2A>この型にします。</span><span class="sxs-lookup"><span data-stu-id="8ebab-190">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupDeferringLoader%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8ebab-191">現在のオブジェクトが、別のオブジェクトと等しいかどうかを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-191">Indicates whether the current object is equal to another object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="8ebab-192">このオブジェクトと比較するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-192">The object to compare with this object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8ebab-193">現在のオブジェクトが、別のオブジェクトと等しいかどうかを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-193">Indicates whether the current object is equal to another object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8ebab-194">現在のオブジェクトが <paramref name="obj" /> パラメーターと等しい場合は <see langword="true" />、それ以外の場合は <see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-194">
              <see langword="true" /> if the current object is equal to the <paramref name="obj" /> parameter; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Xaml.XamlType other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.Xaml.XamlType other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.Equals(System.Xaml.XamlType)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As XamlType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Xaml::XamlType ^ other);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="8ebab-195">このオブジェクトと比較するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-195">An object to compare with this object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8ebab-196">現在のオブジェクトが、同じ型の別のオブジェクトと等しいかどうかを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-196">Indicates whether the current object is equal to another object of the same type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8ebab-197">現在のオブジェクトが <paramref name="other" /> パラメーターと等しい場合は <see langword="true" />、それ以外の場合は <see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-197">
              <see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAliasedProperty">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlMember GetAliasedProperty (System.Xaml.XamlDirective directive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xaml.XamlMember GetAliasedProperty(class System.Xaml.XamlDirective directive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetAliasedProperty(System.Xaml.XamlDirective)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAliasedProperty (directive As XamlDirective) As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xaml::XamlMember ^ GetAliasedProperty(System::Xaml::XamlDirective ^ directive);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directive" Type="System.Xaml.XamlDirective" />
      </Parameters>
      <Docs>
        <param name="directive">
          <span data-ttu-id="8ebab-198">エイリアスが設定されたメンバーの検索対象となるディレクティブ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-198">The directive for which to find the aliased member.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8ebab-199">この <see cref="T:System.Xaml.XamlType" /> によってエイリアスが XAML ディレクティブに設定された XAML メンバーを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-199">Returns the XAML member that is aliased to a XAML directive by this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8ebab-200">見つかった場合はエイリアスが設定されたメンバー。それ以外の場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-200">The aliased member, if found; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ebab-201">既定値内部 CLR リフレクション手法を使用しないかどうか、 <xref:System.Xaml.XamlType>、このメソッドを呼び出すを呼び出すことができます<xref:System.Xaml.XamlType.LookupAliasedProperty%2A>の上書きを<xref:System.Xaml.XamlType>クラスを派生します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-201">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this method can invoke <xref:System.Xaml.XamlType.LookupAliasedProperty%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="8ebab-202">戻り値およびその他の動作に関する詳細については、ドキュメントを参照して<xref:System.Xaml.XamlType.LookupAliasedProperty%2A>この型にします。</span><span class="sxs-lookup"><span data-stu-id="8ebab-202">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupAliasedProperty%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllAttachableMembers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;System.Xaml.XamlMember&gt; GetAllAttachableMembers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.ICollection`1&lt;class System.Xaml.XamlMember&gt; GetAllAttachableMembers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetAllAttachableMembers" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllAttachableMembers () As ICollection(Of XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::ICollection&lt;System::Xaml::XamlMember ^&gt; ^ GetAllAttachableMembers();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.Xaml.XamlMember&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8ebab-203">この <see cref="T:System.Xaml.XamlType" /> で公開されているすべてのアタッチ可能なプロパティが含まれたコレクションを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-203">Returns a collection that contains all the attachable properties that are exposed by this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8ebab-204">0 個以上の <see cref="T:System.Xaml.XamlMember" /> 値が含まれたコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-204">A collection that contains zero or more <see cref="T:System.Xaml.XamlMember" /> values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ebab-205">各<xref:System.Xaml.XamlMember>返されたコレクションを含めることは、概念をサポートする値を<xref:System.Xaml.XamlMember>アタッチ可能なメンバーは、します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-205">Each <xref:System.Xaml.XamlMember> in the returned collection should contain values that support the concept that the <xref:System.Xaml.XamlMember> is an attachable member.</span></span> <span data-ttu-id="8ebab-206">たとえば、メンバーを返す必要があります`true`の<xref:System.Xaml.XamlMember.IsAttachable%2A>の型を<xref:System.Xaml.XamlMember.TargetType%2A>のようにします。</span><span class="sxs-lookup"><span data-stu-id="8ebab-206">For example, members should return `true` for <xref:System.Xaml.XamlMember.IsAttachable%2A>, a type for <xref:System.Xaml.XamlMember.TargetType%2A>, and so on.</span></span>  
  
 <span data-ttu-id="8ebab-207">既定値内部 CLR リフレクション手法を使用しないかどうか、 <xref:System.Xaml.XamlType>、このメソッドを呼び出すを呼び出すことができます<xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A>の上書きを<xref:System.Xaml.XamlType>クラスを派生します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-207">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this method can invoke <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="8ebab-208">戻り値およびその他の動作に関する詳細については、ドキュメントを参照して<xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A>この型にします。</span><span class="sxs-lookup"><span data-stu-id="8ebab-208">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllMembers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;System.Xaml.XamlMember&gt; GetAllMembers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.ICollection`1&lt;class System.Xaml.XamlMember&gt; GetAllMembers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetAllMembers" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllMembers () As ICollection(Of XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::ICollection&lt;System::Xaml::XamlMember ^&gt; ^ GetAllMembers();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.Xaml.XamlMember&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8ebab-209">この <see cref="T:System.Xaml.XamlType" /> で公開されているすべてのメンバーが含まれたコレクションを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-209">Returns a collection that contains all the members that are exposed by this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8ebab-210">0 個以上の <see cref="T:System.Xaml.XamlMember" /> 値が含まれたコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-210">A collection that contains zero or more <see cref="T:System.Xaml.XamlMember" /> values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ebab-211">このメソッドを呼び出すを呼び出すことができます<xref:System.Xaml.XamlType.LookupAllMembers%2A>の上書きを<xref:System.Xaml.XamlType>クラスを派生します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-211">Calls to this method can invoke <xref:System.Xaml.XamlType.LookupAllMembers%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAttachableMember">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlMember GetAttachableMember (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xaml.XamlMember GetAttachableMember(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetAttachableMember(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAttachableMember (name As String) As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xaml::XamlMember ^ GetAttachableMember(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="8ebab-212">
            <c>ownerTypeName.MemberName</c> フォームで取得するアタッチ可能メンバーの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-212">The name of the attachable member to get, in <c>ownerTypeName.MemberName</c> form.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8ebab-213">この <see cref="T:System.Xaml.XamlType" /> の特定の名前の付いたアタッチ可能メンバーを表す <see cref="T:System.Xaml.XamlMember" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-213">Returns a <see cref="T:System.Xaml.XamlMember" /> representing a specific named attachable member of this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8ebab-214">要求されたアタッチ可能メンバーの <see cref="T:System.Xaml.XamlMember" /> オブジェクト。その名前のアタッチ可能メンバーが存在しない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-214">A <see cref="T:System.Xaml.XamlMember" /> object for the requested attachable member; otherwise, <see langword="null" />, if no attachable member by that name exists.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ebab-215">このメソッドを呼び出すを呼び出すことができます<xref:System.Xaml.XamlType.LookupAttachableMember%2A>の上書きを<xref:System.Xaml.XamlType>クラスを派生します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-215">Calls to this method can invoke <xref:System.Xaml.XamlType.LookupAttachableMember%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8ebab-216"><xref:System.Xaml.XamlType.LookupAttachableMember%2A> 仮想で、そのため、オーバーライドできます。</span><span class="sxs-lookup"><span data-stu-id="8ebab-216"><xref:System.Xaml.XamlType.LookupAttachableMember%2A> is virtual, and therefore, can be overridden.</span></span> <span data-ttu-id="8ebab-217">上書きされる可能性があります (悪意のあるものかどうかまたはそれ以外の場合) と予想される方法で不要になった位置が揃うように、報告された XAML 型のメンバーを変更する、 <xref:System.ComponentModel.TypeDescriptor> `Get*`基になる CLR 型に関する情報。</span><span class="sxs-lookup"><span data-stu-id="8ebab-217">The override has the potential (whether for malicious purposes or otherwise) to change the reported members of a XAML type so that they no longer align in an expected way with the <xref:System.ComponentModel.TypeDescriptor> `Get*` information about the underlying CLR type.</span></span> <span data-ttu-id="8ebab-218">Reporting メンバーのセキュリティ クリティカルなチェックには、基になる CLR 型を代わりに使用します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-218">For any security-critical checks of member reporting, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8ebab-219">このオブジェクトのハッシュ コードを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-219">Returns the hash code for this object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8ebab-220">整数のハッシュ コード。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-220">An integer hash code.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMember">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlMember GetMember (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xaml.XamlMember GetMember(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetMember(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMember (name As String) As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xaml::XamlMember ^ GetMember(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="8ebab-221">取得するメンバーの名前 (文字列)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-221">The name of the member to get (as a string).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8ebab-222">この <see cref="T:System.Xaml.XamlMember" /> から、特定の名前が付けられたメンバーの <see cref="T:System.Xaml.XamlType" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-222">Returns a <see cref="T:System.Xaml.XamlMember" /> for a specific named member from this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8ebab-223">該当するメンバーが見つかった場合はメンバーの <see cref="T:System.Xaml.XamlMember" /> 情報。それ以外の場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-223">The <see cref="T:System.Xaml.XamlMember" /> information for the member, if such a member was found; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ebab-224">値は、`name`修飾すると想定されます。</span><span class="sxs-lookup"><span data-stu-id="8ebab-224">The value for `name` is expected to be unqualified.</span></span> <span data-ttu-id="8ebab-225">アタッチされたメンバーを示す型で修飾された名前を送信する必要があります<xref:System.Xaml.XamlType.GetAttachableMember%2A>代わりにします。</span><span class="sxs-lookup"><span data-stu-id="8ebab-225">Type-qualified names that indicate an attached member should be submitted to <xref:System.Xaml.XamlType.GetAttachableMember%2A> instead.</span></span> <span data-ttu-id="8ebab-226">プレフィックス付きのメンバー名は使用できません。プレフィックスは使用状況と、XAML 型システムは、このような使用法のコンテキストとプレフィックスをマップする方法を知ることはできません。</span><span class="sxs-lookup"><span data-stu-id="8ebab-226">Prefixed member names should not be used; a prefix is situational to a usage and the XAML type system cannot know the context of such a usage and how the prefix is mapped.</span></span>  
  
 <span data-ttu-id="8ebab-227">このメソッドを呼び出すを呼び出すことができます<xref:System.Xaml.XamlType.LookupMember%2A>の上書きを<xref:System.Xaml.XamlType>クラスを派生します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-227">Calls to this method can invoke <xref:System.Xaml.XamlType.LookupMember%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8ebab-228"><xref:System.Xaml.XamlType.LookupMember%2A> 仮想で、そのため、オーバーライドできます。</span><span class="sxs-lookup"><span data-stu-id="8ebab-228"><xref:System.Xaml.XamlType.LookupMember%2A> is virtual, and therefore, can be overridden.</span></span> <span data-ttu-id="8ebab-229">上書きされる可能性があります (悪意のあるものかどうかまたはそれ以外の場合) と予想される方法で不要になった位置が揃うように、報告された XAML 型のメンバーを変更する、 <xref:System.ComponentModel.TypeDescriptor> `Get*`基になる CLR 型に関する情報。</span><span class="sxs-lookup"><span data-stu-id="8ebab-229">The override has the potential (whether for malicious purposes or otherwise) to change the reported members of a XAML type so that they no longer align in an expected way with the <xref:System.ComponentModel.TypeDescriptor> `Get*` information about the underlying CLR type.</span></span> <span data-ttu-id="8ebab-230">Reporting メンバーのセキュリティ クリティカルなチェックには、基になる CLR 型を代わりに使用します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-230">For any security-critical checks of member reporting, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPositionalParameters">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; GetPositionalParameters (int parameterCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; GetPositionalParameters(int32 parameterCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetPositionalParameters(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPositionalParameters (parameterCount As Integer) As IList(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ GetPositionalParameters(int parameterCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parameterCount">
          <span data-ttu-id="8ebab-231">情報を取得する必要のある、特定の構文またはコンストラクター モードの個数 (アリティ)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-231">The count (arity) of the particular syntax or constructor mode that you want information about.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8ebab-232">マークアップ拡張型の場合は、この <see cref="T:System.Xaml.XamlType" /> の特定のマークアップ拡張機能の使用でサポートされている位置指定パラメーターの型を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-232">For markup extension types, returns the types of the positional parameters that are supported in a specific markup extension usage for this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8ebab-233">
            <see cref="T:System.Xaml.XamlType" /> 値のリスト。各 <see cref="T:System.Xaml.XamlType" /> は、構文内でその位置の型に相当します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-233">A list of <see cref="T:System.Xaml.XamlType" /> values, where each <see cref="T:System.Xaml.XamlType" /> is the type for that position in the syntax.</span>
          </span>
          <span data-ttu-id="8ebab-234">マークアップ拡張機能のマークアップ入力を指定する場合は、型を同一の順序で指定する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-234">You must specify the types in the same order when you supply markup input for the markup extension.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ebab-235">この API は、関連する場合は、こののみ<xref:System.Xaml.XamlType>マークアップ拡張機能を表します (<xref:System.Xaml.XamlType.IsMarkupExtension%2A>は`true`)。</span><span class="sxs-lookup"><span data-stu-id="8ebab-235">This API is only relevant if this <xref:System.Xaml.XamlType> represents a markup extension (<xref:System.Xaml.XamlType.IsMarkupExtension%2A> is `true`).</span></span>  
  
 <span data-ttu-id="8ebab-236">入力`parameterCount`を使用しない特定の位置指定パラメーターの型を要求します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-236">The input `parameterCount` is not for requesting the type of a specific positional parameter.</span></span> <span data-ttu-id="8ebab-237">マークアップ拡張機能の使用のアリティを指定することがあります。</span><span class="sxs-lookup"><span data-stu-id="8ebab-237">It is for specifying the arity of a markup extension usage.</span></span> <span data-ttu-id="8ebab-238">多くの場合、マークアップ拡張機能の使用は、複数の「署名」を持つし、区別するために位置指定パラメーターの異なるパラメーター アリティ (数) を使用します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-238">Markup extension usage often has multiple "signatures" and uses different parameter arity (count) of positional parameters to differentiate.</span></span> <span data-ttu-id="8ebab-239">ただし、重複 arities を許可して、差別化要因の位置指定パラメーターの型を使用するスキーマ コンテキストを構成することができます。</span><span class="sxs-lookup"><span data-stu-id="8ebab-239">However, you can configure a schema context to allow duplicate arities and use types of the positional parameters for differentiation.</span></span> <span data-ttu-id="8ebab-240">詳細については、「<xref:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="8ebab-240">For more information, see <xref:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity%2A>.</span></span> <span data-ttu-id="8ebab-241">特定のアリティ (数) の場合、パラメーターの位置と型が異なります。</span><span class="sxs-lookup"><span data-stu-id="8ebab-241">For a specific arity (count), the parameter positions and types can vary.</span></span> <span data-ttu-id="8ebab-242">特定のアリティのマークアップ拡張機能の使用の位置指定の種類を取得するには、最初に呼び出す<xref:System.Xaml.XamlType.GetPositionalParameters%2A>アリティ数を指定します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-242">To get the positional type of a specific arity's markup extension usage, you first call <xref:System.Xaml.XamlType.GetPositionalParameters%2A> specifying the arity count.</span></span> <span data-ttu-id="8ebab-243">返されるコレクションからその位置に項目を取得します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-243">Then get the item at that position from the returned collection.</span></span>  
  
 <span data-ttu-id="8ebab-244">このメソッドを呼び出すを呼び出すことができます<xref:System.Xaml.XamlType.LookupPositionalParameters%2A>の上書きを<xref:System.Xaml.XamlType>クラスを派生します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-244">Calls to this method can invoke <xref:System.Xaml.XamlType.LookupPositionalParameters%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXamlNamespaces">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;string&gt; GetXamlNamespaces ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;string&gt; GetXamlNamespaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetXamlNamespaces" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetXamlNamespaces () As IList(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IList&lt;System::String ^&gt; ^ GetXamlNamespaces();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8ebab-245">型が含まれている XAML 名前空間の文字列識別子のリストを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-245">Returns a list of string identifiers for XAML namespaces that the type is included in.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8ebab-246">文字列値のリスト。各文字列は XAML 名前空間の URI 識別子です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-246">A list of string values, where each string is the URI identifier for a XAML namespace.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ebab-247">一般的な XAML 名前空間の識別子は、URI 形式の文字列です。</span><span class="sxs-lookup"><span data-stu-id="8ebab-247">Typical XAML namespace identifiers are strings in URI form.</span></span>  
  
 <span data-ttu-id="8ebab-248">既定の実装の順序で、次のチェック: 構築で指定されている XAML 名前空間 (<xref:System.Xaml.XamlType.%23ctor%28System.String%2CSystem.String%2CSystem.Collections.Generic.IList%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlSchemaContext%29>署名のみ); とスキーマ コンテキストから提供されている名前空間。</span><span class="sxs-lookup"><span data-stu-id="8ebab-248">The default implementation checks the following, in order: the XAML namespace that is supplied in construction (<xref:System.Xaml.XamlType.%23ctor%28System.String%2CSystem.String%2CSystem.Collections.Generic.IList%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlSchemaContext%29> signature only); and the namespaces that are available from the schema context.</span></span> <span data-ttu-id="8ebab-249">これらはそれぞれ場合、 `null`、1 つの空の文字列を含む新しいリストが生成されます。</span><span class="sxs-lookup"><span data-stu-id="8ebab-249">If these are each `null`, a new list is generated that contains a single empty string.</span></span> <span data-ttu-id="8ebab-250">参照方法を変更するには、このメソッドをオーバーライドすることができます。</span><span class="sxs-lookup"><span data-stu-id="8ebab-250">You can override this method to change the lookup methodology.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoker">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlTypeInvoker Invoker { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlTypeInvoker Invoker" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.Invoker" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Invoker As XamlTypeInvoker" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlTypeInvoker ^ Invoker { System::Xaml::Schema::XamlTypeInvoker ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlTypeInvoker</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ebab-251">この <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> に関連付けられている <see cref="T:System.Xaml.XamlType" /> の実装を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-251">Gets the <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> implementation that is associated with this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8ebab-252">この <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> に関連付けられている <see cref="T:System.Xaml.XamlType" /> 実装。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-252">The <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> implementation that is associated with this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ebab-253">既定値内部 CLR リフレクション手法を使用しないかどうか、 <xref:System.Xaml.XamlType>、呼び出し元<xref:System.Xaml.XamlType.Invoker%2A>いずれかを呼び出すことができます<xref:System.Xaml.XamlType.LookupInvoker%2A>またはそのメソッドの特定のオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="8ebab-253">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calling <xref:System.Xaml.XamlType.Invoker%2A> can invoke either <xref:System.Xaml.XamlType.LookupInvoker%2A> or a specific override of that method.</span></span> <span data-ttu-id="8ebab-254">戻り値およびその他の動作に関する詳細については、ドキュメントを参照して<xref:System.Xaml.XamlType.LookupInvoker%2A>この型にします。</span><span class="sxs-lookup"><span data-stu-id="8ebab-254">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupInvoker%2A> on this type.</span></span>  
  
 <span data-ttu-id="8ebab-255">場合、<xref:System.Xaml.XamlType.LookupInvoker%2A>オーバーライド`null`、既定の実装を返す場合、または`null`が不足しているのため<xref:System.Xaml.XamlType.UnderlyingType%2A>この<xref:System.Xaml.XamlType>、し<xref:System.Xaml.XamlType.Invoker%2A>を返します<xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="8ebab-255">If a <xref:System.Xaml.XamlType.LookupInvoker%2A> override returns `null`, or if the default implementation returns `null` because of lack of <xref:System.Xaml.XamlType.UnderlyingType%2A> for this <xref:System.Xaml.XamlType>, then <xref:System.Xaml.XamlType.Invoker%2A> returns <xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAmbient">
      <MemberSignature Language="C#" Value="public bool IsAmbient { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAmbient" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsAmbient" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAmbient As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAmbient { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ebab-256">この <see cref="T:System.Xaml.XamlType" /> が XAML 定義によってアンビエント型を表すかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-256">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents an ambient type, as per the XAML definition.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8ebab-257">この <see cref="T:System.Xaml.XamlType" /> がアンビエント型を表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-257">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents an ambient type; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ebab-258">既定値内部 CLR リフレクション手法を使用しないかどうか、 <xref:System.Xaml.XamlType>、このプロパティへの呼び出しを呼び出すことができます<xref:System.Xaml.XamlType.LookupIsAmbient%2A>の上書きを<xref:System.Xaml.XamlType>クラスを派生します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-258">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsAmbient%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="8ebab-259">戻り値およびその他の動作に関する詳細については、ドキュメントを参照して<xref:System.Xaml.XamlType.LookupIsAmbient%2A>この型にします。</span><span class="sxs-lookup"><span data-stu-id="8ebab-259">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupIsAmbient%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsArray">
      <MemberSignature Language="C#" Value="public bool IsArray { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsArray" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsArray" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsArray As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsArray { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ebab-260">この <see cref="T:System.Xaml.XamlType" /> が配列を表すかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-260">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents an array.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8ebab-261">この <see cref="T:System.Xaml.XamlType" /> が配列を表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-261">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents an array; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ebab-262">既定値内部 CLR リフレクション手法を使用しないかどうか、 <xref:System.Xaml.XamlType>、このプロパティへの呼び出しを呼び出すことができます<xref:System.Xaml.XamlType.LookupCollectionKind%2A>の上書きを<xref:System.Xaml.XamlType>クラスを派生します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-262">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupCollectionKind%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="8ebab-263">戻り値およびその他の動作に関する詳細については、ドキュメントを参照して<xref:System.Xaml.XamlType.LookupCollectionKind%2A>この型にします。</span><span class="sxs-lookup"><span data-stu-id="8ebab-263">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupCollectionKind%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCollection">
      <MemberSignature Language="C#" Value="public bool IsCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCollection" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsCollection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCollection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCollection { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ebab-264">この <see cref="T:System.Xaml.XamlType" /> がコレクションを表すかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-264">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8ebab-265">この <see cref="T:System.Xaml.XamlType" /> がコレクションを表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-265">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a collection; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ebab-266">既定値内部 CLR リフレクション手法を使用しないかどうか、 <xref:System.Xaml.XamlType>、このプロパティへの呼び出しを呼び出すことができます<xref:System.Xaml.XamlType.LookupCollectionKind%2A>の上書きを<xref:System.Xaml.XamlType>クラスを派生します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-266">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupCollectionKind%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="8ebab-267">戻り値およびその他の動作に関する詳細については、ドキュメントを参照して<xref:System.Xaml.XamlType.LookupCollectionKind%2A>この型にします。</span><span class="sxs-lookup"><span data-stu-id="8ebab-267">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupCollectionKind%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsConstructible">
      <MemberSignature Language="C#" Value="public bool IsConstructible { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsConstructible" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsConstructible" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsConstructible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsConstructible { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ebab-268">この <see cref="T:System.Xaml.XamlType" /> が XAML 定義によって構築可能な型を表すかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-268">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a constructible type, as per the XAML definition.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8ebab-269">この <see cref="T:System.Xaml.XamlType" /> が構築可能な型を表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-269">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a constructible type; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ebab-270">このプロパティに揃えます、 `[is default constructible]` [MS-XAML] の仕様の情報項目。</span><span class="sxs-lookup"><span data-stu-id="8ebab-270">This property aligns to the `[is default constructible]` information item in the [MS-XAML] specification.</span></span>  
  
 <span data-ttu-id="8ebab-271">既定値内部 CLR リフレクション手法を使用しないかどうか、 <xref:System.Xaml.XamlType>、このプロパティへの呼び出しを呼び出すことができます<xref:System.Xaml.XamlType.LookupIsConstructible%2A>の上書きを<xref:System.Xaml.XamlType>クラスを派生します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-271">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsConstructible%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="8ebab-272">戻り値およびその他の動作に関する詳細については、ドキュメントを参照して<xref:System.Xaml.XamlType.LookupIsConstructible%2A>この型にします。</span><span class="sxs-lookup"><span data-stu-id="8ebab-272">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupIsConstructible%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlType.ConstructionRequiresArguments" />
      </Docs>
    </Member>
    <Member MemberName="IsDictionary">
      <MemberSignature Language="C#" Value="public bool IsDictionary { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDictionary" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsDictionary" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDictionary As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDictionary { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ebab-273">この <see cref="T:System.Xaml.XamlType" /> が XAML 定義によってディクショナリを表すかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-273">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a dictionary, as per the XAML definition.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8ebab-274">この <see cref="T:System.Xaml.XamlType" /> がディクショナリを表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-274">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a dictionary; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ebab-275">このプロパティに揃えます、 `[is dictionary]` [MS-XAML] の仕様の情報項目。</span><span class="sxs-lookup"><span data-stu-id="8ebab-275">This property aligns to the `[is dictionary]` information item in the [MS-XAML] specification.</span></span>  
  
 <span data-ttu-id="8ebab-276">既定値内部 CLR リフレクション手法を使用しないかどうか、 <xref:System.Xaml.XamlType>、このプロパティへの呼び出しを呼び出すことができます<xref:System.Xaml.XamlType.LookupCollectionKind%2A>の上書きを<xref:System.Xaml.XamlType>クラスを派生します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-276">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupCollectionKind%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="8ebab-277">戻り値およびその他の動作に関する詳細については、ドキュメントを参照して<xref:System.Xaml.XamlType.LookupCollectionKind%2A>この型にします。</span><span class="sxs-lookup"><span data-stu-id="8ebab-277">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupCollectionKind%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsGeneric">
      <MemberSignature Language="C#" Value="public bool IsGeneric { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsGeneric" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsGeneric" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsGeneric As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsGeneric { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ebab-278">この <see cref="T:System.Xaml.XamlType" /> がジェネリック型を表すかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-278">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a generic type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8ebab-279">この <see cref="T:System.Xaml.XamlType" /> がジェネリック型を表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-279">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a generic type; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ebab-280">このプロパティは null 値をチェックするヘルパー プロパティ<xref:System.Xaml.XamlType.TypeArguments%2A>です。</span><span class="sxs-lookup"><span data-stu-id="8ebab-280">This property is a helper property that checks for a null value of <xref:System.Xaml.XamlType.TypeArguments%2A>.</span></span> <span data-ttu-id="8ebab-281">固有の仕様がない`Lookup`に関連するメソッド<xref:System.Xaml.XamlType.IsGeneric%2A>です。</span><span class="sxs-lookup"><span data-stu-id="8ebab-281">There is no specific `Lookup` method related to <xref:System.Xaml.XamlType.IsGeneric%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMarkupExtension">
      <MemberSignature Language="C#" Value="public bool IsMarkupExtension { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMarkupExtension" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsMarkupExtension" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMarkupExtension As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMarkupExtension { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ebab-282">この <see cref="T:System.Xaml.XamlType" /> がマークアップ拡張機能を表すかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-282">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a markup extension.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8ebab-283">この <see cref="T:System.Xaml.XamlType" /> がマークアップ拡張機能を表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-283">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a markup extension; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ebab-284">XAML の仕様の用語では、この型に割り当てることにする必要があります`x:MarkupExtension`を返すために`true`の<xref:System.Xaml.XamlType.IsMarkupExtension%2A>します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-284">In XAML specification terms, this type must be assignable to `x:MarkupExtension` in order to return `true` for <xref:System.Xaml.XamlType.IsMarkupExtension%2A>.</span></span>  
  
 <span data-ttu-id="8ebab-285">既定値内部 CLR リフレクション手法を使用しないかどうか、 <xref:System.Xaml.XamlType>、このプロパティへの呼び出しを呼び出すことができます<xref:System.Xaml.XamlType.LookupIsMarkupExtension%2A>の上書きを<xref:System.Xaml.XamlType>クラスを派生します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-285">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsMarkupExtension%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="8ebab-286">戻り値およびその他の動作に関する詳細については、ドキュメントを参照して<xref:System.Xaml.XamlType.LookupIsMarkupExtension%2A>この型にします。</span><span class="sxs-lookup"><span data-stu-id="8ebab-286">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupIsMarkupExtension%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNameScope">
      <MemberSignature Language="C#" Value="public bool IsNameScope { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNameScope" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsNameScope" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNameScope As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNameScope { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ebab-287">この <see cref="T:System.Xaml.XamlType" /> が XAML 定義によって XAML 名前スコープを表すかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-287">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a XAML namescope, as per the XAML definition.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8ebab-288">この <see cref="T:System.Xaml.XamlType" /> が XAML 名前スコープを表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-288">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a XAML namescope; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ebab-289">XAML 名前スコープまたは複数のためのプロパティの名前の一意性を強制する`x:Name`  / `[name property]`です。</span><span class="sxs-lookup"><span data-stu-id="8ebab-289">A XAML namescope enforces the name uniqueness of the property or properties used for `x:Name` / `[name property]`.</span></span> <span data-ttu-id="8ebab-290">場合<xref:System.Xaml.XamlType.IsNameScope%2A>は`true`一意性を適用するためのいくつかのメカニズムが存在し、XAML 名前空間を所有しているこの種類の観点から評価する必要があります。</span><span class="sxs-lookup"><span data-stu-id="8ebab-290">If <xref:System.Xaml.XamlType.IsNameScope%2A> is `true`, some mechanism for enforcing uniqueness should exist and should evaluate from the perspective of this type owning a XAML namescope.</span></span> <span data-ttu-id="8ebab-291">XAML 名前スコープは、別の XAML 名前スコープで所有されている型が検出されるまで、型のコンテンツを拡張します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-291">The XAML namescope then extends to the content of the type until another XAML namescope-owning type is encountered.</span></span>  
  
 <span data-ttu-id="8ebab-292">このプロパティに揃えます、 `[is name scope]` [MS-XAML] の仕様の情報項目。</span><span class="sxs-lookup"><span data-stu-id="8ebab-292">This property aligns to the `[is name scope]` information item in the [MS-XAML] specification.</span></span>  
  
 <span data-ttu-id="8ebab-293">既定値内部 CLR リフレクション手法を使用しないかどうか、 <xref:System.Xaml.XamlType>、このプロパティへの呼び出しを呼び出すことができます<xref:System.Xaml.XamlType.LookupIsNameScope%2A>の上書きを<xref:System.Xaml.XamlType>クラスを派生します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-293">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsNameScope%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNameValid">
      <MemberSignature Language="C#" Value="public bool IsNameValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNameValid" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsNameValid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNameValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNameValid { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ebab-294">この <see cref="T:System.Xaml.XamlType" /> が <see cref="P:System.Xaml.XamlType.Name" /> に有効な <see langword="xamlName" /> 文字列を使用して初期化されているかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-294">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> is initialized by using a valid <see langword="xamlName" /> string as its <see cref="P:System.Xaml.XamlType.Name" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8ebab-295">この <see cref="T:System.Xaml.XamlType" /> が有効な <see langword="true" /> 文字列を使用して初期化されている場合は <see langword="xamlName" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-295">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> is initialized by using a valid <see langword="xamlName" /> string; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNullable">
      <MemberSignature Language="C#" Value="public bool IsNullable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNullable" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsNullable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNullable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNullable { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ebab-296">この <see cref="T:System.Xaml.XamlType" /> が XAML 定義によって null 許容型を表すかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-296">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a nullable type, as per the XAML definition.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8ebab-297">この <see cref="T:System.Xaml.XamlType" /> が null 許容型を表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-297">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a nullable type; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ebab-298">このプロパティに揃えます、 `[is nullable]` [MS-XAML] の仕様の情報項目。</span><span class="sxs-lookup"><span data-stu-id="8ebab-298">This property aligns to the `[is nullable]` information item in the [MS-XAML] specification.</span></span>  
  
 <span data-ttu-id="8ebab-299">既定値内部 CLR リフレクション手法を使用していないかどうか、 <xref:System.Xaml.XamlType>、このプロパティへの呼び出しを呼び出すことができます<xref:System.Xaml.XamlType.LookupIsNullable%2A>の上書きを<xref:System.Xaml.XamlType>クラスを派生します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-299">If you are not using the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsNullable%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPublic">
      <MemberSignature Language="C#" Value="public bool IsPublic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPublic" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsPublic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPublic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPublic { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ebab-300">この <see cref="T:System.Xaml.XamlType" /> が関連する型システムでパブリック型を表すかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-300">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a public type in the relevant type system.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8ebab-301">この <see cref="T:System.Xaml.XamlType" /> がパブリック型を表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-301">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a public type; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ebab-302">既定値内部 CLR リフレクション手法を使用しないかどうか、 <xref:System.Xaml.XamlType>、このプロパティへの呼び出しを呼び出すことができます<xref:System.Xaml.XamlType.LookupIsPublic%2A>の上書きを<xref:System.Xaml.XamlType>クラスを派生します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-302">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsPublic%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8ebab-303"><xref:System.Xaml.XamlType.LookupIsPublic%2A> 仮想で、そのため、オーバーライドできます。</span><span class="sxs-lookup"><span data-stu-id="8ebab-303"><xref:System.Xaml.XamlType.LookupIsPublic%2A> is virtual, and therefore, can be overridden.</span></span> <span data-ttu-id="8ebab-304">上書きされる可能性があります (悪意のあるものかどうかまたはそれ以外の場合)、基になる CLR 型の型システムとアクセスの情報と予想される方法で整合不要になったように XAML 型についての報告されたアクセスを変更します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-304">The override has the potential (whether for malicious purposes or otherwise) to change the reported access information about a XAML type so that it no longer aligns in an expected way with the type system and access information of its underlying CLR type.</span></span> <span data-ttu-id="8ebab-305">割り当て操作とアクセスのセキュリティ クリティカルなチェックには、基になる CLR 型を代わりに使用します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-305">For any security-critical checks of assignment operations and access, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUnknown">
      <MemberSignature Language="C#" Value="public bool IsUnknown { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUnknown" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsUnknown" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsUnknown As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUnknown { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ebab-306">この <see cref="T:System.Xaml.XamlType" /> が基になる型システムで解決できない型を表すかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-306">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a type that cannot be resolved in the underlying type system.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8ebab-307">この <see cref="T:System.Xaml.XamlType" /> が解決できない型を表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-307">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents an unresolvable type; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ebab-308">既定値内部 CLR リフレクション手法を使用しないかどうか、 <xref:System.Xaml.XamlType>、このプロパティへの呼び出しを呼び出すことができます<xref:System.Xaml.XamlType.LookupIsUnknown%2A>の上書きを<xref:System.Xaml.XamlType>クラスを派生します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-308">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsUnknown%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span>  
  
 <span data-ttu-id="8ebab-309">関係する読み込みパスの<xref:System.Xaml.XamlObjectWriter>、<xref:System.Xaml.XamlType>を持つ`true`の<xref:System.Xaml.XamlType.IsUnknown%2A>オブジェクト グラフに書き込まれることはできません。</span><span class="sxs-lookup"><span data-stu-id="8ebab-309">For a load path that involves <xref:System.Xaml.XamlObjectWriter>, a <xref:System.Xaml.XamlType> that has `true` for <xref:System.Xaml.XamlType.IsUnknown%2A> cannot be written into an object graph.</span></span> <span data-ttu-id="8ebab-310">既定の実装  <xref:System.Xaml> 、<xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A?displayProperty=nameWithType>スローされます、<xref:System.Xaml.XamlObjectWriterException>ときに、関連する<xref:System.Xaml.XamlType>レポート`true`の<xref:System.Xaml.XamlType.IsUnknown%2A>です。</span><span class="sxs-lookup"><span data-stu-id="8ebab-310">Under the default implementations in <xref:System.Xaml> , the <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A?displayProperty=nameWithType> call throws a <xref:System.Xaml.XamlObjectWriterException> when the relevant <xref:System.Xaml.XamlType> reports `true` for <xref:System.Xaml.XamlType.IsUnknown%2A>.</span></span> <span data-ttu-id="8ebab-311">渡さないでください、<xref:System.Xaml.XamlType>を持つ<xref:System.Xaml.XamlType.IsUnknown%2A>として`true`から例外を処理する準備済みでない限り、 <xref:System.Xaml.XamlObjectWriter>、その他の方法を調整することも、<xref:System.Xaml.XamlObjectWriter>動作や、オブジェクト グラフを作成する前に、XAML ノード ストリーム。</span><span class="sxs-lookup"><span data-stu-id="8ebab-311">You should not pass a <xref:System.Xaml.XamlType> that has <xref:System.Xaml.XamlType.IsUnknown%2A> as `true` unless you are prepared to handle the exceptions from <xref:System.Xaml.XamlObjectWriter>, or you have other ways to adjust the <xref:System.Xaml.XamlObjectWriter> behavior or the XAML node stream prior to writing the object graph.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUsableDuringInitialization">
      <MemberSignature Language="C#" Value="public bool IsUsableDuringInitialization { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUsableDuringInitialization" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsUsableDuringInitialization" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsUsableDuringInitialization As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUsableDuringInitialization { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ebab-312">XAML の初期化中にこの <see cref="T:System.Xaml.XamlType" /> がトップダウンで構築されるかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-312">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> is built top-down during XAML initialization.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8ebab-313">XAML の初期化中にこの <see cref="T:System.Xaml.XamlType" /> がトップダウンで構築される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-313">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> is built top-down during XAML initialization; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="8ebab-314">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-314">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ebab-315">上から下へは、オブジェクト グラフを作成するときに、XAML プロセッサの動作を概算する比喩です。</span><span class="sxs-lookup"><span data-stu-id="8ebab-315">Top-down is a metaphor that approximates XAML processor behavior when creating the object graph.</span></span> <span data-ttu-id="8ebab-316">トップダウンをビルドすると、型がインスタンス化される、親にアタッチされているし、そのプロパティが設定されます。</span><span class="sxs-lookup"><span data-stu-id="8ebab-316">When built top-down, a type is instantiated, attached to the parent, and then has its properties set.</span></span> <span data-ttu-id="8ebab-317">トップダウンの構築では、ハンドラーのプロパティ変更の複数回の呼び出しで回避できます。</span><span class="sxs-lookup"><span data-stu-id="8ebab-317">Top-down construction avoids invoking property-changed handlers multiple times.</span></span> <span data-ttu-id="8ebab-318">このような処理は、オブジェクト グラフに波及し、そのため、複数のハンドラーの呼び出しを排除し、オブジェクト グラフの起動時のパフォーマンスの最適化を提供します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-318">Such handling ripples up the object graph and therefore, eliminates the multiple handler calls and provides a performance optimization for startup of the object graph.</span></span>  
  
 <span data-ttu-id="8ebab-319">既定値内部 CLR リフレクション手法を使用しないかどうか、 <xref:System.Xaml.XamlType>、このプロパティへの呼び出しを呼び出すことができます<xref:System.Xaml.XamlType.LookupUsableDuringInitialization%2A>の上書きを<xref:System.Xaml.XamlType>クラスを派生します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-319">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupUsableDuringInitialization%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="8ebab-320">戻り値およびその他の動作に関する詳細については、ドキュメントを参照して<xref:System.Xaml.XamlType.LookupUsableDuringInitialization%2A>この型にします。</span><span class="sxs-lookup"><span data-stu-id="8ebab-320">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupUsableDuringInitialization%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Markup.XamlReader.LoadAsync(System.IO.Stream)" />
        <altmember cref="P:System.Windows.FrameworkElement.IsInitialized" />
      </Docs>
    </Member>
    <Member MemberName="IsWhitespaceSignificantCollection">
      <MemberSignature Language="C#" Value="public bool IsWhitespaceSignificantCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWhitespaceSignificantCollection" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsWhitespaceSignificantCollection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsWhitespaceSignificantCollection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsWhitespaceSignificantCollection { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ebab-321">この <see cref="T:System.Xaml.XamlType" /> が XML 定義によって有意な空白のコレクションを表すかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-321">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a whitespace significant collection, as per the XML definition.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8ebab-322">この <see cref="T:System.Xaml.XamlType" /> が有意な空白のコレクションを表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-322">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a whitespace significant collection; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ebab-323">既定値内部 CLR リフレクション手法を使用しないかどうか、 <xref:System.Xaml.XamlType>、このプロパティへの呼び出しを呼び出すことができます<xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A>の上書きを<xref:System.Xaml.XamlType>クラスを派生します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-323">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="8ebab-324">戻り値およびその他の動作に関する詳細については、ドキュメントを参照して<xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A>この型にします。</span><span class="sxs-lookup"><span data-stu-id="8ebab-324">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsXData">
      <MemberSignature Language="C#" Value="public bool IsXData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsXData" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsXData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsXData As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsXData { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ebab-325">この <see cref="T:System.Xaml.XamlType" /> が XAML 定義によって XML <see langword="XDATA" /> を表すかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-325">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents XML <see langword="XDATA" />, as per the XAML definition.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8ebab-326">この <see cref="T:System.Xaml.XamlType" /> が <see langword="true" /> を表す場合は <see langword="XDATA" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-326">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents <see langword="XDATA" />; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ebab-327">このプロパティに揃えます、 `[is xdata]` [MS-XAML] の仕様の情報項目。</span><span class="sxs-lookup"><span data-stu-id="8ebab-327">This property aligns to the `[is xdata]` information item in the [MS-XAML] specification.</span></span>  
  
 <span data-ttu-id="8ebab-328">既定値内部 CLR リフレクション手法を使用しないかどうか、 <xref:System.Xaml.XamlType>、このプロパティへの呼び出しを呼び出すことができます<xref:System.Xaml.XamlType.LookupIsXData%2A>の上書きを<xref:System.Xaml.XamlType>クラスを派生します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-328">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsXData%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="8ebab-329">戻り値およびその他の動作に関する詳細については、ドキュメントを参照して<xref:System.Xaml.XamlType.LookupIsXData%2A>この型にします。</span><span class="sxs-lookup"><span data-stu-id="8ebab-329">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupIsXData%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemType">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType ItemType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType ItemType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.ItemType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemType As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ ItemType { System::Xaml::XamlType ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ebab-330">この <see cref="T:System.Xaml.XamlType" /> の <see langword="Items" /> プロパティの型情報を提供する値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-330">Gets a value that provides the type information for the <see langword="Items" /> property of this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8ebab-331">コレクション内のアイテムの型の <see cref="T:System.Xaml.XamlType" /> オブジェクト。この <see cref="T:System.Xaml.XamlType" /> がコレクションを表していない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-331">A <see cref="T:System.Xaml.XamlType" /> object for the type of the items in the collection; otherwise, <see langword="null" />, if this <see cref="T:System.Xaml.XamlType" /> does not represent a collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ebab-332">このプロパティは関連する場合は、こののみ<xref:System.Xaml.XamlType>コレクションを表します (<xref:System.Xaml.XamlType.IsCollection%2A>は`true`)。</span><span class="sxs-lookup"><span data-stu-id="8ebab-332">This property is only relevant if this <xref:System.Xaml.XamlType> represents a collection (<xref:System.Xaml.XamlType.IsCollection%2A> is `true`).</span></span> <span data-ttu-id="8ebab-333">`Items`プロパティは、どのようなプロパティは、その種類のコレクションまたは配列に項目を保持します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-333">The `Items` property is whatever property holds items in that type of collection or array.</span></span>  
  
 <span data-ttu-id="8ebab-334">既定値内部 CLR リフレクション手法を使用しないかどうか、 <xref:System.Xaml.XamlType>、このプロパティへの呼び出しを呼び出すことができます<xref:System.Xaml.XamlType.LookupItemType%2A>の上書きを<xref:System.Xaml.XamlType>クラスを派生します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-334">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupItemType%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="8ebab-335">戻り値およびその他の動作に関する詳細については、ドキュメントを参照して<xref:System.Xaml.XamlType.LookupItemType%2A>この型にします。</span><span class="sxs-lookup"><span data-stu-id="8ebab-335">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupItemType%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyType">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType KeyType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType KeyType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.KeyType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyType As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ KeyType { System::Xaml::XamlType ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ebab-336">この <see cref="T:System.Xaml.XamlType" /> がディクショナリを表す場合、この <see cref="T:System.Xaml.XamlType" /> のキー プロパティの型情報を提供する値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-336">Gets a value that provides the type information for the key property of this <see cref="T:System.Xaml.XamlType" />, if the <see cref="T:System.Xaml.XamlType" /> represents a dictionary.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8ebab-337">ディクショナリを使用する場合はキーの型の <see cref="T:System.Xaml.XamlType" /> オブジェクト。この <see cref="T:System.Xaml.XamlType" /> がディクショナリを表していない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-337">A <see cref="T:System.Xaml.XamlType" /> object for the type of the key for dictionary usage, otherwise, <see langword="null" />, if this <see cref="T:System.Xaml.XamlType" /> does not represent a dictionary.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ebab-338">このプロパティは関連する場合は、こののみ<xref:System.Xaml.XamlType>ディクショナリを表します (<xref:System.Xaml.XamlType.IsDictionary%2A>は`true`)。</span><span class="sxs-lookup"><span data-stu-id="8ebab-338">This property is only relevant if this <xref:System.Xaml.XamlType> represents a dictionary (<xref:System.Xaml.XamlType.IsDictionary%2A> is `true`).</span></span>  
  
 <span data-ttu-id="8ebab-339">既定値内部 CLR リフレクション手法を使用しないかどうか、 <xref:System.Xaml.XamlType>、このプロパティへの呼び出しを呼び出すことができます<xref:System.Xaml.XamlType.LookupKeyType%2A>の上書きを<xref:System.Xaml.XamlType>クラスを派生します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-339">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupKeyType%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="8ebab-340">戻り値およびその他の動作に関する詳細については、ドキュメントを参照して<xref:System.Xaml.XamlType.LookupKeyType%2A>この型にします。</span><span class="sxs-lookup"><span data-stu-id="8ebab-340">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupKeyType%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupAliasedProperty">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlMember LookupAliasedProperty (System.Xaml.XamlDirective directive);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlMember LookupAliasedProperty(class System.Xaml.XamlDirective directive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupAliasedProperty(System.Xaml.XamlDirective)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupAliasedProperty (directive As XamlDirective) As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlMember ^ LookupAliasedProperty(System::Xaml::XamlDirective ^ directive);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directive" Type="System.Xaml.XamlDirective" />
      </Parameters>
      <Docs>
        <param name="directive">
          <span data-ttu-id="8ebab-341">エイリアスが設定されたメンバーの検索対象となるディレクティブ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-341">The directive for which to find the aliased member.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8ebab-342">この <see cref="T:System.Xaml.XamlType" /> によってエイリアスが XAML ディレクティブに設定された XAML メンバーを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-342">Returns the XAML member that is aliased to a XAML directive by this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8ebab-343">見つかった場合はエイリアスが設定されたメンバー。それ以外の場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-343">The aliased member, if found; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ebab-344">呼び出し元から値を取得するときに、このメソッドを呼び出すことができます<xref:System.Xaml.XamlType.GetAliasedProperty%2A>です。</span><span class="sxs-lookup"><span data-stu-id="8ebab-344">This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.GetAliasedProperty%2A>.</span></span>  
  
 <span data-ttu-id="8ebab-345">既定の実装は、次の XAML ディレクティブの結果を返すことができます:`Key`です。`Name`;`Uid`; and `xml:lang`.</span><span class="sxs-lookup"><span data-stu-id="8ebab-345">The default implementation can return results for the following XAML directives: `Key`; `Name`; `Uid`; and `xml:lang`.</span></span> <span data-ttu-id="8ebab-346">基になるリフレクションに依存およびが返すもこれらの値`null`エイリアス プロパティが見つからない場合。</span><span class="sxs-lookup"><span data-stu-id="8ebab-346">Values for these depend on underlying reflection and might still return `null` if no aliased property is found.</span></span>  
  
 <span data-ttu-id="8ebab-347">既定内部の CLR リフレクションには依存しないと、XAML 型システム情報または型のスキーマ情報を報告のメタデータまたはその他の手法を使用している場合は、このメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="8ebab-347">Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or the schema information of a type.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xaml.XamlDirective" />
        <altmember cref="T:System.Xaml.XamlLanguage" />
      </Docs>
    </Member>
    <Member MemberName="LookupAllAttachableMembers">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlMember&gt; LookupAllAttachableMembers ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.XamlMember&gt; LookupAllAttachableMembers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupAllAttachableMembers" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupAllAttachableMembers () As IEnumerable(Of XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Xaml::XamlMember ^&gt; ^ LookupAllAttachableMembers();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlMember&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8ebab-348">この <see cref="T:System.Xaml.XamlType" /> で公開されているすべてのアタッチ可能なプロパティが含まれた列挙可能なセットを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-348">Returns an enumerable set that contains all attachable properties that are exposed by this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8ebab-349">0 個以上の <see cref="T:System.Xaml.XamlMember" /> 値が含まれている列挙可能なセット。または <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-349">An enumerable set that contains zero or more <see cref="T:System.Xaml.XamlMember" /> values; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ebab-350">呼び出し元から値を取得するときに、このメソッドを呼び出すことができます<xref:System.Xaml.XamlType.GetAllAttachableMembers%2A>です。</span><span class="sxs-lookup"><span data-stu-id="8ebab-350">This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.GetAllAttachableMembers%2A>.</span></span>  
  
 <span data-ttu-id="8ebab-351"><xref:System.Xaml.XamlType.GetAllAttachableMembers%2A> 、ジェネリック コレクションを返しますこれ`Lookup`メソッドがジェネリックの列挙可能なセットを返します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-351">Although <xref:System.Xaml.XamlType.GetAllAttachableMembers%2A> returns a generic collection, this `Lookup` method returns a generic enumerable set.</span></span>  
  
 <span data-ttu-id="8ebab-352">既定の実装では、内部の CLR リフレクションを使用します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-352">The default implementation uses the internal CLR reflection.</span></span> <span data-ttu-id="8ebab-353">ときに<xref:System.Xaml.XamlType.UnderlyingType%2A>は`null`、既定の実装を使用できる<xref:System.Xaml.XamlType.BaseType%2A>が利用可能な場合は。</span><span class="sxs-lookup"><span data-stu-id="8ebab-353">When <xref:System.Xaml.XamlType.UnderlyingType%2A> is `null`, the default implementation can use <xref:System.Xaml.XamlType.BaseType%2A>, if it is available.</span></span> <span data-ttu-id="8ebab-354">この動作を呼び出す<xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A>再帰的に有効な基本型を返すを検索しようとする`null`有効な基本型が存在しない場合。</span><span class="sxs-lookup"><span data-stu-id="8ebab-354">This behavior calls <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> recursively to attempt to find a valid base type and returns `null` if no valid base type exists.</span></span>  
  
 <span data-ttu-id="8ebab-355">既定の内部の CLR リフレクションに依存しない、し、XAML 型システム情報または型のスキーマ情報を報告のメタデータやその他の手法を使用している場合は、このメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="8ebab-355">Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.</span></span> <span data-ttu-id="8ebab-356">Null の戻り値は、型のシステムやリフレクションのサポートの不足のための情報を決定できない場合に用に予約する必要があります。</span><span class="sxs-lookup"><span data-stu-id="8ebab-356">A null return should be reserved for cases where information cannot be determined because of lack of type system or reflection support.</span></span> <span data-ttu-id="8ebab-357">場合は、型が有効では、リフレクションやその他の手法は、利用可能、型には、アタッチ可能なメンバーはありませんは、空を代わりに返す必要があります<xref:System.Collections.Generic.IEnumerable%601>を設定します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-357">If a type is valid and reflection or other techniques are available, but a type does not have attachable members, you should instead return an empty <xref:System.Collections.Generic.IEnumerable%601> set.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupAllMembers">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlMember&gt; LookupAllMembers ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.XamlMember&gt; LookupAllMembers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupAllMembers" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupAllMembers () As IEnumerable(Of XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Xaml::XamlMember ^&gt; ^ LookupAllMembers();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlMember&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8ebab-358">この <see cref="T:System.Xaml.XamlType" /> で公開されているすべてのメンバーが含まれた列挙可能なセットを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-358">Returns an enumerable set that contains all the members that are exposed by this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8ebab-359">0 個以上の <see cref="T:System.Xaml.XamlMember" /> 値が含まれている列挙可能なセット。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-359">An enumerable set that contains zero or more <see cref="T:System.Xaml.XamlMember" /> values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ebab-360">呼び出し元から値を取得するときに、このメソッドを呼び出すことができます<xref:System.Xaml.XamlType.GetAllMembers%2A>です。</span><span class="sxs-lookup"><span data-stu-id="8ebab-360">This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.GetAllMembers%2A>.</span></span>  
  
 <span data-ttu-id="8ebab-361"><xref:System.Xaml.XamlType.GetAllMembers%2A> 、ジェネリック コレクションを返しますこれ`Lookup`メソッドがジェネリックの列挙可能なセットを返します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-361">Although <xref:System.Xaml.XamlType.GetAllMembers%2A> returns a generic collection, this `Lookup` method returns a generic enumerable set.</span></span>  
  
 <span data-ttu-id="8ebab-362">既定の実装では、内部の CLR リフレクションを使用します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-362">The default implementation uses the internal CLR reflection.</span></span> <span data-ttu-id="8ebab-363">場合、<xref:System.Xaml.XamlType.UnderlyingType%2A>は`null`、既定の実装を使用できます<xref:System.Xaml.XamlType.BaseType%2A>が利用可能な場合は。</span><span class="sxs-lookup"><span data-stu-id="8ebab-363">For cases where <xref:System.Xaml.XamlType.UnderlyingType%2A> is `null`, the default implementation can use <xref:System.Xaml.XamlType.BaseType%2A>, if it is available.</span></span> <span data-ttu-id="8ebab-364">この動作を呼び出す<xref:System.Xaml.XamlType.LookupAllMembers%2A>再帰的に有効な基本型を返すを検索しようとする`null`有効な基本型が存在しない場合。</span><span class="sxs-lookup"><span data-stu-id="8ebab-364">This behavior calls <xref:System.Xaml.XamlType.LookupAllMembers%2A> recursively to attempt to find a valid base type, and returns `null` if no valid base type exists.</span></span>  
  
 <span data-ttu-id="8ebab-365">既定の内部の CLR リフレクションに依存しない、し、XAML 型システム情報または型のスキーマ情報を報告のメタデータやその他の手法を使用している場合は、このメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="8ebab-365">Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.</span></span> <span data-ttu-id="8ebab-366">Null の戻り値は、型のシステムやリフレクションのサポートの不足のための情報を決定できない場合に用に予約する必要があります。</span><span class="sxs-lookup"><span data-stu-id="8ebab-366">A null return should be reserved for cases where information cannot be determined because of lack of type system or reflection support.</span></span> <span data-ttu-id="8ebab-367">リフレクションまたは他の手法が使用可能な型が有効な場合型がメンバーを持たない場合は、空を代わりに返す必要があります<xref:System.Collections.Generic.IEnumerable%601>を設定します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-367">If a type is valid, reflection or other techniques are available; if a type does not have members, you should instead return an empty <xref:System.Collections.Generic.IEnumerable%601> set.</span></span>  
  
 <span data-ttu-id="8ebab-368">値を返す<xref:System.Xaml.XamlType.LookupAllMembers%2A>と<xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A>相互に排他的にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="8ebab-368">Return values for <xref:System.Xaml.XamlType.LookupAllMembers%2A> and <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> should be mutually exclusive.</span></span> <span data-ttu-id="8ebab-369">2 つの異なるとしてそのメンバーが報告される場合は、バッキング型システムのプロパティが、アタッチ可能な使用法と同様に、標準インスタンスの使用をサポートできる場合がある場合は、<xref:System.Xaml.XamlMember>アタッチ可能な一覧と、標準的なメンバー リスト内の別に表示される値の 1 つの値。</span><span class="sxs-lookup"><span data-stu-id="8ebab-369">If you have a situation where a backing type system property can support a standard instance usage as well as an attachable usage, that member should be reported as two different <xref:System.Xaml.XamlMember> values, with one value appearing in the attachable list and another in the standard members list.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupAllowedContentTypes">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; LookupAllowedContentTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; LookupAllowedContentTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupAllowedContentTypes" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupAllowedContentTypes () As IList(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ LookupAllowedContentTypes();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8ebab-370">この <see cref="P:System.Xaml.XamlType.ContentProperty" /> の <see cref="T:System.Xaml.XamlType" /> 値として使用できる、型のリストを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-370">Returns a list of the types that are usable as the <see cref="P:System.Xaml.XamlType.ContentProperty" /> value for this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8ebab-371">使用可能なコンテンツ型のリスト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-371">A list of possible content types.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ebab-372">呼び出し元から値を取得するときに、このメソッドを呼び出すことができます<xref:System.Xaml.XamlType.AllowedContentTypes%2A>です。</span><span class="sxs-lookup"><span data-stu-id="8ebab-372">This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.AllowedContentTypes%2A>.</span></span>  
  
 <span data-ttu-id="8ebab-373">型として評価される<xref:System.Xaml.XamlType.CanAssignTo%2A>特定のコンテンツ タイプは考慮されませんの目的で複数の種類<xref:System.Xaml.XamlType.AllowedContentTypes%2A>です。</span><span class="sxs-lookup"><span data-stu-id="8ebab-373">Types that evaluate as <xref:System.Xaml.XamlType.CanAssignTo%2A> for a specific content type are not considered multiple types for purposes of <xref:System.Xaml.XamlType.AllowedContentTypes%2A>.</span></span>  
  
 <span data-ttu-id="8ebab-374">既定の実装は、の他のプロパティを使用できます<xref:System.Xaml.XamlType>(<xref:System.Xaml.XamlType.ContentWrappers%2A>、 <xref:System.Xaml.XamlType.ContentProperty%2A>、または<xref:System.Xaml.XamlType.ItemType%2A>) 結果を取得します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-374">The default implementation can use other properties of <xref:System.Xaml.XamlType> (<xref:System.Xaml.XamlType.ContentWrappers%2A>, <xref:System.Xaml.XamlType.ContentProperty%2A>, or <xref:System.Xaml.XamlType.ItemType%2A>) to obtain a result.</span></span> <span data-ttu-id="8ebab-375">`Lookup`オーバーライドの前のプロパティ リストは、この判断で呼び出すこともできます。</span><span class="sxs-lookup"><span data-stu-id="8ebab-375">The `Lookup` overrides for the preceding property list can also be invoked in this determination.</span></span>  
  
 <span data-ttu-id="8ebab-376">既定の内部の CLR リフレクションに依存しない、し、XAML 型システム情報または型のスキーマ情報を報告のメタデータやその他の手法を使用している場合は、このメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="8ebab-376">Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupAttachableMember">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlMember LookupAttachableMember (string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlMember LookupAttachableMember(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupAttachableMember(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupAttachableMember (name As String) As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlMember ^ LookupAttachableMember(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="8ebab-377">
            <c>ownerTypeName.MemberName</c> フォームで取得するアタッチ可能メンバーの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-377">The name of the attachable member to get, in <c>ownerTypeName.MemberName</c> form.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8ebab-378">この <see cref="T:System.Xaml.XamlType" /> から、特定の名前の付いたアタッチ可能なものを表す <see cref="T:System.Xaml.XamlMember" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-378">Returns a <see cref="T:System.Xaml.XamlMember" /> for a specific named attachable from this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8ebab-379">要求されたアタッチ可能メンバーの <see cref="T:System.Xaml.XamlMember" /> オブジェクト。その名前のアタッチ可能メンバーが存在しない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-379">A <see cref="T:System.Xaml.XamlMember" /> object for the requested attachable member; otherwise, <see langword="null" />, if no attachable member by that name exists.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ebab-380">呼び出し元から値を取得するときに、このメソッドを呼び出すことができます<xref:System.Xaml.XamlType.GetAttachableMember%2A>です。</span><span class="sxs-lookup"><span data-stu-id="8ebab-380">This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.GetAttachableMember%2A>.</span></span>  
  
 <span data-ttu-id="8ebab-381">既定の実装では、内部の CLR リフレクションを使用します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-381">The default implementation uses the internal CLR reflection.</span></span> <span data-ttu-id="8ebab-382">ときに<xref:System.Xaml.XamlType.UnderlyingType%2A>は`null`、既定の実装を使用できる<xref:System.Xaml.XamlType.BaseType%2A>が利用可能な場合は。</span><span class="sxs-lookup"><span data-stu-id="8ebab-382">When <xref:System.Xaml.XamlType.UnderlyingType%2A> is `null`, the default implementation can use <xref:System.Xaml.XamlType.BaseType%2A>, if it is available.</span></span> <span data-ttu-id="8ebab-383">この動作を呼び出す<xref:System.Xaml.XamlType.LookupAttachableMember%2A>再帰的に有効な基本型を返すを検索しようとする`null`有効な基本型が存在しない場合。</span><span class="sxs-lookup"><span data-stu-id="8ebab-383">This behavior calls <xref:System.Xaml.XamlType.LookupAttachableMember%2A> recursively to attempt to find a valid base type and returns `null` if no valid base type exists.</span></span>  
  
 <span data-ttu-id="8ebab-384">既定の内部の CLR リフレクションに依存しない、し、XAML 型システム情報または型のスキーマ情報を報告のメタデータやその他の手法を使用している場合は、このメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="8ebab-384">Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8ebab-385"><xref:System.Xaml.XamlType.LookupAttachableMember%2A> 仮想で、そのため、オーバーライドできます。</span><span class="sxs-lookup"><span data-stu-id="8ebab-385"><xref:System.Xaml.XamlType.LookupAttachableMember%2A> is virtual, and therefore, can be overridden.</span></span> <span data-ttu-id="8ebab-386">上書きされる可能性があります (悪意のあるものかどうかまたはそれ以外の場合) と予想される方法で不要になった位置が揃うように、報告された XAML 型のメンバーを変更する、 <xref:System.ComponentModel.TypeDescriptor> `Get*`基になる CLR 型に関する情報。</span><span class="sxs-lookup"><span data-stu-id="8ebab-386">The override has the potential (whether for malicious purposes or otherwise) to change the reported members of a XAML type so that they no longer align in an expected way with the <xref:System.ComponentModel.TypeDescriptor> `Get*` information about the underlying CLR type.</span></span> <span data-ttu-id="8ebab-387">Reporting メンバーのセキュリティ クリティカルなチェックには、基になる CLR 型を代わりに使用します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-387">For any security-critical checks of member reporting, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupBaseType">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlType LookupBaseType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlType LookupBaseType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupBaseType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupBaseType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlType ^ LookupBaseType();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8ebab-388">この XAML 型の直接の基本型の <see cref="T:System.Xaml.XamlType" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-388">Returns the <see cref="T:System.Xaml.XamlType" /> for the immediate base type of this XAML type.</span>
          </span>
          <span data-ttu-id="8ebab-389">この値は、この <see cref="T:System.Xaml.XamlType" /> の基になる型とスキーマ コンテキストに基づいて決定されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-389">Determination of this value is based on the underlying type of this <see cref="T:System.Xaml.XamlType" /> and schema context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8ebab-390">この XAML 型の直接の基本型の <see cref="T:System.Xaml.XamlType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-390">The <see cref="T:System.Xaml.XamlType" /> for the immediate base type of this XAML type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ebab-391">呼び出し元から値を取得するときに、このメソッドを呼び出すことができます<xref:System.Xaml.XamlType.BaseType%2A>です。</span><span class="sxs-lookup"><span data-stu-id="8ebab-391">This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.BaseType%2A>.</span></span>  
  
 <span data-ttu-id="8ebab-392">既定の実装を表す内部定数を返す場合があります、<xref:System.Object>場合<xref:System.Xaml.XamlType.UnderlyingType%2A>は`null`します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-392">The default implementation might return an internal constant that represents the <xref:System.Object> if <xref:System.Xaml.XamlType.UnderlyingType%2A> is `null`.</span></span>  
  
 <span data-ttu-id="8ebab-393">既定の内部の CLR リフレクションに依存しない、し、XAML 型システム情報または型のスキーマ情報を報告のメタデータやその他の手法を使用している場合は、このメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="8ebab-393">Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8ebab-394"><xref:System.Xaml.XamlType.LookupBaseType%2A> 仮想で、そのため、オーバーライドできます。</span><span class="sxs-lookup"><span data-stu-id="8ebab-394"><xref:System.Xaml.XamlType.LookupBaseType%2A> is virtual, and therefore, can be overridden.</span></span> <span data-ttu-id="8ebab-395">上書きされる可能性があります (悪意のあるものかどうかまたはそれ以外の場合) に報告された型の XAML 型情報が変更され、基になる CLR 型の型システム情報と予想される方法で整合不要になった。</span><span class="sxs-lookup"><span data-stu-id="8ebab-395">The override has the potential (whether for malicious purposes or otherwise) to change the reported type information about a XAML type so that it no longer aligns in an expected way with the type system information of its underlying CLR type.</span></span> <span data-ttu-id="8ebab-396">割り当て操作とアクセスのセキュリティ クリティカルなチェックには、基になる CLR 型を代わりに使用します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-396">For any security-critical checks of assignment operations and access, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupCollectionKind">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlCollectionKind LookupCollectionKind ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Xaml.Schema.XamlCollectionKind LookupCollectionKind() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupCollectionKind" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupCollectionKind () As XamlCollectionKind" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlCollectionKind LookupCollectionKind();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlCollectionKind</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8ebab-397">この <see cref="T:System.Xaml.Schema.XamlCollectionKind" /> で使用される特定のコレクション型を宣言する <see cref="T:System.Xaml.XamlType" /> 列挙体の値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-397">Returns a value of the <see cref="T:System.Xaml.Schema.XamlCollectionKind" /> enumeration that declares which specific collection type this <see cref="T:System.Xaml.XamlType" /> uses.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8ebab-398">
            <see cref="T:System.Xaml.Schema.XamlCollectionKind" /> 列挙体の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-398">A value of the <see cref="T:System.Xaml.Schema.XamlCollectionKind" /> enumeration.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ebab-399">このメソッドは、内部プライベート メソッドによって呼び出されます (パブリック`CollectionKind`または`GetCollectionKind`に API が存在する<xref:System.Xaml.XamlType>)。</span><span class="sxs-lookup"><span data-stu-id="8ebab-399">This method is invoked by an internal private method (no public `CollectionKind` or `GetCollectionKind` API exists on <xref:System.Xaml.XamlType>).</span></span>  
  
 <span data-ttu-id="8ebab-400">既定の実装では、内部の CLR リフレクションを使用します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-400">The default implementation uses the internal CLR reflection.</span></span> <span data-ttu-id="8ebab-401">場合、<xref:System.Xaml.XamlType.UnderlyingType%2A>は`null`、既定の実装を使用できます<xref:System.Xaml.XamlType.BaseType%2A>が利用可能な場合は。</span><span class="sxs-lookup"><span data-stu-id="8ebab-401">For cases where <xref:System.Xaml.XamlType.UnderlyingType%2A> is `null`, the default implementation can use <xref:System.Xaml.XamlType.BaseType%2A>, if it is available.</span></span> <span data-ttu-id="8ebab-402">この動作を間接的に呼び出す<xref:System.Xaml.XamlType.LookupCollectionKind%2A>に有効な基本型を検索しようとしています。 再帰的に返します<xref:System.Xaml.Schema.XamlCollectionKind.None?displayProperty=nameWithType>有効な基本型が存在しない場合。</span><span class="sxs-lookup"><span data-stu-id="8ebab-402">This behavior indirectly calls <xref:System.Xaml.XamlType.LookupCollectionKind%2A> recursively to attempt to find a valid base type; it returns <xref:System.Xaml.Schema.XamlCollectionKind.None?displayProperty=nameWithType> if no valid base type exists.</span></span> <span data-ttu-id="8ebab-403">既定の実装が検索しようとした一般に、`Add`リフレクションによって基になる型のメソッドです。</span><span class="sxs-lookup"><span data-stu-id="8ebab-403">In general, the default implementation attempts to find the `Add` method of the underlying type by reflection.</span></span> <span data-ttu-id="8ebab-404">場合が見つかると、<xref:System.Reflection.MethodInfo>の`Add`メソッドが判断するために必要な情報<xref:System.Xaml.Schema.XamlCollectionKind>値が返されます。</span><span class="sxs-lookup"><span data-stu-id="8ebab-404">If found, the <xref:System.Reflection.MethodInfo> of the `Add` method is enough information to determine which <xref:System.Xaml.Schema.XamlCollectionKind> value should be returned.</span></span> <span data-ttu-id="8ebab-405">それ以外の場合は、<xref:System.Xaml.Schema.XamlCollectionKind.None?displayProperty=nameWithType> を返します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-405">Otherwise, it returns <xref:System.Xaml.Schema.XamlCollectionKind.None?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="8ebab-406">既定の内部の CLR リフレクションに依存しない、し、XAML 型システム情報または型のスキーマ情報を報告のメタデータやその他の手法を使用している場合は、このメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="8ebab-406">Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupConstructionRequiresArguments">
      <MemberSignature Language="C#" Value="protected virtual bool LookupConstructionRequiresArguments ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupConstructionRequiresArguments() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupConstructionRequiresArguments" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupConstructionRequiresArguments () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupConstructionRequiresArguments();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8ebab-407">型の有効なインスタンスを作成するために、この <see cref="T:System.Xaml.XamlType" /> が引数 (<see langword="x:TypeArguments" /> を通じたジェネリック制約、初期化テキスト、または他の XAML 手法) を持つ必要があるかどうかを示す値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-407">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> must have arguments (generic constraints through <see langword="x:TypeArguments" />, initialization text, or other XAML techniques) to construct a valid instance of the type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8ebab-408">インスタンスの作成に引数値が必要な場合は <see langword="true" />。それ以外の場合は false。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-408">
              <see langword="true" /> if construction of an instance requires some argument value; otherwise, false.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ebab-409">呼び出し元から値を取得するときに、このメソッドを呼び出すことができます<xref:System.Xaml.XamlType.ConstructionRequiresArguments%2A>です。</span><span class="sxs-lookup"><span data-stu-id="8ebab-409">This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.ConstructionRequiresArguments%2A>.</span></span>  
  
 <span data-ttu-id="8ebab-410">既定の実装を返します`false`CLR で値型と見なされますの種類のシステムと入力します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-410">The default implementation returns `false` for types considered value types in the CLR type system.</span></span> <span data-ttu-id="8ebab-411">値型、CLR リフレクション以外の場合<xref:System.Reflection.ConstructorInfo>既定のコンス トラクターが存在するかどうかを調べるために使用します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-411">For other than value types, CLR reflection <xref:System.Reflection.ConstructorInfo> is used to determine whether a default constructor exists.</span></span>  
  
 <span data-ttu-id="8ebab-412">既定の内部の CLR リフレクションに依存しない、し、XAML 型システム情報または型のスキーマ情報を報告のメタデータやその他の手法を使用している場合は、このメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="8ebab-412">Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupContentProperty">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlMember LookupContentProperty ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlMember LookupContentProperty() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupContentProperty" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupContentProperty () As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlMember ^ LookupContentProperty();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8ebab-413">この <see cref="T:System.Xaml.XamlMember" /> のコンテンツ プロパティの <see cref="T:System.Xaml.XamlType" /> 情報を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-413">Returns <see cref="T:System.Xaml.XamlMember" /> information for the content property of this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8ebab-414">この <see cref="T:System.Xaml.XamlMember" /> のコンテンツ プロパティの <see cref="T:System.Xaml.XamlType" /> 情報。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-414">
              <see cref="T:System.Xaml.XamlMember" /> information for the content property of this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
          <span data-ttu-id="8ebab-415">
            <see langword="null" /> でもかまいません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-415">May be <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ebab-416">呼び出し元から値を取得するときに、このメソッドを呼び出すことができます<xref:System.Xaml.XamlType.ContentProperty%2A>です。</span><span class="sxs-lookup"><span data-stu-id="8ebab-416">This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.ContentProperty%2A>.</span></span>  
  
 <span data-ttu-id="8ebab-417">既定の実装<xref:System.Windows.Markup.ContentPropertyAttribute>型定義。</span><span class="sxs-lookup"><span data-stu-id="8ebab-417">The default implementation checks for <xref:System.Windows.Markup.ContentPropertyAttribute> on the type definition.</span></span> <span data-ttu-id="8ebab-418">チェック<xref:System.Xaml.XamlType.BaseType%2A>属性に直接の基になる型の属性が見つからない場合。</span><span class="sxs-lookup"><span data-stu-id="8ebab-418">It can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type.</span></span> <span data-ttu-id="8ebab-419">既定の実装を返しますのかどうか、これらのチェックはコンテンツの種類を検出しません、`null`です。</span><span class="sxs-lookup"><span data-stu-id="8ebab-419">If these checks do not discover a content type, the default implementation returns `null`.</span></span>  
  
 <span data-ttu-id="8ebab-420">既定の内部の CLR リフレクションに依存しない、し、XAML 型システム情報または型のスキーマ情報を報告のメタデータやその他の手法を使用している場合は、このメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="8ebab-420">Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupContentWrappers">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; LookupContentWrappers ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; LookupContentWrappers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupContentWrappers" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupContentWrappers () As IList(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ LookupContentWrappers();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8ebab-421">この <see cref="T:System.Xaml.XamlType" /> のコンテンツ ラッパーを表す <see cref="T:System.Xaml.XamlType" /> 値のリストを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-421">Gets a list of <see cref="T:System.Xaml.XamlType" /> values that represent the content wrappers for this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8ebab-422">この <see cref="T:System.Xaml.XamlType" /> のコンテンツ ラッパーを表す <see cref="T:System.Xaml.XamlType" /> 値のリスト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-422">A list of <see cref="T:System.Xaml.XamlType" /> values that represent the content wrappers for this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ebab-423">コンテンツのラッパーは、そのコレクションに使用される型は、型システムを連続していないときにコンテンツのコレクション型を表すクラスです。</span><span class="sxs-lookup"><span data-stu-id="8ebab-423">A content wrapper is a class that represents the content collection type when the types that are used in that collection are not contiguous to the type system.</span></span> <span data-ttu-id="8ebab-424">コンテンツ ラッパー コレクション項目の種類を超えるいくつかの方法で制限されるとして予想される<xref:System.Object>または同等のニュートラル オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8ebab-424">The types of collection items for the content wrapper are expected to be limited in some manner beyond <xref:System.Object> or a neutral object equivalent.</span></span> <span data-ttu-id="8ebab-425">ただし、このような制限が、およびデザインまたはその型を使用するプロパティの目的は、型システムではなくにのみ適用されます。</span><span class="sxs-lookup"><span data-stu-id="8ebab-425">However, this limitation is only enforced by the design or purpose of the properties that use that type, and not by the type system.</span></span> <span data-ttu-id="8ebab-426">1 つ以上のコンテンツ ラッパーは、型に存在できます。</span><span class="sxs-lookup"><span data-stu-id="8ebab-426">More than one content wrapper can exist on a type.</span></span>  
  
 <span data-ttu-id="8ebab-427">クラスの例と WPF XAML 実装からシナリオの場合は、「<xref:System.Windows.Documents.InlineCollection>です。</span><span class="sxs-lookup"><span data-stu-id="8ebab-427">For an example class and scenario from the WPF XAML implementation, see <xref:System.Windows.Documents.InlineCollection>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupCustomAttributeProvider">
      <MemberSignature Language="C#" Value="protected virtual System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupCustomAttributeProvider" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupCustomAttributeProvider () As ICustomAttributeProvider" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Reflection::ICustomAttributeProvider ^ LookupCustomAttributeProvider();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ICustomAttributeProvider</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8ebab-428">派生クラスで実装される場合、<see cref="T:System.Reflection.ICustomAttributeProvider" /> 実装を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-428">When implemented in a derived class, returns an <see cref="T:System.Reflection.ICustomAttributeProvider" /> implementation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8ebab-429">
            <see cref="T:System.Reflection.ICustomAttributeProvider" /> の実装。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-429">An <see cref="T:System.Reflection.ICustomAttributeProvider" /> implementation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ebab-430">CLR 属性の値を取得する代替方法を内部のリフレクションを提供するには、このメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="8ebab-430">Override this method to provide the internal reflection with an alternative way to obtain CLR attribute values.</span></span> <span data-ttu-id="8ebab-431">上書きがない場合では、内部 reflector は、一般的な CLR ロジックでリフレクションを使用します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-431">In absence of an override, the internal reflector uses typical CLR reflection logic.</span></span>  
  
 <span data-ttu-id="8ebab-432">既定の実装では、`null` が返されます。</span><span class="sxs-lookup"><span data-stu-id="8ebab-432">The default implementation returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupDeferringLoader">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt; LookupDeferringLoader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Xaml.XamlDeferringLoader&gt; LookupDeferringLoader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupDeferringLoader" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupDeferringLoader () As XamlValueConverter(Of XamlDeferringLoader)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlValueConverter&lt;System::Xaml::XamlDeferringLoader ^&gt; ^ LookupDeferringLoader();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8ebab-433">
            <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> オブジェクトを返します。これは XAML で宣言されたオブジェクトの遅延読み込みに使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-433">Returns a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> object, which is used for deferred loading of XAML-declared objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8ebab-434">ジェネリックの <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> 制約のある <see cref="T:System.Xaml.XamlDeferringLoader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-434">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> that has a <see cref="T:System.Xaml.XamlDeferringLoader" /> constraint on the generic.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ebab-435">呼び出し元から値を取得するときに、このメソッドを呼び出すことができます<xref:System.Xaml.XamlType.DeferringLoader%2A>です。</span><span class="sxs-lookup"><span data-stu-id="8ebab-435">This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.DeferringLoader%2A>.</span></span> <span data-ttu-id="8ebab-436">このメソッドをオーバーライドする場合は<xref:System.Xaml.XamlType.DeferringLoader%2A>をカスタムを既定の内部リフレクションで有効になっても提供するよりも、別の値を返す<xref:System.Xaml.Schema.XamlTypeInvoker>情報。</span><span class="sxs-lookup"><span data-stu-id="8ebab-436">Override this method if you want <xref:System.Xaml.XamlType.DeferringLoader%2A> to return a different value than is enabled by default internal reflection and are also providing custom <xref:System.Xaml.Schema.XamlTypeInvoker> information.</span></span>  
  
 <span data-ttu-id="8ebab-437">既定の実装は、読み取りに基づいてオブジェクトを返します<xref:System.Windows.Markup.XamlDeferLoadAttribute>です。</span><span class="sxs-lookup"><span data-stu-id="8ebab-437">The default implementation returns an object on the basis of reading <xref:System.Windows.Markup.XamlDeferLoadAttribute>.</span></span> <span data-ttu-id="8ebab-438">チェック<xref:System.Xaml.XamlType.BaseType%2A>属性に直接の基になる型の属性が見つからない場合。</span><span class="sxs-lookup"><span data-stu-id="8ebab-438">It can also  check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type.</span></span> <span data-ttu-id="8ebab-439">このメソッドが戻るかどうかは、値は使用できません、`null`です。</span><span class="sxs-lookup"><span data-stu-id="8ebab-439">If a value is unavailable, this method returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupInvoker">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlTypeInvoker LookupInvoker ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlTypeInvoker LookupInvoker() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupInvoker" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupInvoker () As XamlTypeInvoker" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlTypeInvoker ^ LookupInvoker();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlTypeInvoker</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8ebab-440">この <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> に関連付けられた <see cref="T:System.Xaml.XamlType" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-440">Returns a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> that is associated with this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8ebab-441">この <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> の <see cref="T:System.Xaml.XamlType" /> 情報、または <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-441">The <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> information for this <see cref="T:System.Xaml.XamlType" />; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ebab-442">呼び出しによって、このメソッドを呼び出せる<xref:System.Xaml.XamlType.Invoker%2A>です。</span><span class="sxs-lookup"><span data-stu-id="8ebab-442">This method can be invoked by calls to <xref:System.Xaml.XamlType.Invoker%2A>.</span></span>  
  
 <span data-ttu-id="8ebab-443">既定の実装で、いる必要はありません、<xref:System.Xaml.XamlType>初期を渡すコンス トラクターのいずれかを使用して構築する<xref:System.Xaml.Schema.XamlTypeInvoker>です。</span><span class="sxs-lookup"><span data-stu-id="8ebab-443">The default implementation does not require that a <xref:System.Xaml.XamlType> be constructed by using one of the constructors that pass an initial <xref:System.Xaml.Schema.XamlTypeInvoker>.</span></span> <span data-ttu-id="8ebab-444">ただし、<xref:System.Xaml.XamlType.UnderlyingType%2A>の値が存在する必要があります、<xref:System.Xaml.XamlType>以外の場合、既定の実装を返します`null`です。</span><span class="sxs-lookup"><span data-stu-id="8ebab-444">However, an <xref:System.Xaml.XamlType.UnderlyingType%2A> value must exist for the <xref:System.Xaml.XamlType>; otherwise, the default implementation returns `null`.</span></span>  
  
 <span data-ttu-id="8ebab-445">派生クラスも作成する場合は、このメソッドをオーバーライド<xref:System.Xaml.Schema.XamlTypeInvoker>および派生クラスを返すようにします。</span><span class="sxs-lookup"><span data-stu-id="8ebab-445">Override this method if you also create a derived class from <xref:System.Xaml.Schema.XamlTypeInvoker> and intend to return the derived class.</span></span> <span data-ttu-id="8ebab-446">返す場合`null`、<xref:System.Xaml.XamlType.Invoker%2A>返します<xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A?displayProperty=nameWithType>の呼び出し元にします。</span><span class="sxs-lookup"><span data-stu-id="8ebab-446">If you return `null`, <xref:System.Xaml.XamlType.Invoker%2A> returns <xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A?displayProperty=nameWithType> to callers.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsAmbient">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsAmbient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsAmbient() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsAmbient" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsAmbient () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsAmbient();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8ebab-447">この <see cref="T:System.Xaml.XamlType" /> が XAML 定義によってアンビエント型を表すかどうかを示す値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-447">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents an ambient type, as per the XAML definition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8ebab-448">この <see cref="T:System.Xaml.XamlType" /> がアンビエント型を表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-448">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents an ambient type; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ebab-449">呼び出しによって、このメソッドを呼び出せる<xref:System.Xaml.XamlType.IsAmbient%2A>です。</span><span class="sxs-lookup"><span data-stu-id="8ebab-449">This method can be invoked by calls to <xref:System.Xaml.XamlType.IsAmbient%2A>.</span></span>  
  
 <span data-ttu-id="8ebab-450">既定の実装で CLR のリフレクションを使用して、<xref:System.Xaml.XamlType.UnderlyingType%2A>基本型を確認できます。</span><span class="sxs-lookup"><span data-stu-id="8ebab-450">The default implementation uses CLR reflection on the <xref:System.Xaml.XamlType.UnderlyingType%2A> and can check the base types.</span></span> <span data-ttu-id="8ebab-451">この実装を確認、<xref:System.Windows.Markup.AmbientAttribute>をクラス レベルで、関連する種類の定義に適用して返す`true`ここでします。</span><span class="sxs-lookup"><span data-stu-id="8ebab-451">This implementation checks for the <xref:System.Windows.Markup.AmbientAttribute> that is applied to the relevant type's definition at the class level and returns `true` in this case.</span></span> <span data-ttu-id="8ebab-452">その他のすべてのケースを返す`false`です。</span><span class="sxs-lookup"><span data-stu-id="8ebab-452">All other cases return `false`.</span></span>  
  
 <span data-ttu-id="8ebab-453">このメソッドをオーバーライドする場合は<xref:System.Xaml.XamlType.IsAmbient%2A>既定内部リフレクションで有効になっても、異なる値を返すにします。</span><span class="sxs-lookup"><span data-stu-id="8ebab-453">Override this method if you want <xref:System.Xaml.XamlType.IsAmbient%2A> to return a different value than is enabled by default internal reflection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsConstructible">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsConstructible ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsConstructible() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsConstructible" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsConstructible () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsConstructible();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8ebab-454">この <see cref="T:System.Xaml.XamlType" /> が XAML 定義によって構築可能な型を表すかどうかを示す値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-454">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a constructible type, as per the XAML definition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8ebab-455">この <see cref="T:System.Xaml.XamlType" /> が構築可能な型を表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-455">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a constructible type; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ebab-456">呼び出しによって、このメソッドを呼び出せる<xref:System.Xaml.XamlType.IsConstructible%2A>です。</span><span class="sxs-lookup"><span data-stu-id="8ebab-456">This method can be invoked by calls to <xref:System.Xaml.XamlType.IsConstructible%2A>.</span></span>  
  
 <span data-ttu-id="8ebab-457">既定の実装で CLR のリフレクションを使用して、<xref:System.Xaml.XamlType.UnderlyingType%2A>です。</span><span class="sxs-lookup"><span data-stu-id="8ebab-457">The default implementation uses CLR reflection on the <xref:System.Xaml.XamlType.UnderlyingType%2A>.</span></span> <span data-ttu-id="8ebab-458">型は、具象、入れ子にされないおよび終了する必要があります。</span><span class="sxs-lookup"><span data-stu-id="8ebab-458">The type must be concrete, non-nested, and closed.</span></span> <span data-ttu-id="8ebab-459">既定の実装は、型が値型との戻り値かどうかを確認します。<xref:System.Xaml.XamlType.ConstructionRequiresArguments%2A>です。</span><span class="sxs-lookup"><span data-stu-id="8ebab-459">The default implementation checks whether the type is a value type and the return of <xref:System.Xaml.XamlType.ConstructionRequiresArguments%2A>.</span></span> <span data-ttu-id="8ebab-460">Null <xref:System.Xaml.XamlType.UnderlyingType%2A>、このメソッドが戻る`true`です。</span><span class="sxs-lookup"><span data-stu-id="8ebab-460">For a null <xref:System.Xaml.XamlType.UnderlyingType%2A>, this method returns `true`.</span></span>  
  
 <span data-ttu-id="8ebab-461">このメソッドをオーバーライドする場合は<xref:System.Xaml.XamlType.IsConstructible%2A>既定内部リフレクションで有効になっても、異なる値を返すにします。</span><span class="sxs-lookup"><span data-stu-id="8ebab-461">Override this method if you want <xref:System.Xaml.XamlType.IsConstructible%2A> to return a different value than is enabled by default internal reflection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsMarkupExtension">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsMarkupExtension ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsMarkupExtension() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsMarkupExtension" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsMarkupExtension () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsMarkupExtension();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8ebab-462">この <see cref="T:System.Xaml.XamlType" /> がマークアップ拡張機能を表すかどうかを示す値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-462">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a markup extension.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8ebab-463">この <see cref="T:System.Xaml.XamlType" /> がマークアップ拡張機能を表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-463">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a markup extension; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ebab-464">呼び出しによって、このメソッドを呼び出せる<xref:System.Xaml.XamlType.IsMarkupExtension%2A>です。</span><span class="sxs-lookup"><span data-stu-id="8ebab-464">This method can be invoked by calls to <xref:System.Xaml.XamlType.IsMarkupExtension%2A>.</span></span>  
  
 <span data-ttu-id="8ebab-465">既定の実装は、この呼び出しののみで構成されます。</span><span class="sxs-lookup"><span data-stu-id="8ebab-465">The default implementation consists only of this call:</span></span>  
  
 `return CanAssignTo(XamlLanguage.MarkupExtension);`  
  
 <span data-ttu-id="8ebab-466">このメソッドをオーバーライドする場合は<xref:System.Xaml.XamlType.IsMarkupExtension%2A>別のロジックを使用します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-466">Override this method if you want <xref:System.Xaml.XamlType.IsMarkupExtension%2A> to use different logic.</span></span>  
  
 <span data-ttu-id="8ebab-467">XAML の仕様の用語では、この型に割り当てることにする必要があります`x:MarkupExtension`を返すために`true`の<xref:System.Xaml.XamlType.IsMarkupExtension%2A>します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-467">In XAML specification terms, this type must be assignable to `x:MarkupExtension` in order to return `true` for <xref:System.Xaml.XamlType.IsMarkupExtension%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsNameScope">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsNameScope ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsNameScope() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsNameScope" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsNameScope () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsNameScope();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8ebab-468">この <see cref="T:System.Xaml.XamlType" /> が XAML 定義によって XAML 名前スコープを表すかどうかを示す値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-468">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a XAML namescope, as per the XAML definition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8ebab-469">この <see cref="T:System.Xaml.XamlType" /> が XAML 名前スコープを表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-469">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a XAML namescope; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ebab-470">呼び出しによって、このメソッドを呼び出せる<xref:System.Xaml.XamlType.IsNameScope%2A>です。</span><span class="sxs-lookup"><span data-stu-id="8ebab-470">This method can be invoked by calls to <xref:System.Xaml.XamlType.IsNameScope%2A>.</span></span>  
  
 <span data-ttu-id="8ebab-471">既定の実装、<xref:System.Xaml.XamlType.CanAssignTo%2A>型に対して直接呼び出す<xref:System.Windows.Markup.INameScope>です。</span><span class="sxs-lookup"><span data-stu-id="8ebab-471">The default implementation makes a <xref:System.Xaml.XamlType.CanAssignTo%2A> call indirectly against the type <xref:System.Windows.Markup.INameScope>.</span></span> <span data-ttu-id="8ebab-472"><xref:System.Windows.Markup.INameScope> WindowsBase アセンブリで定義されているインターフェイス。</span><span class="sxs-lookup"><span data-stu-id="8ebab-472"><xref:System.Windows.Markup.INameScope> is an interface that is defined in the assembly WindowsBase.</span></span> <span data-ttu-id="8ebab-473">XAML 名前スコープ識別するためには、この手法が使用される WPF が両方と[!INCLUDE[TLA#tla_workflow](~/includes/tlasharptla-workflow-md.md)]XAML の実装です。</span><span class="sxs-lookup"><span data-stu-id="8ebab-473">This technique for XAML namescope identification is used both by WPF and [!INCLUDE[TLA#tla_workflow](~/includes/tlasharptla-workflow-md.md)] implementations of XAML.</span></span>  
  
 <span data-ttu-id="8ebab-474">このメソッドをオーバーライドする場合は<xref:System.Xaml.XamlType.IsNameScope%2A>別のロジックを使用します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-474">Override this method if you want <xref:System.Xaml.XamlType.IsNameScope%2A> to use different logic.</span></span>  
  
 <span data-ttu-id="8ebab-475">XAML 名前スコープまたは複数に使用されるプロパティの名前の一意性を強制する`x:Name`  / `[name property]`です。</span><span class="sxs-lookup"><span data-stu-id="8ebab-475">A XAML namescope enforces the name uniqueness of the property or properties that are used for `x:Name` / `[name property]`.</span></span> <span data-ttu-id="8ebab-476">場合<xref:System.Xaml.XamlType.IsNameScope%2A>は`true`一意性を適用するためのいくつかのメカニズムが存在する必要があり、XAML 名前空間を所有しているこの種類の観点から評価する必要があります。</span><span class="sxs-lookup"><span data-stu-id="8ebab-476">If <xref:System.Xaml.XamlType.IsNameScope%2A> is `true`, then some mechanism for enforcing uniqueness should exist and should evaluate from the perspective of this type owning a XAML namescope.</span></span> <span data-ttu-id="8ebab-477">XAML 名前スコープは、XAML 名前スコープを所有している別の型が検出されるまで、型のコンテンツを拡張します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-477">The XAML namescope then extends to the content of the type until another XAML namescope owning type is encountered.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlObjectWriter.RootNameScope" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsNullable">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsNullable ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsNullable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsNullable" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsNullable () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsNullable();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8ebab-478">この <see cref="T:System.Xaml.XamlType" /> が XAML 定義によって null 許容型を表すかどうかを示す値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-478">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a nullable type, as per the XAML definition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8ebab-479">この <see cref="T:System.Xaml.XamlType" /> が null 許容型を表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-479">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a nullable type; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ebab-480">呼び出しによって、このメソッドを呼び出せる<xref:System.Xaml.XamlType.IsNullable%2A>です。</span><span class="sxs-lookup"><span data-stu-id="8ebab-480">This method can be invoked by calls to <xref:System.Xaml.XamlType.IsNullable%2A>.</span></span>  
  
 <span data-ttu-id="8ebab-481">既定の実装は、概念に基づいて CLR コア ライブラリ null 許容型、照合決定<xref:System.Xaml.XamlType.UnderlyingType%2A>です。</span><span class="sxs-lookup"><span data-stu-id="8ebab-481">The default implementation makes a determination based on the CLR core library nullable concept, checked against <xref:System.Xaml.XamlType.UnderlyingType%2A>.</span></span> <span data-ttu-id="8ebab-482">Null <xref:System.Xaml.XamlType.UnderlyingType%2A>、返します`true`です。</span><span class="sxs-lookup"><span data-stu-id="8ebab-482">For a null <xref:System.Xaml.XamlType.UnderlyingType%2A>, it returns `true`.</span></span>  
  
 <span data-ttu-id="8ebab-483">このメソッドをオーバーライドする場合は<xref:System.Xaml.XamlType.IsNullable%2A>別のロジックを使用します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-483">Override this method if you want <xref:System.Xaml.XamlType.IsNullable%2A> to use different logic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsPublic">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsPublic ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsPublic() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsPublic" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsPublic () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsPublic();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8ebab-484">この <see cref="T:System.Xaml.XamlType" /> が関連する型システムでパブリック型を表すかどうかを示す値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-484">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a public type in the relevant type system.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8ebab-485">この <see cref="T:System.Xaml.XamlType" /> がパブリック型を表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-485">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a public type; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ebab-486">呼び出しによって、このメソッドを呼び出せる<xref:System.Xaml.XamlType.IsPublic%2A>です。</span><span class="sxs-lookup"><span data-stu-id="8ebab-486">This method can be invoked by calls to <xref:System.Xaml.XamlType.IsPublic%2A>.</span></span>  
  
 <span data-ttu-id="8ebab-487">既定の実装が null でないに対して CLR リフレクションを使用して<xref:System.Xaml.XamlType.UnderlyingType%2A>です。</span><span class="sxs-lookup"><span data-stu-id="8ebab-487">The default implementation uses CLR reflection against a non-null <xref:System.Xaml.XamlType.UnderlyingType%2A>.</span></span> <span data-ttu-id="8ebab-488">Null <xref:System.Xaml.XamlType.UnderlyingType%2A>、返します`true`です。</span><span class="sxs-lookup"><span data-stu-id="8ebab-488">For a null <xref:System.Xaml.XamlType.UnderlyingType%2A>, it returns `true`.</span></span>  
  
 <span data-ttu-id="8ebab-489">このメソッドをオーバーライドする場合は<xref:System.Xaml.XamlType.IsPublic%2A>別のロジックを使用します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-489">Override this method if you want <xref:System.Xaml.XamlType.IsPublic%2A> to use different logic.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8ebab-490"><xref:System.Xaml.XamlType.LookupIsPublic%2A> 仮想で、そのため、オーバーライドできます。</span><span class="sxs-lookup"><span data-stu-id="8ebab-490"><xref:System.Xaml.XamlType.LookupIsPublic%2A> is virtual, and therefore, can be overridden.</span></span> <span data-ttu-id="8ebab-491">上書きされる可能性があります (悪意のあるものかどうかまたはそれ以外の場合)、基になる CLR 型の型システムまたはアクセスの情報と予想される方法で整合しなくように XAML 型についての報告されたアクセスを変更します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-491">The override has the potential (whether for malicious purposes or otherwise) to change the reported access information about a XAML type so that it no longer aligns in an expected way with the type system or access information of its underlying CLR type.</span></span> <span data-ttu-id="8ebab-492">割り当て操作とアクセスのセキュリティ クリティカルなチェックには、基になる CLR 型を代わりに使用します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-492">For any security-critical checks of assignment operations and access, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsUnknown">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsUnknown ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsUnknown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsUnknown" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsUnknown () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsUnknown();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8ebab-493">この <see cref="T:System.Xaml.XamlType" /> が基になる型システムで解決できない型を表すかどうかを示す値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-493">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a type that cannot be resolved in the underlying type system.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8ebab-494">この <see cref="T:System.Xaml.XamlType" /> が解決できない型を表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-494">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a nonresolvable type; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ebab-495">呼び出しによって、このメソッドを呼び出せる<xref:System.Xaml.XamlType.IsUnknown%2A>です。</span><span class="sxs-lookup"><span data-stu-id="8ebab-495">This method can be invoked by calls to <xref:System.Xaml.XamlType.IsUnknown%2A>.</span></span>  
  
 <span data-ttu-id="8ebab-496">既定の実装では、CLR のリフレクションを使用できます。</span><span class="sxs-lookup"><span data-stu-id="8ebab-496">The default implementation can use CLR reflection.</span></span> <span data-ttu-id="8ebab-497">Null <xref:System.Xaml.XamlType.UnderlyingType%2A>、返します`true`です。</span><span class="sxs-lookup"><span data-stu-id="8ebab-497">For a null <xref:System.Xaml.XamlType.UnderlyingType%2A>, it returns `true`.</span></span>  
  
 <span data-ttu-id="8ebab-498">このメソッドをオーバーライドする場合は<xref:System.Xaml.XamlType.IsUnknown%2A>別のロジックを使用します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-498">Override this method if you want <xref:System.Xaml.XamlType.IsUnknown%2A> to use different logic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsWhitespaceSignificantCollection">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsWhitespaceSignificantCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsWhitespaceSignificantCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsWhitespaceSignificantCollection () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsWhitespaceSignificantCollection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8ebab-499">この <see cref="T:System.Xaml.XamlType" /> が XML 定義によって有意な空白のコレクションを表すかどうかを示す値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-499">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a whitespace significant collection, as per the XML definition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8ebab-500">この <see cref="T:System.Xaml.XamlType" /> が有意な空白のコレクションを表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-500">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a white-space significant collection; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ebab-501">呼び出しによって、このメソッドを呼び出せる<xref:System.Xaml.XamlType.IsWhitespaceSignificantCollection%2A>です。</span><span class="sxs-lookup"><span data-stu-id="8ebab-501">This method can be invoked by calls to <xref:System.Xaml.XamlType.IsWhitespaceSignificantCollection%2A>.</span></span>  
  
 <span data-ttu-id="8ebab-502">既定の実装が読み取りに基づいた値を返します<xref:System.Windows.Markup.WhitespaceSignificantCollectionAttribute>です。</span><span class="sxs-lookup"><span data-stu-id="8ebab-502">The default implementation returns a value based on reading <xref:System.Windows.Markup.WhitespaceSignificantCollectionAttribute>.</span></span> <span data-ttu-id="8ebab-503">チェック、<xref:System.Xaml.XamlType.BaseType%2A>属性に直接の基になる型の属性が見つからない場合。</span><span class="sxs-lookup"><span data-stu-id="8ebab-503">It can also check the <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type.</span></span> <span data-ttu-id="8ebab-504">返すかどうか、値は使用できません、`false`です。</span><span class="sxs-lookup"><span data-stu-id="8ebab-504">If a value is not available, it returns `false`.</span></span>  
  
 <span data-ttu-id="8ebab-505">このメソッドをオーバーライドする場合は<xref:System.Xaml.XamlType.IsWhitespaceSignificantCollection%2A>別のロジックを使用します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-505">Override this method if you want <xref:System.Xaml.XamlType.IsWhitespaceSignificantCollection%2A> to use different logic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsXData">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsXData ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsXData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsXData" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsXData () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsXData();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8ebab-506">この <see cref="T:System.Xaml.XamlType" /> が XAML 定義によって XML <see langword="XDATA" /> を表すかどうかを示す値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-506">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents XML <see langword="XDATA" />, as per the XAML definition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8ebab-507">この <see cref="T:System.Xaml.XamlType" /> が <see langword="true" /> を表す場合は <see langword="XDATA" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-507">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents <see langword="XDATA" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ebab-508">呼び出しによって、このメソッドを呼び出せる<xref:System.Xaml.XamlType.IsXData%2A>です。</span><span class="sxs-lookup"><span data-stu-id="8ebab-508">This method can be invoked by calls to <xref:System.Xaml.XamlType.IsXData%2A>.</span></span>  
  
 <span data-ttu-id="8ebab-509">既定の実装、<xref:System.Xaml.XamlType.CanAssignTo%2A>型に対して直接呼び出す<xref:System.Xml.Serialization.IXmlSerializable>です。</span><span class="sxs-lookup"><span data-stu-id="8ebab-509">The default implementation makes a <xref:System.Xaml.XamlType.CanAssignTo%2A> call indirectly against the type <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 <span data-ttu-id="8ebab-510">このメソッドをオーバーライドする場合は<xref:System.Xaml.XamlType.IsXData%2A>別のロジックを使用します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-510">Override this method if you want <xref:System.Xaml.XamlType.IsXData%2A> to use different logic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupItemType">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlType LookupItemType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlType LookupItemType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupItemType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupItemType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlType ^ LookupItemType();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8ebab-511">この <see cref="T:System.Xaml.XamlType" /> の <see langword="Items" /> プロパティの型情報を提供する値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-511">Returns a value that provides the type information for the <see langword="Items" /> property of this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8ebab-512">コレクション内のアイテムの型の <see cref="T:System.Xaml.XamlType" /> オブジェクト。この <see cref="T:System.Xaml.XamlType" /> がコレクションを表していない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-512">A <see cref="T:System.Xaml.XamlType" /> object for the type of the items in the collection; otherwise, <see langword="null" /> if this <see cref="T:System.Xaml.XamlType" /> does not represent a collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ebab-513">呼び出しによって、このメソッドを呼び出せる<xref:System.Xaml.XamlType.ItemType%2A>です。</span><span class="sxs-lookup"><span data-stu-id="8ebab-513">This method can be invoked by calls to <xref:System.Xaml.XamlType.ItemType%2A>.</span></span>  
  
 <span data-ttu-id="8ebab-514">既定の実装の確認などの CLR リフレクションの概念を使用できます、`Add`メソッドによって<xref:System.Reflection.MethodInfo>を使用して、<xref:System.Reflection.ParameterInfo>以外の場合はチェック<xref:System.Xaml.XamlType.IsArray%2A>; とチェック<xref:System.Xaml.XamlType.BaseType%2A>があるのと同じロジックをしようとします。</span><span class="sxs-lookup"><span data-stu-id="8ebab-514">The default implementation can use CLR reflection concepts, such as checking for an `Add` method by <xref:System.Reflection.MethodInfo> and using the <xref:System.Reflection.ParameterInfo>; checking <xref:System.Xaml.XamlType.IsArray%2A>; and checking <xref:System.Xaml.XamlType.BaseType%2A> and trying the same logic there.</span></span>  
  
 <span data-ttu-id="8ebab-515">このメソッドをオーバーライドする場合は<xref:System.Xaml.XamlType.ItemType%2A>別のロジックを使用します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-515">Override this method if you want <xref:System.Xaml.XamlType.ItemType%2A> to use different logic.</span></span> <span data-ttu-id="8ebab-516">あるケース<xref:System.Xaml.XamlType.LookupCollectionKind%2A>返します<xref:System.Xaml.Schema.XamlCollectionKind.None?displayProperty=nameWithType>返す必要があります`null`です。</span><span class="sxs-lookup"><span data-stu-id="8ebab-516">Cases where <xref:System.Xaml.XamlType.LookupCollectionKind%2A> returns <xref:System.Xaml.Schema.XamlCollectionKind.None?displayProperty=nameWithType> should return `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupKeyType">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlType LookupKeyType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlType LookupKeyType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupKeyType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupKeyType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlType ^ LookupKeyType();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8ebab-517">この <see cref="T:System.Xaml.XamlType" /> がディクショナリを表す場合、この <see cref="T:System.Xaml.XamlType" /> のキー プロパティの型情報を提供する値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-517">Returns a value that provides the type information for the key property of this <see cref="T:System.Xaml.XamlType" />, if the <see cref="T:System.Xaml.XamlType" /> represents a dictionary.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8ebab-518">ディクショナリを使用する場合はキーの型の <see cref="T:System.Xaml.XamlType" /> オブジェクト。この <see cref="T:System.Xaml.XamlType" /> がディクショナリを表していない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-518">A <see cref="T:System.Xaml.XamlType" /> object for the type of the key for dictionary usage, or <see langword="null" /> if this <see cref="T:System.Xaml.XamlType" /> does not represent a dictionary,</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ebab-519">呼び出しによって、このメソッドを呼び出せる<xref:System.Xaml.XamlType.KeyType%2A>です。</span><span class="sxs-lookup"><span data-stu-id="8ebab-519">This method can be invoked by calls to <xref:System.Xaml.XamlType.KeyType%2A>.</span></span>  
  
 <span data-ttu-id="8ebab-520">既定の実装の確認などの CLR リフレクションの概念を使用できます、`Add`メソッドによって<xref:System.Reflection.MethodInfo>を使用して、 <xref:System.Reflection.ParameterInfo>; とチェック<xref:System.Xaml.XamlType.BaseType%2A>があるのと同じロジックをしようとします。</span><span class="sxs-lookup"><span data-stu-id="8ebab-520">The default implementation can use CLR reflection concepts, such as checking for an `Add` method by <xref:System.Reflection.MethodInfo> and using the <xref:System.Reflection.ParameterInfo>; and checking <xref:System.Xaml.XamlType.BaseType%2A> and trying the same logic there.</span></span>  
  
 <span data-ttu-id="8ebab-521">このメソッドをオーバーライドする場合は<xref:System.Xaml.XamlType.KeyType%2A>別のロジックを使用します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-521">Override this method if you want <xref:System.Xaml.XamlType.KeyType%2A> to use different logic.</span></span> <span data-ttu-id="8ebab-522">あるケース<xref:System.Xaml.XamlType.LookupCollectionKind%2A>返さない<xref:System.Xaml.Schema.XamlCollectionKind.Dictionary?displayProperty=nameWithType>返す必要があります`null`です。</span><span class="sxs-lookup"><span data-stu-id="8ebab-522">Cases where <xref:System.Xaml.XamlType.LookupCollectionKind%2A> does not return <xref:System.Xaml.Schema.XamlCollectionKind.Dictionary?displayProperty=nameWithType> should return `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupMarkupExtensionReturnType">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlType LookupMarkupExtensionReturnType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlType LookupMarkupExtensionReturnType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupMarkupExtensionReturnType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupMarkupExtensionReturnType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlType ^ LookupMarkupExtensionReturnType();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8ebab-523">マークアップ拡張機能を表す場合、この <see cref="T:System.Xaml.XamlType" /> の返された <see langword="ProvideValue" /> の型情報を提供する値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-523">Returns a value that provides the type information for the returned <see langword="ProvideValue" /> of this <see cref="T:System.Xaml.XamlType" />, if it represents a markup extension.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8ebab-524">マークアップ拡張機能を使用する場合は戻り値の型の <see cref="T:System.Xaml.XamlType" /> オブジェクト。この <see cref="T:System.Xaml.XamlType" /> がマークアップ拡張機能を表していない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-524">A <see cref="T:System.Xaml.XamlType" /> object for the return type for markup extension usage; otherwise, <see langword="null" />, if this <see cref="T:System.Xaml.XamlType" /> does not represent a markup extension.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ebab-525">呼び出しによって、このメソッドを呼び出せる<xref:System.Xaml.XamlType.MarkupExtensionReturnType%2A>です。</span><span class="sxs-lookup"><span data-stu-id="8ebab-525">This method can be invoked by calls to <xref:System.Xaml.XamlType.MarkupExtensionReturnType%2A>.</span></span>  
  
 <span data-ttu-id="8ebab-526">既定の実装を返します、<xref:System.Xaml.XamlType>読み取りに基づいて<xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute>です。</span><span class="sxs-lookup"><span data-stu-id="8ebab-526">The default implementation returns a <xref:System.Xaml.XamlType> on the basis of reading <xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute>.</span></span> <span data-ttu-id="8ebab-527">チェック<xref:System.Xaml.XamlType.BaseType%2A>属性に直接の基になる型の属性が見つからない場合。</span><span class="sxs-lookup"><span data-stu-id="8ebab-527">It can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type.</span></span> <span data-ttu-id="8ebab-528">返すかどうか、値は使用できません、`null`です。</span><span class="sxs-lookup"><span data-stu-id="8ebab-528">If a value is not available, it returns `null`.</span></span>  
  
 <span data-ttu-id="8ebab-529">このメソッドをオーバーライドする場合は<xref:System.Xaml.XamlType.MarkupExtensionReturnType%2A>別のロジックを使用します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-529">Override this method if you want <xref:System.Xaml.XamlType.MarkupExtensionReturnType%2A> to use different logic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupMember">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlMember LookupMember (string name, bool skipReadOnlyCheck);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlMember LookupMember(string name, bool skipReadOnlyCheck) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupMember(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupMember (name As String, skipReadOnlyCheck As Boolean) As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlMember ^ LookupMember(System::String ^ name, bool skipReadOnlyCheck);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="skipReadOnlyCheck" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="8ebab-530">取得するメンバーの名前 (文字列)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-530">The name of the member to get (as a string).</span>
          </span>
        </param>
        <param name="skipReadOnlyCheck">
          <span data-ttu-id="8ebab-531">メンバーの <see cref="P:System.Xaml.XamlMember.IsReadOnly" /> の値が <see langword="true" /> であってもメンバーを返す場合は <see langword="true" />。<see cref="P:System.Xaml.XamlMember.IsReadOnly" /> のメンバーを返さない場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-531">
              <see langword="true" /> to return a member even if that member has a <see langword="true" /> value for <see cref="P:System.Xaml.XamlMember.IsReadOnly" />; <see langword="false" /> to not return a <see cref="P:System.Xaml.XamlMember.IsReadOnly" /> member.</span>
          </span>
          <span data-ttu-id="8ebab-532">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-532">The default is <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8ebab-533">この <see cref="T:System.Xaml.XamlMember" /> から、特定の名前が付けられたメンバーの <see cref="T:System.Xaml.XamlType" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-533">Returns the <see cref="T:System.Xaml.XamlMember" /> for a specific named member from this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8ebab-534">該当するメンバーが見つかった場合はメンバーの <see cref="T:System.Xaml.XamlMember" /> 情報。それ以外の場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-534">The <see cref="T:System.Xaml.XamlMember" /> information for the member, if a member was found; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ebab-535">呼び出しによって、このメソッドを呼び出せる<xref:System.Xaml.XamlType.GetMember%2A>です。</span><span class="sxs-lookup"><span data-stu-id="8ebab-535">This method can be invoked by calls to <xref:System.Xaml.XamlType.GetMember%2A>.</span></span>  
  
 <span data-ttu-id="8ebab-536">既定の実装を返します、 <xref:System.Xaml.XamlType> CLR の内部のリフレクションとスキーマのコンテキストで評価に基づいています。</span><span class="sxs-lookup"><span data-stu-id="8ebab-536">The default implementation returns a <xref:System.Xaml.XamlType> based on internal CLR reflection and evaluation against the schema context.</span></span>  
  
 <span data-ttu-id="8ebab-537">このメソッドをオーバーライドする場合は<xref:System.Xaml.XamlType.GetMember%2A>別のロジックを使用します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-537">Override this method if you want <xref:System.Xaml.XamlType.GetMember%2A> to use different logic.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8ebab-538"><xref:System.Xaml.XamlType.LookupMember%2A> 仮想で、そのため、オーバーライドできます。</span><span class="sxs-lookup"><span data-stu-id="8ebab-538"><xref:System.Xaml.XamlType.LookupMember%2A> is virtual, and therefore, can be overridden.</span></span> <span data-ttu-id="8ebab-539">上書きされる可能性があります (悪意のあるものかどうかまたはそれ以外の場合) と予想される方法で不要になった位置が揃うように、報告された XAML 型のメンバーを変更する、 <xref:System.ComponentModel.TypeDescriptor> `Get*`基になる CLR 型に関する情報。</span><span class="sxs-lookup"><span data-stu-id="8ebab-539">The override has the potential (whether for malicious purposes or otherwise) to change the reported members of a XAML type so that they no longer align in an expected way with the <xref:System.ComponentModel.TypeDescriptor> `Get*` information about the underlying CLR type.</span></span> <span data-ttu-id="8ebab-540">Reporting メンバーのセキュリティ クリティカルなチェックには、基になる CLR 型を代わりに使用します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-540">For any security-critical checks of member reporting, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupPositionalParameters">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; LookupPositionalParameters (int parameterCount);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; LookupPositionalParameters(int32 parameterCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupPositionalParameters(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupPositionalParameters (parameterCount As Integer) As IList(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ LookupPositionalParameters(int parameterCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parameterCount">
          <span data-ttu-id="8ebab-541">情報を取得する必要のある、特定の構文またはコンストラクター モードの個数 (アリティ)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-541">The count (arity) of the particular syntax or constructor mode that you want information about.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8ebab-542">マークアップ拡張型の場合は、この <see cref="T:System.Xaml.XamlType" /> の特定のマークアップ拡張機能の使用でサポートされている位置指定パラメーターの型を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-542">For markup extension types, returns the types of the positional parameters that are supported in a specific markup extension usage for this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8ebab-543">
            <see cref="T:System.Xaml.XamlType" /> 値のリスト。各 <see cref="T:System.Xaml.XamlType" /> は構文内でその位置の型に相当します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-543">A list of <see cref="T:System.Xaml.XamlType" /> values where each such <see cref="T:System.Xaml.XamlType" /> is the type for that position in the syntax.</span>
          </span>
          <span data-ttu-id="8ebab-544">マークアップ拡張機能のマークアップ入力を指定する場合は、これらの型を同一の順序で指定する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-544">You must specify those types in the same order when supplying markup input for the markup extension.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ebab-545">呼び出しによって、このメソッドを呼び出せる<xref:System.Xaml.XamlType.GetPositionalParameters%2A>です。</span><span class="sxs-lookup"><span data-stu-id="8ebab-545">This method can be invoked by calls to <xref:System.Xaml.XamlType.GetPositionalParameters%2A>.</span></span>  
  
 <span data-ttu-id="8ebab-546">既定の実装では、コンス トラクターを検索して、アリティのチェックに基づく内部のリフレクション情報を使用します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-546">The default implementation uses internal reflection information based on finding constructors and checking the arity.</span></span> <span data-ttu-id="8ebab-547">このメソッドをオーバーライドする場合は<xref:System.Xaml.XamlType.GetPositionalParameters%2A>別のロジックを使用します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-547">Override this method if you want <xref:System.Xaml.XamlType.GetPositionalParameters%2A> to use different logic.</span></span>  
  
 <span data-ttu-id="8ebab-548">この API は、関連する場合は、こののみ<xref:System.Xaml.XamlType>マークアップ拡張機能を表します (<xref:System.Xaml.XamlType.IsMarkupExtension%2A>は`true`)。</span><span class="sxs-lookup"><span data-stu-id="8ebab-548">This API is only relevant if this <xref:System.Xaml.XamlType> represents a markup extension (<xref:System.Xaml.XamlType.IsMarkupExtension%2A> is `true`).</span></span>  
  
 <span data-ttu-id="8ebab-549">入力`parameterCount`を使用しない特定の位置指定パラメーターの型を要求します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-549">The input `parameterCount` is not for requesting the type of a specific positional parameter.</span></span> <span data-ttu-id="8ebab-550">マークアップ拡張機能の使用のアリティを指定することがあります。</span><span class="sxs-lookup"><span data-stu-id="8ebab-550">It is for specifying the arity of a markup extension usage.</span></span> <span data-ttu-id="8ebab-551">多くの場合、マークアップ拡張機能の使用は、複数の署名を持つし、区別するために位置指定パラメーターの異なるパラメーター アリティ (数) を使用します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-551">Markup extension usage often has multiple signatures and uses different parameter arity (count) of positional parameters to differentiate.</span></span> <span data-ttu-id="8ebab-552">ただし、重複 arities を許可して、差別化要因の位置指定パラメーターの型を使用するスキーマ コンテキストを構成することができます。</span><span class="sxs-lookup"><span data-stu-id="8ebab-552">However, you can configure a schema context to allow duplicate arities and use types of the positional parameters for differentiation.</span></span> <span data-ttu-id="8ebab-553">詳細については、「<xref:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="8ebab-553">For more information, see <xref:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity%2A>.</span></span> <span data-ttu-id="8ebab-554">特定のアリティ count の場合は、パラメーターの位置と型が異なります。</span><span class="sxs-lookup"><span data-stu-id="8ebab-554">For a specific arity count, the parameter positions and types can vary.</span></span> <span data-ttu-id="8ebab-555">特定のアリティのマークアップ拡張機能の使用の位置指定の種類を取得するには、最初に呼び出す<xref:System.Xaml.XamlType.GetPositionalParameters%2A>アリティ カウントします。</span><span class="sxs-lookup"><span data-stu-id="8ebab-555">To get the positional type of a specific arity's markup extension usage, you first call <xref:System.Xaml.XamlType.GetPositionalParameters%2A> with the arity count.</span></span> <span data-ttu-id="8ebab-556">返されるコレクションからその位置に項目を取得します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-556">Then get the item at that position from the returned collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupSetMarkupExtensionHandler">
      <MemberSignature Language="C#" Value="protected virtual EventHandler&lt;System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt; LookupSetMarkupExtensionHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.EventHandler`1&lt;class System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt; LookupSetMarkupExtensionHandler() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupSetMarkupExtensionHandler" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupSetMarkupExtensionHandler () As EventHandler(Of XamlSetMarkupExtensionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual EventHandler&lt;System::Windows::Markup::XamlSetMarkupExtensionEventArgs ^&gt; ^ LookupSetMarkupExtensionHandler();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8ebab-557">マークアップ拡張機能のセット操作で使用するハンドラー コールバックを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-557">Returns a handler callback to use for the set operations of markup extensions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8ebab-558">マークアップ拡張機能のセット操作で使用するハンドラー コールバック。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-558">A handler callback to use for the set operations of markup extensions.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ebab-559">既定の実装が読み取りに基づいた値を返します<xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute>です。</span><span class="sxs-lookup"><span data-stu-id="8ebab-559">The default implementation returns a value based on reading <xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute>.</span></span> <span data-ttu-id="8ebab-560">チェック<xref:System.Xaml.XamlType.BaseType%2A>属性に直接の基になる型の属性が見つからない場合。</span><span class="sxs-lookup"><span data-stu-id="8ebab-560">It can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type.</span></span> <span data-ttu-id="8ebab-561">返すかどうか、値は使用できません、`null`です。</span><span class="sxs-lookup"><span data-stu-id="8ebab-561">If a value is unavailable, it returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupSetTypeConverterHandler">
      <MemberSignature Language="C#" Value="protected virtual EventHandler&lt;System.Windows.Markup.XamlSetTypeConverterEventArgs&gt; LookupSetTypeConverterHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.EventHandler`1&lt;class System.Windows.Markup.XamlSetTypeConverterEventArgs&gt; LookupSetTypeConverterHandler() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupSetTypeConverterHandler" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupSetTypeConverterHandler () As EventHandler(Of XamlSetTypeConverterEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual EventHandler&lt;System::Windows::Markup::XamlSetTypeConverterEventArgs ^&gt; ^ LookupSetTypeConverterHandler();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Markup.XamlSetTypeConverterEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8ebab-562">型コンバーターを設定する場合に使用するハンドラーを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-562">Returns a handler to use for type converter setting cases.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8ebab-563">型コンバーターを設定する場合に使用するハンドラー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-563">A handler to use for type converter setting cases.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ebab-564">既定の実装が読み取りに基づいた値を返します<xref:System.Windows.Markup.XamlSetTypeConverterAttribute>です。</span><span class="sxs-lookup"><span data-stu-id="8ebab-564">The default implementation returns a value based on reading <xref:System.Windows.Markup.XamlSetTypeConverterAttribute>.</span></span> <span data-ttu-id="8ebab-565">チェック<xref:System.Xaml.XamlType.BaseType%2A>属性に直接の基になる型の属性が見つからない場合。</span><span class="sxs-lookup"><span data-stu-id="8ebab-565">It can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type.</span></span> <span data-ttu-id="8ebab-566">返すかどうか、値は使用できません、`null`です。</span><span class="sxs-lookup"><span data-stu-id="8ebab-566">If a value is unavailable, it returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupTrimSurroundingWhitespace">
      <MemberSignature Language="C#" Value="protected virtual bool LookupTrimSurroundingWhitespace ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupTrimSurroundingWhitespace() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupTrimSurroundingWhitespace" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupTrimSurroundingWhitespace () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupTrimSurroundingWhitespace();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8ebab-567">周囲の空白をトリムするモードを使用して、この <see cref="T:System.Xaml.XamlType" /> をシリアル化する必要があるかどうかを示す値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-567">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> should be serialized using a mode that  trims surrounding whitespace.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8ebab-568">周囲の空白をトリムするモードでこの <see cref="T:System.Xaml.XamlType" /> をシリアル化する必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-568">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> should be serialized in a mode that trims surrounding whitespace; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ebab-569">呼び出しによって、このメソッドを呼び出せる<xref:System.Xaml.XamlType.TrimSurroundingWhitespace%2A>です。</span><span class="sxs-lookup"><span data-stu-id="8ebab-569">This method can be invoked by calls to <xref:System.Xaml.XamlType.TrimSurroundingWhitespace%2A>.</span></span>  
  
 <span data-ttu-id="8ebab-570">既定の実装が読み取りに基づいた値を返します<xref:System.Windows.Markup.TrimSurroundingWhitespaceAttribute>です。</span><span class="sxs-lookup"><span data-stu-id="8ebab-570">The default implementation returns a value based on reading <xref:System.Windows.Markup.TrimSurroundingWhitespaceAttribute>.</span></span> <span data-ttu-id="8ebab-571">チェック<xref:System.Xaml.XamlType.BaseType%2A>属性に直接の基になる型の属性が見つからない場合。</span><span class="sxs-lookup"><span data-stu-id="8ebab-571">It can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type.</span></span> <span data-ttu-id="8ebab-572">返すかどうか、値は使用できません、`false`です。</span><span class="sxs-lookup"><span data-stu-id="8ebab-572">If a value is unavailable, it returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupTypeConverter">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt; LookupTypeConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.ComponentModel.TypeConverter&gt; LookupTypeConverter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupTypeConverter" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupTypeConverter () As XamlValueConverter(Of TypeConverter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ LookupTypeConverter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8ebab-573">この <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> の値に対する型変換動作を表す <see cref="T:System.ComponentModel.TypeConverter" /> 制約がある <see cref="T:System.Xaml.XamlType" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-573">Returns a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> that has a <see cref="T:System.ComponentModel.TypeConverter" /> constraint, which represents type-conversion behavior for values of this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8ebab-574">この <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> の値に対する型変換動作を表す <see cref="T:System.ComponentModel.TypeConverter" /> 制約を持つ <see cref="T:System.Xaml.XamlType" />、または <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-574">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> with <see cref="T:System.ComponentModel.TypeConverter" /> constraint that represents type-conversion behavior for values of this <see cref="T:System.Xaml.XamlType" />; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ebab-575">呼び出しによって、このメソッドを呼び出せる<xref:System.Xaml.XamlType.TypeConverter%2A>です。</span><span class="sxs-lookup"><span data-stu-id="8ebab-575">This method can be invoked by calls to <xref:System.Xaml.XamlType.TypeConverter%2A>.</span></span>  
  
 <span data-ttu-id="8ebab-576">既定の実装が読み取りに基づいた値を返します<xref:System.ComponentModel.TypeConverterAttribute>です。</span><span class="sxs-lookup"><span data-stu-id="8ebab-576">The default implementation returns a value based on reading <xref:System.ComponentModel.TypeConverterAttribute>.</span></span> <span data-ttu-id="8ebab-577">既定の実装を確認できますも<xref:System.Xaml.XamlType.BaseType%2A>属性に直接の基になる型の属性が見つからない場合。</span><span class="sxs-lookup"><span data-stu-id="8ebab-577">The default implementation can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type.</span></span> <span data-ttu-id="8ebab-578">列挙型、共通の値型とジェネリックの既定の変換の特別なロジックも含まれています。</span><span class="sxs-lookup"><span data-stu-id="8ebab-578">It also includes special logic for default conversion of enumerations, common value types, and generics.</span></span> <span data-ttu-id="8ebab-579">返すかどうか、値は使用できません、`null`です。</span><span class="sxs-lookup"><span data-stu-id="8ebab-579">If a value is unavailable, it returns `null`.</span></span>  
  
 <span data-ttu-id="8ebab-580">このメソッドをオーバーライドする場合は<xref:System.Xaml.XamlType.TypeConverter%2A>別のロジックを使用します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-580">Override this method if you want <xref:System.Xaml.XamlType.TypeConverter%2A> to use different logic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupUnderlyingType">
      <MemberSignature Language="C#" Value="protected virtual Type LookupUnderlyingType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Type LookupUnderlyingType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupUnderlyingType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupUnderlyingType () As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual Type ^ LookupUnderlyingType();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8ebab-581">この <see cref="T:System.Type" /> の基になる CLR <see cref="T:System.Xaml.XamlType" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-581">Returns the CLR <see cref="T:System.Type" /> that underlies this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8ebab-582">この <see cref="T:System.Type" /> の基になる CLR <see cref="T:System.Xaml.XamlType" />、または <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-582">The CLR <see cref="T:System.Type" /> that underlies this <see cref="T:System.Xaml.XamlType" />; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ebab-583">呼び出しによって、このメソッドを呼び出せる<xref:System.Xaml.XamlType.UnderlyingType%2A>です。</span><span class="sxs-lookup"><span data-stu-id="8ebab-583">This method can be invoked by calls to <xref:System.Xaml.XamlType.UnderlyingType%2A>.</span></span>  
  
 <span data-ttu-id="8ebab-584">既定の実装では、内部のフィールドを返します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-584">The default implementation returns an internal field.</span></span> <span data-ttu-id="8ebab-585">構築時にそのフィールドが初期化される一般にし、その値がコンス トラクターが呼び出されたと指定した情報に基づいています。</span><span class="sxs-lookup"><span data-stu-id="8ebab-585">That field is generally initialized during construction and its value is based on which constructor was called and the information that you provided.</span></span>  
  
 <span data-ttu-id="8ebab-586">このメソッドをオーバーライドする場合は<xref:System.Xaml.XamlType.UnderlyingType%2A>別のロジックを使用します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-586">Override this method if you want <xref:System.Xaml.XamlType.UnderlyingType%2A> to use different logic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupUsableDuringInitialization">
      <MemberSignature Language="C#" Value="protected virtual bool LookupUsableDuringInitialization ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupUsableDuringInitialization() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupUsableDuringInitialization" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupUsableDuringInitialization () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupUsableDuringInitialization();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8ebab-587">XAML の初期化中にこの <see cref="T:System.Xaml.XamlType" /> がトップダウンで構築されるかどうかを示す値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-587">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> is built top-down during XAML initialization.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8ebab-588">XAML の初期化中にこの <see cref="T:System.Xaml.XamlType" /> がトップダウンで構築される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-588">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> is built top-down during XAML initialization; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ebab-589">上から下へは、オブジェクト グラフを作成するときに、XAML プロセッサの動作を概算する比喩です。</span><span class="sxs-lookup"><span data-stu-id="8ebab-589">Top-down is a metaphor that approximates XAML processor behavior when it creates the object graph.</span></span> <span data-ttu-id="8ebab-590">構築時に、トップダウン、型がインスタンス化される、親にアタッチされているし、そのプロパティが設定します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-590">When built top-down, a type is instantiated, attached to the parent, and has its properties set.</span></span> <span data-ttu-id="8ebab-591">トップダウンの構築では、ハンドラーのプロパティ変更の複数回の呼び出しで回避できます。</span><span class="sxs-lookup"><span data-stu-id="8ebab-591">Top-down construction avoids invoking property-changed handlers multiple times.</span></span> <span data-ttu-id="8ebab-592">このような処理は、オブジェクト グラフに波及し、そのため、複数のハンドラーの呼び出しを排除し、オブジェクト グラフの起動時のパフォーマンスの最適化を提供します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-592">Such handling ripples up the object graph and therefore, eliminates the multiple handler calls and provides a performance optimization for startup of the object graph.</span></span>  
  
 <span data-ttu-id="8ebab-593">呼び出しによって、このメソッドを呼び出せる<xref:System.Xaml.XamlType.IsUsableDuringInitialization%2A>です。</span><span class="sxs-lookup"><span data-stu-id="8ebab-593">This method can be invoked by calls to <xref:System.Xaml.XamlType.IsUsableDuringInitialization%2A>.</span></span>  
  
 <span data-ttu-id="8ebab-594">既定の実装が読み取りに基づいた値を返します<xref:System.Windows.Markup.UsableDuringInitializationAttribute>です。</span><span class="sxs-lookup"><span data-stu-id="8ebab-594">The default implementation returns a value based on reading <xref:System.Windows.Markup.UsableDuringInitializationAttribute>.</span></span> <span data-ttu-id="8ebab-595">チェック<xref:System.Xaml.XamlType.BaseType%2A>属性に直接の基になる型の属性が見つからない場合。</span><span class="sxs-lookup"><span data-stu-id="8ebab-595">It can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type.</span></span> <span data-ttu-id="8ebab-596">返すかどうか、値は使用できません、`false`です。</span><span class="sxs-lookup"><span data-stu-id="8ebab-596">If a value is unavailable, it returns `false`.</span></span>  
  
 <span data-ttu-id="8ebab-597">このメソッドをオーバーライドする場合は<xref:System.Xaml.XamlType.IsUsableDuringInitialization%2A>別のロジックを使用します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-597">Override this method if you want <xref:System.Xaml.XamlType.IsUsableDuringInitialization%2A> to use different logic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupValueSerializer">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt; LookupValueSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Windows.Markup.ValueSerializer&gt; LookupValueSerializer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupValueSerializer" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupValueSerializer () As XamlValueConverter(Of ValueSerializer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlValueConverter&lt;System::Windows::Markup::ValueSerializer ^&gt; ^ LookupValueSerializer();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8ebab-598">この <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> の値に対する値のシリアル化動作を表す <see cref="T:System.Windows.Markup.ValueSerializer" /> 制約がある <see cref="T:System.Xaml.XamlType" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-598">Returns a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> that has a <see cref="T:System.Windows.Markup.ValueSerializer" /> constraint, which represents value serialization behavior for values of this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8ebab-599">この <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> の値に対する値のシリアル化動作を表す <see cref="T:System.Windows.Markup.ValueSerializer" /> 制約を持つ <see cref="T:System.Xaml.XamlType" />、または <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-599">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> with <see cref="T:System.Windows.Markup.ValueSerializer" /> constraint that represents value serialization behavior for values of this <see cref="T:System.Xaml.XamlType" />; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ebab-600">呼び出しによって、このメソッドを呼び出せる<xref:System.Xaml.XamlType.ValueSerializer%2A>です。</span><span class="sxs-lookup"><span data-stu-id="8ebab-600">This method can be invoked by calls to <xref:System.Xaml.XamlType.ValueSerializer%2A>.</span></span>  
  
 <span data-ttu-id="8ebab-601">既定の実装が読み取りに基づいた値を返します<xref:System.Windows.Markup.ValueSerializerAttribute>です。</span><span class="sxs-lookup"><span data-stu-id="8ebab-601">The default implementation returns a value based on reading <xref:System.Windows.Markup.ValueSerializerAttribute>.</span></span> <span data-ttu-id="8ebab-602">チェック<xref:System.Xaml.XamlType.BaseType%2A>属性に直接の基になる型の属性が見つからない場合。</span><span class="sxs-lookup"><span data-stu-id="8ebab-602">It can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type.</span></span> <span data-ttu-id="8ebab-603">列挙型、共通の値型またはジェネリックの既定のシリアル化の特別なロジックも含まれています。</span><span class="sxs-lookup"><span data-stu-id="8ebab-603">It also includes special logic for default serialization of enumerations, common value types, or generics.</span></span> <span data-ttu-id="8ebab-604">返すかどうか、値は使用できません、`null`です。</span><span class="sxs-lookup"><span data-stu-id="8ebab-604">If a value is unavailable, it returns `null`.</span></span>  
  
 <span data-ttu-id="8ebab-605">このメソッドをオーバーライドする場合は<xref:System.Xaml.XamlType.ValueSerializer%2A>別のロジックを使用します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-605">Override this method if you want <xref:System.Xaml.XamlType.ValueSerializer%2A> to use different logic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkupExtensionReturnType">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType MarkupExtensionReturnType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType MarkupExtensionReturnType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.MarkupExtensionReturnType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MarkupExtensionReturnType As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ MarkupExtensionReturnType { System::Xaml::XamlType ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ebab-606">マークアップ拡張機能を表す場合、この <see cref="T:System.Xaml.XamlType" /> の返された <see langword="ProvideValue" /> の型情報を提供する値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-606">Gets a value that provides the type information for the returned <see langword="ProvideValue" /> of this <see cref="T:System.Xaml.XamlType" />, if it represents a markup extension.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8ebab-607">マークアップ拡張機能を使用する場合は戻り値の型の <see cref="T:System.Xaml.XamlType" /> オブジェクト。この <see cref="T:System.Xaml.XamlType" /> がマークアップ拡張機能を表していない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-607">A <see cref="T:System.Xaml.XamlType" /> object for the return type for markup extension usage; otherwise, <see langword="null" />, if this <see cref="T:System.Xaml.XamlType" /> does not represent a markup extension.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ebab-608">このプロパティは関連する場合のみ<xref:System.Xaml.XamlType>マークアップ拡張機能を表します (`x:MarkupExtension`が割り当てられた型リスト)。</span><span class="sxs-lookup"><span data-stu-id="8ebab-608">This property is only relevant if this <xref:System.Xaml.XamlType> represents a markup extension (`x:MarkupExtension` is in the assignable types list).</span></span>  
  
 <span data-ttu-id="8ebab-609">既定値内部 CLR リフレクション手法を使用しないかどうか、 <xref:System.Xaml.XamlType>、このプロパティへの呼び出しを呼び出すことができます<xref:System.Xaml.XamlType.LookupMarkupExtensionReturnType%2A>の上書きを<xref:System.Xaml.XamlType>クラスを派生します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-609">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupMarkupExtensionReturnType%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="8ebab-610">戻り値およびその他の動作に関する詳細については、ドキュメントを参照して<xref:System.Xaml.XamlType.LookupMarkupExtensionReturnType%2A>この型にします。</span><span class="sxs-lookup"><span data-stu-id="8ebab-610">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupMarkupExtensionReturnType%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ebab-611">この <see cref="T:System.Xaml.XamlType" /> が表す型の文字列名を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-611">Gets the string name of the type that this <see cref="T:System.Xaml.XamlType" /> represents.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8ebab-612">この XAML 型の文字列名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-612">The string name of this XAML type.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ebab-613">このプロパティは、通常、スキーマで構築された名前を取得 (あたり、<xref:System.Xaml.XamlType.%23ctor%2A>署名)、またはの名前、 <xref:System.Type>CLR 型システムの適切なコンス トラクターを使用して構成する場合は、します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-613">This property typically gets the schema-constructed name (per the <xref:System.Xaml.XamlType.%23ctor%2A> signature), or the name of the <xref:System.Type>, if it is constructed by using the pertinent constructor of the CLR type system.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Xaml.XamlType xamlType1, System.Xaml.XamlType xamlType2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Xaml.XamlType xamlType1, class System.Xaml.XamlType xamlType2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.op_Equality(System.Xaml.XamlType,System.Xaml.XamlType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (xamlType1 As XamlType, xamlType2 As XamlType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Xaml::XamlType ^ xamlType1, System::Xaml::XamlType ^ xamlType2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlType1" Type="System.Xaml.XamlType" />
        <Parameter Name="xamlType2" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="xamlType1">
          <span data-ttu-id="8ebab-614">
            <see cref="T:System.Xaml.XamlType" /> または <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-614">A <see cref="T:System.Xaml.XamlType" /> or <see langword="null" />.</span>
          </span>
        </param>
        <param name="xamlType2">
          <span data-ttu-id="8ebab-615">
            <see cref="T:System.Xaml.XamlType" /> または <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-615">A <see cref="T:System.Xaml.XamlType" /> or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8ebab-616">指定した 2 つの <see cref="T:System.Xaml.XamlType" /> オブジェクトの値が同一かどうかを判断します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-616">Determines whether two specified <see cref="T:System.Xaml.XamlType" /> objects have the same value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8ebab-617">
            <paramref name="xamlType1" /> の値が <paramref name="xamlType2" /> の値と同じ場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-617">
              <see langword="true" /> if the value of <paramref name="xamlType1" /> is the same as the value of <paramref name="xamlType2" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Xaml.XamlType xamlType1, System.Xaml.XamlType xamlType2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Xaml.XamlType xamlType1, class System.Xaml.XamlType xamlType2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.op_Inequality(System.Xaml.XamlType,System.Xaml.XamlType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (xamlType1 As XamlType, xamlType2 As XamlType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Xaml::XamlType ^ xamlType1, System::Xaml::XamlType ^ xamlType2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlType1" Type="System.Xaml.XamlType" />
        <Parameter Name="xamlType2" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="xamlType1">
          <span data-ttu-id="8ebab-618">
            <see cref="T:System.Xaml.XamlType" /> または <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-618">A <see cref="T:System.Xaml.XamlType" /> or <see langword="null" />.</span>
          </span>
        </param>
        <param name="xamlType2">
          <span data-ttu-id="8ebab-619">
            <see cref="T:System.Xaml.XamlType" /> または <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-619">A <see cref="T:System.Xaml.XamlType" /> or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8ebab-620">指定した 2 つの <see cref="T:System.Xaml.XamlType" /> オブジェクトの値が異なるかどうかを判断します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-620">Determines whether two specified <see cref="T:System.Xaml.XamlType" /> objects have different values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8ebab-621">
            <see langword="true" /> の値が <paramref name="xamlType1" /> の値と異なる場合は <paramref name="xamlType2" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-621">
              <see langword="true" /> if the value of <paramref name="xamlType1" /> is different from the value of <paramref name="xamlType2" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredXamlNamespace">
      <MemberSignature Language="C#" Value="public string PreferredXamlNamespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PreferredXamlNamespace" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.PreferredXamlNamespace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreferredXamlNamespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PreferredXamlNamespace { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ebab-622">この <see cref="T:System.Xaml.XamlType" /> のプライマリ XAML 名前空間である単一の名前空間を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-622">Gets the single XAML namespace that is the primary XAML namespace for this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8ebab-623">文字列で表される、この XAML 型のプライマリ XAML 名前空間の識別子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-623">The identifier, as a string, of the primary XAML namespace for this XAML type.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ebab-624">この実装は呼び出すことと同じ値を提供<xref:System.Xaml.XamlType.GetXamlNamespaces%2A>と返される列挙可能なセットから最初の値の文字列を取得します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-624">This implementation provides the same value as calling <xref:System.Xaml.XamlType.GetXamlNamespaces%2A> and then getting the first value string from the returned enumerable set.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SchemaContext">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlSchemaContext SchemaContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlSchemaContext SchemaContext" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.SchemaContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SchemaContext As XamlSchemaContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlSchemaContext ^ SchemaContext { System::Xaml::XamlSchemaContext ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlSchemaContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ebab-625">この <see cref="T:System.Xaml.XamlSchemaContext" /> を処理するアクティブな <see cref="T:System.Xaml.XamlType" /> を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-625">Gets the active <see cref="T:System.Xaml.XamlSchemaContext" /> for processing this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8ebab-626">この <see cref="T:System.Xaml.XamlSchemaContext" /> を処理するアクティブな <see cref="T:System.Xaml.XamlType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-626">The active <see cref="T:System.Xaml.XamlSchemaContext" /> for processing this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ebab-627"><xref:System.Xaml.XamlSchemaContext> 必要なパラメーターの入力を構築するときに、<xref:System.Xaml.XamlType>です。</span><span class="sxs-lookup"><span data-stu-id="8ebab-627"><xref:System.Xaml.XamlSchemaContext> is a required parameter entry when constructing a <xref:System.Xaml.XamlType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8ebab-628">この <see cref="T:System.Xaml.XamlType" /> の文字列表現を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-628">Returns a string representation of this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8ebab-629">この <see cref="T:System.Xaml.XamlType" /> の文字列表現。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-629">A string representation of this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ebab-630"><xref:System.Xaml.XamlType>の実装<xref:System.Object.ToString%2A>を返します、<xref:System.Xaml.XamlType.Name%2A>のプロパティ、<xref:System.Xaml.XamlType>です。</span><span class="sxs-lookup"><span data-stu-id="8ebab-630">The <xref:System.Xaml.XamlType> implementation of <xref:System.Object.ToString%2A> returns the <xref:System.Xaml.XamlType.Name%2A> property of the <xref:System.Xaml.XamlType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrimSurroundingWhitespace">
      <MemberSignature Language="C#" Value="public bool TrimSurroundingWhitespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TrimSurroundingWhitespace" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.TrimSurroundingWhitespace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TrimSurroundingWhitespace As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TrimSurroundingWhitespace { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ebab-631">コンテンツを囲んでいる空白をトリムするシリアル化の空白処理動作がこの <see cref="T:System.Xaml.XamlType" /> に含まれているかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-631">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> has whitespace handling behavior for serialization that trims the surrounding whitespace in its content.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8ebab-632">この <see cref="T:System.Xaml.XamlType" /> が空白をトリムする型を表している場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-632">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a type that uses whitespace trimming; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ebab-633">既定値内部 CLR リフレクション手法を使用しないかどうか、 <xref:System.Xaml.XamlType>、このプロパティへの呼び出しを呼び出すことができます<xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A>の上書きを<xref:System.Xaml.XamlType>クラスを派生します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-633">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="8ebab-634">戻り値およびその他の動作に関する詳細については、ドキュメントを参照して<xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A>この型にします。</span><span class="sxs-lookup"><span data-stu-id="8ebab-634">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeArguments">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; TypeArguments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; TypeArguments" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.TypeArguments" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeArguments As IList(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ TypeArguments { System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ebab-635">この <see cref="T:System.Xaml.XamlType" /> がジェネリックを表す場合に型引数のリストを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-635">Gets a list of type arguments for cases where this <see cref="T:System.Xaml.XamlType" /> represents a generic.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8ebab-636">型引数の型のリスト。または、この <see cref="T:System.Xaml.XamlType" /> がジェネリックを表していない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-636">A list of type argument types; otherwise, <see langword="null" />, if this <see cref="T:System.Xaml.XamlType" /> does not represent a generic.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ebab-637">特定のシナリオがある、<xref:System.Xaml.XamlType>を呼び出す場合、<xref:System.Xaml.XamlType.TypeArguments%2A>パラメーターは、型がまだ開いて一覧を返します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-637">There are certain scenarios for a <xref:System.Xaml.XamlType> where calling the <xref:System.Xaml.XamlType.TypeArguments%2A> parameter returns a list where the types are still open.</span></span> <span data-ttu-id="8ebab-638">この場合は、1 つ以上で、返された<xref:System.Xaml.XamlType>値のプレース ホルダーの値になります<xref:System.Xaml.XamlType.Name%2A?displayProperty=nameWithType>など`T`をジェネリックがまだ開いていることを示します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-638">In this case, one or more of the returned <xref:System.Xaml.XamlType> values will have placeholder values for <xref:System.Xaml.XamlType.Name%2A?displayProperty=nameWithType>, such as `T`, to represent that the generic is still open.</span></span> <span data-ttu-id="8ebab-639">このシナリオは、取得する場合に発生することができます、<xref:System.Xaml.XamlType>への呼び出しから<xref:System.Xaml.XamlSchemaContext.GetXamlType%2A>の代わりに XAML リーダーの実装からです。</span><span class="sxs-lookup"><span data-stu-id="8ebab-639">This scenario can occur if you get a <xref:System.Xaml.XamlType> from a call to <xref:System.Xaml.XamlSchemaContext.GetXamlType%2A>, instead of from a XAML reader implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeConverter">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt; TypeConverter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.ComponentModel.TypeConverter&gt; TypeConverter" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.TypeConverter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeConverter As XamlValueConverter(Of TypeConverter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ TypeConverter { System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ebab-640">この <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> の値に対する型変換動作を表す <see cref="T:System.ComponentModel.TypeConverter" /> 制約を持つ <see cref="T:System.Xaml.XamlType" /> を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-640">Gets a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> with <see cref="T:System.ComponentModel.TypeConverter" /> constraint that represents type conversion behavior for values of this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8ebab-641">この <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> の値に対する型変換動作を表す <see cref="T:System.ComponentModel.TypeConverter" /> 制約を持つ <see cref="T:System.Xaml.XamlType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-641">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> with <see cref="T:System.ComponentModel.TypeConverter" /> constraint that represents type conversion behavior for values of this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ebab-642">既定値内部 CLR リフレクション手法を使用しないかどうか、 <xref:System.Xaml.XamlType>、このプロパティへの呼び出しを呼び出すことができます<xref:System.Xaml.XamlType.LookupTypeConverter%2A>の上書きを<xref:System.Xaml.XamlType>クラスを派生します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-642">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupTypeConverter%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="8ebab-643">戻り値およびその他の動作に関する詳細については、ドキュメントを参照して<xref:System.Xaml.XamlType.LookupTypeConverter%2A>この型にします。</span><span class="sxs-lookup"><span data-stu-id="8ebab-643">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupTypeConverter%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnderlyingType">
      <MemberSignature Language="C#" Value="public Type UnderlyingType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type UnderlyingType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.UnderlyingType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UnderlyingType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ UnderlyingType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ebab-644">この <see cref="T:System.Type" /> の基になる CLR <see cref="T:System.Xaml.XamlType" /> を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-644">Gets the CLR <see cref="T:System.Type" /> that underlies this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8ebab-645">この <see cref="T:System.Type" /> の基になる CLR <see cref="T:System.Xaml.XamlType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-645">The CLR <see cref="T:System.Type" /> that underlies this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValueSerializer">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt; ValueSerializer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Windows.Markup.ValueSerializer&gt; ValueSerializer" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.ValueSerializer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValueSerializer As XamlValueConverter(Of ValueSerializer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlValueConverter&lt;System::Windows::Markup::ValueSerializer ^&gt; ^ ValueSerializer { System::Xaml::Schema::XamlValueConverter&lt;System::Windows::Markup::ValueSerializer ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ebab-646">この <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> の値に対する値のシリアル化動作を表す <see cref="T:System.Windows.Markup.ValueSerializer" /> 制約を持つ <see cref="T:System.Xaml.XamlType" /> を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-646">Gets a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> with <see cref="T:System.Windows.Markup.ValueSerializer" /> constraint that represents value serialization behavior for values of this <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8ebab-647">この <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> の値に対する値のシリアル化動作を表す <see cref="T:System.Windows.Markup.ValueSerializer" /> 制約を持つ <see cref="T:System.Xaml.XamlType" />、または <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ebab-647">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> with <see cref="T:System.Windows.Markup.ValueSerializer" /> constraint that represents value serialization behavior for values of this <see cref="T:System.Xaml.XamlType" />; otherwise, <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ebab-648">既定値内部 CLR リフレクション手法を使用しないかどうか、 <xref:System.Xaml.XamlType>、このプロパティへの呼び出しを呼び出すことができます<xref:System.Xaml.XamlType.LookupValueSerializer%2A>の上書きを<xref:System.Xaml.XamlType>クラスを派生します。</span><span class="sxs-lookup"><span data-stu-id="8ebab-648">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupValueSerializer%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="8ebab-649">戻り値およびその他の動作に関する詳細については、ドキュメントを参照して<xref:System.Xaml.XamlType.LookupValueSerializer%2A>この型にします。</span><span class="sxs-lookup"><span data-stu-id="8ebab-649">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupValueSerializer%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>