<Type Name="XamlBackgroundReader" FullName="System.Xaml.XamlBackgroundReader">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="09ec6dbff25a306b771518bfdf151f3a7ace1796" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30719446" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XamlBackgroundReader : System.Xaml.XamlReader, System.Xaml.IXamlLineInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlBackgroundReader extends System.Xaml.XamlReader implements class System.Xaml.IXamlLineInfo" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlBackgroundReader" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlBackgroundReader&#xA;Inherits XamlReader&#xA;Implements IXamlLineInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlBackgroundReader : System::Xaml::XamlReader, System::Xaml::IXamlLineInfo" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xaml.XamlReader</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Xaml.IXamlLineInfo</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="09ebe-101">読み取りと書き込みを異なるスレッドに切り離すことのできる、ダブル バッファリングを行う <see cref="T:System.Xaml.XamlReader" /> を実装します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="09ebe-101">Implements a double-buffered <see cref="T:System.Xaml.XamlReader" /> that can split reading and writing to different threads.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlBackgroundReader (System.Xaml.XamlReader wrappedReader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xaml.XamlReader wrappedReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlBackgroundReader.#ctor(System.Xaml.XamlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (wrappedReader As XamlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlBackgroundReader(System::Xaml::XamlReader ^ wrappedReader);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="wrappedReader" Type="System.Xaml.XamlReader" />
      </Parameters>
      <Docs>
        <param name="wrappedReader">
          <span data-ttu-id="09ebe-102">この <see cref="T:System.Xaml.XamlReader" /> の基底となる <see cref="T:System.Xaml.XamlBackgroundReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="09ebe-102">The <see cref="T:System.Xaml.XamlReader" /> that this <see cref="T:System.Xaml.XamlBackgroundReader" /> is based on.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="09ebe-103">
            <see cref="T:System.Xaml.XamlBackgroundReader" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="09ebe-103">Initializes a new instance of the <see cref="T:System.Xaml.XamlBackgroundReader" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="09ebe-104">
            <paramref name="wrappedReader" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="09ebe-104">
              <paramref name="wrappedReader" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlBackgroundReader.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="09ebe-105">マネージ リソースを解放する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="09ebe-105">
              <see langword="true" /> to release managed resources; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="09ebe-106">
            <see cref="T:System.Xaml.XamlBackgroundReader" /> によって使用されているアンマネージ リソースを解放し、オプションでマネージ リソースも解放します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="09ebe-106">Releases the unmanaged resources used by the <see cref="T:System.Xaml.XamlBackgroundReader" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09ebe-107">基本の実装を呼び出すだけでなくこの`Dispose`実装は、関連するライターとイベント ハンドラーを破棄します。</span><span class="sxs-lookup"><span data-stu-id="09ebe-107">In addition to calling the base implementation, this `Dispose` implementation disposes related writers and event handlers.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasLineInfo">
      <MemberSignature Language="C#" Value="public bool HasLineInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasLineInfo" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlBackgroundReader.HasLineInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasLineInfo As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasLineInfo { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Xaml.IXamlLineInfo.HasLineInfo</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="09ebe-108">行情報が使用可能であるかどうかを指定する値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="09ebe-108">Gets a value that specifies whether line information is available.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="09ebe-109">行情報が使用可能な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="09ebe-109">
              <see langword="true" /> if line information is available; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEof">
      <MemberSignature Language="C#" Value="public override bool IsEof { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEof" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlBackgroundReader.IsEof" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsEof As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsEof { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="09ebe-110">リーダーの位置がファイルの末尾かどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="09ebe-110">Gets a value that reports whether the reader position is at end-of-file.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="09ebe-111">位置がファイルの末尾にある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="09ebe-111">
              <see langword="true" /> if the position is at end-of-file; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineNumber">
      <MemberSignature Language="C#" Value="public int LineNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LineNumber" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlBackgroundReader.LineNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LineNumber As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LineNumber { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Xaml.IXamlLineInfo.LineNumber</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="09ebe-112">報告する行番号を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="09ebe-112">Gets the line number to report.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="09ebe-113">報告する行番号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="09ebe-113">The line number to report.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Xaml.IXamlLineInfo" />
      </Docs>
    </Member>
    <Member MemberName="LinePosition">
      <MemberSignature Language="C#" Value="public int LinePosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LinePosition" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlBackgroundReader.LinePosition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LinePosition As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LinePosition { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Xaml.IXamlLineInfo.LinePosition</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="09ebe-114">報告する行の位置を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="09ebe-114">Gets the line position to report.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="09ebe-115">報告する行の位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="09ebe-115">The line position to report.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Xaml.IXamlLineInfo" />
      </Docs>
    </Member>
    <Member MemberName="Member">
      <MemberSignature Language="C#" Value="public override System.Xaml.XamlMember Member { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlMember Member" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlBackgroundReader.Member" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Member As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xaml::XamlMember ^ Member { System::Xaml::XamlMember ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="09ebe-116">リーダーが <see cref="F:System.Xaml.XamlNodeType.StartMember" /> 上に配置されている場合に、リーダーが現在配置されているメンバーを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="09ebe-116">Gets the current member at the reader position, if the reader position is on a <see cref="F:System.Xaml.XamlNodeType.StartMember" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="09ebe-117">現在のメンバー。リーダーがメンバー上に配置されていない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="09ebe-117">The current member; or <see langword="null" />, if the position is not on a member.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Xaml.XamlMember" />
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public override System.Xaml.NamespaceDeclaration Namespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.NamespaceDeclaration Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlBackgroundReader.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Namespace As NamespaceDeclaration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xaml::NamespaceDeclaration ^ Namespace { System::Xaml::NamespaceDeclaration ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.NamespaceDeclaration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="09ebe-118">現在のノードから XAML 名前空間を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="09ebe-118">Gets the XAML namespace from the current node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="09ebe-119">XAML 名前空間 (使用可能な場合)。それ以外の場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="09ebe-119">The XAML namespace, if it is available; otherwise, <see langword="null" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public override System.Xaml.XamlNodeType NodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xaml.XamlNodeType NodeType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlBackgroundReader.NodeType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NodeType As XamlNodeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xaml::XamlNodeType NodeType { System::Xaml::XamlNodeType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlNodeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="09ebe-120">現在のノードの種類を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="09ebe-120">Gets the type of the current node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="09ebe-121">
            <see cref="T:System.Xaml.XamlNodeType" /> 列挙体の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="09ebe-121">A value of the <see cref="T:System.Xaml.XamlNodeType" /> enumeration.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override bool Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlBackgroundReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Read();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="09ebe-122">処理対象から次の XAML ノードを読み取ります (ノードがある場合)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="09ebe-122">Provides the next XAML node from the source, if a node is available.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="09ebe-123">ノードがある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="09ebe-123">
              <see langword="true" /> if a node is available; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SchemaContext">
      <MemberSignature Language="C#" Value="public override System.Xaml.XamlSchemaContext SchemaContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlSchemaContext SchemaContext" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlBackgroundReader.SchemaContext" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SchemaContext As XamlSchemaContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xaml::XamlSchemaContext ^ SchemaContext { System::Xaml::XamlSchemaContext ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlSchemaContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="09ebe-124">情報セットにスキーマ コンテキスト情報を提供するオブジェクトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="09ebe-124">Gets an object that provides schema context information for the information set.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="09ebe-125">情報セットにスキーマ コンテキスト情報を提供するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="09ebe-125">An object that provides schema context information for the information set.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Xaml.XamlXmlReader.SchemaContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="StartThread">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="09ebe-126">
            <see cref="T:System.Threading.Thread" /> の名前付きスレッドを処理する (<see cref="T:System.Threading.ParameterizedThreadStart" /> から構築された) 新しい <see cref="T:System.Xaml.XamlReader" /> を作成して開始します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="09ebe-126">Creates and starts a new <see cref="T:System.Threading.Thread" /> (constructed from <see cref="T:System.Threading.ParameterizedThreadStart" />) that handles a named thread for the <see cref="T:System.Xaml.XamlReader" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="StartThread">
      <MemberSignature Language="C#" Value="public void StartThread ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartThread() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlBackgroundReader.StartThread" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartThread ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartThread();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="09ebe-127">
            <see cref="T:System.Threading.Thread" /> の名前付きスレッドを処理する (<see cref="T:System.Threading.ParameterizedThreadStart" /> から構築された) 新しい <see cref="T:System.Xaml.XamlReader" /> を作成して開始します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="09ebe-127">Creates and starts a new <see cref="T:System.Threading.Thread" /> (constructed from <see cref="T:System.Threading.ParameterizedThreadStart" />) that handles a named thread for the <see cref="T:System.Xaml.XamlReader" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09ebe-128">既定では、スレッドが名前付き`XAML reader thread`します。</span><span class="sxs-lookup"><span data-stu-id="09ebe-128">By default, the thread is named `XAML reader thread`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="09ebe-129">スレッドは既に起動しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="09ebe-129">The thread is already started.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="StartThread">
      <MemberSignature Language="C#" Value="public void StartThread (string threadName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartThread(string threadName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlBackgroundReader.StartThread(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartThread (threadName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartThread(System::String ^ threadName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="threadName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="threadName">
          <span data-ttu-id="09ebe-130">スレッドの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="09ebe-130">The name for the thread.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="09ebe-131">
            <see cref="T:System.Threading.Thread" /> の名前付きスレッドを処理する (<see cref="T:System.Threading.ParameterizedThreadStart" /> から構築された) 新しい <see cref="T:System.Xaml.XamlReader" /> を作成して開始します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="09ebe-131">Creates and starts a new <see cref="T:System.Threading.Thread" /> (constructed from <see cref="T:System.Threading.ParameterizedThreadStart" />) that handles a named thread for the <see cref="T:System.Xaml.XamlReader" />.</span>
          </span>
          <span data-ttu-id="09ebe-132">スレッド名をパラメーター値として指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="09ebe-132">You specify the thread name as a parameter.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="09ebe-133">スレッドは既に起動しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="09ebe-133">The thread is already started.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public override System.Xaml.XamlType Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType Type" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlBackgroundReader.Type" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Type As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xaml::XamlType ^ Type { System::Xaml::XamlType ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="09ebe-134">現在のノードの <see cref="T:System.Xaml.XamlType" /> を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="09ebe-134">Gets the <see cref="T:System.Xaml.XamlType" /> of the current node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="09ebe-135">現在のノードの <see cref="T:System.Xaml.XamlType" />。現在のリーダーの位置がオブジェクト上にない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="09ebe-135">The <see cref="T:System.Xaml.XamlType" /> of the current node; or <see langword="null" />, if the current reader position is not on an object.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public override object Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlBackgroundReader.Value" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ Value { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="09ebe-136">現在のノードの値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="09ebe-136">Gets the value of the current node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="09ebe-137">現在のノードの値。現在のリーダーの位置が <see cref="F:System.Xaml.XamlNodeType.Value" /> ノード型にない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="09ebe-137">The value of the current node; or <see langword="null" />, if the current reader position is not on a <see cref="F:System.Xaml.XamlNodeType.Value" /> node type.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>