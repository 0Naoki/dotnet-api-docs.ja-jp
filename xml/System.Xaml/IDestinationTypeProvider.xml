<Type Name="IDestinationTypeProvider" FullName="System.Xaml.IDestinationTypeProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7377e7d5e09e53d4e38f48ac87c8d7c850bb504a" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70400928" /></Metadata><TypeSignature Language="C#" Value="public interface IDestinationTypeProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDestinationTypeProvider" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.IDestinationTypeProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDestinationTypeProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDestinationTypeProvider" />
  <TypeSignature Language="F#" Value="type IDestinationTypeProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="6e097-101">変換先の型の CLR 型システム識別子を返すことのできるサービスを表します。</span><span class="sxs-lookup"><span data-stu-id="6e097-101">Represents a service that can return a CLR type system identifier for the destination type.</span></span> <span data-ttu-id="6e097-102">変換先の型は、プロパティ設定操作の変換先の型がリフレクションまたはその他のメカニズムによって間接的に報告される場合に有意義です。</span><span class="sxs-lookup"><span data-stu-id="6e097-102">The destination type is relevant when the destination type for a property-setting operation is indirectly reported by reflection or other mechanisms.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e097-103">によって<xref:System.Xaml.IDestinationTypeProvider.GetDestinationType%2A>返される型は、現在の xaml スキーマコンテキストを使用して、xaml ノードストリームの現在位置から解決されます。</span><span class="sxs-lookup"><span data-stu-id="6e097-103">The type that is returned by <xref:System.Xaml.IDestinationTypeProvider.GetDestinationType%2A> is resolved from the current position of the XAML node stream by using current XAML schema context.</span></span>  
  
 <span data-ttu-id="6e097-104">.NET Framework xaml サービスによって実装された xaml 型システムを使用し、これらの条件下で<xref:System.Xaml.IDestinationTypeProvider.GetDestinationType%2A>サービスコンテキスト<xref:System.Xaml.XamlType.UnderlyingType%2A>にアクセスする場合、は、使用可能な xaml 型システム情報と CLR ベースの xaml スキーマコンテキストに基づいてを返します。</span><span class="sxs-lookup"><span data-stu-id="6e097-104">If you use the XAML type system as implemented by .NET Framework XAML Services and access the service context under these conditions, <xref:System.Xaml.IDestinationTypeProvider.GetDestinationType%2A> returns the <xref:System.Xaml.XamlType.UnderlyingType%2A> based on available XAML type system information and CLR-based XAML schema context.</span></span>  
  
 <span data-ttu-id="6e097-105">このサービスは、純粋な CLR リフレクションまたはその他のメカニズムが、変換先の型に関する十分な情報を提供しない場合に関連します。</span><span class="sxs-lookup"><span data-stu-id="6e097-105">This service is relevant for situations where pure CLR reflection or other mechanisms might not provide enough information about a destination type.</span></span> <span data-ttu-id="6e097-106">に<xref:System.Xaml.IDestinationTypeProvider>関連するいくつかのシナリオの一覧を次に示します。</span><span class="sxs-lookup"><span data-stu-id="6e097-106">The following is a list of some relevant scenarios for <xref:System.Xaml.IDestinationTypeProvider>:</span></span>  
  
-   <span data-ttu-id="6e097-107">Clr 型システムは、CLR が型を定義および使用する方法により間接的な型を報告します。また、実際の変換先の型が必要です。</span><span class="sxs-lookup"><span data-stu-id="6e097-107">The CLR type system reports an indirect type because of how the CLR defines and uses types, and you want a true destination type.</span></span> <span data-ttu-id="6e097-108">たとえば、.NET Framework XAML サービスの Api は、イベントメンバーを処理するときに、このサービスを内部的に使用します。</span><span class="sxs-lookup"><span data-stu-id="6e097-108">For example, the APIs in .NET Framework XAML Services use this service internally when they process event members.</span></span> <span data-ttu-id="6e097-109">イベントは、純粋な<xref:System.Delegate>CLR リフレクションによってとして報告されます。</span><span class="sxs-lookup"><span data-stu-id="6e097-109">Events are reported by pure CLR reflection as a <xref:System.Delegate>.</span></span>  
  
-   <span data-ttu-id="6e097-110">型コンバーターの使用法の変換先の型が、型コンバーターが生成できる予期される型と一致していることを確認します。</span><span class="sxs-lookup"><span data-stu-id="6e097-110">You want to ensure that the destination type of a type converter usage matches the expected type that the type converter can produce.</span></span> <span data-ttu-id="6e097-111">このシナリオは、変換先の型がパラメーター化またはジェネリックの場合に便利です。</span><span class="sxs-lookup"><span data-stu-id="6e097-111">This scenario is useful when the destination type is parameterized or generic.</span></span>  
  
-   <span data-ttu-id="6e097-112">値コンバーターは、別の値コンバーターに入れ子になっている使用状況から呼び出されています。</span><span class="sxs-lookup"><span data-stu-id="6e097-112">Your value converter is being called from a usage that nested in another value converter.</span></span> <span data-ttu-id="6e097-113">この場合は、 <xref:System.Xaml.IDestinationTypeProvider.GetDestinationType%2A>中間値コンバーターの出力の種類を返すのではなく、入れ子を戻し、設定されている実際のプロパティの変換先の型を返します。</span><span class="sxs-lookup"><span data-stu-id="6e097-113">In this case, <xref:System.Xaml.IDestinationTypeProvider.GetDestinationType%2A> unwinds the nesting and returns the destination type of the actual property being set, instead of returning the output type of any intervening value converter.</span></span>  
  
 <span data-ttu-id="6e097-114">型コンバーターとマークアップ拡張機能は<xref:System.Xaml.IDestinationTypeProvider> 、xaml オブジェクトライターが値の変換動作を呼び出すと、xaml オブジェクトライターによって提供されるサービスコンテキストで、サービスとしてのクエリを実行できます。</span><span class="sxs-lookup"><span data-stu-id="6e097-114">Type converters and markup extensions can query for <xref:System.Xaml.IDestinationTypeProvider> as a service on the service context that is provided by a XAML object writer, when the XAML object writer invokes value conversion behavior.</span></span> <span data-ttu-id="6e097-115">詳細については、「 [XAML の型コンバーターとマークアップ拡張機能](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md)」および「[型コンバーターとマークアップ拡張機能で使用できるサービスコンテキスト](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="6e097-115">For more information, see [Type Converters and Markup Extensions for XAML](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md) and [Service Contexts Available to Type Converters and Markup Extensions](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.XamlObjectWriter" />
    <related type="Article" href="https://msdn.microsoft.com/library/db07a952-05ce-4aa4-b6f9-aac7397d0326"><span data-ttu-id="6e097-116">XAML の型コンバーターまたはマークアップ拡張機能</span><span class="sxs-lookup"><span data-stu-id="6e097-116">Type Converters or Markup Extensions for XAML</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="GetDestinationType">
      <MemberSignature Language="C#" Value="public Type GetDestinationType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetDestinationType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IDestinationTypeProvider.GetDestinationType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDestinationType () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetDestinationType();" />
      <MemberSignature Language="F#" Value="abstract member GetDestinationType : unit -&gt; Type" Usage="iDestinationTypeProvider.GetDestinationType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6e097-117">関連する型コンバーターまたはマークアップ拡張機能の変換先の型を示す CLR の <see cref="T:System.Type" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="6e097-117">Returns the CLR <see cref="T:System.Type" /> that identifies the destination type for the relevant type converter or markup extension.</span></span></summary>
        <returns><span data-ttu-id="6e097-118">変換先の型の CLR <see cref="T:System.Type" /> 値。</span><span class="sxs-lookup"><span data-stu-id="6e097-118">A CLR <see cref="T:System.Type" /> value for the destination type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e097-119">このメソッドには、入力パラメーターがありません。</span><span class="sxs-lookup"><span data-stu-id="6e097-119">This method has no input parameter.</span></span> <span data-ttu-id="6e097-120">返される内容 (および以外`null`のものを返すかどうか) は、XAML ノードストリーム内の現在のノード位置によって決まります。</span><span class="sxs-lookup"><span data-stu-id="6e097-120">What to return (and whether to return anything other than `null`) is determined by the current node position in the XAML node stream.</span></span>  
  
## <a name="service-implementers"></a><span data-ttu-id="6e097-121">サービス実装者</span><span class="sxs-lookup"><span data-stu-id="6e097-121">Service Implementers</span></span>  
 <span data-ttu-id="6e097-122">このサービスを再実装する場合<xref:System.Xaml.IDestinationTypeProvider.GetDestinationType%2A> 、メソッドは、マークアップ拡張機能または型コンバーターが最も具体的な変換または出力の種類に対してチェックすることを想定している型を返します。</span><span class="sxs-lookup"><span data-stu-id="6e097-122">If you reimplement this service, the <xref:System.Xaml.IDestinationTypeProvider.GetDestinationType%2A> method should return the type that a markup extension or type converter expects to check against its most specific conversion or output type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
