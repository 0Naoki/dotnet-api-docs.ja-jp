<Type Name="IDestinationTypeProvider" FullName="System.Xaml.IDestinationTypeProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5b7c50aa2125017dfd7de732494ba1d51c5e1616" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDestinationTypeProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDestinationTypeProvider" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.IDestinationTypeProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDestinationTypeProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDestinationTypeProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="0c0fc-101">変換先の型の CLR 型システム識別子を返すことのできるサービスを表します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="0c0fc-101">Represents a service that can return a CLR type system identifier for the destination type.</span>
      </span>
      <span data-ttu-id="0c0fc-102">変換先の型は、プロパティ設定操作の変換先の型がリフレクションまたはその他のメカニズムによって間接的に報告される場合に有意義です。</span>
      <span class="sxs-lookup">
        <span data-stu-id="0c0fc-102">The destination type is relevant when the destination type for a property-setting operation is indirectly reported by reflection or other mechanisms.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c0fc-103">によって返される型<xref:System.Xaml.IDestinationTypeProvider.GetDestinationType%2A>は XAML ノード ストリームの現在位置から現在の XAML スキーマ コンテキストを使用して解決します。</span><span class="sxs-lookup"><span data-stu-id="0c0fc-103">The type that is returned by <xref:System.Xaml.IDestinationTypeProvider.GetDestinationType%2A> is resolved from the current position of the XAML node stream by using current XAML schema context.</span></span>  
  
 <span data-ttu-id="0c0fc-104">.NET Framework XAML サービスとこれらの条件下で、サービス コンテキストのアクセスによって実装される XAML 型システムを使用する場合<xref:System.Xaml.IDestinationTypeProvider.GetDestinationType%2A>を返します、<xref:System.Xaml.XamlType.UnderlyingType%2A>に基づいて使用可能な XAML 型システム情報と CLR ベースの XAML スキーマ コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="0c0fc-104">If you use the XAML type system as implemented by .NET Framework XAML Services and access the service context under these conditions, <xref:System.Xaml.IDestinationTypeProvider.GetDestinationType%2A> returns the <xref:System.Xaml.XamlType.UnderlyingType%2A> based on available XAML type system information and CLR-based XAML schema context.</span></span>  
  
 <span data-ttu-id="0c0fc-105">このサービスは、純粋な CLR リフレクションまたはその他のメカニズム可能性があります十分なに関する情報は提供先の種類の状況です。</span><span class="sxs-lookup"><span data-stu-id="0c0fc-105">This service is relevant for situations where pure CLR reflection or other mechanisms might not provide enough information about a destination type.</span></span> <span data-ttu-id="0c0fc-106">次のいくつかの関連するシナリオの一覧は<xref:System.Xaml.IDestinationTypeProvider>:</span><span class="sxs-lookup"><span data-stu-id="0c0fc-106">The following is a list of some relevant scenarios for <xref:System.Xaml.IDestinationTypeProvider>:</span></span>  
  
-   <span data-ttu-id="0c0fc-107">True の変換先の型にして、CLR の型システムが、CLR を定義しの型を使用するため間接的な型を報告します。</span><span class="sxs-lookup"><span data-stu-id="0c0fc-107">The CLR type system reports an indirect type because of how the CLR defines and uses types, and you want a true destination type.</span></span> <span data-ttu-id="0c0fc-108">たとえば、.NET Framework XAML サービスの Api イベント メンバーを処理するときにこのサービスは内部的に使用します。</span><span class="sxs-lookup"><span data-stu-id="0c0fc-108">For example, the APIs in .NET Framework XAML Services use this service internally when they process event members.</span></span> <span data-ttu-id="0c0fc-109">として純粋な CLR のリフレクションでイベントが報告された、<xref:System.Delegate>です。</span><span class="sxs-lookup"><span data-stu-id="0c0fc-109">Events are reported by pure CLR reflection as a <xref:System.Delegate>.</span></span>  
  
-   <span data-ttu-id="0c0fc-110">型コンバーターの使用法の変換先の型が、型コンバーターを作成できる、予期された型と一致していることを確認するには。</span><span class="sxs-lookup"><span data-stu-id="0c0fc-110">You want to ensure that the destination type of a type converter usage matches the expected type that the type converter can produce.</span></span> <span data-ttu-id="0c0fc-111">このシナリオは、変換先の型がパラメーター化されたときに便利です。 またはジェネリックです。</span><span class="sxs-lookup"><span data-stu-id="0c0fc-111">This scenario is useful when the destination type is parameterized or generic.</span></span>  
  
-   <span data-ttu-id="0c0fc-112">値コンバーターは、別の値コンバーターで入れ子になった使用法から呼び出されています。</span><span class="sxs-lookup"><span data-stu-id="0c0fc-112">Your value converter is being called from a usage that nested in another value converter.</span></span> <span data-ttu-id="0c0fc-113">この場合、<xref:System.Xaml.IDestinationTypeProvider.GetDestinationType%2A>入れ子をアンワインドし、値コンバーターの介在するすべての出力の種類を返す代わりに、設定されている実際のプロパティの変換先の型を返します。</span><span class="sxs-lookup"><span data-stu-id="0c0fc-113">In this case, <xref:System.Xaml.IDestinationTypeProvider.GetDestinationType%2A> unwinds the nesting and returns the destination type of the actual property being set, instead of returning the output type of any intervening value converter.</span></span>  
  
 <span data-ttu-id="0c0fc-114">型コンバーターおよびマークアップ拡張機能を照会できます<xref:System.Xaml.IDestinationTypeProvider>XAML オブジェクト ライターは、値変換の動作を呼び出すときは、XAML オブジェクト ライターによって提供されるサービスのコンテキストでサービスとして。</span><span class="sxs-lookup"><span data-stu-id="0c0fc-114">Type converters and markup extensions can query for <xref:System.Xaml.IDestinationTypeProvider> as a service on the service context that is provided by a XAML object writer, when the XAML object writer invokes value conversion behavior.</span></span> <span data-ttu-id="0c0fc-115">詳細については、次を参照してください。[型コンバーターと XAML のマークアップ拡張機能](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md)と[サービスで使用できるコンテキスト型コンバーターおよびマークアップ拡張機能](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md)します。</span><span class="sxs-lookup"><span data-stu-id="0c0fc-115">For more information, see [Type Converters and Markup Extensions for XAML](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md) and [Service Contexts Available to Type Converters and Markup Extensions](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.XamlObjectWriter" />
  </Docs>
  <Members>
    <Member MemberName="GetDestinationType">
      <MemberSignature Language="C#" Value="public Type GetDestinationType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetDestinationType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IDestinationTypeProvider.GetDestinationType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDestinationType () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetDestinationType();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0c0fc-116">関連する型コンバーターまたはマークアップ拡張機能の変換先の型を示す CLR の <see cref="T:System.Type" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c0fc-116">Returns the CLR <see cref="T:System.Type" /> that identifies the destination type for the relevant type converter or markup extension.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c0fc-117">変換先の型の CLR <see cref="T:System.Type" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c0fc-117">A CLR <see cref="T:System.Type" /> value for the destination type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c0fc-118">このメソッドには、入力パラメーターがありません。</span><span class="sxs-lookup"><span data-stu-id="0c0fc-118">This method has no input parameter.</span></span> <span data-ttu-id="0c0fc-119">何を返す (以外の何も返すかどうかと`null`) は、XAML ノード ストリームの現在のノードの位置によって決まります。</span><span class="sxs-lookup"><span data-stu-id="0c0fc-119">What to return (and whether to return anything other than `null`) is determined by the current node position in the XAML node stream.</span></span>  
  
## <a name="service-implementers"></a><span data-ttu-id="0c0fc-120">サービス実装側</span><span class="sxs-lookup"><span data-stu-id="0c0fc-120">Service Implementers</span></span>  
 <span data-ttu-id="0c0fc-121">このサービスを再実装する場合、<xref:System.Xaml.IDestinationTypeProvider.GetDestinationType%2A>メソッドは、その最も固有の変換または出力の種類に対して確認が必要ですが、マークアップ拡張機能または型コンバーターの型を返す必要があります。</span><span class="sxs-lookup"><span data-stu-id="0c0fc-121">If you reimplement this service, the <xref:System.Xaml.IDestinationTypeProvider.GetDestinationType%2A> method should return the type that a markup extension or type converter expects to check against its most specific conversion or output type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>