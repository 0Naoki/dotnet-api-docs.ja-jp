<Type Name="XamlServices" FullName="System.Xaml.XamlServices">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ba985e9e3e80a226d3cb5609368aeaae7bd715d8" /><Meta Name="ms.sourcegitcommit" Value="0528148687f8b0e0a3d0f550431a777fbe5346bc" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="04/25/2019" /><Meta Name="ms.locfileid" Value="64440834" /></Metadata><TypeSignature Language="C#" Value="public static class XamlServices" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit XamlServices extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlServices" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlServices" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlServices abstract sealed" />
  <TypeSignature Language="F#" Value="type XamlServices = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="1dc4a-101">XAML の読み取りとオブジェクト グラフの書き込み、オブジェクト グラフの読み取りとシリアル化用の XAML ファイル出力の書き込みなどの共通の XAML タスクのための高いレベルのサービス (静的メソッド) を提供します。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-101">Provides higher-level services (static methods) for the common XAML tasks of reading XAML and writing an object graph; or reading an object graph and writing XAML file output for serialization purposes.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1dc4a-102">モード、<xref:System.Xaml.XamlServices>読み取りと書き込みのシナリオが XAML リーダーと XAML ライターのインスタンスを作成する依存の最も一般的な XAML で使用されるクラス。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-102">The modes of the <xref:System.Xaml.XamlServices> class that are used in the most common XAML reading and writing scenarios rely on creating instances of XAML readers and XAML writers.</span></span> <span data-ttu-id="1dc4a-103">これらのリーダーとライターなど、パブリック クラスの特殊化されたが、内部の実装を<xref:System.Xml.XmlReader>、 <xref:System.Xaml.XamlXmlReader>、および<xref:System.Xaml.XamlObjectWriter>します。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-103">These readers and writers are specialized but internal implementations of public classes, such as <xref:System.Xml.XmlReader>, <xref:System.Xaml.XamlXmlReader>, and <xref:System.Xaml.XamlObjectWriter>.</span></span> <span data-ttu-id="1dc4a-104">使用する<xref:System.Xaml.XamlServices>ほとんどのシナリオは希望どおりの結果を取得する既定の内部実装に依存することができます。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-104">To use <xref:System.Xaml.XamlServices> for most scenarios, you can rely on the default internal implementations to obtain the results that you want.</span></span> <span data-ttu-id="1dc4a-105">専門的なシナリオでは可能性があります、自分で、リーダーとライターを定義しのオーバー ロードの引数として渡したり、<xref:System.Xaml.XamlServices>メソッド。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-105">For more specialized scenarios, you might define readers and writers yourself, and then pass them as arguments for overloads of the <xref:System.Xaml.XamlServices> methods.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1dc4a-106"><xref:System.Xaml.XamlServices> 推奨される XAML の読み取りや XAML なく記述 WPF 定義の型を処理している場合は、設定 API または WPF に基づくの種類。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-106"><xref:System.Xaml.XamlServices> is not the recommended XAML reading or XAML writing API set if you are processing WPF-defined types, or types based on WPF.</span></span> <span data-ttu-id="1dc4a-107">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]使用量、使用<xref:System.Windows.Markup.XamlReader?displayProperty=nameWithType>の読み取りまたは XAML (BAML); の読み込みと<xref:System.Windows.Markup.XamlWriter?displayProperty=nameWithType>XAML を書き戻すためです。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-107">For [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] usage, use <xref:System.Windows.Markup.XamlReader?displayProperty=nameWithType> for reading or loading XAML (or BAML); and <xref:System.Windows.Markup.XamlWriter?displayProperty=nameWithType> for writing back XAML.</span></span> <span data-ttu-id="1dc4a-108">これらのクラス .NET Framework XAML サービス Api と、XAML リーダーと XAML ライターで内部的に使用しての実装ただしも提供サポートと XAML スキーマ コンテキストを特殊化された依存関係プロパティと WPF の既知の型のための最適化などの WPF 固有の概念について説明します。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-108">These classes use .NET Framework XAML Services APIs and the XAML readers and XAML writers internally in their implementation; however, they also provide support and specialized XAML schema context for WPF-specific concepts, such as optimizations for dependency properties and WPF known types.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1dc4a-109">XAML リーダーの読み取り元を読み込み、その出力をオブジェクト グラフとして書き込みます。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-109">Loads source for a XAML reader and writes its output as an object graph.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static object Load (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Load(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Load(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Load(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="static member Load : System.IO.Stream -&gt; obj" Usage="System.Xaml.XamlServices.Load stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="1dc4a-110">入力として読み込むストリーム。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-110">The stream to load as input.</span></span></param>
        <summary><span data-ttu-id="1dc4a-111">XAML リーダーの読み取り元の <see cref="T:System.IO.Stream" /> を読み込み、その出力をオブジェクト グラフとして書き込みます。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-111">Loads a <see cref="T:System.IO.Stream" /> source for a XAML reader and writes its output as an object graph.</span></span></summary>
        <returns><span data-ttu-id="1dc4a-112">出力として書き込まれるオブジェクト グラフ。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-112">The object graph that is written as output.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1dc4a-113">別の署名、<xref:System.Xaml.XamlServices.Load%28System.IO.Stream%29>メソッドは、さまざまな種類のソース XAML の入力を指定します。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-113">Different signatures for the <xref:System.Xaml.XamlServices.Load%28System.IO.Stream%29> method specify different types of input for the source XAML.</span></span> <span data-ttu-id="1dc4a-114"><xref:System.Xaml.XamlServices.Load%28System.IO.Stream%29>内部実装を作成、<xref:System.Xml.XmlReader>呼び出して<xref:System.Xml.XmlReader.Create%28System.IO.Stream%29>し、専用の新しいインスタンスを作成します。<xref:System.Xaml.XamlReader>入力を処理します。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-114">The <xref:System.Xaml.XamlServices.Load%28System.IO.Stream%29> internal implementation first creates an <xref:System.Xml.XmlReader> by calling <xref:System.Xml.XmlReader.Create%28System.IO.Stream%29> and then creates a new instance of a specialized <xref:System.Xaml.XamlReader> that processes the input.</span></span>  
  
 <span data-ttu-id="1dc4a-115">ために、<xref:System.Xaml.XamlServices.Load%28System.IO.Stream%29>オブジェクト グラフを正常に作成する呼び出しを次は、true である必要があります。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-115">In order for the <xref:System.Xaml.XamlServices.Load%28System.IO.Stream%29> call to successfully create an object graph, the following must be true:</span></span>  
  
-   <span data-ttu-id="1dc4a-116">ソースが正しく構成されていると、有効な XML です。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-116">The source is well-formed and valid XML.</span></span>  
  
-   <span data-ttu-id="1dc4a-117">ソースは、言語レベルで有効な XAML です。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-117">The source is valid XAML at the language level.</span></span>  
  
-   <span data-ttu-id="1dc4a-118">ソースで指定されている XAML 型 XAML は、関連する XAML 名前空間でバッキング型に解決する必要があります。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-118">The XAML types that are specified in the source XAML must resolve to backing types in the relevant XAML namespaces.</span></span> <span data-ttu-id="1dc4a-119">たとえば、WPF 名前空間の XAML 型は XAML; で指定されている WPF XAML 名前空間に解決します。WPF のアセンブリがプロジェクトに含まれているか、実行時に使用可能なをする必要があります。などなど。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-119">For example, XAML types for WPF namespaces can resolve to a WPF XAML namespace as specified in the XAML; the assemblies for WPF must be included in the project or available in the run time; and so on.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1dc4a-120"><xref:System.Xaml.XamlServices> XAML の推奨資料ではない、または API を記述する XAML が処理する場合に設定[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]型、または型に基づく[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]します。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-120"><xref:System.Xaml.XamlServices> is not the recommended XAML reading or XAML writing API set if you are processing [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] types, or types based on [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)].</span></span> <span data-ttu-id="1dc4a-121">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]使用量、使用<xref:System.Windows.Markup.XamlReader?displayProperty=nameWithType>の読み取りまたは XAML; の読み込みと<xref:System.Windows.Markup.XamlWriter?displayProperty=nameWithType>XAML を書き戻すためです。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-121">For [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] usage, use <xref:System.Windows.Markup.XamlReader?displayProperty=nameWithType> for reading or loading XAML; and <xref:System.Windows.Markup.XamlWriter?displayProperty=nameWithType> for writing back XAML.</span></span> <span data-ttu-id="1dc4a-122">これらのクラスを使用して、 <xref:System.Xaml> Api の実装で内部的にただしもサポートしています XAML の読み取りと書き込みを依存関係プロパティのための最適化などの特性に影響を与える WPF 固有の概念について説明します。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-122">These classes use <xref:System.Xaml> APIs internally in their implementation; however, they also provide support for WPF-specific concepts that influence the nature of XAML reading and writing, such as optimizations for dependency properties.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1dc4a-123"><paramref name="stream" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-123"><paramref name="stream" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static object Load (System.IO.TextReader textReader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Load(class System.IO.TextReader textReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Load(System.IO.TextReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Load(System::IO::TextReader ^ textReader);" />
      <MemberSignature Language="F#" Value="static member Load : System.IO.TextReader -&gt; obj" Usage="System.Xaml.XamlServices.Load textReader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textReader" Type="System.IO.TextReader" />
      </Parameters>
      <Docs>
        <param name="textReader"><span data-ttu-id="1dc4a-124">作成する <see cref="T:System.IO.TextReader" /> の基礎として使用する <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-124">The <see cref="T:System.IO.TextReader" /> to use as the basis for the created <see cref="T:System.Xml.XmlReader" />.</span></span></param>
        <summary><span data-ttu-id="1dc4a-125"><see cref="T:System.IO.TextReader" /> から XAML リーダーを作成し、オブジェクト グラフを返します。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-125">Creates a XAML reader from a <see cref="T:System.IO.TextReader" />, and returns an object graph.</span></span></summary>
        <returns><span data-ttu-id="1dc4a-126">返されるオブジェクト グラフ。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-126">The object graph that is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1dc4a-127">オブジェクト グラフを返すために、`textReader`入力は、関連する入力を使用して構築する必要があります。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-127">In order to return the object graph, the `textReader` input should be constructed by using its relevant input.</span></span> <span data-ttu-id="1dc4a-128">たとえば、渡す必要があります、<xref:System.IO.StringReader>の有効な XAML の文字列として入力を使用して構築される<xref:System.IO.StringReader.%23ctor%28System.String%29>コンス トラクター。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-128">For example, it should pass a <xref:System.IO.StringReader> that is constructed by using a valid XAML-as-string input for the <xref:System.IO.StringReader.%23ctor%28System.String%29> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1dc4a-129"><paramref name="textReader" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-129"><paramref name="textReader" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static object Load (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Load(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Load(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Load (fileName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Load(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="static member Load : string -&gt; obj" Usage="System.Xaml.XamlServices.Load fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="1dc4a-130">読み込み元として使用するファイル名。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-130">The file name to load and use as source.</span></span></param>
        <summary><span data-ttu-id="1dc4a-131">XAML リーダーの読み取り元の <see cref="T:System.IO.Stream" /> を読み込み、オブジェクト グラフを返します。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-131">Loads a <see cref="T:System.IO.Stream" /> source for a XAML reader and returns an object graph.</span></span></summary>
        <returns><span data-ttu-id="1dc4a-132">返されるオブジェクト グラフ。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-132">The object graph that is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1dc4a-133">別の署名、<xref:System.Xaml.XamlServices.Load%2A>メソッドは、さまざまな種類のソース XAML の入力を指定します。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-133">Different signatures for the <xref:System.Xaml.XamlServices.Load%2A> method specify different types of input for the source XAML.</span></span> <span data-ttu-id="1dc4a-134"><xref:System.Xaml.XamlServices.Load%2A>内部実装を作成、<xref:System.Xml.XmlReader>呼び出して<xref:System.Xml.XmlReader.Create%28System.String%29>し、専用の新しいインスタンスを作成します。<xref:System.Xaml.XamlReader>入力を処理します。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-134">The <xref:System.Xaml.XamlServices.Load%2A> internal implementation first creates an <xref:System.Xml.XmlReader> by calling <xref:System.Xml.XmlReader.Create%28System.String%29> and then creates a new instance of a specialized <xref:System.Xaml.XamlReader> that processes the input.</span></span>  
  
 <span data-ttu-id="1dc4a-135">ために、<xref:System.Xaml.XamlServices.Load%28System.String%29>オブジェクト グラフを正常に作成する呼び出しを次は、true である必要があります。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-135">In order for the <xref:System.Xaml.XamlServices.Load%28System.String%29> call to successfully create an object graph, the following must be true:</span></span>  
  
-   <span data-ttu-id="1dc4a-136">ソースが正しく構成されていると、有効な XML です。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-136">The source is well-formed and valid XML.</span></span>  
  
-   <span data-ttu-id="1dc4a-137">ソースは、言語レベルで有効な XAML です。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-137">The source is valid XAML at the language level.</span></span>  
  
-   <span data-ttu-id="1dc4a-138">ソースで指定されている XAML 型 XAML は、関連する XAML 名前空間でバッキング型に解決する必要があります。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-138">The XAML types that are specified in the source XAML must resolve to backing types in the relevant XAML namespaces.</span></span> <span data-ttu-id="1dc4a-139">たとえば、WPF 名前空間の XAML 型は XAML; で指定されている WPF XAML 名前空間に解決します。wpf アセンブリがプロジェクトに含める必要があるまたは、実行時に使用できます。などなど。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-139">For example, XAML types for WPF namespaces can resolve to a WPF XAML namespace as specified in the XAML; the assemblies for WPF must be included in the project or be available in the run time; and so on.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1dc4a-140"><paramref name="fileName" /> の入力が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-140"><paramref name="fileName" /> input is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static object Load (System.Xaml.XamlReader xamlReader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Load(class System.Xaml.XamlReader xamlReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Load(System.Xaml.XamlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Load(System::Xaml::XamlReader ^ xamlReader);" />
      <MemberSignature Language="F#" Value="static member Load : System.Xaml.XamlReader -&gt; obj" Usage="System.Xaml.XamlServices.Load xamlReader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlReader" Type="System.Xaml.XamlReader" />
      </Parameters>
      <Docs>
        <param name="xamlReader"><span data-ttu-id="1dc4a-141">この <see langword="Load" /> 操作のリーダーとして使用する XAML リーダー実装。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-141">The XAML reader implementation to use as the reader for this <see langword="Load" /> operation.</span></span></param>
        <summary><span data-ttu-id="1dc4a-142">固有の XAML リーダー実装を読み込み、オブジェクト グラフを返します。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-142">Loads a specific XAML reader implementation and returns an object graph.</span></span></summary>
        <returns><span data-ttu-id="1dc4a-143">返されるオブジェクト グラフ。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-143">The object graph that is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1dc4a-144">通常、この署名を使用して、次の場合にのみする必要があります。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-144">You should typically use this signature only in the following cases:</span></span>  
  
-   <span data-ttu-id="1dc4a-145">独自の実装を定義した、<xref:System.Xaml.XamlReader>します。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-145">You defined your own implementation of a <xref:System.Xaml.XamlReader>.</span></span>  
  
-   <span data-ttu-id="1dc4a-146">設定を指定する、<xref:System.Xaml.XamlReader>すると、既定の設定は異なります。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-146">You specified settings for a <xref:System.Xaml.XamlReader> that differ from the default settings.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1dc4a-147"><paramref name="xamlReader" /> の入力が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-147"><paramref name="xamlReader" /> input is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static object Load (System.Xml.XmlReader xmlReader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Load(class System.Xml.XmlReader xmlReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Load(System.Xml.XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Load(System::Xml::XmlReader ^ xmlReader);" />
      <MemberSignature Language="F#" Value="static member Load : System.Xml.XmlReader -&gt; obj" Usage="System.Xaml.XamlServices.Load xmlReader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="xmlReader"><span data-ttu-id="1dc4a-148">この <see langword="Load" /> 操作のリーダーとして使用する <see cref="T:System.Xml.XmlReader" /> 実装。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-148">The <see cref="T:System.Xml.XmlReader" /> implementation to use as the reader for this <see langword="Load" /> operation.</span></span></param>
        <summary><span data-ttu-id="1dc4a-149">固有の XML リーダー実装を読み込み、オブジェクト グラフを返します。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-149">Loads a specific XML reader implementation and returns an object graph.</span></span></summary>
        <returns><span data-ttu-id="1dc4a-150">出力されたオブジェクト グラフ。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-150">The output object graph.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1dc4a-151">独自の実装を定義する場合にのみ、通常この署名を使用する必要があります、<xref:System.Xml.XmlReader>します。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-151">You should typically use this signature only if you defined your own implementation of a <xref:System.Xml.XmlReader>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1dc4a-152"><paramref name="xamlReader" /> の入力が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-152"><paramref name="xamlReader" /> input is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static object Parse (string xaml);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Parse(string xaml) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (xaml As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Parse(System::String ^ xaml);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; obj" Usage="System.Xaml.XamlServices.Parse xaml" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xaml" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xaml"><span data-ttu-id="1dc4a-153">解析する XAML 文字列入力。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-153">The XAML string input to parse.</span></span></param>
        <summary><span data-ttu-id="1dc4a-154">XAML を文字列出力として読み取り、オブジェクト グラフを返します。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-154">Reads XAML as string output and returns an object graph.</span></span></summary>
        <returns><span data-ttu-id="1dc4a-155">返されるオブジェクト グラフ。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-155">The object graph that is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1dc4a-156">ために、<xref:System.Xaml.XamlServices.Parse%2A>オブジェクト ツリーを正常に作成する呼び出しを次は、true である必要があります。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-156">In order for the <xref:System.Xaml.XamlServices.Parse%2A> call to successfully create an object tree, the following must be true:</span></span>  
  
-   <span data-ttu-id="1dc4a-157">`xaml`が整形式の入力および有効な XML です。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-157">The `xaml` input is well-formed and valid XML.</span></span>  
  
-   <span data-ttu-id="1dc4a-158">`xaml`入力が有効な XAML 言語レベルでします。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-158">The `xaml` input is valid XAML at the language level.</span></span>  
  
-   <span data-ttu-id="1dc4a-159">XAML の型で指定されている、`xaml`入力は、関連する XAML 名前空間の型のバックアップに解決する必要があります。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-159">The XAML types that are specified in the `xaml` input must resolve to backing types in the relevant XAML namespaces.</span></span> <span data-ttu-id="1dc4a-160">たとえば、WPF 名前空間の XAML 型は XAML; で指定されている WPF XAML 名前空間に解決します。wpf アセンブリがプロジェクトに含める必要があるまたは、実行時に使用できます。などなど。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-160">For example, XAML types for a WPF namespace can resolve to a WPF XAML namespace as specified in the XAML; the assemblies for WPF must be included in the project or be available in the run time; and so on.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1dc4a-161"><xref:System.Xaml.XamlServices> XAML の推奨資料ではない、または API を記述する XAML が処理する場合に設定[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]型、または型に基づく[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]します。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-161"><xref:System.Xaml.XamlServices> is not the recommended XAML reading or XAML writing API set if you are processing [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] types, or types based on [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)].</span></span> <span data-ttu-id="1dc4a-162">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]使用量、使用<xref:System.Windows.Markup.XamlReader?displayProperty=nameWithType>読み取りや、読み込む XAML、および<xref:System.Windows.Markup.XamlWriter?displayProperty=nameWithType>XAML を書き戻すためです。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-162">For [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] usage, use <xref:System.Windows.Markup.XamlReader?displayProperty=nameWithType> for reading or loading XAML, and <xref:System.Windows.Markup.XamlWriter?displayProperty=nameWithType> for writing back XAML.</span></span> <span data-ttu-id="1dc4a-163">これらのクラスを使用して、 <xref:System.Xaml> Api の実装で内部的にただしもサポートしています XAML の読み取りと書き込みを依存関係プロパティのための最適化などの特性に影響を与える WPF 固有の概念について説明します。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-163">These classes use <xref:System.Xaml> APIs internally in their implementation; however, they also provide support for WPF-specific concepts that influence the nature of XAML reading and writing, such as optimizations for dependency properties.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1dc4a-164"><paramref name="xaml" /> の入力が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-164"><paramref name="xaml" /> input is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Save">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1dc4a-165">提供されたオブジェクト グラフを XAML ノード表現に処理した後、シリアル化の出力形式に処理します。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-165">Processes a provided object graph into a XAML node representation and then into an output format for serialization.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public static string Save (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Save(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Save(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Save (instance As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Save(System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member Save : obj -&gt; string" Usage="System.Xaml.XamlServices.Save instance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="1dc4a-166">処理されるオブジェクト グラフのルート。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-166">The root of the object graph to process.</span></span></param>
        <summary><span data-ttu-id="1dc4a-167">提供されたオブジェクト ツリーを XAML ノード表現に処理した後、出力 XAML の文字列形式を返します。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-167">Processes a provided object tree into a XAML node representation, and returns a string representation of the output XAML.</span></span></summary>
        <returns><span data-ttu-id="1dc4a-168">文字列としての XAML マークアップ出力。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-168">The XAML markup output as a string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1dc4a-169">このメソッドからの出力は、`ToString`の結果、<xref:System.Xml.XmlWriter>メソッドの呼び出しによって作成されます。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-169">The output from this method is the `ToString` result of an <xref:System.Xml.XmlWriter> that is created by the method call.</span></span> <span data-ttu-id="1dc4a-170"><xref:System.Xml.XmlWriter>が次の設定を使用して作成されます:<xref:System.Xml.XmlWriterSettings.Indent%2A?displayProperty=nameWithType>は`true`; と<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A?displayProperty=nameWithType>は`true`します。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-170">That <xref:System.Xml.XmlWriter> is created by using the following settings: <xref:System.Xml.XmlWriterSettings.Indent%2A?displayProperty=nameWithType> is `true`; and <xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A?displayProperty=nameWithType> is `true`.</span></span>  
  
 <span data-ttu-id="1dc4a-171">返される文字列は有効な xml を読み込むことが、<xref:System.Xml.XmlReader.Create%2A>メソッドに処理して、文字列、ストリームやより具体的には専用のリーダーに XAML の場合。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-171">The returned string can be loaded as valid XML through the <xref:System.Xml.XmlReader.Create%2A> method if you processed the string into a stream, or into a reader more specifically dedicated for XAML.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public static void Save (System.IO.Stream stream, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Save(class System.IO.Stream stream, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Save(System.IO.Stream,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Save(System::IO::Stream ^ stream, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member Save : System.IO.Stream * obj -&gt; unit" Usage="System.Xaml.XamlServices.Save (stream, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="1dc4a-172">宛先のストリーム。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-172">The destination stream.</span></span></param>
        <param name="instance"><span data-ttu-id="1dc4a-173">処理されるオブジェクト グラフのルート。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-173">The root of the object graph to process.</span></span></param>
        <summary><span data-ttu-id="1dc4a-174">提供されたオブジェクト グラフを XAML ノード表現に処理した後、シリアル化の出力ストリームに処理します。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-174">Processes a provided object graph into a XAML node representation and then into an output stream for serialization.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="1dc4a-175"><xref:System.Xaml.XamlServices> XAML の推奨資料ではない、または API を記述する XAML が処理する場合に設定[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]型、または型に基づく[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]します。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-175"><xref:System.Xaml.XamlServices> is not the recommended XAML reading or XAML writing API set if you are processing [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] types, or types based on [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)].</span></span> <span data-ttu-id="1dc4a-176">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]使用量、使用<xref:System.Windows.Markup.XamlReader?displayProperty=nameWithType>の読み取りまたは XAML; の読み込みと<xref:System.Windows.Markup.XamlWriter?displayProperty=nameWithType>XAML を書き戻すためです。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-176">For [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] usage, use <xref:System.Windows.Markup.XamlReader?displayProperty=nameWithType> for reading or loading XAML; and <xref:System.Windows.Markup.XamlWriter?displayProperty=nameWithType> for writing back XAML.</span></span> <span data-ttu-id="1dc4a-177">これらのクラスを使用して、 <xref:System.Xaml> Api の実装で内部的にただしもサポートしています XAML の読み取りと書き込みを依存関係プロパティのための最適化などの特性に影響を与える WPF 固有の概念について説明します。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-177">These classes use <xref:System.Xaml> APIs internally in their implementation; however, they also provide support for WPF-specific concepts that influence the nature of XAML reading and writing, such as optimizations for dependency properties.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1dc4a-178"><paramref name="stream" /> の入力が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-178"><paramref name="stream" /> input is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public static void Save (System.IO.TextWriter writer, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Save(class System.IO.TextWriter writer, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Save(System.IO.TextWriter,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Save (writer As TextWriter, instance As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Save(System::IO::TextWriter ^ writer, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member Save : System.IO.TextWriter * obj -&gt; unit" Usage="System.Xaml.XamlServices.Save (writer, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="1dc4a-179">出力を書き込む <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-179">The <see cref="T:System.IO.TextWriter" /> that writes the output.</span></span></param>
        <param name="instance"><span data-ttu-id="1dc4a-180">処理されるオブジェクト グラフのルート。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-180">The root of the object graph to process.</span></span></param>
        <summary><span data-ttu-id="1dc4a-181">提供されたオブジェクト グラフを XAML ノード表現に処理した後、提供された <see cref="T:System.IO.TextWriter" /> で使用される出力に処理します。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-181">Processes a provided object graph into a XAML node representation and then into an output that goes to the provided <see cref="T:System.IO.TextWriter" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1dc4a-182"><paramref name="writer" /> の入力が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-182"><paramref name="writer" /> input is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public static void Save (string fileName, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Save(string fileName, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Save(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Save (fileName As String, instance As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Save(System::String ^ fileName, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member Save : string * obj -&gt; unit" Usage="System.Xaml.XamlServices.Save (fileName, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="1dc4a-183">出力を書き込むファイルの名前と場所。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-183">The name and location of the file to write the output to.</span></span></param>
        <param name="instance"><span data-ttu-id="1dc4a-184">処理されるオブジェクト グラフのルート。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-184">The root of the object graph to process.</span></span></param>
        <summary><span data-ttu-id="1dc4a-185">提供されたオブジェクト グラフを XAML ノード表現に処理した後、提供された場所の出力ファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-185">Processes a provided object graph into a XAML node representation and then writes it to an output file at a provided location.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1dc4a-186">`fileName`パラメーター値として使用されます、`outputFileName`への呼び出しの入力<xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType>を作成し、<xref:System.Xml.XmlWriter>メソッド呼び出しの一部として。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-186">The `fileName` parameter value is used as the `outputFileName` input for a call to <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType>, which creates a <xref:System.Xml.XmlWriter> as part of the method call.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1dc4a-187"><paramref name="fileName" /> が空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-187"><paramref name="fileName" /> is an empty string.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1dc4a-188"><paramref name="fileName" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-188"><paramref name="fileName" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public static void Save (System.Xaml.XamlWriter writer, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Save(class System.Xaml.XamlWriter writer, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Save(System.Xaml.XamlWriter,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Save (writer As XamlWriter, instance As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Save(System::Xaml::XamlWriter ^ writer, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member Save : System.Xaml.XamlWriter * obj -&gt; unit" Usage="System.Xaml.XamlServices.Save (writer, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xaml.XamlWriter" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="1dc4a-189">使用する <see cref="T:System.Xaml.XamlWriter" /> 実装。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-189">The <see cref="T:System.Xaml.XamlWriter" /> implementation to use.</span></span></param>
        <param name="instance"><span data-ttu-id="1dc4a-190">処理されるオブジェクト グラフのルート。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-190">The root of the object graph to process.</span></span></param>
        <summary><span data-ttu-id="1dc4a-191">提供されたオブジェクト グラフを XAML ノード表現に処理した後、提供された XAML ライターに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-191">Processes a provided object graph into a XAML node representation and then writes it to the provided XAML writer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1dc4a-192">通常、この署名を使用して、次の場合にのみする必要があります。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-192">You should typically use this signature only in the following cases:</span></span>  
  
-   <span data-ttu-id="1dc4a-193">独自の実装を定義した、<xref:System.Xaml.XamlWriter>します。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-193">You defined your own implementation of a <xref:System.Xaml.XamlWriter>.</span></span>  
  
-   <span data-ttu-id="1dc4a-194">設定を指定する、<xref:System.Xaml.XamlWriter>すると、既定の設定は異なります。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-194">You specified settings for the <xref:System.Xaml.XamlWriter> that differ from the default settings.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1dc4a-195"><paramref name="writer" /> の入力が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-195"><paramref name="writer" /> input is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public static void Save (System.Xml.XmlWriter writer, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Save(class System.Xml.XmlWriter writer, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Save(System.Xml.XmlWriter,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Save (writer As XmlWriter, instance As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Save(System::Xml::XmlWriter ^ writer, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member Save : System.Xml.XmlWriter * obj -&gt; unit" Usage="System.Xaml.XamlServices.Save (writer, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="1dc4a-196">使用する <see cref="T:System.Xml.XmlWriter" /> 実装。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-196">The <see cref="T:System.Xml.XmlWriter" /> implementation to use.</span></span></param>
        <param name="instance"><span data-ttu-id="1dc4a-197">処理されるオブジェクト グラフのルート。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-197">The root of the object graph to process.</span></span></param>
        <summary><span data-ttu-id="1dc4a-198">提供されたオブジェクト グラフを XAML ノード表現に処理した後、提供された <see cref="T:System.Xml.XmlWriter" /> に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-198">Processes a provided object graph into a XAML node representation and then writes it to the provided <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1dc4a-199"><paramref name="writer" /> の入力が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-199"><paramref name="writer" /> input is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Transform">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1dc4a-200">共通の XAML ノード セットの中継点を使用するために <see cref="T:System.Xaml.XamlReader" /> と <see cref="T:System.Xaml.XamlWriter" /> を接続します。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-200">Connects a <see cref="T:System.Xaml.XamlReader" /> and a <see cref="T:System.Xaml.XamlWriter" /> in order to use a common XAML node set intermediary.</span></span> <span data-ttu-id="1dc4a-201">提供されるリーダーとライターの種類に応じて、コンテンツが変換される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-201">Potentially transforms the content, depending on the types of readers and writers that are provided.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public static void Transform (System.Xaml.XamlReader xamlReader, System.Xaml.XamlWriter xamlWriter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Transform(class System.Xaml.XamlReader xamlReader, class System.Xaml.XamlWriter xamlWriter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Transform(System.Xaml.XamlReader,System.Xaml.XamlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Transform(System::Xaml::XamlReader ^ xamlReader, System::Xaml::XamlWriter ^ xamlWriter);" />
      <MemberSignature Language="F#" Value="static member Transform : System.Xaml.XamlReader * System.Xaml.XamlWriter -&gt; unit" Usage="System.Xaml.XamlServices.Transform (xamlReader, xamlWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlReader" Type="System.Xaml.XamlReader" />
        <Parameter Name="xamlWriter" Type="System.Xaml.XamlWriter" />
      </Parameters>
      <Docs>
        <param name="xamlReader"><span data-ttu-id="1dc4a-202">使用する <see cref="T:System.Xaml.XamlReader" /> 実装。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-202">The <see cref="T:System.Xaml.XamlReader" /> implementation to use.</span></span></param>
        <param name="xamlWriter"><span data-ttu-id="1dc4a-203">使用する <see cref="T:System.Xaml.XamlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-203">The <see cref="T:System.Xaml.XamlWriter" /> to use.</span></span></param>
        <summary><span data-ttu-id="1dc4a-204">共通の XAML ノード セットの中継点を使用する <see cref="T:System.Xaml.XamlReader" /> と <see cref="T:System.Xaml.XamlWriter" /> を接続します。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-204">Connects a <see cref="T:System.Xaml.XamlReader" /> and a <see cref="T:System.Xaml.XamlWriter" /> to use a common XAML node set intermediary.</span></span> <span data-ttu-id="1dc4a-205">提供されるリーダーとライターの種類に応じて、コンテンツが変換される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-205">Potentially transforms the content, depending on the types of readers and writers that are provided.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1dc4a-206">このメソッドは、ラッパー<xref:System.Xaml.XamlServices.Transform%28System.Xaml.XamlReader%2CSystem.Xaml.XamlWriter%2CSystem.Boolean%29>ここで、`closeWriter`として指定されて`true`します。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-206">This method is a wrapper around <xref:System.Xaml.XamlServices.Transform%28System.Xaml.XamlReader%2CSystem.Xaml.XamlWriter%2CSystem.Boolean%29>, where `closeWriter` is specified as `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1dc4a-207"><paramref name="xamlReader" /> または <paramref name="xamlWriter" /> の入力が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-207"><paramref name="xamlReader" /> or <paramref name="xamlWriter" /> input is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xaml.XamlException"><span data-ttu-id="1dc4a-208">XAML スキーマ コンテキストが提供された <paramref name="xamlReader" /> と <paramref name="xamlWriter" /> の間で一致していません。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-208">The XAML schema context does not match between the provided <paramref name="xamlReader" /> and <paramref name="xamlWriter" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public static void Transform (System.Xaml.XamlReader xamlReader, System.Xaml.XamlWriter xamlWriter, bool closeWriter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Transform(class System.Xaml.XamlReader xamlReader, class System.Xaml.XamlWriter xamlWriter, bool closeWriter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Transform(System.Xaml.XamlReader,System.Xaml.XamlWriter,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Transform(System::Xaml::XamlReader ^ xamlReader, System::Xaml::XamlWriter ^ xamlWriter, bool closeWriter);" />
      <MemberSignature Language="F#" Value="static member Transform : System.Xaml.XamlReader * System.Xaml.XamlWriter * bool -&gt; unit" Usage="System.Xaml.XamlServices.Transform (xamlReader, xamlWriter, closeWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlReader" Type="System.Xaml.XamlReader" />
        <Parameter Name="xamlWriter" Type="System.Xaml.XamlWriter" />
        <Parameter Name="closeWriter" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="xamlReader"><span data-ttu-id="1dc4a-209">使用する <see cref="T:System.Xaml.XamlReader" /> 実装。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-209">The <see cref="T:System.Xaml.XamlReader" /> implementation to use.</span></span></param>
        <param name="xamlWriter"><span data-ttu-id="1dc4a-210">使用する <see cref="T:System.Xaml.XamlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-210">The <see cref="T:System.Xaml.XamlWriter" /> to use.</span></span></param>
        <param name="closeWriter"><span data-ttu-id="1dc4a-211">呼び出しの完了後にライターを閉じる場合は <see langword="true" />。最後の書き込み位置でライターをアクティブなままにする場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-211"><see langword="true" /> to close the writer after the call is complete; <see langword="false" /> to leave the writer active at the last written position.</span></span></param>
        <summary><span data-ttu-id="1dc4a-212">共通の XAML ノード セットの中継点を使用する <see cref="T:System.Xaml.XamlReader" /> と <see cref="T:System.Xaml.XamlWriter" /> を接続します。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-212">Connects a <see cref="T:System.Xaml.XamlReader" /> and a <see cref="T:System.Xaml.XamlWriter" /> to use a common XAML node set intermediary.</span></span> <span data-ttu-id="1dc4a-213">提供されるリーダーとライターの種類に応じて、コンテンツが変換される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-213">Potentially transforms the content, depending on the types of readers and writers that are provided.</span></span> <span data-ttu-id="1dc4a-214">呼び出しの完了後にライターを閉じるかどうかを指定するパラメーターが用意されています。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-214">Provides a parameter for specifying whether to close the writer after the call is completed.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1dc4a-215"><paramref name="xamlReader" /> または <paramref name="xamlWriter" /> の入力が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-215"><paramref name="xamlReader" /> or <paramref name="xamlWriter" /> input is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xaml.XamlException"><span data-ttu-id="1dc4a-216">XAML スキーマ コンテキストが提供された <paramref name="xamlReader" /> と <paramref name="xamlWriter" /> の間で一致していません。</span><span class="sxs-lookup"><span data-stu-id="1dc4a-216">The XAML schema context does not match between the provided <paramref name="xamlReader" /> and <paramref name="xamlWriter" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>