<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ApplicationActivator.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac509e881a31fa9ec7f6e692c1d532cec070a27ae58.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">09e881a31fa9ec7f6e692c1d532cec070a27ae58</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.Hosting.ApplicationActivator">
          <source>Provides the base class for the activation of manifest-based assemblies.</source>
          <target state="translated">マニフェストに基づくアセンブリのアクティベーションの基本クラスを提供します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Hosting.ApplicationActivator">
          <source>There is a single designated instance of the <ph id="ph1">&lt;xref:System.Runtime.Hosting.ApplicationActivator&gt;</ph> class in each <ph id="ph2">&lt;xref:System.AppDomain&gt;</ph> to which all activation calls are routed.</source>
          <target state="translated">1 つの指定されたインスタンスがある、<ph id="ph1">&lt;xref:System.Runtime.Hosting.ApplicationActivator&gt;</ph>クラスにそれぞれ<ph id="ph2">&lt;xref:System.AppDomain&gt;</ph>呼び出しをルーティングするすべてのアクティブ化します。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Hosting.ApplicationActivator">
          <source>The <ph id="ph1">&lt;xref:System.AppDomainManager&gt;</ph> for the current <ph id="ph2">&lt;xref:System.AppDomain&gt;</ph> can provide its own custom <ph id="ph3">&lt;xref:System.Runtime.Hosting.ApplicationActivator&gt;</ph> for this purpose.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.AppDomainManager&gt;</ph>現在の<ph id="ph2">&lt;xref:System.AppDomain&gt;</ph>独自のカスタムを提供できます<ph id="ph3">&lt;xref:System.Runtime.Hosting.ApplicationActivator&gt;</ph>この目的のためです。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Hosting.ApplicationActivator">
          <source>If a custom <ph id="ph1">&lt;xref:System.Runtime.Hosting.ApplicationActivator&gt;</ph> is not provided, an instance of the default <ph id="ph2">&lt;xref:System.Runtime.Hosting.ApplicationActivator&gt;</ph> is created.</source>
          <target state="translated">場合、カスタム<ph id="ph1">&lt;xref:System.Runtime.Hosting.ApplicationActivator&gt;</ph>が指定されていない、既定のインスタンス<ph id="ph2">&lt;xref:System.Runtime.Hosting.ApplicationActivator&gt;</ph>を作成します。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Hosting.ApplicationActivator">
          <source>The following steps describe the behavior of the default <ph id="ph1">&lt;xref:System.Runtime.Hosting.ApplicationActivator.CreateInstance%2A&gt;</ph> method implementation:</source>
          <target state="translated">次の手順は、既定の動作を記述<ph id="ph1">&lt;xref:System.Runtime.Hosting.ApplicationActivator.CreateInstance%2A&gt;</ph>メソッドの実装。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Hosting.ApplicationActivator">
          <source>Checks if the <ph id="ph1">&lt;xref:System.ActivationContext&gt;</ph> of the add-in to be activated matches the <ph id="ph2">&lt;xref:System.ActivationContext&gt;</ph> of the current domain; if not, proceeds to step 2.</source>
          <target state="translated">場合にチェック、<ph id="ph1">&lt;xref:System.ActivationContext&gt;</ph>のアドインをアクティブ化された一致する、<ph id="ph2">&lt;xref:System.ActivationContext&gt;</ph>現在のドメインです。 ない場合、手順 2. に進みます。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Hosting.ApplicationActivator">
          <source>Otherwise, executes the assembly and returns the result wrapped in an object handle.</source>
          <target state="translated">それ以外の場合、アセンブリを実行し、オブジェクト ハンドルでラップした結果を返します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Hosting.ApplicationActivator">
          <source>Activates the add-in in a new <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph>.</source>
          <target state="translated">新しいにアドインをアクティブに<ph id="ph1">&lt;xref:System.AppDomain&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Hosting.ApplicationActivator">
          <source>The following steps are taken to initialize a new <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph> using the <ph id="ph2">&lt;xref:System.Runtime.Hosting.ActivationArguments&gt;</ph> for the add-in.</source>
          <target state="translated">次の手順は、新しい初期化するために実行<ph id="ph1">&lt;xref:System.AppDomain&gt;</ph>を使用して、<ph id="ph2">&lt;xref:System.Runtime.Hosting.ActivationArguments&gt;</ph>用アドインです。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Hosting.ApplicationActivator">
          <source>Creates a new <ph id="ph1">&lt;xref:System.AppDomainSetup&gt;</ph> object using an <ph id="ph2">&lt;xref:System.Runtime.Hosting.ActivationArguments&gt;</ph> object containing the activation context for the add-in.</source>
          <target state="translated">新たに作成<ph id="ph1">&lt;xref:System.AppDomainSetup&gt;</ph>オブジェクトを使用して、<ph id="ph2">&lt;xref:System.Runtime.Hosting.ActivationArguments&gt;</ph>アドインでのアクティベーション コンテキストを含むオブジェクト。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Hosting.ApplicationActivator">
          <source>Calls the <ph id="ph1">&lt;xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A&gt;</ph> method to create a new domain using the <ph id="ph2">&lt;xref:System.AppDomainSetup&gt;</ph> object.</source>
          <target state="translated">呼び出し、<ph id="ph1">&lt;xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A&gt;</ph>メソッドを使用して新しいドメインを作成、<ph id="ph2">&lt;xref:System.AppDomainSetup&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Hosting.ApplicationActivator">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.Security.HostSecurityManager.DetermineApplicationTrust%2A?displayProperty=nameWithType&gt;</ph> method to acquire an <ph id="ph3">&lt;xref:System.Security.Policy.ApplicationTrust&gt;</ph> object for the add-in.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A&gt;</ph>メソッドの呼び出し、<ph id="ph2">&lt;xref:System.Security.HostSecurityManager.DetermineApplicationTrust%2A?displayProperty=nameWithType&gt;</ph>を取得するメソッド、<ph id="ph3">&lt;xref:System.Security.Policy.ApplicationTrust&gt;</ph>アドインのオブジェクト。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Hosting.ApplicationActivator">
          <source>If the <ph id="ph1">&lt;xref:System.Security.Policy.ApplicationTrust.IsApplicationTrustedToRun%2A&gt;</ph> property returns <ph id="ph2">`true`</ph>, the add-in is executed.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.Security.Policy.ApplicationTrust.IsApplicationTrustedToRun%2A&gt;</ph>プロパティから返される<ph id="ph2">`true`</ph>、アドインを実行します。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Hosting.ApplicationActivator">
          <source>If not, <ph id="ph1">&lt;xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A&gt;</ph> throws a <ph id="ph2">&lt;xref:System.Security.Policy.PolicyException&gt;</ph> indicating that execution permission could not be acquired.</source>
          <target state="translated">ない場合は、<ph id="ph1">&lt;xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A&gt;</ph>スロー、<ph id="ph2">&lt;xref:System.Security.Policy.PolicyException&gt;</ph>を示す実行アクセス許可を取得できませんでした。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Hosting.ApplicationActivator">
          <source>If the add-in is trusted to run, then a new <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph> is created and configured for the <ph id="ph2">&lt;xref:System.ActivationContext&gt;</ph> of the add-in, and the add-in is loaded and executed.</source>
          <target state="translated">アドインを実行し、新しい信頼できる場合に<ph id="ph1">&lt;xref:System.AppDomain&gt;</ph>が作成され、構成されている、<ph id="ph2">&lt;xref:System.ActivationContext&gt;</ph>アドインのアドインの読み込みし、実行されるとします。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Hosting.ApplicationActivator">
          <source>The result of the activation of the add-in is returned, wrapped in an object handle.</source>
          <target state="translated">オブジェクト ハンドルにラップされて、アドインのアクティブ化の結果が返されます。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Hosting.ApplicationActivator">
          <source>A custom activator can tailor the activation of an add-in to a particular set of circumstances.</source>
          <target state="translated">カスタム アクティベータは、特定の一連の状況にアドインのアクティブ化を調整できます。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Hosting.ApplicationActivator">
          <source>For example, a custom activator could find an existing <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph> to activate this add-in instead of creating a new domain every time.</source>
          <target state="translated">たとえば、カスタムのアクティベーターが見つかりませんでした既存<ph id="ph1">&lt;xref:System.AppDomain&gt;</ph>たびに新しいドメインを作成する代わりのこのアドインのアクティブ化します。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Hosting.ApplicationActivator">
          <source>The following steps describe the behavior of a custom <ph id="ph1">&lt;xref:System.Runtime.Hosting.ApplicationActivator&gt;</ph> that activates an add-in in an existing <ph id="ph2">&lt;xref:System.AppDomain&gt;</ph>:</source>
          <target state="translated">次の手順は、カスタムの動作を記述<ph id="ph1">&lt;xref:System.Runtime.Hosting.ApplicationActivator&gt;</ph>、既存のアドインをアクティブに<ph id="ph2">&lt;xref:System.AppDomain&gt;</ph>:</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Hosting.ApplicationActivator">
          <source>The custom activator finds a domain that has the same <ph id="ph1">&lt;xref:System.ActivationContext&gt;</ph> as the add-in that is being activated.</source>
          <target state="translated">カスタムのアクティベーターが同じドメインを検索する<ph id="ph1">&lt;xref:System.ActivationContext&gt;</ph>アドインをアクティブ化するとします。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Hosting.ApplicationActivator">
          <source>If the <ph id="ph1">&lt;xref:System.ActivationContext&gt;</ph> has never been seen before in the process, the custom activator creates a new <ph id="ph2">&lt;xref:System.AppDomain&gt;</ph> for this <ph id="ph3">&lt;xref:System.ActivationContext&gt;</ph> by calling the <ph id="ph4">&lt;xref:System.AppDomain.CreateDomain%2A&gt;</ph> method directly, or delegating this activity to the <ph id="ph5">&lt;xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A&gt;</ph> in the base class.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.ActivationContext&gt;</ph>プロセスでは、カスタムのアクティベーターを作成する前に表示されていることはありません<ph id="ph2">&lt;xref:System.AppDomain&gt;</ph>この<ph id="ph3">&lt;xref:System.ActivationContext&gt;</ph>を呼び出して、<ph id="ph4">&lt;xref:System.AppDomain.CreateDomain%2A&gt;</ph>メソッドを直接、またはこの活動を委任する、<ph id="ph5">&lt;xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A&gt;</ph>基底クラスです。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Hosting.ApplicationActivator">
          <source>If there is an existing domain with the same <ph id="ph1">&lt;xref:System.ActivationContext&gt;</ph>, then the activator can delegate the <ph id="ph2">&lt;xref:System.Runtime.Hosting.ApplicationActivator.CreateInstance%2A&gt;</ph> method call to the <ph id="ph3">&lt;xref:System.Runtime.Hosting.ApplicationActivator&gt;</ph> in the target domain.</source>
          <target state="translated">同じ既存のドメインがある場合<ph id="ph1">&lt;xref:System.ActivationContext&gt;</ph>、アクティベーターを委任することができ、<ph id="ph2">&lt;xref:System.Runtime.Hosting.ApplicationActivator.CreateInstance%2A&gt;</ph>メソッドの呼び出しを<ph id="ph3">&lt;xref:System.Runtime.Hosting.ApplicationActivator&gt;</ph>対象のドメイン。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Hosting.ApplicationActivator">
          <source>Note that this would be a cross-domain call to an <ph id="ph1">&lt;xref:System.Runtime.Hosting.ApplicationActivator&gt;</ph> that resides in the target <ph id="ph2">&lt;xref:System.AppDomain&gt;</ph>.</source>
          <target state="translated">これは、ドメイン間の呼び出しであることに注意してください、<ph id="ph1">&lt;xref:System.Runtime.Hosting.ApplicationActivator&gt;</ph>ターゲット内に存在する<ph id="ph2">&lt;xref:System.AppDomain&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Hosting.ApplicationActivator">
          <source>The following code example shows how to obtain an <ph id="ph1">&lt;xref:System.Runtime.Hosting.ApplicationActivator&gt;</ph> object from the current <ph id="ph2">&lt;xref:System.AppDomain.DomainManager%2A&gt;</ph> for a manifest-based application.</source>
          <target state="translated">次のコード例は、取得する方法を示します、<ph id="ph1">&lt;xref:System.Runtime.Hosting.ApplicationActivator&gt;</ph>オブジェクト現在から<ph id="ph2">&lt;xref:System.AppDomain.DomainManager%2A&gt;</ph>マニフェスト ベースのアプリケーションにします。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Runtime.Hosting.ApplicationActivator.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.Hosting.ApplicationActivator" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Runtime.Hosting.ApplicationActivator" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="T:System.Runtime.Hosting.ApplicationActivator">
          <source>Creates an instance of the application to be activated, using an activation context that identifies the application.</source>
          <target state="translated">アプリケーションを識別するアクティベーション コンテキストを使用して、アクティブ化するアプリケーションのインスタンスを作成します。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Runtime.Hosting.ApplicationActivator.CreateInstance(System.ActivationContext)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ActivationContext" /&gt;</ph> that identifies the application to activate.</source>
          <target state="translated">アクティブ化するアプリケーションを識別する <ph id="ph1">&lt;see cref="T:System.ActivationContext" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Runtime.Hosting.ApplicationActivator.CreateInstance(System.ActivationContext)">
          <source>Creates an instance of the application to be activated, using the specified activation context.</source>
          <target state="translated">指定されたアクティベーション コンテキストを使用して、アクティブ化するアプリケーションのインスタンスを作成します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Runtime.Hosting.ApplicationActivator.CreateInstance(System.ActivationContext)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.ObjectHandle" /&gt;</ph> that is a wrapper for the return value of the application execution.</source>
          <target state="translated">アプリケーション実行の戻り値のラッパーである <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.ObjectHandle" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Runtime.Hosting.ApplicationActivator.CreateInstance(System.ActivationContext)">
          <source>The return value must be unwrapped to access the real object.</source>
          <target state="translated">実際のオブジェクトにアクセスするには、戻り値のラップを解除する必要があります。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Hosting.ApplicationActivator.CreateInstance(System.ActivationContext)">
          <source>This method is intended for the manifest-based activation of applications.</source>
          <target state="translated">このメソッドはアプリケーションのマニフェストに基づくアクティベーションものです。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Runtime.Hosting.ApplicationActivator.CreateInstance(System.ActivationContext)">
          <source><ph id="ph1">&lt;paramref name="activationContext" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="activationContext" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Runtime.Hosting.ApplicationActivator.CreateInstance(System.ActivationContext,System.String[])">
          <source>An <ph id="ph1">&lt;see cref="T:System.ActivationContext" /&gt;</ph> that identifies the application to activate.</source>
          <target state="translated">アクティブ化するアプリケーションを識別する <ph id="ph1">&lt;see cref="T:System.ActivationContext" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Runtime.Hosting.ApplicationActivator.CreateInstance(System.ActivationContext,System.String[])">
          <source>Custom activation data.</source>
          <target state="translated">カスタムのアクティベーション データ。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Runtime.Hosting.ApplicationActivator.CreateInstance(System.ActivationContext,System.String[])">
          <source>Creates an instance of the application to be activated, using the specified activation context  and custom activation data.</source>
          <target state="translated">指定されたアクティベーション コンテキストとカスタム アクティベーション データを使用して、アクティブ化するアプリケーションのインスタンスを作成します。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Runtime.Hosting.ApplicationActivator.CreateInstance(System.ActivationContext,System.String[])">
          <source>An <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.ObjectHandle" /&gt;</ph> that is a wrapper for the return value of the application execution.</source>
          <target state="translated">アプリケーション実行の戻り値のラッパーである <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.ObjectHandle" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Runtime.Hosting.ApplicationActivator.CreateInstance(System.ActivationContext,System.String[])">
          <source>The return value must be unwrapped to access the real object.</source>
          <target state="translated">実際のオブジェクトにアクセスするには、戻り値のラップを解除する必要があります。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Hosting.ApplicationActivator.CreateInstance(System.ActivationContext,System.String[])">
          <source>This method is intended for the manifest-based activation of applications.</source>
          <target state="translated">このメソッドはアプリケーションのマニフェストに基づくアクティベーションものです。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Hosting.ApplicationActivator.CreateInstance(System.ActivationContext,System.String[])">
          <source>The activation data consists of information such as the query string portion of a URL.</source>
          <target state="translated">ライセンス認証データは、URL のクエリ文字列部分などの情報で構成されます。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Runtime.Hosting.ApplicationActivator.CreateInstance(System.ActivationContext,System.String[])">
          <source><ph id="ph1">&lt;paramref name="activationContext" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="activationContext" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper(System.AppDomainSetup)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AppDomainSetup" /&gt;</ph> object whose <ph id="ph2">&lt;see cref="P:System.AppDomainSetup.ActivationArguments" /&gt;</ph> property identifies the application to activate.</source>
          <target state="translated">アクティブ化するアプリケーションを識別する <ph id="ph1">&lt;see cref="T:System.AppDomainSetup" /&gt;</ph> プロパティを持つ <ph id="ph2">&lt;see cref="P:System.AppDomainSetup.ActivationArguments" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper(System.AppDomainSetup)">
          <source>Creates an instance of an application using the specified <ph id="ph1">&lt;see cref="T:System.AppDomainSetup" /&gt;</ph> object.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="T:System.AppDomainSetup" /&gt;</ph> オブジェクトを使用してアプリケーションのインスタンスを作成します。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper(System.AppDomainSetup)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.ObjectHandle" /&gt;</ph> that is a wrapper for the return value of the application execution.</source>
          <target state="translated">アプリケーション実行の戻り値のラッパーである <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.ObjectHandle" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper(System.AppDomainSetup)">
          <source>The return value must be unwrapped to access the real object.</source>
          <target state="translated">実際のオブジェクトにアクセスするには、戻り値のラップを解除する必要があります。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper(System.AppDomainSetup)">
          <source>This method is intended for the manifest-based activation of applications.</source>
          <target state="translated">このメソッドはアプリケーションのマニフェストに基づくアクティベーションものです。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper(System.AppDomainSetup)">
          <source>The <ph id="ph1">&lt;see cref="P:System.AppDomainSetup.ActivationArguments" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="adSetup" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="adSetup" /&gt;</ph> の <ph id="ph1">&lt;see cref="P:System.AppDomainSetup.ActivationArguments" /&gt;</ph> プロパティが <ph id="ph3">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper(System.AppDomainSetup)">
          <source>The application instance failed to execute because the policy settings on the current application domain do not provide permission for this application to run.</source>
          <target state="translated">現在のアプリケーション ドメインのポリシー設定では、このアプリケーションを実行するためのアクセス許可が提供されないため、アプリケーションのインスタンス実行がエラーになりました。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>