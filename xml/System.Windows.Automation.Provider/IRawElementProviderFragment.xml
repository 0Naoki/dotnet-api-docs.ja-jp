<Type Name="IRawElementProviderFragment" FullName="System.Windows.Automation.Provider.IRawElementProviderFragment">
  <Metadata><Meta Name="ms.openlocfilehash" Value="36f8e926cdbdc7e66d61f8953d98893203a6e85d" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69225426" /></Metadata><TypeSignature Language="C#" Value="public interface IRawElementProviderFragment : System.Windows.Automation.Provider.IRawElementProviderSimple" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRawElementProviderFragment implements class System.Windows.Automation.Provider.IRawElementProviderSimple" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.Provider.IRawElementProviderFragment" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRawElementProviderFragment&#xA;Implements IRawElementProviderSimple" />
  <TypeSignature Language="C++ CLI" Value="public interface class IRawElementProviderFragment : System::Windows::Automation::Provider::IRawElementProviderSimple" />
  <TypeSignature Language="F#" Value="type IRawElementProviderFragment = interface&#xA;    interface IRawElementProviderSimple" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationProvider</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Automation.Provider.IRawElementProviderSimple</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.Guid("f7063da8-8359-439c-9297-bbc5299a7d87")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="241cd-101">リスト ボックスやリスト項目などの多階層構造の一部である、ユーザー インターフェイス (UI) 要素のメソッドとプロパティを公開します。</span><span class="sxs-lookup"><span data-stu-id="241cd-101">Exposes methods and properties on user interface (UI) elements that are part of a structure more than one level deep, such as a list box or a list item.</span></span> <span data-ttu-id="241cd-102">UI オートメーション プロバイダーによって実装されます。</span><span class="sxs-lookup"><span data-stu-id="241cd-102">Implemented by UI Automation providers.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="241cd-103">フラグメントのルートノードは、から<xref:System.Windows.Automation.Provider.IRawElementProviderFragmentRoot> <xref:System.Windows.Automation.Provider.IRawElementProviderFragment>継承するインターフェイスをサポートする必要があります。</span><span class="sxs-lookup"><span data-stu-id="241cd-103">The root node of the fragment must support the <xref:System.Windows.Automation.Provider.IRawElementProviderFragmentRoot> interface, which inherits from <xref:System.Windows.Automation.Provider.IRawElementProviderFragment>.</span></span>  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/framework/ui-automation/ui-automation-providers-overview.md"><span data-ttu-id="241cd-104">UI オートメーション プロバイダーの概要</span><span class="sxs-lookup"><span data-stu-id="241cd-104">UI Automation Providers Overview</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/6acc6d08-bd67-4e2e-915c-9c1d34eb86fe"><span data-ttu-id="241cd-105">サーバー側 UI オートメーションプロバイダーの実装</span><span class="sxs-lookup"><span data-stu-id="241cd-105">Server-side UI Automation Provider Implementation</span></span></related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms771502(v=vs.90)"><span data-ttu-id="241cd-106">フラグメントプロバイダーのサンプル</span><span class="sxs-lookup"><span data-stu-id="241cd-106">Fragment Provider Sample</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="BoundingRectangle">
      <MemberSignature Language="C#" Value="public System.Windows.Rect BoundingRectangle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Rect BoundingRectangle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.IRawElementProviderFragment.BoundingRectangle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BoundingRectangle As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Rect BoundingRectangle { System::Windows::Rect get(); };" />
      <MemberSignature Language="F#" Value="member this.BoundingRectangle : System.Windows.Rect" Usage="System.Windows.Automation.Provider.IRawElementProviderFragment.BoundingRectangle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="241cd-107">この要素の外接する四角形を取得します。</span><span class="sxs-lookup"><span data-stu-id="241cd-107">Gets the bounding rectangle of this element.</span></span></summary>
        <value><span data-ttu-id="241cd-108">外接する四角形を表す画面座標。</span><span class="sxs-lookup"><span data-stu-id="241cd-108">The bounding rectangle, in screen coordinates.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="241cd-109">要素の一部が隠れている場合、または一部が画面外にある場合、クリッピングは必要ありません。</span><span class="sxs-lookup"><span data-stu-id="241cd-109">No clipping is required if the element is partly obscured or partly off-screen.</span></span> <span data-ttu-id="241cd-110"><xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsOffscreen%2A>プロパティは、四角形が実際に表示されているかどうかを示すように設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="241cd-110">The <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsOffscreen%2A> property should be set to indicate whether the rectangle is actually visible.</span></span>  
  
 <span data-ttu-id="241cd-111">外接する四角形内のすべてのポイントがクリック可能であるとは限りません。</span><span class="sxs-lookup"><span data-stu-id="241cd-111">Not all points within the bounding rectangle are necessarily clickable.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="241cd-112">次のコード例では、外接する四角形の内部状態がに保持<xref:System.Drawing.Rectangle?displayProperty=nameWithType>されます。これは、返される<xref:System.Windows.Rect?displayProperty=nameWithType>前にに変換されます。</span><span class="sxs-lookup"><span data-stu-id="241cd-112">In the following example code, the internal state of the bounding rectangle is kept in a <xref:System.Drawing.Rectangle?displayProperty=nameWithType>, which is converted to a <xref:System.Windows.Rect?displayProperty=nameWithType> before being returned.</span></span>  
  
 [!code-csharp[UIAFragmentProvider_snip#104](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAFragmentProvider_snip/CSharp/ListItemFragment.cs#104)]
 [!code-vb[UIAFragmentProvider_snip#104](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAFragmentProvider_snip/VisualBasic/ListItemFragment.vb#104)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6acc6d08-bd67-4e2e-915c-9c1d34eb86fe"><span data-ttu-id="241cd-113">サーバー側 UI オートメーションプロバイダーの実装</span><span class="sxs-lookup"><span data-stu-id="241cd-113">Server-side UI Automation Provider Implementation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FragmentRoot">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Provider.IRawElementProviderFragmentRoot FragmentRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Automation.Provider.IRawElementProviderFragmentRoot FragmentRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.IRawElementProviderFragment.FragmentRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FragmentRoot As IRawElementProviderFragmentRoot" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::Provider::IRawElementProviderFragmentRoot ^ FragmentRoot { System::Windows::Automation::Provider::IRawElementProviderFragmentRoot ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FragmentRoot : System.Windows.Automation.Provider.IRawElementProviderFragmentRoot" Usage="System.Windows.Automation.Provider.IRawElementProviderFragment.FragmentRoot" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Provider.IRawElementProviderFragmentRoot</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="241cd-114">フラグメントのルート ノードを取得します。</span><span class="sxs-lookup"><span data-stu-id="241cd-114">Retrieves the root node of the fragment.</span></span></summary>
        <value><span data-ttu-id="241cd-115">ルート ノード。</span><span class="sxs-lookup"><span data-stu-id="241cd-115">The root node.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="241cd-116">を実装<xref:System.Windows.Automation.Provider.IRawElementProviderFragmentRoot>するプロバイダーは、それ自体を返す必要があります。</span><span class="sxs-lookup"><span data-stu-id="241cd-116">A provider that implements <xref:System.Windows.Automation.Provider.IRawElementProviderFragmentRoot> should return itself.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="241cd-117">次のコード例は、リストボックス内のリスト項目など、フラグメント内の要素の実装を示しています。</span><span class="sxs-lookup"><span data-stu-id="241cd-117">The following code example shows an implementation for an element in a fragment, such as a list item within a list box.</span></span>  
  
 [!code-csharp[UIAFragmentProvider_snip#105](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAFragmentProvider_snip/CSharp/ListItemFragment.cs#105)]
 [!code-vb[UIAFragmentProvider_snip#105](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAFragmentProvider_snip/VisualBasic/ListItemFragment.vb#105)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6acc6d08-bd67-4e2e-915c-9c1d34eb86fe"><span data-ttu-id="241cd-118">サーバー側 UI オートメーションプロバイダーの実装</span><span class="sxs-lookup"><span data-stu-id="241cd-118">Server-side UI Automation Provider Implementation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetEmbeddedFragmentRoots">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Provider.IRawElementProviderSimple[] GetEmbeddedFragmentRoots ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Automation.Provider.IRawElementProviderSimple[] GetEmbeddedFragmentRoots() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.IRawElementProviderFragment.GetEmbeddedFragmentRoots" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEmbeddedFragmentRoots () As IRawElementProviderSimple()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Windows::Automation::Provider::IRawElementProviderSimple ^&gt; ^ GetEmbeddedFragmentRoots();" />
      <MemberSignature Language="F#" Value="abstract member GetEmbeddedFragmentRoots : unit -&gt; System.Windows.Automation.Provider.IRawElementProviderSimple[]" Usage="iRawElementProviderFragment.GetEmbeddedFragmentRoots " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Provider.IRawElementProviderSimple[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="241cd-119">現在の要素をルートとする [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]要素ツリーに埋め込まれた、フラグメント ルートの配列を取得します。</span><span class="sxs-lookup"><span data-stu-id="241cd-119">Retrieves an array of fragment roots that are embedded in the [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] element tree rooted at the current element.</span></span></summary>
        <returns><span data-ttu-id="241cd-120">ルート フラグメントの配列、または <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="241cd-120">An array of root fragments, or <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="241cd-121">このメソッドは、現在の要素が別[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]のフレームワークをホストしている場合にのみ、フラグメントの配列を返します。</span><span class="sxs-lookup"><span data-stu-id="241cd-121">This method returns an array of fragments only if the current element is hosting another [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] framework.</span></span> <span data-ttu-id="241cd-122">ほとんどのプロバイダー `null`はを返します。</span><span class="sxs-lookup"><span data-stu-id="241cd-122">Most providers return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6acc6d08-bd67-4e2e-915c-9c1d34eb86fe"><span data-ttu-id="241cd-123">サーバー側 UI オートメーションプロバイダーの実装</span><span class="sxs-lookup"><span data-stu-id="241cd-123">Server-side UI Automation Provider Implementation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeId">
      <MemberSignature Language="C#" Value="public int[] GetRuntimeId ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32[] GetRuntimeId() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.IRawElementProviderFragment.GetRuntimeId" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRuntimeId () As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;int&gt; ^ GetRuntimeId();" />
      <MemberSignature Language="F#" Value="abstract member GetRuntimeId : unit -&gt; int[]" Usage="iRawElementProviderFragment.GetRuntimeId " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="241cd-124">要素のランタイム識別子を取得します。</span><span class="sxs-lookup"><span data-stu-id="241cd-124">Retrieves the runtime identifier of an element.</span></span></summary>
        <returns><span data-ttu-id="241cd-125">要素の一意のランタイム識別子。</span><span class="sxs-lookup"><span data-stu-id="241cd-125">The unique run-time identifier of the element.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="241cd-126">実装は、 `null`ウィンドウハンドルに対応する要素に対してを返す必要があります。</span><span class="sxs-lookup"><span data-stu-id="241cd-126">Implementations should return `null` for an element that corresponds to a window handle.</span></span> <span data-ttu-id="241cd-127">その他の要素は、を含む<xref:System.Windows.Automation.Provider.AutomationInteropProvider.AppendRuntimeId>配列を返し、その後にフラグメント内で一意の値を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="241cd-127">Other elements should return an array that contains <xref:System.Windows.Automation.Provider.AutomationInteropProvider.AppendRuntimeId>, followed by a value that is unique within the fragment.</span></span>  
  
 <span data-ttu-id="241cd-128">このフラグメント内で一意性を保証するのは、プロバイダーの責任です。たとえば、リスト内の各項目は個別に番号を付けられている必要があります。</span><span class="sxs-lookup"><span data-stu-id="241cd-128">It is the provider's responsibility to ensure uniqueness within the fragment; for example, each item in a list must be individually numbered.</span></span> <span data-ttu-id="241cd-129">エンジン[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]は、 <xref:System.Windows.Automation.Provider.AutomationInteropProvider.AppendRuntimeId>値を変換することによって、識別子がすべてのインスタンスで一意であることを保証します。</span><span class="sxs-lookup"><span data-stu-id="241cd-129">The [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] engine ensures that the identifier is unique among all instances, by translating the <xref:System.Windows.Automation.Provider.AutomationInteropProvider.AppendRuntimeId> value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="241cd-130">次のコード例は、リストボックス内の項目など、フラグメント内の要素によるこのメソッドの実装を示しています。</span><span class="sxs-lookup"><span data-stu-id="241cd-130">The following example code shows an implementation of this method by an element within a fragment, such as an item within a list box.</span></span> <span data-ttu-id="241cd-131">この項目は、このフラグメントのインスタンス内に独自の一意の識別子を<xref:System.Windows.Automation.Provider.AutomationInteropProvider.AppendRuntimeId>持ち、この値によって、メソッドによって返さ[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]れる識別子がツリー内で一意であることが保証されます。</span><span class="sxs-lookup"><span data-stu-id="241cd-131">The item has its own unique identifier within this instance of the fragment, and the <xref:System.Windows.Automation.Provider.AutomationInteropProvider.AppendRuntimeId> value ensures that the identifier returned by the method is unique in the [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] tree.</span></span>  
  
 [!code-csharp[UIAFragmentProvider_snip#101](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAFragmentProvider_snip/CSharp/ListItemFragment.cs#101)]
 [!code-vb[UIAFragmentProvider_snip#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAFragmentProvider_snip/VisualBasic/ListItemFragment.vb#101)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6acc6d08-bd67-4e2e-915c-9c1d34eb86fe"><span data-ttu-id="241cd-132">サーバー側 UI オートメーションプロバイダーの実装</span><span class="sxs-lookup"><span data-stu-id="241cd-132">Server-side UI Automation Provider Implementation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Provider.IRawElementProviderFragment Navigate (System.Windows.Automation.Provider.NavigateDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Automation.Provider.IRawElementProviderFragment Navigate(valuetype System.Windows.Automation.Provider.NavigateDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.IRawElementProviderFragment.Navigate(System.Windows.Automation.Provider.NavigateDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function Navigate (direction As NavigateDirection) As IRawElementProviderFragment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::Provider::IRawElementProviderFragment ^ Navigate(System::Windows::Automation::Provider::NavigateDirection direction);" />
      <MemberSignature Language="F#" Value="abstract member Navigate : System.Windows.Automation.Provider.NavigateDirection -&gt; System.Windows.Automation.Provider.IRawElementProviderFragment" Usage="iRawElementProviderFragment.Navigate direction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Provider.IRawElementProviderFragment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Automation.Provider.NavigateDirection" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="241cd-133">移動する方向。</span><span class="sxs-lookup"><span data-stu-id="241cd-133">The direction in which to navigate.</span></span></param>
        <summary><span data-ttu-id="241cd-134">ツリー内で、指定された方向にある [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 要素を取得します。</span><span class="sxs-lookup"><span data-stu-id="241cd-134">Retrieves the [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] element in a specified direction within the tree.</span></span></summary>
        <returns><span data-ttu-id="241cd-135">指定された方向にある要素。その方向に要素が存在しない場合は <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="241cd-135">The element in the specified direction, or <see langword="null" /> if there is no element in that direction</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="241cd-136">この[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]メソッドのサーバーの実装では、 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]要素ツリーの構造を定義します。</span><span class="sxs-lookup"><span data-stu-id="241cd-136">The [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] server's implementations of this method define the structure of the [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] element tree.</span></span>  
  
 <span data-ttu-id="241cd-137">ナビゲーションは、親に向かって上方向に、最初と最後の子まで下方向にサポートする必要があります。また、必要に応じて、次の兄弟と前の兄弟に奪取ます。</span><span class="sxs-lookup"><span data-stu-id="241cd-137">Navigation must be supported upward to the parent, downward to the first and last child, and laterally to the next and previous siblings, as applicable.</span></span>  
  
 <span data-ttu-id="241cd-138">各子ノードには親が1つだけあり、および<xref:System.Windows.Automation.Provider.NavigateDirection.FirstChild> <xref:System.Windows.Automation.Provider.NavigateDirection.LastChild>によって親から到達した兄弟のチェーンに配置する必要があります。</span><span class="sxs-lookup"><span data-stu-id="241cd-138">Each child node has only one parent and must be placed in the chain of siblings reached from the parent by <xref:System.Windows.Automation.Provider.NavigateDirection.FirstChild> and <xref:System.Windows.Automation.Provider.NavigateDirection.LastChild>.</span></span>  
  
 <span data-ttu-id="241cd-139">兄弟間のリレーションシップは、両方向で同一である必要が<xref:System.Windows.Automation.Provider.NavigateDirection.PreviousSibling>あります。 a が b <xref:System.Windows.Automation.Provider.NavigateDirection.NextSibling>の場合、b は a です。</span><span class="sxs-lookup"><span data-stu-id="241cd-139">Relationships among siblings must be identical in both directions: if A is B's <xref:System.Windows.Automation.Provider.NavigateDirection.PreviousSibling>, then B is A's <xref:System.Windows.Automation.Provider.NavigateDirection.NextSibling>.</span></span> <span data-ttu-id="241cd-140">にがあり<xref:System.Windows.Automation.Provider.NavigateDirection.PreviousSibling>ませ<xref:System.Windows.Automation.Provider.NavigateDirection.LastChild>ん。には<xref:System.Windows.Automation.Provider.NavigateDirection.NextSibling>がありません。 <xref:System.Windows.Automation.Provider.NavigateDirection.FirstChild></span><span class="sxs-lookup"><span data-stu-id="241cd-140">A <xref:System.Windows.Automation.Provider.NavigateDirection.FirstChild> has no <xref:System.Windows.Automation.Provider.NavigateDirection.PreviousSibling>, and a <xref:System.Windows.Automation.Provider.NavigateDirection.LastChild> has no <xref:System.Windows.Automation.Provider.NavigateDirection.NextSibling>.</span></span>  
  
 <span data-ttu-id="241cd-141">フラグメントルートは、親または兄弟へのナビゲーションを有効にしません。フラグメントルート間のナビゲーションは、既定のウィンドウプロバイダーによって処理されます。</span><span class="sxs-lookup"><span data-stu-id="241cd-141">Fragment roots do not enable navigation to a parent or siblings; navigation among fragment roots is handled by the default window providers.</span></span> <span data-ttu-id="241cd-142">フラグメント内の要素は、そのフラグメント内の他の要素にのみ移動する必要があります。</span><span class="sxs-lookup"><span data-stu-id="241cd-142">Elements in fragments must navigate only to other elements within that fragment.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="241cd-143">次のコード例は、単一の<xref:System.Windows.Automation.Provider.IRawElementProviderFragment.Navigate%2A>子要素を持つフラグメントルートによるの実装を示しています。</span><span class="sxs-lookup"><span data-stu-id="241cd-143">The following example code shows the implementation of <xref:System.Windows.Automation.Provider.IRawElementProviderFragment.Navigate%2A> by a fragment root that has a single child element.</span></span> <span data-ttu-id="241cd-144">実装する要素はフラグメントルートであるため、親要素または兄弟要素への移動は有効になりません。</span><span class="sxs-lookup"><span data-stu-id="241cd-144">Because the implementing element is a fragment root, it does not enable navigation to a parent element or sibling elements.</span></span>  
  
 [!code-csharp[UIAProvider_snip#105](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAProvider_snip/CSharp/FragmentRoot.cs#105)]
 [!code-vb[UIAProvider_snip#105](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAProvider_snip/VisualBasic/FragmentRoot.vb#105)]  
  
 <span data-ttu-id="241cd-145">次の例は、リストボックス内の1つの項目を表すフラグメントによる実装を示しています。</span><span class="sxs-lookup"><span data-stu-id="241cd-145">The following example shows an implementation by a fragment that represents a single item within a list box.</span></span> <span data-ttu-id="241cd-146">この場合、要素は親と兄弟へのナビゲーションを可能にしますが、子には移動できません。</span><span class="sxs-lookup"><span data-stu-id="241cd-146">In this case, the element enables navigation to its parent and siblings, but not to any children.</span></span>  
  
 [!code-csharp[UIAFragmentProvider_snip#103](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAFragmentProvider_snip/CSharp/ListItemFragment.cs#103)]
 [!code-vb[UIAFragmentProvider_snip#103](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAFragmentProvider_snip/VisualBasic/ListItemFragment.vb#103)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6acc6d08-bd67-4e2e-915c-9c1d34eb86fe"><span data-ttu-id="241cd-147">サーバー側 UI オートメーションプロバイダーの実装</span><span class="sxs-lookup"><span data-stu-id="241cd-147">Server-side UI Automation Provider Implementation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SetFocus">
      <MemberSignature Language="C#" Value="public void SetFocus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetFocus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.IRawElementProviderFragment.SetFocus" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFocus ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFocus();" />
      <MemberSignature Language="F#" Value="abstract member SetFocus : unit -&gt; unit" Usage="iRawElementProviderFragment.SetFocus " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="241cd-148">この要素にフォーカスを設定します。</span><span class="sxs-lookup"><span data-stu-id="241cd-148">Sets the focus to this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="241cd-149">フレームワーク[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]は、このメソッドを呼び出す前に、このフラグメントをホストするインターフェイスの一部に既にフォーカスがあることを確認します。</span><span class="sxs-lookup"><span data-stu-id="241cd-149">The [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] framework will ensure that the part of the interface that hosts this fragment is already focused before calling this method.</span></span> <span data-ttu-id="241cd-150">実装では、内部フォーカス状態のみを更新する必要があります。たとえば、リスト項目を再描画して、フォーカスがあることを示すことができます。</span><span class="sxs-lookup"><span data-stu-id="241cd-150">Your implementation should update only its internal focus state; for example, by repainting a list item to show that it has the focus.</span></span> <span data-ttu-id="241cd-151">親ウィンドウにフォーカスし<xref:System.Windows.Automation.Provider.ProviderOptions.ProviderOwnsSetFocus> <xref:System.Windows.Automation.Provider.ProviderOptions> ない場合は、フラグメントのルートに対してのオプションを[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]設定します。</span><span class="sxs-lookup"><span data-stu-id="241cd-151">If you prefer that [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] not focus the parent window, set the <xref:System.Windows.Automation.Provider.ProviderOptions.ProviderOwnsSetFocus> option in <xref:System.Windows.Automation.Provider.ProviderOptions> for the fragment root.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6acc6d08-bd67-4e2e-915c-9c1d34eb86fe"><span data-ttu-id="241cd-152">サーバー側 UI オートメーションプロバイダーの実装</span><span class="sxs-lookup"><span data-stu-id="241cd-152">Server-side UI Automation Provider Implementation</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
