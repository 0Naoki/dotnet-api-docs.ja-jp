<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IInvokeProvider.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac55dc9eaaa0269cf3395508ac3c7f6f813965eb07d.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5dc9eaaa0269cf3395508ac3c7f6f813965eb07d</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Automation.Provider.IInvokeProvider">
          <source>Exposes methods and properties to support UI Automation client access to controls that initiate or perform a single, unambiguous action and do not maintain state when activated.</source>
          <target state="translated">明確な 1 つのアクションを開始または実行し、アクティブになったときの状態を保持しないコントロールへの UI オートメーション クライアント アクセスをサポートするメソッドとプロパティを公開します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Automation.Provider.IInvokeProvider">
          <source>Implemented on a UI Automation provider that must support the <ph id="ph1">&lt;xref:System.Windows.Automation.InvokePattern&gt;</ph> control pattern.</source>
          <target state="translated">サポートする UI オートメーション プロバイダーに実装される、<ph id="ph1">&lt;xref:System.Windows.Automation.InvokePattern&gt;</ph>コントロール パターン。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Automation.Provider.IInvokeProvider">
          <source>Controls implement <ph id="ph1">&lt;xref:System.Windows.Automation.Provider.IInvokeProvider&gt;</ph> if the same behavior is not exposed through another control pattern provider.</source>
          <target state="translated">別のコントロール パターン プロバイダーを通じて同じ動作が公開されていない場合、コントロールは <ph id="ph1">&lt;xref:System.Windows.Automation.Provider.IInvokeProvider&gt;</ph> を実装します。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Automation.Provider.IInvokeProvider">
          <source>For example, if the <ph id="ph1">&lt;xref:System.Windows.Automation.InvokePattern.Invoke%2A&gt;</ph> method on a control performs the same action as the <ph id="ph2">&lt;xref:System.Windows.Automation.ExpandCollapsePattern.Expand%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Automation.ExpandCollapsePattern.Collapse%2A&gt;</ph> method, the control should not implement <ph id="ph4">&lt;xref:System.Windows.Automation.Provider.IInvokeProvider&gt;</ph>.</source>
          <target state="translated">たとえば、コントロールの <ph id="ph1">&lt;xref:System.Windows.Automation.InvokePattern.Invoke%2A&gt;</ph> メソッドが <ph id="ph2">&lt;xref:System.Windows.Automation.ExpandCollapsePattern.Expand%2A&gt;</ph> メソッドまたは <ph id="ph3">&lt;xref:System.Windows.Automation.ExpandCollapsePattern.Collapse%2A&gt;</ph> メソッドと同じ処理を実行する場合、コントロールに <ph id="ph4">&lt;xref:System.Windows.Automation.Provider.IInvokeProvider&gt;</ph>を実装しないようにします。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.IInvokeProvider.Invoke">
          <source>Sends a request to activate a control and initiate its single, unambiguous action.</source>
          <target state="translated">要求を送信してコントロールをアクティブ化し、その 1 つの明確なアクションを開始します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.IInvokeProvider.Invoke">
          <source><ph id="ph1">&lt;xref:System.Windows.Automation.Provider.IInvokeProvider.Invoke%2A&gt;</ph> is an asynchronous call and must return immediately without blocking.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Automation.Provider.IInvokeProvider.Invoke%2A&gt;</ph> は非同期呼び出しであるため、クライアントをブロックせずに即座に戻る必要があります。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.IInvokeProvider.Invoke">
          <source>This behavior is particularly critical for controls that, directly or indirectly, launch a modal dialog when invoked.</source>
          <target state="translated">呼び出されたときにモーダル ダイアログを直接的または間接的に表示するコントロールでは、この動作は特に重要です。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.IInvokeProvider.Invoke">
          <source>Any UI Automation client that instigated the event will remain blocked until the modal dialog is closed.</source>
          <target state="translated">イベントを発生させたすべての UI オートメーション クライアントは、モーダル ダイアログが閉じられるまで、ブロックされたままになります。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.IInvokeProvider.Invoke">
          <source><ph id="ph1">&lt;xref:System.Windows.Automation.Provider.IInvokeProvider.Invoke%2A&gt;</ph> raises the <ph id="ph2">&lt;xref:System.Windows.Automation.InvokePatternIdentifiers.InvokedEvent&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Automation.Provider.IInvokeProvider.Invoke%2A&gt;</ph> は、<ph id="ph2">&lt;xref:System.Windows.Automation.InvokePatternIdentifiers.InvokedEvent&gt;</ph> イベントを発生させます。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.IInvokeProvider.Invoke">
          <source>If possible, the event should be raised after the control has completed its associated action.</source>
          <target state="translated">可能であれば、コントロールに関連付けられたアクションが完了した後は、イベントを発生させる必要があります。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.IInvokeProvider.Invoke">
          <source><ph id="ph1">&lt;xref:System.Windows.Automation.InvokePatternIdentifiers.InvokedEvent&gt;</ph> should be raised before servicing the <ph id="ph2">&lt;xref:System.Windows.Automation.Provider.IInvokeProvider.Invoke%2A&gt;</ph> request in the following scenarios:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Automation.InvokePatternIdentifiers.InvokedEvent&gt;</ph> 処理する前に発生させるか、<ph id="ph2">&lt;xref:System.Windows.Automation.Provider.IInvokeProvider.Invoke%2A&gt;</ph>次のシナリオで要求。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.IInvokeProvider.Invoke">
          <source>It is not possible or practical to wait until the action is complete.</source>
          <target state="translated">処理が完了するまで待機することが不可能または非現実的である。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.IInvokeProvider.Invoke">
          <source>The action requires user interaction.</source>
          <target state="translated">処理にユーザー操作が必要になる。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.IInvokeProvider.Invoke">
          <source>The action is time-consuming and will cause the calling client to block for a significant length of time.</source>
          <target state="translated">アクションは、時間がかかるうえ、呼び出し元のクライアントをブロック時間の大幅な長さになります。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.IInvokeProvider.Invoke">
          <source>The following example implements the <ph id="ph1">&lt;xref:System.Windows.Automation.Provider.IInvokeProvider.Invoke%2A&gt;</ph> method on the MouseDown event handler of a control.</source>
          <target state="translated">次の例では、実装、<ph id="ph1">&lt;xref:System.Windows.Automation.Provider.IInvokeProvider.Invoke%2A&gt;</ph>コントロールの MouseDown イベント ハンドラー メソッドにします。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.IInvokeProvider.Invoke">
          <source>Assume that <ph id="ph1">`providerControl`</ph> is a member variable that was initialized when the class was constructed.</source>
          <target state="translated">あると想定<ph id="ph1">`providerControl`</ph>メンバー変数クラスの構築時に初期化されたを指定します。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.IInvokeProvider.Invoke">
          <source>If the control is not enabled.</source>
          <target state="translated">コントロールが有効ではない。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>