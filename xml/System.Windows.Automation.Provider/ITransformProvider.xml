<Type Name="ITransformProvider" FullName="System.Windows.Automation.Provider.ITransformProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="56daef985679416cab49ebfa89493628182c27c2" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30617136" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ITransformProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITransformProvider" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.Provider.ITransformProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface ITransformProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class ITransformProvider" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationProvider</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("6829ddc4-4f91-4ffa-b86f-bd3e2987cb4c")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="08756-101">2 次元空間内で移動、サイズ変更、または回転できるコントロールへの UI オートメーション クライアントのアクセスをサポートするメソッドとプロパティを公開します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="08756-101">Exposes methods and properties to support UI Automation client access to controls that can be moved, resized, or rotated within a two-dimensional space.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="08756-102">サポートする UI オートメーション プロバイダーに実装される、<xref:System.Windows.Automation.TransformPattern>コントロール パターン。</span><span class="sxs-lookup"><span data-stu-id="08756-102">Implemented on a UI Automation provider that must support the <xref:System.Windows.Automation.TransformPattern> control pattern.</span></span>  
  
 <span data-ttu-id="08756-103">このコントロール パターンのサポートは、デスクトップ上のオブジェクトに制限されません。</span><span class="sxs-lookup"><span data-stu-id="08756-103">Support for this control pattern is not limited to objects on the desktop.</span></span> <span data-ttu-id="08756-104">子の移動、サイズ変更、またはコンテナーの境界内で自由に回転でく限り、コンテナー オブジェクトの子にこのコントロール パターンを実装も必要があります。</span><span class="sxs-lookup"><span data-stu-id="08756-104">This control pattern must also be implemented by the children of a container object as long as the children can be moved, resized, or rotated freely within the boundaries of the container.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Automation.TransformPattern" />
  </Docs>
  <Members>
    <Member MemberName="CanMove">
      <MemberSignature Language="C#" Value="public bool CanMove { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanMove" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.ITransformProvider.CanMove" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanMove As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanMove { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="08756-105">コントロールが移動可能かどうかを指定する値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="08756-105">Gets a value that specifies whether the control can be moved.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="08756-106">要素を移動できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="08756-106">
              <see langword="true" /> if the element can be moved; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="08756-107">次の例は、移動できるコントロールに対して、このメソッドの実装を示しています。</span><span class="sxs-lookup"><span data-stu-id="08756-107">The following example shows an implementation of this method for a control that can be moved.</span></span>  
  
 [!code-csharp[UIAITransformProvider_snip#CanMove](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAITransformProvider_snip/CSharp/TransformFragment.cs#canmove)]
 [!code-vb[UIAITransformProvider_snip#CanMove](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAITransformProvider_snip/visualbasic/transformfragment.vb#canmove)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanResize">
      <MemberSignature Language="C#" Value="public bool CanResize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanResize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.ITransformProvider.CanResize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanResize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanResize { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="08756-108">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]要素のサイズが変更可能かどうかを指定する値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="08756-108">Gets a value that specifies whether the [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] element can be resized.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="08756-109">要素のサイズを変更できる場合は <see langword="true" />。変更できない場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="08756-109">
              <see langword="true" /> if the element can be resized; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="08756-110">次の例は、コントロール サイズを変更できるは、このメソッドの実装を示しています。</span><span class="sxs-lookup"><span data-stu-id="08756-110">The following example shows an implementation of this method for a control that can be resized.</span></span>  
  
 [!code-csharp[UIAITransformProvider_snip#CanResize](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAITransformProvider_snip/CSharp/TransformFragment.cs#canresize)]
 [!code-vb[UIAITransformProvider_snip#CanResize](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAITransformProvider_snip/visualbasic/transformfragment.vb#canresize)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRotate">
      <MemberSignature Language="C#" Value="public bool CanRotate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRotate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.ITransformProvider.CanRotate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanRotate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanRotate { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="08756-111">コントロールが回転可能かどうかを指定する値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="08756-111">Gets a value that specifies whether the control can be rotated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="08756-112">要素を回転できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="08756-112">
              <see langword="true" /> if the element can be rotated; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="08756-113">次の例では、回転することはできません、コントロールに対して、このメソッドの実装を示します。</span><span class="sxs-lookup"><span data-stu-id="08756-113">The following example shows an implementation of this method for a control that cannot be rotated.</span></span>  
  
 [!code-csharp[UIAITransformProvider_snip#CanRotate](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAITransformProvider_snip/CSharp/TransformFragment.cs#canrotate)]
 [!code-vb[UIAITransformProvider_snip#CanRotate](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAITransformProvider_snip/visualbasic/transformfragment.vb#canrotate)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Move">
      <MemberSignature Language="C#" Value="public void Move (double x, double y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Move(float64 x, float64 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITransformProvider.Move(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Move (x As Double, y As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Move(double x, double y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="08756-114">コントロールの左側の絶対画面座標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="08756-114">Absolute screen coordinates of the left side of the control.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="08756-115">コントロールの上部の絶対画面座標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="08756-115">Absolute screen coordinates of the top of the control.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="08756-116">コントロールを移動します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="08756-116">Moves the control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="08756-117">オブジェクトは、移動、サイズ変更、またはになるように後の画面位置が完全にキーボードまたはマウスへのアクセスし、そのコンテナーの座標外を回転することはできません。</span><span class="sxs-lookup"><span data-stu-id="08756-117">An object cannot be moved, resized, or rotated such that its resulting screen location would be completely outside the coordinates of its container and inaccessible to keyboard or mouse.</span></span> <span data-ttu-id="08756-118">たとえば、トップレベルのウィンドウが完全に画面外に移動や、子オブジェクトは、コンテナーのビューポートの境界の外移動されます。</span><span class="sxs-lookup"><span data-stu-id="08756-118">For example, when a top-level window is moved completely off-screen or a child object is moved outside the boundaries of the container's viewport.</span></span> <span data-ttu-id="08756-119">このような場合、オブジェクトはコンテナーの境界内にオーバーライド上または左座標を使用して、できるだけ要求された画面座標近くに配置されます。</span><span class="sxs-lookup"><span data-stu-id="08756-119">In these cases the object is placed as close to the requested screen coordinates as possible with the top or left coordinates overridden to be within the container boundaries.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="08756-120">次の例は、1 つの可能なカスタム コントロールを移動できるは、このメソッドの実装を示しています。</span><span class="sxs-lookup"><span data-stu-id="08756-120">The following example shows one possible implementation of this method for a custom control that can be moved.</span></span>  
  
 [!code-csharp[UIAITransformProvider_snip#Move](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAITransformProvider_snip/CSharp/TransformFragment.cs#move)]
 [!code-vb[UIAITransformProvider_snip#Move](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAITransformProvider_snip/visualbasic/transformfragment.vb#move)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="08756-121">
            <see cref="P:System.Windows.Automation.Provider.ITransformProvider.CanMove" /> プロパティが false の場合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="08756-121">If the <see cref="P:System.Windows.Automation.Provider.ITransformProvider.CanMove" /> property is false.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Resize">
      <MemberSignature Language="C#" Value="public void Resize (double width, double height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Resize(float64 width, float64 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITransformProvider.Resize(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Resize (width As Double, height As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resize(double width, double height);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Double" />
        <Parameter Name="height" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="width">
          <span data-ttu-id="08756-122">ウィンドウの新しい幅 (ピクセル単位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="08756-122">The new width of the window, in pixels.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="08756-123">ウィンドウの新しい高さ (ピクセル単位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="08756-123">The new height of the window, in pixels.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="08756-124">コントロールのサイズを変更します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="08756-124">Resizes the control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="08756-125">コントロールで呼び出された場合は、分割ウィンドウをサポートする、このメソッドは、その他の連続したウィンドウのサイズ変更の副作用を持つことができます。</span><span class="sxs-lookup"><span data-stu-id="08756-125">When called on a control that supports split panes, this method can have the side effect of resizing other contiguous panes.</span></span>  
  
 <span data-ttu-id="08756-126">オブジェクトは、移動、サイズ変更、またはになるように後の画面位置が完全にキーボードまたはマウスへのアクセスし、そのコンテナーの座標外を回転することはできません。</span><span class="sxs-lookup"><span data-stu-id="08756-126">An object cannot be moved, resized, or rotated such that its resulting screen location would be completely outside the coordinates of its container and inaccessible to keyboard or mouse.</span></span> <span data-ttu-id="08756-127">たとえば、トップレベルのウィンドウが完全に画面外に移動や、子オブジェクトは、コンテナーのビューポートの境界の外移動されます。</span><span class="sxs-lookup"><span data-stu-id="08756-127">For example, when a top-level window is moved completely off-screen or a child object is moved outside the boundaries of the container's viewport.</span></span> <span data-ttu-id="08756-128">このような場合、オブジェクトはコンテナーの境界内にオーバーライド上または左座標を使用して、できるだけ要求された画面座標近くに配置されます。</span><span class="sxs-lookup"><span data-stu-id="08756-128">In these cases the object is placed as close to the requested screen coordinates as possible with the top or left coordinates overridden to be within the container boundaries.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="08756-129">次の例は、1 つの可能なサイズを変更できるカスタム コントロールに対して、このメソッドの実装を示しています。</span><span class="sxs-lookup"><span data-stu-id="08756-129">The following example shows one possible implementation of this method for a custom control that can be resized.</span></span>  
  
 [!code-csharp[UIAITransformProvider_snip#Resize](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAITransformProvider_snip/CSharp/TransformFragment.cs#resize)]
 [!code-vb[UIAITransformProvider_snip#Resize](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAITransformProvider_snip/visualbasic/transformfragment.vb#resize)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="08756-130">
            <see cref="P:System.Windows.Automation.Provider.ITransformProvider.CanResize" /> プロパティが false の場合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="08756-130">If the <see cref="P:System.Windows.Automation.Provider.ITransformProvider.CanResize" /> property is false.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Rotate">
      <MemberSignature Language="C#" Value="public void Rotate (double degrees);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Rotate(float64 degrees) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITransformProvider.Rotate(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Rotate (degrees As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Rotate(double degrees);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="degrees" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="degrees">
          <span data-ttu-id="08756-131">コントロールを回転する角度の数値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="08756-131">The number of degrees to rotate the control.</span>
          </span>
          <span data-ttu-id="08756-132">正の値は時計回りの回転、負の値は反時計回りの回転を表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="08756-132">A positive number rotates clockwise; a negative number rotates counterclockwise.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="08756-133">コントロールを回転します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="08756-133">Rotates the control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="08756-134">オブジェクトは、移動、サイズを変更またはになるように後の画面位置が完全にキーボードまたはマウスへのアクセスし、そのコンテナーの座標外を回転することはできません。</span><span class="sxs-lookup"><span data-stu-id="08756-134">An object cannot be moved, resized or rotated such that its resulting screen location would be completely outside the coordinates of its container and inaccessible to keyboard or mouse.</span></span> <span data-ttu-id="08756-135">たとえば、トップレベルのウィンドウが完全に画面外に移動や、子オブジェクトは、コンテナーのビューポートの境界の外移動されます。</span><span class="sxs-lookup"><span data-stu-id="08756-135">For example, when a top-level window is moved completely off-screen or a child object is moved outside the boundaries of the container's viewport.</span></span> <span data-ttu-id="08756-136">このような場合、オブジェクトはコンテナーの境界内にオーバーライド上または左座標を使用して、できるだけ要求された画面座標近くに配置されます。</span><span class="sxs-lookup"><span data-stu-id="08756-136">In these cases the object is placed as close to the requested screen coordinates as possible with the top or left coordinates overridden to be within the container boundaries.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="08756-137">次の例は、1 つの可能なカスタム コントロールを回転できないのは、このメソッドの実装を示しています。</span><span class="sxs-lookup"><span data-stu-id="08756-137">The following example shows one possible implementation of this method for a custom control that cannot be rotated.</span></span>  
  
 [!code-csharp[UIAITransformProvider_snip#Rotate](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAITransformProvider_snip/CSharp/TransformFragment.cs#rotate)]
 [!code-vb[UIAITransformProvider_snip#Rotate](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAITransformProvider_snip/visualbasic/transformfragment.vb#rotate)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="08756-138">
            <see cref="P:System.Windows.Automation.Provider.ITransformProvider.CanRotate" /> プロパティが false の場合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="08756-138">If the <see cref="P:System.Windows.Automation.Provider.ITransformProvider.CanRotate" /> property is false.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>