<Type Name="IRawElementProviderHwndOverride" FullName="System.Windows.Automation.Provider.IRawElementProviderHwndOverride">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="54899e69937c4766568f0a29cd4a9a234f7a62bc" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IRawElementProviderHwndOverride : System.Windows.Automation.Provider.IRawElementProviderSimple" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRawElementProviderHwndOverride implements class System.Windows.Automation.Provider.IRawElementProviderSimple" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.Provider.IRawElementProviderHwndOverride" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRawElementProviderHwndOverride&#xA;Implements IRawElementProviderSimple" />
  <TypeSignature Language="C++ CLI" Value="public interface class IRawElementProviderHwndOverride : System::Windows::Automation::Provider::IRawElementProviderSimple" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationProvider</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Automation.Provider.IRawElementProviderSimple</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("1d5df27c-8947-4425-b8d9-79787bb460b8")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="64ef2-101">フラグメントの UI オートメーション ツリー内にあるウィンドウ ベースの要素を再配置できるようにするメソッドを公開します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="64ef2-101">Exposes a method that enables repositioning of window-based elements within the  UI Automation tree of the fragment.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetOverrideProviderForHwnd">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Provider.IRawElementProviderSimple GetOverrideProviderForHwnd (IntPtr hwnd);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Automation.Provider.IRawElementProviderSimple GetOverrideProviderForHwnd(native int hwnd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.IRawElementProviderHwndOverride.GetOverrideProviderForHwnd(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOverrideProviderForHwnd (hwnd As IntPtr) As IRawElementProviderSimple" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::Provider::IRawElementProviderSimple ^ GetOverrideProviderForHwnd(IntPtr hwnd);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Provider.IRawElementProviderSimple</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hwnd" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hwnd">
          <span data-ttu-id="64ef2-102">要素のウィンドウ ハンドル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="64ef2-102">The window handle of the element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64ef2-103">指定した要素の UI オートメーション プロバイダーを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="64ef2-103">Retrieves a UI automation provider for the specified element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="64ef2-104">指定した要素のプロバイダー、または要素の既定のプロバイダーがオーバーライドされない場合は null 参照 ([!INCLUDE[TLA#tla_visualbnet](~/includes/tlasharptla-visualbnet-md.md)] では <see langword="Nothing" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="64ef2-104">The provider for the specified element, or a null reference (<see langword="Nothing" /> in [!INCLUDE[TLA#tla_visualbnet](~/includes/tlasharptla-visualbnet-md.md)]) if the element's default provider is not being overridden.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64ef2-105">このメソッドはフラグメント ルート内で、Hwnd のそれらの子要素が論理的に配置されない場合、ウィンドウ ベースの子要素が含まれているフラグメント内のクライアント側 UI オートメーション プロバイダーによって実装、[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]ツリー。</span><span class="sxs-lookup"><span data-stu-id="64ef2-105">This method is implemented by client-side UI Automation providers for fragment roots in fragments that contain window-based child elements, when the HWNDs of those child elements are not logically positioned within the [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] tree.</span></span> <span data-ttu-id="64ef2-106">詳細については、非 WPF プロバイダー親の変更と非 WPF プロバイダーの位置を変更で参照してください、[サーバー側 UI オートメーション プロバイダーの実装](~/docs/framework/ui-automation/server-side-ui-automation-provider-implementation.md)トピックです。</span><span class="sxs-lookup"><span data-stu-id="64ef2-106">For more information, see Non-WPF Provider Reparenting and Non-WPF Provider Repositioning in the [Server-Side UI Automation Provider Implementation](~/docs/framework/ui-automation/server-side-ui-automation-provider-implementation.md) topic.</span></span>  
  
 <span data-ttu-id="64ef2-107">返されるプロバイダーは、フラグメント ツリーの一部である必要があります。</span><span class="sxs-lookup"><span data-stu-id="64ef2-107">The returned provider must be part of the fragment tree.</span></span> <span data-ttu-id="64ef2-108">追加のプロパティを指定することも、指定されたコンポーネントのプロパティを上書きします。</span><span class="sxs-lookup"><span data-stu-id="64ef2-108">It can supply additional properties or override properties of the specified component.</span></span>  
  
 <span data-ttu-id="64ef2-109">返されるプロバイダーを実装する場合<xref:System.Windows.Automation.Provider.IRawElementProviderFragment>プロバイダーがフラグメントのツリーの一部であるし、フラグメントのルートから移動して到達可能でする必要があります。</span><span class="sxs-lookup"><span data-stu-id="64ef2-109">If the returned provider implements <xref:System.Windows.Automation.Provider.IRawElementProviderFragment>, the provider should be part of the fragment's tree and be reachable by navigating from the fragment's root.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Automation.Provider.IRawElementProviderSimple.HostRawElementProvider" />
      </Docs>
    </Member>
  </Members>
</Type>