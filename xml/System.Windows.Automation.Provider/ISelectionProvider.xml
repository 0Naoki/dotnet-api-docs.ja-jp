<Type Name="ISelectionProvider" FullName="System.Windows.Automation.Provider.ISelectionProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="49bab1976ce79ef3c60cb351d1a0fc6a34cdd569" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48616896" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ISelectionProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ISelectionProvider" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.Provider.ISelectionProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface ISelectionProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class ISelectionProvider" />
  <TypeSignature Language="F#" Value="type ISelectionProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationProvider</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.Guid("fb8b03af-3bdf-48d4-bd36-1a65793be168")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.InterfaceType</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="cc183-101">個々の選択可能な子項目のコレクションのコンテナーとして機能するコントロールへの UI オートメーション クライアントのアクセスをサポートするメソッドとプロパティを公開します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="cc183-101">Exposes methods and properties to support UI Automation client access to controls that act as containers for a collection of individual, selectable child items.</span>
      </span>
      <span data-ttu-id="cc183-102">このコントロールの子は、<see cref="T:System.Windows.Automation.Provider.ISelectionItemProvider" /> を実装する必要があります。</span>
      <span class="sxs-lookup">
        <span data-stu-id="cc183-102">The children of this control must implement <see cref="T:System.Windows.Automation.Provider.ISelectionItemProvider" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc183-103">サポートが必要な UI オートメーション プロバイダーの実装、<xref:System.Windows.Automation.SelectionPattern>コントロール パターン。</span><span class="sxs-lookup"><span data-stu-id="cc183-103">Implemented on a UI Automation provider that must support the <xref:System.Windows.Automation.SelectionPattern> control pattern.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Automation.SelectionPattern" />
    <related type="Article" href="~/docs/framework/ui-automation/ui-automation-control-patterns-overview.md">
      <span data-ttu-id="cc183-104">UI オートメーション コントロール パターンの概要</span>
      <span class="sxs-lookup">
        <span data-stu-id="cc183-104">UI Automation Control Patterns Overview</span>
      </span>
    </related>
    <related type="Article" href="http://msdn.microsoft.com/library/6acc6d08-bd67-4e2e-915c-9c1d34eb86fe">
      <span data-ttu-id="cc183-105">サーバー側 UI オートメーション プロバイダーの実装</span>
      <span class="sxs-lookup">
        <span data-stu-id="cc183-105">Server-side UI Automation Provider Implementation</span>
      </span>
    </related>
    <related type="Article" href="http://msdn.microsoft.com/library/3584c0a1-9cd0-4968-8b63-b06390890ef6">
      <span data-ttu-id="cc183-106">クライアント側 UI オートメーション プロバイダーの実装</span>
      <span class="sxs-lookup">
        <span data-stu-id="cc183-106">Client-side UI Automation Provider Implementation</span>
      </span>
    </related>
    <related type="Article" href="http://msdn.microsoft.com/library/0d635c35-ffa8-4dc8-bbc9-12fcd5445776">
      <span data-ttu-id="cc183-107">UI オートメーション プロバイダーでのコントロール パターンのサポート</span>
      <span class="sxs-lookup">
        <span data-stu-id="cc183-107">Support Control Patterns in a UI Automation Provider</span>
      </span>
    </related>
    <related type="Article" href="http://msdn.microsoft.com/library/449c3068-a5d6-4f66-84c6-1bcc7dd4d209">
      <span data-ttu-id="cc183-108">UI オートメーション Selection コントロール パターンの実装</span>
      <span class="sxs-lookup">
        <span data-stu-id="cc183-108">Implementing the UI Automation Selection Control Pattern</span>
      </span>
    </related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms771502(v=vs.90)">
      <span data-ttu-id="cc183-109">フラグメント プロバイダーのサンプル</span>
      <span class="sxs-lookup">
        <span data-stu-id="cc183-109">Fragment Provider Sample</span>
      </span>
    </related>
  </Docs>
  <Members>
    <Member MemberName="CanSelectMultiple">
      <MemberSignature Language="C#" Value="public bool CanSelectMultiple { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSelectMultiple" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.ISelectionProvider.CanSelectMultiple" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanSelectMultiple As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanSelectMultiple { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSelectMultiple : bool" Usage="System.Windows.Automation.Provider.ISelectionProvider.CanSelectMultiple" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cc183-110">UI オートメーション プロバイダーが複数の子要素の同時選択を許可するかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc183-110">Gets a value that specifies whether the UI Automation provider allows more than one child element to be selected concurrently.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cc183-111">複数を選択できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc183-111">
              <see langword="true" /> if multiple selection is allowed; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc183-112">このプロパティは、動的な可能性があります。</span><span class="sxs-lookup"><span data-stu-id="cc183-112">This property may be dynamic.</span></span> <span data-ttu-id="cc183-113">たとえば、まれなケースでコントロールが初期化では選択が、その後にするオプションの 1 つのみを許可する複数の項目を許可できます。</span><span class="sxs-lookup"><span data-stu-id="cc183-113">For example, in rare cases a control might allow multiple items to be selected on initialization but subsequently allow only single selections to be made.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc183-114">次の例では、一度に 1 つ以上の項目の選択を許可しない一覧については、このメソッドの実装を示します。</span><span class="sxs-lookup"><span data-stu-id="cc183-114">The following example shows an implementation of this method for a list that does not allow selection of more than one item at a time.</span></span>  
  
 [!code-csharp[UIAISelectionProvider_ISelectionItemProvider_snip#CanSelectMultiple](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAISelectionProvider_ISelectionItemProvider_snip/CSharp/ListFragment.cs#canselectmultiple)]
 [!code-vb[UIAISelectionProvider_ISelectionItemProvider_snip#CanSelectMultiple](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAISelectionProvider_ISelectionItemProvider_snip/visualbasic/listfragment.vb#canselectmultiple)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/449c3068-a5d6-4f66-84c6-1bcc7dd4d209">
          <span data-ttu-id="cc183-115">UI オートメーション Selection コントロール パターンの実装</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc183-115">Implementing the UI Automation Selection Control Pattern</span>
          </span>
        </related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms771502(v=vs.90)">
          <span data-ttu-id="cc183-116">フラグメント プロバイダーのサンプル</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc183-116">Fragment Provider Sample</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="GetSelection">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Provider.IRawElementProviderSimple[] GetSelection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Automation.Provider.IRawElementProviderSimple[] GetSelection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ISelectionProvider.GetSelection" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSelection () As IRawElementProviderSimple()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Windows::Automation::Provider::IRawElementProviderSimple ^&gt; ^ GetSelection();" />
      <MemberSignature Language="F#" Value="abstract member GetSelection : unit -&gt; System.Windows.Automation.Provider.IRawElementProviderSimple[]" Usage="iSelectionProvider.GetSelection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Provider.IRawElementProviderSimple[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cc183-117">選択されている各子要素の UI オートメーション プロバイダーを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc183-117">Retrieves a UI Automation provider for each child element that is selected.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cc183-118">UI オートメーション プロバイダーのコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc183-118">A collection of UI Automation providers.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc183-119">プロバイダーは、値を指定しない場合、UIAutoCore.dll によって既定の空の配列が返されます。</span><span class="sxs-lookup"><span data-stu-id="cc183-119">A default empty array is returned by UIAutoCore.dll when the provider doesn't supply a value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc183-120">次の例では、1 つ選択のみをサポートするリスト ボックスのこのメソッドの 1 つの考えられる実装を示します。</span><span class="sxs-lookup"><span data-stu-id="cc183-120">The following example shows one possible implementation of this method for a list box that supports only single selection.</span></span>  
  
 [!code-csharp[UIAISelectionProvider_ISelectionItemProvider_snip#GetSelection](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAISelectionProvider_ISelectionItemProvider_snip/CSharp/ListFragment.cs#getselection)]
 [!code-vb[UIAISelectionProvider_ISelectionItemProvider_snip#GetSelection](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAISelectionProvider_ISelectionItemProvider_snip/visualbasic/listfragment.vb#getselection)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/449c3068-a5d6-4f66-84c6-1bcc7dd4d209">
          <span data-ttu-id="cc183-121">UI オートメーション Selection コントロール パターンの実装</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc183-121">Implementing the UI Automation Selection Control Pattern</span>
          </span>
        </related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms771502(v=vs.90)">
          <span data-ttu-id="cc183-122">フラグメント プロバイダーのサンプル</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc183-122">Fragment Provider Sample</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="IsSelectionRequired">
      <MemberSignature Language="C#" Value="public bool IsSelectionRequired { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSelectionRequired" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.ISelectionProvider.IsSelectionRequired" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSelectionRequired As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSelectionRequired { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSelectionRequired : bool" Usage="System.Windows.Automation.Provider.ISelectionProvider.IsSelectionRequired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cc183-123">UI オートメーション プロバイダーが少なくとも 1 つの子要素の選択を必要とするかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc183-123">Gets a value that specifies whether the UI Automation provider requires at least one child element to be selected.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cc183-124">選択が必要な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc183-124">
              <see langword="true" /> if selection is required; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc183-125">このプロパティを動的にすることができます。</span><span class="sxs-lookup"><span data-stu-id="cc183-125">This property can be dynamic.</span></span> <span data-ttu-id="cc183-126">たとえば、コントロールの初期状態がない、つまり既定で選択された項目<xref:System.Windows.Automation.Provider.ISelectionProvider.IsSelectionRequired%2A>は`false`します。</span><span class="sxs-lookup"><span data-stu-id="cc183-126">For example, the initial state of a control might not have any items selected by default, meaning that <xref:System.Windows.Automation.Provider.ISelectionProvider.IsSelectionRequired%2A> is `false`.</span></span> <span data-ttu-id="cc183-127">しかし、項目が 1 つ選択されると、このコントロールは、項目が常に 1 つ以上選択された状態を保持する必要があります。</span><span class="sxs-lookup"><span data-stu-id="cc183-127">However, after an item is selected, the control must always have at least one item selected.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc183-128">次の例では、常に選択する項目が必要な一覧については、このメソッドの実装を示します。</span><span class="sxs-lookup"><span data-stu-id="cc183-128">The following example shows an implementation of this method for a list that requires an item to be selected at all times.</span></span>  
  
 [!code-csharp[UIAISelectionProvider_ISelectionItemProvider_snip#IsSelectionRequired](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAISelectionProvider_ISelectionItemProvider_snip/CSharp/ListFragment.cs#isselectionrequired)]
 [!code-vb[UIAISelectionProvider_ISelectionItemProvider_snip#IsSelectionRequired](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAISelectionProvider_ISelectionItemProvider_snip/visualbasic/listfragment.vb#isselectionrequired)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/449c3068-a5d6-4f66-84c6-1bcc7dd4d209">
          <span data-ttu-id="cc183-129">UI オートメーション Selection コントロール パターンの実装</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc183-129">Implementing the UI Automation Selection Control Pattern</span>
          </span>
        </related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms771502(v=vs.90)">
          <span data-ttu-id="cc183-130">フラグメント プロバイダーのサンプル</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc183-130">Fragment Provider Sample</span>
          </span>
        </related>
      </Docs>
    </Member>
  </Members>
</Type>