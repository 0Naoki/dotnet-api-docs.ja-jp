<Type Name="AutomationInteropProvider" FullName="System.Windows.Automation.Provider.AutomationInteropProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="71f31a1351f3b2586204b04f19d9cc80e5af3e01" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30618276" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class AutomationInteropProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit AutomationInteropProvider extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.Provider.AutomationInteropProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class AutomationInteropProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class AutomationInteropProvider abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationProvider</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="cd1c2-101">UI オートメーション プロバイダーと UI オートメーション クライアント アプリケーション間の通信をサポートします。</span>
      <span class="sxs-lookup">
        <span data-stu-id="cd1c2-101">Provides support for communication between UI Automation providers and UI Automation client applications.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AppendRuntimeId">
      <MemberSignature Language="C#" Value="public const int AppendRuntimeId = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 AppendRuntimeId = (3)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.Provider.AutomationInteropProvider.AppendRuntimeId" />
      <MemberSignature Language="VB.NET" Value="Public Const AppendRuntimeId As Integer  = 3" />
      <MemberSignature Language="C++ CLI" Value="public: int AppendRuntimeId = 3;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="cd1c2-102">ID が部分的なものであり、基本プロバイダーから提供される ID に追加する必要があることを示す値を格納します。この値は、UI Automation プロバイダーから <see cref="M:System.Windows.Automation.Provider.IRawElementProviderFragment.GetRuntimeId" /> に渡される配列の最初の要素として返されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd1c2-102">Contains a value that, when returned as the first element of the array passed by the UI Automation provider to <see cref="M:System.Windows.Automation.Provider.IRawElementProviderFragment.GetRuntimeId" />, indicates that the ID is partial and should be appended to the ID provided by the base provider.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd1c2-103">このフィールドの実装で用い<xref:System.Windows.Automation.Provider.IRawElementProviderFragment.GetRuntimeId%2A>直接ウィンドウでホストされていないフラグメント内の要素。</span><span class="sxs-lookup"><span data-stu-id="cd1c2-103">This field is typically used in the implementation of <xref:System.Windows.Automation.Provider.IRawElementProviderFragment.GetRuntimeId%2A> for elements in a fragment that are not directly hosted in a window.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cd1c2-104">次の例は、実装の<xref:System.Windows.Automation.Provider.IRawElementProviderFragment.GetRuntimeId%2A?displayProperty=nameWithType>リスト項目。</span><span class="sxs-lookup"><span data-stu-id="cd1c2-104">The following example is an implementation of <xref:System.Windows.Automation.Provider.IRawElementProviderFragment.GetRuntimeId%2A?displayProperty=nameWithType> for a list item.</span></span>  
  
 [!code-csharp[UIAFragmentProvider_snip#101](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAFragmentProvider_snip/CSharp/ListItemFragment.cs#101)]
 [!code-vb[UIAFragmentProvider_snip#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAFragmentProvider_snip/VisualBasic/ListItemFragment.vb#101)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientsAreListening">
      <MemberSignature Language="C#" Value="public static bool ClientsAreListening { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool ClientsAreListening" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.AutomationInteropProvider.ClientsAreListening" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ClientsAreListening As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool ClientsAreListening { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cd1c2-105">いずれかの UI Automation クライアント アプリケーションが [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] イベントにサブスクライブされるかどうかを指定する値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd1c2-105">Gets a value that specifies whether any UI Automation client application is subscribed to [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] events.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cd1c2-106">イベントにサブスクライブしているクライアントがある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd1c2-106">
              <see langword="true" /> if a client is subscribed to events; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[UIAFragmentProvider_snip#122](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAFragmentProvider_snip/CSharp/ListFragment.cs#122)]
 [!code-vb[UIAFragmentProvider_snip#122](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAFragmentProvider_snip/VisualBasic/ListFragment.vb#122)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HostProviderFromHandle">
      <MemberSignature Language="C#" Value="public static System.Windows.Automation.Provider.IRawElementProviderSimple HostProviderFromHandle (IntPtr hwnd);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Automation.Provider.IRawElementProviderSimple HostProviderFromHandle(native int hwnd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.AutomationInteropProvider.HostProviderFromHandle(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HostProviderFromHandle (hwnd As IntPtr) As IRawElementProviderSimple" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Automation::Provider::IRawElementProviderSimple ^ HostProviderFromHandle(IntPtr hwnd);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Provider.IRawElementProviderSimple</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hwnd" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hwnd">
          <span data-ttu-id="cd1c2-107">ウィンドウのハンドル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd1c2-107">The handle of the window.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cd1c2-108">指定したウィンドウを表す UI オートメーション プロバイダーを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd1c2-108">Returns a UI Automation provider that represents the specified window.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cd1c2-109">指定したウィンドウ用の未処理要素プロバイダー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd1c2-109">The raw element provider for the specified window.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd1c2-110">このメソッドによって返されるインターフェイスは、バックアップにしか渡すこと[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]です。</span><span class="sxs-lookup"><span data-stu-id="cd1c2-110">The interface returned by this method can only be passed back to [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)].</span></span> <span data-ttu-id="cd1c2-111">このインターフェイスのメソッドを呼び出すしようとしています。 で例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="cd1c2-111">Attempting to call a method on the interface will raise an exception.</span></span>  
  
   
  
## Examples  
 [!code-csharp[UIAFragmentProvider_snip#121](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAFragmentProvider_snip/CSharp/ListFragment.cs#121)]
 [!code-vb[UIAFragmentProvider_snip#121](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAFragmentProvider_snip/VisualBasic/ListFragment.vb#121)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidateLimit">
      <MemberSignature Language="C#" Value="public const int InvalidateLimit = 20;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 InvalidateLimit = (20)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.Provider.AutomationInteropProvider.InvalidateLimit" />
      <MemberSignature Language="VB.NET" Value="Public Const InvalidateLimit As Integer  = 20" />
      <MemberSignature Language="C++ CLI" Value="public: int InvalidateLimit = 20;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>20</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="cd1c2-112">バッチ処理の前に送信するイベントの最大数を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd1c2-112">Specifies the maximum number of events to send before batching.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd1c2-113">この値は、通知が個々 のイベントなど、指定されたかどうかを判断<xref:System.Windows.Automation.StructureChangeType.ChildAdded>または一括イベントなどの<xref:System.Windows.Automation.StructureChangeType.ChildrenBulkAdded>します。</span><span class="sxs-lookup"><span data-stu-id="cd1c2-113">This value determines whether notification is given of individual events such as <xref:System.Windows.Automation.StructureChangeType.ChildAdded> or of bulk events such as <xref:System.Windows.Automation.StructureChangeType.ChildrenBulkAdded>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemsInvalidateLimit">
      <MemberSignature Language="C#" Value="public const int ItemsInvalidateLimit = 5;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 ItemsInvalidateLimit = (5)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.Provider.AutomationInteropProvider.ItemsInvalidateLimit" />
      <MemberSignature Language="VB.NET" Value="Public Const ItemsInvalidateLimit As Integer  = 5" />
      <MemberSignature Language="C++ CLI" Value="public: int ItemsInvalidateLimit = 5;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="cd1c2-114">コンテナー内の項目のバッチ処理の前に送信するイベントの最大数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd1c2-114">The maximum number of events to send before batching for items in containers.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseAutomationEvent">
      <MemberSignature Language="C#" Value="public static void RaiseAutomationEvent (System.Windows.Automation.AutomationEvent eventId, System.Windows.Automation.Provider.IRawElementProviderSimple provider, System.Windows.Automation.AutomationEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RaiseAutomationEvent(class System.Windows.Automation.AutomationEvent eventId, class System.Windows.Automation.Provider.IRawElementProviderSimple provider, class System.Windows.Automation.AutomationEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.AutomationInteropProvider.RaiseAutomationEvent(System.Windows.Automation.AutomationEvent,System.Windows.Automation.Provider.IRawElementProviderSimple,System.Windows.Automation.AutomationEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RaiseAutomationEvent (eventId As AutomationEvent, provider As IRawElementProviderSimple, e As AutomationEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RaiseAutomationEvent(System::Windows::Automation::AutomationEvent ^ eventId, System::Windows::Automation::Provider::IRawElementProviderSimple ^ provider, System::Windows::Automation::AutomationEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Windows.Automation.AutomationEvent" />
        <Parameter Name="provider" Type="System.Windows.Automation.Provider.IRawElementProviderSimple" />
        <Parameter Name="e" Type="System.Windows.Automation.AutomationEventArgs" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="cd1c2-115">イベント識別子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd1c2-115">The event identifier.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="cd1c2-116">イベントに関連付けられた要素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd1c2-116">The element associated with the event.</span>
          </span>
        </param>
        <param name="e">
          <span data-ttu-id="cd1c2-117">イベントに関する情報。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd1c2-117">Information about the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cd1c2-118">パターン イベントまたはカスタム イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd1c2-118">Raises a pattern event or a custom event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd1c2-119">パターンの実装だけで、パターンのイベントを発生しない必要があります。</span><span class="sxs-lookup"><span data-stu-id="cd1c2-119">Pattern events should not be raised just by a pattern implementation.</span></span> <span data-ttu-id="cd1c2-120">など、<xref:System.Windows.Automation.InvokePatternIdentifiers.InvokedEvent>を発生させる場合、コントロールが呼び出されるたびに使用するか<xref:System.Windows.Automation.InvokePattern.Invoke%2A>またはマウスまたはキーボード入力を使用します。</span><span class="sxs-lookup"><span data-stu-id="cd1c2-120">For example, an <xref:System.Windows.Automation.InvokePatternIdentifiers.InvokedEvent> should be raised whenever the control is invoked, either through <xref:System.Windows.Automation.InvokePattern.Invoke%2A> or through mouse or keyboard input.</span></span> <span data-ttu-id="cd1c2-121">これにより、クライアントは、システム イベントに関する通知できます。</span><span class="sxs-lookup"><span data-stu-id="cd1c2-121">In this way, clients can be informed about system events.</span></span>  
  
   
  
## Examples  
 [!code-csharp[UIAFragmentProvider_snip#122](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAFragmentProvider_snip/CSharp/ListFragment.cs#122)]
 [!code-vb[UIAFragmentProvider_snip#122](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAFragmentProvider_snip/VisualBasic/ListFragment.vb#122)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseAutomationPropertyChangedEvent">
      <MemberSignature Language="C#" Value="public static void RaiseAutomationPropertyChangedEvent (System.Windows.Automation.Provider.IRawElementProviderSimple element, System.Windows.Automation.AutomationPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RaiseAutomationPropertyChangedEvent(class System.Windows.Automation.Provider.IRawElementProviderSimple element, class System.Windows.Automation.AutomationPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.AutomationInteropProvider.RaiseAutomationPropertyChangedEvent(System.Windows.Automation.Provider.IRawElementProviderSimple,System.Windows.Automation.AutomationPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RaiseAutomationPropertyChangedEvent (element As IRawElementProviderSimple, e As AutomationPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RaiseAutomationPropertyChangedEvent(System::Windows::Automation::Provider::IRawElementProviderSimple ^ element, System::Windows::Automation::AutomationPropertyChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.Automation.Provider.IRawElementProviderSimple" />
        <Parameter Name="e" Type="System.Windows.Automation.AutomationPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="cd1c2-122">イベントに関連付けられた要素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd1c2-122">The element associated with the event.</span>
          </span>
        </param>
        <param name="e">
          <span data-ttu-id="cd1c2-123">イベントに関する情報。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd1c2-123">Information about the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cd1c2-124">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] プロパティが変更された場合にイベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd1c2-124">Raises an event when a [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] property has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[UIAFragmentProvider_snip#123](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAFragmentProvider_snip/CSharp/ListFragment.cs#123)]
 [!code-vb[UIAFragmentProvider_snip#123](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAFragmentProvider_snip/VisualBasic/ListFragment.vb#123)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseStructureChangedEvent">
      <MemberSignature Language="C#" Value="public static void RaiseStructureChangedEvent (System.Windows.Automation.Provider.IRawElementProviderSimple provider, System.Windows.Automation.StructureChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RaiseStructureChangedEvent(class System.Windows.Automation.Provider.IRawElementProviderSimple provider, class System.Windows.Automation.StructureChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.AutomationInteropProvider.RaiseStructureChangedEvent(System.Windows.Automation.Provider.IRawElementProviderSimple,System.Windows.Automation.StructureChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RaiseStructureChangedEvent (provider As IRawElementProviderSimple, e As StructureChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RaiseStructureChangedEvent(System::Windows::Automation::Provider::IRawElementProviderSimple ^ provider, System::Windows::Automation::StructureChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.Windows.Automation.Provider.IRawElementProviderSimple" />
        <Parameter Name="e" Type="System.Windows.Automation.StructureChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="cd1c2-125">イベントに関連付けられた要素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd1c2-125">The element associated with the event.</span>
          </span>
        </param>
        <param name="e">
          <span data-ttu-id="cd1c2-126">イベントに関する情報。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd1c2-126">Information about the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cd1c2-127">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] ツリーが変更された場合にイベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd1c2-127">Raises an event when the [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] tree has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd1c2-128">ツリー構造の変更の例は、子要素の追加またはリスト ボックスから削除または展開やツリー ビューで折りたたまれています。</span><span class="sxs-lookup"><span data-stu-id="cd1c2-128">An example of a change in the tree structure is child elements being added to or removed from a list box, or being expanded or collapsed in a tree view.</span></span>  
  
 <span data-ttu-id="cd1c2-129">要素のいずれか、またはそのコンテナーのランタイム識別子が渡される子要素が削除されたときに、<xref:System.Windows.Automation.StructureChangedEventArgs>コンス トラクターです。</span><span class="sxs-lookup"><span data-stu-id="cd1c2-129">When a child element is removed, the runtime identifier of either the element, or of its container, is passed to the <xref:System.Windows.Automation.StructureChangedEventArgs> constructor.</span></span> <span data-ttu-id="cd1c2-130">現在のバージョンで[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]、ただし、そのランタイム識別子を検出するプロバイダーのインスタンスの簡単な方法はありません。</span><span class="sxs-lookup"><span data-stu-id="cd1c2-130">In the current version of [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)], however, there is no easy way for an instance of a provider to discover its runtime identifier.</span></span> <span data-ttu-id="cd1c2-131"><xref:System.Windows.Automation.Provider.IRawElementProviderFragment.GetRuntimeId%2A>メソッドは通常を含む配列を返します<xref:System.Windows.Automation.Provider.AutomationInteropProvider.AppendRuntimeId>、よう指示するマジック ナンバー、[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]システム コントロールのすべてのインスタンスの一意の識別子を作成します。</span><span class="sxs-lookup"><span data-stu-id="cd1c2-131">The <xref:System.Windows.Automation.Provider.IRawElementProviderFragment.GetRuntimeId%2A> method normally returns an array that contains <xref:System.Windows.Automation.Provider.AutomationInteropProvider.AppendRuntimeId>, a magic number that instructs the [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] system to create a unique identifer for every instance of the control.</span></span> <span data-ttu-id="cd1c2-132">生の値によって提供される<xref:System.Windows.Automation.Provider.IRawElementProviderFragment.GetRuntimeId%2A>これには、クライアントにとって意味のないは、特定のインスタンスの識別に使用できないために、イベント、使用いない必要があります。</span><span class="sxs-lookup"><span data-stu-id="cd1c2-132">The raw value provided by <xref:System.Windows.Automation.Provider.IRawElementProviderFragment.GetRuntimeId%2A> should not be used in events, because it is meaningless to clients and cannot be used to identify a specific instance.</span></span>  
  
 <span data-ttu-id="cd1c2-133">この制限により、型のイベント<xref:System.Windows.Automation.StructureChangeType.ChildAdded>と<xref:System.Windows.Automation.StructureChangeType.ChildRemoved>は非常に役に立ちません。</span><span class="sxs-lookup"><span data-stu-id="cd1c2-133">Because of this limitation, events of type <xref:System.Windows.Automation.StructureChangeType.ChildAdded> and <xref:System.Windows.Automation.StructureChangeType.ChildRemoved> are not very useful.</span></span> <span data-ttu-id="cd1c2-134">代わりに、常に使用<xref:System.Windows.Automation.StructureChangeType.ChildrenBulkAdded>と<xref:System.Windows.Automation.StructureChangeType.ChildrenBulkRemoved>、ランタイム識別子として 0 を渡します。</span><span class="sxs-lookup"><span data-stu-id="cd1c2-134">As an alternative, always use <xref:System.Windows.Automation.StructureChangeType.ChildrenBulkAdded> and <xref:System.Windows.Automation.StructureChangeType.ChildrenBulkRemoved>, passing 0 as the runtime identifer.</span></span> <span data-ttu-id="cd1c2-135">使用することはできません`null`ように、この例外が生成されます。</span><span class="sxs-lookup"><span data-stu-id="cd1c2-135">You cannot use `null`, as this will raise an exception.</span></span> <span data-ttu-id="cd1c2-136">クライアントは、コンテナー内の変更が行われたことが通知されます (で識別される、`sender`に渡されたパラメーター、 <xref:System.Windows.Automation.StructureChangedEventHandler>) どのような子の特定の通知を追加または削除しないとします。</span><span class="sxs-lookup"><span data-stu-id="cd1c2-136">Clients will be notified that a change has been made in the container (identified by the `sender` parameter passed to the <xref:System.Windows.Automation.StructureChangedEventHandler>), without specific notice of what children have been added or removed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cd1c2-137">次の例では、子を追加するときにイベントを発生させる方法を示しています。 または、カスタム リスト ボックスから削除します。</span><span class="sxs-lookup"><span data-stu-id="cd1c2-137">The following example shows how to raise an event when children are added to, or removed from, a custom list box.</span></span>  
  
 [!code-csharp[FragmentProvider#101](~/samples/snippets/csharp/VS_Snippets_Wpf/FragmentProvider/CSharp/ListFragment.cs#101)]
 [!code-vb[FragmentProvider#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FragmentProvider/VisualBasic/ListFragment.vb#101)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.StructureChangedEventArgs.#ctor(System.Windows.Automation.StructureChangeType,System.Int32[])" />
      </Docs>
    </Member>
    <Member MemberName="ReturnRawElementProvider">
      <MemberSignature Language="C#" Value="public static IntPtr ReturnRawElementProvider (IntPtr hwnd, IntPtr wParam, IntPtr lParam, System.Windows.Automation.Provider.IRawElementProviderSimple el);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int ReturnRawElementProvider(native int hwnd, native int wParam, native int lParam, class System.Windows.Automation.Provider.IRawElementProviderSimple el) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.AutomationInteropProvider.ReturnRawElementProvider(System.IntPtr,System.IntPtr,System.IntPtr,System.Windows.Automation.Provider.IRawElementProviderSimple)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReturnRawElementProvider (hwnd As IntPtr, wParam As IntPtr, lParam As IntPtr, el As IRawElementProviderSimple) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr ReturnRawElementProvider(IntPtr hwnd, IntPtr wParam, IntPtr lParam, System::Windows::Automation::Provider::IRawElementProviderSimple ^ el);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hwnd" Type="System.IntPtr" />
        <Parameter Name="wParam" Type="System.IntPtr" />
        <Parameter Name="lParam" Type="System.IntPtr" />
        <Parameter Name="el" Type="System.Windows.Automation.Provider.IRawElementProviderSimple" />
      </Parameters>
      <Docs>
        <param name="hwnd">
          <span data-ttu-id="cd1c2-138">要素のウィンドウのハンドル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd1c2-138">Handle of the element's window.</span>
          </span>
        </param>
        <param name="wParam">
          <span data-ttu-id="cd1c2-139">
            <see langword="WM_GETOBJECT" /> メッセージの <see langword="wParam" /> メンバー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd1c2-139">The <see langword="wParam" /> member of the <see langword="WM_GETOBJECT" /> message.</span>
          </span>
        </param>
        <param name="lParam">
          <span data-ttu-id="cd1c2-140">
            <see langword="WM_GETOBJECT" /> メッセージの <see langword="lParam" /> メンバー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd1c2-140">The <see langword="lParam" /> member of the <see langword="WM_GETOBJECT" /> message.</span>
          </span>
        </param>
        <param name="el">
          <span data-ttu-id="cd1c2-141">要素の UI オートメーション プロバイダー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd1c2-141">The UI Automation provider for the element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cd1c2-142">
            <see langword="WM_GETOBJECT" /> メッセージに対する応答として要素の UI 自動化プロバイダーを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd1c2-142">Returns the UI automation provider for an element in response to a <see langword="WM_GETOBJECT" /> message.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cd1c2-143">メッセージを基本ウィンドウ プロシージャに渡す前に <see cref="P:System.Windows.Forms.Message.Result" /> に割り当てる必要があるデータへのポインター。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd1c2-143">A pointer to data that should be assigned to <see cref="P:System.Windows.Forms.Message.Result" /> before passing the message to the base window procedure.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[UIAFragmentProvider_snip#116](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAFragmentProvider_snip/CSharp/ListFragment.cs#116)]
 [!code-vb[UIAFragmentProvider_snip#116](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAFragmentProvider_snip/VisualBasic/ListFragment.vb#116)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootObjectId">
      <MemberSignature Language="C#" Value="public const int RootObjectId = -25;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 RootObjectId = (-25)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.Provider.AutomationInteropProvider.RootObjectId" />
      <MemberSignature Language="VB.NET" Value="Public Const RootObjectId As Integer  = -25" />
      <MemberSignature Language="C++ CLI" Value="public: int RootObjectId = -25;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>-25</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="cd1c2-144">
            <see langword="lParam" /> メッセージの <see langword="WM_GETOBJECT" /> メンバーで使用される値を格納します。この値は、サーバーがルートの未処理要素プロバイダーへの参照を返す必要があることを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd1c2-144">Contains a value used in the <see langword="lParam" /> member of a <see langword="WM_GETOBJECT" /> message, indicating that the server should return a reference to the root raw element provider.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>