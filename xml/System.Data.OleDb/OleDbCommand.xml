<Type Name="OleDbCommand" FullName="System.Data.OleDb.OleDbCommand">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6f533a3907416998b0eeb2ce4b66da93fa01b972" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30390746" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class OleDbCommand : System.Data.Common.DbCommand, ICloneable, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OleDbCommand extends System.Data.Common.DbCommand implements class System.Data.IDbCommand, class System.ICloneable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Data.OleDb.OleDbCommand" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OleDbCommand&#xA;Inherits DbCommand&#xA;Implements ICloneable, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class OleDbCommand sealed : System::Data::Common::DbCommand, ICloneable, IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbCommand</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("RecordsAffected")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.OleDbCommandDesigner, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="8b7b2-101">データ ソースに対して実行する SQL ステートメントまたはストアド プロシージャを表します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="8b7b2-101">Represents an SQL statement or stored procedure to execute against a data source.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b7b2-102">インスタンス<xref:System.Data.OleDb.OleDbCommand>が作成、読み取り/書き込みプロパティは、初期値に設定されます。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-102">When an instance of <xref:System.Data.OleDb.OleDbCommand> is created, the read/write properties are set to their initial values.</span></span> <span data-ttu-id="8b7b2-103">これらの値の一覧は、次を参照してください。、<xref:System.Data.OleDb.OleDbCommand>コンス トラクターです。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-103">For a list of these values, see the <xref:System.Data.OleDb.OleDbCommand> constructor.</span></span>  
  
 <span data-ttu-id="8b7b2-104"><xref:System.Data.OleDb.OleDbCommand> データ ソースでコマンドを実行する次のメソッドを機能します。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-104"><xref:System.Data.OleDb.OleDbCommand> features the following methods executing commands at a data source:</span></span>  
  
|<span data-ttu-id="8b7b2-105">アイテム</span><span class="sxs-lookup"><span data-stu-id="8b7b2-105">Item</span></span>|<span data-ttu-id="8b7b2-106">説明</span><span class="sxs-lookup"><span data-stu-id="8b7b2-106">Description</span></span>|  
|----------|-----------------|  
|<xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A>|<span data-ttu-id="8b7b2-107">行を返すコマンドを実行します。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-107">Executes commands that return rows.</span></span> <span data-ttu-id="8b7b2-108"><xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A> 使用する場合の希望する効果がない可能性があります SQL 設定ステートメントなどのコマンドを実行します。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-108"><xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A> may not have the effect that you want if used to execute commands such as SQL SET statements.</span></span>|  
|<xref:System.Data.OleDb.OleDbCommand.ExecuteNonQuery%2A>|<span data-ttu-id="8b7b2-109">SQL の INSERT、DELETE、UPDATE、および一連のステートメントなどのコマンドを実行します。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-109">Executes commands such as SQL INSERT, DELETE, UPDATE, and SET statements.</span></span>|  
|<xref:System.Data.OleDb.OleDbCommand.ExecuteScalar%2A>|<span data-ttu-id="8b7b2-110">単一の値、たとえば、データベースから集計値を取得します。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-110">Retrieves a single value, for example, an aggregate value from a database.</span></span>|  
  
 <span data-ttu-id="8b7b2-111">リセットすることができます、<xref:System.Data.OleDb.OleDbCommand.CommandText%2A>プロパティと再利用、<xref:System.Data.OleDb.OleDbCommand>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-111">You can reset the <xref:System.Data.OleDb.OleDbCommand.CommandText%2A> property and reuse the <xref:System.Data.OleDb.OleDbCommand> object.</span></span> <span data-ttu-id="8b7b2-112">ただし、閉じる必要があります、<xref:System.Data.OleDb.OleDbDataReader>新しいまたは前のコマンドを実行する前にします。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-112">However, you must close the <xref:System.Data.OleDb.OleDbDataReader> before you can execute a new or previous command.</span></span>  
  
 <span data-ttu-id="8b7b2-113">致命的なエラー場合<xref:System.Data.OleDb.OleDbException>(たとえば、SQL Server 重大度レベル以上 20 の) メソッドの実行によって生成される、 <xref:System.Data.OleDb.OleDbCommand>、<xref:System.Data.OleDb.OleDbConnection>接続を閉じることができます。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-113">If a fatal <xref:System.Data.OleDb.OleDbException> (for example, a SQL Server severity level of 20 or greater) is generated by the method executing an <xref:System.Data.OleDb.OleDbCommand>, the <xref:System.Data.OleDb.OleDbConnection>, the connection may be closed.</span></span> <span data-ttu-id="8b7b2-114">ただし、ユーザーは接続を再び開き、続行できます。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-114">However, the user can reopen the connection and continue.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8b7b2-115">次の例では、<xref:System.Data.OleDb.OleDbCommand>と共に、<xref:System.Data.OleDb.OleDbDataAdapter>と<xref:System.Data.OleDb.OleDbConnection>、Access データベースから行を選択します。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-115">The following example uses the <xref:System.Data.OleDb.OleDbCommand>, along <xref:System.Data.OleDb.OleDbDataAdapter> and <xref:System.Data.OleDb.OleDbConnection>, to select rows from an Access database.</span></span> <span data-ttu-id="8b7b2-116">塗りつぶされた<xref:System.Data.DataSet>次が返されます。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-116">The filled <xref:System.Data.DataSet> is then returned.</span></span> <span data-ttu-id="8b7b2-117">例が初期化された渡された<xref:System.Data.DataSet>、接続文字列、クエリ文字列では、SQL SELECT ステートメント、および元のデータベース テーブルの名前を指定する文字列。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-117">The example is passed an initialized <xref:System.Data.DataSet>, a connection string, a query string that is an SQL SELECT statement, and a string that is the name of the source database table.</span></span>  
  
 [!code-csharp[Classic WebData OleDbCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbCommand Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Data.OleDb.OleDbDataAdapter" />
    <altmember cref="T:System.Data.OleDb.OleDbConnection" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8b7b2-118">
            <see cref="T:System.Data.OleDb.OleDbCommand" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b7b2-118">Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbCommand" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommand.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbCommand();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8b7b2-119">
            <see cref="T:System.Data.OleDb.OleDbCommand" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b7b2-119">Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbCommand" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b7b2-120">基本コンス トラクターは、すべてのフィールドを既定値を初期化します。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-120">The base constructor initializes all fields to their default values.</span></span> <span data-ttu-id="8b7b2-121">次の表は、のインスタンスの初期プロパティ値を示しています。<xref:System.Data.OleDb.OleDbCommand>です。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-121">The following table shows initial property values for an instance of <xref:System.Data.OleDb.OleDbCommand>.</span></span>  
  
|<span data-ttu-id="8b7b2-122">プロパティ</span><span class="sxs-lookup"><span data-stu-id="8b7b2-122">Properties</span></span>|<span data-ttu-id="8b7b2-123">初期値</span><span class="sxs-lookup"><span data-stu-id="8b7b2-123">Initial Value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.OleDb.OleDbCommand.CommandText%2A>|<span data-ttu-id="8b7b2-124">空の文字列 ("")</span><span class="sxs-lookup"><span data-stu-id="8b7b2-124">empty string ("")</span></span>|  
|<xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>|<span data-ttu-id="8b7b2-125">30</span><span class="sxs-lookup"><span data-stu-id="8b7b2-125">30</span></span>|  
|<xref:System.Data.OleDb.OleDbCommand.CommandType%2A>|`Text`|  
|<xref:System.Data.OleDb.OleDbCommand.Connection%2A>|<span data-ttu-id="8b7b2-126">null</span><span class="sxs-lookup"><span data-stu-id="8b7b2-126">null</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="8b7b2-127">次の例を作成、<xref:System.Data.OleDb.OleDbCommand>し、一部のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-127">The following example creates an <xref:System.Data.OleDb.OleDbCommand> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData OleDbCommand.OleDbCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.OleDbCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbCommand.OleDbCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.OleDbCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbCommand (string cmdText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string cmdText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommand.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cmdText As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbCommand(System::String ^ cmdText);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cmdText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="cmdText">
          <span data-ttu-id="8b7b2-128">クエリのテキスト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b7b2-128">The text of the query.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b7b2-129">クエリ テキストを指定して、<see cref="T:System.Data.OleDb.OleDbCommand" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b7b2-129">Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbCommand" /> class with the text of the query.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b7b2-130">次の表は、のインスタンスの初期プロパティ値を示しています。<xref:System.Data.OleDb.OleDbCommand>です。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-130">The following table shows initial property values for an instance of <xref:System.Data.OleDb.OleDbCommand>.</span></span>  
  
|<span data-ttu-id="8b7b2-131">プロパティ</span><span class="sxs-lookup"><span data-stu-id="8b7b2-131">Properties</span></span>|<span data-ttu-id="8b7b2-132">初期値</span><span class="sxs-lookup"><span data-stu-id="8b7b2-132">Initial Value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.OleDb.OleDbCommand.CommandText%2A>|`cmdText`|  
|<xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>|<span data-ttu-id="8b7b2-133">30</span><span class="sxs-lookup"><span data-stu-id="8b7b2-133">30</span></span>|  
|<xref:System.Data.IDbCommand.CommandType%2A>|`Text`|  
|<xref:System.Data.OleDb.OleDbCommand.Connection%2A>|<span data-ttu-id="8b7b2-134">null</span><span class="sxs-lookup"><span data-stu-id="8b7b2-134">null</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="8b7b2-135">次の例を作成、<xref:System.Data.OleDb.OleDbCommand>し、一部のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-135">The following example creates an <xref:System.Data.OleDb.OleDbCommand> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData OleDbCommand.OleDbCommand1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.OleDbCommand1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbCommand.OleDbCommand1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.OleDbCommand1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbCommand (string cmdText, System.Data.OleDb.OleDbConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string cmdText, class System.Data.OleDb.OleDbConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommand.#ctor(System.String,System.Data.OleDb.OleDbConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cmdText As String, connection As OleDbConnection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbCommand(System::String ^ cmdText, System::Data::OleDb::OleDbConnection ^ connection);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cmdText" Type="System.String" />
        <Parameter Name="connection" Type="System.Data.OleDb.OleDbConnection" />
      </Parameters>
      <Docs>
        <param name="cmdText">
          <span data-ttu-id="8b7b2-136">クエリのテキスト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b7b2-136">The text of the query.</span>
          </span>
        </param>
        <param name="connection">
          <span data-ttu-id="8b7b2-137">データ ソースへの接続を表す <see cref="T:System.Data.OleDb.OleDbConnection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b7b2-137">An <see cref="T:System.Data.OleDb.OleDbConnection" /> that represents the connection to a data source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b7b2-138">クエリ テキストと <see cref="T:System.Data.OleDb.OleDbConnection" /> を指定して、<see cref="T:System.Data.OleDb.OleDbCommand" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b7b2-138">Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbCommand" /> class with the text of the query and an <see cref="T:System.Data.OleDb.OleDbConnection" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b7b2-139">次の表は、のインスタンスの初期プロパティ値を示しています。<xref:System.Data.OleDb.OleDbCommand>です。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-139">The following table shows initial property values for an instance of <xref:System.Data.OleDb.OleDbCommand>.</span></span>  
  
|<span data-ttu-id="8b7b2-140">プロパティ</span><span class="sxs-lookup"><span data-stu-id="8b7b2-140">Properties</span></span>|<span data-ttu-id="8b7b2-141">初期値</span><span class="sxs-lookup"><span data-stu-id="8b7b2-141">Initial Value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.OleDb.OleDbCommand.CommandText%2A>|`cmdText`|  
|<xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>|<span data-ttu-id="8b7b2-142">30</span><span class="sxs-lookup"><span data-stu-id="8b7b2-142">30</span></span>|  
|<xref:System.Data.IDbCommand.CommandType%2A>|`Text`|  
|<xref:System.Data.OleDb.OleDbCommand.Connection%2A>|<span data-ttu-id="8b7b2-143">新しい<xref:System.Data.OleDb.OleDbConnection>の値である、`connection`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-143">A new <xref:System.Data.OleDb.OleDbConnection> that is the value for the `connection` parameter.</span></span>|  
  
 <span data-ttu-id="8b7b2-144">これらのパラメーターのいずれかの値を変更するには、関連するプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-144">You can change the value for any of these parameters by setting the related property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8b7b2-145">次の例を作成、<xref:System.Data.OleDb.OleDbCommand>し、一部のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-145">The following example creates an <xref:System.Data.OleDb.OleDbCommand> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData OleDbCommand.OleDbCommand2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.OleDbCommand2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbCommand.OleDbCommand2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.OleDbCommand2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbCommand (string cmdText, System.Data.OleDb.OleDbConnection connection, System.Data.OleDb.OleDbTransaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string cmdText, class System.Data.OleDb.OleDbConnection connection, class System.Data.OleDb.OleDbTransaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommand.#ctor(System.String,System.Data.OleDb.OleDbConnection,System.Data.OleDb.OleDbTransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cmdText As String, connection As OleDbConnection, transaction As OleDbTransaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbCommand(System::String ^ cmdText, System::Data::OleDb::OleDbConnection ^ connection, System::Data::OleDb::OleDbTransaction ^ transaction);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cmdText" Type="System.String" />
        <Parameter Name="connection" Type="System.Data.OleDb.OleDbConnection" />
        <Parameter Name="transaction" Type="System.Data.OleDb.OleDbTransaction" />
      </Parameters>
      <Docs>
        <param name="cmdText">
          <span data-ttu-id="8b7b2-146">クエリのテキスト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b7b2-146">The text of the query.</span>
          </span>
        </param>
        <param name="connection">
          <span data-ttu-id="8b7b2-147">データ ソースへの接続を表す <see cref="T:System.Data.OleDb.OleDbConnection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b7b2-147">An <see cref="T:System.Data.OleDb.OleDbConnection" /> that represents the connection to a data source.</span>
          </span>
        </param>
        <param name="transaction">
          <span data-ttu-id="8b7b2-148">
            <see cref="T:System.Data.OleDb.OleDbCommand" /> が実行するトランザクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b7b2-148">The transaction in which the <see cref="T:System.Data.OleDb.OleDbCommand" /> executes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b7b2-149">クエリのテキスト、<see cref="T:System.Data.OleDb.OleDbConnection" />、および <see cref="P:System.Data.OleDb.OleDbCommand.Transaction" /> を指定して、<see cref="T:System.Data.OleDb.OleDbCommand" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b7b2-149">Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbCommand" /> class with the text of the query, an <see cref="T:System.Data.OleDb.OleDbConnection" />, and the <see cref="P:System.Data.OleDb.OleDbCommand.Transaction" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b7b2-150">次の表は、のインスタンスの初期プロパティ値を示しています。<xref:System.Data.OleDb.OleDbCommand>です。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-150">The following table shows initial property values for an instance of <xref:System.Data.OleDb.OleDbCommand>.</span></span>  
  
|<span data-ttu-id="8b7b2-151">プロパティ</span><span class="sxs-lookup"><span data-stu-id="8b7b2-151">Properties</span></span>|<span data-ttu-id="8b7b2-152">初期値</span><span class="sxs-lookup"><span data-stu-id="8b7b2-152">Initial Value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.OleDb.OleDbCommand.CommandText%2A>|`cmdText`|  
|<xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>|<span data-ttu-id="8b7b2-153">30</span><span class="sxs-lookup"><span data-stu-id="8b7b2-153">30</span></span>|  
|<xref:System.Data.IDbCommand.CommandType%2A>|`Text`|  
|<xref:System.Data.OleDb.OleDbCommand.Connection%2A>|<span data-ttu-id="8b7b2-154">新しい<xref:System.Data.OleDb.OleDbConnection>の値である、`connection`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-154">A new <xref:System.Data.OleDb.OleDbConnection> that is the value for the `connection` parameter.</span></span>|  
  
 <span data-ttu-id="8b7b2-155">これらのパラメーターのいずれかの値を変更するには、関連するプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-155">You can change the value for any of these parameters by setting the related property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8b7b2-156">次の例を作成、<xref:System.Data.OleDb.OleDbCommand>し、一部のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-156">The following example creates an <xref:System.Data.OleDb.OleDbCommand> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData OleDbCommand.OleDbCommand3#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.OleDbCommand3/CS/mysample.cs#1)]
 [!code-vb[Classic WebData OleDbCommand.OleDbCommand3#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.OleDbCommand3/VB/mysample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public override void Cancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Cancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommand.Cancel" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Cancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Cancel();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbCommand.Cancel</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8b7b2-157">
            <see cref="T:System.Data.OleDb.OleDbCommand" /> の実行のキャンセルを試行します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b7b2-157">Tries to cancel the execution of an <see cref="T:System.Data.OleDb.OleDbCommand" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b7b2-158">キャンセルする対象がない場合は、何も行われません。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-158">If there is nothing to cancel, nothing occurs.</span></span> <span data-ttu-id="8b7b2-159">ただし、処理中のコマンドが存在し、キャンセルの試行が失敗した場合でも、例外は生成されません。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-159">However, if there is a command in process, and the attempt to cancel fails, no exception is generated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8b7b2-160">次の例を作成、<xref:System.Data.OleDb.OleDbCommand>を実行して、実行をキャンセルします。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-160">The following example creates an <xref:System.Data.OleDb.OleDbCommand>, executes it, and then cancels the execution.</span></span> <span data-ttu-id="8b7b2-161">これを実現するには、SQL SELECT ステートメントを表す文字列と、データ ソースへの接続に使用する文字列、メソッドに渡します。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-161">To accomplish this, the method is passed a string that is an SQL SELECT statement and a string to use to connect to the data source.</span></span>  
  
 [!code-csharp[Classic WebData OleDbCommand.Cancel Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.Cancel Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbCommand.Cancel Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.Cancel Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbCommand Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OleDb.OleDbCommand Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommand.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As OleDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OleDb::OleDbCommand ^ Clone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8b7b2-162">現在のインスタンスのコピーである新しい <see cref="T:System.Data.OleDb.OleDbCommand" /> オブジェクトを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b7b2-162">Creates a new <see cref="T:System.Data.OleDb.OleDbCommand" /> object that is a copy of the current instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b7b2-163">このインスタンスのコピーである新しい <see cref="T:System.Data.OleDb.OleDbCommand" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b7b2-163">A new <see cref="T:System.Data.OleDb.OleDbCommand" /> object that is a copy of this instance.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandText">
      <MemberSignature Language="C#" Value="public override string CommandText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandText" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbCommand.CommandText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CommandText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CommandText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbCommand.CommandText</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.ADO.Design.OleDbCommandTextEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8b7b2-164">データ ソースで実行する SQL ステートメントまたはストアド プロシージャを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b7b2-164">Gets or sets the SQL statement or stored procedure to execute at the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8b7b2-165">実行する SQL ステートメントまたはストアド プロシージャ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b7b2-165">The SQL statement or stored procedure to execute.</span>
          </span>
          <span data-ttu-id="8b7b2-166">既定値は空の文字列です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b7b2-166">The default value is an empty string.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b7b2-167">ときに、<xref:System.Data.OleDb.OleDbCommand.CommandType%2A>プロパティに設定されている`StoredProcedure`、<xref:System.Data.OleDb.OleDbCommand.CommandType%2A>プロパティは、ストアド プロシージャの名前に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-167">When the <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> property is set to `StoredProcedure`, the <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> property should be set to the name of the stored procedure.</span></span> <span data-ttu-id="8b7b2-168">ユーザーが、ストアド プロシージャ名に特殊文字が含まれている場合は、エスケープ文字構文を使用する必要あります。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-168">The user may be required to use escape character syntax if the stored procedure name contains any special characters.</span></span> <span data-ttu-id="8b7b2-169">コマンドのいずれかを呼び出すときにこのストアド プロシージャが実行される、`Execute`メソッドです。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-169">The command executes this stored procedure when you call one of the `Execute` methods.</span></span>  
  
 <span data-ttu-id="8b7b2-170">ときに<xref:System.Data.OleDb.OleDbCommand.CommandType%2A>に設定されている`TableDirect`、<xref:System.Data.OleDb.OleDbCommand.CommandType%2A>プロパティにアクセスして、テーブルまたはテーブルの名前に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-170">When <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> is set to `TableDirect`, the <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> property should be set to the name of the table or tables to be accessed.</span></span> <span data-ttu-id="8b7b2-171">ユーザーが名前付きのテーブルに特殊文字が含まれている場合は、エスケープ文字構文を使用する必要あります。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-171">The user may be required to use escape character syntax if any of the named tables contain any special characters.</span></span> <span data-ttu-id="8b7b2-172">すべての行と列の名前付きのテーブルまたはテーブルが返されますの 1 つを呼び出すときに、`Execute`メソッドです。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-172">All rows and columns of the named table or tables will be returned when you call one of the `Execute` methods.</span></span>  
  
 <span data-ttu-id="8b7b2-173">設定することはできません、 <xref:System.Data.OleDb.OleDbCommand.Connection%2A>、 <xref:System.Data.OleDb.OleDbCommand.CommandType%2A>、および<xref:System.Data.OleDb.OleDbCommand.CommandText%2A>プロパティの場合は、現在の接続で実行またはフェッチ操作が実行されます。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-173">You cannot set the <xref:System.Data.OleDb.OleDbCommand.Connection%2A>, <xref:System.Data.OleDb.OleDbCommand.CommandType%2A>, and <xref:System.Data.OleDb.OleDbCommand.CommandText%2A> properties if the current connection is performing an execute or fetch operation.</span></span>  
  
 <span data-ttu-id="8b7b2-174">OLE DB.NET プロバイダーが SQL ステートメントまたは呼び出されるストアド プロシージャにパラメーターを渡すの名前付きパラメーターをサポートしない、<xref:System.Data.OleDb.OleDbCommand>とき<xref:System.Data.OleDb.OleDbCommand.CommandType%2A>に設定されている`Text`です。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-174">The OLE DB.NET Provider does not support named parameters for passing parameters to an SQL Statement or a stored procedure called by an <xref:System.Data.OleDb.OleDbCommand> when <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> is set to `Text`.</span></span> <span data-ttu-id="8b7b2-175">この場合、疑問符 (?) プレース ホルダーを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-175">In this case, the question mark (?) placeholder must be used.</span></span> <span data-ttu-id="8b7b2-176">例:</span><span class="sxs-lookup"><span data-stu-id="8b7b2-176">For example:</span></span>  
  
 `SELECT * FROM Customers WHERE CustomerID = ?`  
  
 <span data-ttu-id="8b7b2-177">そのため、順序<xref:System.Data.OleDb.OleDbParameter>オブジェクトに追加されます、<xref:System.Data.OleDb.OleDbParameterCollection>パラメーターの疑問符 (?) プレース ホルダーの位置に直接対応する必要があります。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-177">Therefore, the order in which <xref:System.Data.OleDb.OleDbParameter> objects are added to the <xref:System.Data.OleDb.OleDbParameterCollection> must directly correspond to the position of the question mark placeholder for the parameter.</span></span>  
  
 <span data-ttu-id="8b7b2-178">詳細については、次を参照してください。[構成パラメーターとパラメーターのデータ型](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md)です。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-178">For more information, see [Configuring Parameters and Parameter Data Types](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8b7b2-179">次の例を作成、<xref:System.Data.OleDb.OleDbCommand>し、一部のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-179">The following example creates an <xref:System.Data.OleDb.OleDbCommand> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData OleDbCommand.CommandText Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.CommandText Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbCommand.CommandText Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.CommandText Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandTimeout">
      <MemberSignature Language="C#" Value="public override int CommandTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CommandTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbCommand.CommandTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CommandTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CommandTimeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbCommand.CommandTimeout</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8b7b2-180">コマンド実行の試行を終了し、エラーを生成するまでの待機時間を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b7b2-180">Gets or sets the wait time before terminating an attempt to execute a command and generating an error.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8b7b2-181">コマンドが実行されるまでの待機時間 (秒)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b7b2-181">The time (in seconds) to wait for the command to execute.</span>
          </span>
          <span data-ttu-id="8b7b2-182">既定値は 30 秒です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b7b2-182">The default is 30 seconds.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b7b2-183">値が 0 の制限がないことを示します。 とでは避ける必要があります、<xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>ためコマンドを実行するとは無期限に待機します。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-183">A value of 0 indicates no limit, and should be avoided in a <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> because an attempt to execute a command will wait indefinitely.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandType">
      <MemberSignature Language="C#" Value="public override System.Data.CommandType CommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.CommandType CommandType" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbCommand.CommandType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CommandType As CommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::CommandType CommandType { System::Data::CommandType get(); void set(System::Data::CommandType value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbCommand.CommandType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.CommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8b7b2-184">
            <see cref="P:System.Data.OleDb.OleDbCommand.CommandText" /> プロパティをどのように解釈するかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b7b2-184">Gets or sets a value that indicates how the <see cref="P:System.Data.OleDb.OleDbCommand.CommandText" /> property is interpreted.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8b7b2-185">
            <see cref="P:System.Data.OleDb.OleDbCommand.CommandType" /> 値のいずれか 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b7b2-185">One of the <see cref="P:System.Data.OleDb.OleDbCommand.CommandType" /> values.</span>
          </span>
          <span data-ttu-id="8b7b2-186">既定値は Text です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b7b2-186">The default is Text.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b7b2-187">設定すると、<xref:System.Data.OleDb.OleDbCommand.CommandType%2A>プロパティを`StoredProcedure`、設定する必要があります、<xref:System.Data.OleDb.OleDbCommand.CommandText%2A>プロパティをストアド プロシージャの名前にします。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-187">When you set the <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> property to `StoredProcedure`, you should set the <xref:System.Data.OleDb.OleDbCommand.CommandText%2A> property to the name of the stored procedure.</span></span> <span data-ttu-id="8b7b2-188">コマンドは、Execute メソッドの 1 つを呼び出すときに、このストアド プロシージャを実行します。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-188">The command executes this stored procedure when you call one of the Execute methods.</span></span>  
  
 <span data-ttu-id="8b7b2-189"><xref:System.Data.OleDb.OleDbCommand.Connection%2A>、<xref:System.Data.OleDb.OleDbCommand.CommandType%2A>と<xref:System.Data.OleDb.OleDbCommand.CommandText%2A>現在の接続が実行または fetch 操作を実行している場合、プロパティを設定することはできません。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-189">The <xref:System.Data.OleDb.OleDbCommand.Connection%2A>, <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> and <xref:System.Data.OleDb.OleDbCommand.CommandText%2A> properties cannot be set if the current connection is performing an execute or fetch operation.</span></span>  
  
 <span data-ttu-id="8b7b2-190">OLE DB .NET プロバイダーは、SQL ステートメントまたはによって呼び出されるストアド プロシージャにパラメーターを渡すの名前付きパラメーターをサポートしていません、<xref:System.Data.OleDb.OleDbCommand>とき<xref:System.Data.OleDb.OleDbCommand.CommandType%2A>が Text に設定します。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-190">The OLE DB .NET Provider does not support named parameters for passing parameters to an SQL statement or a stored procedure called by an <xref:System.Data.OleDb.OleDbCommand> when <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> is set to Text.</span></span> <span data-ttu-id="8b7b2-191">この場合、疑問符 (?) プレース ホルダーを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-191">In this case, the question mark (?) placeholder must be used.</span></span> <span data-ttu-id="8b7b2-192">例:</span><span class="sxs-lookup"><span data-stu-id="8b7b2-192">For example:</span></span>  
  
 `SELECT * FROM Customers WHERE CustomerID = ?`  
  
 <span data-ttu-id="8b7b2-193">そのため、順序<xref:System.Data.OleDb.OleDbParameter>オブジェクトに追加されます、<xref:System.Data.OleDb.OleDbParameterCollection>パラメーターの疑問符 (?) プレース ホルダーの位置に直接対応する必要があります。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-193">Therefore, the order in which <xref:System.Data.OleDb.OleDbParameter> objects are added to the <xref:System.Data.OleDb.OleDbParameterCollection> must directly correspond to the position of the question mark placeholder for the parameter.</span></span> <span data-ttu-id="8b7b2-194">詳細については、次を参照してください。[構成パラメーターとパラメーターのデータ型](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md)です。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-194">For more information, see [Configuring Parameters and Parameter Data Types](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8b7b2-195">値が正しい <see cref="P:System.Data.OleDb.OleDbCommand.CommandType" /> ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b7b2-195">The value was not a valid <see cref="P:System.Data.OleDb.OleDbCommand.CommandType" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbConnection Connection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OleDb.OleDbConnection Connection" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbCommand.Connection" />
      <MemberSignature Language="VB.NET" Value="Public Property Connection As OleDbConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OleDb::OleDbConnection ^ Connection { System::Data::OleDb::OleDbConnection ^ get(); void set(System::Data::OleDb::OleDbConnection ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DbConnectionEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8b7b2-196">この <see cref="T:System.Data.OleDb.OleDbCommand" /> のインスタンスで使用する <see cref="T:System.Data.OleDb.OleDbConnection" /> を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b7b2-196">Gets or sets the <see cref="T:System.Data.OleDb.OleDbConnection" /> used by this instance of the <see cref="T:System.Data.OleDb.OleDbCommand" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8b7b2-197">データ ソースへの接続。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b7b2-197">The connection to a data source.</span>
          </span>
          <span data-ttu-id="8b7b2-198">既定値は <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b7b2-198">The default value is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b7b2-199">設定することはできません、 <xref:System.Data.OleDb.OleDbCommand.Connection%2A>、<xref:System.Data.OleDb.OleDbCommand.CommandType%2A>と<xref:System.Data.OleDb.OleDbCommand.CommandText%2A>プロパティの場合は、現在の接続で実行またはフェッチ操作が実行されます。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-199">You cannot set the <xref:System.Data.OleDb.OleDbCommand.Connection%2A>, <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> and <xref:System.Data.OleDb.OleDbCommand.CommandText%2A> properties if the current connection is performing an execute or fetch operation.</span></span>  
  
 <span data-ttu-id="8b7b2-200">トランザクションの進行中に <xref:System.Data.OleDb.OleDbCommand.Connection%2A> を設定した場合、<xref:System.Data.OleDb.OleDbCommand.Transaction%2A> プロパティが NULL でなければ、<xref:System.InvalidOperationException> が生成されます。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-200">If you set <xref:System.Data.OleDb.OleDbCommand.Connection%2A> while a transaction is in progress and the <xref:System.Data.OleDb.OleDbCommand.Transaction%2A> property is not null, an <xref:System.InvalidOperationException> is generated.</span></span> <span data-ttu-id="8b7b2-201"><xref:System.Data.OleDb.OleDbCommand.Transaction%2A> プロパティが NULL でない場合、トランザクションが既にコミット済みまたはロールバック済みであれば、<xref:System.Data.OleDb.OleDbCommand.Transaction%2A> は NULL に設定されます。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-201">If the <xref:System.Data.OleDb.OleDbCommand.Transaction%2A> property is not null and the transaction has already been committed or rolled back, <xref:System.Data.OleDb.OleDbCommand.Transaction%2A> is set to null.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8b7b2-202">次の例を作成、<xref:System.Data.OleDb.OleDbCommand>し、一部のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-202">The following example creates an <xref:System.Data.OleDb.OleDbCommand> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData OleDbCommand.Connection Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.Connection Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbCommand.Connection Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.Connection Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8b7b2-203">トランザクションの進行中に <see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> プロパティが変更されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b7b2-203">The <see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> property was changed while a transaction was in progress.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateDbParameter">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbParameter CreateDbParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbParameter CreateDbParameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommand.CreateDbParameter" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateDbParameter () As DbParameter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbParameter ^ CreateDbParameter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbParameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateParameter">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbParameter CreateParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OleDb.OleDbParameter CreateParameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommand.CreateParameter" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateParameter () As OleDbParameter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OleDb::OleDbParameter ^ CreateParameter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbParameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8b7b2-204">
            <see cref="T:System.Data.OleDb.OleDbParameter" /> オブジェクトの新しいインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b7b2-204">Creates a new instance of an <see cref="T:System.Data.OleDb.OleDbParameter" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b7b2-205">
            <see cref="T:System.Data.OleDb.OleDbParameter" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b7b2-205">An <see cref="T:System.Data.OleDb.OleDbParameter" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b7b2-206"><xref:System.Data.OleDb.OleDbCommand.CreateParameter%2A>メソッドは、厳密に型指定されたバージョンの<xref:System.Data.IDbCommand.CreateParameter%2A>します。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-206">The <xref:System.Data.OleDb.OleDbCommand.CreateParameter%2A> method is a strongly typed version of <xref:System.Data.IDbCommand.CreateParameter%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DbConnection">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbConnection DbConnection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbConnection DbConnection" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbCommand.DbConnection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Property DbConnection As DbConnection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbConnection ^ DbConnection { System::Data::Common::DbConnection ^ get(); void set(System::Data::Common::DbConnection ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DbParameterCollection">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbParameterCollection DbParameterCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbParameterCollection DbParameterCollection" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbCommand.DbParameterCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DbParameterCollection As DbParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbParameterCollection ^ DbParameterCollection { System::Data::Common::DbParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DbTransaction">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbTransaction DbTransaction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbTransaction DbTransaction" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbCommand.DbTransaction" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Property DbTransaction As DbTransaction" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbTransaction ^ DbTransaction { System::Data::Common::DbTransaction ^ get(); void set(System::Data::Common::DbTransaction ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbTransaction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DesignTimeVisible">
      <MemberSignature Language="C#" Value="public override bool DesignTimeVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DesignTimeVisible" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbCommand.DesignTimeVisible" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property DesignTimeVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool DesignTimeVisible { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8b7b2-207">コマンド オブジェクトをカスタム Windows フォーム デザイナー コントロールに表示する必要があるかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b7b2-207">Gets or sets a value that indicates whether the command object should be visible in a customized Windows Forms Designer control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8b7b2-208">コントロールにコマンド オブジェクトを表示するかどうかを示す値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b7b2-208">A value that indicates whether the command object should be visible in a control.</span>
          </span>
          <span data-ttu-id="8b7b2-209">既定値は、<see langword="true" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b7b2-209">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommand.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteDbDataReader">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbDataReader ExecuteDbDataReader (System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbDataReader ExecuteDbDataReader(valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommand.ExecuteDbDataReader(System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ExecuteDbDataReader (behavior As CommandBehavior) As DbDataReader" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbDataReader ^ ExecuteDbDataReader(System::Data::CommandBehavior behavior);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="behavior">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteNonQuery">
      <MemberSignature Language="C#" Value="public override int ExecuteNonQuery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ExecuteNonQuery() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommand.ExecuteNonQuery" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ExecuteNonQuery () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ExecuteNonQuery();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbCommand.ExecuteNonQuery</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8b7b2-210">
            <see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> に対して SQL ステートメントを実行し、影響を受けた行数を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b7b2-210">Executes an SQL statement against the <see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> and returns the number of rows affected.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b7b2-211">影響を受けた行の数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b7b2-211">The number of rows affected.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b7b2-212">使用することができます、<xref:System.Data.OleDb.OleDbCommand.ExecuteNonQuery%2A>たとえばカタログ操作を実行する、データベースの構造をクエリまたはテーブルなどのデータベース オブジェクトを作成またはを使用せず、データベース内のデータを変更する、 <xref:System.Data.DataSet> UPDATE、INSERT、または DELETE ステートメントを実行することによってです。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-212">You can use the <xref:System.Data.OleDb.OleDbCommand.ExecuteNonQuery%2A> to perform catalog operations, for example, to query the structure of a database or to create database objects such as tables, or to change the data in a database without using a <xref:System.Data.DataSet> by executing UPDATE, INSERT, or DELETE statements.</span></span>  
  
 <span data-ttu-id="8b7b2-213">ただし、<xref:System.Data.OleDb.OleDbCommand.ExecuteNonQuery%2A>行がない、すべての出力パラメーターを返しますまたは、返すデータ パラメーターにマップされている値が設定されます。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-213">Although the <xref:System.Data.OleDb.OleDbCommand.ExecuteNonQuery%2A> returns no rows, any output parameters or return values mapped to parameters are populated with data.</span></span>  
  
 <span data-ttu-id="8b7b2-214">UPDATE、INSERT、DELETE の各ステートメントで、戻り値はそのコマンドの影響を受ける行の数です。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-214">For UPDATE, INSERT, and DELETE statements, the return value is the number of rows affected by the command.</span></span> <span data-ttu-id="8b7b2-215">その他のすべての種類のステートメントでは、戻り値は -1 です。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-215">For all other types of statements, the return value is -1.</span></span> <span data-ttu-id="8b7b2-216">ロールバックが発生した場合、戻り値も-1 にです。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-216">If a rollback occurs, the return value is also -1.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8b7b2-217">次の例を作成、<xref:System.Data.OleDb.OleDbCommand>を使用してそれを実行および<xref:System.Data.OleDb.OleDbCommand.ExecuteNonQuery%2A>です。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-217">The following example creates an <xref:System.Data.OleDb.OleDbCommand> and then executes it using <xref:System.Data.OleDb.OleDbCommand.ExecuteNonQuery%2A>.</span></span> <span data-ttu-id="8b7b2-218">例には、UPDATE、INSERT、または削除など、SQL ステートメントを表す文字列と、データ ソースへの接続に使用する文字列が渡されます。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-218">The example is passed a string that is an SQL statement such as UPDATE, INSERT, or DELETE, and a string to use to connect to the data source.</span></span>  
  
 [!code-csharp[Classic WebData OleDbCommand.ExecuteNonQuery Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.ExecuteNonQuery Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbCommand.ExecuteNonQuery Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.ExecuteNonQuery Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8b7b2-219">接続が存在しません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b7b2-219">The connection does not exist.</span>
          </span>
          <span data-ttu-id="8b7b2-220">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b7b2-220">-or-</span>
          </span>
          <span data-ttu-id="8b7b2-221">接続が開かれていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b7b2-221">The connection is not open.</span>
          </span>
          <span data-ttu-id="8b7b2-222">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b7b2-222">-or-</span>
          </span>
          <span data-ttu-id="8b7b2-223">接続を登録した当初のトランザクション コンテキストとは異なるコンテキストでは、コマンドを実行できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b7b2-223">Cannot execute a command within a transaction context that differs from the context in which the connection was originally enlisted.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ExecuteReader">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8b7b2-224">
            <see cref="P:System.Data.OleDb.OleDbCommand.CommandText" /> を <see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> に送信し、<see cref="T:System.Data.OleDb.OleDbDataReader" /> を構築します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b7b2-224">Sends the <see cref="P:System.Data.OleDb.OleDbCommand.CommandText" /> to the <see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> and builds an <see cref="T:System.Data.OleDb.OleDbDataReader" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExecuteReader">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbDataReader ExecuteReader ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OleDb.OleDbDataReader ExecuteReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommand.ExecuteReader" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteReader () As OleDbDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OleDb::OleDbDataReader ^ ExecuteReader();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbDataReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8b7b2-225">
            <see cref="P:System.Data.OleDb.OleDbCommand.CommandText" /> を <see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> に送信し、<see cref="T:System.Data.OleDb.OleDbDataReader" /> を構築します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b7b2-225">Sends the <see cref="P:System.Data.OleDb.OleDbCommand.CommandText" /> to the <see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> and builds an <see cref="T:System.Data.OleDb.OleDbDataReader" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b7b2-226">
            <see cref="T:System.Data.OleDb.OleDbDataReader" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b7b2-226">An <see cref="T:System.Data.OleDb.OleDbDataReader" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b7b2-227">ときに、<xref:System.Data.OleDb.OleDbCommand.CommandType%2A>プロパティに設定されている`StoredProcedure`、<xref:System.Data.OleDb.OleDbCommand.CommandText%2A>プロパティは、ストアド プロシージャの名前に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-227">When the <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> property is set to `StoredProcedure`, the <xref:System.Data.OleDb.OleDbCommand.CommandText%2A> property should be set to the name of the stored procedure.</span></span> <span data-ttu-id="8b7b2-228">コマンドを呼び出すときにこのストアド プロシージャが実行される<xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A>です。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-228">The command executes this stored procedure when you call <xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A>.</span></span>  
  
 <span data-ttu-id="8b7b2-229">終了する前に、 <xref:System.Data.OleDb.OleDbConnection>、最初に閉じて、<xref:System.Data.OleDb.OleDbDataReader>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-229">Before you close the <xref:System.Data.OleDb.OleDbConnection>, first close the <xref:System.Data.OleDb.OleDbDataReader> object.</span></span> <span data-ttu-id="8b7b2-230">またを閉じる必要があります、<xref:System.Data.OleDb.OleDbDataReader>オブジェクトの再利用する予定のかどうか、<xref:System.Data.OleDb.OleDbCommand>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-230">You must also close the <xref:System.Data.OleDb.OleDbDataReader> object if you plan to reuse an <xref:System.Data.OleDb.OleDbCommand> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8b7b2-231">次の例を作成、 <xref:System.Data.OleDb.OleDbCommand>、してでは、SQL SELECT ステートメント、文字列と、データ ソースへの接続に使用する文字列を渡すことによって実行します。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-231">The following example creates an <xref:System.Data.OleDb.OleDbCommand>, and then executes it by passing a string that is an SQL SELECT statement, and a string to use to connect to the data source.</span></span>  
  
 [!code-csharp[Classic WebData OleDbCommand.ExecuteReader1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.ExecuteReader1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbCommand.ExecuteReader1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.ExecuteReader1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8b7b2-232">接続を登録した当初のトランザクション コンテキストとは異なるコンテキストでは、コマンドを実行できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b7b2-232">Cannot execute a command within a transaction context that differs from the context in which the connection was originally enlisted.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ExecuteReader">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbDataReader ExecuteReader (System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OleDb.OleDbDataReader ExecuteReader(valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommand.ExecuteReader(System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteReader (behavior As CommandBehavior) As OleDbDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OleDb::OleDbDataReader ^ ExecuteReader(System::Data::CommandBehavior behavior);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="behavior">
          <span data-ttu-id="8b7b2-233">
            <see cref="T:System.Data.CommandBehavior" /> 値のいずれか 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b7b2-233">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b7b2-234">
            <see cref="P:System.Data.OleDb.OleDbCommand.CommandText" /> を <see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> に送信し、<see cref="T:System.Data.CommandBehavior" /> 値のいずれかを使用して <see cref="T:System.Data.OleDb.OleDbDataReader" /> を構築します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b7b2-234">Sends the <see cref="P:System.Data.OleDb.OleDbCommand.CommandText" /> to the <see cref="P:System.Data.OleDb.OleDbCommand.Connection" />, and builds an <see cref="T:System.Data.OleDb.OleDbDataReader" /> using one of the <see cref="T:System.Data.CommandBehavior" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b7b2-235">
            <see cref="T:System.Data.OleDb.OleDbDataReader" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b7b2-235">An <see cref="T:System.Data.OleDb.OleDbDataReader" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b7b2-236">指定すると<xref:System.Data.CommandBehavior.SingleRow>で、<xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A>のメソッド、<xref:System.Data.OleDb.OleDbCommand>オブジェクト、.NET Framework Data Provider for OLE DB、OLE DB を使用してバインドを実行する**IRow**インターフェイスの使用可能になる場合。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-236">When you specify <xref:System.Data.CommandBehavior.SingleRow> with the <xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A> method of the <xref:System.Data.OleDb.OleDbCommand> object, the .NET Framework Data Provider for OLE DB performs binding using the OLE DB **IRow** interface if it is available.</span></span> <span data-ttu-id="8b7b2-237">それ以外の場合、使用して、 **IRowset**インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-237">Otherwise, it uses the **IRowset** interface.</span></span> <span data-ttu-id="8b7b2-238">SQL ステートメントが単一行のみを返すことが予期される場合、<xref:System.Data.CommandBehavior.SingleRow> を指定すると、アプリケーションのパフォーマンスも向上します。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-238">If your SQL statement is expected to return only a single row, specifying <xref:System.Data.CommandBehavior.SingleRow> can also improve application performance.</span></span>  
  
 <span data-ttu-id="8b7b2-239">ときに、<xref:System.Data.OleDb.OleDbCommand.CommandType%2A>プロパティに設定されている`StoredProcedure`、<xref:System.Data.OleDb.OleDbCommand.CommandText%2A>プロパティは、ストアド プロシージャの名前に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-239">When the <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> property is set to `StoredProcedure`, the <xref:System.Data.OleDb.OleDbCommand.CommandText%2A> property should be set to the name of the stored procedure.</span></span> <span data-ttu-id="8b7b2-240">コマンドを呼び出すときにこのストアド プロシージャが実行される<xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A>です。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-240">The command executes this stored procedure when you call <xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A>.</span></span>  
  
 <span data-ttu-id="8b7b2-241"><xref:System.Data.OleDb.OleDbDataReader>を効率的に読み込まれる大きなバイナリ値を有効にする、特殊なモードをサポートしています。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-241">The <xref:System.Data.OleDb.OleDbDataReader> supports a special mode that enables large binary values to be read efficiently.</span></span> <span data-ttu-id="8b7b2-242">詳細については、次を参照してください。、`SequentialAccess`設定<xref:System.Data.CommandBehavior>です。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-242">For more information, see the `SequentialAccess` setting for <xref:System.Data.CommandBehavior>.</span></span>  
  
 <span data-ttu-id="8b7b2-243">終了する前に、 <xref:System.Data.OleDb.OleDbConnection>、最初に閉じて、<xref:System.Data.OleDb.OleDbDataReader>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-243">Before you close the <xref:System.Data.OleDb.OleDbConnection>, first close the <xref:System.Data.OleDb.OleDbDataReader> object.</span></span> <span data-ttu-id="8b7b2-244">またを閉じる必要があります、<xref:System.Data.OleDb.OleDbDataReader>オブジェクトの再利用する予定のかどうか、<xref:System.Data.OleDb.OleDbCommand>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-244">You must also close the <xref:System.Data.OleDb.OleDbDataReader> object if you plan to reuse an <xref:System.Data.OleDb.OleDbCommand> object.</span></span> <span data-ttu-id="8b7b2-245">場合、<xref:System.Data.OleDb.OleDbDataReader>で作成された<xref:System.Data.CommandBehavior>'éý'`CloseConnection`を閉じて、<xref:System.Data.OleDb.OleDbDataReader>接続を自動的に閉じます。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-245">If the <xref:System.Data.OleDb.OleDbDataReader> is created with <xref:System.Data.CommandBehavior> set to `CloseConnection`, closing the <xref:System.Data.OleDb.OleDbDataReader> closes the connection automatically.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8b7b2-246">次の例を作成、 <xref:System.Data.OleDb.OleDbCommand>、してでは、TRANSACT-SQL SELECT ステートメントでは、文字列と、データ ソースへの接続に使用する文字列を渡すことによって実行します。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-246">The following example creates an <xref:System.Data.OleDb.OleDbCommand>, and then executes it by passing a string that is a Transact-SQL SELECT statement, and a string to use to connect to the data source.</span></span> <span data-ttu-id="8b7b2-247"><xref:System.Data.CommandBehavior> が <xref:System.Data.CommandBehavior.CloseConnection> に設定されます。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-247"><xref:System.Data.CommandBehavior> is set to <xref:System.Data.CommandBehavior.CloseConnection>.</span></span>  
  
 [!code-csharp[Classic WebData OleDbCommand.ExecuteReader2#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.ExecuteReader2/CS/mysample.cs#1)]
 [!code-vb[Classic WebData OleDbCommand.ExecuteReader2#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.ExecuteReader2/VB/mysample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8b7b2-248">接続を登録した当初のトランザクション コンテキストとは異なるコンテキストでは、コマンドを実行できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b7b2-248">Cannot execute a command within a transaction context that differs from the context in which the connection was originally enlisted.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ExecuteScalar">
      <MemberSignature Language="C#" Value="public override object ExecuteScalar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ExecuteScalar() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommand.ExecuteScalar" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ExecuteScalar () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ExecuteScalar();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbCommand.ExecuteScalar</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8b7b2-249">クエリを実行し、そのクエリが返す結果セットの最初の行にある最初の列を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b7b2-249">Executes the query, and returns the first column of the first row in the result set returned by the query.</span>
          </span>
          <span data-ttu-id="8b7b2-250">以降の列または行は無視されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b7b2-250">Additional columns or rows are ignored.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b7b2-251">結果セットの最初の行の最初の列。結果セットが空の場合は、null 参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b7b2-251">The first column of the first row in the result set, or a null reference if the result set is empty.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b7b2-252">使用して、<xref:System.Data.OleDb.OleDbCommand.ExecuteScalar%2A>など、単一の値を取得する方法をデータ ソースからの集計値。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-252">Use the <xref:System.Data.OleDb.OleDbCommand.ExecuteScalar%2A> method to retrieve a single value, for example, an aggregate value, from a data source.</span></span> <span data-ttu-id="8b7b2-253">使用するよりも少ないコードが必要です、<xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A>メソッド、およびによって返されるデータを使用して 1 つの値を生成するために必要な操作を実行すること、<xref:System.Data.OleDb.OleDbDataReader>です。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-253">This requires less code than using the <xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A> method, and then performing the operations that are required to generate the single value using the data returned by an <xref:System.Data.OleDb.OleDbDataReader>.</span></span>  
  
 <span data-ttu-id="8b7b2-254">一般的な<xref:System.Data.OleDb.OleDbCommand.ExecuteScalar%2A>クエリは、c# の例を次のようにフォーマットされていることができます。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-254">A typical <xref:System.Data.OleDb.OleDbCommand.ExecuteScalar%2A> query can be formatted as in the following C# example:</span></span>  
  
```  
CommandText = "SELECT COUNT(*) FROM region";  
Int32 count = (int32) ExecuteScalar();  
```  
  
   
  
## Examples  
 <span data-ttu-id="8b7b2-255">次の例を作成、<xref:System.Data.OleDb.OleDbCommand>を使用してそれを実行および<xref:System.Data.OleDb.OleDbCommand.ExecuteScalar%2A>です。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-255">The following example creates an <xref:System.Data.OleDb.OleDbCommand> and then executes it using <xref:System.Data.OleDb.OleDbCommand.ExecuteScalar%2A>.</span></span> <span data-ttu-id="8b7b2-256">例には、集計の結果を返す SQL ステートメントを表す文字列と、データ ソースへの接続に使用する文字列が渡されます。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-256">The example is passed a string that is an SQL statement that returns an aggregate result, and a string to use to connect to the data source.</span></span>  
  
 [!code-csharp[Classic WebData OleDbCommand.ExecuteScalar#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.ExecuteScalar/CS/mysample.cs#1)]
 [!code-vb[Classic WebData OleDbCommand.ExecuteScalar#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.ExecuteScalar/VB/mysample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8b7b2-257">接続を登録した当初のトランザクション コンテキストとは異なるコンテキストでは、コマンドを実行できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b7b2-257">Cannot execute a command within a transaction context that differs from the context in which the connection was originally enlisted.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbParameterCollection Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OleDb.OleDbParameterCollection Parameters" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbCommand.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parameters As OleDbParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OleDb::OleDbParameterCollection ^ Parameters { System::Data::OleDb::OleDbParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8b7b2-258">
            <see cref="T:System.Data.OleDb.OleDbParameterCollection" /> を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b7b2-258">Gets the <see cref="T:System.Data.OleDb.OleDbParameterCollection" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8b7b2-259">SQL ステートメントまたはストアド プロシージャのパラメーター。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b7b2-259">The parameters of the SQL statement or stored procedure.</span>
          </span>
          <span data-ttu-id="8b7b2-260">既定値は空のコレクションです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b7b2-260">The default is an empty collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b7b2-261">OLE DB .NET プロバイダーは、SQL ステートメントまたはによって呼び出されるストアド プロシージャにパラメーターを渡すの名前付きパラメーターをサポートしていません、<xref:System.Data.OleDb.OleDbCommand>とき<xref:System.Data.OleDb.OleDbCommand.CommandType%2A>に設定されている`Text`です。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-261">The OLE DB .NET Provider does not support named parameters for passing parameters to an SQL statement or a stored procedure called by an <xref:System.Data.OleDb.OleDbCommand> when <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> is set to `Text`.</span></span> <span data-ttu-id="8b7b2-262">この場合、疑問符 (?) プレース ホルダーを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-262">In this case, the question mark (?) placeholder must be used.</span></span> <span data-ttu-id="8b7b2-263">例:</span><span class="sxs-lookup"><span data-stu-id="8b7b2-263">For example:</span></span>  
  
 `SELECT * FROM Customers WHERE CustomerID = ?`  
  
 <span data-ttu-id="8b7b2-264">そのため、順序<xref:System.Data.OleDb.OleDbParameter>オブジェクトに追加されます、<xref:System.Data.OleDb.OleDbParameterCollection>コマンド テキスト内のパラメーターの疑問符 (?) プレース ホルダーの位置に直接対応する必要があります。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-264">Therefore, the order in which <xref:System.Data.OleDb.OleDbParameter> objects are added to the <xref:System.Data.OleDb.OleDbParameterCollection> must directly correspond to the position of the question mark placeholder for the parameter in the command text.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8b7b2-265">コレクション内のパラメーターが実行されるクエリの要件が一致しない場合、エラーが表示される場合があります。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-265">If the parameters in the collection do not match the requirements of the query to be executed, an error may result.</span></span>  
  
 <span data-ttu-id="8b7b2-266">詳細については、次を参照してください。[構成パラメーターとパラメーターのデータ型](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md)です。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-266">For more information, see [Configuring Parameters and Parameter Data Types](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8b7b2-267">次の例を作成、<xref:System.Data.OleDb.OleDbCommand>し、そのパラメーターを表示します。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-267">The following example creates an <xref:System.Data.OleDb.OleDbCommand> and displays its parameters.</span></span> <span data-ttu-id="8b7b2-268">これを実現する、メソッドに渡されます、 <xref:System.Data.OleDb.OleDbConnection>、クエリ文字列は、SQL SELECT ステートメントとの配列を<xref:System.Data.OleDb.OleDbParameter>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-268">To accomplish this, the method is passed an <xref:System.Data.OleDb.OleDbConnection>, a query string that is an SQL SELECT statement, and an array of <xref:System.Data.OleDb.OleDbParameter> objects.</span></span>  
  
 [!code-csharp[Classic WebData OleDbCommand.Parameters Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.Parameters Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbCommand.Parameters Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.Parameters Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Prepare">
      <MemberSignature Language="C#" Value="public override void Prepare ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Prepare() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommand.Prepare" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Prepare ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Prepare();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbCommand.Prepare</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8b7b2-269">コマンドの準備済み (またはコンパイル済み) のバージョンをデータ ソースに作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b7b2-269">Creates a prepared (or compiled) version of the command on the data source.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b7b2-270">場合、<xref:System.Data.OleDb.OleDbCommand.CommandType%2A>プロパティに設定されている`TableDirect`、<xref:System.Data.OleDb.OleDbCommand.Prepare%2A>何も行われません。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-270">If the <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> property is set to `TableDirect`, <xref:System.Data.OleDb.OleDbCommand.Prepare%2A> does nothing.</span></span> <span data-ttu-id="8b7b2-271">場合<xref:System.Data.OleDb.OleDbCommand.CommandType%2A>に設定されている`StoredProcedure`への呼び出し<xref:System.Data.OleDb.OleDbCommand.Prepare%2A>no-op をしまう可能性がありますが、成功する必要があります。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-271">If <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> is set to `StoredProcedure`, the call to <xref:System.Data.OleDb.OleDbCommand.Prepare%2A> should succeed, although it may cause a no-op.</span></span>  
  
 <span data-ttu-id="8b7b2-272">呼び出す前に<xref:System.Data.OleDb.OleDbCommand.Prepare%2A>、準備されたステートメント内の各パラメーターのデータ型を指定します。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-272">Before you call <xref:System.Data.OleDb.OleDbCommand.Prepare%2A>, specify the data type of each parameter in the statement to be prepared.</span></span> <span data-ttu-id="8b7b2-273">可変長データ型を持つパラメーターごとに設定する必要があります、**サイズ**プロパティを必要な最大サイズ。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-273">For each parameter that has a variable length data type, you must set the **Size** property to the maximum size needed.</span></span> <span data-ttu-id="8b7b2-274"><xref:System.Data.OleDb.OleDbCommand.Prepare%2A> これらの条件が満たされない場合は、エラーを返します。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-274"><xref:System.Data.OleDb.OleDbCommand.Prepare%2A> returns an error if these conditions are not met.</span></span>  
  
 <span data-ttu-id="8b7b2-275">呼び出す場合は、`Execute`メソッドを呼び出した後<xref:System.Data.OleDb.OleDbCommand.Prepare%2A>、パラメーターの値がで指定された値より大きい、**サイズ**プロパティは、パラメーターの指定した元のサイズを自動的に切り捨てられます、切り捨てエラーは返されません。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-275">If you call an `Execute` method after you call <xref:System.Data.OleDb.OleDbCommand.Prepare%2A>, any parameter value that is larger than the value specified by the **Size** property is automatically truncated to the original specified size of the parameter, and no truncation errors are returned.</span></span>  
  
 <span data-ttu-id="8b7b2-276">出力では、(準備またはない) かどうかをパラメーター ユーザー指定のデータ型である必要があります。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-276">Output parameters (whether prepared or not) must have a user-specified data type.</span></span> <span data-ttu-id="8b7b2-277">可変長データ型を指定する場合は、最大値も指定する必要があります**サイズ**です。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-277">If you specify a variable length data type, you must also specify the maximum **Size**.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8b7b2-278">次の例を作成、<xref:System.Data.OleDb.OleDbCommand>し、接続を開きます。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-278">The following example creates an <xref:System.Data.OleDb.OleDbCommand> and opens the connection.</span></span> <span data-ttu-id="8b7b2-279">例は、SQL SELECT ステートメントを表す文字列と、データ ソースへの接続に使用する文字列を渡すことによって、データ ソース上のストアド プロシージャを準備します。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-279">The example then prepares a stored procedure on the data source by passing a string that is an SQL SELECT statement and a string to use to connect to the data source.</span></span>  
  
 [!code-csharp[Classic WebData OleDbCommand.Prepare Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.Prepare Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbCommand.Prepare Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.Prepare Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8b7b2-280">
            <see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> が設定されていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b7b2-280">The <see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> is not set.</span>
          </span>
          <span data-ttu-id="8b7b2-281">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b7b2-281">-or-</span>
          </span>
          <span data-ttu-id="8b7b2-282">
            <see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> が開いていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b7b2-282">The <see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> is not open.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ResetCommandTimeout">
      <MemberSignature Language="C#" Value="public void ResetCommandTimeout ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetCommandTimeout() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommand.ResetCommandTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetCommandTimeout ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetCommandTimeout();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8b7b2-283">
            <see cref="P:System.Data.OleDb.OleDbCommand.CommandTimeout" /> プロパティを既定値にリセットします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b7b2-283">Resets the <see cref="P:System.Data.OleDb.OleDbCommand.CommandTimeout" /> property to the default value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b7b2-284">既定値、<xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>は 30 秒です。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-284">The default value of the <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> is 30 seconds.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="System.Data.IDbCommand.ExecuteReader">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8b7b2-285">このメンバーの詳細については、「<see cref="M:System.Data.OleDb.OleDbCommand.System.Data.IDbCommand.ExecuteReader" />」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b7b2-285">For a description of this member, see <see cref="M:System.Data.OleDb.OleDbCommand.System.Data.IDbCommand.ExecuteReader" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b7b2-286">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-286">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8b7b2-287">これは、<xref:System.Data.OleDb.OleDbCommand> のインスタンスが <xref:System.Data.IDbCommand> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-287">It can be used only when the <xref:System.Data.OleDb.OleDbCommand> instance is cast to an <xref:System.Data.IDbCommand> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="System.Data.IDbCommand.ExecuteReader">
      <MemberSignature Language="C#" Value="System.Data.IDataReader IDbCommand.ExecuteReader ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Data.IDataReader System.Data.IDbCommand.ExecuteReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommand.System#Data#IDbCommand#ExecuteReader" />
      <MemberSignature Language="VB.NET" Value="Function ExecuteReader () As IDataReader Implements IDbCommand.ExecuteReader" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Data::IDataReader ^ System.Data.IDbCommand.ExecuteReader() = System::Data::IDbCommand::ExecuteReader;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbCommand.ExecuteReader</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDataReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8b7b2-288">このメンバーの詳細については、「<see cref="M:System.Data.IDbCommand.ExecuteReader" />」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b7b2-288">For a description of this member, see <see cref="M:System.Data.IDbCommand.ExecuteReader" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b7b2-289">
            <see cref="T:System.Data.IDataReader" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b7b2-289">An <see cref="T:System.Data.IDataReader" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b7b2-290">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-290">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8b7b2-291">これは、<xref:System.Data.OleDb.OleDbCommand> のインスタンスが <xref:System.Data.IDbCommand> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-291">It can be used only when the <xref:System.Data.OleDb.OleDbCommand> instance is cast to an <xref:System.Data.IDbCommand> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbCommand.ExecuteReader">
      <MemberSignature Language="C#" Value="System.Data.IDataReader IDbCommand.ExecuteReader (System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Data.IDataReader System.Data.IDbCommand.ExecuteReader(valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommand.System#Data#IDbCommand#ExecuteReader(System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Function ExecuteReader (behavior As CommandBehavior) As IDataReader Implements IDbCommand.ExecuteReader" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Data::IDataReader ^ System.Data.IDbCommand.ExecuteReader(System::Data::CommandBehavior behavior) = System::Data::IDbCommand::ExecuteReader;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbCommand.ExecuteReader(System.Data.CommandBehavior)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="behavior">
          <span data-ttu-id="8b7b2-292">
            <see cref="T:System.Data.CommandBehavior" /> 値のいずれか 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b7b2-292">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b7b2-293">
            <see cref="P:System.Data.IDbCommand.Connection" /> に対して <see cref="P:System.Data.IDbCommand.CommandText" /> を実行し、<see cref="T:System.Data.CommandBehavior" /> の値のいずれかを使用して <see cref="T:System.Data.IDataReader" /> をビルドします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b7b2-293">Executes the <see cref="P:System.Data.IDbCommand.CommandText" /> against the <see cref="P:System.Data.IDbCommand.Connection" />, and builds an <see cref="T:System.Data.IDataReader" /> using one of the <see cref="T:System.Data.CommandBehavior" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b7b2-294">
            <see cref="T:System.Data.IDataReader" /> 値の 1 つを使用して作成された <see cref="T:System.Data.CommandBehavior" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b7b2-294">An <see cref="T:System.Data.IDataReader" /> built using one of the <see cref="T:System.Data.CommandBehavior" /> values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b7b2-295">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-295">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8b7b2-296">これは、<xref:System.Data.OleDb.OleDbCommand> のインスタンスが <xref:System.Data.IDbCommand> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-296">It can be used only when the <xref:System.Data.OleDb.OleDbCommand> instance is cast to an <xref:System.Data.IDbCommand> interface.</span></span>  
  
 <span data-ttu-id="8b7b2-297">このメンバーの詳細については、「<xref:System.Data.IDbCommand.ExecuteReader%2A>」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-297">For a description of this member, see <xref:System.Data.IDbCommand.ExecuteReader%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommand.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8b7b2-298">このメンバーの詳細については、「<see cref="M:System.ICloneable.Clone" />」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b7b2-298">For a description of this member, see <see cref="M:System.ICloneable.Clone" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b7b2-299">このインスタンスのコピーである新しい <see cref="T:System.Object" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b7b2-299">A new <see cref="T:System.Object" /> that is a copy of this instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b7b2-300">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-300">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8b7b2-301">これは、<xref:System.Data.OleDb.OleDbCommand> のインスタンスが <xref:System.ICloneable> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-301">It can be used only when the <xref:System.Data.OleDb.OleDbCommand> instance is cast to an <xref:System.ICloneable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transaction">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbTransaction Transaction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OleDb.OleDbTransaction Transaction" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbCommand.Transaction" />
      <MemberSignature Language="VB.NET" Value="Public Property Transaction As OleDbTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OleDb::OleDbTransaction ^ Transaction { System::Data::OleDb::OleDbTransaction ^ get(); void set(System::Data::OleDb::OleDbTransaction ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbTransaction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8b7b2-302">
            <see cref="T:System.Data.OleDb.OleDbTransaction" /> が実行される <see cref="T:System.Data.OleDb.OleDbCommand" /> を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b7b2-302">Gets or sets the <see cref="T:System.Data.OleDb.OleDbTransaction" /> within which the <see cref="T:System.Data.OleDb.OleDbCommand" /> executes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8b7b2-303">
            <see cref="T:System.Data.OleDb.OleDbTransaction" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b7b2-303">The <see cref="T:System.Data.OleDb.OleDbTransaction" />.</span>
          </span>
          <span data-ttu-id="8b7b2-304">既定値は <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b7b2-304">The default value is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b7b2-305">設定することはできません、<xref:System.Data.OleDb.OleDbCommand.Transaction%2A>場合は、既に特定の値に設定し、コマンドが実行中はプロパティです。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-305">You cannot set the <xref:System.Data.OleDb.OleDbCommand.Transaction%2A> property if it is already set to a specific value, and the command is in the process of executing.</span></span> <span data-ttu-id="8b7b2-306">トランザクションのプロパティを設定する場合、<xref:System.Data.OleDb.OleDbTransaction>に同じ接続されていないオブジェクト<xref:System.Data.OleDb.OleDbConnection>として、<xref:System.Data.OleDb.OleDbCommand>オブジェクト、例外がスローされて、次回ステートメントを実行しようとします。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-306">If you set the transaction property to an <xref:System.Data.OleDb.OleDbTransaction> object that is not connected to the same <xref:System.Data.OleDb.OleDbConnection> as the <xref:System.Data.OleDb.OleDbCommand> object, an exception is thrown the next time that you try to execute a statement.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdatedRowSource">
      <MemberSignature Language="C#" Value="public override System.Data.UpdateRowSource UpdatedRowSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.UpdateRowSource UpdatedRowSource" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbCommand.UpdatedRowSource" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property UpdatedRowSource As UpdateRowSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::UpdateRowSource UpdatedRowSource { System::Data::UpdateRowSource get(); void set(System::Data::UpdateRowSource value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbCommand.UpdatedRowSource</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.UpdateRowSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8b7b2-307">
            <see cref="T:System.Data.DataRow" /> の <see langword="Update" /> メソッドで使用するときに、コマンドの結果を <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> に適用する方法を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b7b2-307">Gets or sets how command results are applied to the <see cref="T:System.Data.DataRow" /> when used by the <see langword="Update" /> method of the <see cref="T:System.Data.OleDb.OleDbDataAdapter" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8b7b2-308">
            <see cref="T:System.Data.UpdateRowSource" /> 値のいずれか 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b7b2-308">One of the <see cref="T:System.Data.UpdateRowSource" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b7b2-309">既定値<xref:System.Data.OleDb.OleDbCommand.UpdatedRowSource%2A>コマンドが自動的に生成される場合を除き、両方の値は (と同様、 <xref:System.Data.OleDb.OleDbCommandBuilder>) の場合、既定値は None です。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-309">The default <xref:System.Data.OleDb.OleDbCommand.UpdatedRowSource%2A> value is Both unless the command is automatically generated (as with the <xref:System.Data.OleDb.OleDbCommandBuilder>), in which case the default is None.</span></span>  
  
 <span data-ttu-id="8b7b2-310">使用する方法についての詳細、<xref:System.Data.OleDb.OleDbCommand.UpdatedRowSource%2A>プロパティを参照してください[DataAdapter パラメーター](~/docs/framework/data/adonet/dataadapter-parameters.md)です。</span><span class="sxs-lookup"><span data-stu-id="8b7b2-310">For more information about how to use the <xref:System.Data.OleDb.OleDbCommand.UpdatedRowSource%2A> property, see [DataAdapter Parameters](~/docs/framework/data/adonet/dataadapter-parameters.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8b7b2-311">入力された値が、<see cref="T:System.Data.UpdateRowSource" /> 値ではありませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b7b2-311">The value entered was not one of the <see cref="T:System.Data.UpdateRowSource" /> values.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>