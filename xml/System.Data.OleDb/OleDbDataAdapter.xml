<Type Name="OleDbDataAdapter" FullName="System.Data.OleDb.OleDbDataAdapter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0194a2bd3b968b32577535fb7ef20df04c38b1d2" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30390936" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class OleDbDataAdapter : System.Data.Common.DbDataAdapter, ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OleDbDataAdapter extends System.Data.Common.DbDataAdapter implements class System.Data.IDataAdapter, class System.Data.IDbDataAdapter, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Data.OleDb.OleDbDataAdapter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OleDbDataAdapter&#xA;Inherits DbDataAdapter&#xA;Implements ICloneable" />
  <TypeSignature Language="C++ CLI" Value="public ref class OleDbDataAdapter sealed : System::Data::Common::DbDataAdapter, ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbDataAdapter</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("RowUpdated")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.OleDbDataAdapterDesigner, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem("Microsoft.VSDesigner.Data.VS.OleDbDataAdapterToolboxItem, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="27e7d-101">
        <see cref="T:System.Data.DataSet" /> へのデータの格納およびデータ ソースの更新に使用される、一連のデータ コマンドおよびデータベース接続を表します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="27e7d-101">Represents a set of data commands and a database connection that are used to fill the <see cref="T:System.Data.DataSet" /> and update the data source.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27e7d-102"><xref:System.Data.OleDb.OleDbDataAdapter>間の仲介役として機能する<xref:System.Data.DataSet>とデータ ソースを取得して、データを保存します。</span><span class="sxs-lookup"><span data-stu-id="27e7d-102">The <xref:System.Data.OleDb.OleDbDataAdapter> serves as a bridge between a <xref:System.Data.DataSet> and data source for retrieving and saving data.</span></span> <span data-ttu-id="27e7d-103"><xref:System.Data.OleDb.OleDbDataAdapter>を使用してこのブリッジは、<xref:System.Data.Common.DbDataAdapter.Fill%2A>にデータ ソースからデータを読み込み、<xref:System.Data.DataSet>を使用して<xref:System.Data.Common.DbDataAdapter.Update%2A>で行われた変更を送信する、<xref:System.Data.DataSet>データ ソースに戻る。</span><span class="sxs-lookup"><span data-stu-id="27e7d-103">The <xref:System.Data.OleDb.OleDbDataAdapter> provides this bridge by using <xref:System.Data.Common.DbDataAdapter.Fill%2A> to load data from the data source into the <xref:System.Data.DataSet>, and using <xref:System.Data.Common.DbDataAdapter.Update%2A> to send changes made in the <xref:System.Data.DataSet> back to the data source.</span></span>  
  
 <span data-ttu-id="27e7d-104">ときに、<xref:System.Data.OleDb.OleDbDataAdapter>塗りつぶします、 <xref:System.Data.DataSet>、まだ存在しない場合、適切なテーブルと、返されるデータの列に作成されます。</span><span class="sxs-lookup"><span data-stu-id="27e7d-104">When the <xref:System.Data.OleDb.OleDbDataAdapter> fills a <xref:System.Data.DataSet>, it will create the appropriate tables and columns for the returned data if they do not already exist.</span></span> <span data-ttu-id="27e7d-105">ただし、主キーの情報は含まれません、暗黙的に作成されたスキーマにしない限り、<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>プロパティに設定されている<xref:System.Data.MissingSchemaAction.AddWithKey>です。</span><span class="sxs-lookup"><span data-stu-id="27e7d-105">However, primary key information is not included in the implicitly created schema unless the <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> property is set to <xref:System.Data.MissingSchemaAction.AddWithKey>.</span></span> <span data-ttu-id="27e7d-106">必要があります、<xref:System.Data.OleDb.OleDbDataAdapter>のスキーマを作成、<xref:System.Data.DataSet>を使用してデータを入力する前に、主キーの情報を含む<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>です。</span><span class="sxs-lookup"><span data-stu-id="27e7d-106">You may also have the <xref:System.Data.OleDb.OleDbDataAdapter> create the schema of the <xref:System.Data.DataSet>, including primary key information, before filling it with data using <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>.</span></span> <span data-ttu-id="27e7d-107">詳細については、次を参照してください。[データセットへの既存の制約を追加する](~/docs/framework/data/adonet/adding-existing-constraints-to-a-dataset.md)です。</span><span class="sxs-lookup"><span data-stu-id="27e7d-107">For more information, see [Adding Existing Constraints to a DataSet](~/docs/framework/data/adonet/adding-existing-constraints-to-a-dataset.md).</span></span>  
  
 <span data-ttu-id="27e7d-108">ベース テーブルまたは主キーの情報は返されません、MSDataShape プロバイダーを含む一部の OLE DB プロバイダーに注意してください。</span><span class="sxs-lookup"><span data-stu-id="27e7d-108">Note that some OLE DB providers, including the MSDataShape provider, do not return base table or primary key information.</span></span> <span data-ttu-id="27e7d-109">したがって、<xref:System.Data.OleDb.OleDbDataAdapter>ことはできませんが正しく設定、<xref:System.Data.DataTable.PrimaryKey%2A>プロパティ上に作成される<xref:System.Data.DataTable>です。</span><span class="sxs-lookup"><span data-stu-id="27e7d-109">Therefore, the <xref:System.Data.OleDb.OleDbDataAdapter> cannot correctly set the <xref:System.Data.DataTable.PrimaryKey%2A> property on any created <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="27e7d-110">このような場合は、内のテーブルの主キーを明示的に指定する必要があります、<xref:System.Data.DataSet>です。</span><span class="sxs-lookup"><span data-stu-id="27e7d-110">In these cases you should explicitly specify primary keys for tables in the <xref:System.Data.DataSet>.</span></span>  
  
 <span data-ttu-id="27e7d-111"><xref:System.Data.OleDb.OleDbDataAdapter>も含まれています、 <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>、 <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A>、 <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A>、 <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A>、および<xref:System.Data.Common.DataAdapter.TableMappings%2A>プロパティが、読み込みとデータの更新を容易になります。</span><span class="sxs-lookup"><span data-stu-id="27e7d-111">The <xref:System.Data.OleDb.OleDbDataAdapter> also includes the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>, <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A>, <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A>, <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A>, and <xref:System.Data.Common.DataAdapter.TableMappings%2A> properties to facilitate the loading and updating of data.</span></span>  
  
 <span data-ttu-id="27e7d-112">インスタンスを作成する場合<xref:System.Data.OleDb.OleDbDataAdapter>プロパティは、初期値に設定されます。</span><span class="sxs-lookup"><span data-stu-id="27e7d-112">When you create an instance of <xref:System.Data.OleDb.OleDbDataAdapter>, properties are set to their initial values.</span></span> <span data-ttu-id="27e7d-113">これらの値の一覧は、次を参照してください。、<xref:System.Data.OleDb.OleDbDataAdapter>コンス トラクターです。</span><span class="sxs-lookup"><span data-stu-id="27e7d-113">For a list of these values, see the <xref:System.Data.OleDb.OleDbDataAdapter> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="27e7d-114">次の例では、 <xref:System.Data.OleDb.OleDbCommand>、<xref:System.Data.OleDb.OleDbDataAdapter>と<xref:System.Data.OleDb.OleDbConnection>、Access データ ソースからレコードを選択し、設定を、<xref:System.Data.DataSet>選択した行にします。</span><span class="sxs-lookup"><span data-stu-id="27e7d-114">The following example uses the <xref:System.Data.OleDb.OleDbCommand>, <xref:System.Data.OleDb.OleDbDataAdapter> and <xref:System.Data.OleDb.OleDbConnection>, to select records from an Access data source, and populate a <xref:System.Data.DataSet> with the selected rows.</span></span> <span data-ttu-id="27e7d-115">塗りつぶされた<xref:System.Data.DataSet>次が返されます。</span><span class="sxs-lookup"><span data-stu-id="27e7d-115">The filled <xref:System.Data.DataSet> is then returned.</span></span> <span data-ttu-id="27e7d-116">これを行うには、メソッドが渡される初期化された<xref:System.Data.DataSet>、接続文字列、およびクエリ文字列では、SQL SELECT ステートメント。</span><span class="sxs-lookup"><span data-stu-id="27e7d-116">To accomplish this, the method is passed an initialized <xref:System.Data.DataSet>, a connection string, and a query string that is an SQL SELECT statement.</span></span>  
  
 [!code-csharp[Classic WebData OleDbDataAdapter Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataAdapter Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="27e7d-117">
            <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27e7d-117">Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbDataAdapter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbDataAdapter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="27e7d-118">
            <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27e7d-118">Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27e7d-119">インスタンスを作成する場合<xref:System.Data.OleDb.OleDbDataAdapter>、次の読み取り/書き込みプロパティは、次の初期値に設定されます。</span><span class="sxs-lookup"><span data-stu-id="27e7d-119">When you create an instance of <xref:System.Data.OleDb.OleDbDataAdapter>, the following read/write properties are set to the following initial values.</span></span>  
  
|<span data-ttu-id="27e7d-120">プロパティ</span><span class="sxs-lookup"><span data-stu-id="27e7d-120">Properties</span></span>|<span data-ttu-id="27e7d-121">初期値</span><span class="sxs-lookup"><span data-stu-id="27e7d-121">Initial value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|  
|<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|  
  
 <span data-ttu-id="27e7d-122">これらのプロパティを個別に呼び出してプロパティのいずれかの値を変更することができます。</span><span class="sxs-lookup"><span data-stu-id="27e7d-122">You can change the value of any of these properties through a separate call to the property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="27e7d-123">次の例を作成、<xref:System.Data.OleDb.OleDbDataAdapter>し、一部のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="27e7d-123">The following example creates an <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData OleDbDataAdapter.OleDbDataAdapter Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.OleDbDataAdapter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataAdapter.OleDbDataAdapter Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.OleDbDataAdapter Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbDataAdapter (System.Data.OleDb.OleDbCommand selectCommand);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.OleDb.OleDbCommand selectCommand) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.Data.OleDb.OleDbCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (selectCommand As OleDbCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbDataAdapter(System::Data::OleDb::OleDbCommand ^ selectCommand);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="selectCommand" Type="System.Data.OleDb.OleDbCommand" />
      </Parameters>
      <Docs>
        <param name="selectCommand">
          <span data-ttu-id="27e7d-124">SELECT ステートメントまたはストアド プロシージャである <see cref="T:System.Data.OleDb.OleDbCommand" />。これは、<see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /> の <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> プロパティとして設定されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27e7d-124">An <see cref="T:System.Data.OleDb.OleDbCommand" /> that is a SELECT statement or stored procedure, and is set as the <see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /> property of the <see cref="T:System.Data.OleDb.OleDbDataAdapter" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27e7d-125">
            <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> プロパティとして <see cref="T:System.Data.OleDb.OleDbCommand" /> を指定して、<see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27e7d-125">Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> class with the specified <see cref="T:System.Data.OleDb.OleDbCommand" /> as the <see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /> property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27e7d-126">この実装、<xref:System.Data.OleDb.OleDbDataAdapter>コンス トラクターのセット、<xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>プロパティで指定された値を`selectCommand`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="27e7d-126">This implementation of the <xref:System.Data.OleDb.OleDbDataAdapter> constructor sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> property to the value specified in the `selectCommand` parameter.</span></span>  
  
 <span data-ttu-id="27e7d-127">インスタンスを作成する場合<xref:System.Data.OleDb.OleDbDataAdapter>、次の読み取り/書き込みプロパティは、次の初期値に設定されます。</span><span class="sxs-lookup"><span data-stu-id="27e7d-127">When you create an instance of <xref:System.Data.OleDb.OleDbDataAdapter>, the following read/write properties are set to the following initial values.</span></span>  
  
|<span data-ttu-id="27e7d-128">プロパティ</span><span class="sxs-lookup"><span data-stu-id="27e7d-128">Properties</span></span>|<span data-ttu-id="27e7d-129">初期値</span><span class="sxs-lookup"><span data-stu-id="27e7d-129">Initial value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|  
|<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|  
  
 <span data-ttu-id="27e7d-130">これらのプロパティを個別に呼び出してプロパティのいずれかの値を変更することができます。</span><span class="sxs-lookup"><span data-stu-id="27e7d-130">You can change the value of any of these properties through a separate call to the property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="27e7d-131">次の例を作成、<xref:System.Data.OleDb.OleDbDataAdapter>し、一部のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="27e7d-131">The following example creates an <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData OleDbDataAdapter.OleDbDataAdapter1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.OleDbDataAdapter1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataAdapter.OleDbDataAdapter1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.OleDbDataAdapter1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbDataAdapter (string selectCommandText, System.Data.OleDb.OleDbConnection selectConnection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string selectCommandText, class System.Data.OleDb.OleDbConnection selectConnection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.Data.OleDb.OleDbConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (selectCommandText As String, selectConnection As OleDbConnection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbDataAdapter(System::String ^ selectCommandText, System::Data::OleDb::OleDbConnection ^ selectConnection);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="selectCommandText" Type="System.String" />
        <Parameter Name="selectConnection" Type="System.Data.OleDb.OleDbConnection" />
      </Parameters>
      <Docs>
        <param name="selectCommandText">
          <span data-ttu-id="27e7d-132">SQL SELECT ステートメントまたはストアド プロシージャである文字列。この文字列は、<see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /> の <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> プロパティに使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27e7d-132">A string that is an SQL SELECT statement or stored procedure to be used by the <see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /> property of the <see cref="T:System.Data.OleDb.OleDbDataAdapter" />.</span>
          </span>
        </param>
        <param name="selectConnection">
          <span data-ttu-id="27e7d-133">接続を表す <see cref="T:System.Data.OleDb.OleDbConnection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27e7d-133">An <see cref="T:System.Data.OleDb.OleDbConnection" /> that represents the connection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27e7d-134">
            <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> を使用して、<see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27e7d-134">Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> class with a <see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27e7d-135">この実装、<xref:System.Data.OleDb.OleDbDataAdapter>開閉、<xref:System.Data.OleDb.OleDbConnection>がまだ開いていない場合。</span><span class="sxs-lookup"><span data-stu-id="27e7d-135">This implementation of the <xref:System.Data.OleDb.OleDbDataAdapter> opens and closes an <xref:System.Data.OleDb.OleDbConnection> if it is not already open.</span></span> <span data-ttu-id="27e7d-136">これを呼び出す必要のあるアプリケーションで利用する、 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 2 つ以上のメソッド<xref:System.Data.OleDb.OleDbDataAdapter>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="27e7d-136">This can be useful in an application that must call the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method for two or more <xref:System.Data.OleDb.OleDbDataAdapter> objects.</span></span> <span data-ttu-id="27e7d-137">場合、<xref:System.Data.OleDb.OleDbConnection>は既に開かれている、明示的に呼び出す必要があります<xref:System.Data.OleDb.OleDbConnection.Close%2A>または**Dispose**を閉じます。</span><span class="sxs-lookup"><span data-stu-id="27e7d-137">If the <xref:System.Data.OleDb.OleDbConnection> is already open, you must explicitly call <xref:System.Data.OleDb.OleDbConnection.Close%2A> or **Dispose** to close it.</span></span>  
  
 <span data-ttu-id="27e7d-138">インスタンスを作成する場合<xref:System.Data.OleDb.OleDbDataAdapter>、次の読み取り/書き込みプロパティは、次の初期値に設定されます。</span><span class="sxs-lookup"><span data-stu-id="27e7d-138">When you create an instance of <xref:System.Data.OleDb.OleDbDataAdapter>, the following read/write properties are set to the following initial values.</span></span>  
  
|<span data-ttu-id="27e7d-139">プロパティ</span><span class="sxs-lookup"><span data-stu-id="27e7d-139">Properties</span></span>|<span data-ttu-id="27e7d-140">初期値</span><span class="sxs-lookup"><span data-stu-id="27e7d-140">Initial value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|  
|<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|  
  
 <span data-ttu-id="27e7d-141">これらのプロパティをプロパティに別個の呼び出しのいずれかの値を変更することができます。</span><span class="sxs-lookup"><span data-stu-id="27e7d-141">You can change the value of either of these properties through a separate call to the property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="27e7d-142">次の例を作成、<xref:System.Data.OleDb.OleDbDataAdapter>し、一部のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="27e7d-142">The following example creates an <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData OleDbDataAdapter.OleDbDataAdapter3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.OleDbDataAdapter3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataAdapter.OleDbDataAdapter3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.OleDbDataAdapter3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbDataAdapter (string selectCommandText, string selectConnectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string selectCommandText, string selectConnectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (selectCommandText As String, selectConnectionString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbDataAdapter(System::String ^ selectCommandText, System::String ^ selectConnectionString);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="selectCommandText" Type="System.String" />
        <Parameter Name="selectConnectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="selectCommandText">
          <span data-ttu-id="27e7d-143">SQL SELECT ステートメントまたはストアド プロシージャである文字列。この文字列は、<see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /> の <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> プロパティに使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27e7d-143">A string that is an SQL SELECT statement or stored procedure to be used by the <see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /> property of the <see cref="T:System.Data.OleDb.OleDbDataAdapter" />.</span>
          </span>
        </param>
        <param name="selectConnectionString">
          <span data-ttu-id="27e7d-144">接続文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27e7d-144">The connection string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27e7d-145">
            <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> を使用して、<see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27e7d-145">Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> class with a <see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27e7d-146">このオーバー ロード、<xref:System.Data.OleDb.OleDbDataAdapter>コンス トラクターを使用して、`selectConnectionString`を設定するパラメーター、<xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="27e7d-146">This overload of the <xref:System.Data.OleDb.OleDbDataAdapter> constructor uses the `selectConnectionString` parameter to set the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> property.</span></span> <span data-ttu-id="27e7d-147">ただし、接続は開かれません。</span><span class="sxs-lookup"><span data-stu-id="27e7d-147">However, it does not open the connection.</span></span> <span data-ttu-id="27e7d-148">引き続き開く必要があります明示的に接続します。</span><span class="sxs-lookup"><span data-stu-id="27e7d-148">You still must explicitly open the connection.</span></span>  
  
 <span data-ttu-id="27e7d-149">インスタンスを作成する場合<xref:System.Data.OleDb.OleDbDataAdapter>、次の読み取り/書き込みプロパティは、次の初期値に設定されます。</span><span class="sxs-lookup"><span data-stu-id="27e7d-149">When you create an instance of <xref:System.Data.OleDb.OleDbDataAdapter>, the following read/write properties are set to the following initial values.</span></span>  
  
|<span data-ttu-id="27e7d-150">プロパティ</span><span class="sxs-lookup"><span data-stu-id="27e7d-150">Properties</span></span>|<span data-ttu-id="27e7d-151">初期値</span><span class="sxs-lookup"><span data-stu-id="27e7d-151">Initial value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|  
|<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|  
  
 <span data-ttu-id="27e7d-152">これらのプロパティを個別に呼び出してプロパティのいずれかの値を変更することができます。</span><span class="sxs-lookup"><span data-stu-id="27e7d-152">You can change the value of any of these properties through a separate call to the property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="27e7d-153">次の例を作成、<xref:System.Data.OleDb.OleDbDataAdapter>し、一部のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="27e7d-153">The following example creates an <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData OleDbDataAdapter.OleDbDataAdapter2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.OleDbDataAdapter2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataAdapter.OleDbDataAdapter2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.OleDbDataAdapter2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRowUpdatedEvent">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.RowUpdatedEventArgs CreateRowUpdatedEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.RowUpdatedEventArgs CreateRowUpdatedEvent(class System.Data.DataRow dataRow, class System.Data.IDbCommand command, valuetype System.Data.StatementType statementType, class System.Data.Common.DataTableMapping tableMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::RowUpdatedEventArgs ^ CreateRowUpdatedEvent(System::Data::DataRow ^ dataRow, System::Data::IDbCommand ^ command, System::Data::StatementType statementType, System::Data::Common::DataTableMapping ^ tableMapping);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.RowUpdatedEventArgs</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRow" Type="System.Data.DataRow" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="tableMapping" Type="System.Data.Common.DataTableMapping" />
      </Parameters>
      <Docs>
        <param name="dataRow">To be added.</param>
        <param name="command">To be added.</param>
        <param name="statementType">To be added.</param>
        <param name="tableMapping">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRowUpdatingEvent">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.RowUpdatingEventArgs CreateRowUpdatingEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.RowUpdatingEventArgs CreateRowUpdatingEvent(class System.Data.DataRow dataRow, class System.Data.IDbCommand command, valuetype System.Data.StatementType statementType, class System.Data.Common.DataTableMapping tableMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::RowUpdatingEventArgs ^ CreateRowUpdatingEvent(System::Data::DataRow ^ dataRow, System::Data::IDbCommand ^ command, System::Data::StatementType statementType, System::Data::Common::DataTableMapping ^ tableMapping);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.RowUpdatingEventArgs</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRow" Type="System.Data.DataRow" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="tableMapping" Type="System.Data.Common.DataTableMapping" />
      </Parameters>
      <Docs>
        <param name="dataRow">To be added.</param>
        <param name="command">To be added.</param>
        <param name="statementType">To be added.</param>
        <param name="tableMapping">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbCommand DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OleDb.OleDbCommand DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteCommand As OleDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OleDb::OleDbCommand ^ DeleteCommand { System::Data::OleDb::OleDbCommand ^ get(); void set(System::Data::OleDb::OleDbCommand ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="27e7d-154">データ セットからレコードを削除するための SQL ステートメントまたはストアド プロシージャを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27e7d-154">Gets or sets an SQL statement or stored procedure for deleting records from the data set.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="27e7d-155">
            <see cref="T:System.Data.OleDb.OleDbCommand" /> 処理中に、<see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> 内の削除行に対応するデータ ソース内のレコードを削除するための <see cref="T:System.Data.DataSet" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27e7d-155">An <see cref="T:System.Data.OleDb.OleDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to delete records in the data source that correspond to deleted rows in the <see cref="T:System.Data.DataSet" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27e7d-156">中に<xref:System.Data.Common.DbDataAdapter.Update%2A>このプロパティを設定しないと、主キー情報が内に存在する場合は、 <xref:System.Data.DataSet>、<xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A>を設定する場合は、自動的に生成できます、<xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>プロパティと使用、<xref:System.Data.OleDb.OleDbCommandBuilder>です。</span><span class="sxs-lookup"><span data-stu-id="27e7d-156">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A> can be generated automatically if you set the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> property and use the <xref:System.Data.OleDb.OleDbCommandBuilder>.</span></span> <span data-ttu-id="27e7d-157">次に、追加のコマンドを設定しないことがによって生成される、<xref:System.Data.OleDb.OleDbCommandBuilder>です。</span><span class="sxs-lookup"><span data-stu-id="27e7d-157">Then, any additional commands that you do not set are generated by the <xref:System.Data.OleDb.OleDbCommandBuilder>.</span></span> <span data-ttu-id="27e7d-158">この生成ロジックで内に存在するキー列について、<xref:System.Data.DataSet>です。</span><span class="sxs-lookup"><span data-stu-id="27e7d-158">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="27e7d-159">詳細については、次を参照してください。 [Commandbuilder でのコマンドを生成する](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)です。</span><span class="sxs-lookup"><span data-stu-id="27e7d-159">For more information, see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="27e7d-160">ときに<xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A>が割り当てられている、以前に作成した<xref:System.Data.OleDb.OleDbCommand>、<xref:System.Data.OleDb.OleDbCommand>は複製されません。</span><span class="sxs-lookup"><span data-stu-id="27e7d-160">When <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A> is assigned to a previously created <xref:System.Data.OleDb.OleDbCommand>, the <xref:System.Data.OleDb.OleDbCommand> is not cloned.</span></span> <span data-ttu-id="27e7d-161"><xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A>以前に作成の参照を保持<xref:System.Data.OleDb.OleDbCommand>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="27e7d-161">The <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A> maintains a reference to the previously created <xref:System.Data.OleDb.OleDbCommand> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="27e7d-162">次の例を作成、<xref:System.Data.OleDb.OleDbDataAdapter>設定と、<xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>と<xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="27e7d-162">The following example creates an <xref:System.Data.OleDb.OleDbDataAdapter> and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A> properties.</span></span> <span data-ttu-id="27e7d-163">既に作成したことを前提としています、<xref:System.Data.OleDb.OleDbConnection>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="27e7d-163">It assumes that you have already created an <xref:System.Data.OleDb.OleDbConnection> object.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.DeleteCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.DeleteCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Fill">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="27e7d-164">ADO <see langword="Recordset" /> オブジェクトまたは <see langword="Record" /> オブジェクト内の行と一致するように、<see cref="T:System.Data.DataSet" /> 内の行を追加または更新します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27e7d-164">Adds or refreshes rows in the <see cref="T:System.Data.DataSet" /> to match those in an ADO <see langword="Recordset" /> or <see langword="Record" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public int Fill (System.Data.DataTable dataTable, object ADODBRecordSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Fill(class System.Data.DataTable dataTable, object ADODBRecordSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Fill(System::Data::DataTable ^ dataTable, System::Object ^ ADODBRecordSet);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
        <Parameter Name="ADODBRecordSet" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dataTable">
          <span data-ttu-id="27e7d-165">レコードおよび必要に応じてスキーマを格納するための <see cref="T:System.Data.DataTable" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27e7d-165">A <see cref="T:System.Data.DataTable" /> to fill with records and, if it is required, schema.</span>
          </span>
        </param>
        <param name="ADODBRecordSet">
          <span data-ttu-id="27e7d-166">ADO <see langword="Recordset" /> オブジェクトまたは <see langword="Record" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27e7d-166">An ADO <see langword="Recordset" /> or <see langword="Record" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27e7d-167">指定した <see cref="T:System.Data.DataTable" /> および ADO オブジェクトを使用して、ADO <see langword="Recordset" /> オブジェクトまたは <see langword="Record" /> オブジェクト内の行と一致するように、<see cref="T:System.Data.DataTable" /> 内の行を追加または更新します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27e7d-167">Adds or refreshes rows in a <see cref="T:System.Data.DataTable" /> to match those in an ADO <see langword="Recordset" /> or <see langword="Record" /> object using the specified <see cref="T:System.Data.DataTable" /> and ADO objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="27e7d-168">
            <see cref="T:System.Data.DataTable" /> で正常に更新された行数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27e7d-168">The number of rows successfully refreshed to the <see cref="T:System.Data.DataTable" />.</span>
          </span>
          <span data-ttu-id="27e7d-169">これには、行を返さないステートメントの影響を受ける行は含まれません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27e7d-169">This does not include rows affected by statements that do not return rows.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27e7d-170">ActiveX データ オブジェクト (ADO) と ADO.NET の間のリンクは、一方向の操作を ADO からデータをコピーすることで、<xref:System.Data.DataSet>が ADO.NET によって、データの更新を処理する必要があります。</span><span class="sxs-lookup"><span data-stu-id="27e7d-170">The link between ActiveX Data Objects (ADO) and ADO.NET is a one-way operation in that you can copy data from ADO to the <xref:System.Data.DataSet>, but any updates to the data must be handled by ADO.NET.</span></span>  
  
 <span data-ttu-id="27e7d-171">このオーバー ロード、<xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>メソッドには、入力は閉じません`Recordset`の完了時に、<xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>操作します。</span><span class="sxs-lookup"><span data-stu-id="27e7d-171">This overload of the <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> method does not close the input `Recordset` on completion of the <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> operation.</span></span>  
  
 <span data-ttu-id="27e7d-172">複数の結果のこの実装を返す SQL ステートメントのバッチを処理するときに<xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>と<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>の OLE DB.NET Framework データ プロバイダーは、最初の結果のみのスキーマ情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="27e7d-172">When handling batch SQL statements that return multiple results, this implementation of <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> and <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the OLE DB.NET Framework Data Provider retrieves schema information for only the first result.</span></span>  
  
 <span data-ttu-id="27e7d-173"><xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>操作は、指定したコピー先に行を追加<xref:System.Data.DataTable>内のオブジェクト、 <xref:System.Data.DataSet>、作成、<xref:System.Data.DataTable>オブジェクトのかどうかは既に存在しません。</span><span class="sxs-lookup"><span data-stu-id="27e7d-173">The <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> operation adds the rows to the specified destination <xref:System.Data.DataTable> object in the <xref:System.Data.DataSet>, creating the <xref:System.Data.DataTable> object if it does not already exist.</span></span> <span data-ttu-id="27e7d-174">作成するときに、<xref:System.Data.DataTable>オブジェクト、<xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>操作が通常は列名のメタデータのみを作成します。</span><span class="sxs-lookup"><span data-stu-id="27e7d-174">When you create a <xref:System.Data.DataTable> object, the <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> operation ordinarily creates only column name metadata.</span></span> <span data-ttu-id="27e7d-175">ただし場合、<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>プロパティに設定されている`AddWithKey`、適切なプライマリ キーと制約も作成されます。</span><span class="sxs-lookup"><span data-stu-id="27e7d-175">However, if the <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> property is set to `AddWithKey`, appropriate primary keys and constraints are also created.</span></span>  
  
 <span data-ttu-id="27e7d-176">使用することができます、<xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>で複数回、同じメソッド<xref:System.Data.DataTable>です。</span><span class="sxs-lookup"><span data-stu-id="27e7d-176">You can use the <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> method multiple times on the same <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="27e7d-177">主キーが存在する場合は、受信した行が既に存在する行と一致すると共にマージされます。</span><span class="sxs-lookup"><span data-stu-id="27e7d-177">If a primary key exists, incoming rows are merged with matching rows that already exist.</span></span> <span data-ttu-id="27e7d-178">主キーがない場合、受信行が、<xref:System.Data.DataTable>です。</span><span class="sxs-lookup"><span data-stu-id="27e7d-178">If no primary key exists, incoming rows are appended to the <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="27e7d-179">主キーの情報が存在する場合、重複する行が調整が行われ、に 1 回にのみ表示されます、<xref:System.Data.DataTable>に対応する、<xref:System.Data.DataSet>です。</span><span class="sxs-lookup"><span data-stu-id="27e7d-179">If primary key information is present, any duplicate rows are reconciled and only appear one time in the <xref:System.Data.DataTable> that corresponds to the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="27e7d-180">主キーの情報を設定するを通じて<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>を指定して、<xref:System.Data.DataTable.PrimaryKey%2A>のプロパティ、 <xref:System.Data.DataTable>、かを設定して、<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>プロパティを`AddWithKey`です。</span><span class="sxs-lookup"><span data-stu-id="27e7d-180">Primary key information may be set either through <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, by specifying the <xref:System.Data.DataTable.PrimaryKey%2A> property of the <xref:System.Data.DataTable>, or by setting the <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> property to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="27e7d-181"><xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> が OUTER JOIN の結果を返す場合、`DataAdapter` は、生成される <xref:System.Data.DataTable.PrimaryKey%2A> に <xref:System.Data.DataTable> 値を設定しません。</span><span class="sxs-lookup"><span data-stu-id="27e7d-181">If the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="27e7d-182">重複する行が正しく解決されるかどうかを確認する主キーを明示的に定義する必要があります。</span><span class="sxs-lookup"><span data-stu-id="27e7d-182">You must explicitly define the primary key to make sure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="27e7d-183">詳細については、次を参照してください。[主キーを定義する](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)です。</span><span class="sxs-lookup"><span data-stu-id="27e7d-183">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
 <span data-ttu-id="27e7d-184">.NET Framework Data Provider for OLE DB は正しく機能する`AddWithKey`は、主に列を決定し、ネイティブの OLE DB プロバイダー DBPROP_UNIQUEROWS プロパティを設定して必要な主キーの情報を取得する必要がありますで DBCOLUMN_KEYCOLUMN を確認するにはキー列、`IColumnsRowset`です。</span><span class="sxs-lookup"><span data-stu-id="27e7d-184">To function correctly with the .NET Framework Data Provider for OLE DB, `AddWithKey` requires that the native OLE DB provider obtains required primary key information by setting the DBPROP_UNIQUEROWS property, and then determines which columns are primary key columns by examining DBCOLUMN_KEYCOLUMN in the `IColumnsRowset`.</span></span> <span data-ttu-id="27e7d-185">また、ユーザーことがありますを明示的に設定ごとに主キー制約<xref:System.Data.DataTable>です。</span><span class="sxs-lookup"><span data-stu-id="27e7d-185">Alternatively the user may explicitly set the primary key constraints on each <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="27e7d-186">これによりの代わりに既存のレコードと一致する受信したレコードが更新されることを確認して追加されます。</span><span class="sxs-lookup"><span data-stu-id="27e7d-186">This makes sure that incoming records that match existing records are updated instead of appended.</span></span>  
  
 <span data-ttu-id="27e7d-187">場合、<xref:System.Data.OleDb.OleDbDataAdapter>重複する列を設定中に検出すると、<xref:System.Data.DataTable>のパターンを使用して、後続の列名が生成されます"*columnname*1"、"*columnname*2「,」*columnname*3"のようにします。</span><span class="sxs-lookup"><span data-stu-id="27e7d-187">If the <xref:System.Data.OleDb.OleDbDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="27e7d-188">空の列名を追加、 <xref:System.Data.DataTable>、空の文字列を使用して、最初の列の「1」、「2」、「3」、および後続の空の列のように続きます。</span><span class="sxs-lookup"><span data-stu-id="27e7d-188">Empty column names are added to the <xref:System.Data.DataTable>, using an empty string for the first column, followed by "1", "2", "3", and so on for the subsequent empty columns.</span></span>  
  
 <span data-ttu-id="27e7d-189">ADO では値`Recordset`または`Record`オブジェクトが共通に変換された言語の記憶域のランタイム型、<xref:System.Data.DataSet>です。</span><span class="sxs-lookup"><span data-stu-id="27e7d-189">Values in ADO `Recordset` or `Record` objects are converted to common language runtime types for storage in the <xref:System.Data.DataSet>.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="27e7d-190">このオーバー ロード、<xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>メソッドが暗黙的に呼び出していない`Close`fill 操作が完了すると、ADO オブジェクトでします。</span><span class="sxs-lookup"><span data-stu-id="27e7d-190">This overload of the <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> method does not implicitly call `Close` on the ADO object when the fill operation is complete.</span></span> <span data-ttu-id="27e7d-191">したがって、常に呼び出す`Close`ADO の使用が終了したときに`Recordset`または`Record`オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="27e7d-191">Therefore, always call `Close` when you are finished using ADO `Recordset` or `Record` objects.</span></span> <span data-ttu-id="27e7d-192">これにより、データ ソースへの接続を基になるが、適切なタイミングでリリースされ、既存の参照がまだ存在しているときに、ガベージ コレクションによって解放されるアンマネージの ADO オブジェクトによりアクセス違反を防ぐことができます。</span><span class="sxs-lookup"><span data-stu-id="27e7d-192">This makes sure that the underlying connection to a data source is released in a timely manner, and also prevents possible access violations because of unmanaged ADO objects being reclaimed by garbage collection when existing references still exist.</span></span>  
  
 <span data-ttu-id="27e7d-193">呼び出すと、`TableMappings.Add`メソッドを`DataAdapter`とソース テーブルのパラメーターを空の文字列に明示的にマップが正常にデータセットがソース テーブルを使用して、データセットが何も設定されます。</span><span class="sxs-lookup"><span data-stu-id="27e7d-193">When you call the `TableMappings.Add` method on a `DataAdapter` and you explicitly map the source table parameter to an empty string, the dataset is successfully filled using the source table, but the dataset will be populated with nothing.</span></span> <span data-ttu-id="27e7d-194">たとえば、次の例で`rDataSet`が何も設定されます。</span><span class="sxs-lookup"><span data-stu-id="27e7d-194">For example, in the following example, `rDataSet` will be populated with nothing.</span></span>  
  
```  
rAdapter.TableMappings.Add("source table", "");  
rAdapter.Fill(rDataSet, "source table");     
```  
  
 <span data-ttu-id="27e7d-195">この例では、複数の結果を処理する場合、結果をスキップする方法を示します。</span><span class="sxs-lookup"><span data-stu-id="27e7d-195">This example shows how you can skip a result when dealing with multiple results.</span></span>  
  
 <span data-ttu-id="27e7d-196">次の例では、<xref:System.Data.OleDb.OleDbDataAdapter>を埋める、 <xref:System.Data.DataTable> ADO を使用して`Recordset`です。</span><span class="sxs-lookup"><span data-stu-id="27e7d-196">The following example uses an <xref:System.Data.OleDb.OleDbDataAdapter> to fill a <xref:System.Data.DataTable> using an ADO `Recordset`.</span></span> <span data-ttu-id="27e7d-197">この例では、ADO を作成している`Recordset`です。</span><span class="sxs-lookup"><span data-stu-id="27e7d-197">This example assumes that you have created an ADO `Recordset`.</span></span>  
  
```vb  
Dim custDA As OleDbDataAdapter = New OleDbDataAdapter()  
     Dim custDS As DataSet = New DataSet  
     Dim custTable As DataTable = New DataTable("Customers")  
     custTable.Columns.Add("CustomerID", Type.GetType("System.String"))  
     custTable.Columns.Add("CompanyName", Type.GetType("System.String"))  
     custDS.Tables.Add(custTable)  
     'Use ADO objects from ADO library (msado15.dll) imported  
     ' as.NET library ADODB.dll using TlbImp.exe  
     Dim adoConn As ADODB.Connection = New ADODB.Connection()  
     Dim adoRS As ADODB.Recordset = New ADODB.Recordset()  
     adoConn.Open("Provider=SQLOLEDB;Data Source=localhost;Initial Catalog=Northwind;Integrated Security=SSPI;", "", "", -1)  
     adoRS.Open("SELECT CustomerID, CompanyName FROM Customers", adoConn, ADODB.CursorTypeEnum.adOpenForwardOnly, ADODB.LockTypeEnum.adLockReadOnly, 1)  
     custDA.Fill(custTable, adoRS)  
     adoRS.Close()  
     adoConn.Close()  
```  
  
```csharp  
OleDbDataAdapter custDA = new OleDbDataAdapter();  
     DataSet custDS = new DataSet();  
     DataTable custTable = new DataTable("Customers");  
     custTable.Columns.Add("CustomerID", typeof(String));  
     custTable.Columns.Add("CompanyName", typeof(String));  
     custDS.Tables.Add(custTable);  
     //Use ADO objects from ADO library (msado15.dll) imported  
     //  as.NET library ADODB.dll using TlbImp.exe  
     ADODB.Connection adoConn = new ADODB.Connection();  
     ADODB.Recordset adoRS = new ADODB.Recordset();  
     adoConn.Open("Provider=SQLOLEDB;Data Source=localhost;Initial Catalog=Northwind;Integrated Security=SSPI;", "", "", -1);  
     adoRS.Open("SELECT CustomerID, CompanyName FROM Customers", adoConn, ADODB.CursorTypeEnum.adOpenForwardOnly, ADODB.LockTypeEnum.adLockReadOnly, 1);  
     custDA.Fill(custTable, adoRS);  
     adoRS.Close();  
     adoConn.Close();  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public int Fill (System.Data.DataSet dataSet, object ADODBRecordSet, string srcTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Fill(class System.Data.DataSet dataSet, object ADODBRecordSet, string srcTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Fill(System::Data::DataSet ^ dataSet, System::Object ^ ADODBRecordSet, System::String ^ srcTable);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="ADODBRecordSet" Type="System.Object" />
        <Parameter Name="srcTable" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSet">
          <span data-ttu-id="27e7d-198">レコードおよび必要に応じてスキーマを格納するための <see cref="T:System.Data.DataSet" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27e7d-198">A <see cref="T:System.Data.DataSet" /> to fill with records and, if it is required, schema.</span>
          </span>
        </param>
        <param name="ADODBRecordSet">
          <span data-ttu-id="27e7d-199">ADO <see langword="Recordset" /> オブジェクトまたは <see langword="Record" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27e7d-199">An ADO <see langword="Recordset" /> or <see langword="Record" /> object.</span>
          </span>
        </param>
        <param name="srcTable">
          <span data-ttu-id="27e7d-200">テーブル マップに使用するソース テーブル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27e7d-200">The source table used for the table mappings.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27e7d-201">指定した <see cref="T:System.Data.DataSet" />、ADO オブジェクト、およびソース テーブル名を使用して、ADO <see langword="Recordset" /> オブジェクトまたは <see langword="Record" /> オブジェクト内の行と一致するように、<see cref="T:System.Data.DataSet" /> 内の行を追加または更新します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27e7d-201">Adds or refreshes rows in the <see cref="T:System.Data.DataSet" /> to match those in an ADO <see langword="Recordset" /> or <see langword="Record" /> object using the specified <see cref="T:System.Data.DataSet" />, ADO object, and source table name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="27e7d-202">
            <see cref="T:System.Data.DataSet" /> で正常に追加または更新された行数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27e7d-202">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span>
          </span>
          <span data-ttu-id="27e7d-203">これには、行を返さないステートメントの影響を受ける行は含まれません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27e7d-203">This does not include rows affected by statements that do not return rows.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27e7d-204">ActiveX データ オブジェクト (ADO) と ADO.NET の間のリンクは、一方向の操作を ADO からデータをコピーすることで、<xref:System.Data.DataSet>が ADO.NET によって、データの更新を処理する必要があります。</span><span class="sxs-lookup"><span data-stu-id="27e7d-204">The link between ActiveX Data Objects (ADO) and ADO.NET is a one-way operation in that you can copy data from ADO to the <xref:System.Data.DataSet>, but any updates to the data must be handled by ADO.NET.</span></span>  
  
 <span data-ttu-id="27e7d-205"><xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>メソッドは、呼び出すことによって、複数の結果を反復処理、`NextRecordset`メソッドを`Recordset`、入力を閉じる`Recordset`の完了時に、<xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>操作します。</span><span class="sxs-lookup"><span data-stu-id="27e7d-205">The <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> method iterates through multiple results by calling the `NextRecordset` method on the `Recordset`, closing the input `Recordset` on completion of the <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> operation.</span></span>  
  
 <span data-ttu-id="27e7d-206"><xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>操作は、指定したコピー先に行を追加<xref:System.Data.DataTable>内のオブジェクト、 <xref:System.Data.DataSet>、作成、<xref:System.Data.DataTable>オブジェクトのかどうかは既に存在しません。</span><span class="sxs-lookup"><span data-stu-id="27e7d-206">The <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> operation adds the rows to the specified destination <xref:System.Data.DataTable> object in the <xref:System.Data.DataSet>, creating the <xref:System.Data.DataTable> object if it does not already exist.</span></span> <span data-ttu-id="27e7d-207">作成するときに、<xref:System.Data.DataTable>オブジェクト、<xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>操作が通常は列名のメタデータのみを作成します。</span><span class="sxs-lookup"><span data-stu-id="27e7d-207">When you create a <xref:System.Data.DataTable> object, the <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> operation ordinarily creates only column name metadata.</span></span> <span data-ttu-id="27e7d-208">ただし場合、<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>プロパティに設定されている`AddWithKey`、適切なプライマリ キーと制約も作成されます。</span><span class="sxs-lookup"><span data-stu-id="27e7d-208">However, if the <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> property is set to `AddWithKey`, appropriate primary keys and constraints are also created.</span></span>  
  
 <span data-ttu-id="27e7d-209">主キーの情報が存在する場合、重複する行が調整が行われ、に 1 回にのみ表示されます、<xref:System.Data.DataTable>に対応する、<xref:System.Data.DataSet>です。</span><span class="sxs-lookup"><span data-stu-id="27e7d-209">If primary key information is present, any duplicate rows are reconciled and only appear one time in the <xref:System.Data.DataTable> that corresponds to the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="27e7d-210">主キーの情報を設定するを通じて<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>を指定して、<xref:System.Data.DataTable.PrimaryKey%2A>のプロパティ、 <xref:System.Data.DataTable>、かを設定して、<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>プロパティを`AddWithKey`です。</span><span class="sxs-lookup"><span data-stu-id="27e7d-210">Primary key information may be set either through <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, by specifying the <xref:System.Data.DataTable.PrimaryKey%2A> property of the <xref:System.Data.DataTable>, or by setting the <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> property to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="27e7d-211">.NET Framework Data Provider for OLE DB は正しく機能する`AddWithKey`DBPROP_UNIQUEROWS プロパティを設定して必要な主キーの情報を取得しは、主に列を特定するネイティブの OLE DB プロバイダーが必要で DBCOLUMN_KEYCOLUMN を確認するにはキー列、 **IColumnsRowset**です。</span><span class="sxs-lookup"><span data-stu-id="27e7d-211">To function correctly with the .NET Framework Data Provider for OLE DB, `AddWithKey` requires the native OLE DB provider to obtain required primary key information by setting the DBPROP_UNIQUEROWS property, and then determine which columns are primary key columns by examining DBCOLUMN_KEYCOLUMN in the **IColumnsRowset**.</span></span> <span data-ttu-id="27e7d-212">また、ユーザーことがありますを明示的に設定ごとに主キー制約<xref:System.Data.DataTable>です。</span><span class="sxs-lookup"><span data-stu-id="27e7d-212">Alternatively the user may explicitly set the primary key constraints on each <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="27e7d-213">これにより、既存のレコードと一致する入力レコードが、追加ではなく更新されるようになります。</span><span class="sxs-lookup"><span data-stu-id="27e7d-213">This ensures that incoming records that match existing records are updated instead of appended.</span></span>  
  
 <span data-ttu-id="27e7d-214"><xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> が OUTER JOIN の結果を返す場合、`DataAdapter` は、生成される <xref:System.Data.DataTable.PrimaryKey%2A> に <xref:System.Data.DataTable> 値を設定しません。</span><span class="sxs-lookup"><span data-stu-id="27e7d-214">If the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="27e7d-215">重複する行が正しく解決されるかどうかを確認する主キーを明示的に定義する必要があります。</span><span class="sxs-lookup"><span data-stu-id="27e7d-215">You must explicitly define the primary key to make sure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="27e7d-216">詳細については、次を参照してください。[主キーを定義する](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)です。</span><span class="sxs-lookup"><span data-stu-id="27e7d-216">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
 <span data-ttu-id="27e7d-217">場合、`Recordset`の開始する前に閉じ、<xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>操作、エラーは発生しません。</span><span class="sxs-lookup"><span data-stu-id="27e7d-217">If the `Recordset` is closed before the starting of the <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> operation, no error results.</span></span> <span data-ttu-id="27e7d-218">これは、複数の結果の処理に必要な行を返さないクエリが示されているため、閉じられたによって`Recordset`です。</span><span class="sxs-lookup"><span data-stu-id="27e7d-218">This is required for handling of multiple results, because queries that do not return rows are indicated by a closed `Recordset`.</span></span> <span data-ttu-id="27e7d-219"><xref:System.Data.OleDb.OleDbDataAdapter>呼び出すだけ`NextRecordset`閉じたで`Recordset`し処理を続行します。</span><span class="sxs-lookup"><span data-stu-id="27e7d-219">The <xref:System.Data.OleDb.OleDbDataAdapter> just calls `NextRecordset` on the closed `Recordset` and continues processing.</span></span>  
  
 <span data-ttu-id="27e7d-220">エラーの発生前に追加された行が残りますデータ セットの設定中にエラーが発生した場合、<xref:System.Data.DataSet>です。</span><span class="sxs-lookup"><span data-stu-id="27e7d-220">If an error is encountered while populating the data set, rows added before the occurrence of the error remain in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="27e7d-221">残りの操作は中止されます。</span><span class="sxs-lookup"><span data-stu-id="27e7d-221">The rest of the operation is aborted.</span></span>  
  
 <span data-ttu-id="27e7d-222">場合、<xref:System.Data.Common.DbDataAdapter>オブジェクトの設定中に重複した列を検出した、 <xref:System.Data.DataTable>、パターンを使用して、後続の列に名前が生成されます"*columnname*1"、"*columnname*2「,」*columnname*3"のようにします。</span><span class="sxs-lookup"><span data-stu-id="27e7d-222">If the <xref:System.Data.Common.DbDataAdapter> object encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="27e7d-223">配置された受信データに名前のない列が含まれている場合、<xref:System.Data.DataSet>に従ってパターン"Column1"、"Column2"などです。</span><span class="sxs-lookup"><span data-stu-id="27e7d-223">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="27e7d-224">複数の結果セットが追加されたとき、<xref:System.Data.DataSet>各結果セットは、個別のテーブルに配置されます。</span><span class="sxs-lookup"><span data-stu-id="27e7d-224">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="27e7d-225">追加の結果セットは整数値名を追加して、指定されたテーブル (たとえば、"Table"、"Table1"、"Table2"、およびなどです。) という名前です。</span><span class="sxs-lookup"><span data-stu-id="27e7d-225">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</span></span> <span data-ttu-id="27e7d-226">列とテーブルの名前を使用するアプリケーションは、これらの名前付けパターンとの競合が発生しないことを確認ください。</span><span class="sxs-lookup"><span data-stu-id="27e7d-226">Applications that use column and table names should make sure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="27e7d-227">ADO では値`Recordset`または`Record`オブジェクトが共通に変換された言語の記憶域のランタイム型、<xref:System.Data.DataSet>です。</span><span class="sxs-lookup"><span data-stu-id="27e7d-227">Values in ADO `Recordset` or `Record` objects are converted to common language runtime types for storage in the <xref:System.Data.DataSet>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="27e7d-228">このオーバー ロード、<xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>メソッドを暗黙的に呼び出します`Close`fill 操作が完了すると、ADO オブジェクトでします。</span><span class="sxs-lookup"><span data-stu-id="27e7d-228">This overload of the <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> method implicitly calls `Close` on the ADO object when the fill operation is complete.</span></span>  
  
 <span data-ttu-id="27e7d-229">次の例では、<xref:System.Data.OleDb.OleDbDataAdapter>を埋める、 <xref:System.Data.DataSet> ADO を使用して`Recordset`ADO は`Record`オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="27e7d-229">The following example uses an <xref:System.Data.OleDb.OleDbDataAdapter> to fill a <xref:System.Data.DataSet> using an ADO `Recordset` that is an ADO `Record` object.</span></span> <span data-ttu-id="27e7d-230">この例では、ADO を作成している`RecordSet`と`Record`オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="27e7d-230">This example assumes that you have created an ADO `RecordSet` and `Record` object.</span></span>  
  
```vb  
Dim custDA As OleDbDataAdapter = New OleDbDataAdapter()  
     Dim custDS As DataSet = New DataSet  
     'Use ADO objects from ADO library (msado15.dll) imported  
     ' as.NET library ADODB.dll using TlbImp.exe  
     Dim adoConn As ADODB.Connection = New ADODB.Connection()  
     Dim adoRS As ADODB.Recordset = New ADODB.Recordset()  
     adoConn.Open("Provider=SQLOLEDB;Data Source=localhost;Initial Catalog=Northwind;Integrated Security=SSPI;", "", "", -1)  
     adoRS.Open("SELECT * FROM Customers", adoConn, ADODB.CursorTypeEnum.adOpenForwardOnly, ADODB.LockTypeEnum.adLockReadOnly, 1)  
     custDA.Fill(custDS, adoRS, "Customers")  
     adoConn.Close()  
```  
  
```csharp  
OleDbDataAdapter custDA = new OleDbDataAdapter();  
     DataSet custDS = new DataSet();  
     //Use ADO objects from ADO library (msado15.dll) imported  
     // as.NET library ADODB.dll using TlbImp.exe  
     ADODB.Connection adoConn = new ADODB.Connection();  
     ADODB.Recordset adoRS = new ADODB.Recordset();  
     adoConn.Open("Provider=SQLOLEDB;Data Source=localhost;Initial Catalog=Northwind;Integrated Security=SSPI;", "", "", -1);  
     adoRS.Open("SELECT * FROM Customers", adoConn, ADODB.CursorTypeEnum.adOpenForwardOnly, ADODB.LockTypeEnum.adLockReadOnly, 1);  
     custDA.Fill(custDS, adoRS, "Customers");  
     adoConn.Close();  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.SystemException">
          <span data-ttu-id="27e7d-231">ソース テーブルが無効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27e7d-231">The source table is invalid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="InsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbCommand InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OleDb.OleDbCommand InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataAdapter.InsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertCommand As OleDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OleDb::OleDbCommand ^ InsertCommand { System::Data::OleDb::OleDbCommand ^ get(); void set(System::Data::OleDb::OleDbCommand ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="27e7d-232">データ ソースに新しいレコードを挿入するために使用する SQL ステートメントまたはストアド プロシージャを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27e7d-232">Gets or sets an SQL statement or stored procedure used to insert new records into the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="27e7d-233">
            <see cref="T:System.Data.OleDb.OleDbCommand" /> 処理中に、<see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> 内の新しい行に対応するデータ ソース内のレコードを挿入するための <see cref="T:System.Data.DataSet" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27e7d-233">An <see cref="T:System.Data.OleDb.OleDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to insert records in the data source that correspond to new rows in the <see cref="T:System.Data.DataSet" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27e7d-234">中に<xref:System.Data.Common.DbDataAdapter.Update%2A>このプロパティを設定しないと、主キー情報が内に存在する場合は、 <xref:System.Data.DataSet>、<xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A>を設定する場合は、自動的に生成できます、<xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>プロパティと使用、<xref:System.Data.OleDb.OleDbCommandBuilder>です。</span><span class="sxs-lookup"><span data-stu-id="27e7d-234">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> can be generated automatically if you set the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> property and use the <xref:System.Data.OleDb.OleDbCommandBuilder>.</span></span> <span data-ttu-id="27e7d-235">次に、追加のコマンドを設定しないことがによって生成される、<xref:System.Data.OleDb.OleDbCommandBuilder>です。</span><span class="sxs-lookup"><span data-stu-id="27e7d-235">Then, any additional commands that you do not set are generated by the <xref:System.Data.OleDb.OleDbCommandBuilder>.</span></span> <span data-ttu-id="27e7d-236">この生成ロジックで内に存在するキー列について、<xref:System.Data.DataSet>です。</span><span class="sxs-lookup"><span data-stu-id="27e7d-236">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="27e7d-237">詳細については、次を参照してください。 [Commandbuilder でのコマンドを生成する](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)です。</span><span class="sxs-lookup"><span data-stu-id="27e7d-237">For more information, see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="27e7d-238">ときに<xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A>が割り当てられている、以前に作成した<xref:System.Data.OleDb.OleDbCommand>、<xref:System.Data.OleDb.OleDbCommand>は複製されません。</span><span class="sxs-lookup"><span data-stu-id="27e7d-238">When <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> is assigned to a previously created <xref:System.Data.OleDb.OleDbCommand>, the <xref:System.Data.OleDb.OleDbCommand> is not cloned.</span></span> <span data-ttu-id="27e7d-239"><xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A>以前に作成の参照を保持<xref:System.Data.OleDb.OleDbCommand>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="27e7d-239">The <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> maintains a reference to the previously created <xref:System.Data.OleDb.OleDbCommand> object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="27e7d-240">これらの行に追加できますこのコマンドの実行には、行が返された場合、<xref:System.Data.DataSet>を設定する方法に応じて、<xref:System.Data.OleDb.OleDbCommand.UpdatedRowSource%2A>のプロパティ、<xref:System.Data.OleDb.OleDbCommand>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="27e7d-240">If execution of this command returns rows, these rows may be added to the <xref:System.Data.DataSet> depending on how you set the <xref:System.Data.OleDb.OleDbCommand.UpdatedRowSource%2A> property of the <xref:System.Data.OleDb.OleDbCommand> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="27e7d-241">次の例を作成、<xref:System.Data.OleDb.OleDbDataAdapter>設定と、<xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>と<xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="27e7d-241">The following example creates an <xref:System.Data.OleDb.OleDbDataAdapter> and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> properties.</span></span> <span data-ttu-id="27e7d-242">既に作成したことを前提としています、<xref:System.Data.OleDb.OleDbConnection>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="27e7d-242">It assumes that you have already created an <xref:System.Data.OleDb.OleDbConnection> object.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.InsertCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.InsertCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.InsertCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.InsertCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRowUpdated">
      <MemberSignature Language="C#" Value="protected override void OnRowUpdated (System.Data.Common.RowUpdatedEventArgs value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnRowUpdated(class System.Data.Common.RowUpdatedEventArgs value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnRowUpdated (value As RowUpdatedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnRowUpdated(System::Data::Common::RowUpdatedEventArgs ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.RowUpdatedEventArgs" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRowUpdating">
      <MemberSignature Language="C#" Value="protected override void OnRowUpdating (System.Data.Common.RowUpdatingEventArgs value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnRowUpdating(class System.Data.Common.RowUpdatingEventArgs value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnRowUpdating (value As RowUpdatingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnRowUpdating(System::Data::Common::RowUpdatingEventArgs ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.RowUpdatingEventArgs" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowUpdated">
      <MemberSignature Language="C#" Value="public event System.Data.OleDb.OleDbRowUpdatedEventHandler RowUpdated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.OleDb.OleDbRowUpdatedEventHandler RowUpdated" />
      <MemberSignature Language="DocId" Value="E:System.Data.OleDb.OleDbDataAdapter.RowUpdated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowUpdated As OleDbRowUpdatedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::OleDb::OleDbRowUpdatedEventHandler ^ RowUpdated;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbRowUpdatedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="27e7d-243">
            <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> 処理中に、データ ソースに対してコマンドが実行された後に発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27e7d-243">Occurs during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> after a command is executed against the data source.</span>
          </span>
          <span data-ttu-id="27e7d-244">更新処理が試行されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27e7d-244">The attempt to update is made.</span>
          </span>
          <span data-ttu-id="27e7d-245">そのため、イベントが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27e7d-245">Therefore, the event occurs.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27e7d-246">使用すると<xref:System.Data.Common.DbDataAdapter.Update%2A>、更新されたデータ行ごとに発生する 2 つのイベントがあります。</span><span class="sxs-lookup"><span data-stu-id="27e7d-246">When you use <xref:System.Data.Common.DbDataAdapter.Update%2A>, there are two events that occur per data row updated.</span></span> <span data-ttu-id="27e7d-247">実行の順序は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="27e7d-247">The order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="27e7d-248">内の値、<xref:System.Data.DataRow>パラメーターの値に移動されます。</span><span class="sxs-lookup"><span data-stu-id="27e7d-248">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="27e7d-249"><xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="27e7d-249">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="27e7d-250">コマンドを実行します。</span><span class="sxs-lookup"><span data-stu-id="27e7d-250">The command executes.</span></span>  
  
4.  <span data-ttu-id="27e7d-251">コマンドに設定されている場合`FirstReturnedRecord`、最初に返された結果に格納、<xref:System.Data.DataRow>です。</span><span class="sxs-lookup"><span data-stu-id="27e7d-251">If the command is set to `FirstReturnedRecord`, the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="27e7d-252">配置される出力パラメーターがある場合、<xref:System.Data.DataRow>です。</span><span class="sxs-lookup"><span data-stu-id="27e7d-252">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="27e7d-253"><xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="27e7d-253">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="27e7d-254"><xref:System.Data.DataRow.AcceptChanges%2A> が呼ばれたとき。</span><span class="sxs-lookup"><span data-stu-id="27e7d-254"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="27e7d-255">次の例は、<xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating>と<xref:System.Data.OleDb.OleDbDataAdapter.RowUpdated>使用されているイベントです。</span><span class="sxs-lookup"><span data-stu-id="27e7d-255">The following example shows the <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating> and <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdated> events being used.</span></span>  
  
 [!code-csharp[Classic WebData OleDbDataAdapter.RowUpdated Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.RowUpdated Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataAdapter.RowUpdated Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.RowUpdated Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RowUpdating">
      <MemberSignature Language="C#" Value="public event System.Data.OleDb.OleDbRowUpdatingEventHandler RowUpdating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.OleDb.OleDbRowUpdatingEventHandler RowUpdating" />
      <MemberSignature Language="DocId" Value="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowUpdating As OleDbRowUpdatingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::OleDb::OleDbRowUpdatingEventHandler ^ RowUpdating;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbRowUpdatingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="27e7d-256">
            <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> 処理中に、データ ソースに対してコマンドが実行される前に発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27e7d-256">Occurs during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> before a command is executed against the data source.</span>
          </span>
          <span data-ttu-id="27e7d-257">更新処理が試行されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27e7d-257">The attempt to update is made.</span>
          </span>
          <span data-ttu-id="27e7d-258">そのため、イベントが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27e7d-258">Therefore, the event occurs.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27e7d-259">使用すると<xref:System.Data.Common.DbDataAdapter.Update%2A>、更新されたデータ行ごとに発生する 2 つのイベントがあります。</span><span class="sxs-lookup"><span data-stu-id="27e7d-259">When you use <xref:System.Data.Common.DbDataAdapter.Update%2A>, there are two events that occur per data row updated.</span></span> <span data-ttu-id="27e7d-260">実行の順序は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="27e7d-260">The order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="27e7d-261">内の値、<xref:System.Data.DataRow>パラメーターの値に移動されます。</span><span class="sxs-lookup"><span data-stu-id="27e7d-261">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="27e7d-262"><xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="27e7d-262">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="27e7d-263">コマンドを実行します。</span><span class="sxs-lookup"><span data-stu-id="27e7d-263">The command executes.</span></span>  
  
4.  <span data-ttu-id="27e7d-264">コマンドに設定されている場合`FirstReturnedRecord`、最初に返された結果に格納、<xref:System.Data.DataRow>です。</span><span class="sxs-lookup"><span data-stu-id="27e7d-264">If the command is set to `FirstReturnedRecord`, the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="27e7d-265">配置される出力パラメーターがある場合、<xref:System.Data.DataRow>です。</span><span class="sxs-lookup"><span data-stu-id="27e7d-265">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="27e7d-266"><xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="27e7d-266">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="27e7d-267"><xref:System.Data.DataRow.AcceptChanges%2A> が呼ばれたとき。</span><span class="sxs-lookup"><span data-stu-id="27e7d-267"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="27e7d-268">次の例は、<xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating>と<xref:System.Data.OleDb.OleDbDataAdapter.RowUpdated>使用されているイベントです。</span><span class="sxs-lookup"><span data-stu-id="27e7d-268">The following example shows the <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating> and <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdated> events being used.</span></span>  
  
 [!code-csharp[Classic WebData OleDbDataAdapter.RowUpdated Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.RowUpdated Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataAdapter.RowUpdated Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.RowUpdated Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectCommand">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbCommand SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OleDb.OleDbCommand SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCommand As OleDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OleDb::OleDbCommand ^ SelectCommand { System::Data::OleDb::OleDbCommand ^ get(); void set(System::Data::OleDb::OleDbCommand ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="27e7d-269">データ ソース内のレコードを選択するための SQL ステートメントまたはストアド プロシージャを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27e7d-269">Gets or sets an SQL statement or stored procedure used to select records in the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="27e7d-270">
            <see cref="T:System.Data.OleDb.OleDbCommand" /> 処理中に、<see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> に格納するレコードをデータ ソースから選択するための <see cref="T:System.Data.DataSet" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27e7d-270">An <see cref="T:System.Data.OleDb.OleDbCommand" /> that is used during <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> to select records from data source for placement in the <see cref="T:System.Data.DataSet" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27e7d-271">ときに<xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>が割り当てられている、以前に作成した<xref:System.Data.OleDb.OleDbCommand>、<xref:System.Data.OleDb.OleDbCommand>は複製されません。</span><span class="sxs-lookup"><span data-stu-id="27e7d-271">When <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> is assigned to a previously created <xref:System.Data.OleDb.OleDbCommand>, the <xref:System.Data.OleDb.OleDbCommand> is not cloned.</span></span> <span data-ttu-id="27e7d-272"><xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>以前に作成の参照を保持<xref:System.Data.OleDb.OleDbCommand>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="27e7d-272">The <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> maintains a reference to the previously created <xref:System.Data.OleDb.OleDbCommand> object.</span></span>  
  
 <span data-ttu-id="27e7d-273">場合、 <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> 、行が返されなかったにテーブルが追加されて、<xref:System.Data.DataSet>例外が発生したことはありません。</span><span class="sxs-lookup"><span data-stu-id="27e7d-273">If the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> returns no rows, no tables are added to the <xref:System.Data.DataSet>, and no exception is raised.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="27e7d-274">次の例を作成、<xref:System.Data.OleDb.OleDbDataAdapter>設定と、<xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>と<xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="27e7d-274">The following example creates an <xref:System.Data.OleDb.OleDbDataAdapter> and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> properties.</span></span> <span data-ttu-id="27e7d-275">既に作成したことを前提としています、<xref:System.Data.OleDb.OleDbConnection>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="27e7d-275">It assumes that you have already created an <xref:System.Data.OleDb.OleDbConnection> object.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.SelectCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.SelectCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.SelectCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.SelectCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.DeleteCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#DeleteCommand" />
      <MemberSignature Language="VB.NET" Value=" Property DeleteCommand As IDbCommand Implements IDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System.Data.IDbDataAdapter.DeleteCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.DeleteCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="27e7d-276">このメンバーの詳細については、「<see cref="M:System.Data.IDbDataAdapter.DeleteCommand" />」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27e7d-276">For a description of this member, see <see cref="M:System.Data.IDbDataAdapter.DeleteCommand" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="27e7d-277">更新中に、データセット内の削除された行に対応するデータ ソース内のレコードを削除するために使用する <see cref="T:System.Data.IDbCommand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27e7d-277">An <see cref="T:System.Data.IDbCommand" /> used during an update to delete records in the data source for deleted rows in the data set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27e7d-278">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="27e7d-278">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="27e7d-279">これは、<xref:System.Data.OleDb.OleDbDataAdapter> のインスタンスが <xref:System.Data.IDbDataAdapter> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="27e7d-279">It can be used only when the <xref:System.Data.OleDb.OleDbDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.InsertCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#InsertCommand" />
      <MemberSignature Language="VB.NET" Value=" Property InsertCommand As IDbCommand Implements IDbDataAdapter.InsertCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System.Data.IDbDataAdapter.InsertCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.InsertCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="27e7d-280">このメンバーの詳細については、「<see cref="M:System.Data.IDbDataAdapter.InsertCommand" />」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27e7d-280">For a description of this member, see <see cref="M:System.Data.IDbDataAdapter.InsertCommand" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="27e7d-281">更新中に、データ ソースのレコードをデータセットに挿入するために使用する <see cref="T:System.Data.IDbCommand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27e7d-281">An <see cref="T:System.Data.IDbCommand" /> that is used during an update to insert records from a data source for placement in the data set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27e7d-282">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="27e7d-282">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="27e7d-283">これは、<xref:System.Data.OleDb.OleDbDataAdapter> のインスタンスが <xref:System.Data.IDbDataAdapter> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="27e7d-283">It can be used only when the <xref:System.Data.OleDb.OleDbDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.SelectCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#SelectCommand" />
      <MemberSignature Language="VB.NET" Value=" Property SelectCommand As IDbCommand Implements IDbDataAdapter.SelectCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System.Data.IDbDataAdapter.SelectCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.SelectCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="27e7d-284">このメンバーの詳細については、「<see cref="M:System.Data.IDbDataAdapter.SelectCommand" />」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27e7d-284">For a description of this member, see <see cref="M:System.Data.IDbDataAdapter.SelectCommand" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="27e7d-285">更新中に、データセットに挿入するレコードをデータ ソースから選択するために使用する <see cref="T:System.Data.IDbCommand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27e7d-285">An <see cref="T:System.Data.IDbCommand" /> that is used during an update to select records from a data source for placement in the data set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27e7d-286">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="27e7d-286">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="27e7d-287">これは、<xref:System.Data.OleDb.OleDbDataAdapter> のインスタンスが <xref:System.Data.IDbDataAdapter> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="27e7d-287">It can be used only when the <xref:System.Data.OleDb.OleDbDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.UpdateCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#UpdateCommand" />
      <MemberSignature Language="VB.NET" Value=" Property UpdateCommand As IDbCommand Implements IDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System.Data.IDbDataAdapter.UpdateCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.UpdateCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="27e7d-288">このメンバーの詳細については、「<see cref="M:System.Data.IDbDataAdapter.UpdateCommand" />」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27e7d-288">For a description of this member, see <see cref="M:System.Data.IDbDataAdapter.UpdateCommand" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="27e7d-289">更新中に、データセット内の変更された行に対応するデータ ソース内のレコードを更新するための <see cref="T:System.Data.IDbCommand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27e7d-289">An <see cref="T:System.Data.IDbCommand" /> used during an update to update records in the data source for modified rows in the data set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27e7d-290">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="27e7d-290">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="27e7d-291">これは、<xref:System.Data.OleDb.OleDbDataAdapter> のインスタンスが <xref:System.Data.IDbDataAdapter> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="27e7d-291">It can be used only when the <xref:System.Data.OleDb.OleDbDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="27e7d-292">このメンバーの詳細については、「<see cref="M:System.ICloneable.Clone" />」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27e7d-292">For a description of this member, see <see cref="M:System.ICloneable.Clone" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="27e7d-293">このインスタンスのコピーである新しい <see cref="T:System.Object" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27e7d-293">A new <see cref="T:System.Object" /> that is a copy of this instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27e7d-294">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="27e7d-294">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="27e7d-295">これは、<xref:System.Data.OleDb.OleDbDataAdapter> のインスタンスが <xref:System.ICloneable> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="27e7d-295">It can be used only when the <xref:System.Data.OleDb.OleDbDataAdapter> instance is cast to an <xref:System.ICloneable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbCommand UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OleDb.OleDbCommand UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCommand As OleDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OleDb::OleDbCommand ^ UpdateCommand { System::Data::OleDb::OleDbCommand ^ get(); void set(System::Data::OleDb::OleDbCommand ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="27e7d-296">データ ソースのレコードを更新するために使用する SQL ステートメントまたはストアド プロシージャを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27e7d-296">Gets or sets an SQL statement or stored procedure used to update records in the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="27e7d-297">
            <see cref="T:System.Data.DataSet" /> で変更された行に対応するデータ ソースのレコードを更新する <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> 中に使用される <see cref="T:System.Data.OleDb.OleDbCommand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27e7d-297">An <see cref="T:System.Data.OleDb.OleDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to update records in the data source that correspond to modified rows in the <see cref="T:System.Data.DataSet" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27e7d-298">中に<xref:System.Data.Common.DbDataAdapter.Update%2A>このプロパティを設定しないと、主キー情報が内に存在する場合は、 <xref:System.Data.DataSet>、<xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A>を設定する場合は、自動的に生成できます、<xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>プロパティと使用、<xref:System.Data.OleDb.OleDbCommandBuilder>です。</span><span class="sxs-lookup"><span data-stu-id="27e7d-298">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A> can be generated automatically if you set the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> property and use the <xref:System.Data.OleDb.OleDbCommandBuilder>.</span></span> <span data-ttu-id="27e7d-299">次に、追加のコマンドを設定しないことがによって生成される、<xref:System.Data.OleDb.OleDbCommandBuilder>です。</span><span class="sxs-lookup"><span data-stu-id="27e7d-299">Then, any additional commands that you do not set are generated by the <xref:System.Data.OleDb.OleDbCommandBuilder>.</span></span> <span data-ttu-id="27e7d-300">この生成ロジックで内に存在するキー列について、<xref:System.Data.DataSet>です。</span><span class="sxs-lookup"><span data-stu-id="27e7d-300">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="27e7d-301">詳細については、次を参照してください。 [Commandbuilder でのコマンドを生成する](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)です。</span><span class="sxs-lookup"><span data-stu-id="27e7d-301">For more information, see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="27e7d-302">ときに<xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A>が割り当てられている、以前に作成した<xref:System.Data.OleDb.OleDbCommand>、<xref:System.Data.OleDb.OleDbCommand>は複製されません。</span><span class="sxs-lookup"><span data-stu-id="27e7d-302">When <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A> is assigned to a previously created <xref:System.Data.OleDb.OleDbCommand>, the <xref:System.Data.OleDb.OleDbCommand> is not cloned.</span></span> <span data-ttu-id="27e7d-303"><xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A>以前に作成の参照を保持<xref:System.Data.OleDb.OleDbCommand>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="27e7d-303">The <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A> maintains a reference to the previously created <xref:System.Data.OleDb.OleDbCommand> object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="27e7d-304">これらの行にマージされる可能性がこのコマンドの実行には、行が返された場合、<xref:System.Data.DataSet>を設定する方法に応じて、<xref:System.Data.OleDb.OleDbCommand.UpdatedRowSource%2A>のプロパティ、<xref:System.Data.OleDb.OleDbCommand>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="27e7d-304">If execution of this command returns rows, these rows may be merged with the <xref:System.Data.DataSet> depending on how you set the <xref:System.Data.OleDb.OleDbCommand.UpdatedRowSource%2A> property of the <xref:System.Data.OleDb.OleDbCommand> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="27e7d-305">次の例を作成、<xref:System.Data.OleDb.OleDbDataAdapter>設定と、<xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>と<xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="27e7d-305">The following example creates an <xref:System.Data.OleDb.OleDbDataAdapter> and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A> properties.</span></span> <span data-ttu-id="27e7d-306">既に作成したことを前提としています、<xref:System.Data.OleDb.OleDbConnection>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="27e7d-306">It assumes that you have already created an <xref:System.Data.OleDb.OleDbConnection> object.</span></span>  
  
 [!code-csharp[Classic WebData OleDbDataAdapter.UpdateCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.UpdateCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataAdapter.UpdateCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.UpdateCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>