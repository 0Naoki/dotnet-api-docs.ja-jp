<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IEnumeratorContract`1.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5a39d901158e3d4dac304cefbe0c156cc6f7146ed.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a39d901158e3d4dac304cefbe0c156cc6f7146ed</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Contract.Collections.IEnumeratorContract`1">
          <source>The type of objects to enumerate.</source>
          <target state="translated">列挙するオブジェクトの型。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Contract.Collections.IEnumeratorContract`1">
          <source><bpt id="p1">&lt;c&gt;</bpt>C<ept id="p1">&lt;/c&gt;</ept> must implement the <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph> interface.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>C<ept id="p1">&lt;/c&gt;</ept>実装する必要があります、<ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph>インターフェイスです。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.AddIn.Contract.Collections.IEnumeratorContract`1">
          <source>Enumerates the elements of a generic collection of <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph> オブジェクトのジェネリック コレクションの要素を列挙します。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Contract.Collections.IEnumeratorContract`1">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">列挙子を使用すると、コレクション内のデータを読み取ることができますが、基になるコレクションを変更することはできません。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Contract.Collections.IEnumeratorContract`1">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">最初に、列挙子はコレクション内の 1 番目の要素の前に位置付けられます。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Contract.Collections.IEnumeratorContract`1">
          <source>At this position, the return value of <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A&gt;</ph> is undefined.</source>
          <target state="translated">この位置での戻り値<ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A&gt;</ph>が定義されていません。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Contract.Collections.IEnumeratorContract`1">
          <source>Therefore, you must call <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A&gt;</ph> to advance the enumerator to the first element of the collection before calling <ph id="ph2">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A&gt;</ph>.</source>
          <target state="translated">そのため、呼び出す必要があります<ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A&gt;</ph>列挙子を呼び出す前に、コレクションの最初の要素に進める<ph id="ph2">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Contract.Collections.IEnumeratorContract`1">
          <source><ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A&gt;</ph> returns the same object until <ph id="ph2">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A&gt;</ph> は、<ph id="ph2">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A&gt;</ph> が呼び出されるまでは同じオブジェクトを返します。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Contract.Collections.IEnumeratorContract`1">
          <source><ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A&gt;</ph> sets the return value of <ph id="ph2">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A&gt;</ph> 戻り値の設定<ph id="ph2">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A&gt;</ph>次の要素にします。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Contract.Collections.IEnumeratorContract`1">
          <source>If <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">場合<ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A&gt;</ph>列挙子をコレクションの末尾が、コレクション内の最後の要素の後に配置されているパスと<ph id="ph2">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A&gt;</ph>返します<ph id="ph3">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Contract.Collections.IEnumeratorContract`1">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">列挙子がこの位置では、後続の呼び出しの場合<ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A&gt;</ph>を返すことも<ph id="ph2">`false`</ph>します。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Contract.Collections.IEnumeratorContract`1">
          <source>If the last call to <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, the return value of <ph id="ph3">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A&gt;</ph> is undefined.</source>
          <target state="translated">場合は、最後の呼び出し<ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A&gt;</ph>返される<ph id="ph2">`false`</ph>、戻り値の<ph id="ph3">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A&gt;</ph>が定義されていません。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Contract.Collections.IEnumeratorContract`1">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">コレクションが変更されない限り、列挙子は有効です。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Contract.Collections.IEnumeratorContract`1">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">コレクションに対して変更 (要素の追加、変更、削除など) が行われると、列挙子は回復不可能な無効状態になり、その動作は未定義になります。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Collections.IEnumeratorContract`1.GetCurrent">
          <source>Returns the <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph> in the collection at the current position of the enumerator.</source>
          <target state="translated">コレクション内の、列挙子の現在位置にある <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Collections.IEnumeratorContract`1.GetCurrent">
          <source>The <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph> in the collection at the current position of the enumerator.</source>
          <target state="translated">コレクション内の、列挙子の現在位置にある <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Collections.IEnumeratorContract`1.GetCurrent">
          <source>The return value of <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A&gt;</ph> is undefined under any of the following conditions:</source>
          <target state="translated">戻り値<ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A&gt;</ph>は、次の条件のいずれかで未定義します。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Collections.IEnumeratorContract`1.GetCurrent">
          <source>The enumerator is positioned before the first element in the collection, immediately after the enumerator is created or after <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A&gt;</ph> is called.</source>
          <target state="translated">列挙子が作成されるとすぐまたは後に、コレクション内の最初の要素の前に、列挙子が配置されている<ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A&gt;</ph>と呼びます。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Collections.IEnumeratorContract`1.GetCurrent">
          <source><ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A&gt;</ph> must be called to advance the enumerator to the first element of the collection before calling <ph id="ph2">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A&gt;</ph> 列挙子を呼び出す前に、コレクションの最初の要素に進めるを呼び出す必要があります<ph id="ph2">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Collections.IEnumeratorContract`1.GetCurrent">
          <source>The last call to <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, which indicates the end of the collection.</source>
          <target state="translated">最後に呼び出した<ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A&gt;</ph>返される<ph id="ph2">`false`</ph>コレクションの末尾を示します。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Collections.IEnumeratorContract`1.GetCurrent">
          <source>The enumerator is invalidated due to changes made in the collection, such as adding, modifying, or deleting elements.</source>
          <target state="translated">列挙子は、追加、変更、または削除する要素など、コレクションで行われた変更により無効になりました。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Collections.IEnumeratorContract`1.GetCurrent">
          <source><ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A&gt;</ph> returns the same object until <ph id="ph2">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A&gt;</ph> は、<ph id="ph2">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A&gt;</ph> が呼び出されるまでは同じオブジェクトを返します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Collections.IEnumeratorContract`1.GetCurrent">
          <source><ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A&gt;</ph> sets the return value of <ph id="ph2">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A&gt;</ph> 戻り値の設定<ph id="ph2">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A&gt;</ph>次の要素にします。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Collections.IEnumeratorContract`1.MoveNext">
          <source>Advances the enumerator to the next element of the collection.</source>
          <target state="translated">列挙子をコレクションの次の要素に進めます。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Collections.IEnumeratorContract`1.MoveNext">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the enumerator was successfully advanced to the next element; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the enumerator has passed the end of the collection.</source>
          <target state="translated">列挙子が次の要素に正常に進んだ場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。列挙子がコレクションの末尾を越えた場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Collections.IEnumeratorContract`1.MoveNext">
          <source>After an enumerator is created or after the <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A&gt;</ph> method is called, an enumerator is positioned before the first element of the collection.</source>
          <target state="translated">列挙子を作成した後、または後に、<ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A&gt;</ph>メソッドが呼び出されると、列挙子がコレクションの最初の要素の前に位置付けられます。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Collections.IEnumeratorContract`1.MoveNext">
          <source>The first call to the <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A&gt;</ph> method moves the enumerator to the first element of the collection.</source>
          <target state="translated">最初の呼び出し、<ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A&gt;</ph>メソッドは、列挙子をコレクションの最初の要素に移動します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Collections.IEnumeratorContract`1.MoveNext">
          <source>If <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">場合<ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A&gt;</ph>列挙子をコレクションの末尾が、コレクション内の最後の要素の後に配置されているパスと<ph id="ph2">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A&gt;</ph>返します<ph id="ph3">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Collections.IEnumeratorContract`1.MoveNext">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph> until <ph id="ph3">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A&gt;</ph> is called.</source>
          <target state="translated">列挙子がこの位置では、後続の呼び出しの場合<ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A&gt;</ph>を返すことも<ph id="ph2">`false`</ph>まで<ph id="ph3">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A&gt;</ph>と呼びます。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Collections.IEnumeratorContract`1.MoveNext">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">コレクションが変更されない限り、列挙子は有効です。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Collections.IEnumeratorContract`1.MoveNext">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A&gt;</ph> throws an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">無効になり、次の呼び出しに変更を追加するなど、コレクションを変更、または要素を削除するには、列挙子は回復不可能<ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A&gt;</ph>または<ph id="ph2">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A&gt;</ph>スロー、<ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Collections.IEnumeratorContract`1.MoveNext">
          <source>The collection was modified after the enumerator was created.</source>
          <target state="translated">コレクションは、列挙子の作成後に変更されました。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Collections.IEnumeratorContract`1.Reset">
          <source>Sets the enumerator to its initial position, which is before the first element in the collection.</source>
          <target state="translated">列挙子を初期位置、つまりコレクションの最初の要素の前に設定します。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Collections.IEnumeratorContract`1.Reset">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">コレクションが変更されない限り、列挙子は有効です。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Collections.IEnumeratorContract`1.Reset">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A&gt;</ph> throws an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">無効になり、次の呼び出しに変更を追加するなど、コレクションを変更、または要素を削除するには、列挙子は回復不可能<ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A&gt;</ph>または<ph id="ph2">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A&gt;</ph>スロー、<ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Collections.IEnumeratorContract`1.Reset">
          <source>The collection was modified after the enumerator was created.</source>
          <target state="translated">コレクションは、列挙子の作成後に変更されました。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>