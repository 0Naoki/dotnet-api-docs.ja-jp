<Type Name="IEnumeratorContract&lt;C&gt;" FullName="System.AddIn.Contract.Collections.IEnumeratorContract&lt;C&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a39d901158e3d4dac304cefbe0c156cc6f7146ed" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IEnumeratorContract&lt;C&gt; : System.AddIn.Contract.IContract where C : IContract" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEnumeratorContract`1&lt;(class System.AddIn.Contract.IContract) C&gt; implements class System.AddIn.Contract.IContract" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Contract.Collections.IEnumeratorContract`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEnumeratorContract(Of C)&#xA;Implements IContract" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename C&gt;&#xA; where C : IContractpublic interface class IEnumeratorContract : System::AddIn::Contract::IContract" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn.Contract</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="C">
      <Constraints>
        <InterfaceName>System.AddIn.Contract.IContract</InterfaceName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.AddIn.Contract.IContract</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="C">
      <span data-ttu-id="bccb1-101">列挙するオブジェクトの型。</span>
      <span class="sxs-lookup">
        <span data-stu-id="bccb1-101">The type of objects to enumerate.</span>
      </span>
      <span data-ttu-id="bccb1-102">
        <c>C</c>実装する必要があります、<see cref="T:System.AddIn.Contract.IContract" />インターフェイスです。</span>
      <span class="sxs-lookup">
        <span data-stu-id="bccb1-102">
          <c>C</c> must implement the <see cref="T:System.AddIn.Contract.IContract" /> interface.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="bccb1-103">
        <see cref="T:System.AddIn.Contract.IContract" /> オブジェクトのジェネリック コレクションの要素を列挙します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="bccb1-103">Enumerates the elements of a generic collection of <see cref="T:System.AddIn.Contract.IContract" /> objects.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bccb1-104">列挙子を使用すると、コレクション内のデータを読み取ることができますが、基になるコレクションを変更することはできません。</span><span class="sxs-lookup"><span data-stu-id="bccb1-104">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="bccb1-105">最初に、列挙子はコレクション内の 1 番目の要素の前に位置付けられます。</span><span class="sxs-lookup"><span data-stu-id="bccb1-105">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="bccb1-106">この位置での戻り値<xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A>が定義されていません。</span><span class="sxs-lookup"><span data-stu-id="bccb1-106">At this position, the return value of <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> is undefined.</span></span> <span data-ttu-id="bccb1-107">そのため、呼び出す必要があります<xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A>列挙子を呼び出す前に、コレクションの最初の要素に進める<xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A>です。</span><span class="sxs-lookup"><span data-stu-id="bccb1-107">Therefore, you must call <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> to advance the enumerator to the first element of the collection before calling <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A>.</span></span>  
  
 <span data-ttu-id="bccb1-108"><xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> は、<xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> が呼び出されるまでは同じオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="bccb1-108"><xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> returns the same object until <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> is called.</span></span> <span data-ttu-id="bccb1-109"><xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> 戻り値の設定<xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A>次の要素にします。</span><span class="sxs-lookup"><span data-stu-id="bccb1-109"><xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> sets the return value of <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> to the next element.</span></span>  
  
 <span data-ttu-id="bccb1-110">場合<xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A>列挙子をコレクションの末尾が、コレクション内の最後の要素の後に配置されているパスと<xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A>返します`false`です。</span><span class="sxs-lookup"><span data-stu-id="bccb1-110">If <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="bccb1-111">列挙子がこの位置では、後続の呼び出しの場合<xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A>を返すことも`false`します。</span><span class="sxs-lookup"><span data-stu-id="bccb1-111">When the enumerator is at this position, subsequent calls to <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="bccb1-112">場合は、最後の呼び出し<xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A>返される`false`、戻り値の<xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A>が定義されていません。</span><span class="sxs-lookup"><span data-stu-id="bccb1-112">If the last call to <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> returned `false`, the return value of <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> is undefined.</span></span>  
  
 <span data-ttu-id="bccb1-113">コレクションが変更されない限り、列挙子は有効です。</span><span class="sxs-lookup"><span data-stu-id="bccb1-113">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="bccb1-114">コレクションに対して変更 (要素の追加、変更、削除など) が行われると、列挙子は回復不可能な無効状態になり、その動作は未定義になります。</span><span class="sxs-lookup"><span data-stu-id="bccb1-114">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetCurrent">
      <MemberSignature Language="C#" Value="public C GetCurrent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !C GetCurrent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Collections.IEnumeratorContract`1.GetCurrent" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrent () As C" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; C GetCurrent();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>C</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bccb1-115">コレクション内の、列挙子の現在位置にある <see cref="T:System.AddIn.Contract.IContract" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bccb1-115">Returns the <see cref="T:System.AddIn.Contract.IContract" /> in the collection at the current position of the enumerator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bccb1-116">コレクション内の、列挙子の現在位置にある <see cref="T:System.AddIn.Contract.IContract" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bccb1-116">The <see cref="T:System.AddIn.Contract.IContract" /> in the collection at the current position of the enumerator.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bccb1-117">戻り値<xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A>は、次の条件のいずれかで未定義します。</span><span class="sxs-lookup"><span data-stu-id="bccb1-117">The return value of <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> is undefined under any of the following conditions:</span></span>  
  
-   <span data-ttu-id="bccb1-118">列挙子が作成されるとすぐまたは後に、コレクション内の最初の要素の前に、列挙子が配置されている<xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A>と呼びます。</span><span class="sxs-lookup"><span data-stu-id="bccb1-118">The enumerator is positioned before the first element in the collection, immediately after the enumerator is created or after <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A> is called.</span></span> <span data-ttu-id="bccb1-119"><xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> 列挙子を呼び出す前に、コレクションの最初の要素に進めるを呼び出す必要があります<xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A>です。</span><span class="sxs-lookup"><span data-stu-id="bccb1-119"><xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> must be called to advance the enumerator to the first element of the collection before calling <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A>.</span></span>  
  
-   <span data-ttu-id="bccb1-120">最後に呼び出した<xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A>返される`false`コレクションの末尾を示します。</span><span class="sxs-lookup"><span data-stu-id="bccb1-120">The last call to <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> returned `false`, which indicates the end of the collection.</span></span>  
  
-   <span data-ttu-id="bccb1-121">列挙子は、追加、変更、または削除する要素など、コレクションで行われた変更により無効になりました。</span><span class="sxs-lookup"><span data-stu-id="bccb1-121">The enumerator is invalidated due to changes made in the collection, such as adding, modifying, or deleting elements.</span></span>  
  
 <span data-ttu-id="bccb1-122"><xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> は、<xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> が呼び出されるまでは同じオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="bccb1-122"><xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> returns the same object until <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> is called.</span></span> <span data-ttu-id="bccb1-123"><xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> 戻り値の設定<xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A>次の要素にします。</span><span class="sxs-lookup"><span data-stu-id="bccb1-123"><xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> sets the return value of <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> to the next element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Collections.IEnumeratorContract`1.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool MoveNext();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bccb1-124">列挙子をコレクションの次の要素に進めます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bccb1-124">Advances the enumerator to the next element of the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bccb1-125">列挙子が次の要素に正常に進んだ場合は <see langword="true" />。列挙子がコレクションの末尾を越えた場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bccb1-125">
              <see langword="true" /> if the enumerator was successfully advanced to the next element; <see langword="false" /> if the enumerator has passed the end of the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bccb1-126">列挙子を作成した後、または後に、<xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A>メソッドが呼び出されると、列挙子がコレクションの最初の要素の前に位置付けられます。</span><span class="sxs-lookup"><span data-stu-id="bccb1-126">After an enumerator is created or after the <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A> method is called, an enumerator is positioned before the first element of the collection.</span></span> <span data-ttu-id="bccb1-127">最初の呼び出し、<xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A>メソッドは、列挙子をコレクションの最初の要素に移動します。</span><span class="sxs-lookup"><span data-stu-id="bccb1-127">The first call to the <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> method moves the enumerator to the first element of the collection.</span></span>  
  
 <span data-ttu-id="bccb1-128">場合<xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A>列挙子をコレクションの末尾が、コレクション内の最後の要素の後に配置されているパスと<xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A>返します`false`です。</span><span class="sxs-lookup"><span data-stu-id="bccb1-128">If <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="bccb1-129">列挙子がこの位置では、後続の呼び出しの場合<xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A>を返すことも`false`まで<xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A>と呼びます。</span><span class="sxs-lookup"><span data-stu-id="bccb1-129">When the enumerator is at this position, subsequent calls to <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> also return `false` until <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A> is called.</span></span>  
  
 <span data-ttu-id="bccb1-130">コレクションが変更されない限り、列挙子は有効です。</span><span class="sxs-lookup"><span data-stu-id="bccb1-130">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="bccb1-131">無効になり、次の呼び出しに変更を追加するなど、コレクションを変更、または要素を削除するには、列挙子は回復不可能<xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A>または<xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A>スロー、<xref:System.InvalidOperationException>です。</span><span class="sxs-lookup"><span data-stu-id="bccb1-131">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> or <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="bccb1-132">コレクションは、列挙子の作成後に変更されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bccb1-132">The collection was modified after the enumerator was created.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Collections.IEnumeratorContract`1.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bccb1-133">列挙子を初期位置、つまりコレクションの最初の要素の前に設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bccb1-133">Sets the enumerator to its initial position, which is before the first element in the collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bccb1-134">コレクションが変更されない限り、列挙子は有効です。</span><span class="sxs-lookup"><span data-stu-id="bccb1-134">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="bccb1-135">無効になり、次の呼び出しに変更を追加するなど、コレクションを変更、または要素を削除するには、列挙子は回復不可能<xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A>または<xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A>スロー、<xref:System.InvalidOperationException>です。</span><span class="sxs-lookup"><span data-stu-id="bccb1-135">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> or <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="bccb1-136">コレクションは、列挙子の作成後に変更されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bccb1-136">The collection was modified after the enumerator was created.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>