<Type Name="IEnumeratorContract&lt;C&gt;" FullName="System.AddIn.Contract.Collections.IEnumeratorContract&lt;C&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d4dae846d6e71db1b1c62cb8cfd472051ca4f295" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70519493" /></Metadata><TypeSignature Language="C#" Value="public interface IEnumeratorContract&lt;C&gt; : System.AddIn.Contract.IContract where C : IContract" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEnumeratorContract`1&lt;(class System.AddIn.Contract.IContract) C&gt; implements class System.AddIn.Contract.IContract" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Contract.Collections.IEnumeratorContract`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEnumeratorContract(Of C)&#xA;Implements IContract" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename C&gt;&#xA; where C : IContractpublic interface class IEnumeratorContract : System::AddIn::Contract::IContract" />
  <TypeSignature Language="F#" Value="type IEnumeratorContract&lt;'C (requires 'C :&gt; IContract)&gt; = interface&#xA;    interface IContract" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn.Contract</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="C">
      <Constraints>
        <InterfaceName>System.AddIn.Contract.IContract</InterfaceName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.AddIn.Contract.IContract</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="C"><span data-ttu-id="b3639-101">列挙するオブジェクトの型。</span><span class="sxs-lookup"><span data-stu-id="b3639-101">The type of objects to enumerate.</span></span> <span data-ttu-id="b3639-102"><paramref name="C" /> は <see cref="T:System.AddIn.Contract.IContract" /> インターフェイスを実装する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b3639-102"><paramref name="C" /> must implement the <see cref="T:System.AddIn.Contract.IContract" /> interface.</span></span></typeparam>
    <summary><span data-ttu-id="b3639-103"><see cref="T:System.AddIn.Contract.IContract" /> オブジェクトのジェネリック コレクションの要素を列挙します。</span><span class="sxs-lookup"><span data-stu-id="b3639-103">Enumerates the elements of a generic collection of <see cref="T:System.AddIn.Contract.IContract" /> objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3639-104">列挙子を使用すると、コレクション内のデータを読み取ることができますが、基になるコレクションを変更することはできません。</span><span class="sxs-lookup"><span data-stu-id="b3639-104">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="b3639-105">最初に、列挙子はコレクション内の 1 番目の要素の前に位置付けられます。</span><span class="sxs-lookup"><span data-stu-id="b3639-105">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="b3639-106">この位置では、の<xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A>戻り値は定義されていません。</span><span class="sxs-lookup"><span data-stu-id="b3639-106">At this position, the return value of <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> is undefined.</span></span> <span data-ttu-id="b3639-107">したがって、を呼び出す<xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A>前に、を呼び出して、列挙子をコレクションの最初の要素に進める必要があります。</span><span class="sxs-lookup"><span data-stu-id="b3639-107">Therefore, you must call <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> to advance the enumerator to the first element of the collection before calling <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A>.</span></span>  
  
 <span data-ttu-id="b3639-108"><xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> は、<xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> が呼び出されるまでは同じオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="b3639-108"><xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> returns the same object until <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> is called.</span></span> <span data-ttu-id="b3639-109"><xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A>の戻り値を次<xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A>の要素に設定します。</span><span class="sxs-lookup"><span data-stu-id="b3639-109"><xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> sets the return value of <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> to the next element.</span></span>  
  
 <span data-ttu-id="b3639-110"><xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> がコレクションの末尾を通過した場合、列挙子がコレクション内の最後の要素の後に配置され、<xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> は `false` を返します。</span><span class="sxs-lookup"><span data-stu-id="b3639-110">If <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="b3639-111">列挙子がこの位置にある場合、後続の <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> 呼び出しも `false` を返します。</span><span class="sxs-lookup"><span data-stu-id="b3639-111">When the enumerator is at this position, subsequent calls to <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="b3639-112">の最後の呼び出し<xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A>でが返さ`false`れた場合、 <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A>の戻り値は未定義になります。</span><span class="sxs-lookup"><span data-stu-id="b3639-112">If the last call to <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> returned `false`, the return value of <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> is undefined.</span></span>  
  
 <span data-ttu-id="b3639-113">コレクションが変更されない限り、列挙子は有効です。</span><span class="sxs-lookup"><span data-stu-id="b3639-113">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="b3639-114">コレクションに対して変更 (要素の追加、変更、削除など) が行われると、列挙子は回復不可能な無効状態になり、その動作は未定義になります。</span><span class="sxs-lookup"><span data-stu-id="b3639-114">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetCurrent">
      <MemberSignature Language="C#" Value="public C GetCurrent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !C GetCurrent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Collections.IEnumeratorContract`1.GetCurrent" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrent () As C" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; C GetCurrent();" />
      <MemberSignature Language="F#" Value="abstract member GetCurrent : unit -&gt; 'C" Usage="iEnumeratorContract.GetCurrent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>C</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b3639-115">コレクション内の、列挙子の現在位置にある <see cref="T:System.AddIn.Contract.IContract" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="b3639-115">Returns the <see cref="T:System.AddIn.Contract.IContract" /> in the collection at the current position of the enumerator.</span></span></summary>
        <returns><span data-ttu-id="b3639-116">コレクション内の、列挙子の現在位置にある <see cref="T:System.AddIn.Contract.IContract" />。</span><span class="sxs-lookup"><span data-stu-id="b3639-116">The <see cref="T:System.AddIn.Contract.IContract" /> in the collection at the current position of the enumerator.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3639-117">の<xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A>戻り値は、次のいずれかの条件で定義されていません。</span><span class="sxs-lookup"><span data-stu-id="b3639-117">The return value of <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> is undefined under any of the following conditions:</span></span>  
  
-   <span data-ttu-id="b3639-118">列挙子は、列挙子が作成されるか、また<xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A>はが呼び出された直後に、コレクション内の最初の要素の前に配置されます。</span><span class="sxs-lookup"><span data-stu-id="b3639-118">The enumerator is positioned before the first element in the collection, immediately after the enumerator is created or after <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A> is called.</span></span> <span data-ttu-id="b3639-119"><xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A>を呼び出す<xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A>前に、列挙子をコレクションの最初の要素に進めるために、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="b3639-119"><xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> must be called to advance the enumerator to the first element of the collection before calling <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A>.</span></span>  
  
-   <span data-ttu-id="b3639-120">コレクションの末尾を<xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A>示す`false`、返されたの最後の呼び出し。</span><span class="sxs-lookup"><span data-stu-id="b3639-120">The last call to <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> returned `false`, which indicates the end of the collection.</span></span>  
  
-   <span data-ttu-id="b3639-121">コレクションに加えられた変更 (要素の追加、変更、削除など) が原因で、列挙子が無効になります。</span><span class="sxs-lookup"><span data-stu-id="b3639-121">The enumerator is invalidated due to changes made in the collection, such as adding, modifying, or deleting elements.</span></span>  
  
 <span data-ttu-id="b3639-122"><xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> は、<xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> が呼び出されるまでは同じオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="b3639-122"><xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> returns the same object until <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> is called.</span></span> <span data-ttu-id="b3639-123"><xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A>の戻り値を次<xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A>の要素に設定します。</span><span class="sxs-lookup"><span data-stu-id="b3639-123"><xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> sets the return value of <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> to the next element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Collections.IEnumeratorContract`1.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool MoveNext();" />
      <MemberSignature Language="F#" Value="abstract member MoveNext : unit -&gt; bool" Usage="iEnumeratorContract.MoveNext " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b3639-124">列挙子をコレクションの次の要素に進めます。</span><span class="sxs-lookup"><span data-stu-id="b3639-124">Advances the enumerator to the next element of the collection.</span></span></summary>
        <returns><span data-ttu-id="b3639-125">列挙子が次の要素に正常に進んだ場合は <see langword="true" />。列挙子がコレクションの末尾を越えた場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b3639-125"><see langword="true" /> if the enumerator was successfully advanced to the next element; <see langword="false" /> if the enumerator has passed the end of the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3639-126">列挙子が作成された後<xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A> 、またはメソッドが呼び出された後、列挙子はコレクションの最初の要素の前に配置されます。</span><span class="sxs-lookup"><span data-stu-id="b3639-126">After an enumerator is created or after the <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A> method is called, an enumerator is positioned before the first element of the collection.</span></span> <span data-ttu-id="b3639-127">メソッドの<xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A>最初の呼び出しでは、列挙子をコレクションの最初の要素に移動します。</span><span class="sxs-lookup"><span data-stu-id="b3639-127">The first call to the <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> method moves the enumerator to the first element of the collection.</span></span>  
  
 <span data-ttu-id="b3639-128"><xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> がコレクションの末尾を通過した場合、列挙子がコレクション内の最後の要素の後に配置され、<xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> は `false` を返します。</span><span class="sxs-lookup"><span data-stu-id="b3639-128">If <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="b3639-129">列挙子がこの位置にある場合、後続の<xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A>を呼び`false`出す<xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A>と、が呼び出されるまでが返されます。</span><span class="sxs-lookup"><span data-stu-id="b3639-129">When the enumerator is at this position, subsequent calls to <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> also return `false` until <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A> is called.</span></span>  
  
 <span data-ttu-id="b3639-130">コレクションが変更されない限り、列挙子は有効です。</span><span class="sxs-lookup"><span data-stu-id="b3639-130">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="b3639-131">要素の追加、変更、削除などの変更がコレクションに対して行われた場合、列挙子はなりに<xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A>無効化され、次のまたは<xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A>の呼び出しでがスロー <xref:System.InvalidOperationException>されます。</span><span class="sxs-lookup"><span data-stu-id="b3639-131">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> or <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b3639-132">コレクションは、列挙子の作成後に変更されました。</span><span class="sxs-lookup"><span data-stu-id="b3639-132">The collection was modified after the enumerator was created.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Collections.IEnumeratorContract`1.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit" Usage="iEnumeratorContract.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b3639-133">列挙子を初期位置、つまりコレクションの最初の要素の前に設定します。</span><span class="sxs-lookup"><span data-stu-id="b3639-133">Sets the enumerator to its initial position, which is before the first element in the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3639-134">コレクションが変更されない限り、列挙子は有効です。</span><span class="sxs-lookup"><span data-stu-id="b3639-134">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="b3639-135">要素の追加、変更、削除などの変更がコレクションに対して行われた場合、列挙子はなりに<xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A>無効化され、次のまたは<xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A>の呼び出しでがスロー <xref:System.InvalidOperationException>されます。</span><span class="sxs-lookup"><span data-stu-id="b3639-135">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> or <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b3639-136">コレクションは、列挙子の作成後に変更されました。</span><span class="sxs-lookup"><span data-stu-id="b3639-136">The collection was modified after the enumerator was created.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
