<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="NameObjectCollectionBase.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5afa1bba85337dd9144351fcbd4993a47321a5e3a.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">afa1bba85337dd9144351fcbd4993a47321a5e3a</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Collections.Specialized.NameObjectCollectionBase">
          <source>Provides the <ph id="ph1">&lt;see langword="abstract" /&gt;</ph> base class for a collection of associated <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph> keys and <ph id="ph3">&lt;see cref="T:System.Object" /&gt;</ph> values that can be accessed either with the key or with the index.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="abstract" /&gt;</ph> キーと、キーまたはインデックスを使用してアクセスできる <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph> 値が関連付けられたコレクションの <ph id="ph3">&lt;see cref="T:System.Object" /&gt;</ph> 基本クラスを指定します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.NameObjectCollectionBase">
          <source>The underlying structure for this class is a hash table.</source>
          <target state="translated">このクラス、構造体の基になるとは、ハッシュ テーブルです。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.NameObjectCollectionBase">
          <source>Each element is a key/value pair.</source>
          <target state="translated">各要素は、キー/値のペアです。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.NameObjectCollectionBase">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph> is the number of elements the <ph id="ph2">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph> can hold.</source>
          <target state="translated">容量、<ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph>要素の数が、<ph id="ph2">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph>を保持できます。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.NameObjectCollectionBase">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph>, the capacity is automatically increased as required through reallocation.</source>
          <target state="translated">要素が追加されるにつれて、<ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph>容量を増やすは自動的に再割り当て、必要に応じて。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.NameObjectCollectionBase">
          <source>The hash code provider dispenses hash codes for keys in the <ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph> instance.</source>
          <target state="translated">ハッシュ コード プロバイダー内のキーのハッシュ コードを管理する、<ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph>インスタンス。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.NameObjectCollectionBase">
          <source>The default hash code provider is the <ph id="ph1">&lt;xref:System.Collections.CaseInsensitiveHashCodeProvider&gt;</ph>.</source>
          <target state="translated">既定のハッシュ コード プロバイダーが、<ph id="ph1">&lt;xref:System.Collections.CaseInsensitiveHashCodeProvider&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.NameObjectCollectionBase">
          <source>The comparer determines whether two keys are equal.</source>
          <target state="translated">比較演算子は、2 つのキーが等しいかどうかを判断します。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.NameObjectCollectionBase">
          <source>The default comparer is the <ph id="ph1">&lt;xref:System.Collections.CaseInsensitiveComparer&gt;</ph>.</source>
          <target state="translated">既定の比較子は、<ph id="ph1">&lt;xref:System.Collections.CaseInsensitiveComparer&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.NameObjectCollectionBase">
          <source>In .NET Framework version 1.0, this class uses culture-sensitive string comparisons.</source>
          <target state="translated">.NET framework バージョン 1.0 では、このクラスは、カルチャに依存した文字列比較を使用します。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.NameObjectCollectionBase">
          <source>However, in .NET Framework version 1.1 and later, this class uses <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType&gt;</ph> when comparing strings.</source>
          <target state="translated">ただし、.NET framework version 1.1 以降では、このクラスを使用して<ph id="ph1">&lt;xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType&gt;</ph>文字列を比較するときにします。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.NameObjectCollectionBase">
          <source>For more information about how culture affects comparisons and sorting, see <bpt id="p1">[</bpt>Performing Culture-Insensitive String Operations<ept id="p1">](~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations.md)</ept>.</source>
          <target state="translated">比較と並べ替えのカルチャのしくみの詳細については、次を参照してください。<bpt id="p1">[</bpt>カルチャを認識しない文字列操作の実行<ept id="p1">](~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.NameObjectCollectionBase">
          <source><ph id="ph1">`null`</ph> is allowed as a key or as a value.</source>
          <target state="translated"><ph id="ph1">`null`</ph> キーまたは値としてを許可します。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.NameObjectCollectionBase">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGet%2A&gt;</ph> method does not distinguish between <ph id="ph2">`null`</ph> which is returned because the specified key is not found and <ph id="ph3">`null`</ph> which is returned because the value associated with the key is <ph id="ph4">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGet%2A&gt;</ph>メソッドを区別しません<ph id="ph2">`null`</ph>指定したキーが見つからないため、どちらが返されると<ph id="ph3">`null`</ph>キーに関連付けられている値が返される<ph id="ph4">`null`</ph>です。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.NameObjectCollectionBase">
          <source>The following code example shows how to implement and use the <ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph> class.</source>
          <target state="translated">次のコード例は、実装して使用する方法を示しています、<ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.NameObjectCollectionBase">
          <source>Public static (<ph id="ph1">&lt;see langword="Shared" /&gt;</ph> in Visual Basic) members of this type are thread safe.</source>
          <target state="translated">パブリック静的 (<ph id="ph1">&lt;see langword="Shared" /&gt;</ph> Visual Basic で) この型のメンバーは、スレッド セーフであります。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.NameObjectCollectionBase">
          <source>Any instance members are not guaranteed to be thread safe.</source>
          <target state="translated">インスタンス メンバーの場合は、スレッド セーフであるとは限りません。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.NameObjectCollectionBase">
          <source>This implementation does not provide a synchronized (thread safe) wrapper for a <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph>, but derived classes can create their own synchronized versions of the <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> using the <ph id="ph3">&lt;see cref="P:System.Collections.ICollection.SyncRoot" /&gt;</ph> property.</source>
          <target state="translated">この実装は同期済みは提供されませんの (スレッド セーフな) ラッパー、 <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph>、派生クラスは、独自の同期されたバージョンを作成できますが、<ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph>を使用して、<ph id="ph3">&lt;see cref="P:System.Collections.ICollection.SyncRoot" /&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.NameObjectCollectionBase">
          <source>Enumerating through a collection is intrinsically not a thread safe procedure.</source>
          <target state="translated">コレクションの列挙は本質的にスレッド セーフな方法です。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.NameObjectCollectionBase">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">コレクションの同期がとられている場合でも、別のスレッドによってそのコレクションを変更できるため、変更の結果として列挙子は例外をスローします。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.NameObjectCollectionBase">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">列挙処理を確実にスレッド セーフに行うには、列挙中にコレクションをロックするか、他のスレッドによって行われた変更によってスローされる例外をキャッチします。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="T:System.Collections.Specialized.NameObjectCollectionBase">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> class that is empty.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> クラスの新しい空のインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph> is the number of elements that the <ph id="ph2">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph> can hold.</source>
          <target state="translated">容量、<ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph>は要素の数を<ph id="ph2">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph>を保持できます。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph>, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">要素が追加されるにつれて、<ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph>容量を増やすは自動的に内部の配列を再割り当てによる要求どおりです。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph>.</source>
          <target state="translated">コレクションのサイズを推定できる場合に要素を追加するときにサイズ変更操作の数を実行する必要があるの初期量を指定する、<ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor">
          <source>The hash code provider dispenses hash codes for keys in the <ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph> instance.</source>
          <target state="translated">ハッシュ コード プロバイダー内のキーのハッシュ コードを管理する、<ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph>インスタンス。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor">
          <source>The default hash code provider is the <ph id="ph1">&lt;xref:System.Collections.CaseInsensitiveHashCodeProvider&gt;</ph>.</source>
          <target state="translated">既定のハッシュ コード プロバイダーが、<ph id="ph1">&lt;xref:System.Collections.CaseInsensitiveHashCodeProvider&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor">
          <source>The comparer determines whether two keys are equal.</source>
          <target state="translated">比較演算子は、2 つのキーが等しいかどうかを判断します。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor">
          <source>The default comparer is the <ph id="ph1">&lt;xref:System.Collections.CaseInsensitiveComparer&gt;</ph>.</source>
          <target state="translated">既定の比較子は、<ph id="ph1">&lt;xref:System.Collections.CaseInsensitiveComparer&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">このコンス トラクターは、o (1) 操作です。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Collections.IEqualityComparer)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.IEqualityComparer" /&gt;</ph> object to use to determine whether two keys are equal and to generate hash codes for the keys in the collection.</source>
          <target state="translated">2 つのキーが等しいかどうかを判断し、コレクション内のキーのハッシュ コードを生成するために使用する <ph id="ph1">&lt;see cref="T:System.Collections.IEqualityComparer" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Collections.IEqualityComparer)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> class that is empty, has the default initial capacity, and uses the specified <ph id="ph2">&lt;see cref="T:System.Collections.IEqualityComparer" /&gt;</ph> object.</source>
          <target state="translated">空で、既定の初期量を備え、指定した <ph id="ph2">&lt;see cref="T:System.Collections.IEqualityComparer" /&gt;</ph> オブジェクトを使用する、<ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Collections.IEqualityComparer)">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph> object is the number of elements that the <ph id="ph2">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph> can hold.</source>
          <target state="translated">容量、<ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph>オブジェクトは、要素の数を<ph id="ph2">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph>を保持できます。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Collections.IEqualityComparer)">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph>, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">要素が追加されるにつれて、<ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph>容量を増やすは自動的に内部の配列を再割り当てによる要求どおりです。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Collections.IEqualityComparer)">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph>.</source>
          <target state="translated">コレクションのサイズを推定できる場合に要素を追加するときにサイズ変更操作の数を実行する必要があるの初期量を指定する、<ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Collections.IEqualityComparer)">
          <source>The <ph id="ph1">&lt;xref:System.Collections.IEqualityComparer&gt;</ph> object combines the comparer and the hash code provider.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEqualityComparer&gt;</ph>オブジェクトは、比較演算子と、ハッシュ コード プロバイダーを組み合わせたものです。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Collections.IEqualityComparer)">
          <source>The hash code provider dispenses hash codes for keys in the <ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph>.</source>
          <target state="translated">ハッシュ コード プロバイダー内のキーのハッシュ コードを管理する、<ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Collections.IEqualityComparer)">
          <source>The comparer determines whether two keys are equal.</source>
          <target state="translated">比較演算子は、2 つのキーが等しいかどうかを判断します。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Collections.IEqualityComparer)">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">このコンス トラクターは、o (1) 操作です。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32)">
          <source>The approximate number of entries that the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> instance can initially contain.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> インスタンスが初期状態で格納できるエントリの概数。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> class that is empty, has the specified initial capacity, and uses the default hash code provider and the default comparer.</source>
          <target state="translated">空で、指定した初期量を備え、既定のハッシュ コード プロバイダーと既定の比較子を使用する、<ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32)">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph> is the number of elements that the <ph id="ph2">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph> can hold.</source>
          <target state="translated">容量、<ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph>は要素の数を<ph id="ph2">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph>を保持できます。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32)">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph>, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">要素が追加されるにつれて、<ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph>容量を増やすは自動的に内部の配列を再割り当てによる要求どおりです。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32)">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph>.</source>
          <target state="translated">コレクションのサイズを推定できる場合に要素を追加するときにサイズ変更操作の数を実行する必要があるの初期量を指定する、<ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32)">
          <source>The hash code provider dispenses hash codes for keys in the <ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph> instance.</source>
          <target state="translated">ハッシュ コード プロバイダー内のキーのハッシュ コードを管理する、<ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph>インスタンス。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32)">
          <source>The default hash code provider is the <ph id="ph1">&lt;xref:System.Collections.CaseInsensitiveHashCodeProvider&gt;</ph>.</source>
          <target state="translated">既定のハッシュ コード プロバイダーが、<ph id="ph1">&lt;xref:System.Collections.CaseInsensitiveHashCodeProvider&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32)">
          <source>The comparer determines whether two keys are equal.</source>
          <target state="translated">比較演算子は、2 つのキーが等しいかどうかを判断します。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32)">
          <source>The default comparer is the <ph id="ph1">&lt;xref:System.Collections.CaseInsensitiveComparer&gt;</ph>.</source>
          <target state="translated">既定の比較子は、<ph id="ph1">&lt;xref:System.Collections.CaseInsensitiveComparer&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32)">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">`capacity`</ph>.</source>
          <target state="translated">このコンス トラクターは、O (<ph id="ph1">`n`</ph>) 操作では、ここで<ph id="ph2">`n`</ph>は<ph id="ph3">`capacity`</ph>します。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> が 0 未満です。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.IHashCodeProvider" /&gt;</ph> that will supply the hash codes for all keys in the <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> インスタンス内のすべてのキーのハッシュ コードを提供する <ph id="ph1">&lt;see cref="T:System.Collections.IHashCodeProvider" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.IComparer" /&gt;</ph> to use to determine whether two keys are equal.</source>
          <target state="translated">2 つのキーが等しいかどうかを判断するために使用する <ph id="ph1">&lt;see cref="T:System.Collections.IComparer" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> class that is empty, has the default initial capacity, and uses the specified hash code provider and the specified comparer.</source>
          <target state="translated">空で、既定の初期量を備え、指定したハッシュ コード プロバイダーと指定した比較子を使用する、<ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph> is the number of elements that the <ph id="ph2">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph> can hold.</source>
          <target state="translated">容量、<ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph>は要素の数を<ph id="ph2">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph>を保持できます。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph>, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">要素が追加されるにつれて、<ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph>容量を増やすは自動的に内部の配列を再割り当てによる要求どおりです。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph>.</source>
          <target state="translated">コレクションのサイズを推定できる場合に要素を追加するときにサイズ変更操作の数を実行する必要があるの初期量を指定する、<ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)">
          <source>The hash code provider dispenses hash codes for keys in the <ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph> instance.</source>
          <target state="translated">ハッシュ コード プロバイダー内のキーのハッシュ コードを管理する、<ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph>インスタンス。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)">
          <source>The default hash code provider is the <ph id="ph1">&lt;xref:System.Collections.CaseInsensitiveHashCodeProvider&gt;</ph>.</source>
          <target state="translated">既定のハッシュ コード プロバイダーが、<ph id="ph1">&lt;xref:System.Collections.CaseInsensitiveHashCodeProvider&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)">
          <source>The comparer determines whether two keys are equal.</source>
          <target state="translated">比較演算子は、2 つのキーが等しいかどうかを判断します。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)">
          <source>The default comparer is the <ph id="ph1">&lt;xref:System.Collections.CaseInsensitiveComparer&gt;</ph>.</source>
          <target state="translated">既定の比較子は、<ph id="ph1">&lt;xref:System.Collections.CaseInsensitiveComparer&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">このコンス トラクターは、o (1) 操作です。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32,System.Collections.IEqualityComparer)">
          <source>The approximate number of entries that the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> object can initially contain.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> オブジェクトが初期状態で格納できるエントリの概数。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32,System.Collections.IEqualityComparer)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.IEqualityComparer" /&gt;</ph> object to use to determine whether two keys are equal and to generate hash codes for the keys in the collection.</source>
          <target state="translated">2 つのキーが等しいかどうかを判断し、コレクション内のキーのハッシュ コードを生成するために使用する <ph id="ph1">&lt;see cref="T:System.Collections.IEqualityComparer" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32,System.Collections.IEqualityComparer)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> class that is empty, has the specified initial capacity, and uses the specified <ph id="ph2">&lt;see cref="T:System.Collections.IEqualityComparer" /&gt;</ph> object.</source>
          <target state="translated">空で、指定した初期量を備え、指定した <ph id="ph2">&lt;see cref="T:System.Collections.IEqualityComparer" /&gt;</ph> オブジェクトを使用する、<ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32,System.Collections.IEqualityComparer)">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph> object is the number of elements that the <ph id="ph2">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph> can hold.</source>
          <target state="translated">容量、<ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph>オブジェクトは、要素の数を<ph id="ph2">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph>を保持できます。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32,System.Collections.IEqualityComparer)">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph>, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">要素が追加されるにつれて、<ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph>容量を増やすは自動的に内部の配列を再割り当てによる要求どおりです。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32,System.Collections.IEqualityComparer)">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph>.</source>
          <target state="translated">コレクションのサイズを推定できる場合に要素を追加するときにサイズ変更操作の数を実行する必要があるの初期量を指定する、<ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32,System.Collections.IEqualityComparer)">
          <source>The <ph id="ph1">&lt;xref:System.Collections.IEqualityComparer&gt;</ph> object combines the comparer and the hash code provider.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEqualityComparer&gt;</ph>オブジェクトは、比較演算子と、ハッシュ コード プロバイダーを組み合わせたものです。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32,System.Collections.IEqualityComparer)">
          <source>The hash code provider dispenses hash codes for keys in the <ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph>.</source>
          <target state="translated">ハッシュ コード プロバイダー内のキーのハッシュ コードを管理する、<ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32,System.Collections.IEqualityComparer)">
          <source>The comparer determines whether two keys are equal.</source>
          <target state="translated">比較演算子は、2 つのキーが等しいかどうかを判断します。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32,System.Collections.IEqualityComparer)">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the <ph id="ph3">`capacity`</ph> parameter.</source>
          <target state="translated">このコンス トラクターは、O (<ph id="ph1">`n`</ph>) 操作では、ここで<ph id="ph2">`n`</ph>は、<ph id="ph3">`capacity`</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32,System.Collections.IEqualityComparer)">
          <source><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> が 0 未満です。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> object that contains the information required to serialize the new <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> instance.</source>
          <target state="translated">新しい <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> インスタンスをシリアル化するために必要な情報を格納する <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> object that contains the source and destination of the serialized stream associated with the new <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> instance.</source>
          <target state="translated">新しい <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> インスタンスに関連付けられているシリアル化ストリームの転送元および転送先を格納する <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> class that is serializable and uses the specified <ph id="ph2">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph>.</source>
          <target state="translated">シリアル化でき、指定した <ph id="ph2">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> と <ph id="ph3">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> を使用する、<ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">このコンス トラクターは、o (1) 操作です。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)">
          <source>The approximate number of entries that the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> instance can initially contain.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> インスタンスが初期状態で格納できるエントリの概数。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.IHashCodeProvider" /&gt;</ph> that will supply the hash codes for all keys in the <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> インスタンス内のすべてのキーのハッシュ コードを提供する <ph id="ph1">&lt;see cref="T:System.Collections.IHashCodeProvider" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.IComparer" /&gt;</ph> to use to determine whether two keys are equal.</source>
          <target state="translated">2 つのキーが等しいかどうかを判断するために使用する <ph id="ph1">&lt;see cref="T:System.Collections.IComparer" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> class that is empty, has the specified initial capacity and uses the specified hash code provider and the specified comparer.</source>
          <target state="translated">空で、指定した初期量を備え、指定したハッシュ コード プロバイダーと指定した比較子を使用する、<ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph> is the number of elements that the <ph id="ph2">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph> can hold.</source>
          <target state="translated">容量、<ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph>は要素の数を<ph id="ph2">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph>を保持できます。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph>, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">要素が追加されるにつれて、<ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph>容量を増やすは自動的に内部の配列を再割り当てによる要求どおりです。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph>.</source>
          <target state="translated">コレクションのサイズを推定できる場合に要素を追加するときにサイズ変更操作の数を実行する必要があるの初期量を指定する、<ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)">
          <source>The hash code provider dispenses hash codes for keys in the <ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph> instance.</source>
          <target state="translated">ハッシュ コード プロバイダー内のキーのハッシュ コードを管理する、<ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph>インスタンス。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)">
          <source>The default hash code provider is the <ph id="ph1">&lt;xref:System.Collections.CaseInsensitiveHashCodeProvider&gt;</ph>.</source>
          <target state="translated">既定のハッシュ コード プロバイダーが、<ph id="ph1">&lt;xref:System.Collections.CaseInsensitiveHashCodeProvider&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)">
          <source>The comparer determines whether two keys are equal.</source>
          <target state="translated">比較演算子は、2 つのキーが等しいかどうかを判断します。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)">
          <source>The default comparer is the <ph id="ph1">&lt;xref:System.Collections.CaseInsensitiveComparer&gt;</ph>.</source>
          <target state="translated">既定の比較子は、<ph id="ph1">&lt;xref:System.Collections.CaseInsensitiveComparer&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">`capacity`</ph>.</source>
          <target state="translated">このコンス トラクターは、O (<ph id="ph1">`n`</ph>) 操作では、ここで<ph id="ph2">`n`</ph>は<ph id="ph3">`capacity`</ph>します。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> が 0 未満です。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameObjectCollectionBase.BaseAdd(System.String,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> key of the entry to add.</source>
          <target state="translated">追加するエントリの <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> キー。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameObjectCollectionBase.BaseAdd(System.String,System.Object)">
          <source>The key can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">キーとして <ph id="ph1">&lt;see langword="null" /&gt;</ph> を指定できます。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameObjectCollectionBase.BaseAdd(System.String,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> value of the entry to add.</source>
          <target state="translated">追加するエントリの <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> 値。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameObjectCollectionBase.BaseAdd(System.String,System.Object)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">値として <ph id="ph1">&lt;see langword="null" /&gt;</ph> を指定できます。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameObjectCollectionBase.BaseAdd(System.String,System.Object)">
          <source>Adds an entry with the specified key and value into the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> instance.</source>
          <target state="translated">指定したキーと値を持つエントリを <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> インスタンスに追加します。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.BaseAdd(System.String,System.Object)">
          <source>If <ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;</ph> already equals the capacity, the capacity of the <ph id="ph2">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</source>
          <target state="translated">場合<ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;</ph>容量の容量と既に同じ、<ph id="ph2">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph>内部の配列を自動的に再割り当てが増加し、新しい要素が追加される前に、既存の要素が新しい配列にコピーされます。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.BaseAdd(System.String,System.Object)">
          <source>If <ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;</ph> is less than the capacity, this method is an O(1) operation.</source>
          <target state="translated">場合<ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;</ph>が少なく、容量よりも、このメソッドは、o (1) 操作になります。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.BaseAdd(System.String,System.Object)">
          <source>If the capacity needs to be increased to accommodate the new element, this method becomes an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;</ph>.</source>
          <target state="translated">容量は、新しい要素を格納するためにする必要があります、このメソッドが O (<ph id="ph1">`n`</ph>) 操作、場所<ph id="ph2">`n`</ph>は<ph id="ph3">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;</ph>します。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.BaseAdd(System.String,System.Object)">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.BaseAdd%2A&gt;</ph> to create a new <ph id="ph2">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph> with elements from an <ph id="ph3">&lt;xref:System.Collections.IDictionary&gt;</ph>.</source>
          <target state="translated">次のコード例では<ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.BaseAdd%2A&gt;</ph>新しい<ph id="ph2">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph>要素を使用、<ph id="ph3">&lt;xref:System.Collections.IDictionary&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameObjectCollectionBase.BaseAdd(System.String,System.Object)">
          <source>The collection is read-only.</source>
          <target state="translated">コレクションは読み取り専用です。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameObjectCollectionBase.BaseClear">
          <source>Removes all entries from the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> インスタンスからすべてのエントリを削除します。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.BaseClear">
          <source><ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;</ph> is set to zero, and references to other objects from elements of the collection are also released.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;</ph> 0 に設定し、コレクションの要素から他のオブジェクトへの参照も解放します。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.BaseClear">
          <source>This method is an O(1) operation.</source>
          <target state="translated">このメソッドは、o (1) 操作です。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.BaseClear">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.BaseClear%2A&gt;</ph> to remove all elements from a <ph id="ph2">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph>.</source>
          <target state="translated">次のコード例では<ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.BaseClear%2A&gt;</ph>からすべての要素を削除する、<ph id="ph2">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameObjectCollectionBase.BaseClear">
          <source>The collection is read-only.</source>
          <target state="translated">コレクションは読み取り専用です。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="T:System.Collections.Specialized.NameObjectCollectionBase">
          <source>Gets the value of the specified entry from the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> インスタンスから、指定したエントリの値を取得します。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.Int32)">
          <source>The zero-based index of the value to get.</source>
          <target state="translated">取得する値の 0 から始まるインデックス。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.Int32)">
          <source>Gets the value of the entry at the specified index of the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> インスタンスの指定したインデックスにあるエントリの値を取得します。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.Int32)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that represents the value of the entry at the specified index.</source>
          <target state="translated">指定したインデックスにあるエントリの値を表す <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.Int32)">
          <source>This method is an O(1) operation.</source>
          <target state="translated">このメソッドは、o (1) 操作です。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.Int32)">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGet%2A&gt;</ph> to get specific keys and values.</source>
          <target state="translated">次のコード例では<ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGet%2A&gt;</ph>特定のキーと値を取得します。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is outside the valid range of indexes for the collection.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> が、コレクションのインデックスの正しい範囲から外れています。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> key of the entry to get.</source>
          <target state="translated">取得するエントリの <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> キー。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.String)">
          <source>The key can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">キーとして <ph id="ph1">&lt;see langword="null" /&gt;</ph> を指定できます。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.String)">
          <source>Gets the value of the first entry with the specified key from the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> インスタンスから、指定したキーを持つ最初のエントリの値を取得します。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that represents the value of the first entry with the specified key, if found; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">指定したキーを持つエントリが存在する場合は、その最初のエントリの値を表す <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.String)">
          <source>If the collection contains multiple entries with the specified key, this method returns only the first entry.</source>
          <target state="translated">コレクションには、指定されたキーに複数のエントリが含まれている場合、このメソッドは、最初のエントリのみを返します。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.String)">
          <source>To get the values of subsequent entries with the same key, use the enumerator to iterate through the collection and compare the keys.</source>
          <target state="translated">同じキーを持つ後続エントリの値を取得するには、コレクションを反復処理し、キーを比較して、列挙子を使用します。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.String)">
          <source>This method returns <ph id="ph1">`null`</ph> in the following cases: 1) if the specified key is not found; and 2) if the specified key is found and its associated value is <ph id="ph2">`null`</ph>.</source>
          <target state="translated">このメソッドが戻る<ph id="ph1">`null`</ph>次の場合: 1) 場合は、指定したキーが見つかりませんでした。および 2) 指定したキーが見つかったかどうか、その関連付けられている値<ph id="ph2">`null`</ph>です。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.String)">
          <source>This method does not distinguish between the two cases.</source>
          <target state="translated">このメソッドは 2 つのケースによって区別されません。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.String)">
          <source>This method is an O(1) operation.</source>
          <target state="translated">このメソッドは、o (1) 操作です。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.String)">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGet%2A&gt;</ph> to get specific keys and values.</source>
          <target state="translated">次のコード例では<ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGet%2A&gt;</ph>特定のキーと値を取得します。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> array that contains all the keys in the <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> インスタンス内のすべてのキーを格納する <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> 配列を返します。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> array that contains all the keys in the <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> インスタンス内のすべてのキーを格納する <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> 配列。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;</ph>.</source>
          <target state="translated">このメソッドは、O (<ph id="ph1">`n`</ph>) 操作では、ここで<ph id="ph2">`n`</ph>は<ph id="ph3">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;</ph>します。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues%2A&gt;</ph> to get an array of the keys or an array of the values.</source>
          <target state="translated">次のコード例では<ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues%2A&gt;</ph>キーの配列または値の配列を取得します。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="T:System.Collections.Specialized.NameObjectCollectionBase">
          <source>Returns an array that contains all the values in the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> インスタンス内のすべての値を格納する配列を返します。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> array that contains all the values in the <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> インスタンス内のすべての値を格納する <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> 配列を返します。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> array that contains all the values in the <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> インスタンス内のすべての値を格納する <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> 配列。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;</ph>.</source>
          <target state="translated">このメソッドは、O (<ph id="ph1">`n`</ph>) 操作では、ここで<ph id="ph2">`n`</ph>は<ph id="ph3">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;</ph>します。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues%2A&gt;</ph> to get an array of the keys or an array of the values.</source>
          <target state="translated">次のコード例では<ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues%2A&gt;</ph>キーの配列または値の配列を取得します。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues(System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the type of array to return.</source>
          <target state="translated">返される配列の型を表す <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues(System.Type)">
          <source>Returns an array of the specified type that contains all the values in the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> インスタンス内のすべての値を格納する、指定した型の配列を返します。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues(System.Type)">
          <source>An array of the specified type that contains all the values in the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> インスタンス内のすべての値を格納する、指定した型の配列。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues(System.Type)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;</ph>.</source>
          <target state="translated">このメソッドは、O (<ph id="ph1">`n`</ph>) 操作では、ここで<ph id="ph2">`n`</ph>は<ph id="ph3">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;</ph>します。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues(System.Type)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues(System.Type)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> は有効な <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> ではありません。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey(System.Int32)">
          <source>The zero-based index of the key to get.</source>
          <target state="translated">取得するキーの 0 から始まるインデックス。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey(System.Int32)">
          <source>Gets the key of the entry at the specified index of the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> インスタンスの指定したインデックスにあるエントリのキーを取得します。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey(System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that represents the key of the entry at the specified index.</source>
          <target state="translated">指定したインデックスにあるエントリのキーを表す <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey(System.Int32)">
          <source>This method is an O(1) operation.</source>
          <target state="translated">このメソッドは、o (1) 操作です。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey(System.Int32)">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGet%2A&gt;</ph> to get specific keys and values.</source>
          <target state="translated">次のコード例では<ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGet%2A&gt;</ph>特定のキーと値を取得します。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is outside the valid range of indexes for the collection.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> が、コレクションのインデックスの正しい範囲から外れています。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> instance contains entries whose keys are not <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> インスタンスが、キーが <ph id="ph2">&lt;see langword="null" /&gt;</ph> ではないエントリを格納しているかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> instance contains entries whose keys are not <ph id="ph3">&lt;see langword="null" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> インスタンスが、キーが <ph id="ph3">&lt;see langword="null" /&gt;</ph> ではないエントリを格納している場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys">
          <source>This method is an O(1) operation.</source>
          <target state="translated">このメソッドは、o (1) 操作です。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys%2A&gt;</ph> to determine if the collection contains keys that are not <ph id="ph2">`null`</ph>.</source>
          <target state="translated">次のコード例では<ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys%2A&gt;</ph>されないキーがコレクションに含まれているかどうかは<ph id="ph2">`null`</ph>します。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameObjectCollectionBase.BaseRemove(System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> key of the entries to remove.</source>
          <target state="translated">削除するエントリの <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> キー。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameObjectCollectionBase.BaseRemove(System.String)">
          <source>The key can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">キーとして <ph id="ph1">&lt;see langword="null" /&gt;</ph> を指定できます。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameObjectCollectionBase.BaseRemove(System.String)">
          <source>Removes the entries with the specified key from the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> instance.</source>
          <target state="translated">指定したキーを持つエントリを <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> インスタンスから削除します。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.BaseRemove(System.String)">
          <source>If the <ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph> does not contain an element with the specified key, the <ph id="ph2">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph> remains unchanged.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph>指定のキーを持つ要素が含まれていない、<ph id="ph2">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph>は変更されません。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.BaseRemove(System.String)">
          <source>No exception is thrown.</source>
          <target state="translated">例外をスローすることはありません。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.BaseRemove(System.String)">
          <source>In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</source>
          <target state="translated">リストなどの連続する要素のコレクションでは、空白になった位置を埋めるために、削除された要素の後にある要素の位置が繰り上げられます。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.BaseRemove(System.String)">
          <source>If the collection is indexed, the indexes of the elements that are moved are also updated.</source>
          <target state="translated">コレクションにインデックスがある場合、移動した要素のインデックスも更新されます。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.BaseRemove(System.String)">
          <source>This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</source>
          <target state="translated">この動作は、要素が概念的にバケットにグループ化されているハッシュ テーブルなどのコレクションには適用されません。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.BaseRemove(System.String)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;</ph>.</source>
          <target state="translated">このメソッドは、O (<ph id="ph1">`n`</ph>) 操作では、ここで<ph id="ph2">`n`</ph>は<ph id="ph3">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;</ph>します。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.BaseRemove(System.String)">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.BaseRemove%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt%2A&gt;</ph> to remove elements from a <ph id="ph3">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph>.</source>
          <target state="translated">次のコード例では<ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.BaseRemove%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt%2A&gt;</ph>要素を削除する、<ph id="ph3">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameObjectCollectionBase.BaseRemove(System.String)">
          <source>The collection is read-only.</source>
          <target state="translated">コレクションは読み取り専用です。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt(System.Int32)">
          <source>The zero-based index of the entry to remove.</source>
          <target state="translated">削除するエントリの 0 から始まるインデックス。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt(System.Int32)">
          <source>Removes the entry at the specified index of the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> インスタンスの指定したインデックスにあるエントリを削除します。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt(System.Int32)">
          <source>In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</source>
          <target state="translated">リストなどの連続する要素のコレクションでは、空白になった位置を埋めるために、削除された要素の後にある要素の位置が繰り上げられます。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt(System.Int32)">
          <source>If the collection is indexed, the indexes of the elements that are moved are also updated.</source>
          <target state="translated">コレクションにインデックスがある場合、移動した要素のインデックスも更新されます。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt(System.Int32)">
          <source>This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</source>
          <target state="translated">この動作は、要素が概念的にバケットにグループ化されているハッシュ テーブルなどのコレクションには適用されません。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt(System.Int32)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;</ph>.</source>
          <target state="translated">このメソッドは、O (<ph id="ph1">`n`</ph>) 操作では、ここで<ph id="ph2">`n`</ph>は<ph id="ph3">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;</ph>します。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt(System.Int32)">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.BaseRemove%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt%2A&gt;</ph> to remove elements from a <ph id="ph3">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph>.</source>
          <target state="translated">次のコード例では<ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.BaseRemove%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt%2A&gt;</ph>要素を削除する、<ph id="ph3">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is outside the valid range of indexes for the collection.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> が、コレクションのインデックスの正しい範囲から外れています。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt(System.Int32)">
          <source>The collection is read-only.</source>
          <target state="translated">コレクションは読み取り専用です。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="T:System.Collections.Specialized.NameObjectCollectionBase">
          <source>Sets the value of an entry in the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> インスタンス内のエントリの値を設定します。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.Int32,System.Object)">
          <source>The zero-based index of the entry to set.</source>
          <target state="translated">設定するエントリの 0 から始まるインデックス。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.Int32,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that represents the new value of the entry to set.</source>
          <target state="translated">設定するエントリの新しい値を表す <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.Int32,System.Object)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">値として <ph id="ph1">&lt;see langword="null" /&gt;</ph> を指定できます。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.Int32,System.Object)">
          <source>Sets the value of the entry at the specified index of the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> インスタンスの指定したインデックスにあるエントリの値を設定します。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.Int32,System.Object)">
          <source>This method is an O(1) operation.</source>
          <target state="translated">このメソッドは、o (1) 操作です。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.Int32,System.Object)">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.BaseSet%2A&gt;</ph> to set the value of a specific element.</source>
          <target state="translated">次のコード例では<ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.BaseSet%2A&gt;</ph>の特定の要素の値を設定します。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.Int32,System.Object)">
          <source>The collection is read-only.</source>
          <target state="translated">コレクションは読み取り専用です。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.Int32,System.Object)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is outside the valid range of indexes for the collection.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> が、コレクションのインデックスの正しい範囲から外れています。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.String,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> key of the entry to set.</source>
          <target state="translated">設定するエントリの <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> キー。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.String,System.Object)">
          <source>The key can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">キーとして <ph id="ph1">&lt;see langword="null" /&gt;</ph> を指定できます。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.String,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that represents the new value of the entry to set.</source>
          <target state="translated">設定するエントリの新しい値を表す <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.String,System.Object)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">値として <ph id="ph1">&lt;see langword="null" /&gt;</ph> を指定できます。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.String,System.Object)">
          <source>Sets the value of the first entry with the specified key in the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> instance, if found; otherwise, adds an entry with the specified key and value into the <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> インスタンス内に指定したキーを持つエントリが存在する場合は、その最初のエントリの値を設定します。存在しない場合は、指定したキーと値を持つエントリを <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> インスタンスに追加します。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.String,System.Object)">
          <source>If the collection contains multiple entries with the specified key, this method sets only the first entry.</source>
          <target state="translated">コレクションには、指定されたキーに複数のエントリが含まれている場合、このメソッドは、最初のエントリのみを設定します。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.String,System.Object)">
          <source>To set the values of subsequent entries with the same key, use the enumerator to iterate through the collection and compare the keys.</source>
          <target state="translated">同じキーを持つ後続のエントリの値を設定するには、コレクションを反復処理し、キーを比較して列挙子を使用します。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.String,System.Object)">
          <source>This method is an O(1) operation.</source>
          <target state="translated">このメソッドは、o (1) 操作です。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.String,System.Object)">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.BaseSet%2A&gt;</ph> to set the value of a specific element.</source>
          <target state="translated">次のコード例では<ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.BaseSet%2A&gt;</ph>の特定の要素の値を設定します。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.String,System.Object)">
          <source>The collection is read-only.</source>
          <target state="translated">コレクションは読み取り専用です。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="P:System.Collections.Specialized.NameObjectCollectionBase.Count">
          <source>Gets the number of key/value pairs contained in the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> インスタンスに格納されているキーと値のペアの数を取得します。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.NameObjectCollectionBase.Count">
          <source>The number of key/value pairs contained in the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> インスタンスに格納されているキーと値のペアの数。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.NameObjectCollectionBase.Count">
          <source>The capacity is the number of elements that the <ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph> can store.</source>
          <target state="translated">容量は、要素の数を<ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph>格納できます。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.NameObjectCollectionBase.Count">
          <source><ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;</ph> is the number of elements that are actually in the <ph id="ph2">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;</ph> 実際には、要素の数、<ph id="ph2">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.NameObjectCollectionBase.Count">
          <source>The capacity is always greater than or equal to <ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;</ph>.</source>
          <target state="translated">容量は、常により大きいまたは等しい<ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.NameObjectCollectionBase.Count">
          <source>If <ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;</ph> exceeds the capacity while adding elements, the capacity is automatically increased by reallocating the internal array before copying the old elements and adding the new elements.</source>
          <target state="translated">場合<ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;</ph>要素を追加するときに、容量を超える場合、容量は前の要素をコピーし、新しい要素を追加する前に、内部配列の再割り当てによって自動的に増加します。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.NameObjectCollectionBase.Count">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">このプロパティ値を取得することは、O(1) 操作になります。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator">
          <source>Returns an enumerator that iterates through the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> を反復処理する列挙子を返します。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> for the <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> インスタンスの <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator">
          <source>This enumerator returns the keys of the collection as strings.</source>
          <target state="translated">この列挙子は、文字列として、コレクションのキーを返します。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated">C# 言語の <ph id="ph1">`foreach`</ph> ステートメント (Visual Basic の場合は <ph id="ph2">`for each`</ph>) を使用することで列挙子の複雑さを回避できます。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">したがって、列挙子を直接操作するのではなく、<ph id="ph1">`foreach`</ph> を使用することをお勧めします。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">列挙子を使用すると、コレクション内のデータを読み取ることができますが、基になるコレクションを変更することはできません。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">最初に、列挙子はコレクション内の 1 番目の要素の前に位置付けられます。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> also brings the enumerator back to this position.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> を実行した場合も、列挙子はこの位置に戻されます。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator">
          <source>At this position, <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">この位置では、<ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> が未定義です。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator">
          <source>Therefore, you must call <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</source>
          <target state="translated">そのため、<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> の値を読み取る前に、<ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> を呼び出して列挙子をコレクションの最初の要素に進める必要があります。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> returns the same object until either <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> は、<ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> または <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> が呼び出されるまでは同じオブジェクトを返します。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> は、<ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> を次の要素に設定します。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator">
          <source>If <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">場合<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>列挙子をコレクションの末尾が、コレクション内の最後の要素の後に配置されているパスと<ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>返します<ph id="ph3">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">列挙子がこの位置では、後続の呼び出しの場合<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>を返すことも<ph id="ph2">`false`</ph>します。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">最後の呼び出し場合<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>返される<ph id="ph2">`false`</ph>、<ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>が定義されていません。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator">
          <source>To set <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the first element of the collection again, you can call <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> followed by <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> をコレクションの最初の要素にもう一度設定するには、<ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> を呼び出してから <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> を呼び出します。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">コレクションが変更されない限り、列挙子は有効です。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">コレクションに対して変更 (要素の追加、変更、削除など) が行われると、列挙子は回復不可能な無効状態になり、その動作は未定義になります。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread safe procedure.</source>
          <target state="translated">列挙子には、コレクションへの排他アクセスがありません。したがって、コレクションの列挙処理は本質的にスレッド セーフな処理ではありません。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">列挙処理でスレッド セーフを確保するには、列挙処理が終わるまでコレクションをロックできます。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">コレクションに対し複数のスレッドがアクセスして読み取りや書き込みを行うことができるようにするには、独自に同期化を実装する必要があります。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator">
          <source>This method is an O(1) operation.</source>
          <target state="translated">このメソッドは、o (1) 操作です。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameObjectCollectionBase.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> object that contains the information required to serialize the <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> インスタンスをシリアル化するために必要な情報を格納する <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameObjectCollectionBase.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> object that contains the source and destination of the serialized stream associated with the <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> インスタンスに関連付けられているシリアル化ストリームの転送元および転送先を格納する <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameObjectCollectionBase.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Implements the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ISerializable" /&gt;</ph> interface and returns the data needed to serialize the <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ISerializable" /&gt;</ph> インターフェイスを実装し、<ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> インスタンスをシリアル化するために必要なデータを返します。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;</ph>.</source>
          <target state="translated">このメソッドは、O (<ph id="ph1">`n`</ph>) 操作では、ここで<ph id="ph2">`n`</ph>は<ph id="ph3">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;</ph>します。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameObjectCollectionBase.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source><ph id="ph1">&lt;paramref name="info" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="info" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>for providing serialization services.</source>
          <target state="translated">シリアル化サービスを提供します。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Associated enumeration:   <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /&gt;</ph> Security action: <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph></source>
          <target state="translated">関連する列挙値:<ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /&gt;</ph>セキュリティ アクション。 <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="P:System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly">
          <source>Gets or sets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> instance is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> インスタンスが読み取り専用かどうかを示す値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> instance is read-only; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> インスタンスが読み取り専用の場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly">
          <source>A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</source>
          <target state="translated">読み取り専用のコレクションでは、コレクション作成後に要素の追加、削除、または変更はできません。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly">
          <source>A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</source>
          <target state="translated">読み取り専用であるコレクションは、コレクションのコレクションの変更を防止するラッパーです。そのため、基になるコレクションの変更が加えられた、読み取り専用コレクションはそれらの変更を反映します。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">このプロパティ値を取得することは、O(1) 操作になります。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly">
          <source>The following code example creates a read-only collection.</source>
          <target state="translated">次のコード例では、読み取り専用コレクションを作成します。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="P:System.Collections.Specialized.NameObjectCollectionBase.Keys">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" /&gt;</ph> instance that contains all the keys in the <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" /&gt;</ph> インスタンス内のすべてのキーを格納する <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> インスタンスを取得します。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.NameObjectCollectionBase.Keys">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" /&gt;</ph> instance that contains all the keys in the <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> インスタンス内のすべてのキーを格納する <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" /&gt;</ph> インスタンス。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.NameObjectCollectionBase.Keys">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">このプロパティ値を取得することは、O(1) 操作になります。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameObjectCollectionBase.OnDeserialization(System.Object)">
          <source>The source of the deserialization event.</source>
          <target state="translated">逆シリアル化イベントのソース。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameObjectCollectionBase.OnDeserialization(System.Object)">
          <source>Implements the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ISerializable" /&gt;</ph> interface and raises the deserialization event when the deserialization is complete.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ISerializable" /&gt;</ph> インターフェイスを実装し、逆シリアル化が完了したときに逆シリアル化イベントを発生させます。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.OnDeserialization(System.Object)">
          <source>While the <ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.OnDeserialization%2A&gt;</ph> method is not visible to COM clients by default, inheriting the <ph id="ph2">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph> class can expose it and can cause undesirable behavior in COM clients.</source>
          <target state="translated">中に、<ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.OnDeserialization%2A&gt;</ph>メソッドは既定では、COM クライアントに表示されていない継承、<ph id="ph2">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph>クラスが公開することし、COM クライアントの望ましくない動作が発生することができます。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.OnDeserialization(System.Object)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;</ph>.</source>
          <target state="translated">このメソッドは、O (<ph id="ph1">`n`</ph>) 操作では、ここで<ph id="ph2">`n`</ph>は<ph id="ph3">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;</ph>します。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameObjectCollectionBase.OnDeserialization(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> object associated with the current <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> instance is invalid.</source>
          <target state="translated">現在の <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> インスタンスに関連付けられている <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> オブジェクトが無効です。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The one-dimensional <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> that is the destination of the elements copied from <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> から要素がコピーされる 1 次元の <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> must have zero-based indexing.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> には、0 から始まるインデックス番号が必要です。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated">コピーの開始位置となる、<bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> の 0 から始まるインデックス。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>Copies the entire <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> to a compatible one-dimensional <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph>, starting at the specified index of the target array.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> 全体を、互換性のある 1 次元の <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph> にコピーします。コピー操作は、コピー先の配列の指定したインデックスから始まる部分に行います。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The specified array must be of a compatible type.</source>
          <target state="translated">指定された配列は、互換性のある型でなければなりません。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>This method uses <ph id="ph1">&lt;xref:System.Array.Copy%2A?displayProperty=nameWithType&gt;</ph> to copy the elements.</source>
          <target state="translated">このメソッドを使用して<ph id="ph1">&lt;xref:System.Array.Copy%2A?displayProperty=nameWithType&gt;</ph>要素のコピー。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>While the <ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.System%23Collections%23ICollection%23CopyTo%2A&gt;</ph> method is not visible to COM clients by default, inheriting the <ph id="ph2">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph> class can expose it and can cause undesirable behavior in COM clients.</source>
          <target state="translated">中に、<ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.System%23Collections%23ICollection%23CopyTo%2A&gt;</ph>メソッドは既定では、COM クライアントに表示されていない継承、<ph id="ph2">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph>クラスが公開することし、COM クライアントの望ましくない動作が発生することができます。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;</ph>.</source>
          <target state="translated">このメソッドは、O (<ph id="ph1">`n`</ph>) 操作では、ここで<ph id="ph2">`n`</ph>は<ph id="ph3">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;</ph>します。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> が 0 未満です。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is multidimensional.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> が多次元です。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The number of elements in the source <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> is greater than the available space from <ph id="ph2">&lt;paramref name="index" /&gt;</ph> to the end of the destination <ph id="ph3">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">コピー元の <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> の要素数が、コピー先 <ph id="ph3">&lt;paramref name="array" /&gt;</ph> の <ph id="ph2">&lt;paramref name="index" /&gt;</ph> から最後までの使用可能領域を超えています。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The type of the source <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> cannot be cast automatically to the type of the destination <ph id="ph2">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">コピー元の <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> の型をコピー先の <ph id="ph2">&lt;paramref name="array" /&gt;</ph> の型に自動的にキャストすることはできません。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="P:System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#IsSynchronized">
          <source>Gets a value indicating whether access to the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> object is synchronized (thread safe).</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> オブジェクトへのアクセスが同期されている (スレッド セーフである) かどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#IsSynchronized">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if access to the <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> object is synchronized (thread safe); otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> オブジェクトへのアクセスが同期されている (スレッド セーフである) 場合は <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph>。それ以外の場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#IsSynchronized">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">既定値は、<ph id="ph1">&lt;see langword="false" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#IsSynchronized">
          <source>A <ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph> object is not synchronized.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph>オブジェクトが同期されていません。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#IsSynchronized">
          <source>Derived classes can provide a synchronized version of the <ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph> using the <ph id="ph2">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> property.</source>
          <target state="translated">派生クラスでの同期されたバージョンを提供できる、<ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph>を使用して、<ph id="ph2">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#IsSynchronized">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">コレクションの列挙は、本質的にスレッド セーフなプロシージャではありません。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#IsSynchronized">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">コレクションの同期がとられている場合でも、別のスレッドによってそのコレクションを変更できるため、変更の結果として列挙子は例外をスローします。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#IsSynchronized">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">列挙処理を確実にスレッド セーフに行うには、列挙中にコレクションをロックするか、他のスレッドによって行われた変更によってスローされる例外をキャッチします。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#IsSynchronized">
          <source>The following code example shows how to lock the collection using the <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> property during the entire enumeration.</source>
          <target state="translated">次のコード例を使用してコレクションをロックする方法を示しています、<ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph>列挙中にプロパティです。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#IsSynchronized">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">このプロパティ値を取得することは、O(1) 操作になります。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="P:System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#SyncRoot">
          <source>Gets an object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> オブジェクトへのアクセスを同期するために使用できるオブジェクトを取得します。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#SyncRoot">
          <source>An object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> オブジェクトへのアクセスを同期するために使用できるオブジェクト。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#SyncRoot">
          <source>Derived classes can provide their own synchronized version of the <ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph> class using the <ph id="ph2">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> property.</source>
          <target state="translated">派生クラスは、独自の同期されたバージョンを指定できます、<ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph>クラスを使用して、<ph id="ph2">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#SyncRoot">
          <source>The synchronizing code must perform operations on the <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph> object, not directly on the <ph id="ph3">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph> object.</source>
          <target state="translated">同期されたコードで操作を実行する必要があります、<ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph>のプロパティ、<ph id="ph2">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph>オブジェクト上で直接、<ph id="ph3">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#SyncRoot">
          <source>This ensures proper operation of collections that are derived from other objects.</source>
          <target state="translated">これにより、他のオブジェクトから派生したコレクションを適切に操作できるようになります。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#SyncRoot">
          <source>Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph> object.</source>
          <target state="translated">具体的には、同時に変更する可能性がある別スレッドとの適切な同期を維持、<ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#SyncRoot">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">コレクションの列挙は、本質的にスレッド セーフなプロシージャではありません。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#SyncRoot">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">コレクションの同期がとられている場合でも、別のスレッドによってそのコレクションを変更できるため、変更の結果として列挙子は例外をスローします。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#SyncRoot">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">列挙処理を確実にスレッド セーフに行うには、列挙中にコレクションをロックするか、他のスレッドによって行われた変更によってスローされる例外をキャッチします。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#SyncRoot">
          <source>The following code example shows how to lock the collection using the <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> during the entire enumeration.</source>
          <target state="translated">次のコード例を使用してコレクションをロックする方法を示しています、<ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph>列挙中にします。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#SyncRoot">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">このプロパティ値を取得することは、O(1) 操作になります。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>