<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IOrderedDictionary.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5445f2081060cc27f506f6e9a66e446bc9a223852.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">445f2081060cc27f506f6e9a66e446bc9a223852</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Collections.Specialized.IOrderedDictionary">
          <source>Represents an indexed collection of key/value pairs.</source>
          <target state="translated">キーと値のペアのインデックス付きコレクションを表します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.IOrderedDictionary">
          <source><ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> elements can be accessed either with the key or with the index.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> 要素は、キーまたはインデックスにアクセスできます。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.IOrderedDictionary">
          <source>Each element is a key/value pair stored in a <ph id="ph1">&lt;xref:System.Collections.DictionaryEntry&gt;</ph> structure.</source>
          <target state="translated">各要素に格納されているキー/値ペアは、<ph id="ph1">&lt;xref:System.Collections.DictionaryEntry&gt;</ph>構造体。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.IOrderedDictionary">
          <source>Each pair must have a unique key that is not <ph id="ph1">`null`</ph>, but the value can be <ph id="ph2">`null`</ph> and does not have to be unique.</source>
          <target state="translated">各ペアはではない一意キーを持つ必要があります<ph id="ph1">`null`</ph>、値を指定できますが、<ph id="ph2">`null`</ph>が一意であるとします。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.IOrderedDictionary">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> interface allows the contained keys and values to be enumerated, but it does not imply any particular sort order.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph>インターフェイスにより、格納されているキーと値を列挙するが、特定の並べ替え順序を意味しません。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.IOrderedDictionary">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`For Each`</ph> in Visual Basic) returns an object of the type of the elements in the collection.</source>
          <target state="translated"><ph id="ph1">`foreach`</ph> C# 言語のステートメント (<ph id="ph2">`For Each`</ph> Visual Basic で)、コレクション内の要素の型のオブジェクトを返します。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.IOrderedDictionary">
          <source>Because each element of the <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> is a key/value pair, the element type is not the type of the key or the type of the value.</source>
          <target state="translated">の各要素、<ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph>キー/値ペアは、要素型は、キーの型または値の型ではありません。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.IOrderedDictionary">
          <source>Instead, the element type is <ph id="ph1">&lt;xref:System.Collections.DictionaryEntry&gt;</ph>, as the following example shows.</source>
          <target state="translated">要素の型は、代わりに、<ph id="ph1">&lt;xref:System.Collections.DictionaryEntry&gt;</ph>次の例を示します。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.IOrderedDictionary">
          <source>The <ph id="ph1">`foreach`</ph> statement is a wrapper around the enumerator, which allows only reading from, not writing to, the collection.</source>
          <target state="translated"><ph id="ph1">`foreach`</ph>ステートメントは書き込まないことから、コレクションに読み取りのみが使用できる列挙子のラッパー。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.IOrderedDictionary">
          <source>The following code example demonstrates the implementation of a simple <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> based on the <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> class.</source>
          <target state="translated">次のコード例は、簡単な実装を示します<ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph>に基づいて、<ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.IOrderedDictionary">
          <source>The implemented <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> stores first names as the keys and last names as the values, with the added requirement that each first name is unique.</source>
          <target state="translated">実装された<ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph>値、それぞれの名が一意である追加の要件として、キーと姓と名前を格納します。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.IOrderedDictionary">
          <source>The implementing class must have a means to compare keys.</source>
          <target state="translated">実装するクラスには、キーを比較するための手段が必要です。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source>Returns an enumerator that iterates through the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.IOrderedDictionary" /&gt;</ph> collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Specialized.IOrderedDictionary" /&gt;</ph> コレクションを反復処理する列挙子を返します。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> for the entire <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.IOrderedDictionary" /&gt;</ph> collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> コレクション全体の <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.IOrderedDictionary" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source>[Visual Basic, C#]</source>
          <target state="translated">[Visual Basic、C# の場合]</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated">C# 言語の <ph id="ph1">`foreach`</ph> ステートメント (Visual Basic の場合は <ph id="ph2">`for each`</ph>) を使用することで列挙子の複雑さを回避できます。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended instead of directly manipulating the enumerator.</source>
          <target state="translated">したがってを使用して<ph id="ph1">`foreach`</ph>列挙子を直接操作するのではなくをお勧めします。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">列挙子を使用すると、コレクション内のデータを読み取ることができますが、基になるコレクションを変更することはできません。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">最初に、列挙子はコレクション内の 1 番目の要素の前に位置付けられます。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> also brings the enumerator back to this position.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> を実行した場合も、列挙子はこの位置に戻されます。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source>At this position, the <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> property is undefined.</source>
          <target state="translated">この位置にある、<ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>プロパティが定義されていません。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source>Therefore, you must call <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</source>
          <target state="translated">そのため、<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> の値を読み取る前に、<ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> を呼び出して列挙子をコレクションの最初の要素に進める必要があります。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> returns the same object until either <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> は、<ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> または <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> が呼び出されるまでは同じオブジェクトを返します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> は、<ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> を次の要素に設定します。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source>If <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">場合<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>列挙子をコレクションの末尾が、コレクション内の最後の要素の後に配置されているパスと<ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>返します<ph id="ph3">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">列挙子がこの位置では、後続の呼び出しの場合<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>を返すことも<ph id="ph2">`false`</ph>します。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">最後の呼び出し場合<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>返される<ph id="ph2">`false`</ph>、<ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>が定義されていません。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source>To set <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the first element of the collection again, you can call <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> followed by <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> をコレクションの最初の要素にもう一度設定するには、<ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> を呼び出してから <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> を呼び出します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">コレクションが変更されない限り、列挙子は有効です。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">コレクションに対して変更 (要素の追加、変更、削除など) が行われると、列挙子は回復不可能な無効状態になり、その動作は未定義になります。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">列挙子にはコレクションへの排他アクセス権限はないため、コレクションの列挙処理は本質的にスレッド セーフな処理ではありません。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">列挙処理でスレッド セーフを確保するには、列挙処理が終わるまでコレクションをロックできます。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">コレクションに対し複数のスレッドがアクセスして読み取りや書き込みを行うことができるようにするには、独自に同期化を実装する必要があります。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source>The following code example demonstrates the implementation of a simple <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> based on the <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> class.</source>
          <target state="translated">次のコード例は、簡単な実装を示します<ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph>に基づいて、<ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source>The implemented <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> stores first names as the keys and last names as the values, with the added requirement that each first name is unique.</source>
          <target state="translated">実装された<ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph>値、それぞれの名が一意である追加の要件として、キーと姓と名前を格納します。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source>This code is part of a larger code example provided for the <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> class.</source>
          <target state="translated">このコードに示されている例のコードの一部である、<ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)">
          <source>The zero-based index at which the key/value pair should be inserted.</source>
          <target state="translated">キーと値のペアを挿入する位置の、0 から始まるインデックス。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)">
          <source>The object to use as the key of the element to add.</source>
          <target state="translated">追加する要素のキーとして使用するオブジェクト。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)">
          <source>The object to use as the value of the element to add.</source>
          <target state="translated">追加する要素の値として使用するオブジェクト。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">値として <ph id="ph1">&lt;see langword="null" /&gt;</ph> を指定できます。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)">
          <source>Inserts a key/value pair into the collection at the specified index.</source>
          <target state="translated">コレクション内の指定したインデックス位置に、キーと値のペアを挿入します。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)">
          <source><ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> accepts <ph id="ph2">`null`</ph> as a valid value and allows duplicate elements.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> 受け付ける<ph id="ph2">`null`</ph>有効な値としてでき、重複する要素。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)">
          <source>If the <ph id="ph1">`index`</ph> parameter is equal to <ph id="ph2">&lt;xref:System.Collections.ICollection.Count%2A&gt;</ph>, the <ph id="ph3">`value`</ph> parameter is added to the end of the <ph id="ph4">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> collection.</source>
          <target state="translated">場合、<ph id="ph1">`index`</ph>パラメーターと等しい<ph id="ph2">&lt;xref:System.Collections.ICollection.Count%2A&gt;</ph>、<ph id="ph3">`value`</ph>パラメーターがの末尾に追加された、<ph id="ph4">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph>コレクション。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)">
          <source>In collections of contiguous elements, such as lists, the elements that follow the insertion point move down to accommodate the new element.</source>
          <target state="translated">リストなどの連続する要素のコレクションでは、新しい要素を挿入するために、挿入位置より後にある要素の位置が繰り下げられます。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)">
          <source>If the collection is indexed, the indexes of the elements that are moved are also updated.</source>
          <target state="translated">コレクションにインデックスがある場合、移動した要素のインデックスも更新されます。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)">
          <source>This behavior does not apply to collections where elements are conceptually grouped together, such as a hash table.</source>
          <target state="translated">この動作は、ここで要素が概念的にグループ化されたハッシュ テーブルなどのコレクションには適用されません。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)">
          <source>The following code example demonstrates the implementation of a simple <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> based on the <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> class.</source>
          <target state="translated">次のコード例は、簡単な実装を示します<ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph>に基づいて、<ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)">
          <source>The implemented <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> stores first names as the keys and last names as the values, with the added requirement that each first name is unique.</source>
          <target state="translated">実装された<ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph>値、それぞれの名が一意である追加の要件として、キーと姓と名前を格納します。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)">
          <source>This code is part of a larger code example provided for the <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> class.</source>
          <target state="translated">このコードに示されている例のコードの一部である、<ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> が 0 未満です。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="P:System.Collections.ICollection.Count" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> が <ph id="ph2">&lt;see cref="P:System.Collections.ICollection.Count" /&gt;</ph> より大きくなっています。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)">
          <source>An element with the same key already exists in the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.IOrderedDictionary" /&gt;</ph> collection.</source>
          <target state="translated">同じキーを持つ要素が、<ph id="ph1">&lt;see cref="T:System.Collections.Specialized.IOrderedDictionary" /&gt;</ph> コレクションに既に存在します。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.IOrderedDictionary" /&gt;</ph> collection is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Specialized.IOrderedDictionary" /&gt;</ph> コレクションは読み取り専用です。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.IOrderedDictionary" /&gt;</ph> collection has a fixed size.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Specialized.IOrderedDictionary" /&gt;</ph> コレクションが固定サイズです。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="P:System.Collections.Specialized.IOrderedDictionary.Item(System.Int32)">
          <source>The zero-based index of the element to get or set.</source>
          <target state="translated">取得または設定する要素の、0 から始まるインデックス番号。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="P:System.Collections.Specialized.IOrderedDictionary.Item(System.Int32)">
          <source>Gets or sets the element at the specified index.</source>
          <target state="translated">指定したインデックスにある要素を取得または設定します。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.IOrderedDictionary.Item(System.Int32)">
          <source>The element at the specified index.</source>
          <target state="translated">指定したインデックス位置にある要素。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.IOrderedDictionary.Item(System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> accepts <ph id="ph2">`null`</ph> as a valid value and allows duplicate elements.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> 受け付ける<ph id="ph2">`null`</ph>有効な値としてでき、重複する要素。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.IOrderedDictionary.Item(System.Int32)">
          <source>The C# language uses the  keyword to define the indexers instead of implementing the <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary.Item%2A&gt;</ph> property.</source>
          <target state="translated">C# 言語キーワードを使用して実装する代わりに、インデクサーの定義、<ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary.Item%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.IOrderedDictionary.Item(System.Int32)">
          <source>Visual Basic implements <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary.Item%2A&gt;</ph> as a default property, which provides the same indexing functionality.</source>
          <target state="translated">Visual Basic は、<ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary.Item%2A&gt;</ph> を既定のプロパティとして実装しており、同様のインデックス機能を提供します。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.IOrderedDictionary.Item(System.Int32)">
          <source>This property allows you to access a specific element in the collection by using the following syntax:</source>
          <target state="translated">このプロパティでは、次の構文を使用して、コレクション内の特定の要素にアクセスすることができます。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.IOrderedDictionary.Item(System.Int32)">
          <source>The following code example demonstrates the implementation of a simple <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> based on the <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> class.</source>
          <target state="translated">次のコード例は、簡単な実装を示します<ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph>に基づいて、<ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.IOrderedDictionary.Item(System.Int32)">
          <source>The implemented <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> stores first names as the keys and last names as the values, with the added requirement that each first name is unique.</source>
          <target state="translated">実装された<ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph>値、それぞれの名が一意である追加の要件として、キーと姓と名前を格納します。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.IOrderedDictionary.Item(System.Int32)">
          <source>This code is part of a larger code example provided for the <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> class.</source>
          <target state="translated">このコードに示されている例のコードの一部である、<ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="P:System.Collections.Specialized.IOrderedDictionary.Item(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> が 0 未満です。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="P:System.Collections.Specialized.IOrderedDictionary.Item(System.Int32)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="P:System.Collections.Specialized.IOrderedDictionary.Item(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is equal to or greater than <ph id="ph2">&lt;see cref="P:System.Collections.ICollection.Count" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> が <ph id="ph2">&lt;see cref="P:System.Collections.ICollection.Count" /&gt;</ph> 以上になっています。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.IOrderedDictionary.RemoveAt(System.Int32)">
          <source>The zero-based index of the element to remove.</source>
          <target state="translated">削除する要素の 0 から始まるインデックス。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.IOrderedDictionary.RemoveAt(System.Int32)">
          <source>Removes the element at the specified index.</source>
          <target state="translated">指定したインデックス位置にある要素を削除します。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.RemoveAt(System.Int32)">
          <source>In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</source>
          <target state="translated">リストなどの連続する要素のコレクションでは、空白になった位置を埋めるために、削除された要素の後にある要素の位置が繰り上げられます。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.RemoveAt(System.Int32)">
          <source>If the collection is indexed, the indexes of the elements that are moved are also updated.</source>
          <target state="translated">コレクションにインデックスがある場合、移動した要素のインデックスも更新されます。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.RemoveAt(System.Int32)">
          <source>This behavior does not apply to collections where elements are conceptually grouped together, such as a hash table.</source>
          <target state="translated">この動作は、ここで要素が概念的にグループ化されたハッシュ テーブルなどのコレクションには適用されません。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.RemoveAt(System.Int32)">
          <source>The following code example demonstrates the implementation of a simple <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> based on the <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> class.</source>
          <target state="translated">次のコード例は、簡単な実装を示します<ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph>に基づいて、<ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.RemoveAt(System.Int32)">
          <source>The implemented <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> stores first names as the keys and last names as the values, with the added requirement that each first name is unique.</source>
          <target state="translated">実装された<ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph>値、それぞれの名が一意である追加の要件として、キーと姓と名前を格納します。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.RemoveAt(System.Int32)">
          <source>This code is part of a larger code example provided for the <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> class.</source>
          <target state="translated">このコードに示されている例のコードの一部である、<ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.IOrderedDictionary.RemoveAt(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> が 0 未満です。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.IOrderedDictionary.RemoveAt(System.Int32)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.IOrderedDictionary.RemoveAt(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is equal to or greater than <ph id="ph2">&lt;see cref="P:System.Collections.ICollection.Count" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> が <ph id="ph2">&lt;see cref="P:System.Collections.ICollection.Count" /&gt;</ph> 以上になっています。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.IOrderedDictionary.RemoveAt(System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.IOrderedDictionary" /&gt;</ph> collection is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Specialized.IOrderedDictionary" /&gt;</ph> コレクションは読み取り専用です。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.IOrderedDictionary.RemoveAt(System.Int32)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.IOrderedDictionary.RemoveAt(System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.IOrderedDictionary" /&gt;</ph> collection has a fixed size.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Specialized.IOrderedDictionary" /&gt;</ph> コレクションが固定サイズです。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>