<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ListDictionary.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac523c2e1a062c542dcec2f01cef58c885f0f0732b3.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">23c2e1a062c542dcec2f01cef58c885f0f0732b3</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Collections.Specialized.ListDictionary">
          <source>Implements <ph id="ph1">&lt;see langword="IDictionary" /&gt;</ph> using a singly linked list.</source>
          <target state="translated">シングルリンク リストを使用して <ph id="ph1">&lt;see langword="IDictionary" /&gt;</ph> を実装します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Collections.Specialized.ListDictionary">
          <source>Recommended for collections that typically include fewer than 10 items.</source>
          <target state="translated">おおむね 10 個未満の項目を格納するコレクションでの使用をお勧めします。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.ListDictionary">
          <source>This is a simple implementation of <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> using a singly linked list.</source>
          <target state="translated">これは、簡単な実装<ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph>シングル リンク リストを使用します。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.ListDictionary">
          <source>It is smaller and faster than a <ph id="ph1">&lt;xref:System.Collections.Hashtable&gt;</ph> if the number of elements is 10 or less.</source>
          <target state="translated">これは、サイズが小さくより高速、<ph id="ph1">&lt;xref:System.Collections.Hashtable&gt;</ph>要素の数が 10 以下の場合。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.ListDictionary">
          <source>This should not be used if performance is important for large numbers of elements.</source>
          <target state="translated">これはいない、パフォーマンスが多数の要素の重要な場合使用する必要があります。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.ListDictionary">
          <source>Items in a <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph> are not in any guaranteed order; code should not depend on the current order.</source>
          <target state="translated">項目を<ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>にない順序が保証されるいずれかです。 コードは、現在の順序に依存しないようにします。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.ListDictionary">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph> is implemented for fast keyed retrieval; the actual internal order of items is implementation-dependent and could change in future versions of the product.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>の実装はキー付きの取得を高速です。 アイテムの実際の内部の順序は将来の製品のバージョンで変更できる、実装に依存します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.ListDictionary">
          <source>Members, such as <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary.Item%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Collections.Specialized.ListDictionary.Add%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.Specialized.ListDictionary.Remove%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Collections.Specialized.ListDictionary.Contains%2A&gt;</ph> are O(<ph id="ph5">`n`</ph>) operations, where <ph id="ph6">`n`</ph> is <ph id="ph7">&lt;xref:System.Collections.Specialized.ListDictionary.Count%2A&gt;</ph>.</source>
          <target state="translated">メンバーなど<ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary.Item%2A&gt;</ph>、 <ph id="ph2">&lt;xref:System.Collections.Specialized.ListDictionary.Add%2A&gt;</ph>、 <ph id="ph3">&lt;xref:System.Collections.Specialized.ListDictionary.Remove%2A&gt;</ph>、および<ph id="ph4">&lt;xref:System.Collections.Specialized.ListDictionary.Contains%2A&gt;</ph>O は、(<ph id="ph5">`n`</ph>)、操作を<ph id="ph6">`n`</ph>は<ph id="ph7">&lt;xref:System.Collections.Specialized.ListDictionary.Count%2A&gt;</ph>します。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.ListDictionary">
          <source>A key cannot be <ph id="ph1">`null`</ph>, but a value can.</source>
          <target state="translated">キーには<ph id="ph1">`null`</ph>値のことができますが、します。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.ListDictionary">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in Visual Basic) returns an object of the type of the elements in the collection.</source>
          <target state="translated"><ph id="ph1">`foreach`</ph> C# 言語のステートメント (<ph id="ph2">`for each`</ph> Visual Basic で)、コレクション内の要素の型のオブジェクトを返します。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.ListDictionary">
          <source>Since each element of the <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph> is a key/value pair, the element type is not the type of the key or the type of the value.</source>
          <target state="translated">以降の各要素、<ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>キー/値ペアは、要素型は、キーの型または値の型ではありません。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.ListDictionary">
          <source>Instead, the element type is <ph id="ph1">&lt;xref:System.Collections.DictionaryEntry&gt;</ph>.</source>
          <target state="translated">要素の型は、代わりに、<ph id="ph1">&lt;xref:System.Collections.DictionaryEntry&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.ListDictionary">
          <source>For example:</source>
          <target state="translated">例:</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.ListDictionary">
          <source>The <ph id="ph1">`foreach`</ph> statement is a wrapper around the enumerator, which only allows reading from, not writing to, the collection.</source>
          <target state="translated"><ph id="ph1">`foreach`</ph>ステートメントがしか書き込まないことから、コレクションへの読み取りを許可する列挙子のラッパー。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.ListDictionary">
          <source>The following code example demonstrates several of the properties and methods of <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>.</source>
          <target state="translated">次のコード例は、一部のプロパティとメソッドを示しています。<ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.ListDictionary">
          <source>Public static (<ph id="ph1">&lt;see langword="Shared" /&gt;</ph> in Visual Basic) members of this type are thread safe.</source>
          <target state="translated">パブリック静的 (<ph id="ph1">&lt;see langword="Shared" /&gt;</ph> Visual Basic で) この型のメンバーは、スレッド セーフであります。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.ListDictionary">
          <source>Any instance members are not guaranteed to be thread safe.</source>
          <target state="translated">インスタンス メンバーの場合は、スレッド セーフであるとは限りません。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.ListDictionary">
          <source>This implementation does not provide a synchronized (thread safe) wrapper for a <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph>, but derived classes can create their own synchronized versions of the <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph> using the <ph id="ph3">&lt;see cref="P:System.Collections.Specialized.ListDictionary.SyncRoot" /&gt;</ph> property.</source>
          <target state="translated">この実装は同期済みは提供されませんの (スレッド セーフな) ラッパー、 <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph>、派生クラスは、独自の同期されたバージョンを作成できますが、<ph id="ph2">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph>を使用して、<ph id="ph3">&lt;see cref="P:System.Collections.Specialized.ListDictionary.SyncRoot" /&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.ListDictionary">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">コレクションの列挙は、本質的にスレッド セーフなプロシージャではありません。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.ListDictionary">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">コレクションの同期がとられている場合でも、別のスレッドによってそのコレクションを変更できるため、変更の結果として列挙子は例外をスローします。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.ListDictionary">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">列挙処理を確実にスレッド セーフに行うには、列挙中にコレクションをロックするか、他のスレッドによって行われた変更によってスローされる例外をキャッチします。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="T:System.Collections.Specialized.ListDictionary">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.#ctor">
          <source>Creates an empty <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph> using the default comparer.</source>
          <target state="translated">既定の比較子を使用して空の <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph> を作成します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.#ctor">
          <source>The comparer determines whether two keys are equal.</source>
          <target state="translated">比較演算子は、2 つのキーが等しいかどうかを判断します。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.#ctor">
          <source>Every key in a <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph> must be unique.</source>
          <target state="translated">内のすべてのキー、<ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>一意である必要があります。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.#ctor">
          <source>The default comparer is the key's implementation of <ph id="ph1">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">既定の比較子は、キーの<ph id="ph1">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph>します。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.#ctor">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">このコンス トラクターは、o (1) 操作です。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.#ctor">
          <source>The following code example demonstrates several of the properties and methods of <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>.</source>
          <target state="translated">次のコード例は、一部のプロパティとメソッドを示しています。<ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.#ctor(System.Collections.IComparer)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.IComparer" /&gt;</ph> to use to determine whether two keys are equal.</source>
          <target state="translated">2 つのキーが等しいかどうかを判断するために使用する <ph id="ph1">&lt;see cref="T:System.Collections.IComparer" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.#ctor(System.Collections.IComparer)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.#ctor(System.Collections.IComparer)">
          <source><ph id="ph1">&lt;see langword="null" /&gt;</ph> to use the default comparer, which is each key's implementation of <ph id="ph2">&lt;see cref="M:System.Object.Equals(System.Object)" /&gt;</ph>.</source>
          <target state="translated">各キーの <ph id="ph2">&lt;see cref="M:System.Object.Equals(System.Object)" /&gt;</ph> の実装である既定の比較子を使用する場合は <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.#ctor(System.Collections.IComparer)">
          <source>Creates an empty <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph> using the specified comparer.</source>
          <target state="translated">指定した比較子を使用して空の <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph> を作成します。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.#ctor(System.Collections.IComparer)">
          <source>The comparer determines whether two keys are equal.</source>
          <target state="translated">比較演算子は、2 つのキーが等しいかどうかを判断します。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.#ctor(System.Collections.IComparer)">
          <source>Every key in a <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph> must be unique.</source>
          <target state="translated">内のすべてのキー、<ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>一意である必要があります。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.#ctor(System.Collections.IComparer)">
          <source>The default comparer is the key's implementation of <ph id="ph1">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">既定の比較子は、キーの<ph id="ph1">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph>します。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.#ctor(System.Collections.IComparer)">
          <source>The custom comparer enables such scenarios as doing lookups with case-insensitive strings.</source>
          <target state="translated">カスタムの比較演算子、大文字と小文字の文字列の検索を行うようなシナリオを有効にします。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.#ctor(System.Collections.IComparer)">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">このコンス トラクターは、o (1) 操作です。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.Add(System.Object,System.Object)">
          <source>The key of the entry to add.</source>
          <target state="translated">追加するエントリのキー。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.Add(System.Object,System.Object)">
          <source>The value of the entry to add.</source>
          <target state="translated">追加するエントリの値。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.Add(System.Object,System.Object)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">値として <ph id="ph1">&lt;see langword="null" /&gt;</ph> を指定できます。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.Add(System.Object,System.Object)">
          <source>Adds an entry with the specified key and value into the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph>.</source>
          <target state="translated">指定したキーおよび値を持つエントリを <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph> に追加します。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.Add(System.Object,System.Object)">
          <source>An object that has no correlation between its state and its hash code value should typically not be used as the key.</source>
          <target state="translated">オブジェクトの状態とそのハッシュ コード値間の相関関係を持たない必要があります通常されませんするキーとして使用します。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.Add(System.Object,System.Object)">
          <source>For example, String objects are better than StringBuilder objects for use as keys.</source>
          <target state="translated">たとえば、文字列オブジェクトは、キーとして使用 StringBuilder オブジェクトよりも優れています。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.Add(System.Object,System.Object)">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary.Item%2A&gt;</ph> property to add new elements by setting the value of a key that does not exist in the <ph id="ph2">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>; for example, <ph id="ph3">`myCollection["myNonexistentKey"] = myValue`</ph>.</source>
          <target state="translated">使用することも、<ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary.Item%2A&gt;</ph>にキーの値を設定して、新しい要素を追加するプロパティが存在しません、 <ph id="ph2">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>。 たとえば、<ph id="ph3">`myCollection["myNonexistentKey"] = myValue`</ph>です。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.Add(System.Object,System.Object)">
          <source>However, if the specified key already exists in the <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>, setting the <ph id="ph2">&lt;xref:System.Collections.Specialized.ListDictionary.Item%2A&gt;</ph> property overwrites the old value.</source>
          <target state="translated">ただしで指定したキーが既に存在する場合、 <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>、設定、<ph id="ph2">&lt;xref:System.Collections.Specialized.ListDictionary.Item%2A&gt;</ph>プロパティに古い値が上書きされます。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.Add(System.Object,System.Object)">
          <source>In contrast, the <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary.Add%2A&gt;</ph> method does not modify existing elements.</source>
          <target state="translated">これに対し、<ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary.Add%2A&gt;</ph>メソッドでは、既存の要素は変更しません。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.Add(System.Object,System.Object)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Specialized.ListDictionary.Count%2A&gt;</ph>.</source>
          <target state="translated">このメソッドは、O (<ph id="ph1">`n`</ph>) 操作では、ここで<ph id="ph2">`n`</ph>は<ph id="ph3">&lt;xref:System.Collections.Specialized.ListDictionary.Count%2A&gt;</ph>します。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.Add(System.Object,System.Object)">
          <source>The following code example adds to and removes elements from a <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>.</source>
          <target state="translated">次のコード例に追加しから要素を削除、<ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.Add(System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.Add(System.Object,System.Object)">
          <source>An entry with the same key already exists in the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph>.</source>
          <target state="translated">同じキーを持つエントリが、<ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph> に既に存在します。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.Clear">
          <source>Removes all entries from the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph> からすべてのエントリを削除します。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.Clear">
          <source><ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary.Count%2A&gt;</ph> is set to zero, and references to other objects from elements of the collection are also released.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary.Count%2A&gt;</ph> 0 に設定し、コレクションの要素から他のオブジェクトへの参照も解放します。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.Clear">
          <source>This method is an O(1) operation.</source>
          <target state="translated">このメソッドは、o (1) 操作です。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.Clear">
          <source>The following code example adds to and removes elements from a <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>.</source>
          <target state="translated">次のコード例に追加しから要素を削除、<ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.Contains(System.Object)">
          <source>The key to locate in the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph>.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph> 内で検索されるキー。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.Contains(System.Object)">
          <source>Determines whether the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph> contains a specific key.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph> に特定のキーが格納されているかどうかを判断します。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.Contains(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph> contains an entry with the specified key; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">指定したキーを持つエントリが <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph> に格納されている場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.Contains(System.Object)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Specialized.ListDictionary.Count%2A&gt;</ph>.</source>
          <target state="translated">このメソッドは、O (<ph id="ph1">`n`</ph>) 操作では、ここで<ph id="ph2">`n`</ph>は<ph id="ph3">&lt;xref:System.Collections.Specialized.ListDictionary.Count%2A&gt;</ph>します。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.Contains(System.Object)">
          <source>Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods on <ph id="ph3">`key`</ph> to determine whether <ph id="ph4">`item`</ph> exists.</source>
          <target state="translated">以降、.NET Framework 2.0 では、このメソッドを使用して、コレクションのオブジェクトの<ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph>メソッド<ph id="ph3">`key`</ph>を決定するかどうか<ph id="ph4">`item`</ph>が存在します。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.Contains(System.Object)">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods of the <ph id="ph3">`item`</ph> parameter on the objects in the collection.</source>
          <target state="translated">.NET Framework の以前のバージョンでは、この決定を使用して行われた、<ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph>のメソッド、<ph id="ph3">`item`</ph>パラメーター コレクション内のオブジェクトにします。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.Contains(System.Object)">
          <source>The following code example searches for an element in a <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>.</source>
          <target state="translated">次のコード内の要素の検索の例、<ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.Contains(System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.CopyTo(System.Array,System.Int32)">
          <source>The one-dimensional <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> that is the destination of the <ph id="ph2">&lt;see cref="T:System.Collections.DictionaryEntry" /&gt;</ph> objects copied from <ph id="ph3">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> から <ph id="ph2">&lt;see cref="T:System.Collections.DictionaryEntry" /&gt;</ph> オブジェクトがコピーされる 1 次元の <ph id="ph3">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.CopyTo(System.Array,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> must have zero-based indexing.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> には、0 から始まるインデックス番号が必要です。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.CopyTo(System.Array,System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated">コピーの開始位置となる、<bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> の 0 から始まるインデックス。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.CopyTo(System.Array,System.Int32)">
          <source>Copies the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph> entries to a one-dimensional <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph> instance at the specified index.</source>
          <target state="translated">1 次元の <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph> インスタンスの指定したインデックスに <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph> のエントリをコピーします。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.CopyTo(System.Array,System.Int32)">
          <source>The elements are copied to the <ph id="ph1">&lt;xref:System.Array&gt;</ph> in the same order in which the enumerator iterates through the <ph id="ph2">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>.</source>
          <target state="translated">要素のコピー先は、<ph id="ph1">&lt;xref:System.Array&gt;</ph>を列挙子が反復処理する順序と同じ順序で、<ph id="ph2">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.CopyTo(System.Array,System.Int32)">
          <source>To copy only the keys in the <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>, use <ph id="ph2">`ListDictionary.Keys.CopyTo`</ph>.</source>
          <target state="translated">内のキーのみをコピーする、<ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>を使用して<ph id="ph2">`ListDictionary.Keys.CopyTo`</ph>です。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.CopyTo(System.Array,System.Int32)">
          <source>To copy only the values in the <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>, use <ph id="ph2">`ListDictionary.Values.CopyTo`</ph>.</source>
          <target state="translated">値だけをコピーする、<ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>を使用して<ph id="ph2">`ListDictionary.Values.CopyTo`</ph>です。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.CopyTo(System.Array,System.Int32)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Specialized.ListDictionary.Count%2A&gt;</ph>.</source>
          <target state="translated">このメソッドは、O (<ph id="ph1">`n`</ph>) 操作では、ここで<ph id="ph2">`n`</ph>は<ph id="ph3">&lt;xref:System.Collections.Specialized.ListDictionary.Count%2A&gt;</ph>します。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.CopyTo(System.Array,System.Int32)">
          <source>The following code example copies the elements of a <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph> to an array.</source>
          <target state="translated">次のコード例は、の要素をコピー、<ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>を配列にします。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> が 0 未満です。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is multidimensional.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> が多次元です。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.CopyTo(System.Array,System.Int32)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.CopyTo(System.Array,System.Int32)">
          <source>The number of elements in the source <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph> is greater than the available space from <ph id="ph2">&lt;paramref name="index" /&gt;</ph> to the end of the destination <ph id="ph3">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">コピー元の <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph> の要素数が、コピー先 <ph id="ph3">&lt;paramref name="array" /&gt;</ph> の <ph id="ph2">&lt;paramref name="index" /&gt;</ph> から最後までの使用可能領域を超えています。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.CopyTo(System.Array,System.Int32)">
          <source>The type of the source <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph> cannot be cast automatically to the type of the destination <ph id="ph2">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">コピー元の <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph> の型をコピー先の <ph id="ph2">&lt;paramref name="array" /&gt;</ph> の型に自動的にキャストすることはできません。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="P:System.Collections.Specialized.ListDictionary.Count">
          <source>Gets the number of key/value pairs contained in the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph> に格納されているキー/値ペアの数を取得します。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.Count">
          <source>The number of key/value pairs contained in the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph> に格納されているキー/値ペアの数。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.Count">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">このプロパティ値を取得することは、O(1) 操作になります。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.Count">
          <source>The following code example enumerates the elements of a <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>.</source>
          <target state="translated">次のコード例は、の要素を列挙、<ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.GetEnumerator">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> that iterates through the <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph> を反復処理する <ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> for the <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> の <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.GetEnumerator">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated">C# 言語の <ph id="ph1">`foreach`</ph> ステートメント (Visual Basic の場合は <ph id="ph2">`for each`</ph>) を使用することで列挙子の複雑さを回避できます。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.GetEnumerator">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">したがって、列挙子を直接操作するのではなく、<ph id="ph1">`foreach`</ph> を使用することをお勧めします。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.GetEnumerator">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">列挙子を使用すると、コレクション内のデータを読み取ることができますが、基になるコレクションを変更することはできません。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.GetEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">最初に、列挙子はコレクション内の 1 番目の要素の前に位置付けられます。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> also brings the enumerator back to this position.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> を実行した場合も、列挙子はこの位置に戻されます。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.GetEnumerator">
          <source>At this position, <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">この位置では、<ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> が未定義です。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.GetEnumerator">
          <source>Therefore, you must call <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</source>
          <target state="translated">そのため、<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> の値を読み取る前に、<ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> を呼び出して列挙子をコレクションの最初の要素に進める必要があります。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> returns the same object until either <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> は、<ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> または <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> が呼び出されるまでは同じオブジェクトを返します。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> は、<ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> を次の要素に設定します。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.GetEnumerator">
          <source>If <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">場合<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>列挙子をコレクションの末尾が、コレクション内の最後の要素の後に配置されているパスと<ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>返します<ph id="ph3">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.GetEnumerator">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">列挙子がこの位置では、後続の呼び出しの場合<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>を返すことも<ph id="ph2">`false`</ph>します。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.GetEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">最後の呼び出し場合<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>返される<ph id="ph2">`false`</ph>、<ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>が定義されていません。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.GetEnumerator">
          <source>To set <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the first element of the collection again, you can call <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> followed by <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> をコレクションの最初の要素にもう一度設定するには、<ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> を呼び出してから <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> を呼び出します。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.GetEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">コレクションが変更されない限り、列挙子は有効です。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.GetEnumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">コレクションに対して変更 (要素の追加、変更、削除など) が行われると、列挙子は回復不可能な無効状態になり、その動作は未定義になります。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.GetEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">列挙子にはコレクションへの排他アクセス権限はないため、コレクションの列挙処理は本質的にスレッド セーフな処理ではありません。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.GetEnumerator">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">列挙処理でスレッド セーフを確保するには、列挙処理が終わるまでコレクションをロックできます。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.GetEnumerator">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">コレクションに対し複数のスレッドがアクセスして読み取りや書き込みを行うことができるようにするには、独自に同期化を実装する必要があります。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.GetEnumerator">
          <source>This method is an O(1) operation.</source>
          <target state="translated">このメソッドは、o (1) 操作です。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.GetEnumerator">
          <source>The following code example enumerates the elements of a <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>.</source>
          <target state="translated">次のコード例は、の要素を列挙、<ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="P:System.Collections.Specialized.ListDictionary.IsFixedSize">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph> has a fixed size.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph> が固定サイズかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.IsFixedSize">
          <source>This property always returns <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">このプロパティは常に <ph id="ph1">&lt;see langword="false" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.IsFixedSize">
          <source><ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph> implements the <ph id="ph2">&lt;xref:System.Collections.Specialized.ListDictionary.IsFixedSize%2A&gt;</ph> property because it is required by the <ph id="ph3">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph> 実装する、<ph id="ph2">&lt;xref:System.Collections.Specialized.ListDictionary.IsFixedSize%2A&gt;</ph>プロパティが必要としているため、<ph id="ph3">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph>インターフェイスです。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.IsFixedSize">
          <source>A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but it allows the modification of existing elements.</source>
          <target state="translated">固定サイズのコレクションでは、コレクションの作成後に要素の追加または削除はできませんが、既存の要素の変更はできます。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.IsFixedSize">
          <source>A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</source>
          <target state="translated">固定サイズ コレクションが追加および削除する要素を防止するラッパーで単純なコレクションそのための追加または削除、要素を含む、基になるコレクションが変更された場合、固定サイズ コレクションにはそれらの変更が反映されます。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.IsFixedSize">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">このプロパティ値を取得することは、O(1) 操作になります。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="P:System.Collections.Specialized.ListDictionary.IsReadOnly">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph> is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph> が読み取り専用かどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.IsReadOnly">
          <source>This property always returns <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">このプロパティは常に <ph id="ph1">&lt;see langword="false" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.IsReadOnly">
          <source><ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph> implements the <ph id="ph2">&lt;xref:System.Collections.Specialized.ListDictionary.IsReadOnly%2A&gt;</ph> property because it is required by the <ph id="ph3">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph> 実装する、<ph id="ph2">&lt;xref:System.Collections.Specialized.ListDictionary.IsReadOnly%2A&gt;</ph>プロパティが必要としているため、<ph id="ph3">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph>インターフェイスです。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.IsReadOnly">
          <source>A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</source>
          <target state="translated">読み取り専用のコレクションでは、コレクション作成後に要素の追加、削除、または変更はできません。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.IsReadOnly">
          <source>A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</source>
          <target state="translated">読み取り専用であるコレクションは、コレクションのコレクションの変更を防止するラッパーです。そのため、基になるコレクションの変更が加えられた、読み取り専用コレクションはそれらの変更を反映します。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.IsReadOnly">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">このプロパティ値を取得することは、O(1) 操作になります。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="P:System.Collections.Specialized.ListDictionary.IsSynchronized">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph> is synchronized (thread safe).</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph> が同期されている (スレッド セーフである) かどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.IsSynchronized">
          <source>This property always returns <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">このプロパティは常に <ph id="ph1">&lt;see langword="false" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.IsSynchronized">
          <source><ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph> implements the <ph id="ph2">&lt;xref:System.Collections.Specialized.ListDictionary.IsSynchronized%2A&gt;</ph> property because it is required by the <ph id="ph3">&lt;xref:System.Collections.ICollection?displayProperty=nameWithType&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph> 実装する、<ph id="ph2">&lt;xref:System.Collections.Specialized.ListDictionary.IsSynchronized%2A&gt;</ph>プロパティが必要としているため、<ph id="ph3">&lt;xref:System.Collections.ICollection?displayProperty=nameWithType&gt;</ph>インターフェイスです。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.IsSynchronized">
          <source>Derived classes can provide a synchronized version of the <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph> using the <ph id="ph2">&lt;xref:System.Collections.Specialized.ListDictionary.SyncRoot%2A&gt;</ph> property.</source>
          <target state="translated">派生クラスでの同期されたバージョンを提供できる、<ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>を使用して、<ph id="ph2">&lt;xref:System.Collections.Specialized.ListDictionary.SyncRoot%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.IsSynchronized">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">コレクションの列挙は、本質的にスレッド セーフなプロシージャではありません。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.IsSynchronized">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">コレクションの同期がとられている場合でも、別のスレッドによってそのコレクションを変更できるため、変更の結果として列挙子は例外をスローします。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.IsSynchronized">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">列挙処理を確実にスレッド セーフに行うには、列挙中にコレクションをロックするか、他のスレッドによって行われた変更によってスローされる例外をキャッチします。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.IsSynchronized">
          <source>The following code example shows how to lock the collection using the <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary.SyncRoot%2A&gt;</ph> during the entire enumeration.</source>
          <target state="translated">次のコード例を使用してコレクションをロックする方法を示しています、<ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary.SyncRoot%2A&gt;</ph>列挙中にします。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.IsSynchronized">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">このプロパティ値を取得することは、O(1) 操作になります。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="P:System.Collections.Specialized.ListDictionary.Item(System.Object)">
          <source>The key whose value to get or set.</source>
          <target state="translated">値を取得または設定する対象のキー。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="P:System.Collections.Specialized.ListDictionary.Item(System.Object)">
          <source>Gets or sets the value associated with the specified key.</source>
          <target state="translated">指定されたキーに関連付けられている値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.Item(System.Object)">
          <source>The value associated with the specified key.</source>
          <target state="translated">指定されたキーに関連付けられている値。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.Item(System.Object)">
          <source>If the specified key is not found, attempting to get it returns <ph id="ph1">&lt;see langword="null" /&gt;</ph>, and attempting to set it creates a new entry using the specified key.</source>
          <target state="translated">指定したキーが見つからない場合、そのキーを取得しようとした場合は <ph id="ph1">&lt;see langword="null" /&gt;</ph> が返され、そのキーを設定しようとした場合は、指定したキーを使用して新しいエントリが作成されます。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.Item(System.Object)">
          <source>This property provides the ability to access a specific element in the collection by using the following syntax: <ph id="ph1">`myCollection[key]`</ph>.</source>
          <target state="translated">このプロパティでは、<ph id="ph1">`myCollection[key]`</ph> という構文を使用して、コレクション内の特定の要素にアクセスできます。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.Item(System.Object)">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary.Item%2A&gt;</ph> property to add new elements by setting the value of a key that does not exist in the <ph id="ph2">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>; for example, <ph id="ph3">`myCollection["myNonexistentKey"] = myValue`</ph>.</source>
          <target state="translated">使用することも、<ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary.Item%2A&gt;</ph>にキーの値を設定して、新しい要素を追加するプロパティが存在しません、 <ph id="ph2">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>。 たとえば、<ph id="ph3">`myCollection["myNonexistentKey"] = myValue`</ph>です。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.Item(System.Object)">
          <source>However, if the specified key already exists in the <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>, setting the <ph id="ph2">&lt;xref:System.Collections.Specialized.ListDictionary.Item%2A&gt;</ph> property overwrites the old value.</source>
          <target state="translated">ただしで指定したキーが既に存在する場合、 <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>、設定、<ph id="ph2">&lt;xref:System.Collections.Specialized.ListDictionary.Item%2A&gt;</ph>プロパティに古い値が上書きされます。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.Item(System.Object)">
          <source>In contrast, the <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary.Add%2A&gt;</ph> method does not modify existing elements.</source>
          <target state="translated">これに対し、<ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary.Add%2A&gt;</ph>メソッドでは、既存の要素は変更しません。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.Item(System.Object)">
          <source>A key cannot be <ph id="ph1">`null`</ph>, but a value can.</source>
          <target state="translated">キーには<ph id="ph1">`null`</ph>値のことができますが、します。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.Item(System.Object)">
          <source>To distinguish between <ph id="ph1">`null`</ph> that is returned because the specified key is not found and <ph id="ph2">`null`</ph> that is returned because the value of the specified key is <ph id="ph3">`null`</ph>, use the <ph id="ph4">&lt;xref:System.Collections.Specialized.ListDictionary.Contains%2A&gt;</ph> method to determine if the key exists in the list.</source>
          <target state="translated">区別するために<ph id="ph1">`null`</ph>指定したキーが見つからないため、返されると<ph id="ph2">`null`</ph>指定したキーの値が返される<ph id="ph3">`null`</ph>を使用して、<ph id="ph4">&lt;xref:System.Collections.Specialized.ListDictionary.Contains%2A&gt;</ph>一覧で、キーが存在するかどうかを決定するメソッド。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.Item(System.Object)">
          <source>The C# language uses the  keyword to define the indexers instead of implementing the <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary.Item%2A&gt;</ph> property.</source>
          <target state="translated">C# 言語キーワードを使用して実装する代わりに、インデクサーの定義、<ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary.Item%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.Item(System.Object)">
          <source>Visual Basic implements <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary.Item%2A&gt;</ph> as a default property, which provides the same indexing functionality.</source>
          <target state="translated">Visual Basic は、<ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary.Item%2A&gt;</ph> を既定のプロパティとして実装しており、同様のインデックス機能を提供します。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.Item(System.Object)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Specialized.ListDictionary.Count%2A&gt;</ph>.</source>
          <target state="translated">このメソッドは、O (<ph id="ph1">`n`</ph>) 操作では、ここで<ph id="ph2">`n`</ph>は<ph id="ph3">&lt;xref:System.Collections.Specialized.ListDictionary.Count%2A&gt;</ph>します。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.Item(System.Object)">
          <source>The following code example enumerates the elements of a <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>.</source>
          <target state="translated">次のコード例は、の要素を列挙、<ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="P:System.Collections.Specialized.ListDictionary.Item(System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="P:System.Collections.Specialized.ListDictionary.Keys">
          <source>Gets an <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> containing the keys in the <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph> 内のキーを格納している <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> を取得します。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.Keys">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> containing the keys in the <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 内のキーを格納している <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.Keys">
          <source>The order of the values in the <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> is unspecified, but it is the same order as the associated values in the <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> returned by the <ph id="ph3">&lt;xref:System.Collections.Specialized.ListDictionary.Values%2A&gt;</ph> method.</source>
          <target state="translated">内の値の順序、<ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph>は指定しませんが、関連付けられている値と同じ順序、<ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>によって返される、<ph id="ph3">&lt;xref:System.Collections.Specialized.ListDictionary.Values%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.Keys">
          <source>The returned <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> is not a static copy; instead, the <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> refers back to the keys in the original <ph id="ph3">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>.</source>
          <target state="translated">返された<ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph>静的コピーではありません。 代わりに、、<ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>は元のキーを逆参照<ph id="ph3">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.Keys">
          <source>Therefore, changes to the <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph> continue to be reflected in the <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</source>
          <target state="translated">そのため、変更、<ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>に反映されるまでに続行、<ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.Keys">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">このプロパティ値を取得することは、O(1) 操作になります。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.Keys">
          <source>The following code example enumerates the elements of a <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>.</source>
          <target state="translated">次のコード例は、の要素を列挙、<ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.Remove(System.Object)">
          <source>The key of the entry to remove.</source>
          <target state="translated">削除するエントリのキー。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.Remove(System.Object)">
          <source>Removes the entry with the specified key from the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph>.</source>
          <target state="translated">指定したキーを持つエントリを <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph> から削除します。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.Remove(System.Object)">
          <source>If the <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph> does not contain an element with the specified key, the <ph id="ph2">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph> remains unchanged.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>指定のキーを持つ要素が含まれていない、<ph id="ph2">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>は変更されません。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.Remove(System.Object)">
          <source>No exception is thrown.</source>
          <target state="translated">例外をスローすることはありません。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.Remove(System.Object)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Specialized.ListDictionary.Count%2A&gt;</ph>.</source>
          <target state="translated">このメソッドは、O (<ph id="ph1">`n`</ph>) 操作では、ここで<ph id="ph2">`n`</ph>は<ph id="ph3">&lt;xref:System.Collections.Specialized.ListDictionary.Count%2A&gt;</ph>します。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.Remove(System.Object)">
          <source>The following code example adds to and removes elements from a <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>.</source>
          <target state="translated">次のコード例に追加しから要素を削除、<ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.Remove(System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="P:System.Collections.Specialized.ListDictionary.SyncRoot">
          <source>Gets an object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph> へのアクセスを同期するために使用できるオブジェクトを取得します。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.SyncRoot">
          <source>An object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph> へのアクセスの同期に使用できるオブジェクト。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.SyncRoot">
          <source>Derived classes can provide their own synchronized version of the <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph> using the <ph id="ph2">&lt;xref:System.Collections.Specialized.ListDictionary.SyncRoot%2A&gt;</ph> property.</source>
          <target state="translated">派生クラスは、独自の同期されたバージョンを指定できます、<ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>を使用して、<ph id="ph2">&lt;xref:System.Collections.Specialized.ListDictionary.SyncRoot%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.SyncRoot">
          <source>The synchronizing code must perform operations on the <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary.SyncRoot%2A&gt;</ph> of the <ph id="ph2">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>, not directly on the <ph id="ph3">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>.</source>
          <target state="translated">同期されたコードで操作を実行する必要があります、<ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary.SyncRoot%2A&gt;</ph>の<ph id="ph2">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>、上で直接、<ph id="ph3">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.SyncRoot">
          <source>This ensures proper operation of collections that are derived from other objects.</source>
          <target state="translated">これにより、他のオブジェクトから派生したコレクションを適切に操作できるようになります。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.SyncRoot">
          <source>Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph> object.</source>
          <target state="translated">具体的には、同時に変更する可能性がある別スレッドとの適切な同期を維持、<ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.SyncRoot">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">コレクションの列挙は、本質的にスレッド セーフなプロシージャではありません。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.SyncRoot">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">コレクションの同期がとられている場合でも、別のスレッドによってそのコレクションを変更できるため、変更の結果として列挙子は例外をスローします。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.SyncRoot">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">列挙処理を確実にスレッド セーフに行うには、列挙中にコレクションをロックするか、他のスレッドによって行われた変更によってスローされる例外をキャッチします。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.SyncRoot">
          <source>The following code example shows how to lock the collection using the <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary.SyncRoot%2A&gt;</ph> during the entire enumeration.</source>
          <target state="translated">次のコード例を使用してコレクションをロックする方法を示しています、<ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary.SyncRoot%2A&gt;</ph>列挙中にします。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.SyncRoot">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">このプロパティ値を取得することは、O(1) 操作になります。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.System#Collections#IEnumerable#GetEnumerator">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> that iterates through the <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph> を反復処理する <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.System#Collections#IEnumerable#GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> for the <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> の <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.System#Collections#IEnumerable#GetEnumerator">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated">C# 言語の <ph id="ph1">`foreach`</ph> ステートメント (Visual Basic の場合は <ph id="ph2">`for each`</ph>) を使用することで列挙子の複雑さを回避できます。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.System#Collections#IEnumerable#GetEnumerator">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">したがって、列挙子を直接操作するのではなく、<ph id="ph1">`foreach`</ph> を使用することをお勧めします。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.System#Collections#IEnumerable#GetEnumerator">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">列挙子を使用すると、コレクション内のデータを読み取ることができますが、基になるコレクションを変更することはできません。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.System#Collections#IEnumerable#GetEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">最初に、列挙子はコレクション内の 1 番目の要素の前に位置付けられます。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.System#Collections#IEnumerable#GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> also brings the enumerator back to this position.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> を実行した場合も、列挙子はこの位置に戻されます。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.System#Collections#IEnumerable#GetEnumerator">
          <source>At this position, calling <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> throws an exception.</source>
          <target state="translated">この位置で、呼び出す<ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>例外をスローします。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.System#Collections#IEnumerable#GetEnumerator">
          <source>Therefore, you must call <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</source>
          <target state="translated">そのため、<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> の値を読み取る前に、<ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> を呼び出して列挙子をコレクションの最初の要素に進める必要があります。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.System#Collections#IEnumerable#GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> returns the same object until either <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> は、<ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> または <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> が呼び出されるまでは同じオブジェクトを返します。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.System#Collections#IEnumerable#GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> は、<ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> を次の要素に設定します。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.System#Collections#IEnumerable#GetEnumerator">
          <source>If <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">場合<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>列挙子をコレクションの末尾が、コレクション内の最後の要素の後に配置されているパスと<ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>返します<ph id="ph3">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.System#Collections#IEnumerable#GetEnumerator">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">列挙子がこの位置では、後続の呼び出しの場合<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>を返すことも<ph id="ph2">`false`</ph>します。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.System#Collections#IEnumerable#GetEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, calling <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> throws an exception.</source>
          <target state="translated">場合は、最後の呼び出し<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>返される<ph id="ph2">`false`</ph>、呼び出し元<ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>例外をスローします。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.System#Collections#IEnumerable#GetEnumerator">
          <source>To set <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the first element of the collection again, you can call <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> followed by <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> をコレクションの最初の要素にもう一度設定するには、<ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> を呼び出してから <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> を呼び出します。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.System#Collections#IEnumerable#GetEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">コレクションが変更されない限り、列挙子は有効です。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.System#Collections#IEnumerable#GetEnumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> throws an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">無効になり、次の呼び出しに変更を追加するなど、コレクションを変更、または要素を削除するには、列挙子は回復不可能<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>または<ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph>スロー、<ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.System#Collections#IEnumerable#GetEnumerator">
          <source>If the collection is modified between <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> returns the element that it is set to, even if the enumerator is already invalidated.</source>
          <target state="translated">間で、コレクションが変更された場合<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>、<ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>列挙子が既に無効になっている場合でもに設定されている要素を返します。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.System#Collections#IEnumerable#GetEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">列挙子にはコレクションへの排他アクセス権限はないため、コレクションの列挙処理は本質的にスレッド セーフな処理ではありません。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.System#Collections#IEnumerable#GetEnumerator">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">コレクションの同期がとられている場合でも、別のスレッドによってそのコレクションを変更できるため、変更の結果として列挙子は例外をスローします。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.System#Collections#IEnumerable#GetEnumerator">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">列挙処理を確実にスレッド セーフに行うには、列挙中にコレクションをロックするか、他のスレッドによって行われた変更によってスローされる例外をキャッチします。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.System#Collections#IEnumerable#GetEnumerator">
          <source>This method is an O(1) operation.</source>
          <target state="translated">このメソッドは、o (1) 操作です。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.System#Collections#IEnumerable#GetEnumerator">
          <source>The following code example enumerates the elements of a <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>.</source>
          <target state="translated">次のコード例は、の要素を列挙、<ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="P:System.Collections.Specialized.ListDictionary.Values">
          <source>Gets an <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> containing the values in the <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 内の値を格納している <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph> を取得します。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.Values">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> containing the values in the <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 内の値を格納している <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.Values">
          <source>The order of the values in the <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> is unspecified, but it is the same order as the associated keys in the <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> returned by the <ph id="ph3">&lt;xref:System.Collections.Specialized.ListDictionary.Keys%2A&gt;</ph> method.</source>
          <target state="translated">内の値の順序、<ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph>は指定しませんが、関連付けられているキーと同じ順序、<ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>によって返される、<ph id="ph3">&lt;xref:System.Collections.Specialized.ListDictionary.Keys%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.Values">
          <source>The returned <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> is not a static copy; instead, the <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> refers back to the values in the original <ph id="ph3">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>.</source>
          <target state="translated">返された<ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph>静的コピーではありません。 代わりに、、<ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>は元の値を逆参照<ph id="ph3">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.Values">
          <source>Therefore, changes to the <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph> continue to be reflected in the <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</source>
          <target state="translated">そのため、変更、<ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>に反映されるまでに続行、<ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.Values">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">このプロパティ値を取得することは、O(1) 操作になります。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.Values">
          <source>The following code example enumerates the elements of a <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>.</source>
          <target state="translated">次のコード例は、の要素を列挙、<ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>です。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>