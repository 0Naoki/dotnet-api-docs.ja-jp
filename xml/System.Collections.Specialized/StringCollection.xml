<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="StringCollection.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5161e6349e24d6a2f0668496206d7048ef1155437.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">161e6349e24d6a2f0668496206d7048ef1155437</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Collections.Specialized.StringCollection">
          <source>Represents a collection of strings.</source>
          <target state="translated">文字列のコレクションを表します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.StringCollection">
          <source><ph id="ph1">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph> accepts <ph id="ph2">`null`</ph> as a valid value and allows duplicate elements.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph> 受け付ける<ph id="ph2">`null`</ph>有効な値としてでき、重複する要素。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.StringCollection">
          <source>String comparisons are case-sensitive.</source>
          <target state="translated">文字列比較で大文字小文字が区別されます。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.StringCollection">
          <source>Elements in this collection can be accessed using an integer index.</source>
          <target state="translated">このコレクション内の要素は、整数インデックスを使用してアクセスできます。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.StringCollection">
          <source>Indexes in this collection are zero-based.</source>
          <target state="translated">このコレクションのインデックスは 0 から始まります。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.StringCollection">
          <source>The following code example demonstrates several of the properties and methods of <ph id="ph1">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph>.</source>
          <target state="translated">次のコード例は、一部のプロパティとメソッドを示しています。<ph id="ph1">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.StringCollection">
          <source>Public static (<ph id="ph1">&lt;see langword="Shared" /&gt;</ph> in Visual Basic) members of this type are thread safe.</source>
          <target state="translated">パブリック静的 (<ph id="ph1">&lt;see langword="Shared" /&gt;</ph> Visual Basic で) この型のメンバーは、スレッド セーフであります。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.StringCollection">
          <source>Any instance members are not guaranteed to be thread safe.</source>
          <target state="translated">インスタンス メンバーの場合は、スレッド セーフであるとは限りません。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.StringCollection">
          <source>This implementation does not provide a synchronized (thread safe) wrapper for a <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph>, but derived classes can create their own synchronized versions of the <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph> using the <ph id="ph3">&lt;see cref="P:System.Collections.Specialized.StringCollection.SyncRoot" /&gt;</ph> property.</source>
          <target state="translated">この実装は同期済みは提供されませんの (スレッド セーフな) ラッパー、 <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph>、派生クラスは、独自の同期されたバージョンを作成できますが、<ph id="ph2">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph>を使用して、<ph id="ph3">&lt;see cref="P:System.Collections.Specialized.StringCollection.SyncRoot" /&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.StringCollection">
          <source>Enumerating through a collection is intrinsically not a thread safe procedure.</source>
          <target state="translated">コレクションの列挙は本質的にスレッド セーフな方法です。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.StringCollection">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">コレクションの同期がとられている場合でも、別のスレッドによってそのコレクションを変更できるため、変更の結果として列挙子は例外をスローします。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.StringCollection">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">列挙処理を確実にスレッド セーフに行うには、列挙中にコレクションをロックするか、他のスレッドによって行われた変更によってスローされる例外をキャッチします。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.StringCollection.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.#ctor">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">このコンス トラクターは、o (1) 操作です。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.StringCollection.Add(System.String)">
          <source>The string to add to the end of the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph> の末尾に追加する文字列。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.StringCollection.Add(System.String)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">値として <ph id="ph1">&lt;see langword="null" /&gt;</ph> を指定できます。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.StringCollection.Add(System.String)">
          <source>Adds a string to the end of the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph>.</source>
          <target state="translated">文字列を <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph> の末尾に追加します。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.StringCollection.Add(System.String)">
          <source>The zero-based index at which the new element is inserted.</source>
          <target state="translated">新しい要素が挿入される位置の 0 から始まるインデックス。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.Add(System.String)">
          <source><ph id="ph1">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph> accepts <ph id="ph2">`null`</ph> as a valid value and allows duplicate elements.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph> 受け付ける<ph id="ph2">`null`</ph>有効な値としてでき、重複する要素。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.Add(System.String)">
          <source>If <ph id="ph1">&lt;xref:System.Collections.Specialized.StringCollection.Count%2A&gt;</ph> is less than the capacity, this method is an O(1) operation.</source>
          <target state="translated">場合<ph id="ph1">&lt;xref:System.Collections.Specialized.StringCollection.Count%2A&gt;</ph>が少なく、容量よりも、このメソッドは、o (1) 操作になります。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.Add(System.String)">
          <source>If the capacity needs to be increased to accommodate the new element, this method becomes an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Specialized.StringCollection.Count%2A&gt;</ph>.</source>
          <target state="translated">容量は、新しい要素を格納するためにする必要があります、このメソッドが O (<ph id="ph1">`n`</ph>) 操作、場所<ph id="ph2">`n`</ph>は<ph id="ph3">&lt;xref:System.Collections.Specialized.StringCollection.Count%2A&gt;</ph>します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.Add(System.String)">
          <source>The following code example adds new elements to the <ph id="ph1">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph>.</source>
          <target state="translated">次のコード例は、新しい要素を追加、<ph id="ph1">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.StringCollection.AddRange(System.String[])">
          <source>An array of strings to add to the end of the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph> の末尾に追加する文字列配列。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.StringCollection.AddRange(System.String[])">
          <source>The array itself can not be <ph id="ph1">&lt;see langword="null" /&gt;</ph> but it can contain elements that are <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">配列自体を <ph id="ph1">&lt;see langword="null" /&gt;</ph> にすることはできませんが、配列に格納する要素は <ph id="ph2">&lt;see langword="null" /&gt;</ph> であってもかまいません。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.StringCollection.AddRange(System.String[])">
          <source>Copies the elements of a string array to the end of the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph>.</source>
          <target state="translated">文字列配列の要素を <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph> の末尾にコピーします。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.AddRange(System.String[])">
          <source><ph id="ph1">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph> accepts <ph id="ph2">`null`</ph> as a valid value and allows duplicate elements.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph> 受け付ける<ph id="ph2">`null`</ph>有効な値としてでき、重複する要素。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.AddRange(System.String[])">
          <source>If the <ph id="ph1">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph> can accommodate the new elements without increasing the capacity, this method is an O(<ph id="ph2">`n`</ph>) operation, where <ph id="ph3">`n`</ph> is the number of elements to be added.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph>容量を増やすことがなく、新しい要素に対応できる、このメソッドは、O (<ph id="ph2">`n`</ph>) 操作では、ここで<ph id="ph3">`n`</ph>を追加する要素の数です。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.AddRange(System.String[])">
          <source>If the capacity needs to be increased to accommodate the new elements, this method becomes an O(<ph id="ph1">`n`</ph><ph id="ph2"> + </ph><ph id="ph3">`m`</ph>) operation, where <ph id="ph4">`n`</ph> is the number of elements to be added and <ph id="ph5">`m`</ph> is <ph id="ph6">&lt;xref:System.Collections.Specialized.StringCollection.Count%2A&gt;</ph>.</source>
          <target state="translated">容量は、新しい要素を格納するためにする必要があります、このメソッドが O (<ph id="ph1">`n`</ph><ph id="ph2"> + </ph><ph id="ph3">`m`</ph>) 操作、場所<ph id="ph4">`n`</ph>を追加する要素の数と<ph id="ph5">`m`</ph>は<ph id="ph6">&lt;xref:System.Collections.Specialized.StringCollection.Count%2A&gt;</ph>します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.AddRange(System.String[])">
          <source>The following code example adds new elements to the <ph id="ph1">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph>.</source>
          <target state="translated">次のコード例は、新しい要素を追加、<ph id="ph1">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.StringCollection.AddRange(System.String[])">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.StringCollection.Clear">
          <source>Removes all the strings from the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph>.</source>
          <target state="translated">すべての文字列を <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph> から削除します。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.Clear">
          <source><ph id="ph1">&lt;xref:System.Collections.Specialized.StringCollection.Count%2A&gt;</ph> is set to zero, and references to other objects from elements of the collection are also released.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Specialized.StringCollection.Count%2A&gt;</ph> 0 に設定し、コレクションの要素から他のオブジェクトへの参照も解放します。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.Clear">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Specialized.StringCollection.Count%2A&gt;</ph>.</source>
          <target state="translated">このメソッドは、O (<ph id="ph1">`n`</ph>) 操作では、ここで<ph id="ph2">`n`</ph>は<ph id="ph3">&lt;xref:System.Collections.Specialized.StringCollection.Count%2A&gt;</ph>します。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.Clear">
          <source>The following code example removes elements from the <ph id="ph1">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph>.</source>
          <target state="translated">次のコード例からの要素を削除する、<ph id="ph1">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.StringCollection.Contains(System.String)">
          <source>The string to locate in the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph> 内で検索する文字列。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.StringCollection.Contains(System.String)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">値として <ph id="ph1">&lt;see langword="null" /&gt;</ph> を指定できます。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.StringCollection.Contains(System.String)">
          <source>Determines whether the specified string is in the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph>.</source>
          <target state="translated">指定した文字列が <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph> 内にあるかどうかを確認します。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.StringCollection.Contains(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is found in the <ph id="ph3">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> が <ph id="ph2">&lt;paramref name="value" /&gt;</ph> に存在する場合は <ph id="ph3">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph>。それ以外の場合は <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.Contains(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Specialized.StringCollection.Contains%2A&gt;</ph> method can confirm the existence of a string before performing further operations.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Specialized.StringCollection.Contains%2A&gt;</ph>メソッドは、さらに操作を実行する前に、文字列の存在を確認できます。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.Contains(System.String)">
          <source>This method determines equality by calling <ph id="ph1">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">このメソッドを呼び出すことで等しいかどうかを判断<ph id="ph1">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.Contains(System.String)">
          <source>String comparisons are case-sensitive.</source>
          <target state="translated">文字列比較で大文字小文字が区別されます。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.Contains(System.String)">
          <source>This method performs a linear search; therefore, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Specialized.StringCollection.Count%2A&gt;</ph>.</source>
          <target state="translated">このメソッドは、一方向の検索を実行します。そのため、このメソッドは、O (<ph id="ph1">`n`</ph>) 操作では、ここで<ph id="ph2">`n`</ph>は<ph id="ph3">&lt;xref:System.Collections.Specialized.StringCollection.Count%2A&gt;</ph>します。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.Contains(System.String)">
          <source>Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods on <ph id="ph3">`item`</ph> to determine whether item exists.</source>
          <target state="translated">以降、.NET Framework 2.0 では、このメソッドを使用して、コレクションのオブジェクトの<ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph>メソッド<ph id="ph3">`item`</ph>項目が存在するかどうかを確認します。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.Contains(System.String)">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods of the <ph id="ph3">`item`</ph> parameter on the objects in the collection.</source>
          <target state="translated">.NET Framework の以前のバージョンでは、この決定を使用して行われた、<ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph>のメソッド、<ph id="ph3">`item`</ph>パラメーター コレクション内のオブジェクトにします。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.Contains(System.String)">
          <source>The following code example searches the <ph id="ph1">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph> for an element.</source>
          <target state="translated">次のコード例を検索、<ph id="ph1">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph>要素。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.StringCollection.CopyTo(System.String[],System.Int32)">
          <source>The one-dimensional array of strings that is the destination of the elements copied from <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph> から要素がコピーされる 1 次元の文字列配列。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.StringCollection.CopyTo(System.String[],System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> must have zero-based indexing.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> には、0 から始まるインデックス番号が必要です。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.StringCollection.CopyTo(System.String[],System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated">コピーの開始位置となる、<bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> の 0 から始まるインデックス。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.StringCollection.CopyTo(System.String[],System.Int32)">
          <source>Copies the entire <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph> values to a one-dimensional array of strings, starting at the specified index of the target array.</source>
          <target state="translated">1 次元の文字列配列に、その配列内の指定したインデックスを開始位置として <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph> 値全体をコピーします。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.CopyTo(System.String[],System.Int32)">
          <source>The specified array must be of a compatible type.</source>
          <target state="translated">指定された配列は、互換性のある型でなければなりません。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.CopyTo(System.String[],System.Int32)">
          <source>The elements are copied to the <ph id="ph1">&lt;xref:System.Array&gt;</ph> in the same order in which the enumerator of the <ph id="ph2">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph> iterates through the <ph id="ph3">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph>.</source>
          <target state="translated">要素のコピー先は、<ph id="ph1">&lt;xref:System.Array&gt;</ph>を同じ順序での列挙子、<ph id="ph2">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph>を反復処理、<ph id="ph3">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.CopyTo(System.String[],System.Int32)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Specialized.StringCollection.Count%2A&gt;</ph>.</source>
          <target state="translated">このメソッドは、O (<ph id="ph1">`n`</ph>) 操作では、ここで<ph id="ph2">`n`</ph>は<ph id="ph3">&lt;xref:System.Collections.Specialized.StringCollection.Count%2A&gt;</ph>します。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.CopyTo(System.String[],System.Int32)">
          <source>The following code example copies a <ph id="ph1">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph> to an array.</source>
          <target state="translated">次のコード例をコピー、<ph id="ph1">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph>を配列にします。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.StringCollection.CopyTo(System.String[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.StringCollection.CopyTo(System.String[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> が 0 未満です。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.StringCollection.CopyTo(System.String[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is multidimensional.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> が多次元です。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.StringCollection.CopyTo(System.String[],System.Int32)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.StringCollection.CopyTo(System.String[],System.Int32)">
          <source>The number of elements in the source <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph> is greater than the available space from <ph id="ph2">&lt;paramref name="index" /&gt;</ph> to the end of the destination <ph id="ph3">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">コピー元の <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph> の要素数が、コピー先 <ph id="ph3">&lt;paramref name="array" /&gt;</ph> の <ph id="ph2">&lt;paramref name="index" /&gt;</ph> から最後までの使用可能領域を超えています。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.StringCollection.CopyTo(System.String[],System.Int32)">
          <source>The type of the source <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph> cannot be cast automatically to the type of the destination <ph id="ph2">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">コピー元の <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph> の型をコピー先の <ph id="ph2">&lt;paramref name="array" /&gt;</ph> の型に自動的にキャストすることはできません。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="P:System.Collections.Specialized.StringCollection.Count">
          <source>Gets the number of strings contained in the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph> に格納されている文字列の数を取得します。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.StringCollection.Count">
          <source>The number of strings contained in the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph> に格納されている文字列の数。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.StringCollection.Count">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">このプロパティ値を取得することは、O(1) 操作になります。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.StringCollection.Count">
          <source>The following code example copies a <ph id="ph1">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph> to an array.</source>
          <target state="translated">次のコード例をコピー、<ph id="ph1">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph>を配列にします。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.StringCollection.GetEnumerator">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringEnumerator" /&gt;</ph> that iterates through the <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringEnumerator" /&gt;</ph> を反復処理する <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.StringCollection.GetEnumerator">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringEnumerator" /&gt;</ph> for the <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringEnumerator" /&gt;</ph> の <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.GetEnumerator">
          <source>[Visual Basic, C#]</source>
          <target state="translated">[Visual Basic、C# の場合]</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.GetEnumerator">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated">C# 言語の <ph id="ph1">`foreach`</ph> ステートメント (Visual Basic の場合は <ph id="ph2">`for each`</ph>) を使用することで列挙子の複雑さを回避できます。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.GetEnumerator">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">したがって、列挙子を直接操作するのではなく、<ph id="ph1">`foreach`</ph> を使用することをお勧めします。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.GetEnumerator">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">列挙子を使用すると、コレクション内のデータを読み取ることができますが、基になるコレクションを変更することはできません。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.GetEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">最初に、列挙子はコレクション内の 1 番目の要素の前に位置付けられます。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt;</ph> also brings the enumerator back to this position.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt;</ph> を実行した場合も、列挙子はこの位置に戻されます。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.GetEnumerator">
          <source>At this position, <ph id="ph1">&lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">この位置では、<ph id="ph1">&lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;</ph> が未定義です。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.GetEnumerator">
          <source>Therefore, you must call <ph id="ph1">&lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</ph> to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;</ph>.</source>
          <target state="translated">そのため、<ph id="ph1">&lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</ph> の値を読み取る前に、<ph id="ph2">&lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;</ph> を呼び出して列挙子をコレクションの最初の要素に進める必要があります。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;</ph> returns the same object until either <ph id="ph2">&lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;</ph> は、<ph id="ph2">&lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</ph> または <ph id="ph3">&lt;xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt;</ph> が呼び出されるまでは同じオブジェクトを返します。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</ph> は、<ph id="ph2">&lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;</ph> を次の要素に設定します。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.GetEnumerator">
          <source>If <ph id="ph1">&lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">場合<ph id="ph1">&lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</ph>列挙子をコレクションの末尾が、コレクション内の最後の要素の後に配置されているパスと<ph id="ph2">&lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</ph>返します<ph id="ph3">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.GetEnumerator">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">列挙子がこの位置では、後続の呼び出しの場合<ph id="ph1">&lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</ph>を返すことも<ph id="ph2">`false`</ph>します。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.GetEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">最後の呼び出し場合<ph id="ph1">&lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</ph>返される<ph id="ph2">`false`</ph>、<ph id="ph3">&lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;</ph>が定義されていません。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.GetEnumerator">
          <source>To set <ph id="ph1">&lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;</ph> to the first element of the collection again, you can call <ph id="ph2">&lt;xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt;</ph> followed by <ph id="ph3">&lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;</ph> をコレクションの最初の要素にもう一度設定するには、<ph id="ph2">&lt;xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt;</ph> を呼び出してから <ph id="ph3">&lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</ph> を呼び出します。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.GetEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">コレクションが変更されない限り、列挙子は有効です。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.GetEnumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">コレクションに対して変更 (要素の追加、変更、削除など) が行われると、列挙子は回復不可能な無効状態になり、その動作は未定義になります。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.GetEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread safe procedure.</source>
          <target state="translated">列挙子には、コレクションへの排他アクセスがありません。したがって、コレクションの列挙処理は本質的にスレッド セーフな処理ではありません。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.GetEnumerator">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">列挙処理でスレッド セーフを確保するには、列挙処理が終わるまでコレクションをロックできます。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.GetEnumerator">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">コレクションに対し複数のスレッドがアクセスして読み取りや書き込みを行うことができるようにするには、独自に同期化を実装する必要があります。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.GetEnumerator">
          <source>This method is an O(1) operation.</source>
          <target state="translated">このメソッドは、o (1) 操作です。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.StringCollection.IndexOf(System.String)">
          <source>The string to locate.</source>
          <target state="translated">検索される文字列。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.StringCollection.IndexOf(System.String)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">値として <ph id="ph1">&lt;see langword="null" /&gt;</ph> を指定できます。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.StringCollection.IndexOf(System.String)">
          <source>Searches for the specified string and returns the zero-based index of the first occurrence within the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph>.</source>
          <target state="translated">指定した文字列を検索し、<ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph> 内でその文字列が最初に見つかった位置の 0 から始まるインデックスを返します。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.StringCollection.IndexOf(System.String)">
          <source>The zero-based index of the first occurrence of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> in the <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph>, if found; otherwise, -1.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph> 内で <ph id="ph1">&lt;paramref name="value" /&gt;</ph> が見つかった場合は、最初に見つかった位置の 0 から始まるインデックス。それ以外の場合は -1。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.IndexOf(System.String)">
          <source>This method determines equality by calling <ph id="ph1">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">このメソッドを呼び出すことで等しいかどうかを判断<ph id="ph1">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.IndexOf(System.String)">
          <source>String comparisons are case-sensitive.</source>
          <target state="translated">文字列比較で大文字小文字が区別されます。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.IndexOf(System.String)">
          <source>This method performs a linear search; therefore, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Specialized.StringCollection.Count%2A&gt;</ph>.</source>
          <target state="translated">このメソッドは、一方向の検索を実行します。そのため、このメソッドは、O (<ph id="ph1">`n`</ph>) 操作では、ここで<ph id="ph2">`n`</ph>は<ph id="ph3">&lt;xref:System.Collections.Specialized.StringCollection.Count%2A&gt;</ph>します。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.IndexOf(System.String)">
          <source>Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods on <ph id="ph3">`item`</ph> to determine whether item exists.</source>
          <target state="translated">以降、.NET Framework 2.0 では、このメソッドを使用して、コレクションのオブジェクトの<ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph>メソッド<ph id="ph3">`item`</ph>項目が存在するかどうかを確認します。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.IndexOf(System.String)">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods of the <ph id="ph3">`item`</ph> parameter on the objects in the collection.</source>
          <target state="translated">.NET Framework の以前のバージョンでは、この決定を使用して行われた、<ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph>のメソッド、<ph id="ph3">`item`</ph>パラメーター コレクション内のオブジェクトにします。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.IndexOf(System.String)">
          <source>The following code example searches the <ph id="ph1">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph> for an element.</source>
          <target state="translated">次のコード例を検索、<ph id="ph1">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph>要素。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.StringCollection.Insert(System.Int32,System.String)">
          <source>The zero-based index at which <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> is inserted.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> が挿入される位置の 0 から始まるインデックス。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.StringCollection.Insert(System.Int32,System.String)">
          <source>The string to insert.</source>
          <target state="translated">挿入する文字列。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.StringCollection.Insert(System.Int32,System.String)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">値として <ph id="ph1">&lt;see langword="null" /&gt;</ph> を指定できます。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.StringCollection.Insert(System.Int32,System.String)">
          <source>Inserts a string into the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph> at the specified index.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph> 内の指定したインデックス位置に、文字列を挿入します。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.Insert(System.Int32,System.String)">
          <source>Duplicate strings are allowed in <ph id="ph1">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph>.</source>
          <target state="translated">重複する文字列では許可<ph id="ph1">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.Insert(System.Int32,System.String)">
          <source>If <ph id="ph1">`index`</ph> is equal to <ph id="ph2">&lt;xref:System.Collections.Specialized.StringCollection.Count%2A&gt;</ph>, <ph id="ph3">`value`</ph> is added to the end of <ph id="ph4">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph>.</source>
          <target state="translated">場合<ph id="ph1">`index`</ph>と等しい<ph id="ph2">&lt;xref:System.Collections.Specialized.StringCollection.Count%2A&gt;</ph>、<ph id="ph3">`value`</ph>の末尾に追加された<ph id="ph4">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.Insert(System.Int32,System.String)">
          <source>In collections of contiguous elements, such as lists, the elements that follow the insertion point move down to accommodate the new element.</source>
          <target state="translated">リストなどの連続する要素のコレクションでは、新しい要素を挿入するために、挿入位置より後にある要素の位置が繰り下げられます。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.Insert(System.Int32,System.String)">
          <source>If the collection is indexed, the indexes of the elements that are moved are also updated.</source>
          <target state="translated">コレクションにインデックスがある場合、移動した要素のインデックスも更新されます。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.Insert(System.Int32,System.String)">
          <source>This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</source>
          <target state="translated">この動作は、要素が概念的にバケットにグループ化されているハッシュ テーブルなどのコレクションには適用されません。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.Insert(System.Int32,System.String)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Specialized.StringCollection.Count%2A&gt;</ph>.</source>
          <target state="translated">このメソッドは、O (<ph id="ph1">`n`</ph>) 操作では、ここで<ph id="ph2">`n`</ph>は<ph id="ph3">&lt;xref:System.Collections.Specialized.StringCollection.Count%2A&gt;</ph>します。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.Insert(System.Int32,System.String)">
          <source>The following code example adds new elements to the <ph id="ph1">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph>.</source>
          <target state="translated">次のコード例は、新しい要素を追加、<ph id="ph1">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.StringCollection.Insert(System.Int32,System.String)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> が 0 未満です。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.StringCollection.Insert(System.Int32,System.String)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.StringCollection.Insert(System.Int32,System.String)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> greater than <ph id="ph2">&lt;see cref="P:System.Collections.Specialized.StringCollection.Count" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> が <ph id="ph2">&lt;see cref="P:System.Collections.Specialized.StringCollection.Count" /&gt;</ph> より大きい。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="P:System.Collections.Specialized.StringCollection.IsReadOnly">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph> is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph> が読み取り専用かどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.StringCollection.IsReadOnly">
          <source>This property always returns <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">このプロパティは常に <ph id="ph1">&lt;see langword="false" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.StringCollection.IsReadOnly">
          <source><ph id="ph1">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph> implements the <ph id="ph2">&lt;xref:System.Collections.Specialized.StringCollection.IsReadOnly%2A&gt;</ph> property because it is required by the <ph id="ph3">&lt;xref:System.Collections.IList?displayProperty=nameWithType&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph> 実装する、<ph id="ph2">&lt;xref:System.Collections.Specialized.StringCollection.IsReadOnly%2A&gt;</ph>プロパティが必要としているため、<ph id="ph3">&lt;xref:System.Collections.IList?displayProperty=nameWithType&gt;</ph>インターフェイスです。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.StringCollection.IsReadOnly">
          <source>A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</source>
          <target state="translated">読み取り専用のコレクションでは、コレクション作成後に要素の追加、削除、または変更はできません。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.StringCollection.IsReadOnly">
          <source>A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</source>
          <target state="translated">読み取り専用であるコレクションは、コレクションのコレクションの変更を防止するラッパーです。そのため、基になるコレクションの変更が加えられた、読み取り専用コレクションはそれらの変更を反映します。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.StringCollection.IsReadOnly">
          <source>A <ph id="ph1">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph> instance is always writable.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph>インスタンスが書き込み可能では常にします。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.StringCollection.IsReadOnly">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">このプロパティ値を取得することは、O(1) 操作になります。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="P:System.Collections.Specialized.StringCollection.IsSynchronized">
          <source>Gets a value indicating whether access to the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph> is synchronized (thread safe).</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph> へのアクセスが同期されている (スレッド セーフである) かどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.StringCollection.IsSynchronized">
          <source>This property always returns <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">このプロパティは常に <ph id="ph1">&lt;see langword="false" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.StringCollection.IsSynchronized">
          <source><ph id="ph1">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph> implements the <ph id="ph2">&lt;xref:System.Collections.Specialized.StringCollection.IsSynchronized%2A&gt;</ph> property because it is required by the <ph id="ph3">&lt;xref:System.Collections.ICollection&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph> 実装する、<ph id="ph2">&lt;xref:System.Collections.Specialized.StringCollection.IsSynchronized%2A&gt;</ph>プロパティが必要としているため、<ph id="ph3">&lt;xref:System.Collections.ICollection&gt;</ph>インターフェイスです。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.StringCollection.IsSynchronized">
          <source>Enumerating through a collection is intrinsically not a thread safe procedure.</source>
          <target state="translated">コレクションの列挙は本質的にスレッド セーフな方法です。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.StringCollection.IsSynchronized">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">コレクションの同期がとられている場合でも、別のスレッドによってそのコレクションを変更できるため、変更の結果として列挙子は例外をスローします。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.StringCollection.IsSynchronized">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">列挙処理を確実にスレッド セーフに行うには、列挙中にコレクションをロックするか、他のスレッドによって行われた変更によってスローされる例外をキャッチします。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.StringCollection.IsSynchronized">
          <source>The following code example shows how to lock the collection using the <ph id="ph1">&lt;xref:System.Collections.Specialized.StringCollection.SyncRoot%2A&gt;</ph> during the entire enumeration:</source>
          <target state="translated">次のコード例を使用してコレクションをロックする方法を示しています、<ph id="ph1">&lt;xref:System.Collections.Specialized.StringCollection.SyncRoot%2A&gt;</ph>列挙中に。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.StringCollection.IsSynchronized">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">このプロパティ値を取得することは、O(1) 操作になります。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="P:System.Collections.Specialized.StringCollection.Item(System.Int32)">
          <source>The zero-based index of the entry to get or set.</source>
          <target state="translated">取得または設定するエントリの 0 から始まるインデックス。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="P:System.Collections.Specialized.StringCollection.Item(System.Int32)">
          <source>Gets or sets the element at the specified index.</source>
          <target state="translated">指定したインデックスにある要素を取得または設定します。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.StringCollection.Item(System.Int32)">
          <source>The element at the specified index.</source>
          <target state="translated">指定したインデックス位置にある要素。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.StringCollection.Item(System.Int32)">
          <source>This property provides the ability to access a specific element in the collection by using the following syntax: <ph id="ph1">`myCollection[index]`</ph>.</source>
          <target state="translated">このプロパティでは、<ph id="ph1">`myCollection[index]`</ph> という構文を使用して、コレクション内の特定の要素にアクセスできます。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.StringCollection.Item(System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph> accepts <ph id="ph2">`null`</ph> as a valid value and allows duplicate elements.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph> 受け付ける<ph id="ph2">`null`</ph>有効な値としてでき、重複する要素。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.StringCollection.Item(System.Int32)">
          <source>The C# language uses the  keyword to define the indexers instead of implementing the <ph id="ph1">&lt;xref:System.Collections.Specialized.StringCollection.Item%2A&gt;</ph> property.</source>
          <target state="translated">C# 言語キーワードを使用して実装する代わりに、インデクサーの定義、<ph id="ph1">&lt;xref:System.Collections.Specialized.StringCollection.Item%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.StringCollection.Item(System.Int32)">
          <source>Visual Basic implements <ph id="ph1">&lt;xref:System.Collections.Specialized.StringCollection.Item%2A&gt;</ph> as a default property, which provides the same indexing functionality.</source>
          <target state="translated">Visual Basic は、<ph id="ph1">&lt;xref:System.Collections.Specialized.StringCollection.Item%2A&gt;</ph> を既定のプロパティとして実装しており、同様のインデックス機能を提供します。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.StringCollection.Item(System.Int32)">
          <source>Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.</source>
          <target state="translated">このプロパティの値を取得する場合は、o (1) 操作です。プロパティの設定は、o (1) 操作ではもです。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="P:System.Collections.Specialized.StringCollection.Item(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> が 0 未満です。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="P:System.Collections.Specialized.StringCollection.Item(System.Int32)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="P:System.Collections.Specialized.StringCollection.Item(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is equal to or greater than <ph id="ph2">&lt;see cref="P:System.Collections.Specialized.StringCollection.Count" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> が <ph id="ph2">&lt;see cref="P:System.Collections.Specialized.StringCollection.Count" /&gt;</ph> 以上になっています。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.StringCollection.Remove(System.String)">
          <source>The string to remove from the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph> から削除する文字列。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.StringCollection.Remove(System.String)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">値として <ph id="ph1">&lt;see langword="null" /&gt;</ph> を指定できます。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.StringCollection.Remove(System.String)">
          <source>Removes the first occurrence of a specific string from the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph> 内で最初に見つかった指定文字列を削除します。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.Remove(System.String)">
          <source>Duplicate strings are allowed in <ph id="ph1">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph>.</source>
          <target state="translated">重複する文字列では許可<ph id="ph1">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.Remove(System.String)">
          <source>Only the first occurrence is removed.</source>
          <target state="translated">最初に見つかった位置だけが削除されます。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.Remove(System.String)">
          <source>To remove all occurrences of the specified string, use <ph id="ph1">`RemoveAt(IndexOf(value))`</ph> repeatedly while <ph id="ph2">&lt;xref:System.Collections.Specialized.StringCollection.IndexOf%2A&gt;</ph> does not return -1.</source>
          <target state="translated">削除するには、指定した文字列のすべての項目を使用して<ph id="ph1">`RemoveAt(IndexOf(value))`</ph>中に繰り返し<ph id="ph2">&lt;xref:System.Collections.Specialized.StringCollection.IndexOf%2A&gt;</ph>-1 は返しません。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.Remove(System.String)">
          <source>If the <ph id="ph1">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph> does not contain the specified object, the <ph id="ph2">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph> remains unchanged.</source>
          <target state="translated">場合、 <ph id="ph1">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph> 、指定したオブジェクトが含まれていない、<ph id="ph2">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph>は変更されません。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.Remove(System.String)">
          <source>No exception is thrown.</source>
          <target state="translated">例外をスローすることはありません。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.Remove(System.String)">
          <source>In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</source>
          <target state="translated">リストなどの連続する要素のコレクションでは、空白になった位置を埋めるために、削除された要素の後にある要素の位置が繰り上げられます。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.Remove(System.String)">
          <source>If the collection is indexed, the indexes of the elements that are moved are also updated.</source>
          <target state="translated">コレクションにインデックスがある場合、移動した要素のインデックスも更新されます。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.Remove(System.String)">
          <source>This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</source>
          <target state="translated">この動作は、要素が概念的にバケットにグループ化されているハッシュ テーブルなどのコレクションには適用されません。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.Remove(System.String)">
          <source>This method determines equality by calling <ph id="ph1">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">このメソッドを呼び出すことで等しいかどうかを判断<ph id="ph1">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.Remove(System.String)">
          <source>String comparisons are case-sensitive.</source>
          <target state="translated">文字列比較で大文字小文字が区別されます。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.Remove(System.String)">
          <source>This method performs a linear search; therefore, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Specialized.StringCollection.Count%2A&gt;</ph>.</source>
          <target state="translated">このメソッドは、一方向の検索を実行します。そのため、このメソッドは、O (<ph id="ph1">`n`</ph>) 操作では、ここで<ph id="ph2">`n`</ph>は<ph id="ph3">&lt;xref:System.Collections.Specialized.StringCollection.Count%2A&gt;</ph>します。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.Remove(System.String)">
          <source>The following code example removes elements from the <ph id="ph1">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph>.</source>
          <target state="translated">次のコード例からの要素を削除する、<ph id="ph1">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.StringCollection.RemoveAt(System.Int32)">
          <source>The zero-based index of the string to remove.</source>
          <target state="translated">削除する文字列の 0 から始まるインデックス。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.StringCollection.RemoveAt(System.Int32)">
          <source>Removes the string at the specified index of the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph> 内の指定したインデックスにある文字列を削除します。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.RemoveAt(System.Int32)">
          <source>In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</source>
          <target state="translated">リストなどの連続する要素のコレクションでは、空白になった位置を埋めるために、削除された要素の後にある要素の位置が繰り上げられます。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.RemoveAt(System.Int32)">
          <source>If the collection is indexed, the indexes of the elements that are moved are also updated.</source>
          <target state="translated">コレクションにインデックスがある場合、移動した要素のインデックスも更新されます。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.RemoveAt(System.Int32)">
          <source>This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</source>
          <target state="translated">この動作は、要素が概念的にバケットにグループ化されているハッシュ テーブルなどのコレクションには適用されません。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.RemoveAt(System.Int32)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Specialized.StringCollection.Count%2A&gt;</ph>.</source>
          <target state="translated">このメソッドは、O (<ph id="ph1">`n`</ph>) 操作では、ここで<ph id="ph2">`n`</ph>は<ph id="ph3">&lt;xref:System.Collections.Specialized.StringCollection.Count%2A&gt;</ph>します。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.RemoveAt(System.Int32)">
          <source>The following code example removes elements from the <ph id="ph1">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph>.</source>
          <target state="translated">次のコード例からの要素を削除する、<ph id="ph1">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.StringCollection.RemoveAt(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> が 0 未満です。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.StringCollection.RemoveAt(System.Int32)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.StringCollection.RemoveAt(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is equal to or greater than <ph id="ph2">&lt;see cref="P:System.Collections.Specialized.StringCollection.Count" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> が <ph id="ph2">&lt;see cref="P:System.Collections.Specialized.StringCollection.Count" /&gt;</ph> 以上になっています。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="P:System.Collections.Specialized.StringCollection.SyncRoot">
          <source>Gets an object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph> へのアクセスを同期するために使用できるオブジェクトを取得します。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.StringCollection.SyncRoot">
          <source>An object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph> へのアクセスの同期に使用できるオブジェクト。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.StringCollection.SyncRoot">
          <source>Derived classes can provide their own synchronized version of the <ph id="ph1">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph> using the <ph id="ph2">&lt;xref:System.Collections.Specialized.StringCollection.SyncRoot%2A&gt;</ph> property.</source>
          <target state="translated">派生クラスは、独自の同期されたバージョンを指定できます、<ph id="ph1">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph>を使用して、<ph id="ph2">&lt;xref:System.Collections.Specialized.StringCollection.SyncRoot%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.StringCollection.SyncRoot">
          <source>The synchronizing code must perform operations on the <ph id="ph1">&lt;xref:System.Collections.Specialized.StringCollection.SyncRoot%2A&gt;</ph> of the <ph id="ph2">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph>, not directly on the <ph id="ph3">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph>.</source>
          <target state="translated">同期されたコードで操作を実行する必要があります、<ph id="ph1">&lt;xref:System.Collections.Specialized.StringCollection.SyncRoot%2A&gt;</ph>の<ph id="ph2">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph>、上で直接、<ph id="ph3">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.StringCollection.SyncRoot">
          <source>This ensures proper operation of collections that are derived from other objects.</source>
          <target state="translated">これにより、他のオブジェクトから派生したコレクションを適切に操作できるようになります。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.StringCollection.SyncRoot">
          <source>Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <ph id="ph1">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph> object.</source>
          <target state="translated">具体的には、同時に変更する可能性がある別スレッドとの適切な同期を維持、<ph id="ph1">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.StringCollection.SyncRoot">
          <source>Enumerating through a collection is intrinsically not a thread safe procedure.</source>
          <target state="translated">コレクションの列挙は本質的にスレッド セーフな方法です。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.StringCollection.SyncRoot">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">コレクションの同期がとられている場合でも、別のスレッドによってそのコレクションを変更できるため、変更の結果として列挙子は例外をスローします。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.StringCollection.SyncRoot">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">列挙処理を確実にスレッド セーフに行うには、列挙中にコレクションをロックするか、他のスレッドによって行われた変更によってスローされる例外をキャッチします。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.StringCollection.SyncRoot">
          <source>The following code example shows how to lock the collection using the <ph id="ph1">&lt;xref:System.Collections.Specialized.StringCollection.SyncRoot%2A&gt;</ph> during the entire enumeration:</source>
          <target state="translated">次のコード例を使用してコレクションをロックする方法を示しています、<ph id="ph1">&lt;xref:System.Collections.Specialized.StringCollection.SyncRoot%2A&gt;</ph>列挙中に。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.StringCollection.SyncRoot">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">このプロパティ値を取得することは、O(1) 操作になります。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.StringCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The one-dimensional <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> that is the destination of the elements copied from <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> から要素がコピーされる 1 次元の <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.StringCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> must have zero-based indexing.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> には、0 から始まるインデックス番号が必要です。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.StringCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated">コピーの開始位置となる、<bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> の 0 から始まるインデックス。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.StringCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>Copies the entire <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph> to a compatible one-dimensional <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph>, starting at the specified index of the target array.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph> 全体を、互換性のある 1 次元の <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph> にコピーします。コピー操作は、コピー先の配列の指定したインデックスから始まる部分に行います。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The specified array must be of a compatible type.</source>
          <target state="translated">指定された配列は、互換性のある型でなければなりません。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>This method uses <ph id="ph1">&lt;xref:System.Array.Copy%2A?displayProperty=nameWithType&gt;</ph> to copy the elements.</source>
          <target state="translated">このメソッドを使用して<ph id="ph1">&lt;xref:System.Array.Copy%2A?displayProperty=nameWithType&gt;</ph>要素のコピー。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Specialized.StringCollection.Count%2A&gt;</ph>.</source>
          <target state="translated">このメソッドは、O (<ph id="ph1">`n`</ph>) 操作では、ここで<ph id="ph2">`n`</ph>は<ph id="ph3">&lt;xref:System.Collections.Specialized.StringCollection.Count%2A&gt;</ph>します。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.StringCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.StringCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> が 0 未満です。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.StringCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is multidimensional.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> が多次元です。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.StringCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.StringCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The number of elements in the source <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph> is greater than the available space from <ph id="ph2">&lt;paramref name="index" /&gt;</ph> to the end of the destination <ph id="ph3">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">コピー元の <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph> の要素数が、コピー先 <ph id="ph3">&lt;paramref name="array" /&gt;</ph> の <ph id="ph2">&lt;paramref name="index" /&gt;</ph> から最後までの使用可能領域を超えています。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.StringCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The type of the source <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph> cannot be cast automatically to the type of the destination <ph id="ph2">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">コピー元の <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph> の型をコピー先の <ph id="ph2">&lt;paramref name="array" /&gt;</ph> の型に自動的にキャストすることはできません。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.StringCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> that iterates through the <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> を反復処理する <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.StringCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> for the <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> の <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>[Visual Basic, C#]</source>
          <target state="translated">[Visual Basic、C# の場合]</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated">C# 言語の <ph id="ph1">`foreach`</ph> ステートメント (Visual Basic の場合は <ph id="ph2">`for each`</ph>) を使用することで列挙子の複雑さを回避できます。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">したがって、列挙子を直接操作するのではなく、<ph id="ph1">`foreach`</ph> を使用することをお勧めします。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">列挙子を使用すると、コレクション内のデータを読み取ることができますが、基になるコレクションを変更することはできません。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">最初に、列挙子はコレクション内の 1 番目の要素の前に位置付けられます。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.System#Collections#IEnumerable#GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> also brings the enumerator back to this position.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> を実行した場合も、列挙子はこの位置に戻されます。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>At this position, calling <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> throws an exception.</source>
          <target state="translated">この位置で、呼び出す<ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>例外をスローします。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>Therefore, you must call <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</source>
          <target state="translated">そのため、<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> の値を読み取る前に、<ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> を呼び出して列挙子をコレクションの最初の要素に進める必要があります。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.System#Collections#IEnumerable#GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> returns the same object until either <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> は、<ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> または <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> が呼び出されるまでは同じオブジェクトを返します。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.System#Collections#IEnumerable#GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> は、<ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> を次の要素に設定します。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>If <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">場合<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>列挙子をコレクションの末尾が、コレクション内の最後の要素の後に配置されているパスと<ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>返します<ph id="ph3">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">列挙子がこの位置では、後続の呼び出しの場合<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>を返すことも<ph id="ph2">`false`</ph>します。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, calling <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> throws an exception.</source>
          <target state="translated">場合は、最後の呼び出し<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>返される<ph id="ph2">`false`</ph>、呼び出し元<ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>例外をスローします。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>To set <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the first element of the collection again, you can call <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> followed by <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> をコレクションの最初の要素にもう一度設定するには、<ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> を呼び出してから <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> を呼び出します。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">コレクションが変更されない限り、列挙子は有効です。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> throws an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">無効になり、次の呼び出しに変更を追加するなど、コレクションを変更、または要素を削除するには、列挙子は回復不可能<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>または<ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph>スロー、<ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>If the collection is modified between <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> returns the element that it is set to, even if the enumerator is already invalidated.</source>
          <target state="translated">間で、コレクションが変更された場合<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>、<ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>列挙子が既に無効になっている場合でもに設定されている要素を返します。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread safe procedure.</source>
          <target state="translated">列挙子には、コレクションへの排他アクセスがありません。したがって、コレクションの列挙処理は本質的にスレッド セーフな処理ではありません。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">コレクションの同期がとられている場合でも、別のスレッドによってそのコレクションを変更できるため、変更の結果として列挙子は例外をスローします。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">列挙処理を確実にスレッド セーフに行うには、列挙中にコレクションをロックするか、他のスレッドによって行われた変更によってスローされる例外をキャッチします。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>This method is an O(1) operation.</source>
          <target state="translated">このメソッドは、o (1) 操作です。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.StringCollection.System#Collections#IList#Add(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to be added to the end of the <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> の末尾に追加する <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.StringCollection.System#Collections#IList#Add(System.Object)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">値として <ph id="ph1">&lt;see langword="null" /&gt;</ph> を指定できます。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.StringCollection.System#Collections#IList#Add(System.Object)">
          <source>Adds an object to the end of the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph> の末尾にオブジェクトを追加します。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.StringCollection.System#Collections#IList#Add(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph> index at which the <ph id="ph2">&lt;paramref name="value" /&gt;</ph> has been added.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="value" /&gt;</ph> が追加された位置の <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph> インデックス。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.System#Collections#IList#Add(System.Object)">
          <source><ph id="ph1">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph> accepts <ph id="ph2">`null`</ph> as a valid value and allows duplicate elements.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph> 受け付ける<ph id="ph2">`null`</ph>有効な値としてでき、重複する要素。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.System#Collections#IList#Add(System.Object)">
          <source>If <ph id="ph1">&lt;xref:System.Collections.Specialized.StringCollection.Count%2A&gt;</ph> already equals the capacity, the capacity of the <ph id="ph2">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</source>
          <target state="translated">場合<ph id="ph1">&lt;xref:System.Collections.Specialized.StringCollection.Count%2A&gt;</ph>容量の容量と既に同じ、<ph id="ph2">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph>内部の配列を自動的に再割り当てが増加し、新しい要素が追加される前に、既存の要素が新しい配列にコピーされます。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.System#Collections#IList#Add(System.Object)">
          <source>If <ph id="ph1">&lt;xref:System.Collections.Specialized.StringCollection.Count%2A&gt;</ph> is less than the capacity, this method is an O(1) operation.</source>
          <target state="translated">場合<ph id="ph1">&lt;xref:System.Collections.Specialized.StringCollection.Count%2A&gt;</ph>が少なく、容量よりも、このメソッドは、o (1) 操作になります。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.System#Collections#IList#Add(System.Object)">
          <source>If the capacity needs to be increased to accommodate the new element, this method becomes an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Specialized.StringCollection.Count%2A&gt;</ph>.</source>
          <target state="translated">容量は、新しい要素を格納するためにする必要があります、このメソッドが O (<ph id="ph1">`n`</ph>) 操作、場所<ph id="ph2">`n`</ph>は<ph id="ph3">&lt;xref:System.Collections.Specialized.StringCollection.Count%2A&gt;</ph>します。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.StringCollection.System#Collections#IList#Add(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph> is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph> は読み取り専用です。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.StringCollection.System#Collections#IList#Add(System.Object)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.StringCollection.System#Collections#IList#Add(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph> has a fixed size.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph> は固定サイズです。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.StringCollection.System#Collections#IList#Contains(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to locate in the <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> 内で検索される <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.StringCollection.System#Collections#IList#Contains(System.Object)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">値として <ph id="ph1">&lt;see langword="null" /&gt;</ph> を指定できます。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.StringCollection.System#Collections#IList#Contains(System.Object)">
          <source>Determines whether an element is in the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph>.</source>
          <target state="translated">ある要素が <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph> 内に存在するかどうかを判断します。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.StringCollection.System#Collections#IList#Contains(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is found in the <ph id="ph3">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> が <ph id="ph2">&lt;paramref name="value" /&gt;</ph> に存在する場合は <ph id="ph3">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph>。それ以外の場合は <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.System#Collections#IList#Contains(System.Object)">
          <source>This method determines equality by calling <ph id="ph1">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">このメソッドを呼び出すことで等しいかどうかを判断<ph id="ph1">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.System#Collections#IList#Contains(System.Object)">
          <source>This method performs a linear search; therefore, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Specialized.StringCollection.Count%2A&gt;</ph>.</source>
          <target state="translated">このメソッドは、一方向の検索を実行します。そのため、このメソッドは、O (<ph id="ph1">`n`</ph>) 操作では、ここで<ph id="ph2">`n`</ph>は<ph id="ph3">&lt;xref:System.Collections.Specialized.StringCollection.Count%2A&gt;</ph>します。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.System#Collections#IList#Contains(System.Object)">
          <source>Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods on <ph id="ph3">`item`</ph> to determine whether item exists.</source>
          <target state="translated">以降、.NET Framework 2.0 では、このメソッドを使用して、コレクションのオブジェクトの<ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph>メソッド<ph id="ph3">`item`</ph>項目が存在するかどうかを確認します。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.System#Collections#IList#Contains(System.Object)">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods of the <ph id="ph3">`item`</ph> parameter on the objects in the collection.</source>
          <target state="translated">.NET Framework の以前のバージョンでは、この決定を使用して行われた、<ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph>のメソッド、<ph id="ph3">`item`</ph>パラメーター コレクション内のオブジェクトにします。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.StringCollection.System#Collections#IList#IndexOf(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to locate in the <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> 内で検索される <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.StringCollection.System#Collections#IList#IndexOf(System.Object)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">値として <ph id="ph1">&lt;see langword="null" /&gt;</ph> を指定できます。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.StringCollection.System#Collections#IList#IndexOf(System.Object)">
          <source>Searches for the specified <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> and returns the zero-based index of the first occurrence within the entire <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph>.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> を検索し、<ph id="ph2">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph> 全体内で最初に見つかった位置の 0 から始まるインデックスを返します。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.StringCollection.System#Collections#IList#IndexOf(System.Object)">
          <source>The zero-based index of the first occurrence of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> within the entire <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph>, if found; otherwise, -1.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 全体を対象に <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph> を検索し、見つかった場合は、インデックス番号の最も小さい要素の 0 から始まるインデックス番号、それ以外の場合は -1。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.System#Collections#IList#IndexOf(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph> is searched forward starting at the first element and ending at the last element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph>はフォワード最初の要素を起点と最後の要素で終わる検索します。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.System#Collections#IList#IndexOf(System.Object)">
          <source>This method determines equality by calling <ph id="ph1">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">このメソッドを呼び出すことで等しいかどうかを判断<ph id="ph1">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.System#Collections#IList#IndexOf(System.Object)">
          <source>This method performs a linear search; therefore, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Specialized.StringCollection.Count%2A&gt;</ph>.</source>
          <target state="translated">このメソッドは、一方向の検索を実行します。そのため、このメソッドは、O (<ph id="ph1">`n`</ph>) 操作では、ここで<ph id="ph2">`n`</ph>は<ph id="ph3">&lt;xref:System.Collections.Specialized.StringCollection.Count%2A&gt;</ph>します。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.System#Collections#IList#IndexOf(System.Object)">
          <source>Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods on <ph id="ph3">`item`</ph> to determine whether item exists.</source>
          <target state="translated">以降、.NET Framework 2.0 では、このメソッドを使用して、コレクションのオブジェクトの<ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph>メソッド<ph id="ph3">`item`</ph>項目が存在するかどうかを確認します。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.System#Collections#IList#IndexOf(System.Object)">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods of the <ph id="ph3">`item`</ph> parameter on the objects in the collection.</source>
          <target state="translated">.NET Framework の以前のバージョンでは、この決定を使用して行われた、<ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph>のメソッド、<ph id="ph3">`item`</ph>パラメーター コレクション内のオブジェクトにします。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.StringCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>The zero-based index at which <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> should be inserted.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> を挿入する位置を示す、0 から始まるインデックス。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.StringCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to insert.</source>
          <target state="translated">挿入する <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.StringCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">値として <ph id="ph1">&lt;see langword="null" /&gt;</ph> を指定できます。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.StringCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>Inserts an element into the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph> at the specified index.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph> 内の指定したインデックスの位置に要素を挿入します。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>If <ph id="ph1">&lt;xref:System.Collections.Specialized.StringCollection.Count%2A&gt;</ph> already equals the capacity, the capacity of the <ph id="ph2">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</source>
          <target state="translated">場合<ph id="ph1">&lt;xref:System.Collections.Specialized.StringCollection.Count%2A&gt;</ph>容量の容量と既に同じ、<ph id="ph2">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph>内部の配列を自動的に再割り当てが増加し、新しい要素が追加される前に、既存の要素が新しい配列にコピーされます。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>If <ph id="ph1">`index`</ph> is equal to <ph id="ph2">&lt;xref:System.Collections.Specialized.StringCollection.Count%2A&gt;</ph>, <ph id="ph3">`value`</ph> is added to the end of <ph id="ph4">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph>.</source>
          <target state="translated">場合<ph id="ph1">`index`</ph>と等しい<ph id="ph2">&lt;xref:System.Collections.Specialized.StringCollection.Count%2A&gt;</ph>、<ph id="ph3">`value`</ph>の末尾に追加された<ph id="ph4">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>In collections of contiguous elements, such as lists, the elements that follow the insertion point move down to accommodate the new element.</source>
          <target state="translated">リストなどの連続する要素のコレクションでは、新しい要素を挿入するために、挿入位置より後にある要素の位置が繰り下げられます。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>If the collection is indexed, the indexes of the elements that are moved are also updated.</source>
          <target state="translated">コレクションにインデックスがある場合、移動した要素のインデックスも更新されます。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</source>
          <target state="translated">この動作は、要素が概念的にバケットにグループ化されているハッシュ テーブルなどのコレクションには適用されません。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Specialized.StringCollection.Count%2A&gt;</ph>.</source>
          <target state="translated">このメソッドは、O (<ph id="ph1">`n`</ph>) 操作では、ここで<ph id="ph2">`n`</ph>は<ph id="ph3">&lt;xref:System.Collections.Specialized.StringCollection.Count%2A&gt;</ph>します。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.StringCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> が 0 未満です。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.StringCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.StringCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="P:System.Collections.Specialized.StringCollection.Count" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> が <ph id="ph2">&lt;see cref="P:System.Collections.Specialized.StringCollection.Count" /&gt;</ph> より大きくなっています。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.StringCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph> is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph> は読み取り専用です。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.StringCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.StringCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph> has a fixed size.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph> は固定サイズです。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="P:System.Collections.Specialized.StringCollection.System#Collections#IList#IsFixedSize">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph> object has a fixed size.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph> オブジェクトが固定サイズかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.StringCollection.System#Collections#IList#IsFixedSize">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph> object has a fixed size; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph> オブジェクトが固定サイズの場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.StringCollection.System#Collections#IList#IsFixedSize">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">既定値は、<ph id="ph1">&lt;see langword="false" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.StringCollection.System#Collections#IList#IsFixedSize">
          <source>A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but does allow the modification of existing elements.</source>
          <target state="translated">固定サイズ コレクションできない追加または削除の要素のコレクションが作成された後で、既存の要素の変更はできます。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.StringCollection.System#Collections#IList#IsFixedSize">
          <source>A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</source>
          <target state="translated">固定サイズ コレクションが追加および削除する要素を防止するラッパーで単純なコレクションそのための追加または削除、要素を含む、基になるコレクションが変更された場合、固定サイズ コレクションにはそれらの変更が反映されます。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.StringCollection.System#Collections#IList#IsFixedSize">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">このプロパティ値を取得することは、O(1) 操作になります。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="P:System.Collections.Specialized.StringCollection.System#Collections#IList#IsReadOnly">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph> object is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph> オブジェクトが読み取り専用かどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.StringCollection.System#Collections#IList#IsReadOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph> object is read-only; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph> オブジェクトが読み取り専用の場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.StringCollection.System#Collections#IList#IsReadOnly">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">既定値は、<ph id="ph1">&lt;see langword="false" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.StringCollection.System#Collections#IList#IsReadOnly">
          <source>A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</source>
          <target state="translated">読み取り専用のコレクションでは、コレクション作成後に要素の追加、削除、または変更はできません。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.StringCollection.System#Collections#IList#IsReadOnly">
          <source>A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</source>
          <target state="translated">読み取り専用であるコレクションは、コレクションのコレクションの変更を防止するラッパーです。そのため、基になるコレクションの変更が加えられた、読み取り専用コレクションはそれらの変更を反映します。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.StringCollection.System#Collections#IList#IsReadOnly">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">このプロパティ値を取得することは、O(1) 操作になります。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="P:System.Collections.Specialized.StringCollection.System#Collections#IList#Item(System.Int32)">
          <source>The zero-based index of the element to get or set.</source>
          <target state="translated">取得または設定する要素の、0 から始まるインデックス番号。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="P:System.Collections.Specialized.StringCollection.System#Collections#IList#Item(System.Int32)">
          <source>Gets or sets the element at the specified index.</source>
          <target state="translated">指定したインデックスにある要素を取得または設定します。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.StringCollection.System#Collections#IList#Item(System.Int32)">
          <source>The element at the specified index.</source>
          <target state="translated">指定したインデックス位置にある要素。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.StringCollection.System#Collections#IList#Item(System.Int32)">
          <source>Thismethod provides the ability to access a specific element in the collection by using the following syntax: <ph id="ph1">`myCollection[index]`</ph>.</source>
          <target state="translated">このメソッドは、次の構文を使用して、コレクション内の特定の要素にアクセスする機能を提供します。<ph id="ph1">`myCollection[index]`</ph>です。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.StringCollection.System#Collections#IList#Item(System.Int32)">
          <source>The C# language uses the <bpt id="p1">[</bpt>this<ept id="p1">](~/docs/csharp/language-reference/keywords/this.md)</ept> keyword to define the indexers instead of implementing the <ph id="ph1">&lt;xref:System.Collections.Specialized.StringCollection.System%23Collections%23IList%23Item%2A&gt;</ph> property.</source>
          <target state="translated">C# 言語を使用して、<bpt id="p1">[</bpt>この<ept id="p1">](~/docs/csharp/language-reference/keywords/this.md)</ept>キーワードを実装する代わりに、インデクサーの定義、<ph id="ph1">&lt;xref:System.Collections.Specialized.StringCollection.System%23Collections%23IList%23Item%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.StringCollection.System#Collections#IList#Item(System.Int32)">
          <source>Visual Basic implements <ph id="ph1">&lt;xref:System.Collections.Specialized.StringCollection.System%23Collections%23IList%23Item%2A&gt;</ph> as a default property, which provides the same indexing functionality.</source>
          <target state="translated">Visual Basic は、<ph id="ph1">&lt;xref:System.Collections.Specialized.StringCollection.System%23Collections%23IList%23Item%2A&gt;</ph> を既定のプロパティとして実装しており、同様のインデックス機能を提供します。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.StringCollection.System#Collections#IList#Item(System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph> accepts <ph id="ph2">`null`</ph> as a valid value and allows duplicate elements.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph> 受け付ける<ph id="ph2">`null`</ph>有効な値としてでき、重複する要素。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.StringCollection.System#Collections#IList#Item(System.Int32)">
          <source>Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.</source>
          <target state="translated">このプロパティの値を取得する場合は、o (1) 操作です。プロパティの設定は、o (1) 操作ではもです。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="P:System.Collections.Specialized.StringCollection.System#Collections#IList#Item(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> が 0 未満です。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="P:System.Collections.Specialized.StringCollection.System#Collections#IList#Item(System.Int32)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="P:System.Collections.Specialized.StringCollection.System#Collections#IList#Item(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is equal to or greater than <ph id="ph2">&lt;see cref="P:System.Collections.Specialized.StringCollection.Count" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> が <ph id="ph2">&lt;see cref="P:System.Collections.Specialized.StringCollection.Count" /&gt;</ph> 以上になっています。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.StringCollection.System#Collections#IList#Remove(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to remove from the <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> から削除する <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.StringCollection.System#Collections#IList#Remove(System.Object)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">値として <ph id="ph1">&lt;see langword="null" /&gt;</ph> を指定できます。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.StringCollection.System#Collections#IList#Remove(System.Object)">
          <source>Removes the first occurrence of a specific object from the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph>.</source>
          <target state="translated">特定のオブジェクトが <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph> 内にあるときに、最初に出現したものを削除します。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.System#Collections#IList#Remove(System.Object)">
          <source>If the <ph id="ph1">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph> does not contain the specified object, the <ph id="ph2">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph> remains unchanged.</source>
          <target state="translated">場合、 <ph id="ph1">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph> 、指定したオブジェクトが含まれていない、<ph id="ph2">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph>は変更されません。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.System#Collections#IList#Remove(System.Object)">
          <source>No exception is thrown.</source>
          <target state="translated">例外をスローすることはありません。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.System#Collections#IList#Remove(System.Object)">
          <source>In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</source>
          <target state="translated">リストなどの連続する要素のコレクションでは、空白になった位置を埋めるために、削除された要素の後にある要素の位置が繰り上げられます。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.System#Collections#IList#Remove(System.Object)">
          <source>If the collection is indexed, the indexes of the elements that are moved are also updated.</source>
          <target state="translated">コレクションにインデックスがある場合、移動した要素のインデックスも更新されます。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.System#Collections#IList#Remove(System.Object)">
          <source>This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</source>
          <target state="translated">この動作は、要素が概念的にバケットにグループ化されているハッシュ テーブルなどのコレクションには適用されません。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.System#Collections#IList#Remove(System.Object)">
          <source>This method determines equality by calling <ph id="ph1">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">このメソッドを呼び出すことで等しいかどうかを判断<ph id="ph1">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringCollection.System#Collections#IList#Remove(System.Object)">
          <source>This method performs a linear search; therefore, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Specialized.StringCollection.Count%2A&gt;</ph>.</source>
          <target state="translated">このメソッドは、一方向の検索を実行します。そのため、このメソッドは、O (<ph id="ph1">`n`</ph>) 操作では、ここで<ph id="ph2">`n`</ph>は<ph id="ph3">&lt;xref:System.Collections.Specialized.StringCollection.Count%2A&gt;</ph>します。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.StringCollection.System#Collections#IList#Remove(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph> is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph> は読み取り専用です。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.StringCollection.System#Collections#IList#Remove(System.Object)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.StringCollection.System#Collections#IList#Remove(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph> has a fixed size.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph> は固定サイズです。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>