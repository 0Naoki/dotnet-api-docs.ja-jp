<Type Name="StringCollection" FullName="System.Collections.Specialized.StringCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c56db996c06447253adeb1386e07d9017801a9b7" /><Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="11/29/2018" /><Meta Name="ms.locfileid" Value="52602556" /></Metadata><TypeSignature Language="C#" Value="public class StringCollection : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit StringCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Specialized.StringCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class StringCollection&#xA;Implements IList" />
  <TypeSignature Language="C++ CLI" Value="public ref class StringCollection : System::Collections::IList" />
  <TypeSignature Language="F#" Value="type StringCollection = class&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Specialized</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="426cd-101">文字列のコレクションを表します。</span><span class="sxs-lookup"><span data-stu-id="426cd-101">Represents a collection of strings.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="426cd-102"><xref:System.Collections.Specialized.StringCollection> 受け入れる`null`有効な値としてでき、重複する要素。</span><span class="sxs-lookup"><span data-stu-id="426cd-102"><xref:System.Collections.Specialized.StringCollection> accepts `null` as a valid value and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="426cd-103">文字列比較では、大文字小文字が区別されます。</span><span class="sxs-lookup"><span data-stu-id="426cd-103">String comparisons are case-sensitive.</span></span>  
  
 <span data-ttu-id="426cd-104">このコレクション内の要素は、整数インデックスを使用してアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="426cd-104">Elements in this collection can be accessed using an integer index.</span></span>  <span data-ttu-id="426cd-105">このコレクションのインデックスは 0 から始まります。</span><span class="sxs-lookup"><span data-stu-id="426cd-105">Indexes in this collection are zero-based.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="426cd-106">次のコード例に示します、一部のプロパティとメソッドの<xref:System.Collections.Specialized.StringCollection>します。</span><span class="sxs-lookup"><span data-stu-id="426cd-106">The following code example demonstrates several of the properties and methods of <xref:System.Collections.Specialized.StringCollection>.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.StringCollection2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollection2/CPP/stringcollection.cpp#1)]
 [!code-csharp[System.Collections.Specialized.StringCollection2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollection2/CS/stringcollection.cs#1)]
 [!code-vb[System.Collections.Specialized.StringCollection2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollection2/VB/stringcollection.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="426cd-107">パブリック静的 (<see langword="Shared" /> Visual Basic で) この型のメンバーはスレッド セーフです。</span><span class="sxs-lookup"><span data-stu-id="426cd-107">Public static (<see langword="Shared" /> in Visual Basic) members of this type are thread safe.</span></span> <span data-ttu-id="426cd-108">インスタンス メンバーの場合は、スレッド セーフであるとは限りません。</span><span class="sxs-lookup"><span data-stu-id="426cd-108">Any instance members are not guaranteed to be thread safe.</span></span>  
  
<span data-ttu-id="426cd-109">この実装は同期を行わない (スレッド セーフな) ラッパーを<see cref="T:System.Collections.Specialized.StringCollection" />、派生クラスは、独自の同期バージョンを作成できますが、<see cref="T:System.Collections.Specialized.StringCollection" />を使用して、<see cref="P:System.Collections.Specialized.StringCollection.SyncRoot" />プロパティ。</span><span class="sxs-lookup"><span data-stu-id="426cd-109">This implementation does not provide a synchronized (thread safe) wrapper for a <see cref="T:System.Collections.Specialized.StringCollection" />, but derived classes can create their own synchronized versions of the <see cref="T:System.Collections.Specialized.StringCollection" /> using the <see cref="P:System.Collections.Specialized.StringCollection.SyncRoot" /> property.</span></span>  
  
<span data-ttu-id="426cd-110">コレクションの列挙は、スレッド セーフな方法では本質的にします。</span><span class="sxs-lookup"><span data-stu-id="426cd-110">Enumerating through a collection is intrinsically not a thread safe procedure.</span></span> <span data-ttu-id="426cd-111">コレクションの同期がとられている場合でも、別のスレッドによってそのコレクションを変更できるため、変更の結果として列挙子は例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="426cd-111">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="426cd-112">列挙処理を確実にスレッド セーフに行うには、列挙中にコレクションをロックするか、他のスレッドによって行われた変更によってスローされる例外をキャッチします。</span><span class="sxs-lookup"><span data-stu-id="426cd-112">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span></threadsafe>
    <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations.md"><span data-ttu-id="426cd-113">カルチャを認識しない文字列操作の実行</span><span class="sxs-lookup"><span data-stu-id="426cd-113">Performing Culture-Insensitive String Operations</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.StringCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="426cd-114"><see cref="T:System.Collections.Specialized.StringCollection" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="426cd-114">Initializes a new instance of the <see cref="T:System.Collections.Specialized.StringCollection" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="426cd-115">このコンス トラクターは、o (1) 操作です。</span><span class="sxs-lookup"><span data-stu-id="426cd-115">This constructor is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.StringCollection.Add(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (value As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.Add : string -&gt; int" Usage="stringCollection.Add value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="426cd-116"><see cref="T:System.Collections.Specialized.StringCollection" /> の末尾に追加する文字列。</span><span class="sxs-lookup"><span data-stu-id="426cd-116">The string to add to the end of the <see cref="T:System.Collections.Specialized.StringCollection" />.</span></span> <span data-ttu-id="426cd-117">値として <see langword="null" /> を指定できます。</span><span class="sxs-lookup"><span data-stu-id="426cd-117">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="426cd-118">文字列を <see cref="T:System.Collections.Specialized.StringCollection" /> の末尾に追加します。</span><span class="sxs-lookup"><span data-stu-id="426cd-118">Adds a string to the end of the <see cref="T:System.Collections.Specialized.StringCollection" />.</span></span></summary>
        <returns><span data-ttu-id="426cd-119">新しい要素が挿入される位置の 0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="426cd-119">The zero-based index at which the new element is inserted.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="426cd-120"><xref:System.Collections.Specialized.StringCollection> 受け入れる`null`有効な値としてでき、重複する要素。</span><span class="sxs-lookup"><span data-stu-id="426cd-120"><xref:System.Collections.Specialized.StringCollection> accepts `null` as a valid value and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="426cd-121">場合<xref:System.Collections.Specialized.StringCollection.Count%2A>が少なく、容量よりもこのメソッドは、o (1) 操作。</span><span class="sxs-lookup"><span data-stu-id="426cd-121">If <xref:System.Collections.Specialized.StringCollection.Count%2A> is less than the capacity, this method is an O(1) operation.</span></span> <span data-ttu-id="426cd-122">このメソッドになります、O が新しい要素を格納するために、容量が必要な場合 (`n`) 操作、`n`は<xref:System.Collections.Specialized.StringCollection.Count%2A>します。</span><span class="sxs-lookup"><span data-stu-id="426cd-122">If the capacity needs to be increased to accommodate the new element, this method becomes an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringCollection.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="426cd-123">次のコード例は、新しい要素を追加、<xref:System.Collections.Specialized.StringCollection>します。</span><span class="sxs-lookup"><span data-stu-id="426cd-123">The following code example adds new elements to the <xref:System.Collections.Specialized.StringCollection>.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.StringCollectionAdd#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionAdd/CPP/stringcollectionadd.cpp#1)]
 [!code-csharp[System.Collections.Specialized.StringCollectionAdd#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionAdd/CS/stringcollectionadd.cs#1)]
 [!code-vb[System.Collections.Specialized.StringCollectionAdd#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionAdd/VB/stringcollectionadd.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Specialized.StringCollection.AddRange(System.String[])" />
        <altmember cref="P:System.Collections.Specialized.StringCollection.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (string[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(string[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.StringCollection.AddRange(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (value As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(cli::array &lt;System::String ^&gt; ^ value);" />
      <MemberSignature Language="F#" Value="member this.AddRange : string[] -&gt; unit" Usage="stringCollection.AddRange value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="426cd-124"><see cref="T:System.Collections.Specialized.StringCollection" /> の末尾に追加する文字列配列。</span><span class="sxs-lookup"><span data-stu-id="426cd-124">An array of strings to add to the end of the <see cref="T:System.Collections.Specialized.StringCollection" />.</span></span> <span data-ttu-id="426cd-125">配列自体を <see langword="null" /> にすることはできませんが、配列に格納する要素は <see langword="null" /> であってもかまいません。</span><span class="sxs-lookup"><span data-stu-id="426cd-125">The array itself can not be <see langword="null" /> but it can contain elements that are <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="426cd-126">文字列配列の要素を <see cref="T:System.Collections.Specialized.StringCollection" /> の末尾にコピーします。</span><span class="sxs-lookup"><span data-stu-id="426cd-126">Copies the elements of a string array to the end of the <see cref="T:System.Collections.Specialized.StringCollection" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="426cd-127"><xref:System.Collections.Specialized.StringCollection> 受け入れる`null`有効な値としてでき、重複する要素。</span><span class="sxs-lookup"><span data-stu-id="426cd-127"><xref:System.Collections.Specialized.StringCollection> accepts `null` as a valid value and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="426cd-128">場合、<xref:System.Collections.Specialized.StringCollection>容量を増やすことがなく、新しい要素に対応できます、このメソッドは O (`n`) 操作、`n`追加される要素の数です。</span><span class="sxs-lookup"><span data-stu-id="426cd-128">If the <xref:System.Collections.Specialized.StringCollection> can accommodate the new elements without increasing the capacity, this method is an O(`n`) operation, where `n` is the number of elements to be added.</span></span> <span data-ttu-id="426cd-129">容量が必要に新しい要素を格納するために場合、このメソッドは、O をなります (`n` + `m`) 操作、場所`n`が追加される要素の数と`m`は<xref:System.Collections.Specialized.StringCollection.Count%2A>します。</span><span class="sxs-lookup"><span data-stu-id="426cd-129">If the capacity needs to be increased to accommodate the new elements, this method becomes an O(`n` + `m`) operation, where `n` is the number of elements to be added and `m` is <xref:System.Collections.Specialized.StringCollection.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="426cd-130">次のコード例は、新しい要素を追加、<xref:System.Collections.Specialized.StringCollection>します。</span><span class="sxs-lookup"><span data-stu-id="426cd-130">The following code example adds new elements to the <xref:System.Collections.Specialized.StringCollection>.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.StringCollectionAdd#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionAdd/CPP/stringcollectionadd.cpp#1)]
 [!code-csharp[System.Collections.Specialized.StringCollectionAdd#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionAdd/CS/stringcollectionadd.cs#1)]
 [!code-vb[System.Collections.Specialized.StringCollectionAdd#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionAdd/VB/stringcollectionadd.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="426cd-131"><paramref name="value" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="426cd-131"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Collections.Specialized.StringCollection.Add(System.String)" />
        <altmember cref="P:System.Collections.Specialized.StringCollection.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.StringCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="stringCollection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="426cd-132">すべての文字列を <see cref="T:System.Collections.Specialized.StringCollection" /> から削除します。</span><span class="sxs-lookup"><span data-stu-id="426cd-132">Removes all the strings from the <see cref="T:System.Collections.Specialized.StringCollection" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="426cd-133"><xref:System.Collections.Specialized.StringCollection.Count%2A> 0 に設定し、コレクションの要素からその他のオブジェクトへの参照も解放します。</span><span class="sxs-lookup"><span data-stu-id="426cd-133"><xref:System.Collections.Specialized.StringCollection.Count%2A> is set to zero, and references to other objects from elements of the collection are also released.</span></span>  
  
 <span data-ttu-id="426cd-134">このメソッドは O (`n`) 操作、`n`は<xref:System.Collections.Specialized.StringCollection.Count%2A>します。</span><span class="sxs-lookup"><span data-stu-id="426cd-134">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringCollection.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="426cd-135">次のコード例から要素を削除する、<xref:System.Collections.Specialized.StringCollection>します。</span><span class="sxs-lookup"><span data-stu-id="426cd-135">The following code example removes elements from the <xref:System.Collections.Specialized.StringCollection>.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.StringCollectionRemove#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionRemove/CPP/stringcollectionremove.cpp#1)]
 [!code-csharp[System.Collections.Specialized.StringCollectionRemove#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionRemove/CS/stringcollectionremove.cs#1)]
 [!code-vb[System.Collections.Specialized.StringCollectionRemove#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionRemove/VB/stringcollectionremove.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.Specialized.StringCollection.Count" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.StringCollection.Contains(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.Contains : string -&gt; bool" Usage="stringCollection.Contains value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="426cd-136"><see cref="T:System.Collections.Specialized.StringCollection" /> 内で検索する文字列。</span><span class="sxs-lookup"><span data-stu-id="426cd-136">The string to locate in the <see cref="T:System.Collections.Specialized.StringCollection" />.</span></span> <span data-ttu-id="426cd-137">値として <see langword="null" /> を指定できます。</span><span class="sxs-lookup"><span data-stu-id="426cd-137">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="426cd-138">指定した文字列が <see cref="T:System.Collections.Specialized.StringCollection" /> 内にあるかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="426cd-138">Determines whether the specified string is in the <see cref="T:System.Collections.Specialized.StringCollection" />.</span></span></summary>
        <returns><span data-ttu-id="426cd-139"><see langword="true" /> が <paramref name="value" /> に存在する場合は <see cref="T:System.Collections.Specialized.StringCollection" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="426cd-139"><see langword="true" /> if <paramref name="value" /> is found in the <see cref="T:System.Collections.Specialized.StringCollection" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="426cd-140"><xref:System.Collections.Specialized.StringCollection.Contains%2A>メソッドは、さらに操作を実行する前に、文字列の存在を確認できます。</span><span class="sxs-lookup"><span data-stu-id="426cd-140">The <xref:System.Collections.Specialized.StringCollection.Contains%2A> method can confirm the existence of a string before performing further operations.</span></span>  
  
 <span data-ttu-id="426cd-141">このメソッドを呼び出すことで等しいかどうかを判断<xref:System.Object.Equals%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="426cd-141">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="426cd-142">文字列比較では、大文字小文字が区別されます。</span><span class="sxs-lookup"><span data-stu-id="426cd-142">String comparisons are case-sensitive.</span></span>  
  
 <span data-ttu-id="426cd-143">このメソッドは、一方向の検索を実行します。そのため、このメソッドは、O (`n`) 操作、`n`は<xref:System.Collections.Specialized.StringCollection.Count%2A>します。</span><span class="sxs-lookup"><span data-stu-id="426cd-143">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringCollection.Count%2A>.</span></span>  
  
 <span data-ttu-id="426cd-144">以降、.NET Framework 2.0 では、このメソッドを使用して、コレクションのオブジェクトの<xref:System.Object.Equals%2A>と<xref:System.IComparable.CompareTo%2A>メソッド`item`項目が存在するかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="426cd-144">Starting with the .NET Framework 2.0, this method uses the collection's objects' <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="426cd-145">以前のバージョンの .NET Framework では、この判断を使用して行われた、<xref:System.Object.Equals%2A>と<xref:System.IComparable.CompareTo%2A>のメソッド、`item`パラメーター コレクション内のオブジェクトにします。</span><span class="sxs-lookup"><span data-stu-id="426cd-145">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="426cd-146">次のコードの例で、<xref:System.Collections.Specialized.StringCollection>要素。</span><span class="sxs-lookup"><span data-stu-id="426cd-146">The following code example searches the <xref:System.Collections.Specialized.StringCollection> for an element.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.StringCollectionContains#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionContains/CPP/stringcollectioncontains.cpp#1)]
 [!code-csharp[System.Collections.Specialized.StringCollectionContains#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionContains/CS/stringcollectioncontains.cs#1)]
 [!code-vb[System.Collections.Specialized.StringCollectionContains#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionContains/VB/stringcollectioncontains.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Specialized.StringCollection.IndexOf(System.String)" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations.md"><span data-ttu-id="426cd-147">カルチャを認識しない文字列操作の実行</span><span class="sxs-lookup"><span data-stu-id="426cd-147">Performing Culture-Insensitive String Operations</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (string[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(string[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.StringCollection.CopyTo(System.String[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As String(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::String ^&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : string[] * int -&gt; unit" Usage="stringCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.String[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="426cd-148"><see cref="T:System.Collections.Specialized.StringCollection" /> から要素がコピーされる 1 次元の文字列配列。</span><span class="sxs-lookup"><span data-stu-id="426cd-148">The one-dimensional array of strings that is the destination of the elements copied from <see cref="T:System.Collections.Specialized.StringCollection" />.</span></span> <span data-ttu-id="426cd-149"><see cref="T:System.Array" /> には、0 から始まるインデックス番号が必要です。</span><span class="sxs-lookup"><span data-stu-id="426cd-149">The <see cref="T:System.Array" /> must have zero-based indexing.</span></span></param>
        <param name="index"><span data-ttu-id="426cd-150">コピーの開始位置とする <paramref name="array" /> のインデックス (0 から始まる)。</span><span class="sxs-lookup"><span data-stu-id="426cd-150">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="426cd-151">1 次元の文字列配列に、その配列内の指定したインデックスを開始位置として <see cref="T:System.Collections.Specialized.StringCollection" /> 値全体をコピーします。</span><span class="sxs-lookup"><span data-stu-id="426cd-151">Copies the entire <see cref="T:System.Collections.Specialized.StringCollection" /> values to a one-dimensional array of strings, starting at the specified index of the target array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="426cd-152">指定した配列は、互換性のある型でなければなりません。</span><span class="sxs-lookup"><span data-stu-id="426cd-152">The specified array must be of a compatible type.</span></span>  
  
 <span data-ttu-id="426cd-153">要素のコピー先は、<xref:System.Array>を同じ順序での列挙子、<xref:System.Collections.Specialized.StringCollection>を反復処理、<xref:System.Collections.Specialized.StringCollection>します。</span><span class="sxs-lookup"><span data-stu-id="426cd-153">The elements are copied to the <xref:System.Array> in the same order in which the enumerator of the <xref:System.Collections.Specialized.StringCollection> iterates through the <xref:System.Collections.Specialized.StringCollection>.</span></span>  
  
 <span data-ttu-id="426cd-154">このメソッドは O (`n`) 操作、`n`は<xref:System.Collections.Specialized.StringCollection.Count%2A>します。</span><span class="sxs-lookup"><span data-stu-id="426cd-154">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringCollection.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="426cd-155">次のコード例のコピーを<xref:System.Collections.Specialized.StringCollection>を配列にします。</span><span class="sxs-lookup"><span data-stu-id="426cd-155">The following code example copies a <xref:System.Collections.Specialized.StringCollection> to an array.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.StringCollectionCopyTo#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionCopyTo/CPP/stringcollectioncopyto.cpp#1)]
 [!code-csharp[System.Collections.Specialized.StringCollectionCopyTo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionCopyTo/CS/stringcollectioncopyto.cs#1)]
 [!code-vb[System.Collections.Specialized.StringCollectionCopyTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionCopyTo/VB/stringcollectioncopyto.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="426cd-156"><paramref name="array" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="426cd-156"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="426cd-157"><paramref name="index" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="426cd-157"><paramref name="index" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="426cd-158"><paramref name="array" /> が多次元です。</span><span class="sxs-lookup"><span data-stu-id="426cd-158"><paramref name="array" /> is multidimensional.</span></span>  
  
<span data-ttu-id="426cd-159">- または -</span><span class="sxs-lookup"><span data-stu-id="426cd-159">-or-</span></span> 
<span data-ttu-id="426cd-160">コピー元の <see cref="T:System.Collections.Specialized.StringCollection" /> の要素数が、コピー先 <paramref name="array" /> の <paramref name="index" /> から最後までの使用可能領域を超えています。</span><span class="sxs-lookup"><span data-stu-id="426cd-160">The number of elements in the source <see cref="T:System.Collections.Specialized.StringCollection" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="426cd-161">コピー元の <see cref="T:System.Collections.Specialized.StringCollection" /> の型をコピー先の <paramref name="array" /> の型に自動的にキャストすることはできません。</span><span class="sxs-lookup"><span data-stu-id="426cd-161">The type of the source <see cref="T:System.Collections.Specialized.StringCollection" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span></span></exception>
        <altmember cref="T:System.Array" />
        <altmember cref="M:System.Collections.Specialized.StringCollection.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Specialized.StringCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Collections.Specialized.StringCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="426cd-162"><see cref="T:System.Collections.Specialized.StringCollection" /> に格納されている文字列の数を取得します。</span><span class="sxs-lookup"><span data-stu-id="426cd-162">Gets the number of strings contained in the <see cref="T:System.Collections.Specialized.StringCollection" />.</span></span></summary>
        <value><span data-ttu-id="426cd-163"><see cref="T:System.Collections.Specialized.StringCollection" /> に格納されている文字列の数。</span><span class="sxs-lookup"><span data-stu-id="426cd-163">The number of strings contained in the <see cref="T:System.Collections.Specialized.StringCollection" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="426cd-164">このプロパティ値を取得することは、O(1) 操作になります。</span><span class="sxs-lookup"><span data-stu-id="426cd-164">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="426cd-165">次のコード例のコピーを<xref:System.Collections.Specialized.StringCollection>を配列にします。</span><span class="sxs-lookup"><span data-stu-id="426cd-165">The following code example copies a <xref:System.Collections.Specialized.StringCollection> to an array.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.StringCollectionCopyTo#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionCopyTo/CPP/stringcollectioncopyto.cpp#1)]
 [!code-csharp[System.Collections.Specialized.StringCollectionCopyTo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionCopyTo/CS/stringcollectioncopyto.cs#1)]
 [!code-vb[System.Collections.Specialized.StringCollectionCopyTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionCopyTo/VB/stringcollectioncopyto.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.StringEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Specialized.StringEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.StringCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As StringEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Specialized::StringEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; System.Collections.Specialized.StringEnumerator" Usage="stringCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="426cd-166"><see cref="T:System.Collections.Specialized.StringEnumerator" /> を反復処理する <see cref="T:System.Collections.Specialized.StringCollection" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="426cd-166">Returns a <see cref="T:System.Collections.Specialized.StringEnumerator" /> that iterates through the <see cref="T:System.Collections.Specialized.StringCollection" />.</span></span></summary>
        <returns><span data-ttu-id="426cd-167"><see cref="T:System.Collections.Specialized.StringEnumerator" /> の <see cref="T:System.Collections.Specialized.StringCollection" />。</span><span class="sxs-lookup"><span data-stu-id="426cd-167">A <see cref="T:System.Collections.Specialized.StringEnumerator" /> for the <see cref="T:System.Collections.Specialized.StringCollection" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="426cd-168">[Visual Basic、 C#]</span><span class="sxs-lookup"><span data-stu-id="426cd-168">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="426cd-169">C# 言語の `foreach` ステートメント (Visual Basic の場合は `for each`) を使用することで列挙子の複雑さを回避できます。</span><span class="sxs-lookup"><span data-stu-id="426cd-169">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="426cd-170">したがって、列挙子を直接操作するのではなく、`foreach` を使用することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="426cd-170">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="426cd-171">列挙子を使用すると、コレクション内のデータを読み取ることができますが、基になるコレクションを変更することはできません。</span><span class="sxs-lookup"><span data-stu-id="426cd-171">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="426cd-172">最初に、列挙子はコレクション内の 1 番目の要素の前に位置付けられます。</span><span class="sxs-lookup"><span data-stu-id="426cd-172">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="426cd-173"><xref:System.Collections.Specialized.StringEnumerator.Reset%2A> を実行した場合も、列挙子はこの位置に戻されます。</span><span class="sxs-lookup"><span data-stu-id="426cd-173"><xref:System.Collections.Specialized.StringEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="426cd-174">この位置では、<xref:System.Collections.Specialized.StringEnumerator.Current%2A> が未定義です。</span><span class="sxs-lookup"><span data-stu-id="426cd-174">At this position, <xref:System.Collections.Specialized.StringEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="426cd-175">そのため、<xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> の値を読み取る前に、<xref:System.Collections.Specialized.StringEnumerator.Current%2A> を呼び出して列挙子をコレクションの最初の要素に進める必要があります。</span><span class="sxs-lookup"><span data-stu-id="426cd-175">Therefore, you must call <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Specialized.StringEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="426cd-176"><xref:System.Collections.Specialized.StringEnumerator.Current%2A> は、<xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> または <xref:System.Collections.Specialized.StringEnumerator.Reset%2A> が呼び出されるまでは同じオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="426cd-176"><xref:System.Collections.Specialized.StringEnumerator.Current%2A> returns the same object until either <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> or <xref:System.Collections.Specialized.StringEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="426cd-177"><xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> は、<xref:System.Collections.Specialized.StringEnumerator.Current%2A> を次の要素に設定します。</span><span class="sxs-lookup"><span data-stu-id="426cd-177"><xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> sets <xref:System.Collections.Specialized.StringEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="426cd-178">場合<xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>列挙子、コレクションの末尾がコレクション内の最後の要素の後に配置されているパスと<xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>返します`false`します。</span><span class="sxs-lookup"><span data-stu-id="426cd-178">If <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="426cd-179">この位置では、後続の呼び出しで列挙子の場合<xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>を返すことも`false`します。</span><span class="sxs-lookup"><span data-stu-id="426cd-179">When the enumerator is at this position, subsequent calls to <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="426cd-180">最後の呼び出し場合<xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>返される`false`、<xref:System.Collections.Specialized.StringEnumerator.Current%2A>が定義されていません。</span><span class="sxs-lookup"><span data-stu-id="426cd-180">If the last call to <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.Specialized.StringEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="426cd-181"><xref:System.Collections.Specialized.StringEnumerator.Current%2A> をコレクションの最初の要素にもう一度設定するには、<xref:System.Collections.Specialized.StringEnumerator.Reset%2A> を呼び出してから <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="426cd-181">To set <xref:System.Collections.Specialized.StringEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.Specialized.StringEnumerator.Reset%2A> followed by <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="426cd-182">コレクションが変更されない限り、列挙子は有効です。</span><span class="sxs-lookup"><span data-stu-id="426cd-182">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="426cd-183">コレクションに対して変更 (要素の追加、変更、削除など) が行われると、列挙子は回復不可能な無効状態になり、その動作は未定義になります。</span><span class="sxs-lookup"><span data-stu-id="426cd-183">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="426cd-184">列挙子には、コレクションへの排他アクセスがありません。したがって、コレクションの列挙処理は本質的にスレッド セーフな処理ではありません。</span><span class="sxs-lookup"><span data-stu-id="426cd-184">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread safe procedure.</span></span>  <span data-ttu-id="426cd-185">列挙処理でスレッド セーフを確保するには、列挙処理が終わるまでコレクションをロックできます。</span><span class="sxs-lookup"><span data-stu-id="426cd-185">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="426cd-186">コレクションに対し複数のスレッドがアクセスして読み取りや書き込みを行うことができるようにするには、独自に同期化を実装する必要があります。</span><span class="sxs-lookup"><span data-stu-id="426cd-186">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="426cd-187">このメソッドは、o (1) 操作です。</span><span class="sxs-lookup"><span data-stu-id="426cd-187">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Specialized.StringEnumerator" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.StringCollection.IndexOf(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : string -&gt; int" Usage="stringCollection.IndexOf value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="426cd-188">検索される文字列。</span><span class="sxs-lookup"><span data-stu-id="426cd-188">The string to locate.</span></span> <span data-ttu-id="426cd-189">値として <see langword="null" /> を指定できます。</span><span class="sxs-lookup"><span data-stu-id="426cd-189">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="426cd-190">指定した文字列を検索し、<see cref="T:System.Collections.Specialized.StringCollection" /> 内でその文字列が最初に見つかった位置の 0 から始まるインデックスを返します。</span><span class="sxs-lookup"><span data-stu-id="426cd-190">Searches for the specified string and returns the zero-based index of the first occurrence within the <see cref="T:System.Collections.Specialized.StringCollection" />.</span></span></summary>
        <returns><span data-ttu-id="426cd-191"><see cref="T:System.Collections.Specialized.StringCollection" /> 内で <paramref name="value" /> が見つかった場合は、最初に見つかった位置の 0 から始まるインデックス。それ以外の場合は -1。</span><span class="sxs-lookup"><span data-stu-id="426cd-191">The zero-based index of the first occurrence of <paramref name="value" /> in the <see cref="T:System.Collections.Specialized.StringCollection" />, if found; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="426cd-192">このメソッドを呼び出すことで等しいかどうかを判断<xref:System.Object.Equals%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="426cd-192">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="426cd-193">文字列比較では、大文字小文字が区別されます。</span><span class="sxs-lookup"><span data-stu-id="426cd-193">String comparisons are case-sensitive.</span></span>  
  
 <span data-ttu-id="426cd-194">このメソッドは、一方向の検索を実行します。そのため、このメソッドは、O (`n`) 操作、`n`は<xref:System.Collections.Specialized.StringCollection.Count%2A>します。</span><span class="sxs-lookup"><span data-stu-id="426cd-194">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringCollection.Count%2A>.</span></span>  
  
 <span data-ttu-id="426cd-195">以降、.NET Framework 2.0 では、このメソッドを使用して、コレクションのオブジェクトの<xref:System.Object.Equals%2A>と<xref:System.IComparable.CompareTo%2A>メソッド`item`項目が存在するかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="426cd-195">Starting with the .NET Framework 2.0, this method uses the collection's objects' <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="426cd-196">以前のバージョンの .NET Framework では、この判断を使用して行われた、<xref:System.Object.Equals%2A>と<xref:System.IComparable.CompareTo%2A>のメソッド、`item`パラメーター コレクション内のオブジェクトにします。</span><span class="sxs-lookup"><span data-stu-id="426cd-196">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="426cd-197">次のコードの例で、<xref:System.Collections.Specialized.StringCollection>要素。</span><span class="sxs-lookup"><span data-stu-id="426cd-197">The following code example searches the <xref:System.Collections.Specialized.StringCollection> for an element.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.StringCollectionContains#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionContains/CPP/stringcollectioncontains.cpp#1)]
 [!code-csharp[System.Collections.Specialized.StringCollectionContains#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionContains/CS/stringcollectioncontains.cs#1)]
 [!code-vb[System.Collections.Specialized.StringCollectionContains#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionContains/VB/stringcollectioncontains.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Specialized.StringCollection.Contains(System.String)" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations.md"><span data-ttu-id="426cd-198">カルチャを認識しない文字列操作の実行</span><span class="sxs-lookup"><span data-stu-id="426cd-198">Performing Culture-Insensitive String Operations</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.StringCollection.Insert(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * string -&gt; unit" Usage="stringCollection.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="426cd-199"><paramref name="value" /> を挿入する位置の 0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="426cd-199">The zero-based index at which <paramref name="value" /> is inserted.</span></span></param>
        <param name="value"><span data-ttu-id="426cd-200">挿入する文字列。</span><span class="sxs-lookup"><span data-stu-id="426cd-200">The string to insert.</span></span> <span data-ttu-id="426cd-201">値として <see langword="null" /> を指定できます。</span><span class="sxs-lookup"><span data-stu-id="426cd-201">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="426cd-202"><see cref="T:System.Collections.Specialized.StringCollection" /> 内の指定したインデックス位置に、文字列を挿入します。</span><span class="sxs-lookup"><span data-stu-id="426cd-202">Inserts a string into the <see cref="T:System.Collections.Specialized.StringCollection" /> at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="426cd-203">重複する文字列は許可<xref:System.Collections.Specialized.StringCollection>します。</span><span class="sxs-lookup"><span data-stu-id="426cd-203">Duplicate strings are allowed in <xref:System.Collections.Specialized.StringCollection>.</span></span>  
  
 <span data-ttu-id="426cd-204">場合`index`と等しい<xref:System.Collections.Specialized.StringCollection.Count%2A>、`value`の末尾に追加されます<xref:System.Collections.Specialized.StringCollection>します。</span><span class="sxs-lookup"><span data-stu-id="426cd-204">If `index` is equal to <xref:System.Collections.Specialized.StringCollection.Count%2A>, `value` is added to the end of <xref:System.Collections.Specialized.StringCollection>.</span></span>  
  
 <span data-ttu-id="426cd-205">リストなどの連続する要素のコレクションでは、新しい要素を挿入するために、挿入位置より後にある要素の位置が繰り下げられます。</span><span class="sxs-lookup"><span data-stu-id="426cd-205">In collections of contiguous elements, such as lists, the elements that follow the insertion point move down to accommodate the new element.</span></span> <span data-ttu-id="426cd-206">コレクションにインデックスがある場合、移動した要素のインデックスも更新されます。</span><span class="sxs-lookup"><span data-stu-id="426cd-206">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="426cd-207">この動作は、要素が概念的にバケットにグループ化されているハッシュ テーブルなどのコレクションには適用されません。</span><span class="sxs-lookup"><span data-stu-id="426cd-207">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 <span data-ttu-id="426cd-208">このメソッドは O (`n`) 操作、`n`は<xref:System.Collections.Specialized.StringCollection.Count%2A>します。</span><span class="sxs-lookup"><span data-stu-id="426cd-208">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringCollection.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="426cd-209">次のコード例は、新しい要素を追加、<xref:System.Collections.Specialized.StringCollection>します。</span><span class="sxs-lookup"><span data-stu-id="426cd-209">The following code example adds new elements to the <xref:System.Collections.Specialized.StringCollection>.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.StringCollectionAdd#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionAdd/CPP/stringcollectionadd.cpp#1)]
 [!code-csharp[System.Collections.Specialized.StringCollectionAdd#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionAdd/CS/stringcollectionadd.cs#1)]
 [!code-vb[System.Collections.Specialized.StringCollectionAdd#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionAdd/VB/stringcollectionadd.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="426cd-210"><paramref name="index" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="426cd-210"><paramref name="index" /> is less than zero.</span></span>  
  
<span data-ttu-id="426cd-211">- または -</span><span class="sxs-lookup"><span data-stu-id="426cd-211">-or-</span></span> 
 <span data-ttu-id="426cd-212"><paramref name="index" /> が <see cref="P:System.Collections.Specialized.StringCollection.Count" /> より大きい。</span><span class="sxs-lookup"><span data-stu-id="426cd-212"><paramref name="index" /> greater than <see cref="P:System.Collections.Specialized.StringCollection.Count" />.</span></span></exception>
        <altmember cref="P:System.Collections.Specialized.StringCollection.Count" />
        <altmember cref="M:System.Collections.Specialized.StringCollection.Add(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Specialized.StringCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Collections.Specialized.StringCollection.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="426cd-213"><see cref="T:System.Collections.Specialized.StringCollection" /> が読み取り専用かどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="426cd-213">Gets a value indicating whether the <see cref="T:System.Collections.Specialized.StringCollection" /> is read-only.</span></span></summary>
        <value><span data-ttu-id="426cd-214">このプロパティは常に <see langword="false" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="426cd-214">This property always returns <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="426cd-215"><xref:System.Collections.Specialized.StringCollection> 実装して、<xref:System.Collections.Specialized.StringCollection.IsReadOnly%2A>プロパティが必要としているため、<xref:System.Collections.IList?displayProperty=nameWithType>インターフェイス。</span><span class="sxs-lookup"><span data-stu-id="426cd-215"><xref:System.Collections.Specialized.StringCollection> implements the <xref:System.Collections.Specialized.StringCollection.IsReadOnly%2A> property because it is required by the <xref:System.Collections.IList?displayProperty=nameWithType> interface.</span></span>  
  
 <span data-ttu-id="426cd-216">読み取り専用のコレクションでは、コレクション作成後に要素の追加、削除、または変更はできません。</span><span class="sxs-lookup"><span data-stu-id="426cd-216">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 <span data-ttu-id="426cd-217">読み取り専用のコレクション、コレクションの変更を防止するラッパー コレクションそのため、基になるコレクションの変更が加えられた、読み取り専用コレクションはそれらの変更を反映します。</span><span class="sxs-lookup"><span data-stu-id="426cd-217">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="426cd-218">A<xref:System.Collections.Specialized.StringCollection>インスタンスは書き込み可能な常にします。</span><span class="sxs-lookup"><span data-stu-id="426cd-218">A <xref:System.Collections.Specialized.StringCollection> instance is always writable.</span></span>  
  
 <span data-ttu-id="426cd-219">このプロパティ値を取得することは、O(1) 操作になります。</span><span class="sxs-lookup"><span data-stu-id="426cd-219">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Specialized.StringCollection.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Collections.Specialized.StringCollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="426cd-220"><see cref="T:System.Collections.Specialized.StringCollection" /> へのアクセスが同期されている (スレッド セーフである) かどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="426cd-220">Gets a value indicating whether access to the <see cref="T:System.Collections.Specialized.StringCollection" /> is synchronized (thread safe).</span></span></summary>
        <value><span data-ttu-id="426cd-221">このプロパティは常に <see langword="false" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="426cd-221">This property always returns <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="426cd-222"><xref:System.Collections.Specialized.StringCollection> 実装して、<xref:System.Collections.Specialized.StringCollection.IsSynchronized%2A>プロパティが必要としているため、<xref:System.Collections.ICollection>インターフェイス。</span><span class="sxs-lookup"><span data-stu-id="426cd-222"><xref:System.Collections.Specialized.StringCollection> implements the <xref:System.Collections.Specialized.StringCollection.IsSynchronized%2A> property because it is required by the <xref:System.Collections.ICollection> interface.</span></span>  
  
 <span data-ttu-id="426cd-223">コレクションの列挙は、スレッド セーフな方法では本質的にします。</span><span class="sxs-lookup"><span data-stu-id="426cd-223">Enumerating through a collection is intrinsically not a thread safe procedure.</span></span> <span data-ttu-id="426cd-224">コレクションの同期がとられている場合でも、別のスレッドによってそのコレクションを変更できるため、変更の結果として列挙子は例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="426cd-224">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="426cd-225">列挙処理を確実にスレッド セーフに行うには、列挙中にコレクションをロックするか、他のスレッドによって行われた変更によってスローされる例外をキャッチします。</span><span class="sxs-lookup"><span data-stu-id="426cd-225">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="426cd-226">次のコード例を使用してコレクションをロックする方法を示しています、<xref:System.Collections.Specialized.StringCollection.SyncRoot%2A>列挙中に。</span><span class="sxs-lookup"><span data-stu-id="426cd-226">The following code example shows how to lock the collection using the <xref:System.Collections.Specialized.StringCollection.SyncRoot%2A> during the entire enumeration:</span></span>  
  
 [!code-cpp[System.Collections.Specialized.StringCollection2#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollection2/CPP/remarks.cpp#2)]
 [!code-csharp[System.Collections.Specialized.StringCollection2#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollection2/CS/remarks.cs#2)]
 [!code-vb[System.Collections.Specialized.StringCollection2#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollection2/VB/remarks.vb#2)]  
  
 <span data-ttu-id="426cd-227">このプロパティ値を取得することは、O(1) 操作になります。</span><span class="sxs-lookup"><span data-stu-id="426cd-227">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.Specialized.StringCollection.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public string this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Specialized.StringCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ default[int] { System::String ^ get(int index); void set(int index, System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : string with get, set" Usage="System.Collections.Specialized.StringCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="426cd-228">取得または設定するエントリの 0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="426cd-228">The zero-based index of the entry to get or set.</span></span></param>
        <summary><span data-ttu-id="426cd-229">指定したインデックスにある要素を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="426cd-229">Gets or sets the element at the specified index.</span></span></summary>
        <value><span data-ttu-id="426cd-230">指定したインデックス位置にある要素。</span><span class="sxs-lookup"><span data-stu-id="426cd-230">The element at the specified index.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="426cd-231">このプロパティでは、`myCollection[index]` という構文を使用して、コレクション内の特定の要素にアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="426cd-231">This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[index]`.</span></span>  
  
 <span data-ttu-id="426cd-232"><xref:System.Collections.Specialized.StringCollection> 受け入れる`null`有効な値としてでき、重複する要素。</span><span class="sxs-lookup"><span data-stu-id="426cd-232"><xref:System.Collections.Specialized.StringCollection> accepts `null` as a valid value and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="426cd-233">C# 言語キーワードを使用して実装する代わりに、インデクサーの定義、<xref:System.Collections.Specialized.StringCollection.Item%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="426cd-233">The C# language uses the  keyword to define the indexers instead of implementing the <xref:System.Collections.Specialized.StringCollection.Item%2A> property.</span></span> <span data-ttu-id="426cd-234">Visual Basic は、<xref:System.Collections.Specialized.StringCollection.Item%2A> を既定のプロパティとして実装しており、同様のインデックス機能を提供します。</span><span class="sxs-lookup"><span data-stu-id="426cd-234">Visual Basic implements <xref:System.Collections.Specialized.StringCollection.Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 <span data-ttu-id="426cd-235">このプロパティの値を取得する場合は、o (1) 操作です。プロパティの設定は、o (1) 操作ではもします。</span><span class="sxs-lookup"><span data-stu-id="426cd-235">Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="426cd-236"><paramref name="index" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="426cd-236"><paramref name="index" /> is less than zero.</span></span>  
  
<span data-ttu-id="426cd-237">- または -</span><span class="sxs-lookup"><span data-stu-id="426cd-237">-or-</span></span> 
 <span data-ttu-id="426cd-238"><paramref name="index" /> が <see cref="P:System.Collections.Specialized.StringCollection.Count" /> 以上になっています。</span><span class="sxs-lookup"><span data-stu-id="426cd-238"><paramref name="index" /> is equal to or greater than <see cref="P:System.Collections.Specialized.StringCollection.Count" />.</span></span></exception>
        <altmember cref="P:System.Collections.Specialized.StringCollection.Count" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.StringCollection.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.Remove : string -&gt; unit" Usage="stringCollection.Remove value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="426cd-239"><see cref="T:System.Collections.Specialized.StringCollection" /> から削除する文字列。</span><span class="sxs-lookup"><span data-stu-id="426cd-239">The string to remove from the <see cref="T:System.Collections.Specialized.StringCollection" />.</span></span> <span data-ttu-id="426cd-240">値として <see langword="null" /> を指定できます。</span><span class="sxs-lookup"><span data-stu-id="426cd-240">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="426cd-241"><see cref="T:System.Collections.Specialized.StringCollection" /> 内で最初に見つかった指定文字列を削除します。</span><span class="sxs-lookup"><span data-stu-id="426cd-241">Removes the first occurrence of a specific string from the <see cref="T:System.Collections.Specialized.StringCollection" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="426cd-242">重複する文字列は許可<xref:System.Collections.Specialized.StringCollection>します。</span><span class="sxs-lookup"><span data-stu-id="426cd-242">Duplicate strings are allowed in <xref:System.Collections.Specialized.StringCollection>.</span></span> <span data-ttu-id="426cd-243">最初に見つかったのみが削除されます。</span><span class="sxs-lookup"><span data-stu-id="426cd-243">Only the first occurrence is removed.</span></span> <span data-ttu-id="426cd-244">指定した文字列のすべての出現箇所を削除する使用`RemoveAt(IndexOf(value))`中に繰り返し<xref:System.Collections.Specialized.StringCollection.IndexOf%2A>-1 が返されません。</span><span class="sxs-lookup"><span data-stu-id="426cd-244">To remove all occurrences of the specified string, use `RemoveAt(IndexOf(value))` repeatedly while <xref:System.Collections.Specialized.StringCollection.IndexOf%2A> does not return -1.</span></span>  
  
 <span data-ttu-id="426cd-245">場合、<xref:System.Collections.Specialized.StringCollection>に指定したオブジェクトが含まれていない、<xref:System.Collections.Specialized.StringCollection>は変更されません。</span><span class="sxs-lookup"><span data-stu-id="426cd-245">If the <xref:System.Collections.Specialized.StringCollection> does not contain the specified object, the <xref:System.Collections.Specialized.StringCollection> remains unchanged.</span></span> <span data-ttu-id="426cd-246">例外をスローすることはありません。</span><span class="sxs-lookup"><span data-stu-id="426cd-246">No exception is thrown.</span></span>  
  
 <span data-ttu-id="426cd-247">リストなどの連続する要素のコレクションでは、空白になった位置を埋めるために、削除された要素の後にある要素の位置が繰り上げられます。</span><span class="sxs-lookup"><span data-stu-id="426cd-247">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="426cd-248">コレクションにインデックスがある場合、移動した要素のインデックスも更新されます。</span><span class="sxs-lookup"><span data-stu-id="426cd-248">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="426cd-249">この動作は、要素が概念的にバケットにグループ化されているハッシュ テーブルなどのコレクションには適用されません。</span><span class="sxs-lookup"><span data-stu-id="426cd-249">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 <span data-ttu-id="426cd-250">このメソッドを呼び出すことで等しいかどうかを判断<xref:System.Object.Equals%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="426cd-250">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="426cd-251">文字列比較では、大文字小文字が区別されます。</span><span class="sxs-lookup"><span data-stu-id="426cd-251">String comparisons are case-sensitive.</span></span>  
  
 <span data-ttu-id="426cd-252">このメソッドは、一方向の検索を実行します。そのため、このメソッドは、O (`n`) 操作、`n`は<xref:System.Collections.Specialized.StringCollection.Count%2A>します。</span><span class="sxs-lookup"><span data-stu-id="426cd-252">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringCollection.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="426cd-253">次のコード例から要素を削除する、<xref:System.Collections.Specialized.StringCollection>します。</span><span class="sxs-lookup"><span data-stu-id="426cd-253">The following code example removes elements from the <xref:System.Collections.Specialized.StringCollection>.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.StringCollectionRemove#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionRemove/CPP/stringcollectionremove.cpp#1)]
 [!code-csharp[System.Collections.Specialized.StringCollectionRemove#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionRemove/CS/stringcollectionremove.cs#1)]
 [!code-vb[System.Collections.Specialized.StringCollectionRemove#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionRemove/VB/stringcollectionremove.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations.md"><span data-ttu-id="426cd-254">カルチャを認識しない文字列操作の実行</span><span class="sxs-lookup"><span data-stu-id="426cd-254">Performing Culture-Insensitive String Operations</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.StringCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="stringCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="426cd-255">削除する文字列の 0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="426cd-255">The zero-based index of the string to remove.</span></span></param>
        <summary><span data-ttu-id="426cd-256"><see cref="T:System.Collections.Specialized.StringCollection" /> 内の指定したインデックスにある文字列を削除します。</span><span class="sxs-lookup"><span data-stu-id="426cd-256">Removes the string at the specified index of the <see cref="T:System.Collections.Specialized.StringCollection" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="426cd-257">リストなどの連続する要素のコレクションでは、空白になった位置を埋めるために、削除された要素の後にある要素の位置が繰り上げられます。</span><span class="sxs-lookup"><span data-stu-id="426cd-257">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="426cd-258">コレクションにインデックスがある場合、移動した要素のインデックスも更新されます。</span><span class="sxs-lookup"><span data-stu-id="426cd-258">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="426cd-259">この動作は、要素が概念的にバケットにグループ化されているハッシュ テーブルなどのコレクションには適用されません。</span><span class="sxs-lookup"><span data-stu-id="426cd-259">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 <span data-ttu-id="426cd-260">このメソッドは O (`n`) 操作、`n`は<xref:System.Collections.Specialized.StringCollection.Count%2A>します。</span><span class="sxs-lookup"><span data-stu-id="426cd-260">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringCollection.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="426cd-261">次のコード例から要素を削除する、<xref:System.Collections.Specialized.StringCollection>します。</span><span class="sxs-lookup"><span data-stu-id="426cd-261">The following code example removes elements from the <xref:System.Collections.Specialized.StringCollection>.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.StringCollectionRemove#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionRemove/CPP/stringcollectionremove.cpp#1)]
 [!code-csharp[System.Collections.Specialized.StringCollectionRemove#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionRemove/CS/stringcollectionremove.cs#1)]
 [!code-vb[System.Collections.Specialized.StringCollectionRemove#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionRemove/VB/stringcollectionremove.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="426cd-262"><paramref name="index" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="426cd-262"><paramref name="index" /> is less than zero.</span></span>  
  
<span data-ttu-id="426cd-263">- または -</span><span class="sxs-lookup"><span data-stu-id="426cd-263">-or-</span></span> 
 <span data-ttu-id="426cd-264"><paramref name="index" /> が <see cref="P:System.Collections.Specialized.StringCollection.Count" /> 以上になっています。</span><span class="sxs-lookup"><span data-stu-id="426cd-264"><paramref name="index" /> is equal to or greater than <see cref="P:System.Collections.Specialized.StringCollection.Count" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Specialized.StringCollection.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Collections.Specialized.StringCollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="426cd-265"><see cref="T:System.Collections.Specialized.StringCollection" /> へのアクセスを同期するために使用できるオブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="426cd-265">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.Specialized.StringCollection" />.</span></span></summary>
        <value><span data-ttu-id="426cd-266"><see cref="T:System.Collections.Specialized.StringCollection" /> へのアクセスを同期するために使用できるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="426cd-266">An object that can be used to synchronize access to the <see cref="T:System.Collections.Specialized.StringCollection" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="426cd-267">派生クラスの独自の同期バージョンを提供できます、<xref:System.Collections.Specialized.StringCollection>を使用して、<xref:System.Collections.Specialized.StringCollection.SyncRoot%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="426cd-267">Derived classes can provide their own synchronized version of the <xref:System.Collections.Specialized.StringCollection> using the <xref:System.Collections.Specialized.StringCollection.SyncRoot%2A> property.</span></span> <span data-ttu-id="426cd-268">同期されたコードで操作を実行する必要があります、<xref:System.Collections.Specialized.StringCollection.SyncRoot%2A>の<xref:System.Collections.Specialized.StringCollection>、上で直接、<xref:System.Collections.Specialized.StringCollection>します。</span><span class="sxs-lookup"><span data-stu-id="426cd-268">The synchronizing code must perform operations on the <xref:System.Collections.Specialized.StringCollection.SyncRoot%2A> of the <xref:System.Collections.Specialized.StringCollection>, not directly on the <xref:System.Collections.Specialized.StringCollection>.</span></span> <span data-ttu-id="426cd-269">これにより、他のオブジェクトから派生したコレクションを適切に操作できるようになります。</span><span class="sxs-lookup"><span data-stu-id="426cd-269">This ensures proper operation of collections that are derived from other objects.</span></span> <span data-ttu-id="426cd-270">具体的には、同時に変更する可能性があるその他のスレッドと適切な同期を維持、<xref:System.Collections.Specialized.StringCollection>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="426cd-270">Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <xref:System.Collections.Specialized.StringCollection> object.</span></span>  
  
 <span data-ttu-id="426cd-271">コレクションの列挙は、スレッド セーフな方法では本質的にします。</span><span class="sxs-lookup"><span data-stu-id="426cd-271">Enumerating through a collection is intrinsically not a thread safe procedure.</span></span> <span data-ttu-id="426cd-272">コレクションの同期がとられている場合でも、別のスレッドによってそのコレクションを変更できるため、変更の結果として列挙子は例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="426cd-272">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="426cd-273">列挙処理を確実にスレッド セーフに行うには、列挙中にコレクションをロックするか、他のスレッドによって行われた変更によってスローされる例外をキャッチします。</span><span class="sxs-lookup"><span data-stu-id="426cd-273">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="426cd-274">次のコード例を使用してコレクションをロックする方法を示しています、<xref:System.Collections.Specialized.StringCollection.SyncRoot%2A>列挙中に。</span><span class="sxs-lookup"><span data-stu-id="426cd-274">The following code example shows how to lock the collection using the <xref:System.Collections.Specialized.StringCollection.SyncRoot%2A> during the entire enumeration:</span></span>  
  
 [!code-cpp[System.Collections.Specialized.StringCollection2#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollection2/CPP/remarks.cpp#2)]
 [!code-csharp[System.Collections.Specialized.StringCollection2#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollection2/CS/remarks.cs#2)]
 [!code-vb[System.Collections.Specialized.StringCollection2#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollection2/VB/remarks.vb#2)]  
  
 <span data-ttu-id="426cd-275">このプロパティ値を取得することは、O(1) 操作になります。</span><span class="sxs-lookup"><span data-stu-id="426cd-275">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.Specialized.StringCollection.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.StringCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="426cd-276"><see cref="T:System.Array" /> から要素がコピーされる 1 次元の <see cref="T:System.Collections.Specialized.StringCollection" />。</span><span class="sxs-lookup"><span data-stu-id="426cd-276">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.Specialized.StringCollection" />.</span></span> <span data-ttu-id="426cd-277"><see cref="T:System.Array" /> には、0 から始まるインデックス番号が必要です。</span><span class="sxs-lookup"><span data-stu-id="426cd-277">The <see cref="T:System.Array" /> must have zero-based indexing.</span></span></param>
        <param name="index"><span data-ttu-id="426cd-278">コピーの開始位置とする <paramref name="array" /> のインデックス (0 から始まる)。</span><span class="sxs-lookup"><span data-stu-id="426cd-278">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="426cd-279"><see cref="T:System.Collections.Specialized.StringCollection" /> 全体を、互換性のある 1 次元の <see cref="T:System.Array" /> にコピーします。コピー操作は、コピー先の配列の指定したインデックスから始まる部分に行います。</span><span class="sxs-lookup"><span data-stu-id="426cd-279">Copies the entire <see cref="T:System.Collections.Specialized.StringCollection" /> to a compatible one-dimensional <see cref="T:System.Array" />, starting at the specified index of the target array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="426cd-280">指定した配列は、互換性のある型でなければなりません。</span><span class="sxs-lookup"><span data-stu-id="426cd-280">The specified array must be of a compatible type.</span></span>  
  
 <span data-ttu-id="426cd-281">このメソッドを使用して<xref:System.Array.Copy%2A?displayProperty=nameWithType>要素のコピー。</span><span class="sxs-lookup"><span data-stu-id="426cd-281">This method uses <xref:System.Array.Copy%2A?displayProperty=nameWithType> to copy the elements.</span></span>  
  
 <span data-ttu-id="426cd-282">このメソッドは O (`n`) 操作、`n`は<xref:System.Collections.Specialized.StringCollection.Count%2A>します。</span><span class="sxs-lookup"><span data-stu-id="426cd-282">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringCollection.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="426cd-283"><paramref name="array" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="426cd-283"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="426cd-284"><paramref name="index" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="426cd-284"><paramref name="index" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="426cd-285"><paramref name="array" /> が多次元です。</span><span class="sxs-lookup"><span data-stu-id="426cd-285"><paramref name="array" /> is multidimensional.</span></span>  
  
<span data-ttu-id="426cd-286">- または -</span><span class="sxs-lookup"><span data-stu-id="426cd-286">-or-</span></span> 
<span data-ttu-id="426cd-287">コピー元の <see cref="T:System.Collections.Specialized.StringCollection" /> の要素数が、コピー先 <paramref name="array" /> の <paramref name="index" /> から最後までの使用可能領域を超えています。</span><span class="sxs-lookup"><span data-stu-id="426cd-287">The number of elements in the source <see cref="T:System.Collections.Specialized.StringCollection" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="426cd-288">コピー元の <see cref="T:System.Collections.Specialized.StringCollection" /> の型をコピー先の <paramref name="array" /> の型に自動的にキャストすることはできません。</span><span class="sxs-lookup"><span data-stu-id="426cd-288">The type of the source <see cref="T:System.Collections.Specialized.StringCollection" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.StringCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="426cd-289"><see cref="T:System.Collections.IEnumerator" /> を反復処理する <see cref="T:System.Collections.Specialized.StringCollection" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="426cd-289">Returns a <see cref="T:System.Collections.IEnumerator" /> that iterates through the <see cref="T:System.Collections.Specialized.StringCollection" />.</span></span></summary>
        <returns><span data-ttu-id="426cd-290"><see cref="T:System.Collections.IEnumerator" /> の <see cref="T:System.Collections.Specialized.StringCollection" />。</span><span class="sxs-lookup"><span data-stu-id="426cd-290">A <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Collections.Specialized.StringCollection" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="426cd-291">[Visual Basic、 C#]</span><span class="sxs-lookup"><span data-stu-id="426cd-291">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="426cd-292">C# 言語の `foreach` ステートメント (Visual Basic の場合は `for each`) を使用することで列挙子の複雑さを回避できます。</span><span class="sxs-lookup"><span data-stu-id="426cd-292">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="426cd-293">したがって、列挙子を直接操作するのではなく、`foreach` を使用することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="426cd-293">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="426cd-294">列挙子を使用すると、コレクション内のデータを読み取ることができますが、基になるコレクションを変更することはできません。</span><span class="sxs-lookup"><span data-stu-id="426cd-294">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="426cd-295">最初に、列挙子はコレクション内の 1 番目の要素の前に位置付けられます。</span><span class="sxs-lookup"><span data-stu-id="426cd-295">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="426cd-296"><xref:System.Collections.IEnumerator.Reset%2A> を実行した場合も、列挙子はこの位置に戻されます。</span><span class="sxs-lookup"><span data-stu-id="426cd-296"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span> <span data-ttu-id="426cd-297">この位置で、呼び出す<xref:System.Collections.IEnumerator.Current%2A>例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="426cd-297">At this position, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="426cd-298">そのため、<xref:System.Collections.IEnumerator.MoveNext%2A> の値を読み取る前に、<xref:System.Collections.IEnumerator.Current%2A> を呼び出して列挙子をコレクションの最初の要素に進める必要があります。</span><span class="sxs-lookup"><span data-stu-id="426cd-298">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="426cd-299"><xref:System.Collections.IEnumerator.Current%2A> は、<xref:System.Collections.IEnumerator.MoveNext%2A> または <xref:System.Collections.IEnumerator.Reset%2A> が呼び出されるまでは同じオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="426cd-299"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="426cd-300"><xref:System.Collections.IEnumerator.MoveNext%2A> は、<xref:System.Collections.IEnumerator.Current%2A> を次の要素に設定します。</span><span class="sxs-lookup"><span data-stu-id="426cd-300"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="426cd-301">場合<xref:System.Collections.IEnumerator.MoveNext%2A>列挙子、コレクションの末尾がコレクション内の最後の要素の後に配置されているパスと<xref:System.Collections.IEnumerator.MoveNext%2A>返します`false`します。</span><span class="sxs-lookup"><span data-stu-id="426cd-301">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="426cd-302">この位置では、後続の呼び出しで列挙子の場合<xref:System.Collections.IEnumerator.MoveNext%2A>を返すことも`false`します。</span><span class="sxs-lookup"><span data-stu-id="426cd-302">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="426cd-303">最後の呼び出し場合<xref:System.Collections.IEnumerator.MoveNext%2A>返される`false`を呼び出すと、<xref:System.Collections.IEnumerator.Current%2A>例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="426cd-303">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="426cd-304"><xref:System.Collections.IEnumerator.Current%2A> をコレクションの最初の要素にもう一度設定するには、<xref:System.Collections.IEnumerator.Reset%2A> を呼び出してから <xref:System.Collections.IEnumerator.MoveNext%2A> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="426cd-304">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="426cd-305">コレクションが変更されない限り、列挙子は有効です。</span><span class="sxs-lookup"><span data-stu-id="426cd-305">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="426cd-306">無効になり、次の呼び出しは変更を追加するなど、コレクション変更、または要素を削除するには、列挙子が不可能<xref:System.Collections.IEnumerator.MoveNext%2A>または<xref:System.Collections.IEnumerator.Reset%2A>スロー、<xref:System.InvalidOperationException>します。</span><span class="sxs-lookup"><span data-stu-id="426cd-306">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="426cd-307">間に、コレクションが変更された場合<xref:System.Collections.IEnumerator.MoveNext%2A>と<xref:System.Collections.IEnumerator.Current%2A>、<xref:System.Collections.IEnumerator.Current%2A>列挙子が既に無効になっている場合でもに設定されている要素を返します。</span><span class="sxs-lookup"><span data-stu-id="426cd-307">If the collection is modified between <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> returns the element that it is set to, even if the enumerator is already invalidated.</span></span>  
  
 <span data-ttu-id="426cd-308">列挙子には、コレクションへの排他アクセスがありません。したがって、コレクションの列挙処理は本質的にスレッド セーフな処理ではありません。</span><span class="sxs-lookup"><span data-stu-id="426cd-308">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread safe procedure.</span></span> <span data-ttu-id="426cd-309">コレクションの同期がとられている場合でも、別のスレッドによってそのコレクションを変更できるため、変更の結果として列挙子は例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="426cd-309">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="426cd-310">列挙処理を確実にスレッド セーフに行うには、列挙中にコレクションをロックするか、他のスレッドによって行われた変更によってスローされる例外をキャッチします。</span><span class="sxs-lookup"><span data-stu-id="426cd-310">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="426cd-311">このメソッドは、o (1) 操作です。</span><span class="sxs-lookup"><span data-stu-id="426cd-311">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Specialized.StringEnumerator" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.StringCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="426cd-312"><see cref="T:System.Object" /> の末尾に追加する <see cref="T:System.Collections.Specialized.StringCollection" />。</span><span class="sxs-lookup"><span data-stu-id="426cd-312">The <see cref="T:System.Object" /> to be added to the end of the <see cref="T:System.Collections.Specialized.StringCollection" />.</span></span> <span data-ttu-id="426cd-313">値として <see langword="null" /> を指定できます。</span><span class="sxs-lookup"><span data-stu-id="426cd-313">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="426cd-314"><see cref="T:System.Collections.Specialized.StringCollection" /> の末尾にオブジェクトを追加します。</span><span class="sxs-lookup"><span data-stu-id="426cd-314">Adds an object to the end of the <see cref="T:System.Collections.Specialized.StringCollection" />.</span></span></summary>
        <returns><span data-ttu-id="426cd-315"><paramref name="value" /> が追加された位置の <see cref="T:System.Collections.Specialized.StringCollection" /> インデックス。</span><span class="sxs-lookup"><span data-stu-id="426cd-315">The <see cref="T:System.Collections.Specialized.StringCollection" /> index at which the <paramref name="value" /> has been added.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="426cd-316"><xref:System.Collections.Specialized.StringCollection> 受け入れる`null`有効な値としてでき、重複する要素。</span><span class="sxs-lookup"><span data-stu-id="426cd-316"><xref:System.Collections.Specialized.StringCollection> accepts `null` as a valid value and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="426cd-317">場合<xref:System.Collections.Specialized.StringCollection.Count%2A>既に、容量の容量に等しい、<xref:System.Collections.Specialized.StringCollection>は内部の配列を自動的に再割り当てによって向上し、新しい要素を追加する前に、既存の要素が新しい配列にコピーされます。</span><span class="sxs-lookup"><span data-stu-id="426cd-317">If <xref:System.Collections.Specialized.StringCollection.Count%2A> already equals the capacity, the capacity of the <xref:System.Collections.Specialized.StringCollection> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</span></span>  
  
 <span data-ttu-id="426cd-318">場合<xref:System.Collections.Specialized.StringCollection.Count%2A>が少なく、容量よりもこのメソッドは、o (1) 操作。</span><span class="sxs-lookup"><span data-stu-id="426cd-318">If <xref:System.Collections.Specialized.StringCollection.Count%2A> is less than the capacity, this method is an O(1) operation.</span></span> <span data-ttu-id="426cd-319">このメソッドになります、O が新しい要素を格納するために、容量が必要な場合 (`n`) 操作、`n`は<xref:System.Collections.Specialized.StringCollection.Count%2A>します。</span><span class="sxs-lookup"><span data-stu-id="426cd-319">If the capacity needs to be increased to accommodate the new element, this method becomes an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringCollection.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="426cd-320"><see cref="T:System.Collections.Specialized.StringCollection" /> は読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="426cd-320">The <see cref="T:System.Collections.Specialized.StringCollection" /> is read-only.</span></span>  
  
<span data-ttu-id="426cd-321">- または -</span><span class="sxs-lookup"><span data-stu-id="426cd-321">-or-</span></span> 
<span data-ttu-id="426cd-322"><see cref="T:System.Collections.Specialized.StringCollection" /> は固定サイズです。</span><span class="sxs-lookup"><span data-stu-id="426cd-322">The <see cref="T:System.Collections.Specialized.StringCollection" /> has a fixed size.</span></span></exception>
        <altmember cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />
        <altmember cref="M:System.Collections.IList.Remove(System.Object)" />
        <altmember cref="P:System.Collections.Specialized.StringCollection.Count" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.StringCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="426cd-323"><see cref="T:System.Collections.Specialized.StringCollection" /> 内で検索される <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="426cd-323">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.Specialized.StringCollection" />.</span></span> <span data-ttu-id="426cd-324">値として <see langword="null" /> を指定できます。</span><span class="sxs-lookup"><span data-stu-id="426cd-324">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="426cd-325">ある要素が <see cref="T:System.Collections.Specialized.StringCollection" /> 内に存在するかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="426cd-325">Determines whether an element is in the <see cref="T:System.Collections.Specialized.StringCollection" />.</span></span></summary>
        <returns><span data-ttu-id="426cd-326"><see langword="true" /> が <paramref name="value" /> に存在する場合は <see cref="T:System.Collections.Specialized.StringCollection" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="426cd-326"><see langword="true" /> if <paramref name="value" /> is found in the <see cref="T:System.Collections.Specialized.StringCollection" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="426cd-327">このメソッドを呼び出すことで等しいかどうかを判断<xref:System.Object.Equals%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="426cd-327">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="426cd-328">このメソッドは、一方向の検索を実行します。そのため、このメソッドは、O (`n`) 操作、`n`は<xref:System.Collections.Specialized.StringCollection.Count%2A>します。</span><span class="sxs-lookup"><span data-stu-id="426cd-328">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringCollection.Count%2A>.</span></span>  
  
 <span data-ttu-id="426cd-329">以降、.NET Framework 2.0 では、このメソッドを使用して、コレクションのオブジェクトの<xref:System.Object.Equals%2A>と<xref:System.IComparable.CompareTo%2A>メソッド`item`項目が存在するかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="426cd-329">Starting with the .NET Framework 2.0, this method uses the collection's objects' <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="426cd-330">以前のバージョンの .NET Framework では、この判断を使用して行われた、<xref:System.Object.Equals%2A>と<xref:System.IComparable.CompareTo%2A>のメソッド、`item`パラメーター コレクション内のオブジェクトにします。</span><span class="sxs-lookup"><span data-stu-id="426cd-330">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.IList.IndexOf(System.Object)" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations.md"><span data-ttu-id="426cd-331">カルチャを認識しない文字列操作の実行</span><span class="sxs-lookup"><span data-stu-id="426cd-331">Performing Culture-Insensitive String Operations</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.StringCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="426cd-332"><see cref="T:System.Collections.Specialized.StringCollection" /> 内で検索される <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="426cd-332">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.Specialized.StringCollection" />.</span></span> <span data-ttu-id="426cd-333">値として <see langword="null" /> を指定できます。</span><span class="sxs-lookup"><span data-stu-id="426cd-333">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="426cd-334">指定した <see cref="T:System.Object" /> を検索し、<see cref="T:System.Collections.Specialized.StringCollection" /> 全体内で最初に見つかった位置の 0 から始まるインデックスを返します。</span><span class="sxs-lookup"><span data-stu-id="426cd-334">Searches for the specified <see cref="T:System.Object" /> and returns the zero-based index of the first occurrence within the entire <see cref="T:System.Collections.Specialized.StringCollection" />.</span></span></summary>
        <returns><span data-ttu-id="426cd-335"><see cref="T:System.Collections.Specialized.StringCollection" /> 全体を対象に <paramref name="value" /> を検索し、見つかった場合は、インデックス番号の最も小さい要素の 0 から始まるインデックス番号、それ以外の場合は -1。</span><span class="sxs-lookup"><span data-stu-id="426cd-335">The zero-based index of the first occurrence of <paramref name="value" /> within the entire <see cref="T:System.Collections.Specialized.StringCollection" />, if found; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="426cd-336"><xref:System.Collections.Specialized.StringCollection>転送の最初の要素から開始し、最後の要素の終了が検索されます。</span><span class="sxs-lookup"><span data-stu-id="426cd-336">The <xref:System.Collections.Specialized.StringCollection> is searched forward starting at the first element and ending at the last element.</span></span>  
  
 <span data-ttu-id="426cd-337">このメソッドを呼び出すことで等しいかどうかを判断<xref:System.Object.Equals%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="426cd-337">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="426cd-338">このメソッドは、一方向の検索を実行します。そのため、このメソッドは、O (`n`) 操作、`n`は<xref:System.Collections.Specialized.StringCollection.Count%2A>します。</span><span class="sxs-lookup"><span data-stu-id="426cd-338">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringCollection.Count%2A>.</span></span>  
  
 <span data-ttu-id="426cd-339">以降、.NET Framework 2.0 では、このメソッドを使用して、コレクションのオブジェクトの<xref:System.Object.Equals%2A>と<xref:System.IComparable.CompareTo%2A>メソッド`item`項目が存在するかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="426cd-339">Starting with the .NET Framework 2.0, this method uses the collection's objects' <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="426cd-340">以前のバージョンの .NET Framework では、この判断を使用して行われた、<xref:System.Object.Equals%2A>と<xref:System.IComparable.CompareTo%2A>のメソッド、`item`パラメーター コレクション内のオブジェクトにします。</span><span class="sxs-lookup"><span data-stu-id="426cd-340">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.IList.Contains(System.Object)" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations.md"><span data-ttu-id="426cd-341">カルチャを認識しない文字列操作の実行</span><span class="sxs-lookup"><span data-stu-id="426cd-341">Performing Culture-Insensitive String Operations</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.StringCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="426cd-342"><paramref name="value" /> を挿入する位置の、0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="426cd-342">The zero-based index at which <paramref name="value" /> should be inserted.</span></span></param>
        <param name="value"><span data-ttu-id="426cd-343">挿入する <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="426cd-343">The <see cref="T:System.Object" /> to insert.</span></span> <span data-ttu-id="426cd-344">値として <see langword="null" /> を指定できます。</span><span class="sxs-lookup"><span data-stu-id="426cd-344">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="426cd-345"><see cref="T:System.Collections.Specialized.StringCollection" /> 内の指定したインデックスの位置に要素を挿入します。</span><span class="sxs-lookup"><span data-stu-id="426cd-345">Inserts an element into the <see cref="T:System.Collections.Specialized.StringCollection" /> at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="426cd-346">場合<xref:System.Collections.Specialized.StringCollection.Count%2A>既に、容量の容量に等しい、<xref:System.Collections.Specialized.StringCollection>は内部の配列を自動的に再割り当てによって向上し、新しい要素を追加する前に、既存の要素が新しい配列にコピーされます。</span><span class="sxs-lookup"><span data-stu-id="426cd-346">If <xref:System.Collections.Specialized.StringCollection.Count%2A> already equals the capacity, the capacity of the <xref:System.Collections.Specialized.StringCollection> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</span></span>  
  
 <span data-ttu-id="426cd-347">場合`index`と等しい<xref:System.Collections.Specialized.StringCollection.Count%2A>、`value`の末尾に追加されます<xref:System.Collections.Specialized.StringCollection>します。</span><span class="sxs-lookup"><span data-stu-id="426cd-347">If `index` is equal to <xref:System.Collections.Specialized.StringCollection.Count%2A>, `value` is added to the end of <xref:System.Collections.Specialized.StringCollection>.</span></span>  
  
 <span data-ttu-id="426cd-348">リストなどの連続する要素のコレクションでは、新しい要素を挿入するために、挿入位置より後にある要素の位置が繰り下げられます。</span><span class="sxs-lookup"><span data-stu-id="426cd-348">In collections of contiguous elements, such as lists, the elements that follow the insertion point move down to accommodate the new element.</span></span> <span data-ttu-id="426cd-349">コレクションにインデックスがある場合、移動した要素のインデックスも更新されます。</span><span class="sxs-lookup"><span data-stu-id="426cd-349">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="426cd-350">この動作は、要素が概念的にバケットにグループ化されているハッシュ テーブルなどのコレクションには適用されません。</span><span class="sxs-lookup"><span data-stu-id="426cd-350">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 <span data-ttu-id="426cd-351">このメソッドは O (`n`) 操作、`n`は<xref:System.Collections.Specialized.StringCollection.Count%2A>します。</span><span class="sxs-lookup"><span data-stu-id="426cd-351">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringCollection.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="426cd-352"><paramref name="index" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="426cd-352"><paramref name="index" /> is less than zero.</span></span>  
  
<span data-ttu-id="426cd-353">- または -</span><span class="sxs-lookup"><span data-stu-id="426cd-353">-or-</span></span> 
 <span data-ttu-id="426cd-354"><paramref name="index" /> が <see cref="P:System.Collections.Specialized.StringCollection.Count" /> より大きくなっています。</span><span class="sxs-lookup"><span data-stu-id="426cd-354"><paramref name="index" /> is greater than <see cref="P:System.Collections.Specialized.StringCollection.Count" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="426cd-355"><see cref="T:System.Collections.Specialized.StringCollection" /> は読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="426cd-355">The <see cref="T:System.Collections.Specialized.StringCollection" /> is read-only.</span></span>  
  
<span data-ttu-id="426cd-356">- または -</span><span class="sxs-lookup"><span data-stu-id="426cd-356">-or-</span></span> 
<span data-ttu-id="426cd-357"><see cref="T:System.Collections.Specialized.StringCollection" /> は固定サイズです。</span><span class="sxs-lookup"><span data-stu-id="426cd-357">The <see cref="T:System.Collections.Specialized.StringCollection" /> has a fixed size.</span></span></exception>
        <altmember cref="M:System.Collections.IList.Add(System.Object)" />
        <altmember cref="M:System.Collections.IList.Remove(System.Object)" />
        <altmember cref="P:System.Collections.Specialized.StringCollection.Count" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Specialized.StringCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="426cd-358"><see cref="T:System.Collections.Specialized.StringCollection" /> オブジェクトが固定サイズかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="426cd-358">Gets a value indicating whether the <see cref="T:System.Collections.Specialized.StringCollection" /> object has a fixed size.</span></span></summary>
        <value><span data-ttu-id="426cd-359"><see cref="T:System.Collections.Specialized.StringCollection" /> オブジェクトが固定サイズの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="426cd-359"><see langword="true" /> if the <see cref="T:System.Collections.Specialized.StringCollection" /> object has a fixed size; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="426cd-360">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="426cd-360">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="426cd-361">固定サイズのコレクションは、追加または削除できません要素のコレクションが作成されますが、既存の要素の変更を許可するが後。</span><span class="sxs-lookup"><span data-stu-id="426cd-361">A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but does allow the modification of existing elements.</span></span>  
  
 <span data-ttu-id="426cd-362">固定サイズのコレクションの追加と要素の削除を防止するラッパーは、コレクションは、します。そのため、追加または削除、要素を含む、基になるコレクションに変更された場合、固定サイズ コレクションそれらの変更が反映されます。</span><span class="sxs-lookup"><span data-stu-id="426cd-362">A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</span></span>  
  
 <span data-ttu-id="426cd-363">このプロパティ値を取得することは、O(1) 操作になります。</span><span class="sxs-lookup"><span data-stu-id="426cd-363">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Specialized.StringCollection.System#Collections#IList#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="426cd-364"><see cref="T:System.Collections.Specialized.StringCollection" /> オブジェクトが読み取り専用かどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="426cd-364">Gets a value indicating whether the <see cref="T:System.Collections.Specialized.StringCollection" /> object is read-only.</span></span></summary>
        <value><span data-ttu-id="426cd-365"><see cref="T:System.Collections.Specialized.StringCollection" /> オブジェクトが読み取り専用の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="426cd-365"><see langword="true" /> if the <see cref="T:System.Collections.Specialized.StringCollection" /> object is read-only; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="426cd-366">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="426cd-366">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="426cd-367">読み取り専用のコレクションでは、コレクション作成後に要素の追加、削除、または変更はできません。</span><span class="sxs-lookup"><span data-stu-id="426cd-367">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 <span data-ttu-id="426cd-368">読み取り専用のコレクション、コレクションの変更を防止するラッパー コレクションそのため、基になるコレクションの変更が加えられた、読み取り専用コレクションはそれらの変更を反映します。</span><span class="sxs-lookup"><span data-stu-id="426cd-368">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="426cd-369">このプロパティ値を取得することは、O(1) 操作になります。</span><span class="sxs-lookup"><span data-stu-id="426cd-369">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Specialized.StringCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IList::Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="426cd-370">取得または設定する要素の、0 から始まるインデックス番号。</span><span class="sxs-lookup"><span data-stu-id="426cd-370">The zero-based index of the element to get or set.</span></span></param>
        <summary><span data-ttu-id="426cd-371">指定したインデックスにある要素を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="426cd-371">Gets or sets the element at the specified index.</span></span></summary>
        <value><span data-ttu-id="426cd-372">指定したインデックス位置にある要素。</span><span class="sxs-lookup"><span data-stu-id="426cd-372">The element at the specified index.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="426cd-373">このメソッドは、次の構文を使用して、コレクション内の特定の要素にアクセスする機能を提供します。`myCollection[index]`します。</span><span class="sxs-lookup"><span data-stu-id="426cd-373">Thismethod provides the ability to access a specific element in the collection by using the following syntax: `myCollection[index]`.</span></span>  
  
 <span data-ttu-id="426cd-374">C# 言語を使用して、[この](~/docs/csharp/language-reference/keywords/this.md)キーワードを実装する代わりに、インデクサーの定義、<xref:System.Collections.Specialized.StringCollection.System%23Collections%23IList%23Item%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="426cd-374">The C# language uses the [this](~/docs/csharp/language-reference/keywords/this.md) keyword to define the indexers instead of implementing the <xref:System.Collections.Specialized.StringCollection.System%23Collections%23IList%23Item%2A> property.</span></span> <span data-ttu-id="426cd-375">Visual Basic は、<xref:System.Collections.Specialized.StringCollection.System%23Collections%23IList%23Item%2A> を既定のプロパティとして実装しており、同様のインデックス機能を提供します。</span><span class="sxs-lookup"><span data-stu-id="426cd-375">Visual Basic implements <xref:System.Collections.Specialized.StringCollection.System%23Collections%23IList%23Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 <span data-ttu-id="426cd-376"><xref:System.Collections.Specialized.StringCollection> 受け入れる`null`有効な値としてでき、重複する要素。</span><span class="sxs-lookup"><span data-stu-id="426cd-376"><xref:System.Collections.Specialized.StringCollection> accepts `null` as a valid value and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="426cd-377">このプロパティの値を取得する場合は、o (1) 操作です。プロパティの設定は、o (1) 操作ではもします。</span><span class="sxs-lookup"><span data-stu-id="426cd-377">Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="426cd-378"><paramref name="index" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="426cd-378"><paramref name="index" /> is less than zero.</span></span>  
  
<span data-ttu-id="426cd-379">- または -</span><span class="sxs-lookup"><span data-stu-id="426cd-379">-or-</span></span> 
 <span data-ttu-id="426cd-380"><paramref name="index" /> が <see cref="P:System.Collections.Specialized.StringCollection.Count" /> 以上になっています。</span><span class="sxs-lookup"><span data-stu-id="426cd-380"><paramref name="index" /> is equal to or greater than <see cref="P:System.Collections.Specialized.StringCollection.Count" />.</span></span></exception>
        <altmember cref="P:System.Collections.Specialized.StringCollection.Count" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.StringCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="426cd-381"><see cref="T:System.Object" /> から削除する <see cref="T:System.Collections.Specialized.StringCollection" />。</span><span class="sxs-lookup"><span data-stu-id="426cd-381">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Collections.Specialized.StringCollection" />.</span></span> <span data-ttu-id="426cd-382">値として <see langword="null" /> を指定できます。</span><span class="sxs-lookup"><span data-stu-id="426cd-382">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="426cd-383">特定のオブジェクトが <see cref="T:System.Collections.Specialized.StringCollection" /> 内にあるときに、最初に出現したものを削除します。</span><span class="sxs-lookup"><span data-stu-id="426cd-383">Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Specialized.StringCollection" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="426cd-384">場合、<xref:System.Collections.Specialized.StringCollection>に指定したオブジェクトが含まれていない、<xref:System.Collections.Specialized.StringCollection>は変更されません。</span><span class="sxs-lookup"><span data-stu-id="426cd-384">If the <xref:System.Collections.Specialized.StringCollection> does not contain the specified object, the <xref:System.Collections.Specialized.StringCollection> remains unchanged.</span></span> <span data-ttu-id="426cd-385">例外をスローすることはありません。</span><span class="sxs-lookup"><span data-stu-id="426cd-385">No exception is thrown.</span></span>  
  
 <span data-ttu-id="426cd-386">リストなどの連続する要素のコレクションでは、空白になった位置を埋めるために、削除された要素の後にある要素の位置が繰り上げられます。</span><span class="sxs-lookup"><span data-stu-id="426cd-386">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="426cd-387">コレクションにインデックスがある場合、移動した要素のインデックスも更新されます。</span><span class="sxs-lookup"><span data-stu-id="426cd-387">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="426cd-388">この動作は、要素が概念的にバケットにグループ化されているハッシュ テーブルなどのコレクションには適用されません。</span><span class="sxs-lookup"><span data-stu-id="426cd-388">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 <span data-ttu-id="426cd-389">このメソッドを呼び出すことで等しいかどうかを判断<xref:System.Object.Equals%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="426cd-389">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="426cd-390">このメソッドは、一方向の検索を実行します。そのため、このメソッドは、O (`n`) 操作、`n`は<xref:System.Collections.Specialized.StringCollection.Count%2A>します。</span><span class="sxs-lookup"><span data-stu-id="426cd-390">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringCollection.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="426cd-391"><see cref="T:System.Collections.Specialized.StringCollection" /> は読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="426cd-391">The <see cref="T:System.Collections.Specialized.StringCollection" /> is read-only.</span></span>  
  
<span data-ttu-id="426cd-392">- または -</span><span class="sxs-lookup"><span data-stu-id="426cd-392">-or-</span></span> 
<span data-ttu-id="426cd-393"><see cref="T:System.Collections.Specialized.StringCollection" /> は固定サイズです。</span><span class="sxs-lookup"><span data-stu-id="426cd-393">The <see cref="T:System.Collections.Specialized.StringCollection" /> has a fixed size.</span></span></exception>
        <altmember cref="M:System.Collections.IList.Add(System.Object)" />
        <altmember cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />
        <altmember cref="P:System.Collections.Specialized.StringCollection.Count" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations.md"><span data-ttu-id="426cd-394">カルチャを認識しない文字列操作の実行</span><span class="sxs-lookup"><span data-stu-id="426cd-394">Performing Culture-Insensitive String Operations</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>