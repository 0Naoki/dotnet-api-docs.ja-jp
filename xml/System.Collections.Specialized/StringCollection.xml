<Type Name="StringCollection" FullName="System.Collections.Specialized.StringCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1ce43863b4a9ce24576d265a800e9f50be776af7" /><Meta Name="ms.sourcegitcommit" Value="cb4d218ffd5a459a5f921fe1d945c682d1e09aca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/16/2019" /><Meta Name="ms.locfileid" Value="69539545" /></Metadata><TypeSignature Language="C#" Value="public class StringCollection : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit StringCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Specialized.StringCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class StringCollection&#xA;Implements IList" />
  <TypeSignature Language="C++ CLI" Value="public ref class StringCollection : System::Collections::IList" />
  <TypeSignature Language="F#" Value="type StringCollection = class&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Specialized</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="fc928-101">文字列のコレクションを表します。</span><span class="sxs-lookup"><span data-stu-id="fc928-101">Represents a collection of strings.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc928-102"><xref:System.Collections.Specialized.StringCollection>は`null` 、有効な値としてを受け入れ、重複する要素を許可します。</span><span class="sxs-lookup"><span data-stu-id="fc928-102"><xref:System.Collections.Specialized.StringCollection> accepts `null` as a valid value and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="fc928-103">文字列比較では大文字と小文字が区別されます。</span><span class="sxs-lookup"><span data-stu-id="fc928-103">String comparisons are case-sensitive.</span></span>  
  
 <span data-ttu-id="fc928-104">このコレクションの要素には、整数インデックスを使用してアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="fc928-104">Elements in this collection can be accessed using an integer index.</span></span>  <span data-ttu-id="fc928-105">このコレクションのインデックスは0から始まります。</span><span class="sxs-lookup"><span data-stu-id="fc928-105">Indexes in this collection are zero-based.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc928-106">次のコード例は、の<xref:System.Collections.Specialized.StringCollection>プロパティとメソッドのいくつかを示しています。</span><span class="sxs-lookup"><span data-stu-id="fc928-106">The following code example demonstrates several of the properties and methods of <xref:System.Collections.Specialized.StringCollection>.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.StringCollection2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollection2/CPP/stringcollection.cpp#1)]
 [!code-csharp[System.Collections.Specialized.StringCollection2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollection2/CS/stringcollection.cs#1)]
 [!code-vb[System.Collections.Specialized.StringCollection2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollection2/VB/stringcollection.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="fc928-107">パブリック静的 (Visual Basic では<see langword="Shared" />) なこの型のメンバーはスレッド セーフです</span><span class="sxs-lookup"><span data-stu-id="fc928-107">Public static (<see langword="Shared" /> in Visual Basic) members of this type are thread safe.</span></span> <span data-ttu-id="fc928-108">インスタンス メンバーの場合は、スレッド セーフであるとは限りません。</span><span class="sxs-lookup"><span data-stu-id="fc928-108">Any instance members are not guaranteed to be thread safe.</span></span>  
  
<span data-ttu-id="fc928-109">この実装は、 <see cref="T:System.Collections.Specialized.StringCollection" />に対して同期された (スレッドセーフな) ラッパーを提供しませんが、派生クラスは<see cref="P:System.Collections.Specialized.StringCollection.SyncRoot" />プロパティを使用して、 <see cref="T:System.Collections.Specialized.StringCollection" />独自の同期バージョンを作成できます。</span><span class="sxs-lookup"><span data-stu-id="fc928-109">This implementation does not provide a synchronized (thread safe) wrapper for a <see cref="T:System.Collections.Specialized.StringCollection" />, but derived classes can create their own synchronized versions of the <see cref="T:System.Collections.Specialized.StringCollection" /> using the <see cref="P:System.Collections.Specialized.StringCollection.SyncRoot" /> property.</span></span>  
  
<span data-ttu-id="fc928-110">コレクションの列挙は、本質的にスレッド セーフな手続きではありません。</span><span class="sxs-lookup"><span data-stu-id="fc928-110">Enumerating through a collection is intrinsically not a thread safe procedure.</span></span> <span data-ttu-id="fc928-111">コレクションの同期がとられている場合でも、別のスレッドによってそのコレクションを変更できるため、変更の結果として列挙子は例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="fc928-111">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="fc928-112">列挙処理を確実にスレッド セーフに行うには、列挙中にコレクションをロックするか、他のスレッドによって行われた変更によってスローされる例外をキャッチします。</span><span class="sxs-lookup"><span data-stu-id="fc928-112">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span></threadsafe>
    <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations.md"><span data-ttu-id="fc928-113">カルチャを認識しない文字列操作の実行</span><span class="sxs-lookup"><span data-stu-id="fc928-113">Performing Culture-Insensitive String Operations</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.StringCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fc928-114"><see cref="T:System.Collections.Specialized.StringCollection" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="fc928-114">Initializes a new instance of the <see cref="T:System.Collections.Specialized.StringCollection" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc928-115">このコンストラクターは O (1) 操作です。</span><span class="sxs-lookup"><span data-stu-id="fc928-115">This constructor is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.StringCollection.Add(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (value As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.Add : string -&gt; int" Usage="stringCollection.Add value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="fc928-116"><see cref="T:System.Collections.Specialized.StringCollection" /> の末尾に追加する文字列。</span><span class="sxs-lookup"><span data-stu-id="fc928-116">The string to add to the end of the <see cref="T:System.Collections.Specialized.StringCollection" />.</span></span> <span data-ttu-id="fc928-117">値として <see langword="null" /> を指定できます。</span><span class="sxs-lookup"><span data-stu-id="fc928-117">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="fc928-118">文字列を <see cref="T:System.Collections.Specialized.StringCollection" /> の末尾に追加します。</span><span class="sxs-lookup"><span data-stu-id="fc928-118">Adds a string to the end of the <see cref="T:System.Collections.Specialized.StringCollection" />.</span></span></summary>
        <returns><span data-ttu-id="fc928-119">新しい要素が挿入される位置の 0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="fc928-119">The zero-based index at which the new element is inserted.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc928-120"><xref:System.Collections.Specialized.StringCollection>は`null` 、有効な値としてを受け入れ、重複する要素を許可します。</span><span class="sxs-lookup"><span data-stu-id="fc928-120"><xref:System.Collections.Specialized.StringCollection> accepts `null` as a valid value and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="fc928-121">が<xref:System.Collections.Specialized.StringCollection.Count%2A>容量より小さい場合、このメソッドは O (1) 操作になります。</span><span class="sxs-lookup"><span data-stu-id="fc928-121">If <xref:System.Collections.Specialized.StringCollection.Count%2A> is less than the capacity, this method is an O(1) operation.</span></span> <span data-ttu-id="fc928-122">新しい要素を格納するために容量を増やす必要がある場合、このメソッドは O`n`() 操作に`n`なり<xref:System.Collections.Specialized.StringCollection.Count%2A>ます。ここで、はです。</span><span class="sxs-lookup"><span data-stu-id="fc928-122">If the capacity needs to be increased to accommodate the new element, this method becomes an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringCollection.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc928-123">次のコード例では、 <xref:System.Collections.Specialized.StringCollection>に新しい要素を追加します。</span><span class="sxs-lookup"><span data-stu-id="fc928-123">The following code example adds new elements to the <xref:System.Collections.Specialized.StringCollection>.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.StringCollectionAdd#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionAdd/CPP/stringcollectionadd.cpp#1)]
 [!code-csharp[System.Collections.Specialized.StringCollectionAdd#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionAdd/CS/stringcollectionadd.cs#1)]
 [!code-vb[System.Collections.Specialized.StringCollectionAdd#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionAdd/VB/stringcollectionadd.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Specialized.StringCollection.AddRange(System.String[])" />
        <altmember cref="P:System.Collections.Specialized.StringCollection.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (string[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(string[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.StringCollection.AddRange(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (value As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(cli::array &lt;System::String ^&gt; ^ value);" />
      <MemberSignature Language="F#" Value="member this.AddRange : string[] -&gt; unit" Usage="stringCollection.AddRange value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="fc928-124"><see cref="T:System.Collections.Specialized.StringCollection" /> の末尾に追加する文字列配列。</span><span class="sxs-lookup"><span data-stu-id="fc928-124">An array of strings to add to the end of the <see cref="T:System.Collections.Specialized.StringCollection" />.</span></span> <span data-ttu-id="fc928-125">配列自体を <see langword="null" /> にすることはできませんが、配列に格納する要素は <see langword="null" /> であってもかまいません。</span><span class="sxs-lookup"><span data-stu-id="fc928-125">The array itself can not be <see langword="null" /> but it can contain elements that are <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="fc928-126">文字列配列の要素を <see cref="T:System.Collections.Specialized.StringCollection" /> の末尾にコピーします。</span><span class="sxs-lookup"><span data-stu-id="fc928-126">Copies the elements of a string array to the end of the <see cref="T:System.Collections.Specialized.StringCollection" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc928-127"><xref:System.Collections.Specialized.StringCollection>は`null` 、有効な値としてを受け入れ、重複する要素を許可します。</span><span class="sxs-lookup"><span data-stu-id="fc928-127"><xref:System.Collections.Specialized.StringCollection> accepts `null` as a valid value and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="fc928-128">が容量を増やすことなく新しい要素に対応`n` `n` できる場合、このメソッドはO()操作になります。ここで、は追加する要素<xref:System.Collections.Specialized.StringCollection>の数です。</span><span class="sxs-lookup"><span data-stu-id="fc928-128">If the <xref:System.Collections.Specialized.StringCollection> can accommodate the new elements without increasing the capacity, this method is an O(`n`) operation, where `n` is the number of elements to be added.</span></span> <span data-ttu-id="fc928-129">新しい要素を格納するために容量を増やす必要がある場合、このメソッドは O`n`( <xref:System.Collections.Specialized.StringCollection.Count%2A> + `m`) 操作に`n`なります。ここで、は追加`m`される要素の数であり、はです。</span><span class="sxs-lookup"><span data-stu-id="fc928-129">If the capacity needs to be increased to accommodate the new elements, this method becomes an O(`n` + `m`) operation, where `n` is the number of elements to be added and `m` is <xref:System.Collections.Specialized.StringCollection.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc928-130">次のコード例では、 <xref:System.Collections.Specialized.StringCollection>に新しい要素を追加します。</span><span class="sxs-lookup"><span data-stu-id="fc928-130">The following code example adds new elements to the <xref:System.Collections.Specialized.StringCollection>.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.StringCollectionAdd#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionAdd/CPP/stringcollectionadd.cpp#1)]
 [!code-csharp[System.Collections.Specialized.StringCollectionAdd#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionAdd/CS/stringcollectionadd.cs#1)]
 [!code-vb[System.Collections.Specialized.StringCollectionAdd#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionAdd/VB/stringcollectionadd.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fc928-131"><paramref name="value" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="fc928-131"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Collections.Specialized.StringCollection.Add(System.String)" />
        <altmember cref="P:System.Collections.Specialized.StringCollection.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.StringCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="stringCollection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fc928-132">すべての文字列を <see cref="T:System.Collections.Specialized.StringCollection" /> から削除します。</span><span class="sxs-lookup"><span data-stu-id="fc928-132">Removes all the strings from the <see cref="T:System.Collections.Specialized.StringCollection" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc928-133"><xref:System.Collections.Specialized.StringCollection.Count%2A>が0に設定され、コレクションの要素から他のオブジェクトへの参照も解放されます。</span><span class="sxs-lookup"><span data-stu-id="fc928-133"><xref:System.Collections.Specialized.StringCollection.Count%2A> is set to zero, and references to other objects from elements of the collection are also released.</span></span>  
  
 <span data-ttu-id="fc928-134">このメソッドは O(`n`) 操作で、`n`は <xref:System.Collections.Specialized.StringCollection.Count%2A> です。</span><span class="sxs-lookup"><span data-stu-id="fc928-134">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringCollection.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc928-135">次のコード例では、 <xref:System.Collections.Specialized.StringCollection>から要素を削除します。</span><span class="sxs-lookup"><span data-stu-id="fc928-135">The following code example removes elements from the <xref:System.Collections.Specialized.StringCollection>.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.StringCollectionRemove#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionRemove/CPP/stringcollectionremove.cpp#1)]
 [!code-csharp[System.Collections.Specialized.StringCollectionRemove#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionRemove/CS/stringcollectionremove.cs#1)]
 [!code-vb[System.Collections.Specialized.StringCollectionRemove#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionRemove/VB/stringcollectionremove.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.Specialized.StringCollection.Count" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.StringCollection.Contains(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.Contains : string -&gt; bool" Usage="stringCollection.Contains value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="fc928-136"><see cref="T:System.Collections.Specialized.StringCollection" /> 内で検索する文字列。</span><span class="sxs-lookup"><span data-stu-id="fc928-136">The string to locate in the <see cref="T:System.Collections.Specialized.StringCollection" />.</span></span> <span data-ttu-id="fc928-137">値として <see langword="null" /> を指定できます。</span><span class="sxs-lookup"><span data-stu-id="fc928-137">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="fc928-138">指定した文字列が <see cref="T:System.Collections.Specialized.StringCollection" /> 内にあるかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="fc928-138">Determines whether the specified string is in the <see cref="T:System.Collections.Specialized.StringCollection" />.</span></span></summary>
        <returns><span data-ttu-id="fc928-139"><see langword="true" /> が <paramref name="value" /> に存在する場合は <see cref="T:System.Collections.Specialized.StringCollection" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fc928-139"><see langword="true" /> if <paramref name="value" /> is found in the <see cref="T:System.Collections.Specialized.StringCollection" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc928-140">メソッド<xref:System.Collections.Specialized.StringCollection.Contains%2A>は、さらに操作を実行する前に、文字列が存在することを確認できます。</span><span class="sxs-lookup"><span data-stu-id="fc928-140">The <xref:System.Collections.Specialized.StringCollection.Contains%2A> method can confirm the existence of a string before performing further operations.</span></span>  
  
 <span data-ttu-id="fc928-141">このメソッドは、を呼び<xref:System.Object.Equals%2A?displayProperty=nameWithType>出すことによって等価性を判断します。</span><span class="sxs-lookup"><span data-stu-id="fc928-141">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="fc928-142">文字列比較では大文字と小文字が区別されます。</span><span class="sxs-lookup"><span data-stu-id="fc928-142">String comparisons are case-sensitive.</span></span>  
  
 <span data-ttu-id="fc928-143">このメソッドは、線形検索を実行します。したがって、このメソッドは O (`n`) 演算です。 `n`ここ<xref:System.Collections.Specialized.StringCollection.Count%2A>で、はです。</span><span class="sxs-lookup"><span data-stu-id="fc928-143">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringCollection.Count%2A>.</span></span>  
  
 <span data-ttu-id="fc928-144">.NET Framework 2.0 以降では、このメソッドは、コレクションのオブジェクト<xref:System.Object.Equals%2A>と<xref:System.IComparable.CompareTo%2A>メソッド`item`を使用して、項目が存在するかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="fc928-144">Starting with the .NET Framework 2.0, this method uses the collection's objects' <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="fc928-145">以前のバージョンの .NET Framework では、この決定は、コレクション内の<xref:System.Object.Equals%2A>オブジェクト<xref:System.IComparable.CompareTo%2A>の`item`パラメーターのメソッドとメソッドを使用して行われていました。</span><span class="sxs-lookup"><span data-stu-id="fc928-145">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc928-146">次のコード例では<xref:System.Collections.Specialized.StringCollection> 、で要素を検索します。</span><span class="sxs-lookup"><span data-stu-id="fc928-146">The following code example searches the <xref:System.Collections.Specialized.StringCollection> for an element.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.StringCollectionContains#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionContains/CPP/stringcollectioncontains.cpp#1)]
 [!code-csharp[System.Collections.Specialized.StringCollectionContains#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionContains/CS/stringcollectioncontains.cs#1)]
 [!code-vb[System.Collections.Specialized.StringCollectionContains#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionContains/VB/stringcollectioncontains.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Specialized.StringCollection.IndexOf(System.String)" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations.md"><span data-ttu-id="fc928-147">カルチャを認識しない文字列操作の実行</span><span class="sxs-lookup"><span data-stu-id="fc928-147">Performing Culture-Insensitive String Operations</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (string[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(string[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.StringCollection.CopyTo(System.String[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As String(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::String ^&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : string[] * int -&gt; unit" Usage="stringCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.String[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="fc928-148"><see cref="T:System.Collections.Specialized.StringCollection" /> から要素がコピーされる 1 次元の文字列配列。</span><span class="sxs-lookup"><span data-stu-id="fc928-148">The one-dimensional array of strings that is the destination of the elements copied from <see cref="T:System.Collections.Specialized.StringCollection" />.</span></span> <span data-ttu-id="fc928-149"><see cref="T:System.Array" /> には、0 から始まるインデックス番号が必要です。</span><span class="sxs-lookup"><span data-stu-id="fc928-149">The <see cref="T:System.Array" /> must have zero-based indexing.</span></span></param>
        <param name="index"><span data-ttu-id="fc928-150">コピーの開始位置とする <paramref name="array" /> のインデックス (0 から始まる)。</span><span class="sxs-lookup"><span data-stu-id="fc928-150">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="fc928-151">1 次元の文字列配列に、その配列内の指定したインデックスを開始位置として <see cref="T:System.Collections.Specialized.StringCollection" /> 値全体をコピーします。</span><span class="sxs-lookup"><span data-stu-id="fc928-151">Copies the entire <see cref="T:System.Collections.Specialized.StringCollection" /> values to a one-dimensional array of strings, starting at the specified index of the target array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc928-152">指定された配列は、互換性のある型である必要があります。</span><span class="sxs-lookup"><span data-stu-id="fc928-152">The specified array must be of a compatible type.</span></span>  
  
 <span data-ttu-id="fc928-153">要素は、の列挙子<xref:System.Array> <xref:System.Collections.Specialized.StringCollection>がを反復処理<xref:System.Collections.Specialized.StringCollection>するのと同じ順序で、にコピーされます。</span><span class="sxs-lookup"><span data-stu-id="fc928-153">The elements are copied to the <xref:System.Array> in the same order in which the enumerator of the <xref:System.Collections.Specialized.StringCollection> iterates through the <xref:System.Collections.Specialized.StringCollection>.</span></span>  
  
 <span data-ttu-id="fc928-154">このメソッドは O(`n`) 操作で、`n`は <xref:System.Collections.Specialized.StringCollection.Count%2A> です。</span><span class="sxs-lookup"><span data-stu-id="fc928-154">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringCollection.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc928-155">次のコード例では<xref:System.Collections.Specialized.StringCollection> 、を配列にコピーします。</span><span class="sxs-lookup"><span data-stu-id="fc928-155">The following code example copies a <xref:System.Collections.Specialized.StringCollection> to an array.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.StringCollectionCopyTo#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionCopyTo/CPP/stringcollectioncopyto.cpp#1)]
 [!code-csharp[System.Collections.Specialized.StringCollectionCopyTo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionCopyTo/CS/stringcollectioncopyto.cs#1)]
 [!code-vb[System.Collections.Specialized.StringCollectionCopyTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionCopyTo/VB/stringcollectioncopyto.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fc928-156"><paramref name="array" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="fc928-156"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="fc928-157"><paramref name="index" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="fc928-157"><paramref name="index" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fc928-158"><paramref name="array" /> が多次元です。</span><span class="sxs-lookup"><span data-stu-id="fc928-158"><paramref name="array" /> is multidimensional.</span></span>  
  
<span data-ttu-id="fc928-159">- または -</span><span class="sxs-lookup"><span data-stu-id="fc928-159">-or-</span></span> 
<span data-ttu-id="fc928-160">コピー元の <see cref="T:System.Collections.Specialized.StringCollection" /> の要素数が、コピー先 <paramref name="array" /> の <paramref name="index" /> から最後までの使用可能領域を超えています。</span><span class="sxs-lookup"><span data-stu-id="fc928-160">The number of elements in the source <see cref="T:System.Collections.Specialized.StringCollection" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="fc928-161">コピー元の <see cref="T:System.Collections.Specialized.StringCollection" /> の型をコピー先の <paramref name="array" /> の型に自動的にキャストすることはできません。</span><span class="sxs-lookup"><span data-stu-id="fc928-161">The type of the source <see cref="T:System.Collections.Specialized.StringCollection" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span></span></exception>
        <altmember cref="T:System.Array" />
        <altmember cref="M:System.Collections.Specialized.StringCollection.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Specialized.StringCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Collections.Specialized.StringCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc928-162"><see cref="T:System.Collections.Specialized.StringCollection" /> に格納されている文字列の数を取得します。</span><span class="sxs-lookup"><span data-stu-id="fc928-162">Gets the number of strings contained in the <see cref="T:System.Collections.Specialized.StringCollection" />.</span></span></summary>
        <value><span data-ttu-id="fc928-163"><see cref="T:System.Collections.Specialized.StringCollection" /> に格納されている文字列の数。</span><span class="sxs-lookup"><span data-stu-id="fc928-163">The number of strings contained in the <see cref="T:System.Collections.Specialized.StringCollection" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc928-164">このプロパティ値を取得することは、O(1) 操作になります。</span><span class="sxs-lookup"><span data-stu-id="fc928-164">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc928-165">次のコード例では<xref:System.Collections.Specialized.StringCollection> 、を配列にコピーします。</span><span class="sxs-lookup"><span data-stu-id="fc928-165">The following code example copies a <xref:System.Collections.Specialized.StringCollection> to an array.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.StringCollectionCopyTo#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionCopyTo/CPP/stringcollectioncopyto.cpp#1)]
 [!code-csharp[System.Collections.Specialized.StringCollectionCopyTo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionCopyTo/CS/stringcollectioncopyto.cs#1)]
 [!code-vb[System.Collections.Specialized.StringCollectionCopyTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionCopyTo/VB/stringcollectioncopyto.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.StringEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Specialized.StringEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.StringCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As StringEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Specialized::StringEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; System.Collections.Specialized.StringEnumerator" Usage="stringCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fc928-166"><see cref="T:System.Collections.Specialized.StringEnumerator" /> を反復処理する <see cref="T:System.Collections.Specialized.StringCollection" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="fc928-166">Returns a <see cref="T:System.Collections.Specialized.StringEnumerator" /> that iterates through the <see cref="T:System.Collections.Specialized.StringCollection" />.</span></span></summary>
        <returns><span data-ttu-id="fc928-167"><see cref="T:System.Collections.Specialized.StringEnumerator" /> の <see cref="T:System.Collections.Specialized.StringCollection" />。</span><span class="sxs-lookup"><span data-stu-id="fc928-167">A <see cref="T:System.Collections.Specialized.StringEnumerator" /> for the <see cref="T:System.Collections.Specialized.StringCollection" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc928-168">[Visual Basic、 C#]</span><span class="sxs-lookup"><span data-stu-id="fc928-168">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="fc928-169">C# 言語の `foreach` ステートメント (Visual Basic の場合は `for each`) を使用することで列挙子の複雑さを回避できます。</span><span class="sxs-lookup"><span data-stu-id="fc928-169">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="fc928-170">したがって、列挙子を直接操作するのではなく、`foreach` を使用することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="fc928-170">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="fc928-171">列挙子を使用すると、コレクション内のデータを読み取ることができますが、基になるコレクションを変更することはできません。</span><span class="sxs-lookup"><span data-stu-id="fc928-171">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="fc928-172">最初に、列挙子はコレクション内の 1 番目の要素の前に位置付けられます。</span><span class="sxs-lookup"><span data-stu-id="fc928-172">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="fc928-173"><xref:System.Collections.Specialized.StringEnumerator.Reset%2A> を実行した場合も、列挙子はこの位置に戻されます。</span><span class="sxs-lookup"><span data-stu-id="fc928-173"><xref:System.Collections.Specialized.StringEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="fc928-174">この位置では、<xref:System.Collections.Specialized.StringEnumerator.Current%2A> は未定義です。</span><span class="sxs-lookup"><span data-stu-id="fc928-174">At this position, <xref:System.Collections.Specialized.StringEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="fc928-175">そのため、<xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> の値を読み取る前に、<xref:System.Collections.Specialized.StringEnumerator.Current%2A> を呼び出して列挙子をコレクションの最初の要素に進める必要があります。</span><span class="sxs-lookup"><span data-stu-id="fc928-175">Therefore, you must call <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Specialized.StringEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="fc928-176"><xref:System.Collections.Specialized.StringEnumerator.Current%2A> は、<xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> または <xref:System.Collections.Specialized.StringEnumerator.Reset%2A> が呼び出されるまでは同じオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="fc928-176"><xref:System.Collections.Specialized.StringEnumerator.Current%2A> returns the same object until either <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> or <xref:System.Collections.Specialized.StringEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="fc928-177"><xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> は、<xref:System.Collections.Specialized.StringEnumerator.Current%2A> を次の要素に設定します。</span><span class="sxs-lookup"><span data-stu-id="fc928-177"><xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> sets <xref:System.Collections.Specialized.StringEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="fc928-178"><xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> がコレクションの末尾を通過した場合、列挙子がコレクション内の最後の要素の後に配置され、<xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> は `false` を返します。</span><span class="sxs-lookup"><span data-stu-id="fc928-178">If <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="fc928-179">列挙子がこの位置にある場合、後続の <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> 呼び出しも `false` を返します。</span><span class="sxs-lookup"><span data-stu-id="fc928-179">When the enumerator is at this position, subsequent calls to <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="fc928-180">の最後の呼び出し<xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>が返さ`false`れた場合、 <xref:System.Collections.Specialized.StringEnumerator.Current%2A>が未定義になります。</span><span class="sxs-lookup"><span data-stu-id="fc928-180">If the last call to <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.Specialized.StringEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="fc928-181"><xref:System.Collections.Specialized.StringEnumerator.Current%2A> をコレクションの最初の要素にもう一度設定するには、<xref:System.Collections.Specialized.StringEnumerator.Reset%2A> を呼び出してから <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="fc928-181">To set <xref:System.Collections.Specialized.StringEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.Specialized.StringEnumerator.Reset%2A> followed by <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="fc928-182">コレクションが変更されない限り、列挙子は有効です。</span><span class="sxs-lookup"><span data-stu-id="fc928-182">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="fc928-183">コレクションに対して変更 (要素の追加、変更、削除など) が行われると、列挙子は回復不可能な無効状態になり、その動作は未定義になります。</span><span class="sxs-lookup"><span data-stu-id="fc928-183">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="fc928-184">列挙子には、コレクションへの排他アクセスがありません。したがって、コレクションの列挙処理は本質的にスレッド セーフな処理ではありません。</span><span class="sxs-lookup"><span data-stu-id="fc928-184">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread safe procedure.</span></span>  <span data-ttu-id="fc928-185">列挙処理でスレッド セーフを確保するために、列挙処理が終わるまでコレクションをロックできます。</span><span class="sxs-lookup"><span data-stu-id="fc928-185">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="fc928-186">コレクションに対し複数のスレッドがアクセスして読み取りや書き込みを行うことができるようにするには、独自に同期化を実装する必要があります。</span><span class="sxs-lookup"><span data-stu-id="fc928-186">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="fc928-187">このメソッドは、O(1) 操作です。</span><span class="sxs-lookup"><span data-stu-id="fc928-187">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Specialized.StringEnumerator" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.StringCollection.IndexOf(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : string -&gt; int" Usage="stringCollection.IndexOf value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="fc928-188">検索される文字列。</span><span class="sxs-lookup"><span data-stu-id="fc928-188">The string to locate.</span></span> <span data-ttu-id="fc928-189">値として <see langword="null" /> を指定できます。</span><span class="sxs-lookup"><span data-stu-id="fc928-189">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="fc928-190">指定した文字列を検索し、<see cref="T:System.Collections.Specialized.StringCollection" /> 内でその文字列が最初に見つかった位置の 0 から始まるインデックスを返します。</span><span class="sxs-lookup"><span data-stu-id="fc928-190">Searches for the specified string and returns the zero-based index of the first occurrence within the <see cref="T:System.Collections.Specialized.StringCollection" />.</span></span></summary>
        <returns><span data-ttu-id="fc928-191"><see cref="T:System.Collections.Specialized.StringCollection" /> 内で <paramref name="value" /> が見つかった場合は、最初に見つかった位置の 0 から始まるインデックス。それ以外の場合は -1。</span><span class="sxs-lookup"><span data-stu-id="fc928-191">The zero-based index of the first occurrence of <paramref name="value" /> in the <see cref="T:System.Collections.Specialized.StringCollection" />, if found; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc928-192">このメソッドは、を呼び<xref:System.Object.Equals%2A?displayProperty=nameWithType>出すことによって等価性を判断します。</span><span class="sxs-lookup"><span data-stu-id="fc928-192">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="fc928-193">文字列比較では大文字と小文字が区別されます。</span><span class="sxs-lookup"><span data-stu-id="fc928-193">String comparisons are case-sensitive.</span></span>  
  
 <span data-ttu-id="fc928-194">このメソッドは、線形検索を実行します。したがって、このメソッドは O (`n`) 演算です。 `n`ここ<xref:System.Collections.Specialized.StringCollection.Count%2A>で、はです。</span><span class="sxs-lookup"><span data-stu-id="fc928-194">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringCollection.Count%2A>.</span></span>  
  
 <span data-ttu-id="fc928-195">.NET Framework 2.0 以降では、このメソッドは、コレクションのオブジェクト<xref:System.Object.Equals%2A>と<xref:System.IComparable.CompareTo%2A>メソッド`item`を使用して、項目が存在するかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="fc928-195">Starting with the .NET Framework 2.0, this method uses the collection's objects' <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="fc928-196">以前のバージョンの .NET Framework では、この決定は、コレクション内の<xref:System.Object.Equals%2A>オブジェクト<xref:System.IComparable.CompareTo%2A>の`item`パラメーターのメソッドとメソッドを使用して行われていました。</span><span class="sxs-lookup"><span data-stu-id="fc928-196">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc928-197">次のコード例では<xref:System.Collections.Specialized.StringCollection> 、で要素を検索します。</span><span class="sxs-lookup"><span data-stu-id="fc928-197">The following code example searches the <xref:System.Collections.Specialized.StringCollection> for an element.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.StringCollectionContains#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionContains/CPP/stringcollectioncontains.cpp#1)]
 [!code-csharp[System.Collections.Specialized.StringCollectionContains#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionContains/CS/stringcollectioncontains.cs#1)]
 [!code-vb[System.Collections.Specialized.StringCollectionContains#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionContains/VB/stringcollectioncontains.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Specialized.StringCollection.Contains(System.String)" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations.md"><span data-ttu-id="fc928-198">カルチャを認識しない文字列操作の実行</span><span class="sxs-lookup"><span data-stu-id="fc928-198">Performing Culture-Insensitive String Operations</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.StringCollection.Insert(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * string -&gt; unit" Usage="stringCollection.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="fc928-199"><paramref name="value" /> が挿入される位置の 0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="fc928-199">The zero-based index at which <paramref name="value" /> is inserted.</span></span></param>
        <param name="value"><span data-ttu-id="fc928-200">挿入する文字列。</span><span class="sxs-lookup"><span data-stu-id="fc928-200">The string to insert.</span></span> <span data-ttu-id="fc928-201">値として <see langword="null" /> を指定できます。</span><span class="sxs-lookup"><span data-stu-id="fc928-201">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="fc928-202"><see cref="T:System.Collections.Specialized.StringCollection" /> 内の指定したインデックス位置に、文字列を挿入します。</span><span class="sxs-lookup"><span data-stu-id="fc928-202">Inserts a string into the <see cref="T:System.Collections.Specialized.StringCollection" /> at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc928-203">で<xref:System.Collections.Specialized.StringCollection>は、重複する文字列を使用できます。</span><span class="sxs-lookup"><span data-stu-id="fc928-203">Duplicate strings are allowed in <xref:System.Collections.Specialized.StringCollection>.</span></span>  
  
 <span data-ttu-id="fc928-204">が`index`に<xref:System.Collections.Specialized.StringCollection.Count%2A>等しい場合は`value` 、の<xref:System.Collections.Specialized.StringCollection>末尾にが追加されます。</span><span class="sxs-lookup"><span data-stu-id="fc928-204">If `index` is equal to <xref:System.Collections.Specialized.StringCollection.Count%2A>, `value` is added to the end of <xref:System.Collections.Specialized.StringCollection>.</span></span>  
  
 <span data-ttu-id="fc928-205">リストなどの連続する要素のコレクションでは、新しい要素を挿入するために、挿入位置より後にある要素の位置が繰り下げられます。</span><span class="sxs-lookup"><span data-stu-id="fc928-205">In collections of contiguous elements, such as lists, the elements that follow the insertion point move down to accommodate the new element.</span></span> <span data-ttu-id="fc928-206">コレクションにインデックスがある場合、移動した要素のインデックスも更新されます。</span><span class="sxs-lookup"><span data-stu-id="fc928-206">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="fc928-207">この動作は、要素が概念的にバケットにグループ化されているハッシュ テーブルなどのコレクションには適用されません。</span><span class="sxs-lookup"><span data-stu-id="fc928-207">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 <span data-ttu-id="fc928-208">このメソッドは O(`n`) 操作で、`n`は <xref:System.Collections.Specialized.StringCollection.Count%2A> です。</span><span class="sxs-lookup"><span data-stu-id="fc928-208">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringCollection.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc928-209">次のコード例では、 <xref:System.Collections.Specialized.StringCollection>に新しい要素を追加します。</span><span class="sxs-lookup"><span data-stu-id="fc928-209">The following code example adds new elements to the <xref:System.Collections.Specialized.StringCollection>.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.StringCollectionAdd#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionAdd/CPP/stringcollectionadd.cpp#1)]
 [!code-csharp[System.Collections.Specialized.StringCollectionAdd#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionAdd/CS/stringcollectionadd.cs#1)]
 [!code-vb[System.Collections.Specialized.StringCollectionAdd#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionAdd/VB/stringcollectionadd.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="fc928-210"><paramref name="index" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="fc928-210"><paramref name="index" /> is less than zero.</span></span>  
  
<span data-ttu-id="fc928-211">- または -</span><span class="sxs-lookup"><span data-stu-id="fc928-211">-or-</span></span> 
 <span data-ttu-id="fc928-212"><paramref name="index" /> が <see cref="P:System.Collections.Specialized.StringCollection.Count" /> より大きい。</span><span class="sxs-lookup"><span data-stu-id="fc928-212"><paramref name="index" /> greater than <see cref="P:System.Collections.Specialized.StringCollection.Count" />.</span></span></exception>
        <altmember cref="P:System.Collections.Specialized.StringCollection.Count" />
        <altmember cref="M:System.Collections.Specialized.StringCollection.Add(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Specialized.StringCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Collections.Specialized.StringCollection.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc928-213"><see cref="T:System.Collections.Specialized.StringCollection" /> が読み取り専用かどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="fc928-213">Gets a value indicating whether the <see cref="T:System.Collections.Specialized.StringCollection" /> is read-only.</span></span></summary>
        <value><span data-ttu-id="fc928-214">このプロパティは常に <see langword="false" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="fc928-214">This property always returns <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc928-215"><xref:System.Collections.Specialized.StringCollection>インターフェイスに必要なため、プロパティを<xref:System.Collections.Specialized.StringCollection.IsReadOnly%2A>実装します。 <xref:System.Collections.IList?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="fc928-215"><xref:System.Collections.Specialized.StringCollection> implements the <xref:System.Collections.Specialized.StringCollection.IsReadOnly%2A> property because it is required by the <xref:System.Collections.IList?displayProperty=nameWithType> interface.</span></span>  
  
 <span data-ttu-id="fc928-216">読み取り専用のコレクションでは、コレクション作成後に要素の追加、削除、または変更はできません。</span><span class="sxs-lookup"><span data-stu-id="fc928-216">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 <span data-ttu-id="fc928-217">読み取り専用のコレクションは、単純にコレクションを変更できないようにするラッパーを含むコレクションです。したがって、基になるコレクションに変更が加えられた場合、読み取り専用コレクションにはこれらの変更が反映されます。</span><span class="sxs-lookup"><span data-stu-id="fc928-217">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="fc928-218"><xref:System.Collections.Specialized.StringCollection>インスタンスは常に書き込み可能です。</span><span class="sxs-lookup"><span data-stu-id="fc928-218">A <xref:System.Collections.Specialized.StringCollection> instance is always writable.</span></span>  
  
 <span data-ttu-id="fc928-219">このプロパティ値を取得することは、O(1) 操作になります。</span><span class="sxs-lookup"><span data-stu-id="fc928-219">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Specialized.StringCollection.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Collections.Specialized.StringCollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc928-220"><see cref="T:System.Collections.Specialized.StringCollection" /> へのアクセスが同期されている (スレッド セーフである) かどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="fc928-220">Gets a value indicating whether access to the <see cref="T:System.Collections.Specialized.StringCollection" /> is synchronized (thread safe).</span></span></summary>
        <value><span data-ttu-id="fc928-221">このプロパティは常に <see langword="false" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="fc928-221">This property always returns <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc928-222"><xref:System.Collections.Specialized.StringCollection>インターフェイスに必要なため、プロパティを<xref:System.Collections.Specialized.StringCollection.IsSynchronized%2A>実装します。 <xref:System.Collections.ICollection></span><span class="sxs-lookup"><span data-stu-id="fc928-222"><xref:System.Collections.Specialized.StringCollection> implements the <xref:System.Collections.Specialized.StringCollection.IsSynchronized%2A> property because it is required by the <xref:System.Collections.ICollection> interface.</span></span>  
  
 <span data-ttu-id="fc928-223">コレクションの列挙は、本質的にスレッド セーフな手続きではありません。</span><span class="sxs-lookup"><span data-stu-id="fc928-223">Enumerating through a collection is intrinsically not a thread safe procedure.</span></span> <span data-ttu-id="fc928-224">コレクションの同期がとられている場合でも、別のスレッドによってそのコレクションを変更できるため、変更の結果として列挙子は例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="fc928-224">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="fc928-225">列挙処理を確実にスレッド セーフに行うには、列挙中にコレクションをロックするか、他のスレッドによって行われた変更によってスローされる例外をキャッチします。</span><span class="sxs-lookup"><span data-stu-id="fc928-225">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="fc928-226">次のコード例は、 <xref:System.Collections.Specialized.StringCollection.SyncRoot%2A>列挙体全体でを使用してコレクションをロックする方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="fc928-226">The following code example shows how to lock the collection using the <xref:System.Collections.Specialized.StringCollection.SyncRoot%2A> during the entire enumeration:</span></span>  
  
 [!code-cpp[System.Collections.Specialized.StringCollection2#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollection2/CPP/remarks.cpp#2)]
 [!code-csharp[System.Collections.Specialized.StringCollection2#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollection2/CS/remarks.cs#2)]
 [!code-vb[System.Collections.Specialized.StringCollection2#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollection2/VB/remarks.vb#2)]  
  
 <span data-ttu-id="fc928-227">このプロパティ値を取得することは、O(1) 操作になります。</span><span class="sxs-lookup"><span data-stu-id="fc928-227">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.Specialized.StringCollection.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public string this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Specialized.StringCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ default[int] { System::String ^ get(int index); void set(int index, System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : string with get, set" Usage="System.Collections.Specialized.StringCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="fc928-228">取得または設定するエントリの 0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="fc928-228">The zero-based index of the entry to get or set.</span></span></param>
        <summary><span data-ttu-id="fc928-229">指定したインデックスにある要素を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="fc928-229">Gets or sets the element at the specified index.</span></span></summary>
        <value><span data-ttu-id="fc928-230">指定したインデックス位置にある要素。</span><span class="sxs-lookup"><span data-stu-id="fc928-230">The element at the specified index.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc928-231">このプロパティでは、`myCollection[index]` という構文を使用して、コレクション内の特定の要素にアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="fc928-231">This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[index]`.</span></span>  
  
 <span data-ttu-id="fc928-232"><xref:System.Collections.Specialized.StringCollection>は`null` 、有効な値としてを受け入れ、重複する要素を許可します。</span><span class="sxs-lookup"><span data-stu-id="fc928-232"><xref:System.Collections.Specialized.StringCollection> accepts `null` as a valid value and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="fc928-233">このC#言語では[](~/docs/csharp/language-reference/keywords/this.md) 、 <xref:System.Collections.Specialized.StringCollection.Item%2A>プロパティを実装する代わりに、this キーワードを使用してインデクサーを定義します。</span><span class="sxs-lookup"><span data-stu-id="fc928-233">The C# language uses the [this](~/docs/csharp/language-reference/keywords/this.md) keyword to define the indexers instead of implementing the <xref:System.Collections.Specialized.StringCollection.Item%2A> property.</span></span> <span data-ttu-id="fc928-234">Visual Basic は<xref:System.Collections.Specialized.StringCollection.Item%2A> 、同じインデックス作成機能を提供する[既定のプロパティ](~/docs/visual-basic/language-reference/modifiers/default.md)としてを実装します。</span><span class="sxs-lookup"><span data-stu-id="fc928-234">Visual Basic implements <xref:System.Collections.Specialized.StringCollection.Item%2A> as a [default property](~/docs/visual-basic/language-reference/modifiers/default.md), which provides the same indexing functionality.</span></span>  
  
 <span data-ttu-id="fc928-235">このプロパティの値の取得は O (1) 操作です。プロパティの設定は、O (1) 操作でもあります。</span><span class="sxs-lookup"><span data-stu-id="fc928-235">Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="fc928-236"><paramref name="index" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="fc928-236"><paramref name="index" /> is less than zero.</span></span>  
  
<span data-ttu-id="fc928-237">- または -</span><span class="sxs-lookup"><span data-stu-id="fc928-237">-or-</span></span> 
 <span data-ttu-id="fc928-238"><paramref name="index" /> が <see cref="P:System.Collections.Specialized.StringCollection.Count" /> 以上になっています。</span><span class="sxs-lookup"><span data-stu-id="fc928-238"><paramref name="index" /> is equal to or greater than <see cref="P:System.Collections.Specialized.StringCollection.Count" />.</span></span></exception>
        <altmember cref="P:System.Collections.Specialized.StringCollection.Count" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.StringCollection.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.Remove : string -&gt; unit" Usage="stringCollection.Remove value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="fc928-239"><see cref="T:System.Collections.Specialized.StringCollection" /> から削除する文字列。</span><span class="sxs-lookup"><span data-stu-id="fc928-239">The string to remove from the <see cref="T:System.Collections.Specialized.StringCollection" />.</span></span> <span data-ttu-id="fc928-240">値として <see langword="null" /> を指定できます。</span><span class="sxs-lookup"><span data-stu-id="fc928-240">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="fc928-241"><see cref="T:System.Collections.Specialized.StringCollection" /> 内で最初に見つかった指定文字列を削除します。</span><span class="sxs-lookup"><span data-stu-id="fc928-241">Removes the first occurrence of a specific string from the <see cref="T:System.Collections.Specialized.StringCollection" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc928-242">で<xref:System.Collections.Specialized.StringCollection>は、重複する文字列を使用できます。</span><span class="sxs-lookup"><span data-stu-id="fc928-242">Duplicate strings are allowed in <xref:System.Collections.Specialized.StringCollection>.</span></span> <span data-ttu-id="fc928-243">最初のオカレンスだけが削除されます。</span><span class="sxs-lookup"><span data-stu-id="fc928-243">Only the first occurrence is removed.</span></span> <span data-ttu-id="fc928-244">指定した文字列の出現箇所をすべて削除`RemoveAt(IndexOf(value))`するに<xref:System.Collections.Specialized.StringCollection.IndexOf%2A>は、を繰り返し使用しますが、は-1 を返しません。</span><span class="sxs-lookup"><span data-stu-id="fc928-244">To remove all occurrences of the specified string, use `RemoveAt(IndexOf(value))` repeatedly while <xref:System.Collections.Specialized.StringCollection.IndexOf%2A> does not return -1.</span></span>  
  
 <span data-ttu-id="fc928-245">に<xref:System.Collections.Specialized.StringCollection>指定したオブジェクトが含まれてい<xref:System.Collections.Specialized.StringCollection>ない場合、は変更されません。</span><span class="sxs-lookup"><span data-stu-id="fc928-245">If the <xref:System.Collections.Specialized.StringCollection> does not contain the specified object, the <xref:System.Collections.Specialized.StringCollection> remains unchanged.</span></span> <span data-ttu-id="fc928-246">例外をスローすることはありません。</span><span class="sxs-lookup"><span data-stu-id="fc928-246">No exception is thrown.</span></span>  
  
 <span data-ttu-id="fc928-247">リストなどの連続する要素のコレクションでは、空白になった位置を埋めるために、削除された要素の後にある要素の位置が繰り上げられます。</span><span class="sxs-lookup"><span data-stu-id="fc928-247">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="fc928-248">コレクションにインデックスがある場合、移動した要素のインデックスも更新されます。</span><span class="sxs-lookup"><span data-stu-id="fc928-248">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="fc928-249">この動作は、要素が概念的にバケットにグループ化されているハッシュ テーブルなどのコレクションには適用されません。</span><span class="sxs-lookup"><span data-stu-id="fc928-249">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 <span data-ttu-id="fc928-250">このメソッドは、を呼び<xref:System.Object.Equals%2A?displayProperty=nameWithType>出すことによって等価性を判断します。</span><span class="sxs-lookup"><span data-stu-id="fc928-250">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="fc928-251">文字列比較では大文字と小文字が区別されます。</span><span class="sxs-lookup"><span data-stu-id="fc928-251">String comparisons are case-sensitive.</span></span>  
  
 <span data-ttu-id="fc928-252">このメソッドは、線形検索を実行します。したがって、このメソッドは O (`n`) 演算です。 `n`ここ<xref:System.Collections.Specialized.StringCollection.Count%2A>で、はです。</span><span class="sxs-lookup"><span data-stu-id="fc928-252">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringCollection.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc928-253">次のコード例では、 <xref:System.Collections.Specialized.StringCollection>から要素を削除します。</span><span class="sxs-lookup"><span data-stu-id="fc928-253">The following code example removes elements from the <xref:System.Collections.Specialized.StringCollection>.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.StringCollectionRemove#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionRemove/CPP/stringcollectionremove.cpp#1)]
 [!code-csharp[System.Collections.Specialized.StringCollectionRemove#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionRemove/CS/stringcollectionremove.cs#1)]
 [!code-vb[System.Collections.Specialized.StringCollectionRemove#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionRemove/VB/stringcollectionremove.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations.md"><span data-ttu-id="fc928-254">カルチャを認識しない文字列操作の実行</span><span class="sxs-lookup"><span data-stu-id="fc928-254">Performing Culture-Insensitive String Operations</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.StringCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="stringCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="fc928-255">削除する文字列の 0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="fc928-255">The zero-based index of the string to remove.</span></span></param>
        <summary><span data-ttu-id="fc928-256"><see cref="T:System.Collections.Specialized.StringCollection" /> 内の指定したインデックスにある文字列を削除します。</span><span class="sxs-lookup"><span data-stu-id="fc928-256">Removes the string at the specified index of the <see cref="T:System.Collections.Specialized.StringCollection" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc928-257">リストなどの連続する要素のコレクションでは、空白になった位置を埋めるために、削除された要素の後にある要素の位置が繰り上げられます。</span><span class="sxs-lookup"><span data-stu-id="fc928-257">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="fc928-258">コレクションにインデックスがある場合、移動した要素のインデックスも更新されます。</span><span class="sxs-lookup"><span data-stu-id="fc928-258">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="fc928-259">この動作は、要素が概念的にバケットにグループ化されているハッシュ テーブルなどのコレクションには適用されません。</span><span class="sxs-lookup"><span data-stu-id="fc928-259">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 <span data-ttu-id="fc928-260">このメソッドは O(`n`) 操作で、`n`は <xref:System.Collections.Specialized.StringCollection.Count%2A> です。</span><span class="sxs-lookup"><span data-stu-id="fc928-260">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringCollection.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc928-261">次のコード例では、 <xref:System.Collections.Specialized.StringCollection>から要素を削除します。</span><span class="sxs-lookup"><span data-stu-id="fc928-261">The following code example removes elements from the <xref:System.Collections.Specialized.StringCollection>.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.StringCollectionRemove#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionRemove/CPP/stringcollectionremove.cpp#1)]
 [!code-csharp[System.Collections.Specialized.StringCollectionRemove#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionRemove/CS/stringcollectionremove.cs#1)]
 [!code-vb[System.Collections.Specialized.StringCollectionRemove#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionRemove/VB/stringcollectionremove.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="fc928-262"><paramref name="index" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="fc928-262"><paramref name="index" /> is less than zero.</span></span>  
  
<span data-ttu-id="fc928-263">または</span><span class="sxs-lookup"><span data-stu-id="fc928-263">-or-</span></span> 
 <span data-ttu-id="fc928-264"><paramref name="index" /> が <see cref="P:System.Collections.Specialized.StringCollection.Count" /> 以上になっています。</span><span class="sxs-lookup"><span data-stu-id="fc928-264"><paramref name="index" /> is equal to or greater than <see cref="P:System.Collections.Specialized.StringCollection.Count" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Specialized.StringCollection.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Collections.Specialized.StringCollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc928-265"><see cref="T:System.Collections.Specialized.StringCollection" /> へのアクセスを同期するために使用できるオブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="fc928-265">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.Specialized.StringCollection" />.</span></span></summary>
        <value><span data-ttu-id="fc928-266"><see cref="T:System.Collections.Specialized.StringCollection" /> へのアクセスを同期するために使用できるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="fc928-266">An object that can be used to synchronize access to the <see cref="T:System.Collections.Specialized.StringCollection" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc928-267">派生クラスは、 <xref:System.Collections.Specialized.StringCollection> <xref:System.Collections.Specialized.StringCollection.SyncRoot%2A>プロパティを使用して、独自に同期されたバージョンのを提供できます。</span><span class="sxs-lookup"><span data-stu-id="fc928-267">Derived classes can provide their own synchronized version of the <xref:System.Collections.Specialized.StringCollection> using the <xref:System.Collections.Specialized.StringCollection.SyncRoot%2A> property.</span></span> <span data-ttu-id="fc928-268">同期コードは、で直接<xref:System.Collections.Specialized.StringCollection.SyncRoot%2A> <xref:System.Collections.Specialized.StringCollection>ではなく、 <xref:System.Collections.Specialized.StringCollection>のに対して操作を実行する必要があります。</span><span class="sxs-lookup"><span data-stu-id="fc928-268">The synchronizing code must perform operations on the <xref:System.Collections.Specialized.StringCollection.SyncRoot%2A> of the <xref:System.Collections.Specialized.StringCollection>, not directly on the <xref:System.Collections.Specialized.StringCollection>.</span></span> <span data-ttu-id="fc928-269">これにより、他のオブジェクトから派生したコレクションを適切に操作できるようになります。</span><span class="sxs-lookup"><span data-stu-id="fc928-269">This ensures proper operation of collections that are derived from other objects.</span></span> <span data-ttu-id="fc928-270">具体的には、 <xref:System.Collections.Specialized.StringCollection>オブジェクトを同時に変更している可能性のある他のスレッドとの適切な同期を維持します。</span><span class="sxs-lookup"><span data-stu-id="fc928-270">Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <xref:System.Collections.Specialized.StringCollection> object.</span></span>  
  
 <span data-ttu-id="fc928-271">コレクションの列挙は、本質的にスレッド セーフな手続きではありません。</span><span class="sxs-lookup"><span data-stu-id="fc928-271">Enumerating through a collection is intrinsically not a thread safe procedure.</span></span> <span data-ttu-id="fc928-272">コレクションの同期がとられている場合でも、別のスレッドによってそのコレクションを変更できるため、変更の結果として列挙子は例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="fc928-272">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="fc928-273">列挙処理を確実にスレッド セーフに行うには、列挙中にコレクションをロックするか、他のスレッドによって行われた変更によってスローされる例外をキャッチします。</span><span class="sxs-lookup"><span data-stu-id="fc928-273">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="fc928-274">次のコード例は、 <xref:System.Collections.Specialized.StringCollection.SyncRoot%2A>列挙体全体でを使用してコレクションをロックする方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="fc928-274">The following code example shows how to lock the collection using the <xref:System.Collections.Specialized.StringCollection.SyncRoot%2A> during the entire enumeration:</span></span>  
  
 [!code-cpp[System.Collections.Specialized.StringCollection2#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollection2/CPP/remarks.cpp#2)]
 [!code-csharp[System.Collections.Specialized.StringCollection2#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollection2/CS/remarks.cs#2)]
 [!code-vb[System.Collections.Specialized.StringCollection2#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollection2/VB/remarks.vb#2)]  
  
 <span data-ttu-id="fc928-275">このプロパティ値を取得することは、O(1) 操作になります。</span><span class="sxs-lookup"><span data-stu-id="fc928-275">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.Specialized.StringCollection.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.StringCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="fc928-276"><see cref="T:System.Array" /> から要素がコピーされる 1 次元の <see cref="T:System.Collections.Specialized.StringCollection" />。</span><span class="sxs-lookup"><span data-stu-id="fc928-276">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.Specialized.StringCollection" />.</span></span> <span data-ttu-id="fc928-277"><see cref="T:System.Array" /> には、0 から始まるインデックス番号が必要です。</span><span class="sxs-lookup"><span data-stu-id="fc928-277">The <see cref="T:System.Array" /> must have zero-based indexing.</span></span></param>
        <param name="index"><span data-ttu-id="fc928-278">コピーの開始位置とする <paramref name="array" /> のインデックス (0 から始まる)。</span><span class="sxs-lookup"><span data-stu-id="fc928-278">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="fc928-279"><see cref="T:System.Collections.Specialized.StringCollection" /> 全体を、互換性のある 1 次元の <see cref="T:System.Array" /> にコピーします。コピー操作は、コピー先の配列の指定したインデックスから始まる部分に行います。</span><span class="sxs-lookup"><span data-stu-id="fc928-279">Copies the entire <see cref="T:System.Collections.Specialized.StringCollection" /> to a compatible one-dimensional <see cref="T:System.Array" />, starting at the specified index of the target array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc928-280">指定された配列は、互換性のある型である必要があります。</span><span class="sxs-lookup"><span data-stu-id="fc928-280">The specified array must be of a compatible type.</span></span>  
  
 <span data-ttu-id="fc928-281">このメソッドは<xref:System.Array.Copy%2A?displayProperty=nameWithType> 、を使用して要素をコピーします。</span><span class="sxs-lookup"><span data-stu-id="fc928-281">This method uses <xref:System.Array.Copy%2A?displayProperty=nameWithType> to copy the elements.</span></span>  
  
 <span data-ttu-id="fc928-282">このメソッドは O(`n`) 操作で、`n`は <xref:System.Collections.Specialized.StringCollection.Count%2A> です。</span><span class="sxs-lookup"><span data-stu-id="fc928-282">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringCollection.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fc928-283"><paramref name="array" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="fc928-283"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="fc928-284"><paramref name="index" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="fc928-284"><paramref name="index" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fc928-285"><paramref name="array" /> が多次元です。</span><span class="sxs-lookup"><span data-stu-id="fc928-285"><paramref name="array" /> is multidimensional.</span></span>  
  
<span data-ttu-id="fc928-286">- または -</span><span class="sxs-lookup"><span data-stu-id="fc928-286">-or-</span></span> 
<span data-ttu-id="fc928-287">コピー元の <see cref="T:System.Collections.Specialized.StringCollection" /> の要素数が、コピー先 <paramref name="array" /> の <paramref name="index" /> から最後までの使用可能領域を超えています。</span><span class="sxs-lookup"><span data-stu-id="fc928-287">The number of elements in the source <see cref="T:System.Collections.Specialized.StringCollection" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="fc928-288">コピー元の <see cref="T:System.Collections.Specialized.StringCollection" /> の型をコピー先の <paramref name="array" /> の型に自動的にキャストすることはできません。</span><span class="sxs-lookup"><span data-stu-id="fc928-288">The type of the source <see cref="T:System.Collections.Specialized.StringCollection" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.StringCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fc928-289"><see cref="T:System.Collections.IEnumerator" /> を反復処理する <see cref="T:System.Collections.Specialized.StringCollection" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="fc928-289">Returns a <see cref="T:System.Collections.IEnumerator" /> that iterates through the <see cref="T:System.Collections.Specialized.StringCollection" />.</span></span></summary>
        <returns><span data-ttu-id="fc928-290"><see cref="T:System.Collections.IEnumerator" /> の <see cref="T:System.Collections.Specialized.StringCollection" />。</span><span class="sxs-lookup"><span data-stu-id="fc928-290">A <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Collections.Specialized.StringCollection" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc928-291">[Visual Basic、 C#]</span><span class="sxs-lookup"><span data-stu-id="fc928-291">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="fc928-292">C# 言語の `foreach` ステートメント (Visual Basic の場合は `for each`) を使用することで列挙子の複雑さを回避できます。</span><span class="sxs-lookup"><span data-stu-id="fc928-292">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="fc928-293">したがって、列挙子を直接操作するのではなく、`foreach` を使用することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="fc928-293">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="fc928-294">列挙子を使用すると、コレクション内のデータを読み取ることができますが、基になるコレクションを変更することはできません。</span><span class="sxs-lookup"><span data-stu-id="fc928-294">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="fc928-295">最初に、列挙子はコレクション内の 1 番目の要素の前に位置付けられます。</span><span class="sxs-lookup"><span data-stu-id="fc928-295">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="fc928-296"><xref:System.Collections.IEnumerator.Reset%2A> を実行した場合も、列挙子はこの位置に戻されます。</span><span class="sxs-lookup"><span data-stu-id="fc928-296"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span> <span data-ttu-id="fc928-297">この位置で <xref:System.Collections.IEnumerator.Current%2A> を呼び出すと、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="fc928-297">At this position, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="fc928-298">そのため、<xref:System.Collections.IEnumerator.MoveNext%2A> の値を読み取る前に、<xref:System.Collections.IEnumerator.Current%2A> を呼び出して列挙子をコレクションの最初の要素に進める必要があります。</span><span class="sxs-lookup"><span data-stu-id="fc928-298">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="fc928-299"><xref:System.Collections.IEnumerator.Current%2A> は、<xref:System.Collections.IEnumerator.MoveNext%2A> または <xref:System.Collections.IEnumerator.Reset%2A> が呼び出されるまでは同じオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="fc928-299"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="fc928-300"><xref:System.Collections.IEnumerator.MoveNext%2A> は、<xref:System.Collections.IEnumerator.Current%2A> を次の要素に設定します。</span><span class="sxs-lookup"><span data-stu-id="fc928-300"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="fc928-301"><xref:System.Collections.IEnumerator.MoveNext%2A> がコレクションの末尾を通過した場合、列挙子がコレクション内の最後の要素の後に配置され、<xref:System.Collections.IEnumerator.MoveNext%2A> は `false` を返します。</span><span class="sxs-lookup"><span data-stu-id="fc928-301">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="fc928-302">列挙子がこの位置にある場合、後続の <xref:System.Collections.IEnumerator.MoveNext%2A> 呼び出しも `false` を返します。</span><span class="sxs-lookup"><span data-stu-id="fc928-302">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="fc928-303">前回 <xref:System.Collections.IEnumerator.MoveNext%2A> を呼び出して `false` が返された場合に、<xref:System.Collections.IEnumerator.Current%2A> を呼び出すと例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="fc928-303">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="fc928-304"><xref:System.Collections.IEnumerator.Current%2A> をコレクションの最初の要素にもう一度設定するには、<xref:System.Collections.IEnumerator.Reset%2A> を呼び出してから <xref:System.Collections.IEnumerator.MoveNext%2A> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="fc928-304">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="fc928-305">コレクションが変更されない限り、列挙子は有効です。</span><span class="sxs-lookup"><span data-stu-id="fc928-305">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="fc928-306">要素の追加、変更、削除などの変更がコレクションに対して行われた場合、列挙子はなりに<xref:System.Collections.IEnumerator.MoveNext%2A>無効化され、次のまたは<xref:System.Collections.IEnumerator.Reset%2A>の呼び出しでがスロー <xref:System.InvalidOperationException>されます。</span><span class="sxs-lookup"><span data-stu-id="fc928-306">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="fc928-307"><xref:System.Collections.IEnumerator.MoveNext%2A> を呼び出してから <xref:System.Collections.IEnumerator.Current%2A> を呼び出すまでの間にコレクションが変更された場合、列挙子が既に無効になっていても、<xref:System.Collections.IEnumerator.Current%2A> は、設定されている要素を返します。</span><span class="sxs-lookup"><span data-stu-id="fc928-307">If the collection is modified between <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> returns the element that it is set to, even if the enumerator is already invalidated.</span></span>  
  
 <span data-ttu-id="fc928-308">列挙子には、コレクションへの排他アクセスがありません。したがって、コレクションの列挙処理は本質的にスレッド セーフな処理ではありません。</span><span class="sxs-lookup"><span data-stu-id="fc928-308">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread safe procedure.</span></span> <span data-ttu-id="fc928-309">コレクションの同期がとられている場合でも、別のスレッドによってそのコレクションを変更できるため、変更の結果として列挙子は例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="fc928-309">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="fc928-310">列挙処理を確実にスレッド セーフに行うには、列挙中にコレクションをロックするか、他のスレッドによって行われた変更によってスローされる例外をキャッチします。</span><span class="sxs-lookup"><span data-stu-id="fc928-310">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="fc928-311">このメソッドは、O(1) 操作です。</span><span class="sxs-lookup"><span data-stu-id="fc928-311">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Specialized.StringEnumerator" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.StringCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="fc928-312"><see cref="T:System.Object" /> の末尾に追加する <see cref="T:System.Collections.Specialized.StringCollection" />。</span><span class="sxs-lookup"><span data-stu-id="fc928-312">The <see cref="T:System.Object" /> to be added to the end of the <see cref="T:System.Collections.Specialized.StringCollection" />.</span></span> <span data-ttu-id="fc928-313">値として <see langword="null" /> を指定できます。</span><span class="sxs-lookup"><span data-stu-id="fc928-313">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="fc928-314"><see cref="T:System.Collections.Specialized.StringCollection" /> の末尾にオブジェクトを追加します。</span><span class="sxs-lookup"><span data-stu-id="fc928-314">Adds an object to the end of the <see cref="T:System.Collections.Specialized.StringCollection" />.</span></span></summary>
        <returns><span data-ttu-id="fc928-315"><paramref name="value" /> が追加された位置の <see cref="T:System.Collections.Specialized.StringCollection" /> インデックス。</span><span class="sxs-lookup"><span data-stu-id="fc928-315">The <see cref="T:System.Collections.Specialized.StringCollection" /> index at which the <paramref name="value" /> has been added.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc928-316"><xref:System.Collections.Specialized.StringCollection>は`null` 、有効な値としてを受け入れ、重複する要素を許可します。</span><span class="sxs-lookup"><span data-stu-id="fc928-316"><xref:System.Collections.Specialized.StringCollection> accepts `null` as a valid value and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="fc928-317">が<xref:System.Collections.Specialized.StringCollection.Count%2A>既に容量に等しい場合、の容量<xref:System.Collections.Specialized.StringCollection>は、内部配列が自動的に再割り当てされ、新しい要素が追加される前に既存の要素が新しい配列にコピーされます。</span><span class="sxs-lookup"><span data-stu-id="fc928-317">If <xref:System.Collections.Specialized.StringCollection.Count%2A> already equals the capacity, the capacity of the <xref:System.Collections.Specialized.StringCollection> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</span></span>  
  
 <span data-ttu-id="fc928-318">が<xref:System.Collections.Specialized.StringCollection.Count%2A>容量より小さい場合、このメソッドは O (1) 操作になります。</span><span class="sxs-lookup"><span data-stu-id="fc928-318">If <xref:System.Collections.Specialized.StringCollection.Count%2A> is less than the capacity, this method is an O(1) operation.</span></span> <span data-ttu-id="fc928-319">新しい要素を格納するために容量を増やす必要がある場合、このメソッドは O`n`() 操作に`n`なり<xref:System.Collections.Specialized.StringCollection.Count%2A>ます。ここで、はです。</span><span class="sxs-lookup"><span data-stu-id="fc928-319">If the capacity needs to be increased to accommodate the new element, this method becomes an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringCollection.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fc928-320"><see cref="T:System.Collections.Specialized.StringCollection" /> は読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="fc928-320">The <see cref="T:System.Collections.Specialized.StringCollection" /> is read-only.</span></span>  
  
<span data-ttu-id="fc928-321">- または -</span><span class="sxs-lookup"><span data-stu-id="fc928-321">-or-</span></span> 
<span data-ttu-id="fc928-322"><see cref="T:System.Collections.Specialized.StringCollection" /> は固定サイズです。</span><span class="sxs-lookup"><span data-stu-id="fc928-322">The <see cref="T:System.Collections.Specialized.StringCollection" /> has a fixed size.</span></span></exception>
        <altmember cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />
        <altmember cref="M:System.Collections.IList.Remove(System.Object)" />
        <altmember cref="P:System.Collections.Specialized.StringCollection.Count" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.StringCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="fc928-323"><see cref="T:System.Collections.Specialized.StringCollection" /> 内で検索される <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="fc928-323">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.Specialized.StringCollection" />.</span></span> <span data-ttu-id="fc928-324">値として <see langword="null" /> を指定できます。</span><span class="sxs-lookup"><span data-stu-id="fc928-324">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="fc928-325">ある要素が <see cref="T:System.Collections.Specialized.StringCollection" /> 内に存在するかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="fc928-325">Determines whether an element is in the <see cref="T:System.Collections.Specialized.StringCollection" />.</span></span></summary>
        <returns><span data-ttu-id="fc928-326"><see langword="true" /> が <paramref name="value" /> に存在する場合は <see cref="T:System.Collections.Specialized.StringCollection" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fc928-326"><see langword="true" /> if <paramref name="value" /> is found in the <see cref="T:System.Collections.Specialized.StringCollection" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc928-327">このメソッドは、を呼び<xref:System.Object.Equals%2A?displayProperty=nameWithType>出すことによって等価性を判断します。</span><span class="sxs-lookup"><span data-stu-id="fc928-327">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="fc928-328">このメソッドは、線形検索を実行します。したがって、このメソッドは O (`n`) 演算です。 `n`ここ<xref:System.Collections.Specialized.StringCollection.Count%2A>で、はです。</span><span class="sxs-lookup"><span data-stu-id="fc928-328">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringCollection.Count%2A>.</span></span>  
  
 <span data-ttu-id="fc928-329">.NET Framework 2.0 以降では、このメソッドは、コレクションのオブジェクト<xref:System.Object.Equals%2A>と<xref:System.IComparable.CompareTo%2A>メソッド`item`を使用して、項目が存在するかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="fc928-329">Starting with the .NET Framework 2.0, this method uses the collection's objects' <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="fc928-330">以前のバージョンの .NET Framework では、この決定は、コレクション内の<xref:System.Object.Equals%2A>オブジェクト<xref:System.IComparable.CompareTo%2A>の`item`パラメーターのメソッドとメソッドを使用して行われていました。</span><span class="sxs-lookup"><span data-stu-id="fc928-330">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.IList.IndexOf(System.Object)" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations.md"><span data-ttu-id="fc928-331">カルチャを認識しない文字列操作の実行</span><span class="sxs-lookup"><span data-stu-id="fc928-331">Performing Culture-Insensitive String Operations</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.StringCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="fc928-332"><see cref="T:System.Collections.Specialized.StringCollection" /> 内で検索される <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="fc928-332">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.Specialized.StringCollection" />.</span></span> <span data-ttu-id="fc928-333">値として <see langword="null" /> を指定できます。</span><span class="sxs-lookup"><span data-stu-id="fc928-333">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="fc928-334">指定した <see cref="T:System.Object" /> を検索し、<see cref="T:System.Collections.Specialized.StringCollection" /> 全体内で最初に見つかった位置の 0 から始まるインデックスを返します。</span><span class="sxs-lookup"><span data-stu-id="fc928-334">Searches for the specified <see cref="T:System.Object" /> and returns the zero-based index of the first occurrence within the entire <see cref="T:System.Collections.Specialized.StringCollection" />.</span></span></summary>
        <returns><span data-ttu-id="fc928-335"><see cref="T:System.Collections.Specialized.StringCollection" /> 全体を対象に <paramref name="value" /> を検索し、見つかった場合は、インデックス番号の最も小さい要素の 0 から始まるインデックス番号、それ以外の場合は -1。</span><span class="sxs-lookup"><span data-stu-id="fc928-335">The zero-based index of the first occurrence of <paramref name="value" /> within the entire <see cref="T:System.Collections.Specialized.StringCollection" />, if found; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc928-336">は<xref:System.Collections.Specialized.StringCollection> 、最初の要素から最後の要素まで順に検索されます。</span><span class="sxs-lookup"><span data-stu-id="fc928-336">The <xref:System.Collections.Specialized.StringCollection> is searched forward starting at the first element and ending at the last element.</span></span>  
  
 <span data-ttu-id="fc928-337">このメソッドは、を呼び<xref:System.Object.Equals%2A?displayProperty=nameWithType>出すことによって等価性を判断します。</span><span class="sxs-lookup"><span data-stu-id="fc928-337">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="fc928-338">このメソッドは、線形検索を実行します。したがって、このメソッドは O (`n`) 演算です。 `n`ここ<xref:System.Collections.Specialized.StringCollection.Count%2A>で、はです。</span><span class="sxs-lookup"><span data-stu-id="fc928-338">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringCollection.Count%2A>.</span></span>  
  
 <span data-ttu-id="fc928-339">.NET Framework 2.0 以降では、このメソッドは、コレクションのオブジェクト<xref:System.Object.Equals%2A>と<xref:System.IComparable.CompareTo%2A>メソッド`item`を使用して、項目が存在するかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="fc928-339">Starting with the .NET Framework 2.0, this method uses the collection's objects' <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="fc928-340">以前のバージョンの .NET Framework では、この決定は、コレクション内の<xref:System.Object.Equals%2A>オブジェクト<xref:System.IComparable.CompareTo%2A>の`item`パラメーターのメソッドとメソッドを使用して行われていました。</span><span class="sxs-lookup"><span data-stu-id="fc928-340">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.IList.Contains(System.Object)" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations.md"><span data-ttu-id="fc928-341">カルチャを認識しない文字列操作の実行</span><span class="sxs-lookup"><span data-stu-id="fc928-341">Performing Culture-Insensitive String Operations</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.StringCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="fc928-342"><paramref name="value" /> を挿入する位置の、0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="fc928-342">The zero-based index at which <paramref name="value" /> should be inserted.</span></span></param>
        <param name="value"><span data-ttu-id="fc928-343">挿入する <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="fc928-343">The <see cref="T:System.Object" /> to insert.</span></span> <span data-ttu-id="fc928-344">値として <see langword="null" /> を指定できます。</span><span class="sxs-lookup"><span data-stu-id="fc928-344">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="fc928-345"><see cref="T:System.Collections.Specialized.StringCollection" /> 内の指定したインデックスの位置に要素を挿入します。</span><span class="sxs-lookup"><span data-stu-id="fc928-345">Inserts an element into the <see cref="T:System.Collections.Specialized.StringCollection" /> at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc928-346">が<xref:System.Collections.Specialized.StringCollection.Count%2A>既に容量に等しい場合、の容量<xref:System.Collections.Specialized.StringCollection>は、内部配列が自動的に再割り当てされ、新しい要素が追加される前に既存の要素が新しい配列にコピーされます。</span><span class="sxs-lookup"><span data-stu-id="fc928-346">If <xref:System.Collections.Specialized.StringCollection.Count%2A> already equals the capacity, the capacity of the <xref:System.Collections.Specialized.StringCollection> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</span></span>  
  
 <span data-ttu-id="fc928-347">が`index`に<xref:System.Collections.Specialized.StringCollection.Count%2A>等しい場合は`value` 、の<xref:System.Collections.Specialized.StringCollection>末尾にが追加されます。</span><span class="sxs-lookup"><span data-stu-id="fc928-347">If `index` is equal to <xref:System.Collections.Specialized.StringCollection.Count%2A>, `value` is added to the end of <xref:System.Collections.Specialized.StringCollection>.</span></span>  
  
 <span data-ttu-id="fc928-348">リストなどの連続する要素のコレクションでは、新しい要素を挿入するために、挿入位置より後にある要素の位置が繰り下げられます。</span><span class="sxs-lookup"><span data-stu-id="fc928-348">In collections of contiguous elements, such as lists, the elements that follow the insertion point move down to accommodate the new element.</span></span> <span data-ttu-id="fc928-349">コレクションにインデックスがある場合、移動した要素のインデックスも更新されます。</span><span class="sxs-lookup"><span data-stu-id="fc928-349">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="fc928-350">この動作は、要素が概念的にバケットにグループ化されているハッシュ テーブルなどのコレクションには適用されません。</span><span class="sxs-lookup"><span data-stu-id="fc928-350">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 <span data-ttu-id="fc928-351">このメソッドは O(`n`) 操作で、`n`は <xref:System.Collections.Specialized.StringCollection.Count%2A> です。</span><span class="sxs-lookup"><span data-stu-id="fc928-351">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringCollection.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="fc928-352"><paramref name="index" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="fc928-352"><paramref name="index" /> is less than zero.</span></span>  
  
<span data-ttu-id="fc928-353">または</span><span class="sxs-lookup"><span data-stu-id="fc928-353">-or-</span></span> 
 <span data-ttu-id="fc928-354"><paramref name="index" /> が <see cref="P:System.Collections.Specialized.StringCollection.Count" /> より大きくなっています。</span><span class="sxs-lookup"><span data-stu-id="fc928-354"><paramref name="index" /> is greater than <see cref="P:System.Collections.Specialized.StringCollection.Count" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fc928-355"><see cref="T:System.Collections.Specialized.StringCollection" /> は読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="fc928-355">The <see cref="T:System.Collections.Specialized.StringCollection" /> is read-only.</span></span>  
  
<span data-ttu-id="fc928-356">- または -</span><span class="sxs-lookup"><span data-stu-id="fc928-356">-or-</span></span> 
<span data-ttu-id="fc928-357"><see cref="T:System.Collections.Specialized.StringCollection" /> は固定サイズです。</span><span class="sxs-lookup"><span data-stu-id="fc928-357">The <see cref="T:System.Collections.Specialized.StringCollection" /> has a fixed size.</span></span></exception>
        <altmember cref="M:System.Collections.IList.Add(System.Object)" />
        <altmember cref="M:System.Collections.IList.Remove(System.Object)" />
        <altmember cref="P:System.Collections.Specialized.StringCollection.Count" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Specialized.StringCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc928-358"><see cref="T:System.Collections.Specialized.StringCollection" /> オブジェクトが固定サイズかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="fc928-358">Gets a value indicating whether the <see cref="T:System.Collections.Specialized.StringCollection" /> object has a fixed size.</span></span></summary>
        <value><span data-ttu-id="fc928-359"><see cref="T:System.Collections.Specialized.StringCollection" /> オブジェクトが固定サイズの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fc928-359"><see langword="true" /> if the <see cref="T:System.Collections.Specialized.StringCollection" /> object has a fixed size; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fc928-360">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="fc928-360">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc928-361">固定サイズのコレクションでは、コレクションの作成後に要素を追加または削除することはできませんが、既存の要素を変更することはできます。</span><span class="sxs-lookup"><span data-stu-id="fc928-361">A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but does allow the modification of existing elements.</span></span>  
  
 <span data-ttu-id="fc928-362">固定サイズのコレクションは、要素の追加と削除を防ぐラッパーを持つ単純なコレクションです。したがって、要素の追加や削除など、基になるコレクションに変更が加えられた場合、固定サイズのコレクションにはこれらの変更が反映されます。</span><span class="sxs-lookup"><span data-stu-id="fc928-362">A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</span></span>  
  
 <span data-ttu-id="fc928-363">このプロパティ値を取得することは、O(1) 操作になります。</span><span class="sxs-lookup"><span data-stu-id="fc928-363">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Specialized.StringCollection.System#Collections#IList#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc928-364"><see cref="T:System.Collections.Specialized.StringCollection" /> オブジェクトが読み取り専用かどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="fc928-364">Gets a value indicating whether the <see cref="T:System.Collections.Specialized.StringCollection" /> object is read-only.</span></span></summary>
        <value><span data-ttu-id="fc928-365"><see cref="T:System.Collections.Specialized.StringCollection" /> オブジェクトが読み取り専用の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fc928-365"><see langword="true" /> if the <see cref="T:System.Collections.Specialized.StringCollection" /> object is read-only; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fc928-366">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="fc928-366">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc928-367">読み取り専用のコレクションでは、コレクション作成後に要素の追加、削除、または変更はできません。</span><span class="sxs-lookup"><span data-stu-id="fc928-367">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 <span data-ttu-id="fc928-368">読み取り専用のコレクションは、単純にコレクションを変更できないようにするラッパーを含むコレクションです。したがって、基になるコレクションに変更が加えられた場合、読み取り専用コレクションにはこれらの変更が反映されます。</span><span class="sxs-lookup"><span data-stu-id="fc928-368">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="fc928-369">このプロパティ値を取得することは、O(1) 操作になります。</span><span class="sxs-lookup"><span data-stu-id="fc928-369">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Specialized.StringCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IList::Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="fc928-370">取得または設定する要素の、0 から始まるインデックス番号。</span><span class="sxs-lookup"><span data-stu-id="fc928-370">The zero-based index of the element to get or set.</span></span></param>
        <summary><span data-ttu-id="fc928-371">指定したインデックスにある要素を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="fc928-371">Gets or sets the element at the specified index.</span></span></summary>
        <value><span data-ttu-id="fc928-372">指定したインデックス位置にある要素。</span><span class="sxs-lookup"><span data-stu-id="fc928-372">The element at the specified index.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc928-373">このメソッドは、次の構文`myCollection[index]`を使用して、コレクション内の特定の要素にアクセスする機能を提供します。</span><span class="sxs-lookup"><span data-stu-id="fc928-373">This method provides the ability to access a specific element in the collection by using the following syntax: `myCollection[index]`.</span></span>  
  
 <span data-ttu-id="fc928-374">このC#言語では[](~/docs/csharp/language-reference/keywords/this.md) 、 <xref:System.Collections.Specialized.StringCollection.System%23Collections%23IList%23Item%2A>プロパティを実装する代わりに、this キーワードを使用してインデクサーを定義します。</span><span class="sxs-lookup"><span data-stu-id="fc928-374">The C# language uses the [this](~/docs/csharp/language-reference/keywords/this.md) keyword to define the indexers instead of implementing the <xref:System.Collections.Specialized.StringCollection.System%23Collections%23IList%23Item%2A> property.</span></span> <span data-ttu-id="fc928-375">Visual Basic は、<xref:System.Collections.Specialized.StringCollection.System%23Collections%23IList%23Item%2A> を既定のプロパティとして実装しており、同様のインデックス機能を提供します。</span><span class="sxs-lookup"><span data-stu-id="fc928-375">Visual Basic implements <xref:System.Collections.Specialized.StringCollection.System%23Collections%23IList%23Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 <span data-ttu-id="fc928-376"><xref:System.Collections.Specialized.StringCollection>は`null` 、有効な値としてを受け入れ、重複する要素を許可します。</span><span class="sxs-lookup"><span data-stu-id="fc928-376"><xref:System.Collections.Specialized.StringCollection> accepts `null` as a valid value and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="fc928-377">このプロパティの値の取得は O (1) 操作です。プロパティの設定は、O (1) 操作でもあります。</span><span class="sxs-lookup"><span data-stu-id="fc928-377">Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="fc928-378"><paramref name="index" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="fc928-378"><paramref name="index" /> is less than zero.</span></span>  
  
<span data-ttu-id="fc928-379">または</span><span class="sxs-lookup"><span data-stu-id="fc928-379">-or-</span></span> 
 <span data-ttu-id="fc928-380"><paramref name="index" /> が <see cref="P:System.Collections.Specialized.StringCollection.Count" /> 以上になっています。</span><span class="sxs-lookup"><span data-stu-id="fc928-380"><paramref name="index" /> is equal to or greater than <see cref="P:System.Collections.Specialized.StringCollection.Count" />.</span></span></exception>
        <altmember cref="P:System.Collections.Specialized.StringCollection.Count" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.StringCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="fc928-381"><see cref="T:System.Object" /> から削除する <see cref="T:System.Collections.Specialized.StringCollection" />。</span><span class="sxs-lookup"><span data-stu-id="fc928-381">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Collections.Specialized.StringCollection" />.</span></span> <span data-ttu-id="fc928-382">値として <see langword="null" /> を指定できます。</span><span class="sxs-lookup"><span data-stu-id="fc928-382">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="fc928-383">特定のオブジェクトが <see cref="T:System.Collections.Specialized.StringCollection" /> 内にあるときに、最初に出現したものを削除します。</span><span class="sxs-lookup"><span data-stu-id="fc928-383">Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Specialized.StringCollection" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc928-384">に<xref:System.Collections.Specialized.StringCollection>指定したオブジェクトが含まれてい<xref:System.Collections.Specialized.StringCollection>ない場合、は変更されません。</span><span class="sxs-lookup"><span data-stu-id="fc928-384">If the <xref:System.Collections.Specialized.StringCollection> does not contain the specified object, the <xref:System.Collections.Specialized.StringCollection> remains unchanged.</span></span> <span data-ttu-id="fc928-385">例外をスローすることはありません。</span><span class="sxs-lookup"><span data-stu-id="fc928-385">No exception is thrown.</span></span>  
  
 <span data-ttu-id="fc928-386">リストなどの連続する要素のコレクションでは、空白になった位置を埋めるために、削除された要素の後にある要素の位置が繰り上げられます。</span><span class="sxs-lookup"><span data-stu-id="fc928-386">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="fc928-387">コレクションにインデックスがある場合、移動した要素のインデックスも更新されます。</span><span class="sxs-lookup"><span data-stu-id="fc928-387">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="fc928-388">この動作は、要素が概念的にバケットにグループ化されているハッシュ テーブルなどのコレクションには適用されません。</span><span class="sxs-lookup"><span data-stu-id="fc928-388">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 <span data-ttu-id="fc928-389">このメソッドは、を呼び<xref:System.Object.Equals%2A?displayProperty=nameWithType>出すことによって等価性を判断します。</span><span class="sxs-lookup"><span data-stu-id="fc928-389">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="fc928-390">このメソッドは、線形検索を実行します。したがって、このメソッドは O (`n`) 演算です。 `n`ここ<xref:System.Collections.Specialized.StringCollection.Count%2A>で、はです。</span><span class="sxs-lookup"><span data-stu-id="fc928-390">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringCollection.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fc928-391"><see cref="T:System.Collections.Specialized.StringCollection" /> は読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="fc928-391">The <see cref="T:System.Collections.Specialized.StringCollection" /> is read-only.</span></span>  
  
<span data-ttu-id="fc928-392">- または -</span><span class="sxs-lookup"><span data-stu-id="fc928-392">-or-</span></span> 
<span data-ttu-id="fc928-393"><see cref="T:System.Collections.Specialized.StringCollection" /> は固定サイズです。</span><span class="sxs-lookup"><span data-stu-id="fc928-393">The <see cref="T:System.Collections.Specialized.StringCollection" /> has a fixed size.</span></span></exception>
        <altmember cref="M:System.Collections.IList.Add(System.Object)" />
        <altmember cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />
        <altmember cref="P:System.Collections.Specialized.StringCollection.Count" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations.md"><span data-ttu-id="fc928-394">カルチャを認識しない文字列操作の実行</span><span class="sxs-lookup"><span data-stu-id="fc928-394">Performing Culture-Insensitive String Operations</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
