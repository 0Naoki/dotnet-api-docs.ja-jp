<Type Name="AspNetWebSocket" FullName="System.Web.WebSockets.AspNetWebSocket">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ce786eeab65f79e5a02d0423e3a411f553228941" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36375478" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class AspNetWebSocket : System.Net.WebSockets.WebSocket" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AspNetWebSocket extends System.Net.WebSockets.WebSocket" />
  <TypeSignature Language="DocId" Value="T:System.Web.WebSockets.AspNetWebSocket" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AspNetWebSocket&#xA;Inherits WebSocket" />
  <TypeSignature Language="C++ CLI" Value="public ref class AspNetWebSocket sealed : System::Net::WebSockets::WebSocket" />
  <TypeSignature Language="F#" Value="type AspNetWebSocket = class&#xA;    inherit WebSocket" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.WebSockets.WebSocket</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="c8d98-101">Web サーバーと ASP.NET アプリケーション内のクライアントの間のリアルタイムの全二重接続を表します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="c8d98-101">Represents a real-time full-duplex connection between a web server and a client in an ASP.NET application.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public override void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebSockets.AspNetWebSocket.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Abort();" />
      <MemberSignature Language="F#" Value="abstract member Abort : unit -&gt; unit&#xA;override this.Abort : unit -&gt; unit" Usage="aspNetWebSocket.Abort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c8d98-102">
            <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> オブジェクトの保留中の I/O 操作をすべてキャンセルし、オブジェクトの状態を設定して、追加の I/O 操作を開始するためにそのオブジェクトを使用できないようにします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8d98-102">Cancels any pending I/O operations on the <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object and sets the state of the object so that it cannot be used to start additional I/O operations.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8d98-103">後に、<xref:System.Web.WebSockets.AspNetWebSocket.Abort%2A>メソッドが呼び出されて、プロパティとメソッドの I/O 操作は含まれませんがアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="c8d98-103">After the <xref:System.Web.WebSockets.AspNetWebSocket.Abort%2A> method has been called, you can still access properties and methods that do not involve I/O operations.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="c8d98-104">オブジェクトが既に破棄されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8d98-104">The object was previously disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CloseAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task CloseAsync (System.Net.WebSockets.WebSocketCloseStatus closeStatus, string statusDescription, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task CloseAsync(valuetype System.Net.WebSockets.WebSocketCloseStatus closeStatus, string statusDescription, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebSockets.AspNetWebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ CloseAsync(System::Net::WebSockets::WebSocketCloseStatus closeStatus, System::String ^ statusDescription, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="abstract member CloseAsync : System.Net.WebSockets.WebSocketCloseStatus * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.CloseAsync : System.Net.WebSockets.WebSocketCloseStatus * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="aspNetWebSocket.CloseAsync (closeStatus, statusDescription, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="closeStatus" Type="System.Net.WebSockets.WebSocketCloseStatus" />
        <Parameter Name="statusDescription" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="closeStatus">
          <span data-ttu-id="c8d98-105">閉じる操作のステータス コード。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8d98-105">The status code of the close operation.</span>
          </span>
        </param>
        <param name="statusDescription">
          <span data-ttu-id="c8d98-106">閉じる操作のステータス メッセージ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8d98-106">The status message of the close operation.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="c8d98-107">保留中の操作を取り消すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8d98-107">The object that cancels a pending operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c8d98-108">クライアントに非同期メッセージを送信して接続を閉じます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8d98-108">Sends an asynchronous message to a client to close the connection.</span>
          </span>
          <span data-ttu-id="c8d98-109">サーバーが接続を閉じる要求を開始する場合、メソッドは前に、クライアントが要求を確認するまで待機します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8d98-109">If the server initiates the request to close the connection, the method waits for the client to acknowledge the request before it returns.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c8d98-110">操作への参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8d98-110">A reference to the operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8d98-111">使用することができます、<xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A>と<xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A>クライアントによって開始され、サーバーによって開始される両方の要求を閉じるためのメソッド、<xref:System.Web.WebSockets.AspNetWebSocket>接続します。</span><span class="sxs-lookup"><span data-stu-id="c8d98-111">You can use the <xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A> and <xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A> methods for both client-initiated and server-initiated requests to close an <xref:System.Web.WebSockets.AspNetWebSocket> connection.</span></span> <span data-ttu-id="c8d98-112">2 つの方法は、同じ方法でクライアントによって開始される要求を処理します。 クライアントは、接続を閉じ、サーバーにメッセージを送信し、サーバーがこれらのメソッドの 1 つを呼び出すと、クライアントに受信確認を送信してとメソッドを返します。</span><span class="sxs-lookup"><span data-stu-id="c8d98-112">The two methods handle client-initiated requests in the same way: After the client sends a message to the server to close the connection, the server calls one of these methods and sends an acknowledgment to the client, and then the method returns.</span></span>  
  
 <span data-ttu-id="c8d98-113">サーバーによって開始される要求の 2 つのメソッドに動作が異なります。</span><span class="sxs-lookup"><span data-stu-id="c8d98-113">For server-initiated requests, the two methods work differently.</span></span> <span data-ttu-id="c8d98-114"><xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A>メソッド接続を閉じる、クライアントにメッセージを送信、応答を待って、を返します。</span><span class="sxs-lookup"><span data-stu-id="c8d98-114">The <xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A> method sends a message to the client to close the connection, waits for a response, and then returns.</span></span> <span data-ttu-id="c8d98-115">サーバーは、クライアントによって送信されるその他のデータには待機しません。</span><span class="sxs-lookup"><span data-stu-id="c8d98-115">The server does not wait for any additional data sent by the client.</span></span> <span data-ttu-id="c8d98-116">これに対し、<xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A>メソッドは、接続を閉じる、クライアントにメッセージを送信し、応答を待機することがなくを返します。</span><span class="sxs-lookup"><span data-stu-id="c8d98-116">In contrast, the <xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A> method sends a message to the client to close the connection and returns without waiting for a response.</span></span> <span data-ttu-id="c8d98-117">このメソッドが戻る呼び出すことができます、<xref:System.Web.WebSockets.AspNetWebSocket.ReceiveAsync%2A>メソッドおよび追加のデータまたはクライアントが送信する受信確認を処理します。</span><span class="sxs-lookup"><span data-stu-id="c8d98-117">After the method returns, you can call the <xref:System.Web.WebSockets.AspNetWebSocket.ReceiveAsync%2A> method and handle either additional data or the acknowledgment that the client sends.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="c8d98-118">
            <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> オブジェクトが既に破棄されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8d98-118">The <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object was previously disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c8d98-119">
            <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> オブジェクトは中止状態にあります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8d98-119">The <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object is in an aborted state.</span>
          </span>
          <span data-ttu-id="c8d98-120">または、送信操作を利用できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8d98-120">-or-  Sending operations are unavailable.</span>
          </span>
          <span data-ttu-id="c8d98-121">または、受信操作を利用できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8d98-121">-or-  Receiving operations are unavailable.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CloseOutputAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task CloseOutputAsync (System.Net.WebSockets.WebSocketCloseStatus closeStatus, string statusDescription, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task CloseOutputAsync(valuetype System.Net.WebSockets.WebSocketCloseStatus closeStatus, string statusDescription, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ CloseOutputAsync(System::Net::WebSockets::WebSocketCloseStatus closeStatus, System::String ^ statusDescription, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="abstract member CloseOutputAsync : System.Net.WebSockets.WebSocketCloseStatus * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.CloseOutputAsync : System.Net.WebSockets.WebSocketCloseStatus * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="aspNetWebSocket.CloseOutputAsync (closeStatus, statusDescription, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="closeStatus" Type="System.Net.WebSockets.WebSocketCloseStatus" />
        <Parameter Name="statusDescription" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="closeStatus">
          <span data-ttu-id="c8d98-122">閉じる操作のステータス コード。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8d98-122">The status code of the close operation.</span>
          </span>
        </param>
        <param name="statusDescription">
          <span data-ttu-id="c8d98-123">閉じる操作のステータス メッセージ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8d98-123">The status message of the close operation.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="c8d98-124">保留中の操作を取り消すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8d98-124">The object that cancels a pending operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c8d98-125">クライアントに非同期メッセージを送信して接続を閉じます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8d98-125">Sends an asynchronous message to a client to close the connection.</span>
          </span>
          <span data-ttu-id="c8d98-126">サーバーが接続を閉じる要求を開始する場合、メソッドは応答を待たずに戻ります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8d98-126">If the server initiates the request to close the connection, the method returns without waiting for a response.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c8d98-127">操作への参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8d98-127">A reference to the operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8d98-128">使用することができます、<xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A>と<xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A>クライアントによって開始され、サーバーによって開始される両方の要求を閉じるためのメソッド、<xref:System.Web.WebSockets.AspNetWebSocket>接続します。</span><span class="sxs-lookup"><span data-stu-id="c8d98-128">You can use the <xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A> and <xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A> methods for both client-initiated and server-initiated requests to close an <xref:System.Web.WebSockets.AspNetWebSocket> connection.</span></span> <span data-ttu-id="c8d98-129">2 つの方法は、同じ方法でクライアントによって開始される要求を処理します。 クライアントは、接続を閉じ、サーバーにメッセージを送信し、サーバーがこれらのメソッドの 1 つを呼び出すと、クライアントに受信確認を送信してとメソッドを返します。</span><span class="sxs-lookup"><span data-stu-id="c8d98-129">The two methods handle client-initiated requests in the same way: After the client sends a message to the server to close the connection, the server calls one of these methods and sends an acknowledgment to the client, and then the method returns.</span></span>  
  
 <span data-ttu-id="c8d98-130">サーバーによって開始される要求の 2 つのメソッドに動作が異なります。</span><span class="sxs-lookup"><span data-stu-id="c8d98-130">For server-initiated requests, the two methods work differently.</span></span> <span data-ttu-id="c8d98-131"><xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A>メソッド接続を閉じる、クライアントにメッセージを送信、応答を待って、を返します。</span><span class="sxs-lookup"><span data-stu-id="c8d98-131">The <xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A> method sends a message to the client to close the connection, waits for a response, and then returns.</span></span> <span data-ttu-id="c8d98-132">サーバーは、クライアントによって送信されるその他のデータには待機しません。</span><span class="sxs-lookup"><span data-stu-id="c8d98-132">The server does not wait for any additional data sent by the client.</span></span> <span data-ttu-id="c8d98-133">これに対し、<xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A>メソッドは、接続を閉じる、クライアントにメッセージを送信し、応答を待機することがなくを返します。</span><span class="sxs-lookup"><span data-stu-id="c8d98-133">In contrast, the <xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A> method sends a message to the client to close the connection and returns without waiting for a response.</span></span> <span data-ttu-id="c8d98-134">このメソッドが戻る呼び出すことができます、<xref:System.Web.WebSockets.AspNetWebSocket.ReceiveAsync%2A>メソッドおよび追加のデータまたはクライアントが送信する受信確認を処理します。</span><span class="sxs-lookup"><span data-stu-id="c8d98-134">After the method returns, you can call the <xref:System.Web.WebSockets.AspNetWebSocket.ReceiveAsync%2A> method and handle either additional data or the acknowledgment that the client sends.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="c8d98-135">オブジェクトが既に破棄されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8d98-135">The object was previously disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c8d98-136">
            <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> オブジェクトは中止状態にあります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8d98-136">The <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object is in an aborted state.</span>
          </span>
          <span data-ttu-id="c8d98-137">または、送信操作を利用できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8d98-137">-or-  Sending operations are unavailable.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CloseStatus">
      <MemberSignature Language="C#" Value="public override Nullable&lt;System.Net.WebSockets.WebSocketCloseStatus&gt; CloseStatus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.Net.WebSockets.WebSocketCloseStatus&gt; CloseStatus" />
      <MemberSignature Language="DocId" Value="P:System.Web.WebSockets.AspNetWebSocket.CloseStatus" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CloseStatus As Nullable(Of WebSocketCloseStatus)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Nullable&lt;System::Net::WebSockets::WebSocketCloseStatus&gt; CloseStatus { Nullable&lt;System::Net::WebSockets::WebSocketCloseStatus&gt; get(); };" />
      <MemberSignature Language="F#" Value="member this.CloseStatus : Nullable&lt;System.Net.WebSockets.WebSocketCloseStatus&gt;" Usage="System.Web.WebSockets.AspNetWebSocket.CloseStatus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Net.WebSockets.WebSocketCloseStatus&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c8d98-138">
            <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> オブジェクトが閉じられた理由を示すステータス コードを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8d98-138">Gets a status code that indicates why an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object was closed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c8d98-139">ステータス コード。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8d98-139">The status code.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="c8d98-140">オブジェクトが既に破棄されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8d98-140">The object was previously disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CloseStatusDescription">
      <MemberSignature Language="C#" Value="public override string CloseStatusDescription { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CloseStatusDescription" />
      <MemberSignature Language="DocId" Value="P:System.Web.WebSockets.AspNetWebSocket.CloseStatusDescription" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CloseStatusDescription As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CloseStatusDescription { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CloseStatusDescription : string" Usage="System.Web.WebSockets.AspNetWebSocket.CloseStatusDescription" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c8d98-141">
            <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> オブジェクトが閉じられた理由を説明するステータス メッセージを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8d98-141">Gets a status message that explains why an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object was closed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c8d98-142">ステータス メッセージ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8d98-142">The status message.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="c8d98-143">オブジェクトが既に破棄されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8d98-143">The object was previously disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public override void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebSockets.AspNetWebSocket.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="aspNetWebSocket.Dispose " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c8d98-144">
            <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> オブジェクトによって使われているすべてのリソースを解放します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8d98-144">Releases all resources used by an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8d98-145">ASP.NET を自動的に呼び出して、<xref:System.Web.WebSockets.AspNetWebSocket.Dispose%2A>メソッドを<xref:System.Web.WebSockets.AspNetWebSocket>まま、コードが完了した後に実行されているリソースを解放するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="c8d98-145">ASP.NET automatically calls the <xref:System.Web.WebSockets.AspNetWebSocket.Dispose%2A> method on a <xref:System.Web.WebSockets.AspNetWebSocket> object to release any resources that remain after your code has finished executing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;System.Net.WebSockets.WebSocketReceiveResult&gt; ReceiveAsync (ArraySegment&lt;byte&gt; buffer, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;class System.Net.WebSockets.WebSocketReceiveResult&gt; ReceiveAsync(valuetype System.ArraySegment`1&lt;unsigned int8&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebSockets.AspNetWebSocket.ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;System::Net::WebSockets::WebSocketReceiveResult ^&gt; ^ ReceiveAsync(ArraySegment&lt;System::Byte&gt; buffer, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="abstract member ReceiveAsync : ArraySegment&lt;byte&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Net.WebSockets.WebSocketReceiveResult&gt;&#xA;override this.ReceiveAsync : ArraySegment&lt;byte&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Net.WebSockets.WebSocketReceiveResult&gt;" Usage="aspNetWebSocket.ReceiveAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.WebSockets.WebSocketReceiveResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="c8d98-146">メッセージ データを格納している配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8d98-146">The array that contains the message data.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="c8d98-147">保留中の操作を取り消すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8d98-147">The object that cancels a pending operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c8d98-148">リモート クライアントから 1 つのメッセージ フラグメントを受け取ります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8d98-148">Receives a single message fragment from a remote client.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c8d98-149">メッセージ受信のタスクへの参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8d98-149">A reference to the task of receiving a message.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="c8d98-150">
            <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> オブジェクトが既に破棄されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8d98-150">The <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object was previously disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c8d98-151">
            <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> オブジェクトは中止状態にあります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8d98-151">The <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object is in an aborted state.</span>
          </span>
          <span data-ttu-id="c8d98-152">または、受信操作を利用できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8d98-152">-or-  Receiving operations are unavailable.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task SendAsync (ArraySegment&lt;byte&gt; buffer, System.Net.WebSockets.WebSocketMessageType messageType, bool endOfMessage, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task SendAsync(valuetype System.ArraySegment`1&lt;unsigned int8&gt; buffer, valuetype System.Net.WebSockets.WebSocketMessageType messageType, bool endOfMessage, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebSockets.AspNetWebSocket.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ SendAsync(ArraySegment&lt;System::Byte&gt; buffer, System::Net::WebSockets::WebSocketMessageType messageType, bool endOfMessage, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="abstract member SendAsync : ArraySegment&lt;byte&gt; * System.Net.WebSockets.WebSocketMessageType * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.SendAsync : ArraySegment&lt;byte&gt; * System.Net.WebSockets.WebSocketMessageType * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="aspNetWebSocket.SendAsync (buffer, messageType, endOfMessage, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="messageType" Type="System.Net.WebSockets.WebSocketMessageType" />
        <Parameter Name="endOfMessage" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="c8d98-153">メッセージ データを格納している配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8d98-153">The array that contains the message data.</span>
          </span>
        </param>
        <param name="messageType">
          <span data-ttu-id="c8d98-154">メッセージの型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8d98-154">The message type.</span>
          </span>
        </param>
        <param name="endOfMessage">
          <span data-ttu-id="c8d98-155">フラグメントがメッセージ全体の末尾である場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8d98-155">
              <see langword="true" /> to indicate that a fragment is the end of a complete message; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="c8d98-156">保留中の操作を取り消すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8d98-156">The object that cancels a pending operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c8d98-157">1 つのメッセージ フラグメントをリモート クライアントに送信します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8d98-157">Sends a single message fragment to a remote client.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c8d98-158">メッセージ送信のタスクへの参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8d98-158">A reference to the task of sending a message.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="c8d98-159">
            <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> オブジェクトは破棄されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8d98-159">The <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object is disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c8d98-160">
            <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> オブジェクトは中止状態にあります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8d98-160">The <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object is in an aborted state.</span>
          </span>
          <span data-ttu-id="c8d98-161">または、送信操作を利用できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8d98-161">-or-  Sending operations are unavailable.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public override System.Net.WebSockets.WebSocketState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.WebSockets.WebSocketState State" />
      <MemberSignature Language="DocId" Value="P:System.Web.WebSockets.AspNetWebSocket.State" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property State As WebSocketState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::WebSockets::WebSocketState State { System::Net::WebSockets::WebSocketState get(); };" />
      <MemberSignature Language="F#" Value="member this.State : System.Net.WebSockets.WebSocketState" Usage="System.Web.WebSockets.AspNetWebSocket.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebSockets.WebSocketState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c8d98-162">
            <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> オブジェクトの開いた状態または閉じた状態を示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8d98-162">Gets a value that indicates the open or closed state of an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c8d98-163">現在の状態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8d98-163">The current state.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="c8d98-164">オブジェクトが既に破棄されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8d98-164">The object was previously disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SubProtocol">
      <MemberSignature Language="C#" Value="public override string SubProtocol { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SubProtocol" />
      <MemberSignature Language="DocId" Value="P:System.Web.WebSockets.AspNetWebSocket.SubProtocol" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SubProtocol As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SubProtocol { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SubProtocol : string" Usage="System.Web.WebSockets.AspNetWebSocket.SubProtocol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c8d98-165">リモート クライアントとサーバーが <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> 接続を介したデータ交換に使用できるアプリケーション固有のプロトコルの名前を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8d98-165">Gets the name of an application-specific protocol that a remote client and a server can use to exchange data over an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> connection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c8d98-166">プロトコルの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8d98-166">The name of the protocol.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="c8d98-167">オブジェクトが既に破棄されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8d98-167">The object was previously disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>