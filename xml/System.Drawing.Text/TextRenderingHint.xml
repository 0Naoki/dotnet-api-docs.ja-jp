<Type Name="TextRenderingHint" FullName="System.Drawing.Text.TextRenderingHint">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b4cc6f332fe958e8879e2f434bf2aff602f614e7" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30407826" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum TextRenderingHint" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed TextRenderingHint extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Text.TextRenderingHint" />
  <TypeSignature Language="VB.NET" Value="Public Enum TextRenderingHint" />
  <TypeSignature Language="C++ CLI" Value="public enum class TextRenderingHint" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>テキスト レンダリングの品質を指定します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 品質の範囲はテキスト (、最も高速なパフォーマンスが最も低い品質) から ClearType テキスト (LCD ディスプレイで最高の品質) をアンチ エイリアス化テキスト (品質が向上、パフォーマンスが低下)。  
  
   
  
## Examples  
 使用を次のコード例に示します、<xref:System.Drawing.Graphics.TextRenderingHint%2A>と<xref:System.Drawing.Graphics.TextContrast%2A>プロパティおよび<xref:System.Drawing.Text.TextRenderingHint>列挙します。  
  
 この例は、Windows フォームで使用するよう設計されています。 フォームと呼び出しにコードを貼り付けます、`ChangeTextRenderingHintAndTextContrast`メソッドは、フォームの処理と<xref:System.Windows.Forms.Control.Paint>イベント、渡す`e`として<xref:System.Windows.Forms.PaintEventArgs>です。  
  
 [!code-cpp[System.Drawing.GraphicsProperties#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.GraphicsProperties/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.GraphicsProperties#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.GraphicsProperties/CS/form1.cs#5)]
 [!code-vb[System.Drawing.GraphicsProperties#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.GraphicsProperties/VB/form1.vb#5)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AntiAlias">
      <MemberSignature Language="C#" Value="AntiAlias" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Drawing.Text.TextRenderingHint AntiAlias = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Drawing.Text.TextRenderingHint.AntiAlias" />
      <MemberSignature Language="VB.NET" Value="AntiAlias" />
      <MemberSignature Language="C++ CLI" Value="AntiAlias" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Text.TextRenderingHint</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>アンチエイリアス処理されたグリフ ビットマップを使用して、ヒンティングなしに各文字を描画します。 アンチエイリアスによって品質が向上します。 ヒンティングがオフにされるため、ステム幅の違いが目立ちます。</summary>
      </Docs>
    </Member>
    <Member MemberName="AntiAliasGridFit">
      <MemberSignature Language="C#" Value="AntiAliasGridFit" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Drawing.Text.TextRenderingHint AntiAliasGridFit = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.Drawing.Text.TextRenderingHint.AntiAliasGridFit" />
      <MemberSignature Language="VB.NET" Value="AntiAliasGridFit" />
      <MemberSignature Language="C++ CLI" Value="AntiAliasGridFit" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Text.TextRenderingHint</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>アンチエイリアス処理されたグリフ ビットマップを使用して、ヒンティングありで各文字を描画します。 アンチエイリアスによってより高い品質が得られますが、パフォーマンスは大きく低下します。</summary>
      </Docs>
    </Member>
    <Member MemberName="ClearTypeGridFit">
      <MemberSignature Language="C#" Value="ClearTypeGridFit" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Drawing.Text.TextRenderingHint ClearTypeGridFit = int32(5)" />
      <MemberSignature Language="DocId" Value="F:System.Drawing.Text.TextRenderingHint.ClearTypeGridFit" />
      <MemberSignature Language="VB.NET" Value="ClearTypeGridFit" />
      <MemberSignature Language="C++ CLI" Value="ClearTypeGridFit" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Text.TextRenderingHint</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary>グリフ ClearType ビットマップを使用して、ヒンティングありで各文字を描画します。 最高の品質設定です。 ClearType テキスト フォント機能を利用するときに使用します。</summary>
      </Docs>
    </Member>
    <Member MemberName="SingleBitPerPixel">
      <MemberSignature Language="C#" Value="SingleBitPerPixel" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Drawing.Text.TextRenderingHint SingleBitPerPixel = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Drawing.Text.TextRenderingHint.SingleBitPerPixel" />
      <MemberSignature Language="VB.NET" Value="SingleBitPerPixel" />
      <MemberSignature Language="C++ CLI" Value="SingleBitPerPixel" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Text.TextRenderingHint</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>グリフ ビットマップを使用して各文字を描画します。 ヒンティングは使用されません。</summary>
      </Docs>
    </Member>
    <Member MemberName="SingleBitPerPixelGridFit">
      <MemberSignature Language="C#" Value="SingleBitPerPixelGridFit" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Drawing.Text.TextRenderingHint SingleBitPerPixelGridFit = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Drawing.Text.TextRenderingHint.SingleBitPerPixelGridFit" />
      <MemberSignature Language="VB.NET" Value="SingleBitPerPixelGridFit" />
      <MemberSignature Language="C++ CLI" Value="SingleBitPerPixelGridFit" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Text.TextRenderingHint</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>グリフ ビットマップを使用して各文字を描画します。 ヒンティングを使用して、文字のステム部分と曲線部分の見た目を向上します。</summary>
      </Docs>
    </Member>
    <Member MemberName="SystemDefault">
      <MemberSignature Language="C#" Value="SystemDefault" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Drawing.Text.TextRenderingHint SystemDefault = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Drawing.Text.TextRenderingHint.SystemDefault" />
      <MemberSignature Language="VB.NET" Value="SystemDefault" />
      <MemberSignature Language="C++ CLI" Value="SystemDefault" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Text.TextRenderingHint</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>グリフ ビットマップを使用し、システムの既定のレンダリング ヒントで各文字を描画します。 ユーザーがシステムで選択した、すべてのフォント スムージング設定を使用してテキストを描画します。</summary>
      </Docs>
    </Member>
  </Members>
</Type>