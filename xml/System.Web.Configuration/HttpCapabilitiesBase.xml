<Type Name="HttpCapabilitiesBase" FullName="System.Web.Configuration.HttpCapabilitiesBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b2741cd146ad06167b675eac2f28399d1e5f587c" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class HttpCapabilitiesBase : System.Web.UI.IFilterResolutionService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HttpCapabilitiesBase extends System.Object implements class System.Web.UI.IFilterResolutionService" />
  <TypeSignature Language="DocId" Value="T:System.Web.Configuration.HttpCapabilitiesBase" />
  <TypeSignature Language="VB.NET" Value="Public Class HttpCapabilitiesBase&#xA;Implements IFilterResolutionService" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpCapabilitiesBase : System::Web::UI::IFilterResolutionService" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IFilterResolutionService</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="616b6-101">クライアントのブラウザー機能に関する詳細な情報にアクセスできるようにします。</span>
      <span class="sxs-lookup">
        <span data-stu-id="616b6-101">Provides access to detailed information about the capabilities of the client's browser.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="616b6-102"><xref:System.Web.Configuration.HttpCapabilitiesBase> 元の基本クラス、<xref:System.Web.HttpBrowserCapabilities>クラスが派生します。</span><span class="sxs-lookup"><span data-stu-id="616b6-102"><xref:System.Web.Configuration.HttpCapabilitiesBase> is the base class from which the <xref:System.Web.HttpBrowserCapabilities> class is derived.</span></span> <span data-ttu-id="616b6-103"><xref:System.Web.Configuration.HttpCapabilitiesBase> 多くのブラウザーの機能の辞書にタイプ セーフなアクセスを提供する読み取り専用のプロパティを提供します。</span><span class="sxs-lookup"><span data-stu-id="616b6-103"><xref:System.Web.Configuration.HttpCapabilitiesBase> offers a large number of read-only properties that provide type-safe access to a browser's capabilities dictionary.</span></span> <span data-ttu-id="616b6-104">アクセスすることができます、<xref:System.Web.HttpBrowserCapabilities>クラスを通じて、 <xref:System.Web.HttpRequest.Browser%2A> 、ASP.NET によって公開されるプロパティ<xref:System.Web.HttpRequest.Browser%2A?displayProperty=nameWithType>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="616b6-104">You can access the <xref:System.Web.HttpBrowserCapabilities> class through the <xref:System.Web.HttpRequest.Browser%2A> property that is exposed by the ASP.NET <xref:System.Web.HttpRequest.Browser%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="616b6-105">次の例では、ブラウザー情報にアクセスする方法を示します。</span><span class="sxs-lookup"><span data-stu-id="616b6-105">The following example shows how to access information about the browser.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase/VB/sample_vb.aspx#1)]
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpCapabilitiesBase ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpCapabilitiesBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpCapabilitiesBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="616b6-106">
            <see cref="T:System.Web.Configuration.HttpCapabilitiesBase" /> クラスの新しいインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-106">Creates a new instance of the <see cref="T:System.Web.Configuration.HttpCapabilitiesBase" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveXControls">
      <MemberSignature Language="C#" Value="public bool ActiveXControls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ActiveXControls" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.ActiveXControls" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveXControls As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ActiveXControls { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-107">ブラウザーが ActiveX コントロールをサポートしているかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-107">Gets a value indicating whether the browser supports ActiveX controls.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-108">ブラウザーが ActiveX コントロールをサポートしている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-108">
              <see langword="true" /> if the browser supports ActiveX controls; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="616b6-109">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-109">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="616b6-110">次のコード例では、ブラウザーが ActiveX コントロールをサポートするかどうかを確認する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="616b6-110">The following code example shows how to determine whether the browser supports ActiveX controls.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.ActiveXControls#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.ActiveXControls/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.ActiveXControls#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.ActiveXControls/VB/sample_vb.aspx#1)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Adapters">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionary Adapters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IDictionary Adapters" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Adapters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Adapters As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IDictionary ^ Adapters { System::Collections::IDictionary ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-111">使用可能なコントロール アダプターのコレクションを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-111">Returns the collection of available control adapters.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-112">登録されているコントロール アダプターのコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-112">The collection of registered control adapters.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddBrowser">
      <MemberSignature Language="C#" Value="public void AddBrowser (string browserName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBrowser(string browserName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpCapabilitiesBase.AddBrowser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBrowser (browserName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBrowser(System::String ^ browserName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="browserName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="browserName">
          <span data-ttu-id="616b6-113">追加するブラウザーの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-113">The name of the browser to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="616b6-114">機能が認識されるブラウザーの内部コレクションにエントリを追加するために内部的に使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-114">Used internally to add an entry to the internal collection of browsers for which capabilities are recognized.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AOL">
      <MemberSignature Language="C#" Value="public bool AOL { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AOL" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.AOL" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AOL As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AOL { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-115">クライアントのブラウザーが AOL (America Online) ブラウザーかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-115">Gets a value indicating whether the client is an America Online (AOL) browser.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-116">ブラウザーが AOL ブラウザーである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-116">
              <see langword="true" /> if the browser is an AOL browser; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="616b6-117">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-117">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="616b6-118">次のコード例では、ブラウザーが AOL ブラウザーであるかどうかを確認する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="616b6-118">The following code example shows how to determine whether the browser is an AOL browser.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.AOL#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.AOL/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.AOL#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.AOL/VB/sample_vb.aspx#1)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundSounds">
      <MemberSignature Language="C#" Value="public bool BackgroundSounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BackgroundSounds" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.BackgroundSounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BackgroundSounds As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool BackgroundSounds { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-119">ブラウザーが <see langword="&lt;bgsounds&gt;" /> HTML 要素を使用したバックグラウンド サウンドの再生をサポートしているかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-119">Gets a value indicating whether the browser supports playing background sounds using the <see langword="&lt;bgsounds&gt;" /> HTML element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-120">ブラウザーがバックグラウンド サウンドの再生をサポートしている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-120">
              <see langword="true" /> if the browser supports playing background sounds; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="616b6-121">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-121">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="616b6-122">次のコード例は、ブラウザーがバック グラウンド サウンドの再生をサポートしているかどうかを確認する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="616b6-122">The following code example shows how to determine whether the browser supports playing background sounds.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.BackgroundSounds#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.BackgroundSounds/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.BackgroundSounds#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.BackgroundSounds/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Beta">
      <MemberSignature Language="C#" Value="public bool Beta { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Beta" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Beta" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Beta As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Beta { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-123">ブラウザーがベータ版かどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-123">Gets a value indicating whether the browser is a beta version.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-124">ブラウザーがベータ版である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-124">
              <see langword="true" /> if the browser is a beta version; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="616b6-125">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-125">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="616b6-126">ベータ版のブラウザーでは、予期しない動作を示すことができます。</span><span class="sxs-lookup"><span data-stu-id="616b6-126">Beta version browsers can exhibit unpredictable behavior.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="616b6-127">次のコード例では、ブラウザーがベータ版であるかどうかを確認する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="616b6-127">The following code example shows how to determine whether the browser is a beta version.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.Beta#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.Beta/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.Beta#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.Beta/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Browser">
      <MemberSignature Language="C#" Value="public string Browser { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Browser" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Browser" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Browser As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Browser { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-128">
            <see langword="User-Agent" /> 要求ヘッダー内のブラウザーによって送信されたブラウザー文字列を取得します (存在する場合)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-128">Gets the browser string (if any) that was sent by the browser in the <see langword="User-Agent" /> request header.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-129">ブラウザーによって送信された <see langword="User-Agent" /> 要求ヘッダーのコンテンツ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-129">The contents of the <see langword="User-Agent" /> request header sent by the browser.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="616b6-130">次のコード例を確認する方法を示しています、`User-Agent`ブラウザーによって送信された要求ヘッダー。</span><span class="sxs-lookup"><span data-stu-id="616b6-130">The following code example shows how to determine the `User-Agent` request header sent by the browser.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.Browser#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.Browser/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.Browser#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.Browser/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BrowserCapabilitiesProvider">
      <MemberSignature Language="C#" Value="public static System.Web.Configuration.HttpCapabilitiesProvider BrowserCapabilitiesProvider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.Configuration.HttpCapabilitiesProvider BrowserCapabilitiesProvider" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.BrowserCapabilitiesProvider" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property BrowserCapabilitiesProvider As HttpCapabilitiesProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::Configuration::HttpCapabilitiesProvider ^ BrowserCapabilitiesProvider { System::Web::Configuration::HttpCapabilitiesProvider ^ get(); void set(System::Web::Configuration::HttpCapabilitiesProvider ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.HttpCapabilitiesProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-131">現在のブラウザーの <see cref="T:System.Web.Configuration.HttpCapabilitiesProvider" /> オブジェクトを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-131">Gets or sets the <see cref="T:System.Web.Configuration.HttpCapabilitiesProvider" /> object for the current browser.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-132">現在のブラウザーの <see cref="T:System.Web.Configuration.HttpCapabilitiesProvider" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-132">The <see cref="T:System.Web.Configuration.HttpCapabilitiesProvider" /> object for the current browser.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Browsers">
      <MemberSignature Language="C#" Value="public System.Collections.ArrayList Browsers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ArrayList Browsers" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Browsers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Browsers As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ArrayList ^ Browsers { System::Collections::ArrayList ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-133">
            <see cref="P:System.Web.Configuration.HttpCapabilitiesBase.Capabilities" /> ディクショナリ内の、ブラウザーの <see cref="T:System.Collections.ArrayList" /> を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-133">Gets an <see cref="T:System.Collections.ArrayList" /> of the browsers in the <see cref="P:System.Web.Configuration.HttpCapabilitiesBase.Capabilities" /> dictionary.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-134">
            <see cref="T:System.Collections.ArrayList" /> ディクショナリ内の、ブラウザーの <see cref="P:System.Web.Configuration.HttpCapabilitiesBase.Capabilities" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-134">An <see cref="T:System.Collections.ArrayList" /> of the browsers in the <see cref="P:System.Web.Configuration.HttpCapabilitiesBase.Capabilities" /> dictionary.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanCombineFormsInDeck">
      <MemberSignature Language="C#" Value="public virtual bool CanCombineFormsInDeck { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanCombineFormsInDeck" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.CanCombineFormsInDeck" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanCombineFormsInDeck As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanCombineFormsInDeck { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-135">ブラウザーが、カードなど、複数のフォームを含むデッキをサポートしているかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-135">Gets a value indicating whether the browser supports decks that contain multiple forms, such as separate cards.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-136">ブラウザーが複数のフォームを含むデッキをサポートしている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-136">
              <see langword="true" /> if the browser supports decks that contain multiple forms; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="616b6-137">既定値は、<see langword="true" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-137">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="616b6-138"><xref:System.Web.Configuration.HttpCapabilitiesBase.CanCombineFormsInDeck%2A>プロパティ WML と互換性のあるモバイル デバイスにのみ適用されます。</span><span class="sxs-lookup"><span data-stu-id="616b6-138">The <xref:System.Web.Configuration.HttpCapabilitiesBase.CanCombineFormsInDeck%2A> property applies only to WML-compatible mobile devices.</span></span> <span data-ttu-id="616b6-139">True の場合、アダプターは、可能な限り、1 つのデッキのカードと同じページから複数のフォームを出力できます。</span><span class="sxs-lookup"><span data-stu-id="616b6-139">If true, the adapter can output multiple forms from the same page as cards of a single deck, where possible.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="616b6-140">次のコード例では、別のカードなど、複数のフォームを含むデッキをブラウザーがサポートするかどうかを確認する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="616b6-140">The following code example shows how to determine whether the browser supports decks that contain multiple forms, such as separate cards.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.CanCombineFormsInDeck#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.CanCombineFormsInDeck/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.CanCombineFormsInDeck#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.CanCombineFormsInDeck/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanInitiateVoiceCall">
      <MemberSignature Language="C#" Value="public virtual bool CanInitiateVoiceCall { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanInitiateVoiceCall" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.CanInitiateVoiceCall" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanInitiateVoiceCall As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanInitiateVoiceCall { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-141">ブラウザー デバイスが音声呼び出しを開始できるかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-141">Gets a value indicating whether the browser device is capable of initiating a voice call.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-142">ブラウザー デバイスが音声呼び出しを開始できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-142">
              <see langword="true" /> if the browser device is capable of initiating a voice call; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="616b6-143">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-143">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="616b6-144"><xref:System.Web.Configuration.HttpCapabilitiesBase.CanInitiateVoiceCall%2A>プロパティ WML と互換性のあるモバイル デバイスにのみ適用されます。</span><span class="sxs-lookup"><span data-stu-id="616b6-144">The <xref:System.Web.Configuration.HttpCapabilitiesBase.CanInitiateVoiceCall%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="616b6-145">次のコード例では、ブラウザーのデバイスが音声通話を開始できるかどうかを確認する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="616b6-145">The following code example shows how to determine whether the browser device is capable of initiating a voice call.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.CanInitiateVoiceCall#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.CanInitiateVoiceCall/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.CanInitiateVoiceCall#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.CanInitiateVoiceCall/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRenderAfterInputOrSelectElement">
      <MemberSignature Language="C#" Value="public virtual bool CanRenderAfterInputOrSelectElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRenderAfterInputOrSelectElement" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanRenderAfterInputOrSelectElement As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRenderAfterInputOrSelectElement { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-146">ブラウザーが WML の <see langword="&lt;select&gt;" /> 要素または <see langword="&lt;input&gt;" /> 要素の後のページ コンテンツをサポートしているかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-146">Gets a value indicating whether the browser supports page content following WML <see langword="&lt;select&gt;" /> or <see langword="&lt;input&gt;" /> elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-147">
            <see langword="true" /> ブラウザーがページの次の HTML コンテンツをサポートする場合は<see langword="&lt;select&gt;" />または<see langword="&lt;input&gt;" />要素、それ以外の<see langword="false" />します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-147">
              <see langword="true" /> if the browser supports page content following HTML <see langword="&lt;select&gt;" /> or <see langword="&lt;input&gt;" /> elements; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="616b6-148">既定値は、<see langword="true" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-148">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="616b6-149"><xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement%2A>プロパティ WML と互換性のあるモバイル デバイスにのみ適用されます。</span><span class="sxs-lookup"><span data-stu-id="616b6-149">The <xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="616b6-150">次のコード例は、次の HTML コンテンツ ページをブラウザーがサポートするかどうかを確認する方法を示しています。`<select>`または`<input>`要素。</span><span class="sxs-lookup"><span data-stu-id="616b6-150">The following code example shows how to determine whether the browser supports page content following HTML `<select>` or `<input>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRenderEmptySelects">
      <MemberSignature Language="C#" Value="public virtual bool CanRenderEmptySelects { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRenderEmptySelects" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.CanRenderEmptySelects" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanRenderEmptySelects As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRenderEmptySelects { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-151">ブラウザーが空の HTML <see langword="&lt;select&gt;" /> 要素をサポートしているかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-151">Gets a value indicating whether the browser supports empty HTML <see langword="&lt;select&gt;" /> elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-152">ブラウザーが空の HTML <see langword="true" /> 要素をサポートしている場合は <see langword="&lt;select&gt;" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-152">
              <see langword="true" /> if the browser supports empty HTML <see langword="&lt;select&gt;" /> elements; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="616b6-153">既定値は、<see langword="true" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-153">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="616b6-154">次のコード例は、ブラウザーが空の HTML をサポートしているかどうかを確認する方法を示しています。`<select>`要素。</span><span class="sxs-lookup"><span data-stu-id="616b6-154">The following code example shows how to determine whether the browser supports empty HTML `<select>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.CanRenderEmptySelects#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderEmptySelects/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.CanRenderEmptySelects#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderEmptySelects/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRenderInputAndSelectElementsTogether">
      <MemberSignature Language="C#" Value="public virtual bool CanRenderInputAndSelectElementsTogether { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRenderInputAndSelectElementsTogether" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanRenderInputAndSelectElementsTogether As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRenderInputAndSelectElementsTogether { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-155">ブラウザーが WML の <see langword="INPUT" /> 要素と <see langword="SELECT" /> 要素の同じカード上への共存をサポートしているかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-155">Gets a value indicating whether the browser supports WML <see langword="INPUT" /> and <see langword="SELECT" /> elements together on the same card.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-156">ブラウザーが WML の <see langword="true" /> 要素と <see langword="&lt;input&gt;" /> 要素の共存をサポートしている場合は <see langword="&lt;select&gt;" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-156">
              <see langword="true" /> if the browser supports WML <see langword="&lt;input&gt;" /> and <see langword="&lt;select&gt;" /> elements together; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="616b6-157">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-157">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="616b6-158"><xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether%2A>プロパティ WML と互換性のあるモバイル デバイスにのみ適用されます。</span><span class="sxs-lookup"><span data-stu-id="616b6-158">The <xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="616b6-159">次のコード例は、ブラウザーが HTML をサポートしているかどうかを確認する方法を示しています。`<input>`と`<select>`要素の共存します。</span><span class="sxs-lookup"><span data-stu-id="616b6-159">The following code example shows how to determine whether the browser supports HTML `<input>` and `<select>` elements together.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRenderMixedSelects">
      <MemberSignature Language="C#" Value="public virtual bool CanRenderMixedSelects { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRenderMixedSelects" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.CanRenderMixedSelects" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanRenderMixedSelects As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRenderMixedSelects { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-160">ブラウザーが <see langword="onpick" /> 属性と <see langword="value" /> 属性の両方を指定する WML <see langword="&lt;option&gt;" /> 要素をサポートしているかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-160">Gets a value indicating whether the browser supports WML <see langword="&lt;option&gt;" /> elements that specify both <see langword="onpick" /> and <see langword="value" /> attributes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-161">ブラウザーが <see langword="true" /> 属性と <see langword="&lt;option&gt;" /> 属性の両方を指定する WML <see langword="onpick" /> 要素をサポートしている場合は <see langword="value" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-161">
              <see langword="true" /> if the browser supports WML <see langword="&lt;option&gt;" /> elements that specify both <see langword="onpick" /> and <see langword="value" /> attributes; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="616b6-162">既定値は、<see langword="true" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-162">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="616b6-163"><xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderMixedSelects%2A>プロパティ WML と互換性のあるモバイル デバイスにのみ適用されます。</span><span class="sxs-lookup"><span data-stu-id="616b6-163">The <xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderMixedSelects%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
 <span data-ttu-id="616b6-164">場合`false`、`onpick`値がハイパーリンクとして表示されると`value`属性が必要、`<do>`ポストバック用の要素。</span><span class="sxs-lookup"><span data-stu-id="616b6-164">If `false`, `onpick` values are displayed as hyperlinks and `value` attributes require a `<do>` element for postback.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="616b6-165">次のコード例は、ブラウザーが HTML をサポートしているかどうかを確認する方法を示しています。`<option>`両方を指定する要素`onpick`と`value`属性。</span><span class="sxs-lookup"><span data-stu-id="616b6-165">The following code example shows how to determine whether the browser supports HTML `<option>` elements that specify both `onpick` and `value` attributes.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.CanRenderMixedSelects#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderMixedSelects/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.CanRenderMixedSelects#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderMixedSelects/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRenderOneventAndPrevElementsTogether">
      <MemberSignature Language="C#" Value="public virtual bool CanRenderOneventAndPrevElementsTogether { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRenderOneventAndPrevElementsTogether" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanRenderOneventAndPrevElementsTogether As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRenderOneventAndPrevElementsTogether { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-166">ブラウザーが同じ WML カード内での WML の <see langword="&lt;onevent&gt;" /> 要素と <see langword="&lt;prev&gt;" /> 要素の共存をサポートしているかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-166">Gets a value indicating whether the browser supports WML <see langword="&lt;onevent&gt;" /> and <see langword="&lt;prev&gt;" /> elements that coexist within the same WML card.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-167">ブラウザーが同じ WML カード内での <see langword="true" /> 要素と <see langword="&lt;onevent&gt;" /> 要素の共存をサポートしている場合は <see langword="&lt;prev&gt;" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-167">
              <see langword="true" /> if the browser supports WML <see langword="&lt;onevent&gt;" /> and <see langword="&lt;prev&gt;" /> elements that coexist within the same WML card; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="616b6-168">既定値は、<see langword="true" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-168">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="616b6-169"><xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether%2A>プロパティ WML と互換性のあるモバイル デバイスにのみ適用されます。</span><span class="sxs-lookup"><span data-stu-id="616b6-169">The <xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
 <span data-ttu-id="616b6-170">場合`false`、WML`<onevent>`と`<prev>`同じ WML カード内で要素が正しく表示されません。</span><span class="sxs-lookup"><span data-stu-id="616b6-170">If `false`, WML `<onevent>` and `<prev>` elements that coexist within the same WML card will not be properly rendered.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="616b6-171">次のコード例は、ブラウザーが WML をサポートしているかどうかを確認する方法を示しています。`<onevent>`と`<prev>`同じ WML カード内で共存する要素。</span><span class="sxs-lookup"><span data-stu-id="616b6-171">The following code example shows how to determine whether the browser supports WML `<onevent>` and `<prev>` elements that coexist within the same WML card.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRenderPostBackCards">
      <MemberSignature Language="C#" Value="public virtual bool CanRenderPostBackCards { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRenderPostBackCards" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.CanRenderPostBackCards" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanRenderPostBackCards As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRenderPostBackCards { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-172">ブラウザーがポストバック用の WML カードをサポートしているかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-172">Gets a value indicating whether the browser supports WML cards for postback.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-173">ブラウザーがポストバック用の WML カードをサポートしている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-173">
              <see langword="true" /> if the browser supports WML cards for postback; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="616b6-174">既定値は、<see langword="true" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-174">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="616b6-175"><xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderPostBackCards%2A>プロパティ WML と互換性のあるモバイル デバイスのブラウザーにのみ適用されます。</span><span class="sxs-lookup"><span data-stu-id="616b6-175">The <xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderPostBackCards%2A> property applies only to WML-compatible mobile-device browsers.</span></span>  
  
 <span data-ttu-id="616b6-176">場合`false`ポストバック、ブラウザーによってカードが正しく表示されません。</span><span class="sxs-lookup"><span data-stu-id="616b6-176">If `false`, postback cards will not be properly rendered by the browser.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="616b6-177">次のコード例は、ブラウザーがポストバック用の WML カードをサポートしているかどうかを確認する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="616b6-177">The following code example shows how to determine whether the browser supports WML cards for postback.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.CanRenderPostBackCards#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderPostBackCards/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.CanRenderPostBackCards#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderPostBackCards/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRenderSetvarZeroWithMultiSelectionList">
      <MemberSignature Language="C#" Value="public virtual bool CanRenderSetvarZeroWithMultiSelectionList { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRenderSetvarZeroWithMultiSelectionList" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanRenderSetvarZeroWithMultiSelectionList As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRenderSetvarZeroWithMultiSelectionList { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-178">ブラウザーが、<see langword="value" /> 属性値が 0 の WML <see langword="&lt;setvar&gt;" /> 要素をサポートしているかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-178">Gets a value indicating whether the browser supports WML <see langword="&lt;setvar&gt;" /> elements with a <see langword="value" /> attribute of 0.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-179">ブラウザーが、<see langword="true" /> 属性値が <see langword="&lt;setvar&gt;" /> の WML <see langword="value" /> 要素をサポートしている場合は <see langword="0" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-179">
              <see langword="true" /> if the browser supports WML <see langword="&lt;setvar&gt;" /> elements with a <see langword="value" /> attribute of <see langword="0" />; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="616b6-180">既定値は、<see langword="true" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-180">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="616b6-181"><xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList%2A>プロパティ WML と互換性のあるモバイル デバイスにのみ適用されます。</span><span class="sxs-lookup"><span data-stu-id="616b6-181">The <xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
 <span data-ttu-id="616b6-182">場合`false`、HTML`<setvar>`要素を`value`の属性`0`正しく表示されません。</span><span class="sxs-lookup"><span data-stu-id="616b6-182">If `false`, HTML `<setvar>` elements with a `value` attribute of `0` will not display correctly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="616b6-183">次のコード例は、ブラウザーが WML をサポートしているかどうかを確認する方法を示しています。`<setvar>`を持つ要素を`value`0 の属性です。</span><span class="sxs-lookup"><span data-stu-id="616b6-183">The following code example shows how to determine whether the browser supports WML `<setvar>` elements with a `value` attribute of 0.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSendMail">
      <MemberSignature Language="C#" Value="public virtual bool CanSendMail { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSendMail" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.CanSendMail" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanSendMail As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSendMail { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-184">ブラウザーが電子メール アドレスを表示する HTML <see langword="&lt;mailto&gt;" /> 要素を使用した電子メールの送信をサポートしているかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-184">Gets a value indicating whether the browser supports sending email by using the HTML <see langword="&lt;mailto&gt;" /> element for displaying electronic addresses.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-185">
            <see langword="true" /> ブラウザーが HTML を使用して、電子メールの送信をサポートするかどうかは<see langword="&lt;mailto&gt;" />電子メール アドレスを表示するための要素それ以外の場合、<see langword="false" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-185">
              <see langword="true" /> if the browser supports sending email by using the HTML <see langword="&lt;mailto&gt;" /> element for displaying electronic addresses; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="616b6-186">既定値は、<see langword="true" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-186">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="616b6-187">次のコード例は、ブラウザーが HTML を使用して、電子メールの送信をサポートするかどうかを確認する方法を示しています。`<mailto>`電子メール アドレスを表示するための要素。</span><span class="sxs-lookup"><span data-stu-id="616b6-187">The following code example shows how to determine whether the browser supports sending email by using the HTML `<mailto>` element for displaying electronic addresses.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.CanSendMail#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.CanSendMail/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.CanSendMail#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.CanSendMail/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Capabilities">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionary Capabilities { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IDictionary Capabilities" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Capabilities" />
      <MemberSignature Language="VB.NET" Value="Public Property Capabilities As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IDictionary ^ Capabilities { System::Collections::IDictionary ^ get(); void set(System::Collections::IDictionary ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-188">ブラウザーの定義済みの機能を取得する目的で内部的に使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-188">Used internally to get the defined capabilities of the browser.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-189">ブラウザーの定義済みの機能。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-189">The defined capabilities of the browser.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CDF">
      <MemberSignature Language="C#" Value="public bool CDF { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CDF" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.CDF" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CDF As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CDF { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-190">ブラウザーが、Web キャスティング用にチャンネル定義形式 (CDF: Chanel Definition Format) をサポートしているかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-190">Gets a value indicating whether the browser supports Channel Definition Format (CDF) for webcasting.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-191">ブラウザーが CDF をサポートしている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-191">
              <see langword="true" /> if the browser supports CDF; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="616b6-192">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-192">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="616b6-193">次のコード例では、ブラウザーが CDF をサポートするかどうかを確認する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="616b6-193">The following code example shows how to determine whether the browser supports CDF.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.CDF#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.CDF/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.CDF#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.CDF/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClrVersion">
      <MemberSignature Language="C#" Value="public Version ClrVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version ClrVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.ClrVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClrVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ ClrVersion { Version ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-194">クライアントにインストールされている .NET Framework のバージョンを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-194">Gets the version of the .NET Framework that is installed on the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-195">共通言語ランタイムの <see cref="T:System.Version" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-195">The common language runtime <see cref="T:System.Version" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="616b6-196"><xref:System.Web.Configuration.HttpCapabilitiesBase.ClrVersion%2A>プロパティは、ブラウザーが Internet Explorer 5.0 以降のバージョンである場合にのみサポートされています。</span><span class="sxs-lookup"><span data-stu-id="616b6-196">The <xref:System.Web.Configuration.HttpCapabilitiesBase.ClrVersion%2A> property is supported only when the browser is Internet Explorer version 5.0 and later.</span></span>  
  
 <span data-ttu-id="616b6-197">返されるバージョンの要素の値には、クライアントで、.NET Framework がインストールされていない場合`0, 0,-1,-1`です。</span><span class="sxs-lookup"><span data-stu-id="616b6-197">If the .NET Framework is not installed on the client, the value of the version elements returned is `0, 0,-1,-1`.</span></span>  
  
 <span data-ttu-id="616b6-198">クライアントでは、.NET Framework の 1 つ以上のバージョンがインストールされている場合、<xref:System.Web.Configuration.HttpCapabilitiesBase.ClrVersion%2A>プロパティは、最新のバージョンを返します。</span><span class="sxs-lookup"><span data-stu-id="616b6-198">If more than one version of the .NET Framework is installed on the client, the <xref:System.Web.Configuration.HttpCapabilitiesBase.ClrVersion%2A> property returns the latest version.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cookies">
      <MemberSignature Language="C#" Value="public bool Cookies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Cookies" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Cookies" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Cookies As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Cookies { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-199">ブラウザーがクッキーをサポートしているかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-199">Gets a value indicating whether the browser supports cookies.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-200">ブラウザーが Cookie をサポートしている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-200">
              <see langword="true" /> if the browser supports cookies; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="616b6-201">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-201">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="616b6-202"><xref:System.Web.Configuration.HttpCapabilitiesBase.Cookies%2A>プロパティは、ブラウザー アプリケーションが cookie をサポートしているかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="616b6-202">The <xref:System.Web.Configuration.HttpCapabilitiesBase.Cookies%2A> property indicates whether the browser application supports cookies.</span></span> <span data-ttu-id="616b6-203">ユーザーがそのアプリケーション内の cookie を無効にする場合、<xref:System.Web.Configuration.HttpCapabilitiesBase.Cookies%2A>プロパティは影響を受けません。</span><span class="sxs-lookup"><span data-stu-id="616b6-203">If the user has disabled cookies in their application, the <xref:System.Web.Configuration.HttpCapabilitiesBase.Cookies%2A> property will not be affected.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="616b6-204">次のコード例では、ブラウザーが cookie をサポートするかどうかを確認する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="616b6-204">The following code example shows how to determine whether the browser supports cookies.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.Cookies#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.Cookies/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.Cookies#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.Cookies/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Crawler">
      <MemberSignature Language="C#" Value="public bool Crawler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Crawler" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Crawler" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Crawler As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Crawler { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-205">ブラウザーが Web 検索エンジンかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-205">Gets a value indicating whether the browser is a search engine Web crawler.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-206">ブラウザーが検索エンジンである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-206">
              <see langword="true" /> if the browser is a search engine; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="616b6-207">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-207">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="616b6-208">次のコード例では、クライアントが Web 検索エンジンであるかどうかを判別する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="616b6-208">The following code example shows how to determine whether the client is a search engine Web crawler.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.Crawler#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.Crawler/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.Crawler#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.Crawler/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateHtmlTextWriter">
      <MemberSignature Language="C#" Value="public System.Web.UI.HtmlTextWriter CreateHtmlTextWriter (System.IO.TextWriter w);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.HtmlTextWriter CreateHtmlTextWriter(class System.IO.TextWriter w) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpCapabilitiesBase.CreateHtmlTextWriter(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateHtmlTextWriter (w As TextWriter) As HtmlTextWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::HtmlTextWriter ^ CreateHtmlTextWriter(System::IO::TextWriter ^ w);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="w" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="w">
          <span data-ttu-id="616b6-209">作成される <see cref="T:System.IO.TextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-209">
              <see cref="T:System.IO.TextWriter" /> to be created.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="616b6-210">使用される <see cref="T:System.Web.UI.HtmlTextWriter" /> の新しいインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-210">Creates a new instance of the <see cref="T:System.Web.UI.HtmlTextWriter" /> to be used.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="616b6-211">使用される <see cref="T:System.Web.UI.HtmlTextWriter" /> の新しいインスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-211">A new instance of the <see cref="T:System.Web.UI.HtmlTextWriter" /> to be used.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Exception">
          <span data-ttu-id="616b6-212">メソッドが <see cref="T:System.Web.UI.HtmlTextWriter" /> のインスタンスの作成に失敗しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-212">The method failed to create an instance of <see cref="T:System.Web.UI.HtmlTextWriter" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DefaultSubmitButtonLimit">
      <MemberSignature Language="C#" Value="public virtual int DefaultSubmitButtonLimit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DefaultSubmitButtonLimit" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.DefaultSubmitButtonLimit" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DefaultSubmitButtonLimit As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int DefaultSubmitButtonLimit { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-213">1 つのフォームで許可される送信ボタンの最大数を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-213">Returns the maximum number of Submit buttons that are allowed for a form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-214">1 つのフォームで許可される送信ボタンの最大数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-214">The maximum number of Submit buttons that are allowed for a form.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="616b6-215"><xref:System.Web.Configuration.HttpCapabilitiesBase.DefaultSubmitButtonLimit%2A>プロパティは、主に WML と互換性のあるモバイル デバイスに使用されるソフト キーの数を表します。</span><span class="sxs-lookup"><span data-stu-id="616b6-215">The <xref:System.Web.Configuration.HttpCapabilitiesBase.DefaultSubmitButtonLimit%2A> property primarily represents the number of soft keys that are available on a WML-compatible mobile device.</span></span>  
  
 <span data-ttu-id="616b6-216">モバイル デバイスを含めることができるは、web フォーム ページ、<xref:System.Web.UI.MobileControls.SelectionList>オブジェクトと 1 つ以上<xref:System.Web.UI.MobileControls.Command>コントロール。</span><span class="sxs-lookup"><span data-stu-id="616b6-216">Web Forms pages for mobile devices can contain a <xref:System.Web.UI.MobileControls.SelectionList> object and more than one <xref:System.Web.UI.MobileControls.Command> control.</span></span> <span data-ttu-id="616b6-217"><xref:System.Web.Configuration.HttpCapabilitiesBase.DefaultSubmitButtonLimit%2A>の中から選択することができます、<xref:System.Web.UI.MobileControls.Command>コントロールは、複数のソフト キーを持つデバイスでソフト キーに割り当てる必要があります。</span><span class="sxs-lookup"><span data-stu-id="616b6-217">The <xref:System.Web.Configuration.HttpCapabilitiesBase.DefaultSubmitButtonLimit%2A> allows you to choose which of the <xref:System.Web.UI.MobileControls.Command> controls should be assigned to a soft key on devices that have multiple soft keys.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableOptimizedCacheKey">
      <MemberSignature Language="C#" Value="public void DisableOptimizedCacheKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DisableOptimizedCacheKey() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpCapabilitiesBase.DisableOptimizedCacheKey" />
      <MemberSignature Language="VB.NET" Value="Public Sub DisableOptimizedCacheKey ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DisableOptimizedCacheKey();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="616b6-218">内部的に使用して、最適化されたキャッシュ キーの使用を無効にします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-218">Used internally to disable use of an optimized cache key.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EcmaScriptVersion">
      <MemberSignature Language="C#" Value="public Version EcmaScriptVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version EcmaScriptVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.EcmaScriptVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EcmaScriptVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ EcmaScriptVersion { Version ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-219">ブラウザーがサポートする ECMAScript のバージョン番号を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-219">Gets the version number of ECMAScript that the browser supports.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-220">ブラウザーがサポートする ECMAScript のバージョン番号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-220">The version number of ECMAScript that the browser supports.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="616b6-221">次のコード例では、ECMAScript のメジャー バージョン番号が 1 より大きい値をブラウザーがサポートしているかどうかを確認する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="616b6-221">The following code example shows how to determine whether the browser supports an ECMAScript major version number greater than 1.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.EcmaScriptVersion#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.EcmaScriptVersion/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.EcmaScriptVersion#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.EcmaScriptVersion/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Frames">
      <MemberSignature Language="C#" Value="public bool Frames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Frames" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Frames" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Frames As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Frames { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-222">ブラウザーが HTML フレームをサポートしているかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-222">Gets a value indicating whether the browser supports HTML frames.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-223">ブラウザーがフレームをサポートしている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-223">
              <see langword="true" /> if the browser supports frames; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="616b6-224">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-224">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="616b6-225">次のコード例では、ブラウザーが HTML フレームをサポートするかどうかを確認する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="616b6-225">The following code example shows how to determine whether the browser supports HTML frames.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.Frames#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.Frames/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.Frames#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.Frames/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GatewayMajorVersion">
      <MemberSignature Language="C#" Value="public virtual int GatewayMajorVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 GatewayMajorVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.GatewayMajorVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property GatewayMajorVersion As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int GatewayMajorVersion { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-226">サーバーへのアクセスに使用するワイヤレス ゲートウェイのメジャー バージョン番号 (既知の場合) を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-226">Gets the major version number of the wireless gateway used to access the server, if known.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-227">サーバーへのアクセスに使用するワイヤレス ゲートウェイのメジャー バージョン番号 (既知の場合)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-227">The major version number of the wireless gateway used to access the server, if known.</span>
          </span>
          <span data-ttu-id="616b6-228">既定値は、<see langword="0" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-228">The default is <see langword="0" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Web.HttpUnhandledException">
          <span data-ttu-id="616b6-229">ワイヤレス ゲートウェイのメジャー バージョン番号を解析できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-229">The major version number of the wireless gateway cannot be parsed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GatewayMinorVersion">
      <MemberSignature Language="C#" Value="public virtual double GatewayMinorVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 GatewayMinorVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.GatewayMinorVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property GatewayMinorVersion As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property double GatewayMinorVersion { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-230">サーバーへのアクセスに使用するワイヤレス ゲートウェイのマイナー バージョン番号 (既知の場合) を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-230">Gets the minor version number of the wireless gateway used to access the server, if known.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-231">サーバーへのアクセスに使用するワイヤレス ゲートウェイのマイナー バージョン番号 (既知の場合)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-231">The minor version number of the wireless gateway used to access the server, if known.</span>
          </span>
          <span data-ttu-id="616b6-232">既定値は、<see langword="0" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-232">The default is <see langword="0" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Web.HttpUnhandledException">
          <span data-ttu-id="616b6-233">ワイヤレス ゲートウェイのマイナー バージョン番号を解析できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-233">The minor version number of the wireless gateway cannot be parsed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GatewayVersion">
      <MemberSignature Language="C#" Value="public virtual string GatewayVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string GatewayVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.GatewayVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property GatewayVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ GatewayVersion { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-234">サーバーへのアクセスに使用するワイヤレス ゲートウェイのバージョン (既知の場合) を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-234">Gets the version of the wireless gateway used to access the server, if known.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-235">サーバーへのアクセスに使用するワイヤレス ゲートウェイのバージョン番号 (既知の場合)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-235">The version number of the wireless gateway used to access the server, if known.</span>
          </span>
          <span data-ttu-id="616b6-236">既定値は、<see langword="None" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-236">The default is <see langword="None" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="616b6-237">次のコード例は、ゲートウェイは、かどうかを確認する方法を示しています、`UP`ゲートウェイ。</span><span class="sxs-lookup"><span data-stu-id="616b6-237">The following code example shows how to determine whether the gateway is an `UP` gateway.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.GatewayVersion#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.GatewayVersion/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.GatewayVersion#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.GatewayVersion/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClrVersions">
      <MemberSignature Language="C#" Value="public Version[] GetClrVersions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Version[] GetClrVersions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpCapabilitiesBase.GetClrVersions" />
      <MemberSignature Language="VB.NET" Value="Public Function GetClrVersions () As Version()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;Version ^&gt; ^ GetClrVersions();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="616b6-238">クライアントにインストールされている .NET Framework 共通言語ランタイムのすべてのバージョンを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-238">Returns all versions of the .NET Framework common language runtime that are installed on the client.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="616b6-239">
            <see cref="T:System.Version" /> オブジェクトの配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-239">An array of <see cref="T:System.Version" /> objects.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="616b6-240"><xref:System.Web.Configuration.HttpCapabilitiesBase.GetClrVersions%2A>メソッドは、ブラウザーが Internet Explorer 5.0 以降のバージョンである場合にのみサポートされています。</span><span class="sxs-lookup"><span data-stu-id="616b6-240">The <xref:System.Web.Configuration.HttpCapabilitiesBase.GetClrVersions%2A> method is supported only when the browser is Internet Explorer version 5.0 or later.</span></span> <span data-ttu-id="616b6-241">プロパティが 1 つを含む配列を返す場合は、共通言語ランタイムは、クライアントにインストールされていない、<xref:System.Version>値を持つオブジェクトの 0、0、-1、-1。</span><span class="sxs-lookup"><span data-stu-id="616b6-241">If the common language runtime is not installed on the client, the property returns an array containing a single <xref:System.Version> object with the values 0, 0,-1,-1.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConfigCapabilities">
      <MemberSignature Language="C#" Value="public static System.Web.Configuration.HttpCapabilitiesBase GetConfigCapabilities (string configKey, System.Web.HttpRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Configuration.HttpCapabilitiesBase GetConfigCapabilities(string configKey, class System.Web.HttpRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpCapabilitiesBase.GetConfigCapabilities(System.String,System.Web.HttpRequest)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetConfigCapabilities (configKey As String, request As HttpRequest) As HttpCapabilitiesBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Configuration::HttpCapabilitiesBase ^ GetConfigCapabilities(System::String ^ configKey, System::Web::HttpRequest ^ request);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.HttpCapabilitiesBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configKey" Type="System.String" />
        <Parameter Name="request" Type="System.Web.HttpRequest" />
      </Parameters>
      <Docs>
        <param name="configKey">
          <span data-ttu-id="616b6-242">ブラウザー機能を構成する構成セクションの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-242">The name of the configuration section that configures browser capabilities.</span>
          </span>
        </param>
        <param name="request">
          <span data-ttu-id="616b6-243">機能を返すためにブラウザーによって生成される <see cref="T:System.Web.HttpRequest" />。通常は、現在の <see cref="T:System.Web.HttpRequest" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-243">The <see cref="T:System.Web.HttpRequest" /> generated by the browser for which to return capabilities and which is usually the current <see cref="T:System.Web.HttpRequest" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="616b6-244">指定の <see cref="T:System.Web.HttpRequest" /> を生成したブラウザーを表す <see cref="T:System.Web.Configuration.HttpCapabilitiesBase" /> インスタンスを返す目的で内部的に使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-244">Used internally to return an instance of <see cref="T:System.Web.Configuration.HttpCapabilitiesBase" /> representing the browser that generated the specified <see cref="T:System.Web.HttpRequest" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="616b6-245">指定の <see cref="T:System.Web.HttpRequest" /> を生成したブラウザーを表す <see cref="T:System.Web.Configuration.HttpCapabilitiesBase" /> のインスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-245">An instance of <see cref="T:System.Web.Configuration.HttpCapabilitiesBase" /> representing the browser that generated the specified <see cref="T:System.Web.HttpRequest" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasBackButton">
      <MemberSignature Language="C#" Value="public virtual bool HasBackButton { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasBackButton" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.HasBackButton" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasBackButton As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasBackButton { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-246">ブラウザーに専用の **[戻る]** ボタンがあるかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-246">Gets a value indicating whether the browser has a dedicated **Back** button.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-247">
            <see langword="true" /> ブラウザーに専用**戻る**ボタンをクリックします。 それ以外の場合、<see langword="false" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-247">
              <see langword="true" /> if the browser has a dedicated **Back** button; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="616b6-248">既定値は、<see langword="true" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-248">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="616b6-249">場合`false`、リンク コントロールがありますに必要なときに、**戻る**ボタンは使用できません。</span><span class="sxs-lookup"><span data-stu-id="616b6-249">If `false`, a link control might be necessary when a **Back** button is not available.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="616b6-250">次のコード例は、ブラウザーに専用かどうかを確認する方法を示しています。**戻る**ボタンをクリックします。</span><span class="sxs-lookup"><span data-stu-id="616b6-250">The following code example shows how to determine whether the browser has a dedicated **Back** button.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.HasBackButton#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.HasBackButton/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.HasBackButton#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.HasBackButton/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HidesRightAlignedMultiselectScrollbars">
      <MemberSignature Language="C#" Value="public virtual bool HidesRightAlignedMultiselectScrollbars { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HidesRightAlignedMultiselectScrollbars" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HidesRightAlignedMultiselectScrollbars As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HidesRightAlignedMultiselectScrollbars { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-251">
            <see langword="align" /> 属性値が <see langword="right" /> である HTML <see langword="&lt;select multiple&gt;" /> 要素のスクロール バーがレンダリング時に非表示になるかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-251">Gets a value indicating whether the scrollbar of an HTML <see langword="&lt;select multiple&gt;" /> element with an <see langword="align" /> attribute value of <see langword="right" /> is obscured upon rendering.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-252">
            <see langword="true" /> 属性値が <see langword="&lt;select multiple&gt;" /> の HTML <see langword="align" /> 要素のスクロール バーがレンダリング時に非表示になる場合は <see langword="right" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-252">
              <see langword="true" /> if the scrollbar of an HTML <see langword="&lt;select multiple&gt;" /> element with an <see langword="align" /> attribute value of <see langword="right" /> is obscured upon rendering; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="616b6-253">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-253">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="616b6-254">次のコード例では、ブラウザーが複数選択の要素を右揃えのスクロール バー不明になるかどうかを確認する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="616b6-254">The following code example shows how to determine whether the browser obscures the scrollbar for right-aligned multi-select elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HtmlTextWriter">
      <MemberSignature Language="C#" Value="public string HtmlTextWriter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HtmlTextWriter" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.HtmlTextWriter" />
      <MemberSignature Language="VB.NET" Value="Public Property HtmlTextWriter As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HtmlTextWriter { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-255">使用する <see cref="T:System.Web.UI.HtmlTextWriter" /> の完全修飾クラス名を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-255">Gets or sets the fully qualified class name of the <see cref="T:System.Web.UI.HtmlTextWriter" /> to use.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-256">使用する <see cref="T:System.Web.UI.HtmlTextWriter" /> の完全修飾クラス名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-256">The fully qualified class name of the <see cref="T:System.Web.UI.HtmlTextWriter" /> to use.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public string Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Id" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Id { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-257">ブラウザー定義ファイルで指定されているブラウザーの内部識別子を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-257">Gets the internal identifier of the browser as specified in the browser definition file.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-258">ブラウザー定義ファイルで指定されているブラウザーの内部識別子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-258">Internal identifier of the browser as specified in the browser definition file.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Init">
      <MemberSignature Language="C#" Value="protected virtual void Init ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Init() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpCapabilitiesBase.Init" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Init ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Init();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="616b6-259">内部値セットを初期化する目的で内部的に使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-259">Used internally to initialize an internal set of values.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InputType">
      <MemberSignature Language="C#" Value="public virtual string InputType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InputType" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.InputType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property InputType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InputType { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-260">ブラウザーでサポートされている入力の種類を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-260">Returns the type of input supported by browser.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-261">ブラウザーでサポートされている入力の種類。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-261">The type of input supported by browser.</span>
          </span>
          <span data-ttu-id="616b6-262">既定値は<c>telephoneKeypad</c>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-262">The default is <c>telephoneKeypad</c>.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="616b6-263">戻り値は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="616b6-263">Possible return values include:</span></span>  
  
-   `virtualKeyboard`  
  
-   `telephoneKeypad`  
  
-   `keyboard`  
  
   
  
## Examples  
 <span data-ttu-id="616b6-264">次のコード例では、サポートされている入力の種類を決定する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="616b6-264">The following code example shows how to determine the type of input support.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.InputType#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.InputType/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.InputType#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.InputType/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBrowser">
      <MemberSignature Language="C#" Value="public bool IsBrowser (string browserName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsBrowser(string browserName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpCapabilitiesBase.IsBrowser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsBrowser (browserName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsBrowser(System::String ^ browserName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="browserName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="browserName">
          <span data-ttu-id="616b6-265">指定されたブラウザー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-265">The specified browser.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="616b6-266">クライアント ブラウザーが指定のブラウザーと同じかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-266">Gets a value indicating whether the client browser is the same as the specified browser.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="616b6-267">クライアントのブラウザーが指定されたブラウザーと同じである場合は、<see langword="true" />。それ以外の場合は、<see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-267">
              <see langword="true" /> if the client browser is the same as the specified browser; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="616b6-268">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-268">The default is <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="616b6-269"><xref:System.Web.Configuration.HttpCapabilitiesBase.IsBrowser%2A>メソッドも返します`true`クライアント ブラウザーの定義を指定したブラウザーから継承する場合。</span><span class="sxs-lookup"><span data-stu-id="616b6-269">The <xref:System.Web.Configuration.HttpCapabilitiesBase.IsBrowser%2A> method also returns `true` if the client browser definition inherits from the specified browser.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsColor">
      <MemberSignature Language="C#" Value="public virtual bool IsColor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.IsColor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsColor As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsColor { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-270">ブラウザーがカラー表示をサポートしているかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-270">Gets a value indicating whether the browser has a color display.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-271">ブラウザーがカラー表示をサポートしている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-271">
              <see langword="true" /> if the browser has a color display; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="616b6-272">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-272">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="616b6-273">次のコード例では、クライアントのブラウザーに色がサポートしているかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="616b6-273">The following code example shows whether the client's browser supports color.</span></span> <span data-ttu-id="616b6-274">返される値は、ブラウザーに送信する適切な画像を決定するためにでした。</span><span class="sxs-lookup"><span data-stu-id="616b6-274">The returned value could be used to determine the appropriate image to send to the browser.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.IsColor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.IsColor/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.IsColor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.IsColor/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMobileDevice">
      <MemberSignature Language="C#" Value="public virtual bool IsMobileDevice { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMobileDevice" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.IsMobileDevice" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsMobileDevice As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsMobileDevice { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-275">ブラウザーがモバイル デバイスとして認識されているかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-275">Gets a value indicating whether the browser is a recognized mobile device.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-276">ブラウザーがモバイル デバイスとして認識されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-276">
              <see langword="true" /> if the browser is a recognized mobile device; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="616b6-277">既定値は、<see langword="true" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-277">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="616b6-278">次のコード例では、ブラウザーがモバイル デバイスであるかどうかを確認する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="616b6-278">The following code example shows how to determine whether the browser is a mobile device.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.IsMobileDevice#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.IsMobileDevice/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.IsMobileDevice#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.IsMobileDevice/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual string this[string key] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(key As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ default[System::String ^] { System::String ^ get(System::String ^ key); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="616b6-279">取得するブラウザー機能の名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-279">The name of the browser capability to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="616b6-280">指定したブラウザー機能の値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-280">Gets the value of the specified browser capability.</span>
          </span>
          <span data-ttu-id="616b6-281">C# では、このプロパティはクラスのインデクサーです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-281">In C#, this property is the indexer for the class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-282">指定したキー名のブラウザー機能。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-282">The browser capability with the specified key name.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="616b6-283">JScript では、型によって定義された既定のインデックス付きプロパティを使用することができますが明示的に、自分を定義できません。</span><span class="sxs-lookup"><span data-stu-id="616b6-283">In JScript, you can use the default indexed properties defined by a type, but you cannot explicitly define your own.</span></span> <span data-ttu-id="616b6-284">ただしを指定する、`expando`クラスの属性の型を持つ既定のインデックス付きプロパティを自動的に提供する`Object`とインデックスの種類の`String`します。</span><span class="sxs-lookup"><span data-stu-id="616b6-284">However, specifying the `expando` attribute on a class automatically provides a default indexed property with a type of `Object` and an index type of `String`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JavaApplets">
      <MemberSignature Language="C#" Value="public bool JavaApplets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool JavaApplets" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.JavaApplets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property JavaApplets As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool JavaApplets { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-285">ブラウザーが Java をサポートしているかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-285">Gets a value indicating whether the browser supports Java.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-286">ブラウザーが Java をサポートしている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-286">
              <see langword="true" /> if the browser supports Java; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="616b6-287">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-287">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="616b6-288">次のコード例では、ブラウザーが Java をサポートするかどうかを確認する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="616b6-288">The following code example shows how to determine whether the browser supports Java.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.JavaApplets#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.JavaApplets/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.JavaApplets#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.JavaApplets/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JavaScript">
      <MemberSignature Language="C#" Value="public bool JavaScript { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool JavaScript" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.JavaScript" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property JavaScript As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool JavaScript { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is the EcmaScriptVersion property. A Major version value greater than or equal to 1 implies JavaScript support. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-289">ブラウザーが JavaScript をサポートしているかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-289">Gets a value indicating whether the browser supports JavaScript.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-290">ブラウザーが JavaScript をサポートしている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-290">
              <see langword="true" /> if the browser supports JavaScript; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="616b6-291">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-291">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="616b6-292">ブラウザーが JavaScript をサポートしていますが、セキュリティの設定でスクリプトが無効になっている場合、<xref:System.Web.Configuration.HttpCapabilitiesBase.JavaScript%2A>が返される`true`ブラウザーでスクリプトが実行されません。</span><span class="sxs-lookup"><span data-stu-id="616b6-292">If the browser supports JavaScript but scripting is disabled through a security setting, the <xref:System.Web.Configuration.HttpCapabilitiesBase.JavaScript%2A> property will return `true` but script will not execute on the browser.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="616b6-293">次のコード例では、ブラウザーが JavaScript をサポートするかどうかを確認する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="616b6-293">The following code example shows how to determine whether the browser supports JavaScript.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.JavaScript#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.JavaScript/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.JavaScript#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.JavaScript/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JScriptVersion">
      <MemberSignature Language="C#" Value="public Version JScriptVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version JScriptVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.JScriptVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property JScriptVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ JScriptVersion { Version ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-294">ブラウザーがサポートする JScript バージョンを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-294">Gets the JScript version that the browser supports.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-295">ブラウザーがサポートする JScript の <see cref="T:System.Version" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-295">The <see cref="T:System.Version" /> of JScript that the browser supports.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MajorVersion">
      <MemberSignature Language="C#" Value="public int MajorVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MajorVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.MajorVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MajorVersion As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MajorVersion { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-296">ブラウザーのメジャー (整数) バージョン番号を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-296">Gets the major (integer) version number of the browser.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-297">ブラウザーのメジャー バージョン番号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-297">The major version number of the browser.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="616b6-298">次のコード例は、メジャーを追加し、ブラウザーのバージョンのマイナー (整数と小数) 値が数値結果をブラウザーに送信します。</span><span class="sxs-lookup"><span data-stu-id="616b6-298">The following code example adds the major and minor (integer and decimal) values of the browser version number and sends the result to browser.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.MajorVersion#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.MajorVersion/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.MajorVersion#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.MajorVersion/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">
          <span data-ttu-id="616b6-299">メジャー バージョンの値が整数ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-299">The major version value is not an integer.</span>
          </span>
        </exception>
        <altmember cref="P:System.Web.Configuration.HttpCapabilitiesBase.Version" />
        <altmember cref="P:System.Web.Configuration.HttpCapabilitiesBase.MinorVersion" />
      </Docs>
    </Member>
    <Member MemberName="MaximumHrefLength">
      <MemberSignature Language="C#" Value="public virtual int MaximumHrefLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaximumHrefLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.MaximumHrefLength" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MaximumHrefLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MaximumHrefLength { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-300">HTML <see langword="&lt;a&gt;" /> (アンカー) 要素の <see langword="href" /> 属性の最大文字数を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-300">Gets the maximum length in characters for the <see langword="href" /> attribute of an HTML <see langword="&lt;a&gt;" /> (anchor) element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-301">HTML <see langword="href" /> (アンカー) 要素の <see langword="&lt;a&gt;" /> 属性の最大文字数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-301">The maximum length in characters for the <see langword="href" /> attribute of an HTML <see langword="&lt;a&gt;" /> (anchor) element.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumRenderedPageSize">
      <MemberSignature Language="C#" Value="public virtual int MaximumRenderedPageSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaximumRenderedPageSize" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.MaximumRenderedPageSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MaximumRenderedPageSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MaximumRenderedPageSize { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-302">ブラウザーに表示できるページの最大長 (バイト単位) を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-302">Gets the maximum length of the page, in bytes, which the browser can display.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-303">ブラウザーに表示できるページの最大長 (バイト単位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-303">The maximum length of the page, in bytes, which the browser can display.</span>
          </span>
          <span data-ttu-id="616b6-304">既定値は<c>2000</c>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-304">The default is <c>2000</c>.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="616b6-305">中間ゲートウェイによる処理は、ブラウザーに到達するバイト数を変更できます。</span><span class="sxs-lookup"><span data-stu-id="616b6-305">Processing by an intermediate gateway can change the number of bytes that reach the browser.</span></span> <span data-ttu-id="616b6-306">ASP.NET では、ページ サイズでこの制限は適用されません。</span><span class="sxs-lookup"><span data-stu-id="616b6-306">ASP.NET does not enforce this limit on page size.</span></span>  
  
 <span data-ttu-id="616b6-307"><xref:System.Web.Configuration.HttpCapabilitiesBase.MaximumRenderedPageSize%2A> モバイル クライアントのブラウザーを使用する場合、主に使用します。</span><span class="sxs-lookup"><span data-stu-id="616b6-307"><xref:System.Web.Configuration.HttpCapabilitiesBase.MaximumRenderedPageSize%2A> is primarily useful when working with mobile-client browsers.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumSoftkeyLabelLength">
      <MemberSignature Language="C#" Value="public virtual int MaximumSoftkeyLabelLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaximumSoftkeyLabelLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.MaximumSoftkeyLabelLength" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MaximumSoftkeyLabelLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MaximumSoftkeyLabelLength { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-308">ソフト キー ラベルに表示できるテキストの最大長を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-308">Returns the maximum length of the text that a soft-key label can display.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-309">ソフト キー ラベルに表示できるテキストの最大長。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-309">The maximum length of the text that a soft-key label can display.</span>
          </span>
          <span data-ttu-id="616b6-310">既定値は、<see langword="5" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-310">The default is <see langword="5" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="616b6-311"><xref:System.Web.Configuration.HttpCapabilitiesBase.MaximumSoftkeyLabelLength%2A>プロパティ WML と互換性のあるモバイル デバイスにのみ適用されます。</span><span class="sxs-lookup"><span data-stu-id="616b6-311">The <xref:System.Web.Configuration.HttpCapabilitiesBase.MaximumSoftkeyLabelLength%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="616b6-312">次のコード例では、ブラウザーのソフト キー ラベルの最大の長さを決定する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="616b6-312">The following code example shows how to determine the maximum length of the soft-key label for the browser.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.MaximumSoftkeyLabelLength#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.MaximumSoftkeyLabelLength/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.MaximumSoftkeyLabelLength#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.MaximumSoftkeyLabelLength/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinorVersion">
      <MemberSignature Language="C#" Value="public double MinorVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 MinorVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.MinorVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MinorVersion As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double MinorVersion { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-313">ブラウザーのマイナー (小数) バージョン番号を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-313">Gets the minor (that is, decimal) version number of the browser.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-314">ブラウザーのマイナー バージョン番号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-314">The minor version number of the browser.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="616b6-315">次のコード例では、ブラウザーのマイナー バージョンを返します。</span><span class="sxs-lookup"><span data-stu-id="616b6-315">The following code example returns the minor version of the browser.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.MinorVersion#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.MinorVersion/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.MinorVersion#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.MinorVersion/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpUnhandledException">
          <span data-ttu-id="616b6-316">ヘッダーのマイナー バージョン番号が有効ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-316">The minor version number in the header is not valid.</span>
          </span>
        </exception>
        <altmember cref="P:System.Web.Configuration.HttpCapabilitiesBase.Version" />
        <altmember cref="P:System.Web.Configuration.HttpCapabilitiesBase.MajorVersion" />
      </Docs>
    </Member>
    <Member MemberName="MinorVersionString">
      <MemberSignature Language="C#" Value="public string MinorVersionString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MinorVersionString" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.MinorVersionString" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MinorVersionString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MinorVersionString { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-317">ブラウザーのマイナー (小数) バージョン番号を文字列として取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-317">Gets the minor (decimal) version number of the browser as a string.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-318">ブラウザーのマイナー バージョン番号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-318">The minor version number of the browser.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MobileDeviceManufacturer">
      <MemberSignature Language="C#" Value="public virtual string MobileDeviceManufacturer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MobileDeviceManufacturer" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.MobileDeviceManufacturer" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MobileDeviceManufacturer As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ MobileDeviceManufacturer { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-319">モバイル デバイスのメーカー名 (既知の場合) を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-319">Returns the name of the manufacturer of a mobile device, if known.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-320">モバイル デバイスの製造元の名前 (既知の場合)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-320">The name of the manufacturer of a mobile device, if known.</span>
          </span>
          <span data-ttu-id="616b6-321">既定値は、<see langword="Unknown" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-321">The default is <see langword="Unknown" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MobileDeviceModel">
      <MemberSignature Language="C#" Value="public virtual string MobileDeviceModel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MobileDeviceModel" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.MobileDeviceModel" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MobileDeviceModel As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ MobileDeviceModel { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-322">既知の場合は、モバイル デバイスのモデル名を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-322">Gets the model name of a mobile device, if known.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-323">モバイル デバイスのモデル名 (既知の場合)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-323">The model name of a mobile device, if known.</span>
          </span>
          <span data-ttu-id="616b6-324">既定値は、<see langword="Unknown" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-324">The default is <see langword="Unknown" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MSDomVersion">
      <MemberSignature Language="C#" Value="public Version MSDomVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version MSDomVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.MSDomVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MSDomVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ MSDomVersion { Version ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-325">ブラウザーがサポートしている Microsoft HTML (MSHTML) ドキュメント オブジェクト モデル (DOM) のバージョンを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-325">Gets the version of Microsoft HTML (MSHTML) Document Object Model (DOM) that the browser supports.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-326">ブラウザーがサポートしている Microsoft HTML DOM のバージョン番号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-326">The number of the MSHTML DOM version that the browser supports.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="616b6-327">次のコード例では、ブラウザーがサポートする MSHTML DOM メジャー バージョン 1 より大きいかどうかを確認する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="616b6-327">The following code example shows how to determine whether the browser supports an MSHTML DOM major version greater than 1.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.MSDomVersion#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.MSDomVersion/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.MSDomVersion#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.MSDomVersion/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberOfSoftkeys">
      <MemberSignature Language="C#" Value="public virtual int NumberOfSoftkeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NumberOfSoftkeys" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.NumberOfSoftkeys" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NumberOfSoftkeys As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int NumberOfSoftkeys { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-328">モバイル デバイスのソフト キーの数を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-328">Returns the number of soft keys on a mobile device.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-329">モバイル デバイスでサポートされているソフト キーの数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-329">The number of soft keys supported on a mobile device.</span>
          </span>
          <span data-ttu-id="616b6-330">既定値は、<see langword="0" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-330">The default is <see langword="0" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="616b6-331"><xref:System.Web.Configuration.HttpCapabilitiesBase.NumberOfSoftkeys%2A>プロパティ WML と互換性のあるモバイル デバイスにのみ適用されます。</span><span class="sxs-lookup"><span data-stu-id="616b6-331">The <xref:System.Web.Configuration.HttpCapabilitiesBase.NumberOfSoftkeys%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
 <span data-ttu-id="616b6-332">ソフト キーは、カスタム タスクに割り当てることのできるアプリケーション特殊なキーです。</span><span class="sxs-lookup"><span data-stu-id="616b6-332">Soft keys are special keys that the application can usually map to custom tasks.</span></span> <span data-ttu-id="616b6-333">ソフト キーのテキストは、左下および右下隅に画面に表示されます。</span><span class="sxs-lookup"><span data-stu-id="616b6-333">Soft-key text is displayed on the screen in the lower-left and lower-right corners.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Platform">
      <MemberSignature Language="C#" Value="public string Platform { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Platform" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Platform" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Platform As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Platform { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-334">クライアントが使用するプラットフォームの名前 (既知の場合) を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-334">Gets the name of the platform that the client uses, if it is known.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-335">クライアントが使用するオペレーティング システムが既知の場合は、そのオペレーティング システム。既知でない場合は <see langword="Unknown" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-335">The operating system that the client uses, if it is known, otherwise the value is set to <see langword="Unknown" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="616b6-336">可能な値の一部、<xref:System.Web.Configuration.HttpCapabilitiesBase.Platform%2A>プロパティには次のようにします。</span><span class="sxs-lookup"><span data-stu-id="616b6-336">Some of the possible values for the <xref:System.Web.Configuration.HttpCapabilitiesBase.Platform%2A> property are as follows:</span></span>  
  
-   `Unknown`  
  
-   `Win95`  
  
-   `Win98`  
  
-   <span data-ttu-id="616b6-337">`Windows NT 5.0` (Windows 2000)</span><span class="sxs-lookup"><span data-stu-id="616b6-337">`Windows NT 5.0` (Windows 2000)</span></span>  
  
-   <span data-ttu-id="616b6-338">`Windows NT 5.1` (Windows XP)</span><span class="sxs-lookup"><span data-stu-id="616b6-338">`Windows NT 5.1` (Windows XP)</span></span>  
  
-   <span data-ttu-id="616b6-339">`WinNT` すべての他のバージョンの Windows NT)</span><span class="sxs-lookup"><span data-stu-id="616b6-339">`WinNT` (all other versions of Windows NT)</span></span>  
  
-   `Win16`  
  
-   `WinCE`  
  
-   `Mac68K`  
  
-   `MacPPC`  
  
-   `UNIX`  
  
-   `WebTV`  
  
   
  
## Examples  
 <span data-ttu-id="616b6-340">次のコード例では、ブラウザーが、Windows NT プラットフォームで実行されているかどうかを確認する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="616b6-340">The following code example shows how to determine whether the browser is running on the Windows NT platform.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.Platform#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.Platform/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.Platform#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.Platform/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredImageMime">
      <MemberSignature Language="C#" Value="public virtual string PreferredImageMime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PreferredImageMime" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.PreferredImageMime" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PreferredImageMime As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PreferredImageMime { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-341">ブラウザーが推奨するイメージ コンテンツの種類の MIME タイプを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-341">Returns the MIME type of the type of image content typically preferred by the browser.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-342">ブラウザーが推奨するイメージ コンテンツの種類の MIME タイプ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-342">The MIME type of the type of image content typically preferred by the browser.</span>
          </span>
          <span data-ttu-id="616b6-343">既定値は、<see langword="image/gif" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-343">The default is <see langword="image/gif" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="616b6-344">次のコード例では、ブラウザーが推奨するイメージの種類を決定する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="616b6-344">The following code example shows how to determine the type of image typically preferred by a browser.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.PreferredImageMime#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.PreferredImageMime/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.PreferredImageMime#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.PreferredImageMime/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredRenderingMime">
      <MemberSignature Language="C#" Value="public virtual string PreferredRenderingMime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PreferredRenderingMime" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingMime" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PreferredRenderingMime As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PreferredRenderingMime { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-345">ブラウザーが推奨するコンテンツの種類の MIME タイプを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-345">Returns the MIME type of the type of content typically preferred by the browser.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-346">ブラウザーが推奨するコンテンツの種類の MIME タイプ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-346">The MIME type of the type of content typically preferred by the browser.</span>
          </span>
          <span data-ttu-id="616b6-347">既定値は、<see langword="text/html" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-347">The default is <see langword="text/html" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="616b6-348">次のコード例では、ブラウザーが通常推奨する MIME の種類を決定する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="616b6-348">The following code example shows how to determine the MIME type typically preferred by the browser.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.PreferredRenderingMime#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.PreferredRenderingMime/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.PreferredRenderingMime#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.PreferredRenderingMime/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredRenderingType">
      <MemberSignature Language="C#" Value="public virtual string PreferredRenderingType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PreferredRenderingType" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PreferredRenderingType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PreferredRenderingType { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-349">ブラウザーが推奨するコンテンツの種類の一般名を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-349">Gets the general name for the type of content that the browser prefers.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-350">
            <see langword="html32" /> または <see langword="chtml10" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-350">
              <see langword="html32" /> or <see langword="chtml10" />.</span>
          </span>
          <span data-ttu-id="616b6-351">既定値は、<see langword="html32" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-351">The default is <see langword="html32" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="616b6-352">次のコード例では、ブラウザーが推奨するコンテンツの種類を決定する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="616b6-352">The following code example shows how to determine the type of content that the browser prefers.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.PreferredRenderingType#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.PreferredRenderingType/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.PreferredRenderingType#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.PreferredRenderingType/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredRequestEncoding">
      <MemberSignature Language="C#" Value="public virtual string PreferredRequestEncoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PreferredRequestEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.PreferredRequestEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PreferredRequestEncoding As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PreferredRequestEncoding { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-353">ブラウザーが推奨する要求のエンコーディングを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-353">Gets the request encoding preferred by the browser.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-354">ブラウザーが推奨する要求のエンコーディング。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-354">The request encoding preferred by the browser.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredResponseEncoding">
      <MemberSignature Language="C#" Value="public virtual string PreferredResponseEncoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PreferredResponseEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.PreferredResponseEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PreferredResponseEncoding As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PreferredResponseEncoding { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-355">ブラウザーが推奨する応答のエンコーディングを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-355">Gets the response encoding preferred by the browser.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-356">ブラウザーで優先される応答のエンコード。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-356">The response encoding preferred by the browser.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RendersBreakBeforeWmlSelectAndInput">
      <MemberSignature Language="C#" Value="public virtual bool RendersBreakBeforeWmlSelectAndInput { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RendersBreakBeforeWmlSelectAndInput" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RendersBreakBeforeWmlSelectAndInput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RendersBreakBeforeWmlSelectAndInput { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-357">ブラウザーが <see langword="&lt;select&gt;" /> 要素または <see langword="&lt;input&gt;" /> 要素の前で改行するかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-357">Gets a value indicating whether the browser renders a line break before <see langword="&lt;select&gt;" /> or <see langword="&lt;input&gt;" /> elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-358">ブラウザーが <see langword="true" /> 要素または <see langword="&lt;select&gt;" /> 要素の前で改行する場合は <see langword="&lt;input&gt;" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-358">
              <see langword="true" /> if the browser renders a line break before <see langword="&lt;select&gt;" /> or <see langword="&lt;input&gt;" /> elements; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="616b6-359">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-359">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="616b6-360"><xref:System.Web.Configuration.HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput%2A>プロパティ WML と互換性のあるモバイル デバイスにのみ適用されます。</span><span class="sxs-lookup"><span data-stu-id="616b6-360">The <xref:System.Web.Configuration.HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
 <span data-ttu-id="616b6-361">場合`true`、コンテンツ次`<select>`または`<input>`要素は、新しい行に自動的に配置されます。</span><span class="sxs-lookup"><span data-stu-id="616b6-361">If `true`, content following `<select>` or `<input>` elements will automatically be placed on a new line.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="616b6-362">次のコード例は、ブラウザーにする前に改行がレンダリングされるかどうかを確認する方法を示しています。`<select>`または`<input>`要素。</span><span class="sxs-lookup"><span data-stu-id="616b6-362">The following code example shows how to determine whether the browser renders a line break before `<select>` or `<input>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RendersBreaksAfterHtmlLists">
      <MemberSignature Language="C#" Value="public virtual bool RendersBreaksAfterHtmlLists { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RendersBreaksAfterHtmlLists" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterHtmlLists" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RendersBreaksAfterHtmlLists As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RendersBreaksAfterHtmlLists { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-363">ブラウザーがリスト項目要素の後で改行するかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-363">Gets a value indicating whether the browser renders a line break after list-item elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-364">ブラウザーがリスト項目要素の後で改行する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-364">
              <see langword="true" /> if the browser renders a line break after list-item elements; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="616b6-365">既定値は、<see langword="true" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-365">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="616b6-366">場合`true`、コンテンツのリスト項目要素の後に自動的には、新しい行にします。</span><span class="sxs-lookup"><span data-stu-id="616b6-366">If `true`, content following list-item elements will automatically be placed on a new line.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="616b6-367">次のコード例では、ブラウザーがリスト項目要素の後で改行するかどうかを確認する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="616b6-367">The following code example shows how to determine whether the browser renders a line break after list-item elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RendersBreaksAfterHtmlLists#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersBreaksAfterHtmlLists/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RendersBreaksAfterHtmlLists#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersBreaksAfterHtmlLists/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RendersBreaksAfterWmlAnchor">
      <MemberSignature Language="C#" Value="public virtual bool RendersBreaksAfterWmlAnchor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RendersBreaksAfterWmlAnchor" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RendersBreaksAfterWmlAnchor As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RendersBreaksAfterWmlAnchor { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-368">ブラウザーがスタンドアロン HTML <see langword="&lt;a&gt;" /> (アンカー) 要素の後で改行するかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-368">Gets a value indicating whether the browser renders a line break after a stand-alone HTML <see langword="&lt;a&gt;" /> (anchor) element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-369">ブラウザーがスタンドアロン HTML <see langword="true" /> (アンカー) 要素の後で改行する場合は <see langword="&lt;a&gt;" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-369">
              <see langword="true" /> if the browser renders a line break after a stand-alone HTML <see langword="&lt;a&gt;" /> (anchor) element; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="616b6-370">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-370">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="616b6-371"><xref:System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor%2A>プロパティ WML と互換性のあるモバイル デバイスにのみ適用されます。</span><span class="sxs-lookup"><span data-stu-id="616b6-371">The <xref:System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
 <span data-ttu-id="616b6-372">場合`true`、次のスタンドアロンの HTML コンテンツ`<a>`(アンカー) 要素は、新しい行に自動的に配置されます。</span><span class="sxs-lookup"><span data-stu-id="616b6-372">If `true`, content following a stand-alone HTML `<a>` (anchor) element will automatically be placed on a new line.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="616b6-373">次のコード例は、ブラウザーがスタンドアロン WML 後で改行するかどうかを確認する方法を示しています。 `<a>` (アンカー) 要素です。</span><span class="sxs-lookup"><span data-stu-id="616b6-373">The following code example shows how to determine whether the browser renders a line break after a stand-alone WML `<a>` (anchor) element.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RendersBreaksAfterWmlInput">
      <MemberSignature Language="C#" Value="public virtual bool RendersBreaksAfterWmlInput { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RendersBreaksAfterWmlInput" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlInput" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RendersBreaksAfterWmlInput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RendersBreaksAfterWmlInput { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-374">ブラウザーが HTML <see langword="&lt;input&gt;" /> 要素の後で改行するかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-374">Gets a value indicating whether the browser renders a line break after an HTML <see langword="&lt;input&gt;" /> element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-375">
            <see langword="true" /> ブラウザーが HTML の後で改行するかどうかは<see langword="&lt;input&gt;" />要素、それ以外の<see langword="false" />します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-375">
              <see langword="true" /> if the browser renders a line break after an HTML <see langword="&lt;input&gt;" /> element; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="616b6-376">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-376">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="616b6-377"><xref:System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlInput%2A>プロパティ WML と互換性のあるモバイル デバイスにのみ適用されます。</span><span class="sxs-lookup"><span data-stu-id="616b6-377">The <xref:System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlInput%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
 <span data-ttu-id="616b6-378">場合`true`、次の HTML コンテンツ`<input>`要素は、新しい行に自動的に配置されます。</span><span class="sxs-lookup"><span data-stu-id="616b6-378">If `true`, content following an HTML `<input>` element will automatically be placed on a new line.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="616b6-379">次のコード例は、ブラウザーが HTML の後で改行するかどうかを確認する方法を示しています。`<input>`要素。</span><span class="sxs-lookup"><span data-stu-id="616b6-379">The following code example shows how to determine whether the browser renders a line break after an HTML `<input>` element.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RendersBreaksAfterWmlInput#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersBreaksAfterWmlInput/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RendersBreaksAfterWmlInput#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersBreaksAfterWmlInput/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RendersWmlDoAcceptsInline">
      <MemberSignature Language="C#" Value="public virtual bool RendersWmlDoAcceptsInline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RendersWmlDoAcceptsInline" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RendersWmlDoAcceptsInline" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RendersWmlDoAcceptsInline As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RendersWmlDoAcceptsInline { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-380">モバイル デバイスのブラウザーが、WML の <see langword="do" /> ベースの form accept コンストラクトを、ソフト キーではなくインライン ボタンとしてレンダリングするかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-380">Gets a value indicating whether the mobile-device browser renders a WML <see langword="do" />-based form accept construct as an inline button rather than as a soft key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-381">モバイル デバイスのブラウザーが、WML の <see langword="true" /> ベースの form accept コンストラクトをインライン ボタンとしてレンダリングする場合は <see langword="do" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-381">
              <see langword="true" /> if the mobile-device browser renders a WML <see langword="do" />-based form-accept construct as an inline button; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="616b6-382">既定値は、<see langword="true" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-382">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="616b6-383"><xref:System.Web.Configuration.HttpCapabilitiesBase.RendersWmlDoAcceptsInline%2A>プロパティ WML と互換性のあるモバイル デバイスにのみ適用されます。</span><span class="sxs-lookup"><span data-stu-id="616b6-383">The <xref:System.Web.Configuration.HttpCapabilitiesBase.RendersWmlDoAcceptsInline%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="616b6-384">次のコード例は、ブラウザーが WML をレンダリングするかどうかを確認する方法を示しています。 `do`-ベース form accept コンストラクトをインライン ボタンとして。</span><span class="sxs-lookup"><span data-stu-id="616b6-384">The following code example shows how to determine whether the browser renders a WML `do`-based form-accept construct as an inline button.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RendersWmlDoAcceptsInline#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersWmlDoAcceptsInline/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RendersWmlDoAcceptsInline#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersWmlDoAcceptsInline/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RendersWmlSelectsAsMenuCards">
      <MemberSignature Language="C#" Value="public virtual bool RendersWmlSelectsAsMenuCards { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RendersWmlSelectsAsMenuCards" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RendersWmlSelectsAsMenuCards As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RendersWmlSelectsAsMenuCards { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-385">ブラウザーが WML <see langword="&lt;select&gt;" /> 要素をコンボ ボックスではなくメニュー カードとしてレンダリングするかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-385">Gets a value indicating whether the browser renders WML <see langword="&lt;select&gt;" /> elements as menu cards, rather than as a combo box.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-386">ブラウザーが WML <see langword="true" /> 要素をメニュー カードとしてレンダリングする場合は <see langword="&lt;select&gt;" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-386">
              <see langword="true" /> if the browser renders WML <see langword="&lt;select&gt;" /> elements as menu cards; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="616b6-387">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-387">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="616b6-388"><xref:System.Web.Configuration.HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards%2A>プロパティ WML と互換性のあるモバイル デバイスにのみ適用されます。</span><span class="sxs-lookup"><span data-stu-id="616b6-388">The <xref:System.Web.Configuration.HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="616b6-389">次のコード例は、ブラウザーが WML をレンダリングするかどうかを確認する方法を示しています。`<select>`要素をメニュー カードとして。</span><span class="sxs-lookup"><span data-stu-id="616b6-389">The following code example shows how to determine whether the browser renders WML `<select>` elements as menu cards.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiredMetaTagNameValue">
      <MemberSignature Language="C#" Value="public virtual string RequiredMetaTagNameValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RequiredMetaTagNameValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiredMetaTagNameValue" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiredMetaTagNameValue As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ RequiredMetaTagNameValue { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-390">一部のブラウザーで必要とされるメタ タグを生成する目的で内部的に使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-390">Used internally to produce a meta-tag required by some browsers.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-391">一部のブラウザーで必要とされるメタ タグ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-391">A meta-tag required by some browsers.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="616b6-392">内部でのみ使用されます。</span><span class="sxs-lookup"><span data-stu-id="616b6-392">Intended for internal use only.</span></span> <span data-ttu-id="616b6-393">一部のブラウザーでは、正しく表示するためにブラウザーの次のようなメタ タグが必要です。</span><span class="sxs-lookup"><span data-stu-id="616b6-393">Some browsers require a meta-tag similar to the following for the browser to render properly.</span></span>  
  
```  
<META NAME="NAME" CONTENT="VALUE">  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresAttributeColonSubstitution">
      <MemberSignature Language="C#" Value="public virtual bool RequiresAttributeColonSubstitution { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresAttributeColonSubstitution" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresAttributeColonSubstitution" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresAttributeColonSubstitution As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresAttributeColonSubstitution { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-394">ブラウザーが要素属性値内のコロンを別の文字に置き換えることを必要とするかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-394">Gets a value indicating whether the browser requires colons in element attribute values to be substituted with a different character.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-395">ブラウザーが要素属性値内のコロンを別の文字に置き換えることを必要とする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-395">
              <see langword="true" /> if the browser requires colons in element attribute values to be substituted with a different character; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="616b6-396">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-396">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="616b6-397">一部のブラウザーでは、要素の属性値のコロンが認識されません。</span><span class="sxs-lookup"><span data-stu-id="616b6-397">Some browsers do not recognize colons in element attribute values.</span></span> <span data-ttu-id="616b6-398">場合`true`、別の文字がレンダリングの代わりに使用し、ポストバック データに返されます。</span><span class="sxs-lookup"><span data-stu-id="616b6-398">If `true`, a different character will be substituted on rendering and returned in postback data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="616b6-399">次のコード例では、ブラウザーが別の文字に置き換えられる要素の属性値内のコロンを必要とするかどうかを確認する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="616b6-399">The following code example shows how to determine whether the browser requires colons in element attribute values to be substituted with a different character.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresAttributeColonSubstitution#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresAttributeColonSubstitution/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresAttributeColonSubstitution#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresAttributeColonSubstitution/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresContentTypeMetaTag">
      <MemberSignature Language="C#" Value="public virtual bool RequiresContentTypeMetaTag { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresContentTypeMetaTag" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresContentTypeMetaTag" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresContentTypeMetaTag As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresContentTypeMetaTag { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-400">ブラウザーが <see langword="content-type" /> 属性が指定された HTML <see langword="&lt;meta&gt;" /> 要素を必要とするかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-400">Gets a value indicating whether the browser requires an HTML <see langword="&lt;meta&gt;" /> element for which the <see langword="content-type" /> attribute is specified.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-401">ブラウザーが <see langword="true" /> 属性が指定された HTML <see langword="&lt;meta&gt;" /> 要素を必要とする場合は <see langword="content-type" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-401">
              <see langword="true" /> if the browser requires an HTML <see langword="&lt;meta&gt;" /> element for which the <see langword="content-type" /> attribute is specified; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="616b6-402">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-402">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="616b6-403">場合`true`、サーバー コントロール アダプターが次のタグを HTML に挿入`<head>`Web ページの要素。</span><span class="sxs-lookup"><span data-stu-id="616b6-403">If `true`, server-control adapters insert the following tag into the HTML `<head>` element of a Web page:</span></span>  
  
```  
<META HTTP-EQUIV="CONTENT-TYPE" CONTENT=""; CHARSET="">  
```  
  
 <span data-ttu-id="616b6-404">この例では`CONTENT`によって返される値は、<xref:System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingMime%2A>プロパティ、および`charset`が使用する文字エンコーディングします。</span><span class="sxs-lookup"><span data-stu-id="616b6-404">In this example, `CONTENT` is the value returned by the <xref:System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingMime%2A> property, and `charset` is the character encoding used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="616b6-405">次のコード例は、ブラウザーが HTML を必要とするかどうかを確認する方法を示しています。`<meta>`要素を、`content-type`属性を指定します。</span><span class="sxs-lookup"><span data-stu-id="616b6-405">The following code example shows how to determine whether the browser requires an HTML `<meta>` element for which the `content-type` attribute is specified.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresContentTypeMetaTag#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresContentTypeMetaTag/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresContentTypeMetaTag#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresContentTypeMetaTag/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresControlStateInSession">
      <MemberSignature Language="C#" Value="public bool RequiresControlStateInSession { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresControlStateInSession" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresControlStateInSession" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RequiresControlStateInSession As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RequiresControlStateInSession { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-406">ブラウザーがコントロールの状態をセッション内に保持することを必要とするかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-406">Gets a value indicating whether the browser requires control state to be maintained in sessions.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-407">ブラウザーがコントロールの状態をセッション内に保持することを必要とする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-407">
              <see langword="true" /> if the browser requires control state to be maintained in sessions; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="616b6-408">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-408">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="616b6-409">次のコード例では、ブラウザー セッションで保持するコントロールの状態を必要とするかどうかを確認する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="616b6-409">The following code example shows how to determine whether the browser requires control state to be maintained in sessions.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresControlStateInSession#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresControlStateInSession/CS/browsercaps.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresControlStateInSession#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresControlStateInSession/VB/browsercaps_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresDBCSCharacter">
      <MemberSignature Language="C#" Value="public virtual bool RequiresDBCSCharacter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresDBCSCharacter" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresDBCSCharacter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresDBCSCharacter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresDBCSCharacter { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-410">ブラウザーが 2 バイト文字セットを必要とするかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-410">Gets a value indicating whether the browser requires a double-byte character set.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-411">ブラウザーが 2 バイト文字セットを必要とする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-411">
              <see langword="true" /> if the browser requires a double-byte character set; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="616b6-412">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-412">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="616b6-413">次のコード例では、ブラウザーが 2 バイト文字セットを必要とするかどうかを確認する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="616b6-413">The following code example shows how to determine whether the browser requires a double-byte character set.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresDBCSCharacter#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresDBCSCharacter/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresDBCSCharacter#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresDBCSCharacter/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresHtmlAdaptiveErrorReporting">
      <MemberSignature Language="C#" Value="public virtual bool RequiresHtmlAdaptiveErrorReporting { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresHtmlAdaptiveErrorReporting" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresHtmlAdaptiveErrorReporting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresHtmlAdaptiveErrorReporting { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-414">ブラウザーが非標準のエラー メッセージを必要とするかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-414">Gets a value indicating whether the browser requires nonstandard error messages.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-415">ブラウザーが非標準のエラー メッセージを必要とする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-415">
              <see langword="true" /> if the browser requires nonstandard error messages; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="616b6-416">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-416">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="616b6-417">場合`true`ブラウザーが HTTP エラー メッセージを正しく表示されません。</span><span class="sxs-lookup"><span data-stu-id="616b6-417">If `true`, the browser does not properly render HTTP error messages.</span></span> <span data-ttu-id="616b6-418">これを修正するには、サーバー コントロール アダプターは、ブラウザー用のカスタム エラー ページを生成します。</span><span class="sxs-lookup"><span data-stu-id="616b6-418">To correct this, server control adapters generate a custom error page for the browser.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="616b6-419">次のコード例では、ブラウザーに非標準のエラー メッセージが必要とするかどうかを確認する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="616b6-419">The following code example shows how to determine whether the browser requires nonstandard error messages.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresLeadingPageBreak">
      <MemberSignature Language="C#" Value="public virtual bool RequiresLeadingPageBreak { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresLeadingPageBreak" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresLeadingPageBreak" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresLeadingPageBreak As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresLeadingPageBreak { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-420">ブラウザーが、Web ページ本体内の最初の要素が HTML <see langword="&lt;br&gt;" /> 要素であることを必要とするかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-420">Gets a value indicating whether the browser requires the first element in the body of a Web page to be an HTML <see langword="&lt;br&gt;" /> element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-421">ブラウザーが、Web ページ本体内の最初の要素が HTML <see langword="true" /> 要素であることを必要とする場合は <see langword="BR" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-421">
              <see langword="true" /> if the browser requires the first element in the body of a Web page to be an HTML <see langword="BR" /> element; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="616b6-422">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-422">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="616b6-423">場合`true`、サーバー コントロール アダプターの挿入、追加`<br>`直後の要素、 `<body>` Web ページ内のタグ。</span><span class="sxs-lookup"><span data-stu-id="616b6-423">If `true`, server-control adapters insert an additional `<br>` element immediately following the `<body>` tag in a Web page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="616b6-424">次のコード例は、ブラウザーが HTML である Web ページの本文の最初の要素を必要とするかどうかを確認する方法を示しています。`<br>`要素。</span><span class="sxs-lookup"><span data-stu-id="616b6-424">The following code example shows how to determine whether the browser requires the first element in the body of a Web page to be an HTML `<br>` element.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresLeadingPageBreak#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresLeadingPageBreak/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresLeadingPageBreak#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresLeadingPageBreak/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresNoBreakInFormatting">
      <MemberSignature Language="C#" Value="public virtual bool RequiresNoBreakInFormatting { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresNoBreakInFormatting" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresNoBreakInFormatting" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresNoBreakInFormatting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresNoBreakInFormatting { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-425">ブラウザーが HTML <see langword="&lt;br&gt;" /> 要素による改行の書式設定をサポートしていないかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-425">Gets a value indicating whether the browser does not support HTML <see langword="&lt;br&gt;" /> elements to format line breaks.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-426">ブラウザーが HTML <see langword="true" /> 要素をサポートしていない場合は <see langword="&lt;br&gt;" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-426">
              <see langword="true" /> if the browser does not support HTML <see langword="&lt;br&gt;" /> elements; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="616b6-427">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-427">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="616b6-428">場合`true`、ブラウザーが HTML を含むページを正しく表示できない`<br>`要素。</span><span class="sxs-lookup"><span data-stu-id="616b6-428">If `true`, the browser will not correctly render pages containing the HTML `<br>` element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="616b6-429">次のコード例は、ブラウザーが HTML をサポートしていないかどうかを確認する方法を示しています。`<br>`改行の書式設定する要素。</span><span class="sxs-lookup"><span data-stu-id="616b6-429">The following code example shows how to determine whether the browser does not support HTML `<br>` elements to format line breaks.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresNoBreakInFormatting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresNoBreakInFormatting/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresNoBreakInFormatting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresNoBreakInFormatting/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresOutputOptimization">
      <MemberSignature Language="C#" Value="public virtual bool RequiresOutputOptimization { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresOutputOptimization" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresOutputOptimization" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresOutputOptimization As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresOutputOptimization { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-430">ブラウザーが最適サイズのマークアップ言語タグが含まれるページを必要とするかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-430">Gets a value indicating whether the browser requires pages to contain a size-optimized form of markup language tags.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-431">ブラウザーが最適サイズのマークアップ言語タグが含まれるページを必要とする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-431">
              <see langword="true" /> if the browser requires pages to contain a size-optimized form of markup language tags; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="616b6-432">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-432">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="616b6-433">場合`true`、サーバー コントロール アダプターが結果ページのサイズを縮小する最小限の出力を生成します。</span><span class="sxs-lookup"><span data-stu-id="616b6-433">If `true`, server control adapters generate minimal output to reduce the size of the resulting page.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="616b6-434"><xref:System.Web.Configuration.HttpCapabilitiesBase.RequiresOutputOptimization%2A>プロパティから返される`true`i モード: 互換性のあるブラウザーの場合。</span><span class="sxs-lookup"><span data-stu-id="616b6-434">The <xref:System.Web.Configuration.HttpCapabilitiesBase.RequiresOutputOptimization%2A> property returns `true` for i-mode–compatible browsers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="616b6-435">次のコード例では、ブラウザーが、サイズが最適化された形式のマークアップ言語タグが含まれるページを必要とするかどうかを確認する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="616b6-435">The following code example shows how to determine whether the browser requires pages to contain a size-optimized form of markup language tags.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresOutputOptimization#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresOutputOptimization/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresOutputOptimization#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresOutputOptimization/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresPhoneNumbersAsPlainText">
      <MemberSignature Language="C#" Value="public virtual bool RequiresPhoneNumbersAsPlainText { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresPhoneNumbersAsPlainText" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresPhoneNumbersAsPlainText As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresPhoneNumbersAsPlainText { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-436">ブラウザーが、プレーンテキストでの電話機を通じたダイヤルをサポートしているかどうか、または特殊マークアップを必要とするかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-436">Gets a value indicating whether the browser supports phone dialing based on plain text, or whether it requires special markup.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-437">ブラウザーがプレーンテキストでの電話機を通じたダイヤルのみをサポートしている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-437">
              <see langword="true" /> if the browser supports phone dialing based on plain text only; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="616b6-438">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-438">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="616b6-439"><xref:System.Web.Configuration.HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText%2A>プロパティが対象のブラウザーにのみ適用されます、<xref:System.Web.Configuration.HttpCapabilitiesBase.CanInitiateVoiceCall%2A>プロパティは`true`します。</span><span class="sxs-lookup"><span data-stu-id="616b6-439">The <xref:System.Web.Configuration.HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText%2A> property applies only to browsers for which the <xref:System.Web.Configuration.HttpCapabilitiesBase.CanInitiateVoiceCall%2A> property is `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="616b6-440">または、ブラウザーに電話のダイヤル操作がサポートしているかどうかを決定するプレーン テキストに基づく方法特殊なマークアップを必要とするかどうか、次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="616b6-440">The following code example shows how to determine whether the browser supports phone dialing based on plain text, or whether it requires special markup.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresSpecialViewStateEncoding">
      <MemberSignature Language="C#" Value="public virtual bool RequiresSpecialViewStateEncoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresSpecialViewStateEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresSpecialViewStateEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresSpecialViewStateEncoding As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresSpecialViewStateEncoding { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-441">ブラウザーが <see langword="VIEWSTATE" /> 値に対して特殊なエンコードを必要とするかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-441">Gets a value indicating whether the browser requires <see langword="VIEWSTATE" /> values to be specially encoded.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-442">ブラウザーが <see langword="true" /> 値に対して特殊なエンコードを必要とする場合は <see langword="VIEWSTATE" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-442">
              <see langword="true" /> if the browser requires <see langword="VIEWSTATE" /> values to be specially encoded; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="616b6-443">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-443">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="616b6-444">HTTP はステートレス プロトコルと`VIEWSTATE`は、1 つのメカニズムが複数の要求でクライアントの変更を保持するために使用します。</span><span class="sxs-lookup"><span data-stu-id="616b6-444">HTTP is a stateless protocol, and `VIEWSTATE` is one mechanism used to persist client changes across multiple requests.</span></span> <span data-ttu-id="616b6-445">Web ページ上の各コントロールが含まれています、<xref:System.Web.UI.Control.ViewState%2A>プロパティで、クライアントによって行われた変更はすべての蓄積を表します。</span><span class="sxs-lookup"><span data-stu-id="616b6-445">Each control on a Web page contains a <xref:System.Web.UI.Control.ViewState%2A> property, which represents the accumulation of any changes made by the client.</span></span> <span data-ttu-id="616b6-446">Web フォーム ページでこれらの変更がポストバック データとしてエンコードされた、 `value` 、html`<input>`を持つ要素を`type`の属性`hidden`です。</span><span class="sxs-lookup"><span data-stu-id="616b6-446">In a Web Forms page, these changes are encoded in postback data as the `value` of an HTML `<input>` element with a `type` attribute of `hidden`.</span></span> <span data-ttu-id="616b6-447">例:</span><span class="sxs-lookup"><span data-stu-id="616b6-447">For example:</span></span>  
  
```  
<input type="hidden" name="__VIEWSTATE" value="t0PH_u56?cDxleHQ7P=" />  
```  
  
 場合`true`、アルファベット以外の文字、`VIEWSTATE`値が正しく送信されず、ブラウザーによっても、中間のゲートウェイでします。 <span data-ttu-id="616b6-449">これを修正するサーバー コントロール アダプターがで英数字以外の文字を置き換える、`VIEWSTATE`値 HTTP 要求でのエンコードを必要としないものとします。</span><span class="sxs-lookup"><span data-stu-id="616b6-449">To correct this, server-control adapters replace non-alphabetic characters in the `VIEWSTATE` value with ones that do not require encoding in HTTP requests.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="616b6-450">次のコード例は、ブラウザーが必要かどうかを確認する方法を示しています。`VIEWSTATE`特殊なエンコード値。</span><span class="sxs-lookup"><span data-stu-id="616b6-450">The following code example shows how to determine whether the browser requires `VIEWSTATE` values to be specially encoded.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresSpecialViewStateEncoding#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresSpecialViewStateEncoding/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresSpecialViewStateEncoding#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresSpecialViewStateEncoding/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresUniqueFilePathSuffix">
      <MemberSignature Language="C#" Value="public virtual bool RequiresUniqueFilePathSuffix { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresUniqueFilePathSuffix" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueFilePathSuffix" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresUniqueFilePathSuffix As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresUniqueFilePathSuffix { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-451">ブラウザーが一意のフォーム アクション URL を必要とするかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-451">Gets a value indicating whether the browser requires unique form-action URLs.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-452">ブラウザーが一意のフォーム アクション URL を必要とする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-452">
              <see langword="true" /> if the browser requires unique form-action URLs; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="616b6-453">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-453">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="616b6-454">自己参照 HTML`<form>`要素は対象の 1 つ、`action`属性は、独自の URL を指定します。</span><span class="sxs-lookup"><span data-stu-id="616b6-454">A self-referring HTML `<form>` element is one for which the `action` attribute specifies its own URL.</span></span> <span data-ttu-id="616b6-455">場合`true`、自己参照フォームは、正しい結果を返しません。</span><span class="sxs-lookup"><span data-stu-id="616b6-455">If `true`, self-referring forms do not return the correct results.</span></span> <span data-ttu-id="616b6-456">これは、ブラウザーまたは中間ゲートウェイによってキャッシュのためです。</span><span class="sxs-lookup"><span data-stu-id="616b6-456">This is due to caching by either the browser or an intermediate gateway.</span></span> <span data-ttu-id="616b6-457">これを修正するサーバー コントロール アダプターが既定のクエリ文字列を追加 (`__ufps=``uniquefilepathsuffix`) フォームの自己参照のフォーム アクション URL 値にします。</span><span class="sxs-lookup"><span data-stu-id="616b6-457">To correct this, server control adapters append a default query string (`__ufps=``uniquefilepathsuffix`) onto the form-action URL values of self-referring forms.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="616b6-458">次のコード例では、ブラウザーが一意のフォーム アクション Url を必要とするかどうかを確認する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="616b6-458">The following code example shows how to determine whether the browser requires unique form-action URLs.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresUniqueFilePathSuffix#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresUniqueFilePathSuffix/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresUniqueFilePathSuffix#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresUniqueFilePathSuffix/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresUniqueHtmlCheckboxNames">
      <MemberSignature Language="C#" Value="public virtual bool RequiresUniqueHtmlCheckboxNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresUniqueHtmlCheckboxNames" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresUniqueHtmlCheckboxNames As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresUniqueHtmlCheckboxNames { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-459">ブラウザーが複数の HTML <see langword="&lt;input type=&quot;checkbox&quot;&gt;" /> 要素にわたって一意の <see langword="name" /> 属性値を必要とするかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-459">Gets a value indicating whether the browser requires unique <see langword="name" /> attribute values of multiple HTML <see langword="&lt;input type=&quot;checkbox&quot;&gt;" /> elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-460">ブラウザーが複数の HTML <see langword="true" /> 要素にわたって一意の <see langword="name" /> 属性値を必要とする場合は <see langword="&lt;input type=&quot;checkbox&quot;&gt;" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-460">
              <see langword="true" /> if the browser requires unique <see langword="name" /> attribute values of multiple HTML <see langword="&lt;input type=&quot;checkbox&quot;&gt;" /> elements; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="616b6-461">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-461">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="616b6-462">次のコード例が一意で、ブラウザーが必要かどうかを決定する方法を示します`NAME`属性の複数の HTML 値`<input type="checkbox">`要素。</span><span class="sxs-lookup"><span data-stu-id="616b6-462">The following code example shows how to determine whether the browser requires unique `NAME` attribute values of multiple HTML `<input type="checkbox">` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresUniqueHtmlInputNames">
      <MemberSignature Language="C#" Value="public virtual bool RequiresUniqueHtmlInputNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresUniqueHtmlInputNames" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueHtmlInputNames" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresUniqueHtmlInputNames As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresUniqueHtmlInputNames { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-463">ブラウザーが複数の HTML <see langword="&lt;input&gt;" /> 要素にわたって一意の <see langword="name" /> 属性値を必要とするかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-463">Gets a value indicating whether the browser requires unique <see langword="name" /> attribute values of multiple HTML <see langword="&lt;input&gt;" /> elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-464">ブラウザーが複数の HTML <see langword="true" /> 要素にわたって一意の <see langword="name" /> 属性値を必要とする場合は <see langword="&lt;input&gt;" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-464">
              <see langword="true" /> if the browser requires unique <see langword="name" /> attribute values of multiple HTML <see langword="&lt;input&gt;" /> elements; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="616b6-465">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-465">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="616b6-466">次のコード例が一意で、ブラウザーが必要かどうかを決定する方法を示します`name`属性の複数の HTML 値`<input>`要素。</span><span class="sxs-lookup"><span data-stu-id="616b6-466">The following code example shows how to determine whether the browser requires unique `name` attribute values of multiple HTML `<input>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresUniqueHtmlInputNames#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresUniqueHtmlInputNames/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresUniqueHtmlInputNames#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresUniqueHtmlInputNames/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresUrlEncodedPostfieldValues">
      <MemberSignature Language="C#" Value="public virtual bool RequiresUrlEncodedPostfieldValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresUrlEncodedPostfieldValues" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresUrlEncodedPostfieldValues As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresUrlEncodedPostfieldValues { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-467">ブラウザーによって送信されるポストバック データの <see langword="UrlEncoded" /> が実行されるかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-467">Gets a value indicating whether postback data sent by the browser will be <see langword="UrlEncoded" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-468">ブラウザーによって送信されるポストバック データの <see langword="true" /> が実行される場合は <see langword="UrlEncoded" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-468">
              <see langword="true" /> if postback data sent by the browser will be <see langword="UrlEncoded" />; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="616b6-469">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-469">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="616b6-470">次のコード例を確認する方法を示して かどうか、ブラウザー`UrlEncodes`のポストバック データ。</span><span class="sxs-lookup"><span data-stu-id="616b6-470">The following code example shows how to determine whether the browser `UrlEncodes` postback data.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScreenBitDepth">
      <MemberSignature Language="C#" Value="public virtual int ScreenBitDepth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ScreenBitDepth" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.ScreenBitDepth" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ScreenBitDepth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ScreenBitDepth { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-471">ディスプレイ画面の深度をピクセルあたりのビット数で返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-471">Returns the depth of the display, in bits per pixel.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-472">ディスプレイ画面の深度 (ピクセルあたりのビット数)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-472">The depth of the display, in bits per pixel.</span>
          </span>
          <span data-ttu-id="616b6-473">既定値は、<see langword="1" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-473">The default is <see langword="1" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScreenCharactersHeight">
      <MemberSignature Language="C#" Value="public virtual int ScreenCharactersHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ScreenCharactersHeight" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.ScreenCharactersHeight" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ScreenCharactersHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ScreenCharactersHeight { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-474">ディスプレイ画面のおおよその高さを文字の行数で返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-474">Returns the approximate height of the display, in character lines.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-475">文字の行数としての、ディスプレイのおおよその高さ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-475">The approximate height of the display, in character lines.</span>
          </span>
          <span data-ttu-id="616b6-476">既定値は、<see langword="6" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-476">The default is <see langword="6" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="616b6-477">返される値は、文字の推定サイズと実際の画面のピクセル サイズから派生できます。</span><span class="sxs-lookup"><span data-stu-id="616b6-477">The returned value can be derived from the assumed character size and actual screen pixel size.</span></span> <span data-ttu-id="616b6-478">高さを決定するためのアルゴリズムでは、既定のフォント サイズ (.config ファイルを含む) から、ブラウザーに固有のサイズ (ここでも、.config ファイルの場合) と、ブラウザーによって送信された明示的なヘッダーの組み合わせを使用します。</span><span class="sxs-lookup"><span data-stu-id="616b6-478">The algorithm for determining the height uses a combination of the default font sizes (from a .config file), browser-specific sizes (again, from a .config file), and explicit headers sent by the browser.</span></span> <span data-ttu-id="616b6-479">一部のブラウザーは、内部の既定値は、実際の高さのおおよその値に依存可能性があります。</span><span class="sxs-lookup"><span data-stu-id="616b6-479">Some browsers might rely on internal default values, which only approximate the actual height.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScreenCharactersWidth">
      <MemberSignature Language="C#" Value="public virtual int ScreenCharactersWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ScreenCharactersWidth" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.ScreenCharactersWidth" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ScreenCharactersWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ScreenCharactersWidth { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-480">ディスプレイ画面のおおよその幅を文字数単位で返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-480">Returns the approximate width of the display, in characters.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-481">ディスプレイのおおよその幅 (文字数)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-481">The approximate width of the display, in characters.</span>
          </span>
          <span data-ttu-id="616b6-482">既定値は、<see langword="12" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-482">The default is <see langword="12" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="616b6-483">返される値は、文字の推定サイズと実際の画面のピクセル サイズから派生できます。</span><span class="sxs-lookup"><span data-stu-id="616b6-483">The returned value can be derived from the assumed character size and actual screen pixel size.</span></span> <span data-ttu-id="616b6-484">幅を決定するためのアルゴリズムでは、既定のフォント サイズ (.config ファイルを含む) から、デバイスに固有のサイズ (ここでも、.config ファイルの場合) と、デバイスによって送信される明示的なヘッダーの組み合わせを使用します。</span><span class="sxs-lookup"><span data-stu-id="616b6-484">The algorithm for determining the width uses a combination of the default font sizes (from a .config file), device-specific sizes (again, from a .config file), and explicit headers sent by the devices.</span></span> <span data-ttu-id="616b6-485">これらの値は必ずしも正確ではありません (可変幅フォントの場合は、特に、これらの値は概算) です。</span><span class="sxs-lookup"><span data-stu-id="616b6-485">These values are not necessarily exact (especially for variable-width fonts, these values are approximate).</span></span> <span data-ttu-id="616b6-486">一部のデバイスは、内部の既定値は、実際の幅のおおよその値に依存可能性があります。</span><span class="sxs-lookup"><span data-stu-id="616b6-486">Some devices might rely on internal default values, which only approximate the actual width.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScreenPixelsHeight">
      <MemberSignature Language="C#" Value="public virtual int ScreenPixelsHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ScreenPixelsHeight" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.ScreenPixelsHeight" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ScreenPixelsHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ScreenPixelsHeight { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-487">ディスプレイ画面のおおよその高さをピクセル単位で返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-487">Returns the approximate height of the display, in pixels.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-488">ディスプレイ画面のおおよその高さ (ピクセル単位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-488">The approximate height of the display, in pixels.</span>
          </span>
          <span data-ttu-id="616b6-489">既定値は、<see langword="72" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-489">The default is <see langword="72" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="616b6-490">返される値は、文字の推定サイズと文字の高さから派生できます。</span><span class="sxs-lookup"><span data-stu-id="616b6-490">The returned value can be derived from the assumed character size and character height.</span></span> <span data-ttu-id="616b6-491">ピクセルの高さを決定するためのアルゴリズムでは、既定のフォント サイズ (.config ファイルを含む) から、デバイスに固有のサイズ (ここでも、.config ファイルの場合) と、デバイスによって送信される明示的なヘッダーの組み合わせを使用します。</span><span class="sxs-lookup"><span data-stu-id="616b6-491">The algorithm for determining the pixel height uses a combination of the default font sizes (from a .config file), device-specific sizes (again, from a .config file), and explicit headers sent by the devices.</span></span> <span data-ttu-id="616b6-492">これらの値は、必ずしも正確ではありません。</span><span class="sxs-lookup"><span data-stu-id="616b6-492">These values are not necessarily exact.</span></span> <span data-ttu-id="616b6-493">一部のデバイスは、内部の既定値は、実際の高さのおおよその値に依存可能性があります。</span><span class="sxs-lookup"><span data-stu-id="616b6-493">Some devices might rely on internal default values, which only approximate the actual height.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScreenPixelsWidth">
      <MemberSignature Language="C#" Value="public virtual int ScreenPixelsWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ScreenPixelsWidth" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.ScreenPixelsWidth" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ScreenPixelsWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ScreenPixelsWidth { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-494">ディスプレイ画面のおおよその幅をピクセル単位で返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-494">Returns the approximate width of the display, in pixels.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-495">ディスプレイ画面のおおよその幅 (ピクセル単位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-495">The approximate width of the display, in pixels.</span>
          </span>
          <span data-ttu-id="616b6-496">既定値は、<see langword="96" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-496">The default is <see langword="96" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="616b6-497">返される値は、文字の推定サイズと文字の幅から派生できます。</span><span class="sxs-lookup"><span data-stu-id="616b6-497">The returned value can be derived from the assumed character size and character width.</span></span> <span data-ttu-id="616b6-498">ピクセル幅を決定するためのアルゴリズムでは、既定のフォント サイズ (.config ファイルを含む) から、デバイスに固有のサイズ (ここでも、.config ファイルの場合) と、デバイスによって送信される明示的なヘッダーの組み合わせを使用します。</span><span class="sxs-lookup"><span data-stu-id="616b6-498">The algorithm for determining the pixel width uses a combination of the default font sizes (from a .config file), device-specific sizes (again, from a .config file), and explicit headers sent by the devices.</span></span> <span data-ttu-id="616b6-499">これらの値は必ずしも正確ではありません (可変幅フォントの場合は、特に、これらの値は概算) です。</span><span class="sxs-lookup"><span data-stu-id="616b6-499">These values are not necessarily exact (especially for variable-width fonts, these values are approximate).</span></span> <span data-ttu-id="616b6-500">一部のデバイスは、内部の既定値は、実際の幅のおおよその値に依存可能性があります。</span><span class="sxs-lookup"><span data-stu-id="616b6-500">Some devices might rely on internal default values, which only approximate the actual width.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsAccesskeyAttribute">
      <MemberSignature Language="C#" Value="public virtual bool SupportsAccesskeyAttribute { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsAccesskeyAttribute" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsAccesskeyAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsAccesskeyAttribute As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsAccesskeyAttribute { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-501">ブラウザーが HTML の <see langword="&lt;a&gt;" /> (アンカー) 要素と <see langword="&lt;input&gt;" /> 要素の <see langword="ACCESSKEY" /> 属性をサポートしているかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-501">Gets a value indicating whether the browser supports the <see langword="ACCESSKEY" /> attribute of HTML <see langword="&lt;a&gt;" /> (anchor) and <see langword="&lt;input&gt;" /> elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-502">
            <see langword="true" /> ブラウザーがサポートされている場合、 <see langword="accesskey" /> HTML の属性<see langword="&lt;a&gt;" />(アンカー) と<see langword="&lt;input&gt;" />要素、それ以外の<see langword="false" />します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-502">
              <see langword="true" /> if the browser supports the <see langword="accesskey" /> attribute of HTML <see langword="&lt;a&gt;" /> (anchor) and <see langword="&lt;input&gt;" /> elements; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="616b6-503">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-503">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="616b6-504">`accesskey`属性では、モバイルおよびアクセス可能なプラットフォームに Web ページ上のフォームとリンクのコントロールを拡張ソフト キーまたは HTML と対話するデバイス上の他のコント ローラーを割り当てることによって`<a>`(アンカー) と`<input>`要素。</span><span class="sxs-lookup"><span data-stu-id="616b6-504">The `accesskey` attribute extends control of forms and links on a Web page to mobile and accessible platforms by assigning a soft key or other controller on the device to interact with HTML `<a>` (anchor) and `<input>` elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="616b6-505">次のコード例は、ブラウザーがサポートするかどうかを確認する方法を示しています、 `accesskey` HTML の属性`<a>`(アンカー) と`<input>`要素。</span><span class="sxs-lookup"><span data-stu-id="616b6-505">The following code example shows how to determine whether the browser supports the `accesskey` attribute of HTML `<a>` (anchor) and `<input>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsAccesskeyAttribute#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsAccesskeyAttribute/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsAccesskeyAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsAccesskeyAttribute/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsBodyColor">
      <MemberSignature Language="C#" Value="public virtual bool SupportsBodyColor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsBodyColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsBodyColor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsBodyColor As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsBodyColor { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-506">ブラウザーが HTML <see langword="&lt;body&gt;" /> 要素の <see langword="bgcolor" /> 属性をサポートしているかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-506">Gets a value indicating whether the browser supports the <see langword="bgcolor" /> attribute of the HTML <see langword="&lt;body&gt;" /> element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-507">ブラウザーが HTML <see langword="true" /> 要素の <see langword="bgcolor" /> 属性をサポートしている場合は <see langword="&lt;body&gt;" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-507">
              <see langword="true" /> if the browser supports the <see langword="bgcolor" /> attribute of the HTML <see langword="&lt;body&gt;" /> element; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="616b6-508">既定値は、<see langword="true" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-508">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="616b6-509">次のコード例は、ブラウザーがサポートするかどうかを確認する方法を示しています、 `bgcolor` html 属性`<body>`要素。</span><span class="sxs-lookup"><span data-stu-id="616b6-509">The following code example shows how to determine whether the browser supports the `bgcolor` attribute of the HTML `<body>` element.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsBodyColor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsBodyColor/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsBodyColor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsBodyColor/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsBold">
      <MemberSignature Language="C#" Value="public virtual bool SupportsBold { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsBold" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsBold" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsBold As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsBold { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-510">ブラウザーが HTML <see langword="&lt;b&gt;" /> 要素による太字テキストの書式設定をサポートしているかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-510">Gets a value indicating whether the browser supports HTML <see langword="&lt;b&gt;" /> elements to format bold text.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-511">
            <see langword="true" /> ブラウザーが HTML をサポートする場合は<see langword="&lt;b&gt;" />要素による太字のテキストを書式設定それ以外の場合、<see langword="false" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-511">
              <see langword="true" /> if the browser supports HTML <see langword="&lt;b&gt;" /> elements to format bold text; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="616b6-512">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-512">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="616b6-513">次のコード例は、ブラウザーが HTML をサポートしているかどうかを確認する方法を示しています。`<b>`要素による太字テキストを書式設定します。</span><span class="sxs-lookup"><span data-stu-id="616b6-513">The following code example shows how to determine whether the browser supports HTML `<b>` elements to format bold text.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsBold#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsBold/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsBold#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsBold/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsCacheControlMetaTag">
      <MemberSignature Language="C#" Value="public virtual bool SupportsCacheControlMetaTag { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsCacheControlMetaTag" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsCacheControlMetaTag" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsCacheControlMetaTag As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsCacheControlMetaTag { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-514">ブラウザーが HTML <see langword="&lt;meta&gt;" /> 要素の <see langword="http-equiv" /> 属性の <see langword="cache-control" /> 値をサポートしているかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-514">Gets a value indicating whether the browser supports the <see langword="cache-control" /> value for the <see langword="http-equiv" /> attribute of HTML <see langword="&lt;meta&gt;" /> elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-515">ブラウザーが HTML <see langword="true" /> 要素の <see langword="cache-control" /> 属性の <see langword="http-equiv" /> 値をサポートしている場合は <see langword="&lt;meta&gt;" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-515">
              <see langword="true" /> if the browser supports the <see langword="cache-control" /> value for the <see langword="http-equiv" /> attribute of HTML <see langword="&lt;meta&gt;" /> elements; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="616b6-516">既定値は、<see langword="true" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-516">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="616b6-517">`cache-control`値を`http-equiv`HTML の属性`<meta>`要素により、クライアントを制御のキャッシュ Web ページが含まれているコンテンツをダウンロードします。</span><span class="sxs-lookup"><span data-stu-id="616b6-517">The `cache-control` value for the `http-equiv` attribute of HTML `<meta>` elements allows control over client caching of downloaded content, which includes Web pages.</span></span> <span data-ttu-id="616b6-518">次の HTML フラグメントは、例を示します。</span><span class="sxs-lookup"><span data-stu-id="616b6-518">The following HTML fragment shows an example:</span></span>  
  
```  
<META HTTP-EQUIV="CACHE-CONTROL" CONTENT="NO-CACHE"/>  
```  
  
 <span data-ttu-id="616b6-519">場合`true`でこのタグを含めること、 `<head>` Web ページの要素がブラウザーでサーバーからコンテンツを再読み込みを強制する必要があります。</span><span class="sxs-lookup"><span data-stu-id="616b6-519">If `true`, the inclusion of this tag in the `<head>` element of a Web page should force the browser to reload content from the server.</span></span>  
  
 <span data-ttu-id="616b6-520">場合`false`、サーバー コントロール アダプターが既定のクエリ文字列を追加 (`__ufps=``uniquefilepathsuffix`) を既に持っていないリンク URL の値にします。</span><span class="sxs-lookup"><span data-stu-id="616b6-520">If `false`, server control adapters append a default query string (`__ufps=``uniquefilepathsuffix`) onto link URL values that do not already have one.</span></span> <span data-ttu-id="616b6-521">これにより、ブラウザーでサーバーからコンテンツを再読み込みされます。</span><span class="sxs-lookup"><span data-stu-id="616b6-521">This forces the browser to reload content from the server.</span></span>  
  
 <span data-ttu-id="616b6-522"><xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCacheControlMetaTag%2A>プロパティは、HTTP ヘッダー、同等のフォームにも適用されます。</span><span class="sxs-lookup"><span data-stu-id="616b6-522">The <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCacheControlMetaTag%2A> property also applies to the equivalent HTTP header form:</span></span>  
  
```  
CACHE-CONTROL: NO-CACHE  
```  
  
   
  
## Examples  
 <span data-ttu-id="616b6-523">次のコード例は、ブラウザーがサポートするかどうかを確認する方法を示しています、`cache-control`値を`http-equiv`HTML の属性`<meta>`要素。</span><span class="sxs-lookup"><span data-stu-id="616b6-523">The following code example shows how to determine whether the browser supports the `cache-control` value for the `http-equiv` attribute of HTML `<meta>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsCacheControlMetaTag#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsCacheControlMetaTag/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsCacheControlMetaTag#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsCacheControlMetaTag/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsCallback">
      <MemberSignature Language="C#" Value="public virtual bool SupportsCallback { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsCallback" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsCallback As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsCallback { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-524">ブラウザーがコールバック スクリプトをサポートしているかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-524">Gets a value indicating whether the browser supports callback scripts.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-525">ブラウザーがコールバック スクリプトをサポートしている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-525">
              <see langword="true" /> if the browser supports callback scripts; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="616b6-526">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-526">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="616b6-527">次のコード例では、ブラウザーがコールバック スクリプトをサポートするかどうかを確認する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="616b6-527">The following code example shows how to determine whether the browser supports callback scripts.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsCallback#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsCallback/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsCallback#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsCallback/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsCss">
      <MemberSignature Language="C#" Value="public virtual bool SupportsCss { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsCss" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsCss" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsCss As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsCss { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-528">ブラウザーがカスケード スタイル シート (CSS) をサポートしているかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-528">Gets a value indicating whether the browser supports Cascading Style Sheets (CSS).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-529">ブラウザーが CSS をサポートしている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-529">
              <see langword="true" /> if the browser supports CSS; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="616b6-530">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-530">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="616b6-531">次のコード例では、ブラウザーが CSS をサポートするかどうかを確認する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="616b6-531">The following code example shows how to determine whether the browser supports CSS.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsCss#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsCss/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsCss#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsCss/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsDivAlign">
      <MemberSignature Language="C#" Value="public virtual bool SupportsDivAlign { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsDivAlign" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsDivAlign" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsDivAlign As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsDivAlign { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-532">ブラウザーが HTML <see langword="&lt;div&gt;" /> 要素の <see langword="align" /> 属性をサポートしているかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-532">Gets a value indicating whether the browser supports the <see langword="align" /> attribute of HTML <see langword="&lt;div&gt;" /> elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-533">ブラウザーが HTML <see langword="true" /> 要素の <see langword="align" /> 属性をサポートしている場合は <see langword="&lt;div&gt;" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-533">
              <see langword="true" /> if the browser supports the <see langword="align" /> attribute of HTML <see langword="&lt;div&gt;" /> elements; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="616b6-534">既定値は、<see langword="true" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-534">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="616b6-535">HTML `<div>` CSS スタイルは、全体に適用できるように、複数の HTML 要素をグループ化する要素を使用します。</span><span class="sxs-lookup"><span data-stu-id="616b6-535">HTML `<div>` elements are used to group multiple HTML elements so that CSS styles can be applied to them as a whole.</span></span> <span data-ttu-id="616b6-536">`align`属性の水平方向の配置の設定、 `<div>` Web ページにグループ化します。</span><span class="sxs-lookup"><span data-stu-id="616b6-536">The `align` attribute sets the horizontal alignment of a `<div>` group on a Web page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="616b6-537">次のコード例は、ブラウザーがサポートするかどうかを確認する方法を示しています、 `align` HTML の属性`<div>`要素。</span><span class="sxs-lookup"><span data-stu-id="616b6-537">The following code example shows how to determine whether the browser supports the `align` attribute of HTML `<div>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsDivAlign#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsDivAlign/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsDivAlign#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsDivAlign/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsDivNoWrap">
      <MemberSignature Language="C#" Value="public virtual bool SupportsDivNoWrap { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsDivNoWrap" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsDivNoWrap" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsDivNoWrap As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsDivNoWrap { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-538">ブラウザーが HTML <see langword="&lt;div&gt;" /> 要素の <see langword="nowrap" /> 属性をサポートしているかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-538">Gets a value indicating whether the browser supports the <see langword="nowrap" /> attribute of HTML <see langword="&lt;div&gt;" /> elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-539">ブラウザーが HTML <see langword="true" /> 要素の <see langword="nowrap" /> 属性をサポートしている場合は <see langword="&lt;div&gt;" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-539">
              <see langword="true" /> if the browser supports the <see langword="nowrap" /> attribute of HTML <see langword="&lt;div&gt;" /> elements; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="616b6-540">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-540">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="616b6-541">HTML `<div>` CSS スタイルは、全体に適用できるように、複数の HTML 要素をグループ化する要素を使用します。</span><span class="sxs-lookup"><span data-stu-id="616b6-541">HTML `<div>` elements are used to group multiple HTML elements so that CSS styles can be applied to them as a whole.</span></span> <span data-ttu-id="616b6-542">`nowrap`属性は、内の要素が含まれていることを指定します、`<div>`グループの新しい行の折り返しをしないで互いに隣接ままにする必要があります。</span><span class="sxs-lookup"><span data-stu-id="616b6-542">The `nowrap` attribute specifies that the elements contained in the `<div>` group should remain adjacent to each other without wrapping to a new line.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="616b6-543">次のコード例は、ブラウザーがサポートするかどうかを確認する方法を示しています、 `nowrap` HTML の属性`<div>`要素。</span><span class="sxs-lookup"><span data-stu-id="616b6-543">The following code example shows how to determine whether the browser supports the `nowrap` attribute of HTML `<div>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsDivNoWrap#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsDivNoWrap/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsDivNoWrap#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsDivNoWrap/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsEmptyStringInCookieValue">
      <MemberSignature Language="C#" Value="public virtual bool SupportsEmptyStringInCookieValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsEmptyStringInCookieValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsEmptyStringInCookieValue" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsEmptyStringInCookieValue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsEmptyStringInCookieValue { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-544">ブラウザーがクッキー値内の空の (<see langword="null" />) 文字列をサポートしているかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-544">Gets a value indicating whether the browser supports empty (<see langword="null" />) strings in cookie values.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-545">ブラウザーがクッキー値内の空の (<see langword="true" />) 文字列をサポートしている場合は <see langword="null" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-545">
              <see langword="true" /> if the browser supports empty (<see langword="null" />) strings in cookie values; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="616b6-546">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-546">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="616b6-547">次のコード例は、ブラウザーが空かどうかを確認する方法を示しています (`null`) cookie 値内での文字列。</span><span class="sxs-lookup"><span data-stu-id="616b6-547">The following code example shows how to determine whether the browser supports empty (`null`) strings in cookie values.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsEmptyStringInCookieValue#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsEmptyStringInCookieValue/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsEmptyStringInCookieValue#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsEmptyStringInCookieValue/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsFontColor">
      <MemberSignature Language="C#" Value="public virtual bool SupportsFontColor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsFontColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsFontColor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsFontColor As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsFontColor { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-548">ブラウザーが HTML <see langword="&lt;font&gt;" /> 要素の <see langword="color" /> 属性をサポートしているかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-548">Gets a value indicating whether the browser supports the <see langword="color" /> attribute of HTML <see langword="&lt;font&gt;" /> elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-549">ブラウザーが HTML <see langword="true" /> 要素の <see langword="color" /> 属性をサポートしている場合は <see langword="&lt;font&gt;" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-549">
              <see langword="true" /> if the browser supports the <see langword="color" /> attribute of HTML <see langword="&lt;font&gt;" /> elements; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="616b6-550">既定値は、<see langword="true" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-550">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="616b6-551">次のコード例は、ブラウザーがサポートするかどうかを確認する方法を示しています、 `color` HTML の属性`<font>`要素。</span><span class="sxs-lookup"><span data-stu-id="616b6-551">The following code example shows how to determine whether the browser supports the `color` attribute of HTML `<font>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsFontColor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsFontColor/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsFontColor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsFontColor/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsFontName">
      <MemberSignature Language="C#" Value="public virtual bool SupportsFontName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsFontName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsFontName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsFontName As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsFontName { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-552">ブラウザーが HTML <see langword="&lt;font&gt;" /> 要素の <see langword="name" /> 属性をサポートしているかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-552">Gets a value indicating whether the browser supports the <see langword="name" /> attribute of HTML <see langword="&lt;font&gt;" /> elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-553">ブラウザーが HTML <see langword="true" /> 要素の <see langword="name" /> 属性をサポートしている場合は <see langword="&lt;font&gt;" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-553">
              <see langword="true" /> if the browser supports the <see langword="name" /> attribute of HTML <see langword="&lt;font&gt;" /> elements; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="616b6-554">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-554">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="616b6-555">次のコード例は、ブラウザーがサポートするかどうかを確認する方法を示しています、 `name` HTML の属性`<font>`要素。</span><span class="sxs-lookup"><span data-stu-id="616b6-555">The following code example shows how to determine whether the browser supports the `name` attribute of HTML `<font>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsFontName#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsFontName/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsFontName#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsFontName/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsFontSize">
      <MemberSignature Language="C#" Value="public virtual bool SupportsFontSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsFontSize" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsFontSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsFontSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsFontSize { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-556">ブラウザーが HTML <see langword="&lt;font&gt;" /> 要素の <see langword="size" /> 属性をサポートしているかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-556">Gets a value indicating whether the browser supports the <see langword="size" /> attribute of HTML <see langword="&lt;font&gt;" /> elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-557">ブラウザーが HTML <see langword="true" /> 要素の <see langword="size" /> 属性をサポートしている場合は <see langword="&lt;font&gt;" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-557">
              <see langword="true" /> if the browser supports the <see langword="size" /> attribute of HTML <see langword="&lt;font&gt;" /> elements; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="616b6-558">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-558">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="616b6-559">次のコード例は、ブラウザーがサポートするかどうかを確認する方法を示しています、 `size` HTML の属性`<font>`要素。</span><span class="sxs-lookup"><span data-stu-id="616b6-559">The following code example shows how to determine whether the browser supports the `size` attribute of HTML `<font>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsFontSize#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsFontSize/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsFontSize#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsFontSize/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsImageSubmit">
      <MemberSignature Language="C#" Value="public virtual bool SupportsImageSubmit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsImageSubmit" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsImageSubmit" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsImageSubmit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsImageSubmit { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-560">ブラウザーが標準の送信ボタンの代わりにカスタム イメージを使用できるかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-560">Gets a value indicating whether the browser supports using a custom image in place of a standard form Submit button.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-561">ブラウザーが標準の送信ボタンの代わりにカスタム イメージを使用できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-561">
              <see langword="true" /> if the browser supports using a custom image in place of a standard form Submit button; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="616b6-562">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-562">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="616b6-563">次のコード例は、ブラウザーが標準のフォーム送信ボタンの代わりにカスタム イメージの使用をサポートしているかどうかを確認する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="616b6-563">The following code example shows how to determine whether the browser supports using a custom image in place of a standard form Submit button.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsImageSubmit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsImageSubmit/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsImageSubmit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsImageSubmit/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsIModeSymbols">
      <MemberSignature Language="C#" Value="public virtual bool SupportsIModeSymbols { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsIModeSymbols" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsIModeSymbols" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsIModeSymbols As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsIModeSymbols { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-564">ブラウザーが i モード シンボルをサポートしているかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-564">Gets a value indicating whether the browser supports i-mode symbols.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-565">ブラウザーが i モード シンボルをサポートしている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-565">
              <see langword="true" /> if the browser supports i-mode symbols; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="616b6-566">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-566">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="616b6-567"><xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode%2A>プロパティのみに i モード: 互換性のあるデバイスに適用されます。</span><span class="sxs-lookup"><span data-stu-id="616b6-567">The <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode%2A> property applies only to i-mode–compatible devices.</span></span>  
  
 <span data-ttu-id="616b6-568">使用して i 固有の絵文字を互換モード i - ブラウザーの設定、<xref:System.Web.UI.WebControls.Image.ImageUrl%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="616b6-568">Set i-Phone–specific picture symbols for i-mode–compatible browsers by using the <xref:System.Web.UI.WebControls.Image.ImageUrl%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="616b6-569">次のコード例では、ブラウザーが i モード記号をサポートするかどうかを確認する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="616b6-569">The following code example shows how to determine whether the browser supports i-mode symbols.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsIModeSymbols#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsIModeSymbols/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsIModeSymbols#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsIModeSymbols/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsInputIStyle">
      <MemberSignature Language="C#" Value="public virtual bool SupportsInputIStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsInputIStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsInputIStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsInputIStyle As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsInputIStyle { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-570">ブラウザーが HTML <see langword="&lt;input&gt;" /> 要素の <see langword="istyle" /> 属性をサポートしているかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-570">Gets a value indicating whether the browser supports the <see langword="istyle" /> attribute of HTML <see langword="&lt;input&gt;" /> elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-571">ブラウザーが HTML <see langword="true" /> 要素の <see langword="istyle" /> 属性をサポートしている場合は <see langword="&lt;input&gt;" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-571">
              <see langword="true" /> if the browser supports the <see langword="istyle" /> attribute of HTML <see langword="&lt;input&gt;" /> elements; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="616b6-572">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-572">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="616b6-573"><xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode%2A>プロパティのみに i モード: 互換性のあるデバイスに適用されます。</span><span class="sxs-lookup"><span data-stu-id="616b6-573">The <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode%2A> property applies only to i-mode–compatible devices.</span></span>  
  
 <span data-ttu-id="616b6-574">`istyle`属性が i モード互換のブラウザーで入力テキスト入力フィールドのスタイルを設定するために使用します。</span><span class="sxs-lookup"><span data-stu-id="616b6-574">The `istyle` attribute is used for setting the input style of a text-input field on i-mode–compatible browsers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="616b6-575">次のコード例は、ブラウザーがサポートするかどうかを確認する方法を示しています、 `istyle` HTML の属性`<input>`要素。</span><span class="sxs-lookup"><span data-stu-id="616b6-575">The following code example shows how to determine whether the browser supports the `istyle` attribute of HTML `<input>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsInputIStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsInputIStyle/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsInputIStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsInputIStyle/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsInputMode">
      <MemberSignature Language="C#" Value="public virtual bool SupportsInputMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsInputMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsInputMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsInputMode { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-576">ブラウザーが HTML <see langword="&lt;input&gt;" /> 要素の <see langword="mode" /> 属性をサポートしているかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-576">Gets a value indicating whether the browser supports the <see langword="mode" /> attribute of HTML <see langword="&lt;input&gt;" /> elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-577">ブラウザーが HTML <see langword="true" /> 要素の <see langword="mode" /> 属性をサポートしている場合は <see langword="&lt;input&gt;" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-577">
              <see langword="true" /> if the browser supports the <see langword="mode" /> attribute of HTML <see langword="&lt;input&gt;" /> elements; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="616b6-578">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-578">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="616b6-579"><xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode%2A>プロパティのみに i モード: 互換性のあるデバイスに適用されます。</span><span class="sxs-lookup"><span data-stu-id="616b6-579">The <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode%2A> property applies only to i-mode–compatible devices.</span></span>  
  
 <span data-ttu-id="616b6-580">`MODE`属性が i モード互換のブラウザーで、テキスト入力フィールドの入力モードを設定するために使用します。</span><span class="sxs-lookup"><span data-stu-id="616b6-580">The `MODE` attribute is used for setting the input mode of a text input field on i-mode–compatible browsers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="616b6-581">次のコード例は、ブラウザーがサポートするかどうかを確認する方法を示しています、 `mode` HTML の属性`<input>`要素。</span><span class="sxs-lookup"><span data-stu-id="616b6-581">The following code example shows how to determine whether the browser supports the `mode` attribute of HTML `<input>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsInputMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsInputMode/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsInputMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsInputMode/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsItalic">
      <MemberSignature Language="C#" Value="public virtual bool SupportsItalic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsItalic" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsItalic" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsItalic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsItalic { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-582">ブラウザーが HTML <see langword="&lt;i&gt;" /> 要素による斜体テキストの書式設定をサポートしているかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-582">Gets a value indicating whether the browser supports HTML <see langword="&lt;i&gt;" /> elements to format italic text.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-583">ブラウザーが HTML <see langword="true" /> 要素による斜体テキストの書式設定をサポートしている場合は <see langword="&lt;i&gt;" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-583">
              <see langword="true" /> if the browser supports HTML <see langword="&lt;i&gt;" /> elements to format italic text; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="616b6-584">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-584">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="616b6-585">次のコード例は、ブラウザーが HTML をサポートしているかどうかを確認する方法を示しています。`<i>`要素による斜体のテキストを書式設定します。</span><span class="sxs-lookup"><span data-stu-id="616b6-585">The following code example shows how to determine whether the browser supports HTML `<i>` elements to format italic text.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsItalic#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsItalic/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsItalic#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsItalic/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsJPhoneMultiMediaAttributes">
      <MemberSignature Language="C#" Value="public virtual bool SupportsJPhoneMultiMediaAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsJPhoneMultiMediaAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsJPhoneMultiMediaAttributes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsJPhoneMultiMediaAttributes { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-586">ブラウザーが J-Phone のマルチメディア属性をサポートしているかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-586">Gets a value indicating whether the browser supports J-Phone multimedia attributes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-587">ブラウザーが J-Phone のマルチメディア属性をサポートしている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-587">
              <see langword="true" /> if the browser supports J-Phone multimedia attributes; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="616b6-588">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-588">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="616b6-589"><xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes%2A>プロパティ J Phone – 互換性のあるモバイル デバイスにのみ適用されます。</span><span class="sxs-lookup"><span data-stu-id="616b6-589">The <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes%2A> property applies only to J-Phone–compatible mobile devices.</span></span>  
  
 <span data-ttu-id="616b6-590">J-phone は、HTML、に基づいて J 互換ブラウザー、マークアップ言語仕様です。</span><span class="sxs-lookup"><span data-stu-id="616b6-590">J-Phone is a markup language specification, based on HTML, for J-Phone–compatible browsers.</span></span> <span data-ttu-id="616b6-591">場合`true`、ブラウザーが HTML の追加の属性をサポートする`<a>`(アンカー) と`<select>`要素。</span><span class="sxs-lookup"><span data-stu-id="616b6-591">If `true`, the browser supports additional attributes for HTML `<a>` (anchor) and `<select>` elements.</span></span> <span data-ttu-id="616b6-592">サポートされるその他の属性は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="616b6-592">The additional attributes supported are as follows:</span></span>  
  
-   `src`  
  
-   `soundstart`  
  
-   `loop`  
  
-   `volume`  
  
-   `vibration`  
  
-   `viblength`  
  
   
  
## Examples  
 <span data-ttu-id="616b6-593">次のコード例では、ブラウザーが J-phone のマルチ メディア属性をサポートするかどうかを確認する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="616b6-593">The following code example shows how to determine whether the browser supports J-Phone multimedia attributes.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsJPhoneSymbols">
      <MemberSignature Language="C#" Value="public virtual bool SupportsJPhoneSymbols { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsJPhoneSymbols" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneSymbols" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsJPhoneSymbols As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsJPhoneSymbols { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-594">ブラウザーが J-Phone 固有の絵文字をサポートしているかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-594">Gets a value indicating whether the browser supports J-Phone–specific picture symbols.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-595">ブラウザーが J-Phone 固有の絵文字をサポートしている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-595">
              <see langword="true" /> if the browser supports J-Phone–specific picture symbols; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="616b6-596">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-596">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="616b6-597"><xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneSymbols%2A>プロパティ J Phone – 互換性のあるモバイル デバイスにのみ適用されます。</span><span class="sxs-lookup"><span data-stu-id="616b6-597">The <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneSymbols%2A> property applies only to J-Phone–compatible mobile devices.</span></span>  
  
 <span data-ttu-id="616b6-598">使用して J 固有の絵文字を J 互換ブラウザーの設定、<xref:System.Web.UI.WebControls.Image.ImageUrl%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="616b6-598">Set J-Phone–specific picture symbols for J-Phone–compatible browsers by using the <xref:System.Web.UI.WebControls.Image.ImageUrl%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="616b6-599">次のコード例では、ブラウザーが J 固有の絵文字をサポートするかどうかを確認する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="616b6-599">The following code example shows how to determine whether the browser supports J-Phone–specific picture symbols.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsJPhoneSymbols#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsJPhoneSymbols/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsJPhoneSymbols#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsJPhoneSymbols/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsQueryStringInFormAction">
      <MemberSignature Language="C#" Value="public virtual bool SupportsQueryStringInFormAction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsQueryStringInFormAction" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsQueryStringInFormAction" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsQueryStringInFormAction As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsQueryStringInFormAction { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-600">ブラウザーが HTML <see langword="&lt;form&gt;" /> 要素の <see langword="action" /> 属性値内のクエリ文字列をサポートしているかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-600">Gets a value indicating whether the browser supports a query string in the <see langword="action" /> attribute value of HTML <see langword="&lt;form&gt;" /> elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-601">ブラウザーが HTML <see langword="true" /> 要素の <see langword="action" /> 属性値内のクエリ文字列をサポートしている場合は <see langword="&lt;form&gt;" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-601">
              <see langword="true" /> if the browser supports a query string in the <see langword="action" /> attribute value of HTML <see langword="&lt;form&gt;" /> elements; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="616b6-602">既定値は、<see langword="true" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-602">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="616b6-603">場合`false`、HTML としてのポストバック データにクエリ文字列パラメーターから送信される`<input>`要素を`type`属性に設定`hidden`です。</span><span class="sxs-lookup"><span data-stu-id="616b6-603">If `false`, query string parameters are sent, in postback data, as HTML `<input>` elements with the `type` attributes set to `hidden`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="616b6-604">次のコード例は、ブラウザーがの値のクエリ文字列をサポートしているかどうかを確認する方法を示しています、 `action` HTML の属性`<form>`要素。</span><span class="sxs-lookup"><span data-stu-id="616b6-604">The following code example shows how to determine whether the browser supports a query string in the value for the `action` attribute of HTML `<form>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsQueryStringInFormAction#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsQueryStringInFormAction/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsQueryStringInFormAction#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsQueryStringInFormAction/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsRedirectWithCookie">
      <MemberSignature Language="C#" Value="public virtual bool SupportsRedirectWithCookie { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsRedirectWithCookie" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsRedirectWithCookie" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsRedirectWithCookie As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsRedirectWithCookie { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-605">ブラウザーが、リダイレクトでクッキーをサポートしているかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-605">Gets a value indicating whether the browser supports cookies on redirection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-606">ブラウザーがリダイレクトでクッキーをサポートしている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-606">
              <see langword="true" /> if the browser supports cookies on redirection; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="616b6-607">既定値は、<see langword="true" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-607">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="616b6-608">使用します。ブラウザー 4.1 またはアップします。ブラウザー 3.2、<xref:System.Web.HttpResponse.Redirect%2A>メソッドの動作としての値、<xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsRedirectWithCookie%2A>のプロパティ、<xref:System.Web.HttpBrowserCapabilities>オブジェクトが`false`がない限り、<xref:System.Web.Configuration.SessionStateSection.Cookieless%2A>プロパティに、 <xref:System.Web.Configuration.SystemWebSectionGroup.SessionState%2A> Web.config のセクションが明示的に設定されて`true`です。</span><span class="sxs-lookup"><span data-stu-id="616b6-608">With UP.Browser 4.1 or UP.Browser 3.2, the <xref:System.Web.HttpResponse.Redirect%2A> method behaves as if the value of the <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsRedirectWithCookie%2A> property of the <xref:System.Web.HttpBrowserCapabilities> object is `false`, unless the <xref:System.Web.Configuration.SessionStateSection.Cookieless%2A> property in the <xref:System.Web.Configuration.SystemWebSectionGroup.SessionState%2A> section of Web.config has been explicitly set to `true`.</span></span>  
  
 <span data-ttu-id="616b6-609">ASP.NET 1.1 では、この設定のオプションは`true`または`false`が ASP.NET 2.0 では、選択肢を展開すると、および<xref:System.Web.HttpCookieMode.AutoDetect>既定の設定になります。</span><span class="sxs-lookup"><span data-stu-id="616b6-609">In ASP.NET 1.1, the options for this setting were `true` or `false`, but with ASP.NET 2.0, the choices are expanded, and <xref:System.Web.HttpCookieMode.AutoDetect> is now the default setting.</span></span> <span data-ttu-id="616b6-610">Web アプリケーションがある場合、`cookieless`の属性、`<sessionState>`はブール値に設定する Web.config ファイルでセクション<xref:System.Web.HttpResponse.Redirect%2A>これらのブラウザーの期待通りに動作します。</span><span class="sxs-lookup"><span data-stu-id="616b6-610">If your Web application has the `cookieless` attribute of the `<sessionState>` section in the Web.config file set to a Boolean value, <xref:System.Web.HttpResponse.Redirect%2A> should work as expected for these browsers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="616b6-611">次のコード例では、ブラウザーがリダイレクトで cookie をサポートするかどうかを確認する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="616b6-611">The following code example shows how to determine whether the browser supports cookies on redirection.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsRedirectWithCookie#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsRedirectWithCookie/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsRedirectWithCookie#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsRedirectWithCookie/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsSelectMultiple">
      <MemberSignature Language="C#" Value="public virtual bool SupportsSelectMultiple { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsSelectMultiple" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsSelectMultiple" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsSelectMultiple As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsSelectMultiple { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-612">ブラウザーが HTML <see langword="&lt;select&gt;" /> 要素の <see langword="multiple" /> 属性をサポートしているかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-612">Gets a value indicating whether the browser supports the <see langword="multiple" /> attribute of HTML <see langword="&lt;select&gt;" /> elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-613">ブラウザーが HTML <see langword="true" /> 要素の <see langword="multiple" /> 属性をサポートしている場合は <see langword="&lt;select&gt;" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-613">
              <see langword="true" /> if the browser supports the <see langword="multiple" /> attribute of HTML <see langword="&lt;select&gt;" /> elements; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="616b6-614">既定値は、<see langword="true" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-614">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="616b6-615">次のコード例は、ブラウザーがサポートするかどうかを確認する方法を示しています、 `multiple` HTML の属性`<select>`要素。</span><span class="sxs-lookup"><span data-stu-id="616b6-615">The following code example shows how to determine whether the browser supports the `multiple` attribute of HTML `<select>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsSelectMultiple#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsSelectMultiple/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsSelectMultiple#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsSelectMultiple/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsUncheck">
      <MemberSignature Language="C#" Value="public virtual bool SupportsUncheck { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsUncheck" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsUncheck" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsUncheck As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsUncheck { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-616">オンになっている HTML <see langword="&lt;input type=checkbox&gt;" /> 要素がオフになったときに、その変更がポストバック データに反映されるかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-616">Gets a value indicating whether the clearing of a checked HTML <see langword="&lt;input type=checkbox&gt;" /> element is reflected in postback data.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-617">オンになっている HTML <see langword="true" /> 要素がオフになったときに、その変更がポストバック データに反映される場合は <see langword="&lt;input type=checkbox&gt;" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-617">
              <see langword="true" /> if the clearing of a checked HTML <see langword="&lt;input type=checkbox&gt;" /> element is reflected in postback data; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="616b6-618">既定値は、<see langword="true" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-618">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="616b6-619">場合`false`の値、 `checked` HTML の属性`<input type=checkbox>`ポストバック データから要素を省略するとします。</span><span class="sxs-lookup"><span data-stu-id="616b6-619">If `false`, the value of the `checked` attribute of HTML `<input type=checkbox>` elements is omitted from postback data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="616b6-620">次のコード例を確認する方法を示して かどうかチェックされた HTML の消去`<input type=checkbox>`要素がポストバック データに反映されます。</span><span class="sxs-lookup"><span data-stu-id="616b6-620">The following code example shows how to determine whether the clearing of a checked HTML `<input type=checkbox>` element is reflected in postback data.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsUncheck#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsUncheck/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsUncheck#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsUncheck/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsXmlHttp">
      <MemberSignature Language="C#" Value="public virtual bool SupportsXmlHttp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsXmlHttp" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsXmlHttp As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsXmlHttp { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-621">ブラウザーが HTTP 経由の XML 受信をサポートしているかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-621">Gets a value indicating whether the browser supports receiving XML over HTTP.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-622">ブラウザーが HTTP 経由の XML 受信をサポートしている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-622">
              <see langword="true" /> if the browser supports receiving XML over HTTP; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="616b6-623">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-623">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="616b6-624">次のコード例は、ブラウザーが HTTP 経由での XML の受信をサポートしているかどうかを確認する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="616b6-624">The following code example shows how to determine whether the browser supports receiving XML over HTTP.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsXmlHttp#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsXmlHttp/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsXmlHttp#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsXmlHttp/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IFilterResolutionService.CompareFilters">
      <MemberSignature Language="C#" Value="int IFilterResolutionService.CompareFilters (string filter1, string filter2);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Web.UI.IFilterResolutionService.CompareFilters(string filter1, string filter2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpCapabilitiesBase.System#Web#UI#IFilterResolutionService#CompareFilters(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Function CompareFilters (filter1 As String, filter2 As String) As Integer Implements IFilterResolutionService.CompareFilters" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Web.UI.IFilterResolutionService.CompareFilters(System::String ^ filter1, System::String ^ filter2) = System::Web::UI::IFilterResolutionService::CompareFilters;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IFilterResolutionService.CompareFilters(System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter1" Type="System.String" />
        <Parameter Name="filter2" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filter1">
          <span data-ttu-id="616b6-625">比較する最初のフィルター。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-625">The first filter to compare.</span>
          </span>
        </param>
        <param name="filter2">
          <span data-ttu-id="616b6-626">比較する 2 番目のフィルター。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-626">The second filter to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="616b6-627">フィルターを比較する目的で内部的に使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-627">Used internally to compare filters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="616b6-628">
            <paramref name="filter1" /> が <paramref name="filter2" /> の親の場合は 1。<paramref name="filter2" /> が <paramref name="filter1" /> の親の場合は -1。<paramref name="filter1" /> と <paramref name="filter2" /> 間に親子関係がない場合は 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-628">1 if <paramref name="filter1" /> is a parent of <paramref name="filter2" />; -1 if <paramref name="filter2" /> is a parent of <paramref name="filter1" />; 0 if there is no parent-child relationship between <paramref name="filter1" /> and <paramref name="filter2" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IFilterResolutionService.EvaluateFilter">
      <MemberSignature Language="C#" Value="bool IFilterResolutionService.EvaluateFilter (string filterName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Web.UI.IFilterResolutionService.EvaluateFilter(string filterName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpCapabilitiesBase.System#Web#UI#IFilterResolutionService#EvaluateFilter(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function EvaluateFilter (filterName As String) As Boolean Implements IFilterResolutionService.EvaluateFilter" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Web.UI.IFilterResolutionService.EvaluateFilter(System::String ^ filterName) = System::Web::UI::IFilterResolutionService::EvaluateFilter;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IFilterResolutionService.EvaluateFilter(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filterName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filterName">
          <span data-ttu-id="616b6-629">評価するフィルター。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-629">The filter to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="616b6-630">フィルターを評価する目的で内部的に使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-630">Used internally to evaluate a filter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="616b6-631">フィルターが正常に評価された場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-631">
              <see langword="true" /> if the filter was successfully evaluated; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tables">
      <MemberSignature Language="C#" Value="public bool Tables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Tables" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Tables" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Tables As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Tables { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-632">ブラウザーが HTML <see langword="&lt;table&gt;" /> 要素をサポートしているかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-632">Gets a value indicating whether the browser supports HTML <see langword="&lt;table&gt;" /> elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-633">ブラウザーが HTML <see langword="true" /> 要素をサポートしている場合は <see langword="&lt;table&gt;" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-633">
              <see langword="true" /> if the browser supports HTML <see langword="&lt;table&gt;" /> elements; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="616b6-634">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-634">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="616b6-635">次のコード例は、ブラウザーが HTML をサポートしているかどうかを確認する方法を示しています。`<table>`要素。</span><span class="sxs-lookup"><span data-stu-id="616b6-635">The following code example shows how to determine whether the browser supports HTML `<table>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.Tables#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.Tables/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.Tables#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.Tables/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TagWriter">
      <MemberSignature Language="C#" Value="public Type TagWriter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type TagWriter" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.TagWriter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TagWriter As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ TagWriter { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-636">ブラウザー用のタグを記述するために使用されるオブジェクトの型を取得する目的で、内部的に使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-636">Used internally to get the type of the object that is used to write tags for the browser.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-637">ブラウザー用のタグを記述するために使用されるオブジェクトの <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-637">The <see cref="T:System.Type" /> of the object that is used to write tags for the browser.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Web.HttpUnhandledException">
          <span data-ttu-id="616b6-638">解析エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-638">There is a parse error.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public string Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Type" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Type { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-639">ブラウザーの名前およびメジャー (整数) バージョン番号を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-639">Gets the name and major (integer) version number of the browser.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-640">ブラウザーの名前とメジャー バージョン番号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-640">The name and major version number of the browser.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="616b6-641">次のコード例では、ブラウザーが Internet Explorer version 6 であるかどうかを確認する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="616b6-641">The following code example shows how to determine whether the browser is Internet Explorer version 6.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.Type#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.Type/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.Type#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.Type/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseOptimizedCacheKey">
      <MemberSignature Language="C#" Value="public bool UseOptimizedCacheKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseOptimizedCacheKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.UseOptimizedCacheKey" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UseOptimizedCacheKey As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseOptimizedCacheKey { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-642">最適化されたキャッシュ キーを使用するかどうかを示す値を取得する目的で内部的に使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-642">Used internally to get a value indicating whether to use an optimized cache key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-643">最適化されたキャッシュ キーを使用する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-643">
              <see langword="true" /> to use an optimized cache key; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="616b6-644">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-644">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VBScript">
      <MemberSignature Language="C#" Value="public bool VBScript { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool VBScript" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.VBScript" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VBScript As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool VBScript { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-645">ブラウザーが VBScript (Visual Basic Scripting Edition) をサポートしているかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-645">Gets a value indicating whether the browser supports Visual Basic Scripting edition (VBScript).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-646">ブラウザーが VBScript をサポートしている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-646">
              <see langword="true" /> if the browser supports VBScript; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="616b6-647">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-647">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="616b6-648">次のコード例では、ブラウザーが VBScript をサポートするかどうかを確認する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="616b6-648">The following code example shows how to determine whether the browser supports VBScript.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.VBScript#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.VBScript/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.VBScript#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.VBScript/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public string Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Version" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Version" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Version As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Version { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-649">ブラウザーの完全なバージョン番号 (整数と小数) を文字列として取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-649">Gets the full version number (integer and decimal) of the browser as a string.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-650">ブラウザーの完全なバージョン番号 (文字列)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-650">The full version number of the browser as a string.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="616b6-651"><xref:System.Web.Configuration.HttpCapabilitiesBase.Version%2A>プロパティ文字列を返します。</span><span class="sxs-lookup"><span data-stu-id="616b6-651">The <xref:System.Web.Configuration.HttpCapabilitiesBase.Version%2A> property returns a string.</span></span> <span data-ttu-id="616b6-652">一部のシナリオで、<xref:System.Web.Configuration.HttpCapabilitiesBase.Version%2A>ブラウザーまたはクライアント デバイスの場合などです"ベータ版であるとプロパティがアルファベット文字を含める可能性があります。</span><span class="sxs-lookup"><span data-stu-id="616b6-652">In some scenarios, the <xref:System.Web.Configuration.HttpCapabilitiesBase.Version%2A> property might contain letter characters, as in the case of a browser or client device that is a beta version such as "7.0b."</span></span> <span data-ttu-id="616b6-653">正しくバージョンを取得する、数値の比較で使用できるデータ型として、連結、<xref:System.Web.Configuration.HttpCapabilitiesBase.MajorVersion%2A>と<xref:System.Web.Configuration.HttpCapabilitiesBase.MinorVersion%2A>プロパティの値。</span><span class="sxs-lookup"><span data-stu-id="616b6-653">To correctly get the version as a data type that can be used in a numeric comparison, concatenate the <xref:System.Web.Configuration.HttpCapabilitiesBase.MajorVersion%2A> and <xref:System.Web.Configuration.HttpCapabilitiesBase.MinorVersion%2A> property values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="616b6-654">次のコード例を確認する方法を示しています、<xref:System.Web.Configuration.HttpCapabilitiesBase.Version%2A>ブラウザーのです。</span><span class="sxs-lookup"><span data-stu-id="616b6-654">The following code example shows how to determine the <xref:System.Web.Configuration.HttpCapabilitiesBase.Version%2A> of the browser.</span></span> <span data-ttu-id="616b6-655"><xref:System.Web.Configuration.HttpCapabilitiesBase.MajorVersion%2A>プロパティおよび<xref:System.Web.Configuration.HttpCapabilitiesBase.MinorVersion%2A>プロパティを連結して、結果を使用してブラウザーのバージョンが 5.01 より大きいかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="616b6-655">The <xref:System.Web.Configuration.HttpCapabilitiesBase.MajorVersion%2A> property and <xref:System.Web.Configuration.HttpCapabilitiesBase.MinorVersion%2A> property are concatenated and the result is used to determine whether the browser version is greater than 5.01.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.Version#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.Version/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.Version#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.Version/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Configuration.HttpCapabilitiesBase.MajorVersion" />
        <altmember cref="P:System.Web.Configuration.HttpCapabilitiesBase.MinorVersion" />
      </Docs>
    </Member>
    <Member MemberName="W3CDomVersion">
      <MemberSignature Language="C#" Value="public Version W3CDomVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version W3CDomVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.W3CDomVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property W3CDomVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ W3CDomVersion { Version ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-656">ブラウザーがサポートする World Wide Web コンソーシアム (W3C) XML ドキュメント オブジェクト モデル (DOM) のバージョンを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-656">Gets the version of the World Wide Web Consortium (W3C) XML Document Object Model (DOM) that the browser supports.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-657">ブラウザーがサポートする W3C XML DOM のバージョン番号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-657">The number of the W3C XML DOM version number that the browser supports.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="616b6-658">次のコード例では、ブラウザー W3C XML DOM のバージョンが 1 より大きいかどうかを判断する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="616b6-658">The following code example shows how to determine whether the browser W3C XML DOM version is greater than 1.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.W3CDomVersion#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.W3CDomVersion/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.W3CDomVersion#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.W3CDomVersion/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Win16">
      <MemberSignature Language="C#" Value="public bool Win16 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Win16" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Win16" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Win16 As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Win16 { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-659">クライアントが Win16 ベースのコンピューターかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-659">Gets a value indicating whether the client is a Win16-based computer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-660">ブラウザーが Win16 ベースのコンピューターで実行している場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-660">
              <see langword="true" /> if the browser is running on a Win16-based computer; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="616b6-661">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-661">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="616b6-662">次のコード例では、ブラウザーが Win16 ベースのコンピューターで実行されているかどうかを確認する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="616b6-662">The following code example shows how to determine whether the browser is running on a Win16-based computer.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.Win16#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.Win16/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.Win16#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.Win16/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Win32">
      <MemberSignature Language="C#" Value="public bool Win32 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Win32" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Win32" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Win32 As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Win32 { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="616b6-663">クライアントが Win32 ベースのコンピューターかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-663">Gets a value indicating whether the client is a Win32-based computer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="616b6-664">クライアントが Win32 ベースのコンピューターである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-664">
              <see langword="true" /> if the client is a Win32-based computer; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="616b6-665">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="616b6-665">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="616b6-666">次のコード例では、クライアントが Win32 ベースのコンピューターかどうかを判断する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="616b6-666">The following code example shows how to determine whether the client is a Win32-based computer.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.Win32#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.Win32/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.Win32#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.Win32/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>