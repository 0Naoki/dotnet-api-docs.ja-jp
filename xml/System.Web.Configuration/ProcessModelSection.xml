<Type Name="ProcessModelSection" FullName="System.Web.Configuration.ProcessModelSection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0397b24a088b19d53612ff1207f4f3e1d7df3059" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55386371" /></Metadata><TypeSignature Language="C#" Value="public sealed class ProcessModelSection : System.Configuration.ConfigurationSection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ProcessModelSection extends System.Configuration.ConfigurationSection" />
  <TypeSignature Language="DocId" Value="T:System.Web.Configuration.ProcessModelSection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ProcessModelSection&#xA;Inherits ConfigurationSection" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProcessModelSection sealed : System::Configuration::ConfigurationSection" />
  <TypeSignature Language="F#" Value="type ProcessModelSection = class&#xA;    inherit ConfigurationSection" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationSection</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="f0f7f-101">インターネット インフォメーション サービス (IIS: Internet Information Services) Web サーバー上の ASP.NET プロセス モデル設定を構成します。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-101">Configures the ASP.NET process model settings on an Internet Information Services (IIS) Web server.</span></span> <span data-ttu-id="f0f7f-102">このクラスは継承できません。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0f7f-103"><xref:System.Web.Configuration.ProcessModelSection> クラスを使用すると、構成ファイルの `processModel` セクションにプログラムからアクセスして変更できます。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-103">The <xref:System.Web.Configuration.ProcessModelSection> class provides a way to programmatically access and modify the `processModel` section of a configuration file.</span></span>  
  
 <span data-ttu-id="f0f7f-104"><xref:System.Web.Configuration.ProcessModelSection>クラスは、有効期間はどのようなセキュリティ id が、実行で作成されたインスタンスの数を含む、ASP.NET ワーカー プロセスのさまざまな側面を制御し、サイズ、CLR のスレッドのサービス要求にプールします。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-104">The <xref:System.Web.Configuration.ProcessModelSection> class controls various aspects of the ASP.NET worker process, including its lifetime, the number of instances created at a time, what security identity it runs under, and the size of the CLR thread pool to service requests.</span></span>  
  
 <span data-ttu-id="f0f7f-105">ASP.NET は、ネイティブ モードで選択した IIS 6 で実行されているが、時に、ASP.NET は、IIS 6 のプロセス モデルを使用して、このセクションではほとんどの設定は無視されます。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-105">When ASP.NET is running under IIS 6 in native mode, ASP.NET uses the IIS 6 process model and ignores most settings in this section.</span></span> <span data-ttu-id="f0f7f-106">IIS 管理ユーザー インターフェイス (UI) を使用して、これらのプロパティを構成します。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-106">Use the IIS administration user interface (UI) to configure those properties.</span></span> <span data-ttu-id="f0f7f-107">ASP.NET 構成ファイルで構成することができます、次のプロパティを引き続き使用する: <xref:System.Web.Configuration.ProcessModelSection.RequestQueueLimit%2A>、 <xref:System.Web.Configuration.ProcessModelSection.ResponseDeadlockInterval%2A>、 <xref:System.Web.Configuration.ProcessModelSection.MaxWorkerThreads%2A>、 <xref:System.Web.Configuration.ProcessModelSection.MaxIOThreads%2A>、 <xref:System.Web.Configuration.ProcessModelSection.MinWorkerThreads%2A>、および<xref:System.Web.Configuration.ProcessModelSection.MinWorkerThreads%2A>します。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-107">ASP.NET still uses the following properties, which can be configured through the configuration file: <xref:System.Web.Configuration.ProcessModelSection.RequestQueueLimit%2A>, <xref:System.Web.Configuration.ProcessModelSection.ResponseDeadlockInterval%2A>, <xref:System.Web.Configuration.ProcessModelSection.MaxWorkerThreads%2A>, <xref:System.Web.Configuration.ProcessModelSection.MaxIOThreads%2A>, <xref:System.Web.Configuration.ProcessModelSection.MinWorkerThreads%2A>, and <xref:System.Web.Configuration.ProcessModelSection.MinWorkerThreads%2A>.</span></span>  
  
 <span data-ttu-id="f0f7f-108">`processModel` ASP.NET ISAPI 拡張機能によって使用されるため、保護された構成の機能やツールを使用してセクションを暗号化することはできません。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-108">The `processModel` section cannot be encrypted using the protected-configuration feature or tools because it is consumed by the ASP.NET ISAPI extension.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f0f7f-109">この例は、宣言の複数の属性の値を指定する方法を示します、`processModel`セクションのメンバーとしてアクセスすることも、<xref:System.Web.Configuration.ProcessModelSection>クラス。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-109">This example demonstrates how to specify values declaratively for several attributes of the `processModel` section, which can also be accessed as members of the <xref:System.Web.Configuration.ProcessModelSection> class.</span></span>  
  
 <span data-ttu-id="f0f7f-110">次の構成ファイルの例は、宣言によっての値を指定する方法を示します、`processModel`セクション。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-110">The following configuration file example shows how to specify values declaratively for the `processModel` section.</span></span>  
  
```  
<processModel   
  enable="True" timeout="Infinite"   
  idleTimeout="Infinite"   
  shutdownTimeout="00:00:05" requestLimit="Infinite"  
  requestQueueLimit="5000" restartQueueLimit="10"   
  memoryLimit="60" webGarden="False" cpuMask="0xffffffff"   
  userName="machine" password="AutoGenerate" logLevel="Errors"  
  clientConnectedCheck="00:00:05"   
  comAuthenticationLevel="Connect" comImpersonationLevel="Impersonate"  
  responseDeadlockInterval="00:03:00"   
  responseRestartDeadlockInterval="00:03:00" autoConfig="True"  
  maxWorkerThreads="20" maxIoThreads="20" minWorkerThreads="1"  
  minIoThreads="1" serverErrorMessageFile="" pingFrequency="Infinite"  
  pingTimeout="Infinite" asyncOption="20" maxAppDomains="2000"   
/>  
```  
  
 <span data-ttu-id="f0f7f-111">次のコード例は、使用する方法を示します、<xref:System.Web.Configuration.ProcessModelSection>クラス。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-111">The following code example demonstrates how to use the <xref:System.Web.Configuration.ProcessModelSection> class.</span></span>  
  
 [!code-csharp[System.Web.Configuration.ProcessModelSection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/CS/processmodelsection.cs#1)]
 [!code-vb[System.Web.Configuration.ProcessModelSection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/VB/processmodelsection.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Configuration.ProcessModelSection" />
    <altmember cref="T:System.Web.Configuration.ProcessModelLogLevel" />
    <altmember cref="T:System.Web.Configuration.ProcessModelComAuthenticationLevel" />
    <altmember cref="T:System.Web.Configuration.ProcessModelComImpersonationLevel" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProcessModelSection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.ProcessModelSection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProcessModelSection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f0f7f-112">既定の設定を使用して <see cref="T:System.Web.Configuration.ProcessModelSection" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-112">Initializes a new instance of the <see cref="T:System.Web.Configuration.ProcessModelSection" /> class using default settings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0f7f-113"><xref:System.Web.Configuration.ProcessModelSection.%23ctor%2A>コンス トラクターは、コードから直接使用するものはありません。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-113">The <xref:System.Web.Configuration.ProcessModelSection.%23ctor%2A> constructor is not intended to be used directly from your code.</span></span> <span data-ttu-id="f0f7f-114">ASP.NET 構成システムによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-114">It is called by the ASP.NET configuration system.</span></span> <span data-ttu-id="f0f7f-115">インスタンスを取得する、<xref:System.Web.Configuration.ProcessModelSection>クラスを使用して、<xref:System.Configuration.Configuration.GetSection%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-115">You obtain an instance of the <xref:System.Web.Configuration.ProcessModelSection> class by using the <xref:System.Configuration.Configuration.GetSection%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.ConfigurationAllowDefinition" />
      </Docs>
    </Member>
    <Member MemberName="AutoConfig">
      <MemberSignature Language="C#" Value="public bool AutoConfig { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoConfig" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.ProcessModelSection.AutoConfig" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoConfig As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoConfig { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoConfig : bool with get, set" Usage="System.Web.Configuration.ProcessModelSection.AutoConfig" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("autoConfig", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f0f7f-116">ASP.NET パフォーマンス設定が ASP.NET アプリケーション用に自動構成されるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-116">Gets or sets a value indicating whether ASP.NET performance settings are automatically configured for ASP.NET applications.</span></span></summary>
        <value><span data-ttu-id="f0f7f-117">パフォーマンス設定が ASP.NET アプリケーション用に自動構成される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-117"><see langword="true" /> if performance settings are automatically configured for ASP.NET applications; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="f0f7f-118">既定値は <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-118">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0f7f-119">場合、<xref:System.Web.Configuration.ProcessModelSection.AutoConfig%2A>値に設定されて`false`Web.config の明示的な値を使用して ASP.NET アプリケーションのパフォーマンスの構成を決定します。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-119">If the <xref:System.Web.Configuration.ProcessModelSection.AutoConfig%2A> value is set to `false`, explicit Web.config values are used to determine performance configuration for the ASP.NET application.</span></span> <span data-ttu-id="f0f7f-120">場合、<xref:System.Web.Configuration.ProcessModelSection.AutoConfig%2A>値に設定されて`true`、ASP.NET アプリケーションのパフォーマンス設定が自動的に構成します。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-120">If the <xref:System.Web.Configuration.ProcessModelSection.AutoConfig%2A> value is set to `true`, the performance settings are automatically configured for the ASP.NET application.</span></span>  
  
 <span data-ttu-id="f0f7f-121"><xref:System.Web.Configuration.ProcessModelSection.AutoConfig%2A>値が明示的に設定されている`true`Machine.config ファイルにします。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-121">The <xref:System.Web.Configuration.ProcessModelSection.AutoConfig%2A> value is explicitly set to `true` in the Machine.config file.</span></span> <span data-ttu-id="f0f7f-122">既定のコード値に設定されます`false`します。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-122">The default code value is set to `false`.</span></span>  <span data-ttu-id="f0f7f-123">場合、 <xref:System.Web.Configuration.ProcessModelSection.AutoConfig%2A> Machine.config から値が削除され、自動構成設定ではなく明示的な設定が使用されます。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-123">If the <xref:System.Web.Configuration.ProcessModelSection.AutoConfig%2A> value is removed from Machine.config, the explicit settings are used instead of the auto-configured settings.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Configuration.ProcessModelSection.MaxWorkerThreads" />
        <altmember cref="P:System.Web.Configuration.ProcessModelSection.MaxIOThreads" />
        <altmember cref="P:System.Web.Configuration.HttpRuntimeSection.MinFreeThreads" />
        <altmember cref="P:System.Web.Configuration.HttpRuntimeSection.MinLocalRequestFreeThreads" />
        <altmember cref="P:System.Net.Configuration.ConnectionManagementElement.MaxConnection" />
      </Docs>
    </Member>
    <Member MemberName="ClientConnectedCheck">
      <MemberSignature Language="C#" Value="public TimeSpan ClientConnectedCheck { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan ClientConnectedCheck" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.ProcessModelSection.ClientConnectedCheck" />
      <MemberSignature Language="VB.NET" Value="Public Property ClientConnectedCheck As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan ClientConnectedCheck { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.ClientConnectedCheck : TimeSpan with get, set" Usage="System.Web.Configuration.ProcessModelSection.ClientConnectedCheck" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Configuration.InfiniteTimeSpanConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("clientConnectedCheck", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f0f7f-124">要求がキューに置かれている期間を示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-124">Gets or sets a value indicating how long a request is left in the queue.</span></span></summary>
        <value><span data-ttu-id="f0f7f-125">キューに置かれる時間を示す <see cref="T:System.TimeSpan" /> 値。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-125">A <see cref="T:System.TimeSpan" /> value indicating the queuing time.</span></span> <span data-ttu-id="f0f7f-126">既定値は、5 秒です。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-126">The default value is 5 seconds.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0f7f-127">このプロパティは、要求は、どのくらいの時間を指定します ASP.NET がクライアント接続チェックを実行する前にキューに登録します。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-127">This property specifies how long a request is queued before ASP.NET performs a client connected check.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f0f7f-128">要求が待ちのときに、間隔が経過すると、クライアント接続チェックは経由で要求を処理するための ASP.NET ワーカー プロセスに渡す前に行われます。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-128">If the interval expires while the request is still queued, a client connected check is done before passing the request over to the ASP.NET worker process for handling.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f0f7f-129">次のコード例は、アクセスおよび変更する方法を示しています、<xref:System.Web.Configuration.ProcessModelSection.ClientConnectedCheck%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-129">The following code example shows how to access and modify the <xref:System.Web.Configuration.ProcessModelSection.ClientConnectedCheck%2A> property.</span></span>  
  
 [!code-csharp[System.Web.Configuration.ProcessModelSection#18](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/CS/processmodelsection.cs#18)]
 [!code-vb[System.Web.Configuration.ProcessModelSection#18](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/VB/processmodelsection.vb#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ComAuthenticationLevel">
      <MemberSignature Language="C#" Value="public System.Web.Configuration.ProcessModelComAuthenticationLevel ComAuthenticationLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Configuration.ProcessModelComAuthenticationLevel ComAuthenticationLevel" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.ProcessModelSection.ComAuthenticationLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property ComAuthenticationLevel As ProcessModelComAuthenticationLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Configuration::ProcessModelComAuthenticationLevel ComAuthenticationLevel { System::Web::Configuration::ProcessModelComAuthenticationLevel get(); void set(System::Web::Configuration::ProcessModelComAuthenticationLevel value); };" />
      <MemberSignature Language="F#" Value="member this.ComAuthenticationLevel : System.Web.Configuration.ProcessModelComAuthenticationLevel with get, set" Usage="System.Web.Configuration.ProcessModelSection.ComAuthenticationLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("comAuthenticationLevel", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.ProcessModelComAuthenticationLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f0f7f-130">DCOM セキュリティの認証レベルを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-130">Gets or sets a value indicating the level of authentication for DCOM security.</span></span></summary>
        <value><span data-ttu-id="f0f7f-131"><see cref="T:System.Web.Configuration.ProcessModelComAuthenticationLevel" /> 値のいずれか。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-131">One of the <see cref="T:System.Web.Configuration.ProcessModelComAuthenticationLevel" /> values.</span></span> <span data-ttu-id="f0f7f-132">既定値は <see cref="F:System.Web.Configuration.ProcessModelComAuthenticationLevel.Connect" /> です。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-132">The default value is <see cref="F:System.Web.Configuration.ProcessModelComAuthenticationLevel.Connect" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0f7f-133">このプロパティの値に設定すると<xref:System.Web.Configuration.ProcessModelComAuthenticationLevel.Default>、DCOM セキュリティ ネゴシエーションの標準アルゴリズムを使用して認証レベルを決定します。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-133">When this property value is set to <xref:System.Web.Configuration.ProcessModelComAuthenticationLevel.Default>, DCOM determines the authentication level using its normal security-negotiation algorithm.</span></span> <span data-ttu-id="f0f7f-134">Machine.config ファイルで指定されている、このプロパティに割り当てられている既定値は<xref:System.Web.Configuration.ProcessModelComAuthenticationLevel.Connect>します。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-134">The default value assigned to this property, as specified in the Machine.config file, is <xref:System.Web.Configuration.ProcessModelComAuthenticationLevel.Connect>.</span></span> <span data-ttu-id="f0f7f-135">この場合、DCOM は、クライアント サーバーとの関係を確立する場合にのみ、クライアントの資格情報を認証します。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-135">In this case, DCOM authenticates the credentials of the client only when the client establishes a relationship with the server.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f0f7f-136"><xref:System.Web.Configuration.ProcessModelSection.ComAuthenticationLevel%2A> プロパティへのアクセス方法を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-136">The following code example shows how to access the <xref:System.Web.Configuration.ProcessModelSection.ComAuthenticationLevel%2A> property.</span></span>  
  
 [!code-csharp[System.Web.Configuration.ProcessModelSection#21](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/CS/processmodelsection.cs#21)]
 [!code-vb[System.Web.Configuration.ProcessModelSection#21](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/VB/processmodelsection.vb#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ComImpersonationLevel">
      <MemberSignature Language="C#" Value="public System.Web.Configuration.ProcessModelComImpersonationLevel ComImpersonationLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Configuration.ProcessModelComImpersonationLevel ComImpersonationLevel" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.ProcessModelSection.ComImpersonationLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property ComImpersonationLevel As ProcessModelComImpersonationLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Configuration::ProcessModelComImpersonationLevel ComImpersonationLevel { System::Web::Configuration::ProcessModelComImpersonationLevel get(); void set(System::Web::Configuration::ProcessModelComImpersonationLevel value); };" />
      <MemberSignature Language="F#" Value="member this.ComImpersonationLevel : System.Web.Configuration.ProcessModelComImpersonationLevel with get, set" Usage="System.Web.Configuration.ProcessModelSection.ComImpersonationLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("comImpersonationLevel", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.ProcessModelComImpersonationLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f0f7f-137">COM セキュリティの認証レベルを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-137">Gets or sets a value indicating the level of authentication for COM security.</span></span></summary>
        <value><span data-ttu-id="f0f7f-138"><see cref="T:System.Web.Configuration.ProcessModelComImpersonationLevel" /> 値のいずれか。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-138">One of the <see cref="T:System.Web.Configuration.ProcessModelComImpersonationLevel" /> values.</span></span> <span data-ttu-id="f0f7f-139">既定値は <see cref="F:System.Web.Configuration.ProcessModelComImpersonationLevel.Impersonate" /> です。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-139">The default value is <see cref="F:System.Web.Configuration.ProcessModelComImpersonationLevel.Impersonate" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0f7f-140">このプロパティの値を設定すると<xref:System.Web.Configuration.ProcessModelComImpersonationLevel.Default>DCOM は、通常のセキュリティ ネゴシエーション アルゴリズムを使用して偽装レベルを決定します。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-140">When this property value is set to <xref:System.Web.Configuration.ProcessModelComImpersonationLevel.Default>, DCOM determines the impersonation level using its normal security-negotiation algorithm.</span></span> <span data-ttu-id="f0f7f-141">Machine.config ファイルで指定されている、このプロパティに割り当てられている既定値は<xref:System.Web.Configuration.ProcessModelComImpersonationLevel.Impersonate>します。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-141">The default value assigned to this property, as specified in the Machine.config file, is <xref:System.Web.Configuration.ProcessModelComImpersonationLevel.Impersonate>.</span></span> <span data-ttu-id="f0f7f-142">この場合、サーバー プロセスは、クライアントに代わってアクションを実行中に、クライアントのセキュリティ コンテキストを偽装できます。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-142">In this case, the server process can impersonate the client's security context while acting on behalf of the client.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f0f7f-143"><xref:System.Web.Configuration.ProcessModelSection.ComImpersonationLevel%2A> プロパティへのアクセス方法を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-143">The following code example shows how to access the <xref:System.Web.Configuration.ProcessModelSection.ComImpersonationLevel%2A> property.</span></span>  
  
 [!code-csharp[System.Web.Configuration.ProcessModelSection#22](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/CS/processmodelsection.cs#22)]
 [!code-vb[System.Web.Configuration.ProcessModelSection#22](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/VB/processmodelsection.vb#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CpuMask">
      <MemberSignature Language="C#" Value="public int CpuMask { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CpuMask" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.ProcessModelSection.CpuMask" />
      <MemberSignature Language="VB.NET" Value="Public Property CpuMask As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CpuMask { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CpuMask : int with get, set" Usage="System.Web.Configuration.ProcessModelSection.CpuMask" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("cpuMask", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f0f7f-144">マルチプロセッサ サーバーのどのプロセッサが ASP.NET プロセスの実行に適しているかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-144">Gets or sets a value indicating which processors on a multiprocessor server are eligible to run ASP.NET processes.</span></span></summary>
        <value><span data-ttu-id="f0f7f-145">適用するビット パターンを表す数値。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-145">The number representing the bit pattern to apply.</span></span> <span data-ttu-id="f0f7f-146">既定値は 0xFFFFFFFF です。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-146">The default value is 0xFFFFFFFF.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0f7f-147"><xref:System.Web.Configuration.ProcessModelSection.CpuMask%2A>値は、ASP.NET スレッドを実行する対象の Cpu を表すビット パターンを指定します。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-147">The <xref:System.Web.Configuration.ProcessModelSection.CpuMask%2A> value specifies a bit pattern that indicates the CPUs eligible to run ASP.NET threads.</span></span> <span data-ttu-id="f0f7f-148">場合、<xref:System.Web.Configuration.ProcessModelSection.WebGarden%2A>プロパティに設定されて`true`、<xref:System.Web.Configuration.ProcessModelSection.CpuMask%2A>ワーカー プロセスが有効な Cpu の数を制限します。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-148">If the <xref:System.Web.Configuration.ProcessModelSection.WebGarden%2A> property is set to `true`, the <xref:System.Web.Configuration.ProcessModelSection.CpuMask%2A> limits worker processes to the number of eligible CPUs.</span></span> <span data-ttu-id="f0f7f-149">ワーカー プロセスの最大許容数は Cpu の数です。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-149">The maximum allowed number of worker processes is equal to the number of CPUs.</span></span> <span data-ttu-id="f0f7f-150">既定では、すべての Cpu を有効にし、ASP.NET は、各 CPU の 1 つのプロセスを起動します。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-150">By default, all CPUs are enabled and ASP.NET launches one process for each CPU.</span></span> <span data-ttu-id="f0f7f-151">場合、<xref:System.Web.Configuration.ProcessModelSection.WebGarden%2A>プロパティに設定されて`false`、<xref:System.Web.Configuration.ProcessModelSection.CpuMask%2A>属性は無視され、1 つだけのワーカー プロセスが実行されます。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-151">If the <xref:System.Web.Configuration.ProcessModelSection.WebGarden%2A> property is set to `false`, the <xref:System.Web.Configuration.ProcessModelSection.CpuMask%2A> attribute is ignored and only one worker process will run.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f0f7f-152"><xref:System.Web.Configuration.ProcessModelSection.CpuMask%2A> プロパティへのアクセス方法を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-152">The following code example shows how to access the <xref:System.Web.Configuration.ProcessModelSection.CpuMask%2A> property.</span></span>  
  
 [!code-csharp[System.Web.Configuration.ProcessModelSection#25](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/CS/processmodelsection.cs#25)]
 [!code-vb[System.Web.Configuration.ProcessModelSection#25](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/VB/processmodelsection.vb#25)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ElementProperty">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationElementProperty ElementProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationElementProperty ElementProperty" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.ProcessModelSection.ElementProperty" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ElementProperty As ConfigurationElementProperty" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Configuration::ConfigurationElementProperty ^ ElementProperty { System::Configuration::ConfigurationElementProperty ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ElementProperty : System.Configuration.ConfigurationElementProperty" Usage="System.Web.Configuration.ProcessModelSection.ElementProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationElementProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Enable">
      <MemberSignature Language="C#" Value="public bool Enable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enable" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.ProcessModelSection.Enable" />
      <MemberSignature Language="VB.NET" Value="Public Property Enable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enable : bool with get, set" Usage="System.Web.Configuration.ProcessModelSection.Enable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("enable", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f0f7f-153">プロセス モデルが有効かどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-153">Gets or sets a value indicating whether the process model is enabled.</span></span></summary>
        <value><span data-ttu-id="f0f7f-154">プロセス モデルが有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-154"><see langword="true" /> if the process model is enabled; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="f0f7f-155">既定値は <see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-155">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0f7f-156"><xref:System.Web.Configuration.ProcessModelSection.Enable%2A>プロパティは、ASP.NET が、外部のワーカー プロセスでホストされているかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-156">The <xref:System.Web.Configuration.ProcessModelSection.Enable%2A> property specifies whether ASP.NET is hosted in an external worker process.</span></span> <span data-ttu-id="f0f7f-157">場合<xref:System.Web.Configuration.ProcessModelSection.Enable%2A>は`true`、ASP.NET 以外の場合、外部のワーカー プロセスでホストされているは、Inetinfo.exe で直接実行されます。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-157">If <xref:System.Web.Configuration.ProcessModelSection.Enable%2A> is `true`, ASP.NET is hosted in an external worker process; otherwise, it runs directly in Inetinfo.exe.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f0f7f-158">これは、アプリケーションをローカル システムのセキュリティ コンテキストで実行されているため、ASP.NET を Inetinfo.exe で実行されているはお勧めできません。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-158">Running ASP.NET in Inetinfo.exe is not recommended, because this involves running the application in the Local System security context.</span></span> <span data-ttu-id="f0f7f-159">インターネット インフォメーション サービス (IIS) 6 のネイティブ モードで実行される ASP.NET と、この設定は無視されます、通常に設定する必要はありませんので`false`します。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-159">When ASP.NET runs in Internet Information Services (IIS) 6 native mode, this setting is ignored, so there is usually no reason to set it to `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f0f7f-160"><xref:System.Web.Configuration.ProcessModelSection.Enable%2A> プロパティへのアクセス方法を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-160">The following code example shows how to access the <xref:System.Web.Configuration.ProcessModelSection.Enable%2A> property.</span></span>  
  
 [!code-csharp[System.Web.Configuration.ProcessModelSection#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/CS/processmodelsection.cs#2)]
 [!code-vb[System.Web.Configuration.ProcessModelSection#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/VB/processmodelsection.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IdleTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan IdleTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan IdleTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.ProcessModelSection.IdleTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property IdleTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan IdleTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.IdleTimeout : TimeSpan with get, set" Usage="System.Web.Configuration.ProcessModelSection.IdleTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Configuration.InfiniteTimeSpanConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("idleTimeout", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f0f7f-161">ASP.NET がワーカー プロセスを自動終了する前の非アクティブ期間を示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-161">Gets or sets a value indicating the period of inactivity after which ASP.NET automatically ends the worker process.</span></span></summary>
        <value><span data-ttu-id="f0f7f-162">アイドル時間を示す <see cref="T:System.TimeSpan" />値。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-162">A <see cref="T:System.TimeSpan" /> value indicating the idle time.</span></span> <span data-ttu-id="f0f7f-163">既定値は Infinite で、<see cref="F:System.TimeSpan.MaxValue" /> に対応します。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-163">The default value is Infinite, which corresponds to <see cref="F:System.TimeSpan.MaxValue" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0f7f-164">ワーカー プロセスを再起動すると (バウンス)、<xref:System.Web.Configuration.ProcessModelSection.IdleTimeout%2A>プロパティの値に達した。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-164">The worker process is restarted (bounced) when the <xref:System.Web.Configuration.ProcessModelSection.IdleTimeout%2A> property value is reached.</span></span> <span data-ttu-id="f0f7f-165">既定では、のみの 2 つの条件が発生するプロセスがバウンス: プロセスに許可されているメモリの制限を超えています。 または、プロセスがキューに置かれる要求の最大数を超えています。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-165">By default, only two conditions cause the process to bounce: the process exceeds the allowed memory limit, or the process exceeds the allowed number of requests that can be queued.</span></span> <span data-ttu-id="f0f7f-166">既定の他の条件を追加できます。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-166">You can add other conditions to the default ones.</span></span> <span data-ttu-id="f0f7f-167">たとえば、使用することができます、<xref:System.Web.Configuration.ProcessModelSection.IdleTimeout%2A>ワーカー プロセスがアイドル状態の時間を制限するプロパティ。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-167">For example, you can use the <xref:System.Web.Configuration.ProcessModelSection.IdleTimeout%2A> property to limit the time the worker process is idle.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f0f7f-168"><xref:System.Web.Configuration.ProcessModelSection.IdleTimeout%2A> プロパティへのアクセス方法を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-168">The following code example shows how to access the <xref:System.Web.Configuration.ProcessModelSection.IdleTimeout%2A> property.</span></span>  
  
 [!code-csharp[System.Web.Configuration.ProcessModelSection#16](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/CS/processmodelsection.cs#16)]
 [!code-vb[System.Web.Configuration.ProcessModelSection#16](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/VB/processmodelsection.vb#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogLevel">
      <MemberSignature Language="C#" Value="public System.Web.Configuration.ProcessModelLogLevel LogLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Configuration.ProcessModelLogLevel LogLevel" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.ProcessModelSection.LogLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property LogLevel As ProcessModelLogLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Configuration::ProcessModelLogLevel LogLevel { System::Web::Configuration::ProcessModelLogLevel get(); void set(System::Web::Configuration::ProcessModelLogLevel value); };" />
      <MemberSignature Language="F#" Value="member this.LogLevel : System.Web.Configuration.ProcessModelLogLevel with get, set" Usage="System.Web.Configuration.ProcessModelSection.LogLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("logLevel", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.ProcessModelLogLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f0f7f-169">イベント ログに記録するイベントの種類を示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-169">Gets or sets a value indicating the event types to be logged to the event log.</span></span></summary>
        <value><span data-ttu-id="f0f7f-170"><see cref="T:System.Web.Configuration.ProcessModelLogLevel" /> 値のいずれか。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-170">One of the <see cref="T:System.Web.Configuration.ProcessModelLogLevel" /> values.</span></span> <span data-ttu-id="f0f7f-171">既定値は <see cref="F:System.Web.Configuration.ProcessModelLogLevel.Errors" /> です。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-171">The default value is <see cref="F:System.Web.Configuration.ProcessModelLogLevel.Errors" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0f7f-172">このプロパティを正しく使用すると、システムにログオン エラーをフィルター処理することができます。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-172">By using this property correctly, you can filter the errors the system can log.</span></span> <span data-ttu-id="f0f7f-173">アプリケーションの不具合やボトルネックのアイデアがある場合は後、は、興味のあるエラーの範囲が狭く戦略を立てるしたい場合があります。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-173">After you have an idea of the application's malfunctions or bottlenecks, you might want to devise a strategy that narrows the range of errors you are interested in.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f0f7f-174"><xref:System.Web.Configuration.ProcessModelSection.LogLevel%2A> プロパティへのアクセス方法を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-174">The following code example shows how to access the <xref:System.Web.Configuration.ProcessModelSection.LogLevel%2A> property.</span></span>  
  
 [!code-csharp[System.Web.Configuration.ProcessModelSection#23](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/CS/processmodelsection.cs#23)]
 [!code-vb[System.Web.Configuration.ProcessModelSection#23](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/VB/processmodelsection.vb#23)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Configuration.ProcessModelLogLevel" />
      </Docs>
    </Member>
    <Member MemberName="MaxAppDomains">
      <MemberSignature Language="C#" Value="public int MaxAppDomains { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxAppDomains" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.ProcessModelSection.MaxAppDomains" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxAppDomains As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxAppDomains { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxAppDomains : int with get, set" Usage="System.Web.Configuration.ProcessModelSection.MaxAppDomains" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("maxAppDomains", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.IntegerValidator(MaxValue=2147483646, MinValue=1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f0f7f-175">1 つのプロセスに許容されるアプリケーション ドメイン数の上限を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-175">Gets or sets the maximum allowed number of application domains in one process.</span></span></summary>
        <value><span data-ttu-id="f0f7f-176">1 つのプロセスに許容されるアプリケーション ドメイン数の上限。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-176">The maximum allowed number of application domains in one process.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0f7f-177">場合、<xref:System.Web.Configuration.ProcessModelSection.MaxAppDomains%2A>しきい値を超過すると、最も使用されるアプリケーション ドメインがシャット ダウン場合は、新しいアプリケーション ドメインを開始する必要があります。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-177">If the <xref:System.Web.Configuration.ProcessModelSection.MaxAppDomains%2A> threshold is exceeded, the least-used application domain is shut down if a new application domain must start.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f0f7f-178"><xref:System.Web.Configuration.ProcessModelSection.MaxAppDomains%2A> プロパティへのアクセス方法を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-178">The following code example shows how to access the <xref:System.Web.Configuration.ProcessModelSection.MaxAppDomains%2A> property.</span></span>  
  
 [!code-csharp[System.Web.Configuration.ProcessModelSection#27](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/CS/processmodelsection.cs#27)]
 [!code-vb[System.Web.Configuration.ProcessModelSection#27](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/VB/processmodelsection.vb#27)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxIOThreads">
      <MemberSignature Language="C#" Value="public int MaxIOThreads { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxIOThreads" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.ProcessModelSection.MaxIOThreads" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxIOThreads As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxIOThreads { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxIOThreads : int with get, set" Usage="System.Web.Configuration.ProcessModelSection.MaxIOThreads" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("maxIoThreads", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.IntegerValidator(MaxValue=2147483646, MinValue=1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f0f7f-179">CLR スレッド プールにおける CPU あたりの I/O スレッド数の上限を示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-179">Gets or sets a value indicating the maximum number of I/O threads per CPU in the CLR thread pool.</span></span></summary>
        <value><span data-ttu-id="f0f7f-180">スレッド数の上限。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-180">The maximum number of threads.</span></span> <span data-ttu-id="f0f7f-181">既定値は 20 です。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-181">The default is 20.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0f7f-182">値<xref:System.Web.Configuration.ProcessModelSection.MaxIOThreads%2A>以上になる必要があります、<xref:System.Web.Configuration.HttpRuntimeSection.MinFreeThreads%2A>での設定、`httpRuntime`構成セクション。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-182">The value of <xref:System.Web.Configuration.ProcessModelSection.MaxIOThreads%2A> must be equal to or greater than the <xref:System.Web.Configuration.HttpRuntimeSection.MinFreeThreads%2A> setting in the `httpRuntime` configuration section.</span></span>  
  
 <span data-ttu-id="f0f7f-183">使用してワーカー スレッドと I/O のスレッドの数を設定して CPU 使用率をある程度の制御がすることができます、<xref:System.Web.Configuration.ProcessModelSection.MaxWorkerThreads%2A>プロパティおよび<xref:System.Web.Configuration.ProcessModelSection.MaxIOThreads%2A>プロパティそれぞれします。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-183">You can have some control over the CPU utilization by setting the number of worker threads and I/O threads, using the <xref:System.Web.Configuration.ProcessModelSection.MaxWorkerThreads%2A> property and the <xref:System.Web.Configuration.ProcessModelSection.MaxIOThreads%2A> property respectively.</span></span>  
  
 <span data-ttu-id="f0f7f-184">スレッドの 2 種類の違いは、後者の場合は、ストリームまたはパイプなどの I/O オブジェクトにバインドされ、前者は従来の制限のないスレッドことです。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-184">The difference between the two types of threads is that the latter are bound to I/O objects, such as a stream or a pipe, and the former are traditional unrestricted threads.</span></span> <span data-ttu-id="f0f7f-185">インターネット インフォメーション サービス (IIS) 6.0 以降のバージョンには、ASP.NET では、ワーカー スレッドで要求を処理します。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-185">For Internet Information Services (IIS) version 6.0 and later, ASP.NET processes requests on worker threads.</span></span> <span data-ttu-id="f0f7f-186">これは、ASP.NET が IIS 内で統合されているためにです。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-186">This is because ASP.NET is integrated within IIS.</span></span>  
  
 <span data-ttu-id="f0f7f-187">これらのスレッドは、アプリケーションに属するプロセス全体の CLR スレッド プールから取得されます。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-187">These threads are obtained from the process-wide CLR thread pool belonging to an application.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f0f7f-188">通常、許可されているスレッドの既定値は、高い CPU 使用率を維持するための十分なです。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-188">Usually the default values for the allowed threads are sufficient to keep the CPU utilization high.</span></span> <span data-ttu-id="f0f7f-189">何らかの理由は、アプリケーションが低速では、外部リソースを待機など場合、100 未満の値をスレッドの数を増やすしようとする可能性があります。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-189">If for some reason your application is slow, perhaps waiting for external resources, you could try to increase the number of threads to a value less than 100.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f0f7f-190"><xref:System.Web.Configuration.ProcessModelSection.MaxIOThreads%2A> プロパティへのアクセス方法を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-190">The following code example shows how to access the <xref:System.Web.Configuration.ProcessModelSection.MaxIOThreads%2A> property.</span></span>  
  
 [!code-csharp[System.Web.Configuration.ProcessModelSection#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/CS/processmodelsection.cs#5)]
 [!code-vb[System.Web.Configuration.ProcessModelSection#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/VB/processmodelsection.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Configuration.HttpRuntimeSection" />
      </Docs>
    </Member>
    <Member MemberName="MaxWorkerThreads">
      <MemberSignature Language="C#" Value="public int MaxWorkerThreads { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxWorkerThreads" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.ProcessModelSection.MaxWorkerThreads" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxWorkerThreads As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxWorkerThreads { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxWorkerThreads : int with get, set" Usage="System.Web.Configuration.ProcessModelSection.MaxWorkerThreads" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("maxWorkerThreads", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.IntegerValidator(MaxValue=2147483646, MinValue=1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f0f7f-191">CLR スレッド プールにおける CPU あたりのワーカー スレッド数の上限を示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-191">Gets or sets a value indicating the maximum amount of worker threads per CPU in the CLR thread pool.</span></span></summary>
        <value><span data-ttu-id="f0f7f-192">スレッド数の上限。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-192">The maximum number of threads.</span></span> <span data-ttu-id="f0f7f-193">既定値は 20 です。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-193">The default is 20.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0f7f-194">値<xref:System.Web.Configuration.ProcessModelSection.MaxWorkerThreads%2A>以上になる必要があります、<xref:System.Web.Configuration.HttpRuntimeSection.MinFreeThreads%2A>での設定、`httpRuntime`構成セクション。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-194">The value of <xref:System.Web.Configuration.ProcessModelSection.MaxWorkerThreads%2A> must be equal to or greater than the <xref:System.Web.Configuration.HttpRuntimeSection.MinFreeThreads%2A> setting in the `httpRuntime` configuration section.</span></span>  
  
 <span data-ttu-id="f0f7f-195">使用してワーカー スレッドと I/O のスレッドの数を設定して CPU 使用率をある程度の制御がすることができます、<xref:System.Web.Configuration.ProcessModelSection.MaxWorkerThreads%2A>プロパティと、<xref:System.Web.Configuration.ProcessModelSection.MaxIOThreads%2A>プロパティでは、それぞれします。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-195">You can have some control over the CPU utilization by setting the number of worker threads and I/O threads, using the <xref:System.Web.Configuration.ProcessModelSection.MaxWorkerThreads%2A> property and, the <xref:System.Web.Configuration.ProcessModelSection.MaxIOThreads%2A> property, respectively.</span></span>  
  
 <span data-ttu-id="f0f7f-196">スレッドの 2 種類の違いは、後者の場合は、ストリームまたはパイプなどの I/O オブジェクトにバインドされ、前者は従来の制限のないスレッドことです。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-196">The difference between the two types of threads is that the latter are bound to I/O objects, such as a stream or a pipe, and the former are traditional unrestricted threads.</span></span> <span data-ttu-id="f0f7f-197">インターネット インフォメーション サービス (IIS) 6.0 以降のバージョンには、ASP.NET では、ワーカー スレッドで要求を処理します。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-197">For Internet Information Services (IIS) version 6.0 and higher, ASP.NET processes requests on worker threads.</span></span> <span data-ttu-id="f0f7f-198">これは、ASP.NET が IIS 内で統合されているためにです。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-198">This is because ASP.NET is integrated within IIS.</span></span>  
  
 <span data-ttu-id="f0f7f-199">これらのスレッドは、アプリケーションに属するプロセス全体の CLR スレッド プールから取得されます。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-199">These threads are obtained from the process-wide CLR thread pool belonging to an application.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f0f7f-200">通常、許可されているスレッドの既定値は、高い CPU 使用率を維持するための十分なです。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-200">Usually the default values for the allowed threads are sufficient to keep the CPU utilization high.</span></span> <span data-ttu-id="f0f7f-201">何らかの理由は、アプリケーションが低速では、外部リソースを待機など場合、100 未満の値をスレッドの数を増やすしようとする可能性があります。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-201">If for some reason your application is slow, perhaps waiting for external resources, you could try to increase the number of threads to a value less than 100.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f0f7f-202"><xref:System.Web.Configuration.ProcessModelSection.MaxWorkerThreads%2A> プロパティへのアクセス方法を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-202">The following code example shows how to access the <xref:System.Web.Configuration.ProcessModelSection.MaxWorkerThreads%2A> property.</span></span>  
  
 [!code-csharp[System.Web.Configuration.ProcessModelSection#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/CS/processmodelsection.cs#7)]
 [!code-vb[System.Web.Configuration.ProcessModelSection#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/VB/processmodelsection.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Configuration.HttpRuntimeSection" />
      </Docs>
    </Member>
    <Member MemberName="MemoryLimit">
      <MemberSignature Language="C#" Value="public int MemoryLimit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MemoryLimit" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.ProcessModelSection.MemoryLimit" />
      <MemberSignature Language="VB.NET" Value="Public Property MemoryLimit As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MemoryLimit { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MemoryLimit : int with get, set" Usage="System.Web.Configuration.ProcessModelSection.MemoryLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("memoryLimit", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f0f7f-203">許容メモリ サイズの上限を示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-203">Gets or sets a value indicating the maximum allowed memory size.</span></span></summary>
        <value><span data-ttu-id="f0f7f-204">システム メモリ全体に対するパーセント。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-204">The percentage of the total system memory.</span></span> <span data-ttu-id="f0f7f-205">既定は 60% です。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-205">The default is 60 percent.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0f7f-206">メモリ サイズは、システム メモリ合計の割合として表されます。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-206">The memory size is expressed as a percentage of the total system memory.</span></span> <span data-ttu-id="f0f7f-207">これは、ASP.NET (バウンス) を再起動する前に、ワーカー プロセスで利用できるメモリの量にします。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-207">This is the amount of memory a worker process can consume before ASP.NET restarts (bounces) it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f0f7f-208"><xref:System.Web.Configuration.ProcessModelSection.MemoryLimit%2A> プロパティへのアクセス方法を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-208">The following code example shows how to access the <xref:System.Web.Configuration.ProcessModelSection.MemoryLimit%2A> property.</span></span>  
  
 [!code-csharp[System.Web.Configuration.ProcessModelSection#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/CS/processmodelsection.cs#3)]
 [!code-vb[System.Web.Configuration.ProcessModelSection#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/VB/processmodelsection.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinIOThreads">
      <MemberSignature Language="C#" Value="public int MinIOThreads { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinIOThreads" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.ProcessModelSection.MinIOThreads" />
      <MemberSignature Language="VB.NET" Value="Public Property MinIOThreads As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MinIOThreads { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MinIOThreads : int with get, set" Usage="System.Web.Configuration.ProcessModelSection.MinIOThreads" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("minIoThreads", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.IntegerValidator(MaxValue=2147483646, MinValue=1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f0f7f-209">CLR スレッド プールにおける CPU あたりの I/O スレッド数の下限を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-209">Gets or sets the minimum number of I/O threads per CPU in the CLR thread pool.</span></span></summary>
        <value><span data-ttu-id="f0f7f-210">CLR スレッド プールにおける CPU あたりの I/O スレッド数の下限。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-210">The minimum number of I/O threads per CPU in the CLR thread pool.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f0f7f-211"><xref:System.Web.Configuration.ProcessModelSection.MinIOThreads%2A> プロパティへのアクセス方法を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-211">The following code example shows how to access the <xref:System.Web.Configuration.ProcessModelSection.MinIOThreads%2A> property.</span></span>  
  
 [!code-csharp[System.Web.Configuration.ProcessModelSection#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/CS/processmodelsection.cs#4)]
 [!code-vb[System.Web.Configuration.ProcessModelSection#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/VB/processmodelsection.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinWorkerThreads">
      <MemberSignature Language="C#" Value="public int MinWorkerThreads { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinWorkerThreads" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.ProcessModelSection.MinWorkerThreads" />
      <MemberSignature Language="VB.NET" Value="Public Property MinWorkerThreads As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MinWorkerThreads { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MinWorkerThreads : int with get, set" Usage="System.Web.Configuration.ProcessModelSection.MinWorkerThreads" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("minWorkerThreads", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.IntegerValidator(MaxValue=2147483646, MinValue=1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f0f7f-212">CLR スレッド プールにおける CPU あたりのワーカー スレッド数の下限を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-212">Gets or sets the minimum number of worker threads per CPU in the CLR thread pool.</span></span></summary>
        <value><span data-ttu-id="f0f7f-213">CLR スレッド プールにおける CPU あたりのワーカー スレッド数の下限。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-213">The minimum number of worker threads per CPU in the CLR thread pool</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f0f7f-214"><xref:System.Web.Configuration.ProcessModelSection.MinWorkerThreads%2A> プロパティへのアクセス方法を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-214">The following code example shows how to access the <xref:System.Web.Configuration.ProcessModelSection.MinWorkerThreads%2A> property.</span></span>  
  
 [!code-csharp[System.Web.Configuration.ProcessModelSection#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/CS/processmodelsection.cs#6)]
 [!code-vb[System.Web.Configuration.ProcessModelSection#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/VB/processmodelsection.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Password">
      <MemberSignature Language="C#" Value="public string Password { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Password" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.ProcessModelSection.Password" />
      <MemberSignature Language="VB.NET" Value="Public Property Password As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Password { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Password : string with get, set" Usage="System.Web.Configuration.ProcessModelSection.Password" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("password", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f0f7f-215">Windows ID に使用するパスワードを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-215">Gets or sets a value indicating the password to use for the Windows identity.</span></span></summary>
        <value><span data-ttu-id="f0f7f-216">使用するパスワード。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-216">The password to use.</span></span> <span data-ttu-id="f0f7f-217">既定値は AutoGenerate です。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-217">The default value is AutoGenerate.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0f7f-218"><xref:System.Web.Configuration.ProcessModelSection.Password%2A>プロパティで使用する必要があります、<xref:System.Web.Configuration.ProcessModelSection.UserName%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-218">The <xref:System.Web.Configuration.ProcessModelSection.Password%2A> property must be used with the <xref:System.Web.Configuration.ProcessModelSection.UserName%2A> property.</span></span>  
  
 <span data-ttu-id="f0f7f-219">存在する場合、これらのプロパティ値は構成済みの Windows id で実行するワーカー プロセスが発生します。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-219">When present, these property values cause the worker process to run with the configured Windows identity.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f0f7f-220"><xref:System.Web.Configuration.ProcessModelSection.Password%2A> プロパティへのアクセス方法を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-220">The following code example shows how to access the <xref:System.Web.Configuration.ProcessModelSection.Password%2A> property.</span></span>  
  
 [!code-csharp[System.Web.Configuration.ProcessModelSection#20](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/CS/processmodelsection.cs#20)]
 [!code-vb[System.Web.Configuration.ProcessModelSection#20](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/VB/processmodelsection.vb#20)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/51cdfe5b-9d82-458c-94ff-c551c4f38ed1"><span data-ttu-id="f0f7f-221">保護された構成を使用して構成情報の暗号化</span><span class="sxs-lookup"><span data-stu-id="f0f7f-221">Encrypting Configuration Information using Protected Configuration</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="PingFrequency">
      <MemberSignature Language="C#" Value="public TimeSpan PingFrequency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan PingFrequency" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.ProcessModelSection.PingFrequency" />
      <MemberSignature Language="VB.NET" Value="Public Property PingFrequency As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan PingFrequency { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.PingFrequency : TimeSpan with get, set" Usage="System.Web.Configuration.ProcessModelSection.PingFrequency" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Configuration.InfiniteTimeSpanConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("pingFrequency", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f0f7f-222">ISAPI 拡張機能がワーカー プロセスに ping を実行してワーカー プロセスが実行中かどうかを確認する間隔を示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-222">Gets or sets a value indicating the time interval at which the ISAPI extension pings the worker process to determine whether it is running.</span></span></summary>
        <value><span data-ttu-id="f0f7f-223">期間を定義する <see cref="T:System.TimeSpan" />。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-223">The <see cref="T:System.TimeSpan" /> defining the time interval.</span></span> <span data-ttu-id="f0f7f-224">既定値は 30 秒です。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-224">The default is 30 seconds.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0f7f-225">後に実行されていない場合は、ワーカー プロセスを (バウンス) が再起動、<xref:System.Web.Configuration.ProcessModelSection.PingFrequency%2A>間隔が有効期限が切れた。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-225">The worker process is restarted (bounced) if it is not running after the <xref:System.Web.Configuration.ProcessModelSection.PingFrequency%2A> interval has expired.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f0f7f-226"><xref:System.Web.Configuration.ProcessModelSection.PingFrequency%2A> プロパティへのアクセス方法を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-226">The following code example shows how to access the <xref:System.Web.Configuration.ProcessModelSection.PingFrequency%2A> property.</span></span>  
  
 [!code-csharp[System.Web.Configuration.ProcessModelSection#13](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/CS/processmodelsection.cs#13)]
 [!code-vb[System.Web.Configuration.ProcessModelSection#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/VB/processmodelsection.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PingTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan PingTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan PingTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.ProcessModelSection.PingTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property PingTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan PingTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.PingTimeout : TimeSpan with get, set" Usage="System.Web.Configuration.ProcessModelSection.PingTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Configuration.InfiniteTimeSpanConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("pingTimeout", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f0f7f-227">応答のないワーカー プロセスを再起動するまでの期間を示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-227">Gets or sets a value indicating the time interval after which a non-responsive worker process is restarted.</span></span></summary>
        <value><span data-ttu-id="f0f7f-228">期間を定義する <see cref="T:System.TimeSpan" />。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-228">The <see cref="T:System.TimeSpan" /> defining the time interval.</span></span> <span data-ttu-id="f0f7f-229">既定値は、5 秒です。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-229">The default is 5 seconds.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0f7f-230">ISAPI 拡張機能の ping にワーカー プロセス、<xref:System.Web.Configuration.ProcessModelSection.PingFrequency%2A>間隔。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-230">The ISAPI extensions ping the worker process at the <xref:System.Web.Configuration.ProcessModelSection.PingFrequency%2A> interval.</span></span> <span data-ttu-id="f0f7f-231">内では、ワーカー プロセスが応答しない場合、<xref:System.Web.Configuration.ProcessModelSection.PingTimeout%2A>間隔、プロセスを再起動します。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-231">If the worker process does not respond within the <xref:System.Web.Configuration.ProcessModelSection.PingTimeout%2A> interval, the process is restarted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f0f7f-232"><xref:System.Web.Configuration.ProcessModelSection.PingTimeout%2A> プロパティへのアクセス方法を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-232">The following code example shows how to access the <xref:System.Web.Configuration.ProcessModelSection.PingTimeout%2A> property.</span></span>  
  
 [!code-csharp[System.Web.Configuration.ProcessModelSection#14](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/CS/processmodelsection.cs#14)]
 [!code-vb[System.Web.Configuration.ProcessModelSection#14](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/VB/processmodelsection.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.ProcessModelSection.Properties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Properties As ConfigurationPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Configuration::ConfigurationPropertyCollection ^ Properties { System::Configuration::ConfigurationPropertyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Configuration.ConfigurationPropertyCollection" Usage="System.Web.Configuration.ProcessModelSection.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestLimit">
      <MemberSignature Language="C#" Value="public int RequestLimit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RequestLimit" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.ProcessModelSection.RequestLimit" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestLimit As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int RequestLimit { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.RequestLimit : int with get, set" Usage="System.Web.Configuration.ProcessModelSection.RequestLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Configuration.InfiniteIntConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("requestLimit", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.IntegerValidator(MinValue=0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f0f7f-233">ワーカー プロセスがリサイクルされるまでの許容要求数を示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-233">Gets or sets a value indicating the number of requests allowed before a worker process is recycled.</span></span></summary>
        <value><span data-ttu-id="f0f7f-234">許容要求数。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-234">The number of allowed requests.</span></span> <span data-ttu-id="f0f7f-235">既定値は Infinite です。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-235">The default is Infinite.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0f7f-236">要求の数を超えると、ASP.NET は自動的に現在の代わりに新しいワーカー プロセスを起動します。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-236">If the number of requests is exceeded, ASP.NET automatically launches a new worker process to take the place of the current one.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f0f7f-237">次のコード例は、<xref:System.Web.Configuration.ProcessModelSection.RequestLimit%2A> プロパティの使用方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-237">The following code example shows how to use the <xref:System.Web.Configuration.ProcessModelSection.RequestLimit%2A> property.</span></span>  
  
 [!code-csharp[System.Web.Configuration.ProcessModelSection#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/CS/processmodelsection.cs#8)]
 [!code-vb[System.Web.Configuration.ProcessModelSection#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/VB/processmodelsection.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestQueueLimit">
      <MemberSignature Language="C#" Value="public int RequestQueueLimit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RequestQueueLimit" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.ProcessModelSection.RequestQueueLimit" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestQueueLimit As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int RequestQueueLimit { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.RequestQueueLimit : int with get, set" Usage="System.Web.Configuration.ProcessModelSection.RequestQueueLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Configuration.InfiniteIntConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("requestQueueLimit", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.IntegerValidator(MinValue=0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f0f7f-238">キューに置くことができる要求数を示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-238">Gets or sets a value indicating the number of requests allowed in the queue.</span></span></summary>
        <value><span data-ttu-id="f0f7f-239">キューに置くことができる要求数。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-239">The number of requests allowed to be queued.</span></span> <span data-ttu-id="f0f7f-240">既定値は、5000 です。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-240">The default is 5000.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0f7f-241">ASP.NET の開始を返す場合は、キューで許可される要求の数を超えると、"503 - サーバーがビジー"エラーを新しい要求。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-241">If the number of requests allowed in the queue is exceeded, ASP.NET begins returning "503 - Server Too Busy" errors to new requests.</span></span> <span data-ttu-id="f0f7f-242">この制限に達すると、システムが異常な状態で動作します。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-242">When this limit is reached, the system is operating in abnormal conditions.</span></span> <span data-ttu-id="f0f7f-243">これが誤動作の徴候であるか、単純に負荷が高い。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-243">This might be a symptom of a malfunction or, maybe, just high load.</span></span> <span data-ttu-id="f0f7f-244">再起動 (バウンス) ワーカー プロセスがさらに問題を回避する唯一の方法になる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-244">Restarting (bouncing) the worker process might become the only way to prevent further problems.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f0f7f-245">次のコード例は、<xref:System.Web.Configuration.ProcessModelSection.RequestQueueLimit%2A> プロパティの使用方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-245">The following code example shows how to use the <xref:System.Web.Configuration.ProcessModelSection.RequestQueueLimit%2A> property.</span></span>  
  
 [!code-csharp[System.Web.Configuration.ProcessModelSection#10](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/CS/processmodelsection.cs#10)]
 [!code-vb[System.Web.Configuration.ProcessModelSection#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/VB/processmodelsection.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResponseDeadlockInterval">
      <MemberSignature Language="C#" Value="public TimeSpan ResponseDeadlockInterval { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan ResponseDeadlockInterval" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.ProcessModelSection.ResponseDeadlockInterval" />
      <MemberSignature Language="VB.NET" Value="Public Property ResponseDeadlockInterval As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan ResponseDeadlockInterval { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.ResponseDeadlockInterval : TimeSpan with get, set" Usage="System.Web.Configuration.ProcessModelSection.ResponseDeadlockInterval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Configuration.InfiniteTimeSpanConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("responseDeadlockInterval", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.TimeSpanValidator(MaxValueString="10675199.02:48:05.4775807", MinValueString="00:00:00")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f0f7f-246">ワーカー プロセスが応答するまでの期間を示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-246">Gets or sets a value indicating the time interval for the worker process to respond.</span></span></summary>
        <value><span data-ttu-id="f0f7f-247">期間を定義する <see cref="T:System.TimeSpan" />。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-247">The <see cref="T:System.TimeSpan" /> defining the interval.</span></span> <span data-ttu-id="f0f7f-248">既定値は、3 分です。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-248">The default is 3 minutes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0f7f-249">キューに置かれた要求されており、かどうかがありますが、応答で定義されている期間がある場合、プロセスは再起動<xref:System.Web.Configuration.ProcessModelSection.ResponseDeadlockInterval%2A>します。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-249">The process is restarted if there are queued requests and if there has not been a response during the time interval that is defined by <xref:System.Web.Configuration.ProcessModelSection.ResponseDeadlockInterval%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f0f7f-250">次のコード例は、<xref:System.Web.Configuration.ProcessModelSection.ResponseDeadlockInterval%2A> プロパティの使用方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-250">The following code example shows how to use the <xref:System.Web.Configuration.ProcessModelSection.ResponseDeadlockInterval%2A> property.</span></span>  
  
 [!code-csharp[System.Web.Configuration.ProcessModelSection#17](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/CS/processmodelsection.cs#17)]
 [!code-vb[System.Web.Configuration.ProcessModelSection#17](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/VB/processmodelsection.vb#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResponseRestartDeadlockInterval">
      <MemberSignature Language="C#" Value="public TimeSpan ResponseRestartDeadlockInterval { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan ResponseRestartDeadlockInterval" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.ProcessModelSection.ResponseRestartDeadlockInterval" />
      <MemberSignature Language="VB.NET" Value="Public Property ResponseRestartDeadlockInterval As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan ResponseRestartDeadlockInterval { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.ResponseRestartDeadlockInterval : TimeSpan with get, set" Usage="System.Web.Configuration.ProcessModelSection.ResponseRestartDeadlockInterval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Configuration.InfiniteTimeSpanConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("responseRestartDeadlockInterval", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f0f7f-251">使用されなくなりました。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-251">No longer used.</span></span></summary>
        <value><span data-ttu-id="f0f7f-252">該当なし。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-252">Not applicable.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0f7f-253">このプロパティは、ASP.NET では使用されなく、旧バージョンとの互換性を保つのために提供されます。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-253">This property is no longer used by ASP.NET and is provided for backward compatibility only.</span></span> <span data-ttu-id="f0f7f-254">構成ファイルに存在する場合、構成エラーは発生されます。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-254">It will not cause a configuration error if it is already present in a configuration file.</span></span> <span data-ttu-id="f0f7f-255">デッドロックが発生した場合、すべてリサイクルはによって制御されるようになりました、<xref:System.Web.Configuration.ProcessModelSection.ResponseDeadlockInterval%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-255">All recycling in the event of a deadlock condition is now controlled by the <xref:System.Web.Configuration.ProcessModelSection.ResponseDeadlockInterval%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f0f7f-256"><xref:System.Web.Configuration.ProcessModelSection.ResponseRestartDeadlockInterval%2A> プロパティへのアクセス方法を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-256">The following code example shows how to access the <xref:System.Web.Configuration.ProcessModelSection.ResponseRestartDeadlockInterval%2A> property.</span></span>  
  
 [!code-csharp[System.Web.Configuration.ProcessModelSection#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/CS/processmodelsection.cs#11)]
 [!code-vb[System.Web.Configuration.ProcessModelSection#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/VB/processmodelsection.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RestartQueueLimit">
      <MemberSignature Language="C#" Value="public int RestartQueueLimit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RestartQueueLimit" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.ProcessModelSection.RestartQueueLimit" />
      <MemberSignature Language="VB.NET" Value="Public Property RestartQueueLimit As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int RestartQueueLimit { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.RestartQueueLimit : int with get, set" Usage="System.Web.Configuration.ProcessModelSection.RestartQueueLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Configuration.InfiniteIntConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("restartQueueLimit", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.IntegerValidator(MinValue=0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f0f7f-257">新しいワーカー プロセスによる要求処理の開始を待機している間に ISAPI によってキューに置かれる要求数の上限を示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-257">Gets or sets a value indicating the maximum number of requests queued by the ISAPI while waiting for a new worker process to start handling the requests.</span></span></summary>
        <value><span data-ttu-id="f0f7f-258">キューに置かれる要求数。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-258">The number of requests queued.</span></span> <span data-ttu-id="f0f7f-259">既定値は 10 です。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-259">The default is 10.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0f7f-260">この制限を超えた場合、クライアント要求でワーカー プロセスが準備できるまでに 503 エラーが表示されます。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-260">When this limit is exceeded, a client request will receive a 503 error until the worker process is ready.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f0f7f-261"><xref:System.Web.Configuration.ProcessModelSection.RestartQueueLimit%2A> プロパティへのアクセス方法を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-261">The following code example shows how to access the <xref:System.Web.Configuration.ProcessModelSection.RestartQueueLimit%2A> property.</span></span>  
  
 [!code-csharp[System.Web.Configuration.ProcessModelSection#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/CS/processmodelsection.cs#9)]
 [!code-vb[System.Web.Configuration.ProcessModelSection#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/VB/processmodelsection.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ServerErrorMessageFile">
      <MemberSignature Language="C#" Value="public string ServerErrorMessageFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ServerErrorMessageFile" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.ProcessModelSection.ServerErrorMessageFile" />
      <MemberSignature Language="VB.NET" Value="Public Property ServerErrorMessageFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ServerErrorMessageFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ServerErrorMessageFile : string with get, set" Usage="System.Web.Configuration.ProcessModelSection.ServerErrorMessageFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("serverErrorMessageFile", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f0f7f-262">致命的なエラーの発生時に使用する必要がある内容が格納されているファイルを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-262">Gets or sets a value indicating the file whose content must be used when a fatal error occurs.</span></span></summary>
        <value><span data-ttu-id="f0f7f-263">致命的なエラーの発生時に使用するファイルのパス。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-263">The path of the file used when a fatal error occurs.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0f7f-264">既定のサーバー利用不可メッセージではなくコンテンツを持つが使用されるファイル。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-264">The file whose content is used instead of the default Server Unavailable message.</span></span>  
  
 <span data-ttu-id="f0f7f-265">ファイルの場所には、相対または絶対ファイル パスを指定できます。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-265">The file location can be a relative or an absolute file path.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f0f7f-266">次のコード例は、<xref:System.Web.Configuration.ProcessModelSection.ServerErrorMessageFile%2A> プロパティの使用方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-266">The following code example shows how to use the <xref:System.Web.Configuration.ProcessModelSection.ServerErrorMessageFile%2A> property.</span></span>  
  
 [!code-csharp[System.Web.Configuration.ProcessModelSection#28](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/CS/processmodelsection.cs#28)]
 [!code-vb[System.Web.Configuration.ProcessModelSection#28](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/VB/processmodelsection.vb#28)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShutdownTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan ShutdownTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan ShutdownTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.ProcessModelSection.ShutdownTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property ShutdownTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan ShutdownTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.ShutdownTimeout : TimeSpan with get, set" Usage="System.Web.Configuration.ProcessModelSection.ShutdownTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Configuration.InfiniteTimeSpanConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("shutdownTimeout", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.TimeSpanValidator(MaxValueString="10675199.02:48:05.4775807", MinValueString="00:00:00")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f0f7f-267">ワーカー プロセスをシャットダウンするために与えられている時間を示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-267">Gets or sets a value indicating the time allowed for the worker process to shut down.</span></span></summary>
        <value><span data-ttu-id="f0f7f-268">期間を定義する <see cref="T:System.TimeSpan" />。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-268">The <see cref="T:System.TimeSpan" /> defining the interval.</span></span> <span data-ttu-id="f0f7f-269">既定値は、5 秒です。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-269">The default is 5 seconds.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0f7f-270">このプロパティには、ワーカー プロセスが正常にシャット ダウンの許容分単位の数を指定します。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-270">This property specifies the number of minutes allowed for the worker process to shut itself down gracefully.</span></span> <span data-ttu-id="f0f7f-271">タイムアウトの期限が切れると、ASP.NET は強制的に worker プロセスを終了します。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-271">When the timeout expires, ASP.NET shuts down the worker process forcibly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f0f7f-272">次のコード例は、<xref:System.Web.Configuration.ProcessModelSection.ShutdownTimeout%2A> プロパティの使用方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-272">The following code example shows how to use the <xref:System.Web.Configuration.ProcessModelSection.ShutdownTimeout%2A> property.</span></span>  
  
 [!code-csharp[System.Web.Configuration.ProcessModelSection#15](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/CS/processmodelsection.cs#15)]
 [!code-vb[System.Web.Configuration.ProcessModelSection#15](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/VB/processmodelsection.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public TimeSpan Timeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan Timeout" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.ProcessModelSection.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Property Timeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan Timeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.Timeout : TimeSpan with get, set" Usage="System.Web.Configuration.ProcessModelSection.Timeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Configuration.InfiniteTimeSpanConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("timeout", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f0f7f-273">ASP.NET が新しいワーカー プロセスを起動するまでの時間を分単位で示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-273">Gets or sets a value indicating the number of minutes until ASP.NET launches a new worker process.</span></span></summary>
        <value><span data-ttu-id="f0f7f-274">期間を定義する <see cref="T:System.TimeSpan" />。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-274">The <see cref="T:System.TimeSpan" /> defining the interval.</span></span> <span data-ttu-id="f0f7f-275">既定値は Infinite です。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-275">The default is Infinite.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0f7f-276">ASP.NET では、現在の代わりに新しいワーカー プロセスを起動します。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-276">ASP.NET launches a new worker process to take the place of the current one.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f0f7f-277">次のコード例は、<xref:System.Web.Configuration.ProcessModelSection.Timeout%2A> プロパティの使用方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-277">The following code example shows how to use the <xref:System.Web.Configuration.ProcessModelSection.Timeout%2A> property.</span></span>  
  
 [!code-csharp[System.Web.Configuration.ProcessModelSection#10](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/CS/processmodelsection.cs#10)]
 [!code-vb[System.Web.Configuration.ProcessModelSection#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/VB/processmodelsection.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserName">
      <MemberSignature Language="C#" Value="public string UserName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.ProcessModelSection.UserName" />
      <MemberSignature Language="VB.NET" Value="Public Property UserName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UserName : string with get, set" Usage="System.Web.Configuration.ProcessModelSection.UserName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("userName", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f0f7f-278">Windows ID に使用するユーザー名を示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-278">Gets or sets a value indicating the user name for a Windows identity.</span></span></summary>
        <value><span data-ttu-id="f0f7f-279">ユーザー名。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-279">The user name.</span></span> <span data-ttu-id="f0f7f-280">既定値は Machine です。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-280">The default value is Machine.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0f7f-281">存在する場合、<xref:System.Web.Configuration.ProcessModelSection.UserName%2A>から既定のプロセスのさまざまな Windows id を定義します。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-281">If present, the <xref:System.Web.Configuration.ProcessModelSection.UserName%2A> defines a Windows identity different from that of the default process.</span></span> <span data-ttu-id="f0f7f-282">この id は、ASP.NET ワーカー プロセスの実行に使用されます。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-282">This identity is used to run the ASP.NET worker process.</span></span>  
  
 <span data-ttu-id="f0f7f-283">既定では、<xref:System.Web.Configuration.ProcessModelSection.UserName%2A>マシン、特殊な値と ASP.NET がインストールされているときに自動的に作成される ASPNET という名前のユーザー アカウントでプロセスの実行に設定されます。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-283">By default, <xref:System.Web.Configuration.ProcessModelSection.UserName%2A> is set to the special value Machine, and the process runs under a user account named ASPNET that is created automatically when ASP.NET is installed.</span></span>  
  
 <span data-ttu-id="f0f7f-284"><xref:System.Web.Configuration.ProcessModelSection.Password%2A>プロパティで使用する必要があります、<xref:System.Web.Configuration.ProcessModelSection.UserName%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-284">The <xref:System.Web.Configuration.ProcessModelSection.Password%2A> property must be used with the <xref:System.Web.Configuration.ProcessModelSection.UserName%2A> property.</span></span>  
  
 <span data-ttu-id="f0f7f-285">存在する場合、これらのプロパティ値は構成済みの Windows id で実行するワーカー プロセスが発生します。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-285">When present, these property values cause the worker process to run with the configured Windows identity.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f0f7f-286">場合、<xref:System.Web.Configuration.ProcessModelSection.UserName%2A>プロパティ システムにパスワードの自動生成を使用して、エンティティ管理者アカウントとして、プロセスを実行でき、完全な管理者特権を持っているプロセスで実行されているすべての ASP.NET ユーザー コードを定義します。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-286">If the <xref:System.Web.Configuration.ProcessModelSection.UserName%2A> property is set to System, with the password AutoGenerate, it defines an entity that runs the process as an administrative account and allows all ASP.NET user code running under the process to have full administrative privileges.</span></span> <span data-ttu-id="f0f7f-287">そのため、この場合は、許可される権限を閉じる注意してください。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-287">So, pay close attention to this case, for the permissions allowed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f0f7f-288"><xref:System.Web.Configuration.ProcessModelSection.UserName%2A> プロパティへのアクセス方法を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-288">The following code example shows how to access the <xref:System.Web.Configuration.ProcessModelSection.UserName%2A> property.</span></span>  
  
 [!code-csharp[System.Web.Configuration.ProcessModelSection#19](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/CS/processmodelsection.cs#19)]
 [!code-vb[System.Web.Configuration.ProcessModelSection#19](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/VB/processmodelsection.vb#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WebGarden">
      <MemberSignature Language="C#" Value="public bool WebGarden { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WebGarden" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.ProcessModelSection.WebGarden" />
      <MemberSignature Language="VB.NET" Value="Public Property WebGarden As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WebGarden { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.WebGarden : bool with get, set" Usage="System.Web.Configuration.ProcessModelSection.WebGarden" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("webGarden", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f0f7f-289">ワーカー プロセスの実行に使用できる CPU を有効にする値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-289">Gets or sets a value enabling the available CPUs to run the worker processes.</span></span></summary>
        <value><span data-ttu-id="f0f7f-290"><see cref="P:System.Web.Configuration.ProcessModelSection.CpuMask" /> を使用してワーカー プロセスを有効な CPU の番号にマップする場合は <see langword="true" />。<see cref="P:System.Web.Configuration.ProcessModelSection.CpuMask" /> を無視する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-290"><see langword="true" />, if <see cref="P:System.Web.Configuration.ProcessModelSection.CpuMask" /> is used to map the worker processes to the number of eligible CPUs; <see langword="false" /> if <see cref="P:System.Web.Configuration.ProcessModelSection.CpuMask" /> is ignored.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0f7f-291"><xref:System.Web.Configuration.ProcessModelSection.WebGarden%2A>プロパティで使用する必要があります、<xref:System.Web.Configuration.ProcessModelSection.CpuMask%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-291">The <xref:System.Web.Configuration.ProcessModelSection.WebGarden%2A> property must be used with the <xref:System.Web.Configuration.ProcessModelSection.CpuMask%2A> property.</span></span>  
  
 <span data-ttu-id="f0f7f-292">場合、<xref:System.Web.Configuration.ProcessModelSection.WebGarden%2A>プロパティに設定されて`false`、<xref:System.Web.Configuration.ProcessModelSection.CpuMask%2A>属性は無視され、1 つだけのワーカー プロセスを実行します。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-292">If the <xref:System.Web.Configuration.ProcessModelSection.WebGarden%2A> property is set to `false`, the <xref:System.Web.Configuration.ProcessModelSection.CpuMask%2A> attribute is ignored and only one worker process runs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f0f7f-293">マルチプロセッサの Web サーバーには、Web ガーデンは呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-293">A multiprocessor Web server is called a Web garden.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f0f7f-294"><xref:System.Web.Configuration.ProcessModelSection.WebGarden%2A> プロパティへのアクセス方法を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="f0f7f-294">The following code example shows how to access the <xref:System.Web.Configuration.ProcessModelSection.WebGarden%2A> property.</span></span>  
  
 [!code-csharp[System.Web.Configuration.ProcessModelSection#24](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/CS/processmodelsection.cs#24)]
 [!code-vb[System.Web.Configuration.ProcessModelSection#24](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.ProcessModelSection/VB/processmodelsection.vb#24)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>