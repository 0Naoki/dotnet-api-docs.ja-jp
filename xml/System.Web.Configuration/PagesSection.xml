<Type Name="PagesSection" FullName="System.Web.Configuration.PagesSection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1e91606b22ca10cf828ba1139fac1d4e07461a2b" /><Meta Name="ms.sourcegitcommit" Value="adc8598fd19d91438cacaa8fa7ce613e28c8218e" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/11/2018" /><Meta Name="ms.locfileid" Value="53229657" /></Metadata><TypeSignature Language="C#" Value="public sealed class PagesSection : System.Configuration.ConfigurationSection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed PagesSection extends System.Configuration.ConfigurationSection" />
  <TypeSignature Language="DocId" Value="T:System.Web.Configuration.PagesSection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PagesSection&#xA;Inherits ConfigurationSection" />
  <TypeSignature Language="C++ CLI" Value="public ref class PagesSection sealed : System::Configuration::ConfigurationSection" />
  <TypeSignature Language="F#" Value="type PagesSection = class&#xA;    inherit ConfigurationSection" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationSection</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>構成ファイルの pages セクションにプログラムからアクセスできるようにします。 このクラスは継承できません。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.PagesSection>クラスには、プログラムからアクセスして、構成ファイルのセクションの内容を変更する方法が用意されています。 この構成セクションでは、構成ファイルのスコープ内のページとコントロールをすべてに対してグローバルに ASP.NET ページおよびコントロール ディレクティブの特定の設定をサポートします。 これが含まれています、`@ Page`ディレクティブを`@ Import`を通じてディレクティブ、<xref:System.Web.Configuration.PagesSection.Namespaces%2A>コレクションのプロパティと`@ Register`を通じてディレクティブ、<xref:System.Web.Configuration.PagesSection.Controls%2A>コレクション プロパティ。 を介して実行時の型のタグを他のタグの種類にマップするためのサポートを提供、<xref:System.Web.Configuration.PagesSection.TagMapping%2A>プロパティのコレクション。  
  
 ディレクティブは、ASP.NET Web フォーム ページ (.aspx) およびユーザー コントロール (.ascx) ファイルの処理時に、ページおよびユーザー コントロールのコンパイラで使用される設定を指定します。  
  
   
  
## Examples  
 この例は、宣言の複数の属性の値を指定する方法を示します、`pages`セクションのメンバーとしてアクセスすることも、<xref:System.Web.Configuration.PagesSection>クラス。  
  
 次の構成ファイルの例では、宣言によって、セクションの値を指定する方法を示します。  
  
```  
<system.web>  
  <pages buffer="true"   
    enableSessionState="true"   
    enableViewState="true"  
    enableViewStateMac="true"   
    autoEventWireup="true"   
    validateRequest="true"  
    asyncTimeout="45"  
    maintainScrollPositionOnPostBack = "False"  
    viewStateEncryptionMode = "Auto">  
    <namespaces>  
      <add namespace="System" />  
      <add namespace="System.Collections" />  
      <add namespace="System.Collections.Specialized" />  
      <add namespace="System.ComponentModel" />  
      <add namespace="System.Configuration" />  
      <add namespace="System.Web" />  
    </namespaces>  
    <controls>  
      <clear />  
      <remove tagPrefix="MyTags" />  
      <!-- Searches all linked assemblies for the namespace -->  
      <add tagPrefix="MyTags1" namespace=" MyNameSpace "/>  
      <!-- Uses a specified assembly -->  
      <add tagPrefix="MyTags2" namespace="MyNameSpace"   
        assembly="MyAssembly"/>  
      <!-- Uses the specified source for the user control -->  
      <add tagprefix="MyTags3" tagname="MyCtrl"       
        src="MyControl.ascx"/>  
    </controls>  
    <tagMapping>  
      <clear />  
      <add  
        tagTypeName=  
          "System.Web.UI.WebControls.WebParts.WebPartManager"  
        mappedTagTypeName=  
          "Microsoft.Sharepoint.WebPartPartManager,   
          MSPS.Web.dll, Version='2.0.0.0'"   
      />  
      <remove tagTypeName="SomeOtherNS.Class, Assemblyname" />  
    </tagMapping>  
  </pages>  
</system.web>  
```  
  
 次のコード例は、使用する方法を示します、<xref:System.Web.Configuration.PagesSection>クラス。  
  
 [!code-csharp[System.Web.Configuration.PagesSection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/CS/usingpagessection.cs#1)]
 [!code-vb[System.Web.Configuration.PagesSection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/VB/usingpagessection.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.ConfigurationSection" />
    <related type="Article" href="https://msdn.microsoft.com/library/d35d5892-07d6-4b85-a7c6-4c37ac0cd430">Web フォーム ページのディレクティブ</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PagesSection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.PagesSection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PagesSection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>既定の設定を使用して <see cref="T:System.Web.Configuration.PagesSection" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.PagesSection.%23ctor%2A>コンス トラクターは、コードから直接使用するものはありません。 ASP.NET 構成システムによって呼び出されます。 インスタンスを取得する、<xref:System.Web.Configuration.PagesSection>クラスを使用して、<xref:System.Configuration.Configuration.GetSection%2A>メソッド。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AsyncTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan AsyncTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan AsyncTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.PagesSection.AsyncTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property AsyncTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan AsyncTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.AsyncTimeout : TimeSpan with get, set" Usage="System.Web.Configuration.PagesSection.AsyncTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Configuration.TimeSpanSecondsConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Configuration.ConfigurationProperty("asyncTimeout", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Configuration.TimeSpanValidator(MaxValueString="10675199.02:48:05.4775807", MinValueString="00:00:00")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>非同期ページ処理中に非同期ハンドラーが完了するのを待つ秒数を示す値を取得または設定します。</summary>
        <value>非同期ページ処理中に非同期ハンドラーが完了するのを待つ秒数を示す <see cref="T:System.TimeSpan" /> 値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定値には 45 秒です。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.TimeSpan" />
      </Docs>
    </Member>
    <Member MemberName="AutoEventWireup">
      <MemberSignature Language="C#" Value="public bool AutoEventWireup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoEventWireup" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.PagesSection.AutoEventWireup" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoEventWireup As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoEventWireup { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoEventWireup : bool with get, set" Usage="System.Web.Configuration.PagesSection.AutoEventWireup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Configuration.ConfigurationProperty("autoEventWireup", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ASP.NET ページのイベントを自動的にイベント処理関数に渡すかどうかを示す値を取得または設定します。</summary>
        <value>ASP.NET ページのイベントを自動的にイベント処理関数に渡す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ときに<xref:System.Web.Configuration.PagesSection.AutoEventWireup%2A>は`true`、ASP.NET に明示的にバインドするイベント ハンドラーのページ イベントなどが不要<xref:System.Web.UI.Control.Load>します。  
  
 ときに<xref:System.Web.Configuration.PagesSection.AutoEventWireup%2A>は`false`メソッドにイベントを明示的にバインドする必要があります。 ある場合など、`Page_Load`ページのコード内のメソッドをメソッドが呼び出されるへの応答、<xref:System.Web.UI.Control.Load>イベント コードをそのような次の例で作成する場合にのみ (に注意してください、 `Handles` Visual Basic と、イベント ハンドラー内のステートメントコード (C#)):  
  
```vb  
Partial Class AutoEventWireupExample  
    Inherits System.Web.UI.Page  
    Protected Sub Page_Load(ByVal sender As Object, _  
            ByVal e As System.EventArgs) Handles Me.Load  
        Response.Write("Executing Page_Load")  
    End Sub  
End Class  
```  
  
```csharp  
public partial class AutoEventWireupExample : System.Web.UI.Page  
{   
    protected void Page_Load(object sender, System.EventArgs e)  
    {  
        Response.Write("Executing Page_Load");  
    }  
    override protected void OnInit(EventArgs e)  
    {  
        this.Load += new System.EventHandler(this.Page_Load);  
    }  
}  
```  
  
 ときに<xref:System.Web.Configuration.PagesSection.AutoEventWireup%2A>は`true`ハンドラーがイベントにその名前とシグネチャに基づいて実行時に自動的にバインドされます。 イベントごとに、ASP.NET では、パターンに従ってという名前のメソッドを検索`Page_` *eventname*など`Page_Load`または`Page_Init`します。 ASP.NET は、まず、一般的なイベント ハンドラーのシグネチャを持つオーバー ロードのチェック (つまり、指定<xref:System.Object>と<xref:System.EventArgs>パラメーター)。 このシグネチャを持つイベント ハンドラーが見つからない場合、ASP.NET は、パラメーターがないオーバー ロードをチェックします。  
  
 ときに<xref:System.Web.Configuration.PagesSection.AutoEventWireup%2A>は`false`、前の例で示すように、イベントにイベント ハンドラーにバインドすることに明示的にする必要があります。 その場合は、メソッド名は、パターンに従う必要はありません。  
  
 既定値は`true`場合<xref:System.Web.Configuration.PagesSection.AutoEventWireup%2A>で指定されていない、`@ Page`ディレクティブ。 Visual Studio には、分離コード ファイルの作成時に、属性が自動的に含まれます。 C# で記述された ASP.NET ページ、Visual Studio 値を設定`true`します。 Visual Basic、Visual Studio 値を設定`false`ハンドラーがイベント ハンドラーを生成するときに Visual Studio によって自動的に挿入されるキーワードを使用してイベントにバインドされているためです。 設定した場合<xref:System.Web.Configuration.PagesSection.AutoEventWireup%2A>に`true`キーワードを省略 (または削除) にすることができます。  
  
 設定しない<xref:System.Web.Configuration.PagesSection.AutoEventWireup%2A>に`true`パフォーマンスが重要な考慮事項である場合。 自動イベント ワイヤアップを有効にすると、ASP.NET はメソッドとイベントを照合する 15 日と 30 の試行の間で行う必要があります。  
  
 イベントにイベント ハンドラーのバインドについては、次に注意してください。  
  
-   設定した場合<xref:System.Web.Configuration.PagesSection.AutoEventWireup%2A>に`true`、ことも手動でアタッチしないページ イベント ハンドラーのイベントを確認します。 この場合、ハンドラーは 1 つ以上の時間という可能性があります。  
  
-   自動バインドは、ページ上のコントロールのイベントではなく、ページのイベントにのみ実行されます。  
  
-   イベントをハンドラーにバインドする代わりに、オーバーライドすることができます、 `On` *eventname*ページまたはコントロールのメソッド。  
  
   
  
## Examples  
 次のコード例は、設定したり読み取ったりする方法を示しています、<xref:System.Web.Configuration.PagesSection.AutoEventWireup%2A>コード内のプロパティ。  
  
 [!code-csharp[System.Web.Configuration.PagesSection#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/CS/usingpagessection.cs#9)]
 [!code-vb[System.Web.Configuration.PagesSection#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/VB/usingpagessection.vb#9)]  
  
 次の例では、2 つのページ イベントに自動的にアタッチされているメソッドのシグネチャの形式と<xref:System.Web.Configuration.PagesSection.AutoEventWireup%2A>は`true`します。  
  
 [!code-aspx-csharp[System.Web.Configuration.PagesSection#50](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/CS/Default.aspx#50)]
 [!code-csharp[System.Web.Configuration.PagesSection#50](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/CS/Default2.aspx.cs#50)]
 [!code-aspx-vb[System.Web.Configuration.PagesSection#50](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/VB/Default.aspx#50)]
 [!code-vb[System.Web.Configuration.PagesSection#50](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/VB/Default2.aspx.vb#50)]
  
 次の例は、イベントを明示的に接続する方法を示しています。 ときに<xref:System.Web.Configuration.PagesSection.AutoEventWireup%2A>は`false`します。  
  
 [!code-csharp[System.Web.Configuration.PagesSection#51](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/CS/Default.aspx.cs#51)]
 [!code-vb[System.Web.Configuration.PagesSection#51](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/VB/Default.aspx.vb#51)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Buffer">
      <MemberSignature Language="C#" Value="public bool Buffer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Buffer" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.PagesSection.Buffer" />
      <MemberSignature Language="VB.NET" Value="Public Property Buffer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Buffer { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Buffer : bool with get, set" Usage="System.Web.Configuration.PagesSection.Buffer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Configuration.ConfigurationProperty("buffer", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>.aspx ページおよび .ascx コントロールが応答バッファーを使用するかどうかを指定する値を取得または設定します。</summary>
        <value>.aspx ページおよび .ascx コントロールが応答バッファーを使用する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 応答バッファリングがオンにすると、ページ全体まで、ページまたはコントロールの出力がバッファリングされるまたはコントロールが処理されます。 設定しない<xref:System.Web.Configuration.PagesSection.Buffer%2A>に`true`パフォーマンスが重要な考慮事項である場合。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.Configuration.PagesSection.Buffer%2A> プロパティの使用方法を示しています。  
  
 [!code-csharp[System.Web.Configuration.PagesSection#16](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/CS/usingpagessection.cs#16)]
 [!code-vb[System.Web.Configuration.PagesSection#16](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/VB/usingpagessection.vb#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientIDMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.ClientIDMode ClientIDMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ClientIDMode ClientIDMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.PagesSection.ClientIDMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ClientIDMode As ClientIDMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ClientIDMode ClientIDMode { System::Web::UI::ClientIDMode get(); void set(System::Web::UI::ClientIDMode value); };" />
      <MemberSignature Language="F#" Value="member this.ClientIDMode : System.Web.UI.ClientIDMode with get, set" Usage="System.Web.Configuration.PagesSection.ClientIDMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Configuration.ConfigurationProperty("clientIDMode", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ClientIDMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールの識別子を生成するために使用される既定のアルゴリズムを取得または設定します。</summary>
        <value><see cref="P:System.Web.UI.Control.ClientID" /> プロパティの値の生成方法を示す値。 既定値は <see cref="F:System.Web.UI.ClientIDMode.Predictable" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用する、 <xref:System.Web.Configuration.PagesSection.ClientIDMode%2A> Web サイト全体の既定値を設定するプロパティ。 個々 の Web ページで、または個々 のコントロールは、この値を上書きすることができます。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.ClientIDMode" />
        <related type="Article" href="https://msdn.microsoft.com/library/45a8c3ef-5ac7-48f1-862a-0cd5073742e7">ASP.NET コントロールの識別</related>
        <related type="Article" href="https://msdn.microsoft.com/library/fb58ed73-d8f7-401c-9560-d99dd9ca7db8">操作方法：クライアント スクリプトからのアクセス制御</related>
      </Docs>
    </Member>
    <Member MemberName="CompilationMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.CompilationMode CompilationMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.CompilationMode CompilationMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.PagesSection.CompilationMode" />
      <MemberSignature Language="VB.NET" Value="Public Property CompilationMode As CompilationMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::CompilationMode CompilationMode { System::Web::UI::CompilationMode get(); void set(System::Web::UI::CompilationMode value); };" />
      <MemberSignature Language="F#" Value="member this.CompilationMode : System.Web.UI.CompilationMode with get, set" Usage="System.Web.Configuration.PagesSection.CompilationMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Configuration.ConfigurationProperty("compilationMode", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.CompilationMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>.aspx ページおよび .ascx コントロールのコンパイル方法を指定する値を取得または設定します。</summary>
        <value>.aspx ページおよび .ascx コントロールのコンパイル方法を指定する <see cref="P:System.Web.Configuration.PagesSection.CompilationMode" /> プロパティ値の 1 つ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定値は <xref:System.Web.UI.CompilationMode.Always> です。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.Configuration.PagesSection.CompilationMode%2A> プロパティの使用方法を示しています。  
  
 [!code-csharp[System.Web.Configuration.PagesSection#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/CS/usingpagessection.cs#6)]
 [!code-vb[System.Web.Configuration.PagesSection#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/VB/usingpagessection.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.CompilationMode" />
      </Docs>
    </Member>
    <Member MemberName="ControlRenderingCompatibilityVersion">
      <MemberSignature Language="C#" Value="public Version ControlRenderingCompatibilityVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version ControlRenderingCompatibilityVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.PagesSection.ControlRenderingCompatibilityVersion" />
      <MemberSignature Language="VB.NET" Value="Public Property ControlRenderingCompatibilityVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ ControlRenderingCompatibilityVersion { Version ^ get(); void set(Version ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ControlRenderingCompatibilityVersion : Version with get, set" Usage="System.Web.Configuration.PagesSection.ControlRenderingCompatibilityVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.Configuration.VersionConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Configuration.ConfigurationProperty("controlRenderingCompatibilityVersion", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Configuration.ConfigurationValidator(typeof(System.Web.Configuration.VersionValidator))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>表示された HTML と互換性がある ASP.NET のバージョンを指定する値を取得または設定します。</summary>
        <value>表示された HTML と互換性がある ASP.NET のバージョン。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この値によって設定されます、`controlRenderingCompatibilityVersion`の属性、 `pages` Web.config ファイル内の要素。 このプロパティの値がの既定値、<xref:System.Web.UI.Control.RenderingCompatibility%2A?displayProperty=nameWithType>プロパティ。 使用方法については、次を参照してください。、<xref:System.Web.UI.Control.RenderingCompatibility%2A?displayProperty=nameWithType>プロパティ。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">このプロパティを <see langword="null" /> に設定しようとしました。</exception>
        <altmember cref="P:System.Web.UI.Control.RenderingCompatibility" />
      </Docs>
    </Member>
    <Member MemberName="Controls">
      <MemberSignature Language="C#" Value="public System.Web.Configuration.TagPrefixCollection Controls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Configuration.TagPrefixCollection Controls" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.PagesSection.Controls" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Controls As TagPrefixCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Configuration::TagPrefixCollection ^ Controls { System::Web::Configuration::TagPrefixCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Controls : System.Web.Configuration.TagPrefixCollection" Usage="System.Web.Configuration.PagesSection.Controls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Configuration.ConfigurationProperty("controls")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.TagPrefixCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.Configuration.TagPrefixInfo" /> オブジェクトのコレクションを取得します。</summary>
        <value><see cref="T:System.Web.Configuration.TagPrefixCollection" /> オブジェクトの <see cref="T:System.Web.Configuration.TagPrefixInfo" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.TagPrefixInfo>オブジェクトに対応して、 `@ Register` ASP.NET ページ ディレクティブ。 `@ Register`ディレクティブでは、ユーザー コントロールのタグ プレフィックスを指定できます。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.Configuration.PagesSection.Controls%2A> プロパティの使用方法を示しています。  
  
 [!code-csharp[System.Web.Configuration.PagesSection#12](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/CS/usingpagessection.cs#12)]
 [!code-vb[System.Web.Configuration.PagesSection#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/VB/usingpagessection.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Configuration.TagPrefixCollection" />
        <altmember cref="T:System.Web.Configuration.TagPrefixInfo" />
      </Docs>
    </Member>
    <Member MemberName="DeserializeSection">
      <MemberSignature Language="C#" Value="protected override void DeserializeSection (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void DeserializeSection(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.PagesSection.DeserializeSection(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub DeserializeSection (reader As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void DeserializeSection(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="override this.DeserializeSection : System.Xml.XmlReader -&gt; unit" Usage="pagesSection.DeserializeSection reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableEventValidation">
      <MemberSignature Language="C#" Value="public bool EnableEventValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableEventValidation" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.PagesSection.EnableEventValidation" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableEventValidation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableEventValidation { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableEventValidation : bool with get, set" Usage="System.Web.Configuration.PagesSection.EnableEventValidation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Configuration.ConfigurationProperty("enableEventValidation", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>イベントの検証を有効にするかどうかを指定する値を取得または設定します。</summary>
        <value>イベントの検証が有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.PagesSection.EnableEventValidation%2A>属性は、イベントの検証を実行するかどうかを示します。 既定値は `true` です。 Web アプリケーションでは、.NET Framework のバージョン 1.0 の動作に戻すには、イベントの検証を無効にできます必要に応じて。  
  
 基本コントロールは、イベントを検証するかどうかを判断するには、この属性を確認します。 派生コントロールは、この基本コントロールの属性を継承しないと、これは既定では、イベントの検証から除外します。 まだ追加して派生コントロールでイベントの検証を実行する ASP.NET に指示する、<xref:System.Web.Configuration.PagesSection.EnableEventValidation%2A>自体に設定して、派生コントロールに属性`true`します。  
  
> [!NOTE]
>  イベントの検証は、ポストバックで不正な要求とコールバックのリスクを軽減します。 ASP.NET コントロールでポストバック要求またはコールバック中に発生するイベントのみを検証するように指示します。 このモデルでは、レンダリング時にイベントを登録し、ポスト バックまたはコールバックの処理中に、イベントは、検証です。 ASP.NET のすべてのイベント ドリブンのコントロールは、既定でこの機能を使用します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableSessionState">
      <MemberSignature Language="C#" Value="public System.Web.Configuration.PagesEnableSessionState EnableSessionState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Configuration.PagesEnableSessionState EnableSessionState" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.PagesSection.EnableSessionState" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableSessionState As PagesEnableSessionState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Configuration::PagesEnableSessionState EnableSessionState { System::Web::Configuration::PagesEnableSessionState get(); void set(System::Web::Configuration::PagesEnableSessionState value); };" />
      <MemberSignature Language="F#" Value="member this.EnableSessionState : System.Web.Configuration.PagesEnableSessionState with get, set" Usage="System.Web.Configuration.PagesSection.EnableSessionState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Configuration.ConfigurationProperty("enableSessionState", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.PagesEnableSessionState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>セッション状態が有効かどうか、または読み取り専用かどうかを指定する値を取得または設定します。</summary>
        <value>セッション状態が有効かどうか、または読み取り専用かどうかを指定する <see cref="P:System.Web.Configuration.PagesSection.EnableSessionState" /> プロパティの値の 1 つ。 既定値は <see cref="F:System.Web.Configuration.PagesEnableSessionState.True" /> です。セッション状態が有効なことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例は、<xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> プロパティの使用方法を示しています。  
  
 [!code-csharp[System.Web.Configuration.PagesSection#14](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/CS/usingpagessection.cs#14)]
 [!code-vb[System.Web.Configuration.PagesSection#14](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/VB/usingpagessection.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">値が、有効な <see cref="T:System.Web.Configuration.PagesEnableSessionState" /> 列挙値ではありません。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">ASP.NET セッション状態の概要</related>
      </Docs>
    </Member>
    <Member MemberName="EnableViewState">
      <MemberSignature Language="C#" Value="public bool EnableViewState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.PagesSection.EnableViewState" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableViewState As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableViewState { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableViewState : bool with get, set" Usage="System.Web.Configuration.PagesSection.EnableViewState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Configuration.ConfigurationProperty("enableViewState", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ビューステートが有効かどうかを示す値を取得または設定します。</summary>
        <value>ビューステートが有効な場合は <see langword="true" />。ビューステートが無効な場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例は、<xref:System.Web.Configuration.PagesSection.EnableViewState%2A> プロパティの使用方法を示しています。  
  
 [!code-csharp[System.Web.Configuration.PagesSection#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/CS/usingpagessection.cs#5)]
 [!code-vb[System.Web.Configuration.PagesSection#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/VB/usingpagessection.vb#5)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/19d2a6ed-9a77-4c7c-a7f5-74dd4b6c3818">ASP.NET ビュー ステートの概要</related>
      </Docs>
    </Member>
    <Member MemberName="EnableViewStateMac">
      <MemberSignature Language="C#" Value="public bool EnableViewStateMac { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableViewStateMac" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.PagesSection.EnableViewStateMac" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableViewStateMac As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableViewStateMac { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableViewStateMac : bool with get, set" Usage="System.Web.Configuration.PagesSection.EnableViewStateMac" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Configuration.ConfigurationProperty("enableViewStateMac", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ページがクライアントからポスト バックされたときに ASP.NET がページのビューステートでメッセージ認証コード (MAC) を実行する必要があるかどうかを指定する値を取得または設定します。</summary>
        <value>ページがクライアントからポスト バックされたときに ASP.NET がページのビューステートでメッセージ認証コード (MAC) を実行する必要がある場合は、<see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ビュー ステート MAC は、ページがブラウザーに送信されるときに、ページのビューステートに保存されている隠し変数の暗号化されたバージョンです。 このプロパティに設定しているときに`true`、暗号化されたビュー ステートがオンになっていることが改ざんされていないクライアントのことを確認します。  
  
> [!IMPORTANT]
>  この属性設定しないで`false`実稼働 Web サイトで、アプリケーションまたはページがビュー ステートを使用していない場合でもです。 ビューステートの MAC だけでなく、ビュー ステートには、その他の ASP.NET 機能のセキュリティを確保に役立ちます。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.Configuration.PagesSection.EnableViewStateMac%2A> プロパティの使用方法を示しています。  
  
 [!code-csharp[System.Web.Configuration.PagesSection#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/CS/usingpagessection.cs#8)]
 [!code-vb[System.Web.Configuration.PagesSection#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/VB/usingpagessection.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreDeviceFilters">
      <MemberSignature Language="C#" Value="public System.Web.Configuration.IgnoreDeviceFilterElementCollection IgnoreDeviceFilters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Configuration.IgnoreDeviceFilterElementCollection IgnoreDeviceFilters" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.PagesSection.IgnoreDeviceFilters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IgnoreDeviceFilters As IgnoreDeviceFilterElementCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Configuration::IgnoreDeviceFilterElementCollection ^ IgnoreDeviceFilters { System::Web::Configuration::IgnoreDeviceFilterElementCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreDeviceFilters : System.Web.Configuration.IgnoreDeviceFilterElementCollection" Usage="System.Web.Configuration.PagesSection.IgnoreDeviceFilters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Configuration.ConfigurationProperty("ignoreDeviceFilters")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.IgnoreDeviceFilterElementCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ASP.NET でページの表示時に無視するデバイス タグのコレクションを取得します。</summary>
        <value>ASP.NET で無視するデバイス タグのコレクション。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 無視するデバイス タグは、ASP.NET によって処理されることがなく、ブラウザーにいるときに渡す必要がある HTML 名前空間プレフィックスとして指定されます。 例としては、 `sys` Microsoft Ajax 要素に使用されるプレフィックス。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Configuration.IgnoreDeviceFilterElement" />
      </Docs>
    </Member>
    <Member MemberName="MaintainScrollPositionOnPostBack">
      <MemberSignature Language="C#" Value="public bool MaintainScrollPositionOnPostBack { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MaintainScrollPositionOnPostBack" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.PagesSection.MaintainScrollPositionOnPostBack" />
      <MemberSignature Language="VB.NET" Value="Public Property MaintainScrollPositionOnPostBack As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MaintainScrollPositionOnPostBack { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.MaintainScrollPositionOnPostBack : bool with get, set" Usage="System.Web.Configuration.PagesSection.MaintainScrollPositionOnPostBack" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Configuration.ConfigurationProperty("maintainScrollPositionOnPostBack", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ポストバック後にサーバーから戻ってきたとき、ページのスクロール位置を保持するかどうかを示す値を取得または設定します。</summary>
        <value>ポストバック後にページのスクロール位置を保持する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="false" /> です。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.Page.IsPostBack" />
      </Docs>
    </Member>
    <Member MemberName="MasterPageFile">
      <MemberSignature Language="C#" Value="public string MasterPageFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MasterPageFile" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.PagesSection.MasterPageFile" />
      <MemberSignature Language="VB.NET" Value="Public Property MasterPageFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MasterPageFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MasterPageFile : string with get, set" Usage="System.Web.Configuration.PagesSection.MasterPageFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Configuration.ConfigurationProperty("masterPageFile", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アプリケーションのマスター ページへの参照を取得または設定します。</summary>
        <value>アプリケーションのマスター ページへの参照。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティの値には、相対パスまたは絶対パスを指定できます。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.Configuration.PagesSection.MasterPageFile%2A> プロパティの使用方法を示しています。  
  
 [!code-csharp[System.Web.Configuration.PagesSection#15](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/CS/usingpagessection.cs#15)]
 [!code-vb[System.Web.Configuration.PagesSection#15](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/VB/usingpagessection.vb#15)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/4e53eedf-8304-4e7a-aed1-691a2623b28b">ASP.NET マスター ページの概要</related>
      </Docs>
    </Member>
    <Member MemberName="MaxPageStateFieldLength">
      <MemberSignature Language="C#" Value="public int MaxPageStateFieldLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxPageStateFieldLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.PagesSection.MaxPageStateFieldLength" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxPageStateFieldLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxPageStateFieldLength { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxPageStateFieldLength : int with get, set" Usage="System.Web.Configuration.PagesSection.MaxPageStateFieldLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Configuration.ConfigurationProperty("maxPageStateFieldLength", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>単一のビューステート フィールドに格納できる最大文字数を取得または設定します。</summary>
        <value>単一のビューステート フィールドに格納できる最大文字数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ページおよびコントロールのビュー ステートは、ページまたはコントロールがレンダリングされるときに、非表示のビュー ステート フィールドに格納されます。 格納されているデータの長さを超えた場合、<xref:System.Web.Configuration.PagesSection.MaxPageStateFieldLength%2A>値、複数のビュー状態フィールドの間でデータを分割し、します。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.Configuration.PagesSection.MaxPageStateFieldLength%2A> プロパティの使用方法を示しています。  
  
 [!code-csharp[System.Web.Configuration.PagesSection#10](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/CS/usingpagessection.cs#10)]
 [!code-vb[System.Web.Configuration.PagesSection#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/VB/usingpagessection.vb#10)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/19d2a6ed-9a77-4c7c-a7f5-74dd4b6c3818">ASP.NET ビュー ステートの概要</related>
      </Docs>
    </Member>
    <Member MemberName="Namespaces">
      <MemberSignature Language="C#" Value="public System.Web.Configuration.NamespaceCollection Namespaces { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Configuration.NamespaceCollection Namespaces" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.PagesSection.Namespaces" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Namespaces As NamespaceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Configuration::NamespaceCollection ^ Namespaces { System::Web::Configuration::NamespaceCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Namespaces : System.Web.Configuration.NamespaceCollection" Usage="System.Web.Configuration.PagesSection.Namespaces" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Configuration.ConfigurationProperty("namespaces")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.NamespaceCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.Configuration.NamespaceInfo" /> オブジェクトのコレクションを取得します。</summary>
        <value><see cref="T:System.Web.Configuration.NamespaceCollection" /> オブジェクトの <see cref="T:System.Web.Configuration.NamespaceInfo" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.TagPrefixInfo>オブジェクトに対応して、 `@ Import` ASP.NET ページ ディレクティブ。 `Import`ディレクティブでは、アプリケーションのすべてのページに自動的にインポートされる名前空間を指定できます。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.Configuration.PagesSection.Namespaces%2A> プロパティの使用方法を示しています。  
  
 [!code-csharp[System.Web.Configuration.PagesSection#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/CS/usingpagessection.cs#2)]
 [!code-vb[System.Web.Configuration.PagesSection#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/VB/usingpagessection.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Configuration.NamespaceCollection" />
        <altmember cref="T:System.Web.Configuration.NamespaceInfo" />
      </Docs>
    </Member>
    <Member MemberName="PageBaseType">
      <MemberSignature Language="C#" Value="public string PageBaseType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PageBaseType" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.PagesSection.PageBaseType" />
      <MemberSignature Language="VB.NET" Value="Public Property PageBaseType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PageBaseType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PageBaseType : string with get, set" Usage="System.Web.Configuration.PagesSection.PageBaseType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Configuration.ConfigurationProperty("pageBaseType", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>既定で .aspx ページが継承する分離コード クラスを指定する値を取得または設定します。</summary>
        <value>既定で .aspx ページが継承する分離コード クラスを指定する文字列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例は、<xref:System.Web.Configuration.PagesSection.PageBaseType%2A> プロパティの使用方法を示しています。  
  
 [!code-csharp[System.Web.Configuration.PagesSection#18](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/CS/usingpagessection.cs#18)]
 [!code-vb[System.Web.Configuration.PagesSection#18](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/VB/usingpagessection.vb#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PageParserFilterType">
      <MemberSignature Language="C#" Value="public string PageParserFilterType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PageParserFilterType" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.PagesSection.PageParserFilterType" />
      <MemberSignature Language="VB.NET" Value="Public Property PageParserFilterType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PageParserFilterType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PageParserFilterType : string with get, set" Usage="System.Web.Configuration.PagesSection.PageParserFilterType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Configuration.ConfigurationProperty("pageParserFilterType", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>パーサーのフィルター タイプを指定する値を取得または設定します。</summary>
        <value>パーサーのフィルター タイプを指定する文字列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 パーサーのフィルター、インスタンスの<xref:System.Web.UI.PageParserFilter>クラスでは実行時にソース コードを変更するために解析の手順の前に、ページのコンパイル プロセスによって呼び出されます。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.Configuration.PagesSection.PageParserFilterType%2A> プロパティの使用方法を示しています。  
  
 [!code-csharp[System.Web.Configuration.PagesSection#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/CS/usingpagessection.cs#3)]
 [!code-vb[System.Web.Configuration.PagesSection#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/VB/usingpagessection.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.PageParserFilter" />
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.PagesSection.Properties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Properties As ConfigurationPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Configuration::ConfigurationPropertyCollection ^ Properties { System::Configuration::ConfigurationPropertyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Configuration.ConfigurationPropertyCollection" Usage="System.Web.Configuration.PagesSection.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderAllHiddenFieldsAtTopOfForm">
      <MemberSignature Language="C#" Value="public bool RenderAllHiddenFieldsAtTopOfForm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RenderAllHiddenFieldsAtTopOfForm" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.PagesSection.RenderAllHiddenFieldsAtTopOfForm" />
      <MemberSignature Language="VB.NET" Value="Public Property RenderAllHiddenFieldsAtTopOfForm As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RenderAllHiddenFieldsAtTopOfForm { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RenderAllHiddenFieldsAtTopOfForm : bool with get, set" Usage="System.Web.Configuration.PagesSection.RenderAllHiddenFieldsAtTopOfForm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Configuration.ConfigurationProperty("renderAllHiddenFieldsAtTopOfForm", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>システムが生成した、すべての隠しフィールドをフォームの上部に表示するかどうかを指定する値を取得または設定します。</summary>
        <value>システムが生成した隠しフィールドをフォームの上部に表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true." /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用することができます、<xref:System.Web.Configuration.PagesSection.RenderAllHiddenFieldsAtTopOfForm%2A>プロパティをいくつかのシステムで生成された非表示フィールドがフォームの最後に表示されることを指定します。  
  
 .NET Framework 3.5 SP1 より前のバージョンの ASP.NET、ASP.NET は、いくつかの非表示フィールドを表示します (たとえば、 `__VIEWSTATE`) フォームの上部にあります。 他の非表示フィールド (たとえば、 `__EVENTVALIDATION`) 終了直前に、フォームの下部にレンダリングされる`</div>`タグ。 既定では、ASP.NET 3.5 sp1 では、システムによって生成されたすべての非表示フィールドは、ページの上部に表示されます。 これにより、ページの読み込みが終了する前にポストバックが実行される場合でも、サーバーにこれらのフィールドの情報を送信することを確認します。 場合<xref:System.Web.Configuration.PagesSection.RenderAllHiddenFieldsAtTopOfForm%2A>に設定されている`false`ポストバックを実行して、ページの読み込みが終了する前に「無効なポストバックまたはコールバックの引数」エラーが発生することができます。  
  
> [!NOTE]
>  プロパティ名では、「すべて非表示フィールド」を示して、ユーザーが作成した非表示フィールドはこのプロパティの設定によって受けません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetReadOnly">
      <MemberSignature Language="C#" Value="protected override void SetReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.PagesSection.SetReadOnly" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetReadOnly ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetReadOnly();" />
      <MemberSignature Language="F#" Value="override this.SetReadOnly : unit -&gt; unit" Usage="pagesSection.SetReadOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartNavigation">
      <MemberSignature Language="C#" Value="public bool SmartNavigation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SmartNavigation" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.PagesSection.SmartNavigation" />
      <MemberSignature Language="VB.NET" Value="Public Property SmartNavigation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SmartNavigation { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SmartNavigation : bool with get, set" Usage="System.Web.Configuration.PagesSection.SmartNavigation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Configuration.ConfigurationProperty("smartNavigation", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>スマート ナビゲーションが有効かどうかを示す値を取得または設定します。</summary>
        <value>スマート移動が有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  スマート移動では、Microsoft Internet Explorer 5.5 以降が必要です。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.Configuration.PagesSection.SmartNavigation%2A> プロパティの使用方法を示しています。  
  
 [!code-csharp[System.Web.Configuration.PagesSection#19](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/CS/usingpagessection.cs#19)]
 [!code-vb[System.Web.Configuration.PagesSection#19](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/VB/usingpagessection.vb#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StyleSheetTheme">
      <MemberSignature Language="C#" Value="public string StyleSheetTheme { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StyleSheetTheme" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.PagesSection.StyleSheetTheme" />
      <MemberSignature Language="VB.NET" Value="Public Property StyleSheetTheme As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StyleSheetTheme { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StyleSheetTheme : string with get, set" Usage="System.Web.Configuration.PagesSection.StyleSheetTheme" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Configuration.ConfigurationProperty("styleSheetTheme", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ASP.NET スタイル シートのテーマ名を取得または設定します。</summary>
        <value>ASP.NET スタイル シートのテーマ名。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例は、<xref:System.Web.Configuration.PagesSection.StyleSheetTheme%2A> プロパティの使用方法を示しています。  
  
 [!code-csharp[System.Web.Configuration.PagesSection#13](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/CS/usingpagessection.cs#13)]
 [!code-vb[System.Web.Configuration.PagesSection#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/VB/usingpagessection.vb#13)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Page.StyleSheetTheme" />
        <related type="Article" href="https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3">ASP.NET のテーマの概要</related>
        <related type="Article" href="https://msdn.microsoft.com/library/f9d72364-4d77-4b73-84be-7630dc63e0fe(v=vs.100)">ASP.NET のテーマを適用します。</related>
      </Docs>
    </Member>
    <Member MemberName="TagMapping">
      <MemberSignature Language="C#" Value="public System.Web.Configuration.TagMapCollection TagMapping { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Configuration.TagMapCollection TagMapping" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.PagesSection.TagMapping" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TagMapping As TagMapCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Configuration::TagMapCollection ^ TagMapping { System::Web::Configuration::TagMapCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TagMapping : System.Web.Configuration.TagMapCollection" Usage="System.Web.Configuration.PagesSection.TagMapping" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Configuration.ConfigurationProperty("tagMapping")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.TagMapCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.Configuration.TagMapInfo" /> オブジェクトのコレクションを取得します。</summary>
        <value><see cref="T:System.Web.Configuration.TagMapCollection" /> オブジェクトの <see cref="T:System.Web.Configuration.TagMapInfo" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.TagPrefixInfo>オブジェクト、ASP.NET ページに対応するディレクティブがありません。 <xref:System.Web.Configuration.TagPrefixInfo>オブジェクトでは、コンパイル時に他の種類名の型名のタグを再マップできます。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.Configuration.PagesSection.TagMapping%2A> プロパティの使用方法を示しています。  
  
 [!code-csharp[System.Web.Configuration.PagesSection#17](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/CS/usingpagessection.cs#17)]
 [!code-vb[System.Web.Configuration.PagesSection#17](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/VB/usingpagessection.vb#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Theme">
      <MemberSignature Language="C#" Value="public string Theme { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Theme" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.PagesSection.Theme" />
      <MemberSignature Language="VB.NET" Value="Public Property Theme As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Theme { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Theme : string with get, set" Usage="System.Web.Configuration.PagesSection.Theme" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Configuration.ConfigurationProperty("theme", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ASP.NET ページのテーマ名を取得または設定します。</summary>
        <value>ASP.NET ページのテーマ名。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例は、<xref:System.Web.Configuration.PagesSection.Theme%2A> プロパティの使用方法を示しています。  
  
 [!code-csharp[System.Web.Configuration.PagesSection#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/CS/usingpagessection.cs#4)]
 [!code-vb[System.Web.Configuration.PagesSection#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/VB/usingpagessection.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Page.Theme" />
        <related type="Article" href="https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3">ASP.NET のテーマの概要</related>
        <related type="Article" href="https://msdn.microsoft.com/library/f9d72364-4d77-4b73-84be-7630dc63e0fe(v=vs.100)">ASP.NET のテーマを適用します。</related>
      </Docs>
    </Member>
    <Member MemberName="UserControlBaseType">
      <MemberSignature Language="C#" Value="public string UserControlBaseType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserControlBaseType" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.PagesSection.UserControlBaseType" />
      <MemberSignature Language="VB.NET" Value="Public Property UserControlBaseType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserControlBaseType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UserControlBaseType : string with get, set" Usage="System.Web.Configuration.PagesSection.UserControlBaseType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Configuration.ConfigurationProperty("userControlBaseType", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>既定でユーザー コントロールが継承する分離コード クラスを指定する値を取得または設定します。</summary>
        <value>既定でユーザー コントロールが継承する分離コード ファイルを指定する文字列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例は、<xref:System.Web.Configuration.PagesSection.UserControlBaseType%2A> プロパティの使用方法を示しています。  
  
 [!code-csharp[System.Web.Configuration.PagesSection#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/CS/usingpagessection.cs#11)]
 [!code-vb[System.Web.Configuration.PagesSection#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/VB/usingpagessection.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateRequest">
      <MemberSignature Language="C#" Value="public bool ValidateRequest { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidateRequest" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.PagesSection.ValidateRequest" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidateRequest As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidateRequest { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ValidateRequest : bool with get, set" Usage="System.Web.Configuration.PagesSection.ValidateRequest" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Configuration.ConfigurationProperty("validateRequest", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ブラウザーからの入力値の安全性を調べるかどうかを指定する値を取得または設定します。 詳細については、「<see href="https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)">スクリプトによる攻略の概要</see>」を参照してください。</summary>
        <value>ブラウザーからの入力値の安全性を調べる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 要求の検証は、危険性のある値の一覧にすべての入力データを比較することによって実行されます。 ASP.NET には、一致が発生した場合、<xref:System.Web.HttpRequestValidationException>します。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.Configuration.PagesSection.ValidateRequest%2A> プロパティの使用方法を示しています。  
  
 [!code-csharp[System.Web.Configuration.PagesSection#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/CS/usingpagessection.cs#7)]
 [!code-vb[System.Web.Configuration.PagesSection#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/VB/usingpagessection.vb#7)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07">スクリプトによる攻略の概要</related>
      </Docs>
    </Member>
    <Member MemberName="ViewStateEncryptionMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.ViewStateEncryptionMode ViewStateEncryptionMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ViewStateEncryptionMode ViewStateEncryptionMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.PagesSection.ViewStateEncryptionMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ViewStateEncryptionMode As ViewStateEncryptionMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ViewStateEncryptionMode ViewStateEncryptionMode { System::Web::UI::ViewStateEncryptionMode get(); void set(System::Web::UI::ViewStateEncryptionMode value); };" />
      <MemberSignature Language="F#" Value="member this.ViewStateEncryptionMode : System.Web.UI.ViewStateEncryptionMode with get, set" Usage="System.Web.Configuration.PagesSection.ViewStateEncryptionMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Configuration.ConfigurationProperty("viewStateEncryptionMode", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ViewStateEncryptionMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see langword="ViewState" /> 値を保持する際に使用される暗号化モードを取得または設定します。</summary>
        <value><see langword="ViewState" /> 値の暗号化モードを示す <see cref="T:System.Web.UI.ViewStateEncryptionMode" /> 列挙値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用可能な<xref:System.Web.UI.Page.ViewStateEncryptionMode%2A>列挙値は`Always`、 `Auto`、および`Never`します。 既定値は `Auto` です。 場合<xref:System.Web.UI.Page.ViewStateEncryptionMode%2A>プロパティに設定されて`Auto`、`ViewState`コントロールからの要求時に暗号化されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ViewStateEncryptionMode" />
      </Docs>
    </Member>
  </Members>
</Type>