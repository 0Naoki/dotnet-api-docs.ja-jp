<Namespace Name="System.Runtime.Remoting.Lifetime">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5ac8c7510ea8c5026f390f2936bebfb8b315c4f4" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="30735636" />
  </Metadata>
  <Docs>
    <summary>
      <span data-ttu-id="14296-101">
        <see cref="N:System.Runtime.Remoting.Lifetime" /> 名前空間には、リモート オブジェクトの有効期間を管理するクラスが含まれています。</span>
      <span class="sxs-lookup">
        <span data-stu-id="14296-101">The <see cref="N:System.Runtime.Remoting.Lifetime" /> namespace contains classes that manage the lifetime of remote objects.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14296-102">これまでは、分散ガベージ コレクションは、参照カウントとオブジェクトの有効期間を制御するために ping を使用します。</span><span class="sxs-lookup"><span data-stu-id="14296-102">Traditionally, distributed garbage collection uses reference counts and pinging for control over the lifetime of objects.</span></span> <span data-ttu-id="14296-103">サービスあたり、いくつかのクライアントがある場合にこれは、機能ですが、何千ものサービスごとのクライアントがある場合に適しています。</span><span class="sxs-lookup"><span data-stu-id="14296-103">This works well when there are a few clients per service, but doesn't scale well when there are thousands of clients per service.</span></span> <span data-ttu-id="14296-104">リモート処理有効期間サービスは、各サービスにリースを関連付けし、リース期間が経過すると、サービスを削除します。</span><span class="sxs-lookup"><span data-stu-id="14296-104">The remoting lifetime service associates a lease with each service, and deletes a service when its lease time expires.</span></span> <span data-ttu-id="14296-105">従来の分散ガベージ コレクターの機能の有効期間サービスにかかるしも調整もサーバーあたりのクライアントの数が増加するとします。</span><span class="sxs-lookup"><span data-stu-id="14296-105">The lifetime service can take on the function of a traditional distributed garbage collector, and it also adjusts well when the numbers of clients per server increases.</span></span>  
  
 <span data-ttu-id="14296-106">各アプリケーション ドメインには、そのドメインのリースを制御する担当するリース マネージャーが含まれています。</span><span class="sxs-lookup"><span data-stu-id="14296-106">Each application domain contains a lease manager that is responsible for controlling leases in its domain.</span></span> <span data-ttu-id="14296-107">すべてのリースが期限切れのリース時間を定期的に確認されます。</span><span class="sxs-lookup"><span data-stu-id="14296-107">All leases are examined periodically for expired lease times.</span></span> <span data-ttu-id="14296-108">リースの有効期限が切れている場合、1 つ以上のリースのスポンサーが呼び出され、リースを更新すること。</span><span class="sxs-lookup"><span data-stu-id="14296-108">If a lease has expired, one or more of the lease's sponsors are invoked and given the opportunity to renew the lease.</span></span> <span data-ttu-id="14296-109">リースを更新するスポンサがない場合、リース マネージャーがリースを削除し、ガベージ コレクターによってオブジェクトを収集できます。</span><span class="sxs-lookup"><span data-stu-id="14296-109">If none of the sponsors decides to renew the lease, the lease manager removes the lease and the object can be collected by the garbage collector.</span></span> <span data-ttu-id="14296-110">リース マネージャーは、残りのリース時間によって並べ替えられたリースのリースの一覧を保持します。</span><span class="sxs-lookup"><span data-stu-id="14296-110">The lease manager maintains a lease list with leases sorted by remaining lease time.</span></span> <span data-ttu-id="14296-111">一覧の上部にある残りの時間が最短のリースが格納されます。</span><span class="sxs-lookup"><span data-stu-id="14296-111">The leases with the shortest remaining time are stored at the top of the list.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
</Namespace>