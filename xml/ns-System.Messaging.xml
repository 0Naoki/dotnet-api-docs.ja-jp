<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ns-System.Messaging.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5a83ea4b-dd12-480b-bfc8-267272ef1864eab5ed0569927572b94947f95901b3f05d70f785.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">eab5ed0569927572b94947f95901b3f05d70f785</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">df6cf590aa3087f6c7c202712eee781c6a3c8f96</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/10/2018</xliffext:ms.lasthandoff>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;see cref="N:System.Messaging" /&gt;</ph> namespace provides classes that allow you to connect to, monitor, and administer message queues on the network and send, receive, or peek messages.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="N:System.Messaging" /&gt;</ph> 名前空間は、ネットワークのメッセージ キューへの接続、監視、および管理を行い、メッセージの送信、受信、またはピークを行うことができるクラスを提供します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Members of the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> class include the following methods for reading and writing messages to the queue:</source>
          <target state="translated">メンバー、<ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph>クラスは、読み取りや、キューにメッセージを書き込む次のメソッドを含めます。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Send%2A&gt;</ph> method enables your application to write messages to the queue.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Send%2A&gt;</ph>メソッドにより、アプリケーションでキューにメッセージを書き込めません。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Overloads of the method enable you to specify whether to send your message using a <ph id="ph1">&lt;xref:System.Messaging.Message&gt;</ph> (which provides detailed control over the information you send) or any other managed object, including application-specific classes.</source>
          <target state="translated">メソッドのオーバー ロードを使用して、メッセージを送信するかどうかを指定できます。、 <ph id="ph1">&lt;xref:System.Messaging.Message&gt;</ph> (提供を詳細に制御を送信する情報) またはその他のマネージ オブジェクト、アプリケーション固有のクラスを含むです。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The method also supports sending messages as part of a transaction.</source>
          <target state="translated">メソッドには、トランザクションの一部としてメッセージの送信もサポートしています。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.ReceiveById%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%2A&gt;</ph> methods provide functionality for reading messages from a queue.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph>、 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.ReceiveById%2A&gt;</ph>、および<ph id="ph3">&lt;xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%2A&gt;</ph>メソッドは、キューからメッセージを読み取るための機能を提供します。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Like the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Send%2A&gt;</ph> method, these methods provide overloads that support transactional queue processing.</source>
          <target state="translated">同様に、<ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Send%2A&gt;</ph>メソッド、これらのメソッドは、トランザクション キュー処理をサポートするオーバー ロードを提供します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>These methods also provide overloads with time-out.</source>
          <target state="translated">これらのメソッドでは、タイムアウトを持つオーバー ロードも提供します。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>Out parameters that enable processing to continue if the queue is empty.</source>
          <target state="translated">Out パラメーターは、処理を続行かどうか、キューは空にできるようにします。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because these methods are examples of synchronous processing, they interrupt the current thread until a message is available, unless you specify a time-out.</source>
          <target state="translated">これらのメソッドは同期処理の例であるために、タイムアウトを指定していない限り、メッセージが使用されるまで、現在のスレッドに割り込むです。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> method is similar to <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph>, but it does not cause a message to be removed from the queue when it is read.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph>メソッドは<ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph>は、メッセージが読み取られると、キューから削除するのには発生しません。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> does not change the queue contents, there are no overloads to support transactional processing.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph>キューの内容は変わりません。 トランザクション処理をサポートするためにオーバー ロードはありません。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, because <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph>, like <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph>, reads messages synchronously from the queue, overloads of the method do support specifying a time-out in order to prevent the thread from waiting indefinitely.</source>
          <target state="translated">ただし、ため<ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph>と同様、 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph>、キューからメッセージを同期的に読み取り、メソッドのオーバー ロードは、スレッドが無期限に待機していることを防ぐために、タイムアウトを指定することをサポートします。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29&gt;</ph>, <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29&gt;</ph> methods provide ways to asynchronously read messages from the queue.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph>、 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29&gt;</ph>、 <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph>、および<ph id="ph4">&lt;xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29&gt;</ph>メソッドが非同期的に、キューからメッセージを読み取る方法を提供します。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>They do not interrupt the current thread while waiting for a message to arrive in the queue.</source>
          <target state="translated">キューに到着するメッセージの待機中に、現在のスレッドを中断するしません。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following methods of the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> class provide functionality for retrieving lists of queues by specified criteria and determining if specific queues exist:</source>
          <target state="translated">次のメソッド、<ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph>クラスは、指定した条件によってキューの一覧を取得し、特定のキューが存在するかどうかを決定するための機能を提供します。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetPrivateQueuesByMachine%28System.String%29&gt;</ph> enables the retrieval of the private queues on a computer.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetPrivateQueuesByMachine%28System.String%29&gt;</ph> コンピューター上のプライベート キューの取得を有効にします。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetPublicQueuesByCategory%28System.Guid%29&gt;</ph>, <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.GetPublicQueuesByLabel%28System.String%29&gt;</ph>, and <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.GetPublicQueuesByMachine%28System.String%29&gt;</ph> provide ways to retrieve public queues by common criteria.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetPublicQueuesByCategory%28System.Guid%29&gt;</ph>、 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.GetPublicQueuesByLabel%28System.String%29&gt;</ph>、および<ph id="ph3">&lt;xref:System.Messaging.MessageQueue.GetPublicQueuesByMachine%28System.String%29&gt;</ph>共通の条件でパブリック キューを取得する方法を提供します。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>An overload of <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetPublicQueues%2A&gt;</ph> provides even finer detail for selecting queues based on a number of search criteria.</source>
          <target state="translated">オーバー ロード<ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetPublicQueues%2A&gt;</ph>検索条件の数に基づいてキューを選択するためにさらに細分化の詳細を提供します。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>Other methods of the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> class provide the following functionality:</source>
          <target state="translated">他の方法で、<ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph>クラスは、次の機能を提供します。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>Creating and deleting Message Queueing queues.</source>
          <target state="translated">作成して、メッセージ キューのキューを削除します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>Using a message enumerator to step through the messages in a queue.</source>
          <target state="translated">メッセージの列挙子を使用して、キュー内のメッセージをステップスルーします。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>Using a queue enumerator for iterating through the queues on the system.</source>
          <target state="translated">キューの列挙子を使用して、システム上のキューを反復処理します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting ACL-based access rights.</source>
          <target state="translated">ACL ベースのアクセス権を設定します。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>Working with the connection cache.</source>
          <target state="translated">接続キャッシュを使用します。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.Message&gt;</ph> class provides detailed control over the information you send to a queue, and is the object used when receiving or peeking messages from a queue.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.Message&gt;</ph>クラスは、キューに送信する情報の詳細に制御を提供は、オブジェクトを使用、キューからメッセージを受信またはピークするとします。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>Besides the message body, the properties of the <ph id="ph1">&lt;xref:System.Messaging.Message&gt;</ph> class include acknowledgment settings, formatter selection, identification, authentication and encryption information, timestamps, indications about using tracing, server journaling, and dead-letter queues, and transaction data.</source>
          <target state="translated">メッセージの本文のプロパティだけでなく、<ph id="ph1">&lt;xref:System.Messaging.Message&gt;</ph>クラスは、確認の設定、フォーマッタの選択、id、認証および暗号化情報、タイムスタンプ、トレース、サーバーの履歴、および配信不能メッセージ キュー、およびトランザクション データの使用に関する指示します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> component is associated with the following three formatters, which enable you to serialize and deserialize messages sent and received from queues:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph>コンポーネント、およびキューから送受信されるメッセージを逆シリアル化を可能にする次の 3 つフォーマッタに関連付けられました。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.XmlMessageFormatter&gt;</ph> provides loosely coupled messaging, enabling independent versioning of serialized types on the client and server.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.XmlMessageFormatter&gt;</ph>クライアントとサーバーでのシリアル化された型の独立したバージョン管理を有効にする疎結合メッセージングを提供します。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.ActiveXMessageFormatter&gt;</ph> is compatible with the MSMQ COM control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.ActiveXMessageFormatter&gt;</ph> MSMQ COM コントロールとの互換性ができます。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>It allows you to send types that can be received by the control and to receive types that were sent by the control.</source>
          <target state="translated">コントロールによって受信可能な型を送信して、コントロールから送信された型を受信する、実行できます。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.BinaryMessageFormatter&gt;</ph> provides a faster alternative to the <ph id="ph2">&lt;xref:System.Messaging.XmlMessageFormatter&gt;</ph>, but without the benefit of loosely coupled messaging.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.BinaryMessageFormatter&gt;</ph>を高速代替手段、 <ph id="ph2">&lt;xref:System.Messaging.XmlMessageFormatter&gt;</ph>、せず疎結合メッセージングの利点です。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>Other classes in the <ph id="ph1">`Messaging`</ph> namespace support code-access and ACL-based security, filtering <ph id="ph2">&lt;xref:System.Messaging.Message&gt;</ph> properties when reading messages from a queue, and using transactions when sending and receiving messages.</source>
          <target state="translated">他のクラス、<ph id="ph1">`Messaging`</ph>名前空間は、コード アクセスおよび ACL ベースのセキュリティをサポート フィルター<ph id="ph2">&lt;xref:System.Messaging.Message&gt;</ph>プロパティがメッセージをキューからメッセージを読み取ると、送受信するときにトランザクションを使用するとします。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>