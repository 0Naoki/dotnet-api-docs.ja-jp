<Namespace Name="System.Messaging">
  <Metadata><Meta Name="ms.openlocfilehash" Value="eab5ed0569927572b94947f95901b3f05d70f785" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70626804" /></Metadata><Docs>
    <summary><see cref="N:System.Messaging" /> 名前空間は、ネットワークのメッセージ キューへの接続、監視、および管理を行い、メッセージの送信、受信、またはピークを行うことができるクラスを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Messaging.MessageQueue>クラスのメンバーには、キューへのメッセージの読み取りと書き込みを行うための次のメソッドが含まれています。  
  
-   <xref:System.Messaging.MessageQueue.Send%2A>メソッドを使用すると、アプリケーションでキューにメッセージを書き込むことができます。 メソッドのオーバーロードを使用すると、を<xref:System.Messaging.Message>使用してメッセージを送信するかどうか (送信する情報を詳細に制御できます)、またはアプリケーション固有のクラスを含むその他のマネージオブジェクトを指定できます。 メソッドは、トランザクションの一部としてのメッセージの送信もサポートします。  
  
-   、 <xref:System.Messaging.MessageQueue.Receive%2A> 、 <xref:System.Messaging.MessageQueue.ReceiveById%2A> および <xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%2A> の各メソッドは、キューからメッセージを読み取るための機能を提供します。 <xref:System.Messaging.MessageQueue.Send%2A>メソッドと同様に、これらのメソッドはトランザクションキュー処理をサポートするオーバーロードを提供します。 これらのメソッドは、タイムアウトのあるオーバーロードも提供します。  
  
     キューが空の場合に処理を続行できるようにする Out パラメーター。 これらのメソッドは同期処理の例なので、タイムアウトを指定しない限り、メッセージが使用可能になるまで、現在のスレッドを中断します。  
  
-   メソッドはと似ていますが、メッセージが読み取られるときにキューから削除されることはありません。 <xref:System.Messaging.MessageQueue.Receive%2A>  <xref:System.Messaging.MessageQueue.Peek%2A> で<xref:System.Messaging.MessageQueue.Peek%2A>はキューの内容が変更されないため、トランザクション処理をサポートするオーバーロードはありません。 ただし、と<xref:System.Messaging.MessageQueue.Peek%2A>同様<xref:System.Messaging.MessageQueue.Receive%2A>に、はキューから同期的にメッセージを読み取ります。そのため、メソッドのオーバーロードでは、スレッドが無制限に待機するのを防ぐためにタイムアウトを指定できます。  
  
-   、 、、および <xref:System.Messaging.MessageQueue.BeginPeek%2A> の <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29> 各メソッドは、キューからメッセージを非同期的に読み取る方法を提供します。 <xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29> <xref:System.Messaging.MessageQueue.BeginReceive%2A> キューにメッセージが到着するのを待機している間、現在のスレッドを中断しません。  
  
 <xref:System.Messaging.MessageQueue>クラスの次のメソッドは、指定された条件によってキューのリストを取得し、特定のキューが存在するかどうかを判断するための機能を提供します。  
  
-   <xref:System.Messaging.MessageQueue.GetPrivateQueuesByMachine%28System.String%29>コンピューター上の専用キューを取得できるようにします。  
  
-   <xref:System.Messaging.MessageQueue.GetPublicQueuesByCategory%28System.Guid%29>、 <xref:System.Messaging.MessageQueue.GetPublicQueuesByLabel%28System.String%29>、および<xref:System.Messaging.MessageQueue.GetPublicQueuesByMachine%28System.String%29>には、一般的な条件でパブリックキューを取得する方法が用意されています。 の<xref:System.Messaging.MessageQueue.GetPublicQueues%2A>オーバーロードは、多数の検索条件に基づいてキューを選択する場合にさらに詳細な情報を提供します。  
  
 <xref:System.Messaging.MessageQueue>クラスの他のメソッドは、次の機能を提供します。  
  
-   メッセージキューのキューを作成および削除しています。  
  
-   メッセージ列挙子を使用してキュー内のメッセージをステップ実行します。  
  
-   キュー列挙子を使用してシステム上のキューを反復処理します。  
  
-   ACL ベースのアクセス権を設定しています。  
  
-   接続キャッシュを使用して作業する。  
  
 クラス<xref:System.Messaging.Message>は、キューに送信する情報を詳細に制御します。これは、キューからメッセージを受信またはピークするときに使用されるオブジェクトです。 メッセージ本文に加えて、 <xref:System.Messaging.Message>クラスのプロパティには、受信確認の設定、フォーマッタの選択、識別、認証と暗号化の情報、タイムスタンプ、トレースの使用に関する表示、サーバージャーナル、配信不能キューとトランザクションデータ。  
  
 <xref:System.Messaging.MessageQueue>コンポーネントは、次の3つのフォーマッタに関連付けられています。これにより、キューから送受信されたメッセージをシリアル化および逆シリアル化できます。  
  
-   は<xref:System.Messaging.XmlMessageFormatter>疎結合のメッセージングを提供し、クライアントとサーバーでシリアル化された型の独立したバージョン管理を可能にします。  
  
-   は MSMQ COM コントロールと互換性があります。 <xref:System.Messaging.ActiveXMessageFormatter> これにより、コントロールが受信できる型を送信し、コントロールによって送信された型を受け取ることができます。  
  
-   では、より高速な代替<xref:System.Messaging.XmlMessageFormatter>手段が提供されますが、疎結合メッセージングの利点はありません。 <xref:System.Messaging.BinaryMessageFormatter>  
  
 `Messaging`名前空間の他のクラスは、コードアクセスと ACL ベースのセキュリティ、 <xref:System.Messaging.Message>キューからメッセージを読み取るときのプロパティのフィルター処理、およびメッセージの送受信時のトランザクションの使用をサポートします。  
  
 ]]></format>
    </remarks>
  </Docs>
</Namespace>