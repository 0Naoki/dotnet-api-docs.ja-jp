<Namespace Name="System.Messaging">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="eab5ed0569927572b94947f95901b3f05d70f785" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="30734696" />
  </Metadata>
  <Docs>
    <summary>
      <see cref="N:System.Messaging" /> 名前空間は、ネットワークのメッセージ キューへの接続、監視、および管理を行い、メッセージの送信、受信、またはピークを行うことができるクラスを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メンバー、<xref:System.Messaging.MessageQueue>クラスが読み取りとキューにメッセージを書き込み、次のメソッドが含まれます。  
  
-   <xref:System.Messaging.MessageQueue.Send%2A>メソッドにより、アプリケーションでキューにメッセージを書き込みます。 使用して、メッセージを送信するかどうかを指定したり、メソッドのオーバー ロードを有効にする、 <xref:System.Messaging.Message> (送信する情報の制御について詳しく説明している) またはその他のマネージ オブジェクト、アプリケーション固有のクラスを含むです。 メソッドには、トランザクションの一部としてメッセージの送信もサポートしています。  
  
-   <xref:System.Messaging.MessageQueue.Receive%2A>、 <xref:System.Messaging.MessageQueue.ReceiveById%2A>、および<xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%2A>メソッドは、キューからメッセージを読み取るための機能を提供します。 ように、<xref:System.Messaging.MessageQueue.Send%2A>メソッドでは、これらのメソッドがトランザクション キュー処理をサポートするオーバー ロードを提供します。 これらのメソッドでは、タイムアウトを持つオーバー ロードも提供します。  
  
     Out パラメーターは、処理をキューが空であるかどうかは続行できるようにします。 これらのメソッドは、同期処理の例であるために、タイムアウトを指定しない限り、メッセージが、現在のスレッドに割り込みます。  
  
-   <xref:System.Messaging.MessageQueue.Peek%2A>メソッドは<xref:System.Messaging.MessageQueue.Receive%2A>は、メッセージが読み取られるときに、キューから削除するのには発生しません。 <xref:System.Messaging.MessageQueue.Peek%2A>キューの内容を変更しないトランザクション処理をサポートするためにオーバー ロードはありません。 ただし、ため<xref:System.Messaging.MessageQueue.Peek%2A>と同様に、 <xref:System.Messaging.MessageQueue.Receive%2A>、キューからメッセージを同期的に読み取り、メソッドのオーバー ロードは、スレッドが無期限に待機していることを防止するためのタイムアウトを指定することをサポートします。  
  
-   <xref:System.Messaging.MessageQueue.BeginPeek%2A>、 <xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29>、 <xref:System.Messaging.MessageQueue.BeginReceive%2A>、および<xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29>メソッドを非同期的にメッセージをキューから読み取る方法を提供します。 メッセージがキューに到達するを待機中に、現在のスレッドを中断するしません。  
  
 次のメソッド、<xref:System.Messaging.MessageQueue>クラスは、指定条件でキューの一覧を取得し、特定のキューが存在するかどうかを決定するための機能を提供します。  
  
-   <xref:System.Messaging.MessageQueue.GetPrivateQueuesByMachine%28System.String%29> コンピューター上のプライベート キューの取得を有効にします。  
  
-   <xref:System.Messaging.MessageQueue.GetPublicQueuesByCategory%28System.Guid%29>、 <xref:System.Messaging.MessageQueue.GetPublicQueuesByLabel%28System.String%29>、および<xref:System.Messaging.MessageQueue.GetPublicQueuesByMachine%28System.String%29>common criteria パブリック キューを取得する方法を提供します。 オーバー ロード<xref:System.Messaging.MessageQueue.GetPublicQueues%2A>検索条件の数に基づいてキューを選択するためにも細かな詳細を提供します。  
  
 その他の方法、<xref:System.Messaging.MessageQueue>クラスは、次の機能を提供します。  
  
-   作成して、メッセージ キューのキューを削除しています。  
  
-   メッセージの列挙子を使用して、キュー内のメッセージをステップします。  
  
-   キューの列挙子を使用して、システム上のキューを反復処理します。  
  
-   ACL ベースのアクセス権を設定します。  
  
-   接続キャッシュを使用します。  
  
 <xref:System.Messaging.Message>クラスは、キューに送信する情報の詳細に制御を提供は、オブジェクトを使用、キューからメッセージを受信またはピークするとします。 メッセージの本文のプロパティだけでなく、<xref:System.Messaging.Message>クラスには、確認の設定、フォーマッタの選択、識別、認証と暗号化の情報、タイムスタンプ、トレース、サーバーの履歴の使用に関する指示が含まれてし、配信不能メッセージ キュー、およびトランザクション データ。  
  
 <xref:System.Messaging.MessageQueue>コンポーネント、およびキューから送受信されるメッセージを逆シリアル化を有効にする次の 3 つフォーマッタに関連付けられています。  
  
-   <xref:System.Messaging.XmlMessageFormatter>クライアントとサーバーでのシリアル化された型の独立したバージョン管理を有効にする疎結合メッセージングを提供します。  
  
-   <xref:System.Messaging.ActiveXMessageFormatter>は MSMQ COM コントロールとの互換性。 コントロールによって受信可能な型を送信して、コントロールから送信された種類を受け取るように実行できます。  
  
-   <xref:System.Messaging.BinaryMessageFormatter>に高速に代わる、<xref:System.Messaging.XmlMessageFormatter>が疎結合メッセージングの利点もします。  
  
 他のクラス、`Messaging`名前空間は、コード アクセスおよび ACL ベースのセキュリティをサポート フィルター<xref:System.Messaging.Message>プロパティがメッセージをキューからメッセージを読み取ると、送受信するときにトランザクションを使用するとします。  
  
 ]]></format>
    </remarks>
  </Docs>
</Namespace>