<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="PropertyCollection.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5d12104b2b75a8b600909da054fd9c89e4ce528d4.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d12104b2b75a8b600909da054fd9c89e4ce528d4</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.DirectoryServices.PropertyCollection">
          <source>The <ph id="ph1">&lt;see cref="T:System.DirectoryServices.PropertyCollection" /&gt;</ph> class contains the properties of a <ph id="ph2">&lt;see cref="T:System.DirectoryServices.DirectoryEntry" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.DirectoryServices.PropertyCollection" /&gt;</ph> クラスは、<ph id="ph2">&lt;see cref="T:System.DirectoryServices.DirectoryEntry" /&gt;</ph> のプロパティを格納します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.PropertyCollection.Contains(System.String)">
          <source>The name of the property to find.</source>
          <target state="translated">検索するプロパティの名前。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.PropertyCollection.Contains(System.String)">
          <source>Determines whether the specified property is in this collection.</source>
          <target state="translated">指定したプロパティがこのコレクション内にあるかどうかを確認します。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.PropertyCollection.Contains(System.String)">
          <source>The return value is <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified property belongs to this collection; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">指定したプロパティがこのコレクションにある場合、戻り値は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.PropertyCollection.CopyTo(System.DirectoryServices.PropertyValueCollection[],System.Int32)">
          <source>The array of <ph id="ph1">&lt;see cref="T:System.DirectoryServices.PropertyValueCollection" /&gt;</ph> objects that receives the elements of this collection.</source>
          <target state="translated">このコレクションの要素を受け取る <ph id="ph1">&lt;see cref="T:System.DirectoryServices.PropertyValueCollection" /&gt;</ph> オブジェクトの配列。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.PropertyCollection.CopyTo(System.DirectoryServices.PropertyValueCollection[],System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> where this method starts copying this collection.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> の 0 から始まるインデックス。この位置からこのコレクションのコピーが開始されます。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.PropertyCollection.CopyTo(System.DirectoryServices.PropertyValueCollection[],System.Int32)">
          <source>Copies the all objects in this collection to an array, starting at the specified index in the target array.</source>
          <target state="translated">このコレクション内のすべてのオブジェクトを配列にコピーします。コピー先の配列の指定したインデックスからコピーが開始されます。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.PropertyCollection.CopyTo(System.DirectoryServices.PropertyValueCollection[],System.Int32)">
          <source>An error occurred during the call to the underlying interface.</source>
          <target state="translated">基になるインターフェイスへの呼び出し中にエラーが発生しました。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="P:System.DirectoryServices.PropertyCollection.Count">
          <source>Gets the number of properties in this collection.</source>
          <target state="translated">このコレクション内のプロパティの数を取得します。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.Count">
          <source>The number of properties in this collection.</source>
          <target state="translated">このコレクション内のプロパティの数。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.Count">
          <source>The Internet Information Services (IIS), and WinNT providers do not currently support <ph id="ph1">&lt;xref:System.DirectoryServices.PropertyCollection.Count%2A&gt;</ph>, so each will throw a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph>.</source>
          <target state="translated">インターネット インフォメーション サービス (IIS) とサポートで実行されていない WinNT プロバイダー<ph id="ph1">&lt;xref:System.DirectoryServices.PropertyCollection.Count%2A&gt;</ph>それぞれがスローされますので、<ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="P:System.DirectoryServices.PropertyCollection.Count">
          <source>An error occurred during the call to the underlying interface.</source>
          <target state="translated">基になるインターフェイスへの呼び出し中にエラーが発生しました。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="P:System.DirectoryServices.PropertyCollection.Count">
          <source>The directory cannot report the number of properties.</source>
          <target state="translated">ディレクトリがプロパティ数を報告できません。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.PropertyCollection.GetEnumerator">
          <source>Returns an enumerator that you can use to iterate through this collection.</source>
          <target state="translated">このコレクションを反復処理するために使用できる列挙子を返します。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.PropertyCollection.GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> that you can use to iterate through this collection.</source>
          <target state="translated">このコレクションを反復処理するために使用できる <ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.PropertyCollection.GetEnumerator">
          <source>An error occurred during the call to the underlying interface.</source>
          <target state="translated">基になるインターフェイスへの呼び出し中にエラーが発生しました。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="P:System.DirectoryServices.PropertyCollection.Item(System.String)">
          <source>The name of the property to retrieve.</source>
          <target state="translated">取得するプロパティの名前。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="P:System.DirectoryServices.PropertyCollection.Item(System.String)">
          <source>Gets the specified property.</source>
          <target state="translated">指定したプロパティを取得します。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.Item(System.String)">
          <source>The value of the specified property.</source>
          <target state="translated">指定したプロパティの値。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.Item(System.String)">
          <source>In C#, this property is the indexer for the <ph id="ph1">&lt;xref:System.DirectoryServices.PropertyCollection&gt;</ph> class.</source>
          <target state="translated">C# では、このプロパティは <ph id="ph1">&lt;xref:System.DirectoryServices.PropertyCollection&gt;</ph> クラスのインデクサーです。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.Item(System.String)">
          <source>In JScript, you can use the default indexed properties defined by a type, but you cannot explicitly define your own.</source>
          <target state="translated">JScript では、型によって定義された既定のインデックス付きプロパティを使用することができますが明示的に、自分を定義できません。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.Item(System.String)">
          <source>However, specifying the expando attribute on a class automatically provides a default indexed property with a type of Object and an index type of <ph id="ph1">&lt;xref:System.String&gt;</ph>.</source>
          <target state="translated">ただし、クラスに expando 属性は、既定値を自動的に提供を指定するインデックス付きプロパティにオブジェクトの型と、インデックスの種類の<ph id="ph1">&lt;xref:System.String&gt;</ph>します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="P:System.DirectoryServices.PropertyCollection.PropertyNames">
          <source>Gets the names of the properties in this collection.</source>
          <target state="translated">このコレクション内のプロパティの名前を取得します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.PropertyNames">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> object that contains the names of the properties in this collection.</source>
          <target state="translated">このコレクション内のプロパティの名前が格納されている <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.PropertyNames">
          <source>When accessing members of the <ph id="ph1">&lt;xref:System.DirectoryServices.PropertyCollection.PropertyNames%2A&gt;</ph> property, a <ph id="ph2">&lt;xref:System.Runtime.InteropServices.COMException&gt;</ph> might be thrown due to an error while accessing the underlying interface.</source>
          <target state="translated">メンバーにアクセスするとき、<ph id="ph1">&lt;xref:System.DirectoryServices.PropertyCollection.PropertyNames%2A&gt;</ph>プロパティ、<ph id="ph2">&lt;xref:System.Runtime.InteropServices.COMException&gt;</ph>エラーのため、基になるインターフェイスにアクセス中にスローされることができます。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The one-dimensional <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> that is the destination of the elements copied from <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> から要素がコピーされる 1 次元の <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> must have zero-based indexing.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> には、0 から始まるインデックス番号が必要です。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated">コピーの開始位置となる、<bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> の 0 から始まるインデックス。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>Copies the elements of the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> to an <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph>, starting at a particular <ph id="ph3">&lt;see cref="T:System.Array" /&gt;</ph> index.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> の要素を <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph> にコピーします。コピーは特定の <ph id="ph3">&lt;see cref="T:System.Array" /&gt;</ph> のインデックスから開始されます。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> が 0 未満です。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is multidimensional.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> が多次元です。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The number of elements in the source <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> is greater than the available space from <ph id="ph2">&lt;paramref name="index" /&gt;</ph> to the end of the destination <ph id="ph3">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">コピー元の <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> の要素数が、コピー先 <ph id="ph3">&lt;paramref name="array" /&gt;</ph> の <ph id="ph2">&lt;paramref name="index" /&gt;</ph> から最後までの使用可能領域を超えています。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The type of the source <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> cannot be cast automatically to the type of the destination <ph id="ph2">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">コピー元の <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> の型をコピー先の <ph id="ph2">&lt;paramref name="array" /&gt;</ph> の型に自動的にキャストすることはできません。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#IsSynchronized">
          <source>Gets a value indicating whether access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> is synchronized (thread safe).</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> へのアクセスが同期されている (スレッド セーフである) かどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#IsSynchronized">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if access to the <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> is synchronized (thread safe); otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> へのアクセスが同期されている (スレッド セーフである) 場合は <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>。それ以外の場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#IsSynchronized">
          <source><ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> returns an object, which can be used to synchronize access to the <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> は、<ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> へのアクセスを同期するために使用できるオブジェクトを返します。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#IsSynchronized">
          <source>Most collection classes in the <ph id="ph1">&lt;xref:System.Collections?displayProperty=nameWithType&gt;</ph> namespace also implement a Synchronized method, which provides a synchronized wrapper around the underlying collection.</source>
          <target state="translated">内のほとんどのコレクション クラス、<ph id="ph1">&lt;xref:System.Collections?displayProperty=nameWithType&gt;</ph>名前空間も、基になるコレクションをラップする同期されたラッパーを提供する同期メソッドを実装します。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#IsSynchronized">
          <source>Enumerating through a collection is intrinsically not a thread safe procedure.</source>
          <target state="translated">コレクションの列挙は本質的にスレッド セーフな方法です。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#IsSynchronized">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">コレクションの同期がとられている場合でも、別のスレッドによってそのコレクションを変更できるため、変更の結果として列挙子は例外をスローします。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#IsSynchronized">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions that result from changes made by other threads.</source>
          <target state="translated">列挙処理中には、スレッド セーフを確保するには、列挙中にコレクションをロックするか、他のスレッドによって行われた変更によってスローされる例外をキャッチします。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#IsSynchronized">
          <source>[Visual Basic, C#]</source>
          <target state="translated">[Visual Basic、C# の場合]</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#IsSynchronized">
          <source>The following example shows how to lock the collection using the <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> during the entire enumeration:</source>
          <target state="translated">次の例を使用してコレクションをロックする方法を示しています、<ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph>列挙中に。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#SyncRoot">
          <source>Gets an object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> へのアクセスを同期するために使用できるオブジェクトを取得します。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#SyncRoot">
          <source>An object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> へのアクセスの同期に使用できるオブジェクト。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#SyncRoot">
          <source>For collections whose underlying store is not publicly available, the expected implementation is to return the current instance.</source>
          <target state="translated">基になっているストアがパブリックではないコレクションの場合、現在のインスタンスを返す実装が要求されます。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#SyncRoot">
          <source>Note that the pointer to the current instance might not be sufficient for collections that wrap other collections; those should return the underlying collection's SyncRoot property.</source>
          <target state="translated">現在のインスタンスへのポインターできないことがあります。 その他のコレクションをラップするコレクションには十分に注意してください。これらは、基になるコレクションの SyncRoot プロパティを返します。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#SyncRoot">
          <source>Most collection classes in the <ph id="ph1">&lt;xref:System.Collections?displayProperty=nameWithType&gt;</ph> namespace also implement a Synchronized method, which provides a synchronized wrapper around the underlying collection.</source>
          <target state="translated">内のほとんどのコレクション クラス、<ph id="ph1">&lt;xref:System.Collections?displayProperty=nameWithType&gt;</ph>名前空間も、基になるコレクションをラップする同期されたラッパーを提供する同期メソッドを実装します。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#SyncRoot">
          <source>However, derived classes can provide their own synchronized version of the collection using the <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> property.</source>
          <target state="translated">ただし、派生クラスは <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> プロパティを使って、コレクションの同期されたバージョンを独自に提供できます。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#SyncRoot">
          <source>The synchronizing code must perform operations on the <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> of the collection, not directly on the collection.</source>
          <target state="translated">同期されたコードで操作を実行する必要があります、<ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph>コレクションの操作は、コレクションのです。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#SyncRoot">
          <source>This ensures proper operation of collections that are derived from other objects.</source>
          <target state="translated">これにより、他のオブジェクトから派生したコレクションを適切に操作できるようになります。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#SyncRoot">
          <source>Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the collection instance.</source>
          <target state="translated">特に、コレクション インスタンスを同時に変更する可能性がある別スレッドとの間で、正常な同期を維持します。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#SyncRoot">
          <source>In the absence of a Synchronized method on a collection, the expected usage for <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> looks like this:</source>
          <target state="translated">予想される使用率、コレクションの同期メソッドがない場合は<ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph>次に示します。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#SyncRoot">
          <source>Enumerating through a collection is intrinsically not a thread safe procedure.</source>
          <target state="translated">コレクションの列挙は本質的にスレッド セーフな方法です。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#SyncRoot">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">コレクションの同期がとられている場合でも、別のスレッドによってそのコレクションを変更できるため、変更の結果として列挙子は例外をスローします。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#SyncRoot">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">列挙処理を確実にスレッド セーフに行うには、列挙中にコレクションをロックするか、他のスレッドによって行われた変更によってスローされる例外をキャッチします。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#SyncRoot">
          <source>[Visual Basic, C#]</source>
          <target state="translated">[Visual Basic、C# の場合]</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#SyncRoot">
          <source>The following code example shows how to lock the collection using the <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> during the entire enumeration:</source>
          <target state="translated">次のコード例を使用してコレクションをロックする方法を示しています、<ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph>列挙中に。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to use as the key of the element to add.</source>
          <target state="translated">追加する要素のキーとして使用する <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to use as the value of the element to add.</source>
          <target state="translated">追加する要素の値として使用する <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>Adds an element with the provided key and value to the <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> object.</source>
          <target state="translated">指定したキーおよび値を持つ要素を <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> オブジェクトに追加します。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph> property to add new elements by setting the value of a key that does not exist in the dictionary (for example, <ph id="ph2">`myCollection["myNonexistentKey"] = myValue`</ph>).</source>
          <target state="translated">使用することも、<ph id="ph1">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph>キーの値を設定して、新しい要素を追加するプロパティがディクショナリに存在しません (たとえば、 <ph id="ph2">`myCollection["myNonexistentKey"] = myValue`</ph>)。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>However, if the specified key already exists in the dictionary, setting the <ph id="ph1">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph> property overwrites the old value.</source>
          <target state="translated">ただし、ディクショナリ内で指定したキーが既に存在する場合は、設定、<ph id="ph1">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph>プロパティに古い値が上書きされます。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>In contrast, the <ph id="ph1">&lt;xref:System.Collections.IDictionary.Add%2A&gt;</ph> method does not modify existing elements.</source>
          <target state="translated">これに対し、<ph id="ph1">&lt;xref:System.Collections.IDictionary.Add%2A&gt;</ph>メソッドでは、既存の要素は変更しません。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>The following example shows how to implement the <ph id="ph1">&lt;xref:System.Collections.IDictionary.Add%2A&gt;</ph> method.</source>
          <target state="translated">次の例は、<ph id="ph1">&lt;xref:System.Collections.IDictionary.Add%2A&gt;</ph> メソッドを実装する方法を示しています。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> class.</source>
          <target state="translated">このコード例に示されている例の一部である、<ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>An element with the same key already exists in the <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> object.</source>
          <target state="translated">同じキーを持つ要素が、<ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> オブジェクトに既に存在します。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> は読み取り専用です。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> has a fixed size.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> は固定サイズです。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Clear">
          <source>Removes all elements from the <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> オブジェクトからすべての要素を削除します。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Clear">
          <source>The following example demonstrates how to implement the <ph id="ph1">&lt;xref:System.Collections.IDictionary.Clear%2A&gt;</ph> method.</source>
          <target state="translated">次の例は、実装する方法を示します、<ph id="ph1">&lt;xref:System.Collections.IDictionary.Clear%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Clear">
          <source>This example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> class.</source>
          <target state="translated">この例に示されている例の一部である、<ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Clear">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> object is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> が読み取り専用です。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Contains(System.Object)">
          <source>The key to locate in the <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> オブジェクト内で検索されるキー。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Contains(System.Object)">
          <source>Determines whether the <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> object contains an element with the specified key.</source>
          <target state="translated">指定したキーを持つ要素が <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> オブジェクトに格納されているかどうかを確認します。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Contains(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> contains an element with the key; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">指定したキーを持つ要素を <ph id="ph1">&lt;see langword="true" /&gt;</ph> が保持している場合は <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>。それ以外の場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Contains(System.Object)">
          <source>The following example demonstrates how to implement the <ph id="ph1">&lt;xref:System.Collections.IDictionary.Contains%2A&gt;</ph> method.</source>
          <target state="translated">次の例は、実装する方法を示します、<ph id="ph1">&lt;xref:System.Collections.IDictionary.Contains%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Contains(System.Object)">
          <source>This example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> class.</source>
          <target state="translated">この例に示されている例の一部である、<ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Contains(System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#IsFixedSize">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> object has a fixed size.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> オブジェクトが固定サイズかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#IsFixedSize">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> object has a fixed size; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> オブジェクトが固定サイズの場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#IsFixedSize">
          <source>A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but does allow the modification of existing elements.</source>
          <target state="translated">固定サイズ コレクションできない追加または削除の要素のコレクションが作成された後で、既存の要素の変更はできます。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#IsFixedSize">
          <source>A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</source>
          <target state="translated">固定サイズ コレクションが追加および削除する要素を防止するラッパーで単純なコレクションそのための追加または削除、要素を含む、基になるコレクションが変更された場合、固定サイズ コレクションにはそれらの変更が反映されます。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#IsFixedSize">
          <source>The following example demonstrates how to implement the <ph id="ph1">&lt;xref:System.Collections.IDictionary.IsFixedSize%2A&gt;</ph> property.</source>
          <target state="translated">次の例は、実装する方法を示します、<ph id="ph1">&lt;xref:System.Collections.IDictionary.IsFixedSize%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#IsFixedSize">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> class.</source>
          <target state="translated">このコード例に示されている例の一部である、<ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#IsReadOnly">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> object is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> オブジェクトが読み取り専用かどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#IsReadOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> object is read-only; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> オブジェクトが読み取り専用の場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#IsReadOnly">
          <source>A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</source>
          <target state="translated">読み取り専用のコレクションでは、コレクション作成後に要素の追加、削除、または変更はできません。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#IsReadOnly">
          <source>The following example shows how to implement the <ph id="ph1">&lt;xref:System.Collections.IDictionary.IsReadOnly%2A&gt;</ph> property.</source>
          <target state="translated">次の例は、実装する方法を示します、<ph id="ph1">&lt;xref:System.Collections.IDictionary.IsReadOnly%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#IsReadOnly">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> class.</source>
          <target state="translated">このコード例に示されている例の一部である、<ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Item(System.Object)">
          <source>The key of the element to get or set.</source>
          <target state="translated">取得または設定する要素のキー。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Item(System.Object)">
          <source>Gets or sets the element with the specified key.</source>
          <target state="translated">指定したキーを持つ要素を取得または設定します。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Item(System.Object)">
          <source>The element with the specified key.</source>
          <target state="translated">指定したキーを持つ要素。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Item(System.Object)">
          <source>This property provides the ability to access a specific element in the collection by using the following syntax: <ph id="ph1">`myCollection[key]`</ph>.</source>
          <target state="translated">このプロパティでは、<ph id="ph1">`myCollection[key]`</ph> という構文を使用して、コレクション内の特定の要素にアクセスできます。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Item(System.Object)">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph> property to add new elements by setting the value of a key that does not exist in the dictionary (for example, <ph id="ph2">`myCollection["myNonexistentKey"] = myValue`</ph>).</source>
          <target state="translated">使用することも、<ph id="ph1">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph>キーの値を設定して、新しい要素を追加するプロパティがディクショナリに存在しません (たとえば、 <ph id="ph2">`myCollection["myNonexistentKey"] = myValue`</ph>)。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Item(System.Object)">
          <source>However, if the specified key already exists in the dictionary, setting the <ph id="ph1">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph> property overwrites the old value.</source>
          <target state="translated">ただし、ディクショナリ内で指定したキーが既に存在する場合は、設定、<ph id="ph1">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph>プロパティに古い値が上書きされます。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Item(System.Object)">
          <source>In contrast, the <ph id="ph1">&lt;xref:System.Collections.IDictionary.Add%2A&gt;</ph> method does not modify existing elements.</source>
          <target state="translated">これに対し、<ph id="ph1">&lt;xref:System.Collections.IDictionary.Add%2A&gt;</ph>メソッドでは、既存の要素は変更しません。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Item(System.Object)">
          <source>The following example shows how to implement the <ph id="ph1">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph> property.</source>
          <target state="translated">次の例は、実装する方法を示します、<ph id="ph1">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Item(System.Object)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> class.</source>
          <target state="translated">このコード例に示されている例の一部である、<ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Item(System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Item(System.Object)">
          <source>The property is set and the <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> object is read-only.</source>
          <target state="translated">このプロパティが設定されていますが、<ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> オブジェクトが読み取り専用です。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Item(System.Object)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Item(System.Object)">
          <source>The property is set, <ph id="ph1">&lt;paramref name="key" /&gt;</ph> does not exist in the collection, and the <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> has a fixed size.</source>
          <target state="translated">このプロパティが設定されていますが、<ph id="ph1">&lt;paramref name="key" /&gt;</ph> がコレクション内に存在しません。また、<ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> が固定サイズです。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Keys">
          <source>Gets an <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> object containing the keys of the <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> オブジェクトのキーを保持している <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> オブジェクトを取得します。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Keys">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> object containing the keys of the <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> オブジェクトのキーを保持している <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Keys">
          <source>The order of the keys in the returned <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> object is unspecified, but is guaranteed to be the same order as the corresponding values in the <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> returned by the <ph id="ph3">&lt;xref:System.Collections.IDictionary.Values%2A&gt;</ph> property.</source>
          <target state="translated">返された内のキーの順序<ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph>オブジェクトは指定しませんが、対応する値と同じ順序である保証は、<ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>によって返される、<ph id="ph3">&lt;xref:System.Collections.IDictionary.Values%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Keys">
          <source>The following example shows how to implement the <ph id="ph1">&lt;xref:System.Collections.IDictionary.Keys%2A&gt;</ph> property.</source>
          <target state="translated">次の例は、実装する方法を示します、<ph id="ph1">&lt;xref:System.Collections.IDictionary.Keys%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Keys">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> class.</source>
          <target state="translated">このコード例に示されている例の一部である、<ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Remove(System.Object)">
          <source>The key of the element to remove.</source>
          <target state="translated">削除する要素のキー。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Remove(System.Object)">
          <source>Removes the element with the specified key from the <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> object.</source>
          <target state="translated">指定したキーを持つ要素を <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> オブジェクトから削除します。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Remove(System.Object)">
          <source>The following example shows how to implement the <ph id="ph1">&lt;xref:System.Collections.IDictionary.Remove%2A&gt;</ph> method.</source>
          <target state="translated">次の例は、<ph id="ph1">&lt;xref:System.Collections.IDictionary.Remove%2A&gt;</ph> メソッドを実装する方法を示しています。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Remove(System.Object)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> class.</source>
          <target state="translated">このコード例に示されている例の一部である、<ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Remove(System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Remove(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> object is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> が読み取り専用です。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Remove(System.Object)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Remove(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> has a fixed size.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> は固定サイズです。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph> オブジェクトを返します。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph>.object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>[Visual Basic, C#]</source>
          <target state="translated">[Visual Basic、C# の場合]</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated">C# 言語の <ph id="ph1">`foreach`</ph> ステートメント (Visual Basic の場合は <ph id="ph2">`for each`</ph>) を使用することで列挙子の複雑さを回避できます。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended instead of directly manipulating the enumerator.</source>
          <target state="translated">したがってを使用して<ph id="ph1">`foreach`</ph>列挙子を直接操作するのではなくをお勧めします。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">列挙子を使用すると、コレクション内のデータを読み取ることができますが、基になるコレクションを変更することはできません。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">最初に、列挙子はコレクション内の 1 番目の要素の前に位置付けられます。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IEnumerable#GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> also brings the enumerator back to this position.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> を実行した場合も、列挙子はこの位置に戻されます。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>At this position, the <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> property is undefined.</source>
          <target state="translated">この位置にある、<ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>プロパティが定義されていません。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>Therefore, you must call <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</source>
          <target state="translated">そのため、<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> の値を読み取る前に、<ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> を呼び出して列挙子をコレクションの最初の要素に進める必要があります。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IEnumerable#GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> returns the same object until either <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> は、<ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> または <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> が呼び出されるまでは同じオブジェクトを返します。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IEnumerable#GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> は、<ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> を次の要素に設定します。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>If <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">場合<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>列挙子をコレクションの末尾が、コレクション内の最後の要素の後に配置されているパスと<ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>返します<ph id="ph3">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">列挙子がこの位置では、後続の呼び出しの場合<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>を返すことも<ph id="ph2">`false`</ph>します。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">最後の呼び出し場合<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>返される<ph id="ph2">`false`</ph>、<ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>が定義されていません。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>To set <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the first element of the collection again, you can call <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> followed by <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> をコレクションの最初の要素にもう一度設定するには、<ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> を呼び出してから <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> を呼び出します。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">コレクションが変更されない限り、列挙子は有効です。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">コレクションに対して変更 (要素の追加、変更、削除など) が行われると、列挙子は回復不可能な無効状態になり、その動作は未定義になります。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">列挙子にはコレクションへの排他アクセス権限はないため、コレクションの列挙処理は本質的にスレッド セーフな処理ではありません。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">列挙処理でスレッド セーフを確保するには、列挙処理が終わるまでコレクションをロックできます。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">コレクションに対し複数のスレッドがアクセスして読み取りや書き込みを行うことができるようにするには、独自に同期化を実装する必要があります。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="P:System.DirectoryServices.PropertyCollection.Values">
          <source>Gets the values of the properties in this collection.</source>
          <target state="translated">このコレクション内のプロパティの値を取得します。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.Values">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> that contains the values of the properties in this collection.</source>
          <target state="translated">このコレクション内のプロパティの値が格納されている <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.Values">
          <source>When accessing members of the <ph id="ph1">&lt;xref:System.DirectoryServices.PropertyCollection.Values%2A&gt;</ph> property, a <ph id="ph2">&lt;xref:System.Runtime.InteropServices.COMException&gt;</ph> exception might be thrown due to an error while accessing the underlying interface.</source>
          <target state="translated">メンバーにアクセスするとき、 <ph id="ph1">&lt;xref:System.DirectoryServices.PropertyCollection.Values%2A&gt;</ph> 、プロパティ、<ph id="ph2">&lt;xref:System.Runtime.InteropServices.COMException&gt;</ph>エラーのため、基になるインターフェイスにアクセス中に例外がスローされます。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>