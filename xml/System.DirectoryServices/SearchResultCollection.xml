<Type Name="SearchResultCollection" FullName="System.DirectoryServices.SearchResultCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="315e28b6eb1894f33ea88a366867ae61e7b9f070" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51912746" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SearchResultCollection : MarshalByRefObject, IDisposable, System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SearchResultCollection extends System.MarshalByRefObject implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.DirectoryServices.SearchResultCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class SearchResultCollection&#xA;Inherits MarshalByRefObject&#xA;Implements ICollection, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SearchResultCollection : MarshalByRefObject, IDisposable, System::Collections::ICollection" />
  <TypeSignature Language="F#" Value="type SearchResultCollection = class&#xA;    inherit MarshalByRefObject&#xA;    interface ICollection&#xA;    interface IEnumerable&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.DirectoryServices</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="b13e4-101">
        <see cref="T:System.DirectoryServices.SearchResultCollection" /> クラスは、<see cref="T:System.DirectoryServices.DirectorySearcher" /> クエリの実行中に Active Directory 階層から返された <see cref="T:System.DirectoryServices.SearchResult" /> インスタンスを格納します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="b13e4-101">The <see cref="T:System.DirectoryServices.SearchResultCollection" /> class contains the <see cref="T:System.DirectoryServices.SearchResult" /> instances that the Active Directory hierarchy returned during a <see cref="T:System.DirectoryServices.DirectorySearcher" /> query.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b13e4-102">実装の制限により、<xref:System.DirectoryServices.SearchResultCollection>クラス ガベージ コレクションがある場合にリリースすべてのアンマネージ リソースにことはできません。</span><span class="sxs-lookup"><span data-stu-id="b13e4-102">Due to implementation restrictions, the <xref:System.DirectoryServices.SearchResultCollection> class cannot release all of its unmanaged resources when it is garbage collected.</span></span> <span data-ttu-id="b13e4-103">メモリ リークを防ぐためには、呼び出す必要がある、<xref:System.DirectoryServices.SearchResultCollection.Dispose%2A>メソッドと、<xref:System.DirectoryServices.SearchResultCollection>オブジェクトが不要です。</span><span class="sxs-lookup"><span data-stu-id="b13e4-103">To prevent a memory leak, you must call the <xref:System.DirectoryServices.SearchResultCollection.Dispose%2A> method when the <xref:System.DirectoryServices.SearchResultCollection> object is no longer needed.</span></span>  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">
      <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />
    </permission>
  </Docs>
  <Members>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.DirectoryServices.SearchResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.DirectoryServices.SearchResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.SearchResultCollection.Contains(System.DirectoryServices.SearchResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (result As SearchResult) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::DirectoryServices::SearchResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.DirectoryServices.SearchResult -&gt; bool" Usage="searchResultCollection.Contains result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.DirectoryServices.SearchResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="b13e4-104">検索する <see cref="T:System.DirectoryServices.SearchResult" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b13e4-104">The <see cref="T:System.DirectoryServices.SearchResult" /> object to find.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b13e4-105">指定した <see cref="T:System.DirectoryServices.SearchResult" /> オブジェクトがこのコレクション内にあるかどうかを確認します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b13e4-105">Determines if a specified <see cref="T:System.DirectoryServices.SearchResult" /> object is in this collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b13e4-106">指定したプロパティがこのコレクションにある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b13e4-106">
              <see langword="true" /> if the specified property belongs to this collection; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.DirectoryServices.SearchResult[] results, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.DirectoryServices.SearchResult[] results, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.SearchResultCollection.CopyTo(System.DirectoryServices.SearchResult[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (results As SearchResult(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::DirectoryServices::SearchResult ^&gt; ^ results, int index);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : System.DirectoryServices.SearchResult[] * int -&gt; unit" Usage="searchResultCollection.CopyTo (results, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="results" Type="System.DirectoryServices.SearchResult[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="results">
          <span data-ttu-id="b13e4-107">このコレクションの要素を受け取る <see cref="T:System.DirectoryServices.SearchResult" /> オブジェクトの配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b13e4-107">The array of <see cref="T:System.DirectoryServices.SearchResult" /> objects that receives the elements of this collection.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="b13e4-108">
            <paramref name="results" /> の 0 から始まるインデックス。この位置からこのコレクションのコピーが開始されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b13e4-108">The zero-based index in <paramref name="results" /> where this method starts copying this collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b13e4-109">このコレクション内のすべての <see cref="T:System.DirectoryServices.SearchResult" /> オブジェクトを、指定した配列にコピーします。コピー先の配列の指定したインデックスからコピーが開始されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b13e4-109">Copies all <see cref="T:System.DirectoryServices.SearchResult" /> objects in this collection to the specific array, starting at the specified index in the target array.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.SearchResultCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.DirectoryServices.SearchResultCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b13e4-110">このコレクション内の <see cref="T:System.DirectoryServices.SearchResult" /> オブジェクトの数を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b13e4-110">Gets the number of <see cref="T:System.DirectoryServices.SearchResult" /> objects in this collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b13e4-111">このコレクション内の <see cref="T:System.DirectoryServices.SearchResult" /> オブジェクトの数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b13e4-111">The number of <see cref="T:System.DirectoryServices.SearchResult" /> objects in this collection.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b13e4-112">
            <see cref="T:System.DirectoryServices.SearchResultCollection" /> オブジェクトによって使用されているすべてのリソースを解放します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b13e4-112">Releases all resources that are used by the <see cref="T:System.DirectoryServices.SearchResultCollection" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.SearchResultCollection.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="searchResultCollection.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b13e4-113">
            <see cref="T:System.DirectoryServices.SearchResultCollection" /> オブジェクトによって使用されているすべてのリソースを解放します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b13e4-113">Releases all resources that are used by the <see cref="T:System.DirectoryServices.SearchResultCollection" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b13e4-114"><xref:System.DirectoryServices.SearchResultCollection.Dispose%2A> 、メソッドによって使用されているリソースを使用すること、<xref:System.DirectoryServices.SearchResultCollection>他の目的で再割り当てします。</span><span class="sxs-lookup"><span data-stu-id="b13e4-114">The <xref:System.DirectoryServices.SearchResultCollection.Dispose%2A> method, it allows the resources that are used by the <xref:System.DirectoryServices.SearchResultCollection> to be reallocated for other purposes.</span></span> <span data-ttu-id="b13e4-115">詳細については<xref:System.DirectoryServices.SearchResultCollection.Dispose%2A>を参照してください[アンマネージ リソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)します。</span><span class="sxs-lookup"><span data-stu-id="b13e4-115">For more information about <xref:System.DirectoryServices.SearchResultCollection.Dispose%2A>, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span>  
  
 <span data-ttu-id="b13e4-116">ガベージ コレクターでのメモリが解放されない、<xref:System.DirectoryServices.SearchResultCollection>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b13e4-116">The garbage collector does not release memory for a <xref:System.DirectoryServices.SearchResultCollection> object.</span></span> <span data-ttu-id="b13e4-117">そのため、アプリケーションを呼び出す必要があります、<xref:System.DirectoryServices.SearchResultCollection.Dispose%2A>メソッドをメモリ リークを防ぐために明示的にします。</span><span class="sxs-lookup"><span data-stu-id="b13e4-117">Therefore, an application must call the <xref:System.DirectoryServices.SearchResultCollection.Dispose%2A> method explicitly to prevent a memory leak.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.SearchResultCollection.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="searchResultCollection.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="b13e4-118">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b13e4-118">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b13e4-119">
            <see cref="T:System.DirectoryServices.SearchResultCollection" /> オブジェクトによって使用されているアンマネージド リソースを解放します。オプションでマネージド リソースも解放できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b13e4-119">Releases the unmanaged resources that are used by the <see cref="T:System.DirectoryServices.SearchResultCollection" /> object and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b13e4-120">このメソッドは、パブリック<xref:System.DirectoryServices.SearchResultCollection.Dispose%2A>メソッドと<xref:System.Object.Finalize%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="b13e4-120">This method is called by the public <xref:System.DirectoryServices.SearchResultCollection.Dispose%2A> method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="b13e4-121"><xref:System.DirectoryServices.SearchResultCollection.Dispose%2A> 保護された起動<xref:System.DirectoryServices.SearchResultCollection.Dispose%2A>メソッドを`disposing`パラメーターに設定`true`します。</span><span class="sxs-lookup"><span data-stu-id="b13e4-121"><xref:System.DirectoryServices.SearchResultCollection.Dispose%2A> invokes the protected <xref:System.DirectoryServices.SearchResultCollection.Dispose%2A> method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="b13e4-122"><xref:System.Object.Finalize%2A> 呼び出す<xref:System.DirectoryServices.SearchResultCollection.Dispose%2A>で、`disposing`パラメーターに設定`false`します。</span><span class="sxs-lookup"><span data-stu-id="b13e4-122"><xref:System.Object.Finalize%2A> invokes <xref:System.DirectoryServices.SearchResultCollection.Dispose%2A> with the `disposing` parameter set to `false`.</span></span>  
  
 <span data-ttu-id="b13e4-123">ときに、`disposing`パラメーターが`true`、このメソッドは、すべてのマネージ オブジェクトによって保持されているすべてのリソースを解放します。 この<xref:System.DirectoryServices.SearchResultCollection>参照。</span><span class="sxs-lookup"><span data-stu-id="b13e4-123">When the `disposing` parameter is `true`, this method releases all resources that are held by any managed objects that this <xref:System.DirectoryServices.SearchResultCollection> references.</span></span>  
  
 <span data-ttu-id="b13e4-124">ガベージ コレクターでのメモリが解放されない、<xref:System.DirectoryServices.SearchResultCollection>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b13e4-124">The garbage collector does not release memory for a <xref:System.DirectoryServices.SearchResultCollection> object.</span></span> <span data-ttu-id="b13e4-125">そのため、呼び出す必要がある、<xref:System.DirectoryServices.SearchResultCollection.Dispose%2A>メソッドをメモリ リークを防ぐために明示的にします。</span><span class="sxs-lookup"><span data-stu-id="b13e4-125">Therefore, you must call the <xref:System.DirectoryServices.SearchResultCollection.Dispose%2A> method explicitly to prevent a memory leak.</span></span>  
  
 <span data-ttu-id="b13e4-126">このメソッドは、<xref:System.DirectoryServices.SearchResultCollection.Dispose%2A>コレクション内の各オブジェクトのメソッド。</span><span class="sxs-lookup"><span data-stu-id="b13e4-126">This method invokes the <xref:System.DirectoryServices.SearchResultCollection.Dispose%2A> method of each object in the collection.</span></span>  
  
 <span data-ttu-id="b13e4-127">詳細については<xref:System.DirectoryServices.SearchResultCollection.Dispose>と<xref:System.Object.Finalize%2A>を参照してください[アンマネージ リソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)と[Finalize メソッドをオーバーライドする](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100))します。</span><span class="sxs-lookup"><span data-stu-id="b13e4-127">For more information about <xref:System.DirectoryServices.SearchResultCollection.Dispose> and <xref:System.Object.Finalize%2A>, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="b13e4-128">
              <see cref="M:System.DirectoryServices.SearchResultCollection.Dispose" />メソッドは、他のオブジェクトで複数回呼び出すことがあります。</span>
            <span class="sxs-lookup">
              <span data-stu-id="b13e4-128">The <see cref="M:System.DirectoryServices.SearchResultCollection.Dispose" /> method can be called multiple times by other objects.</span>
            </span>
            <span data-ttu-id="b13e4-129">オーバーライドする場合、<see cref="M:System.DirectoryServices.SearchResultCollection.Dispose(System.Boolean)" />メソッドにするのでは、事前に呼び出した以前破棄されたオブジェクトを参照しないように注意してください、<see cref="M:System.DirectoryServices.SearchResultCollection.Dispose" />メソッド。</span>
            <span class="sxs-lookup">
              <span data-stu-id="b13e4-129">When overriding the <see cref="M:System.DirectoryServices.SearchResultCollection.Dispose(System.Boolean)" /> method be careful not to reference objects that have been previously disposed of in an earlier call to the <see cref="M:System.DirectoryServices.SearchResultCollection.Dispose" /> method.</span>
            </span>
            <span data-ttu-id="b13e4-130">実装する方法についての詳細は<see cref="M:System.DirectoryServices.SearchResultCollection.Dispose" />を参照してください[Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="b13e4-130">For more information about how to implement <see cref="M:System.DirectoryServices.SearchResultCollection.Dispose" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~SearchResultCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.SearchResultCollection.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!SearchResultCollection ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="searchResultCollection.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b13e4-131">
            <see cref="M:System.Object.Finalize" /> メソッドをオーバーライドします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b13e4-131">Overrides the <see cref="M:System.Object.Finalize" /> method.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.SearchResultCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="searchResultCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b13e4-132">このコレクションを反復処理するために使用できる列挙子を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b13e4-132">Returns an enumerator that you can use to iterate through this collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b13e4-133">このコレクションを反復処理するために使用できる <see cref="T:System.Collections.IEnumerator" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b13e4-133">An <see cref="T:System.Collections.IEnumerator" /> object that you can use to iterate through this collection.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public IntPtr Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.SearchResultCollection.Handle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Handle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr Handle { IntPtr get(); };" />
      <MemberSignature Language="F#" Value="member this.Handle : nativeint" Usage="System.DirectoryServices.SearchResultCollection.Handle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b13e4-134">実際の検索を実行する <see href="https://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/idirectorysearch_executesearch.asp">IDirectorySearch::ExecuteSearch</see> メソッドによって返されるハンドルを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b13e4-134">Gets the handle that is returned by the <see href="https://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/idirectorysearch_executesearch.asp">IDirectorySearch::ExecuteSearch</see> method that performs the actual search.</span>
          </span>
          <span data-ttu-id="b13e4-135">詳細については、MSDN ライブラリ ([http://msdn.microsoft.com/library](https://msdn.microsoft.com/library)) の「<see href="https://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/idirectorysearch_executesearch.asp">IDirectorySearch::ExecuteSearch</see>」トピックを参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b13e4-135">For more information, see the <see href="https://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/idirectorysearch_executesearch.asp">IDirectorySearch::ExecuteSearch</see> topic in the MSDN Library at [http://msdn.microsoft.com/library](https://msdn.microsoft.com/library).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b13e4-136">このコレクションが使用する ADS_SEARCH_HANDLE 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b13e4-136">The ADS_SEARCH_HANDLE value that this collection uses.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b13e4-137"><xref:System.DirectoryServices.DirectorySearcher>このコレクションを作成する呼び出し、 [idirectorysearch::executesearch](https://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/idirectorysearch_executesearch.asp)メソッドで、クエリの結果をそのオブジェクトを使用できるようにします。</span><span class="sxs-lookup"><span data-stu-id="b13e4-137">The  <xref:System.DirectoryServices.DirectorySearcher> that created this collection calls the [IDirectorySearch::ExecuteSearch](https://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/idirectorysearch_executesearch.asp) method, which makes the query results available to the T:System.DirectoryServices.SearchResultCollection object.</span></span> <span data-ttu-id="b13e4-138">詳細については、MSDN ライブラリ ([http://msdn.microsoft.com/library](https://msdn.microsoft.com/library)) の「[IDirectorySearch::ExecuteSearch](https://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/idirectorysearch_executesearch.asp)」トピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="b13e4-138">For more information, see the [IDirectorySearch::ExecuteSearch](https://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/idirectorysearch_executesearch.asp) topic in the MSDN Library at [http://msdn.microsoft.com/library](https://msdn.microsoft.com/library).</span></span>  
  
 <span data-ttu-id="b13e4-139">クエリが実行されるたびにそのクエリの結果のハンドルが関連付けられているその<xref:System.DirectoryServices.SearchResultCollection>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b13e4-139">Each time that a query is performed, a handle for the results of that query is associated with its  <xref:System.DirectoryServices.SearchResultCollection> object.</span></span> <span data-ttu-id="b13e4-140">このハンドルは、ADSI の検索のハンドルに対応します。</span><span class="sxs-lookup"><span data-stu-id="b13e4-140">This handle corresponds to the search handle in ADSI.</span></span> <span data-ttu-id="b13e4-141">呼び出すまで、このハンドルが引き続き発生する、<xref:System.DirectoryServices.SearchResultCollection.Dispose>メソッドを<xref:System.DirectoryServices.SearchResultCollection>オブジェクトを呼び出す必要がありますので<xref:System.DirectoryServices.SearchResultCollection.Dispose>メモリ リークを防ぐためにします。</span><span class="sxs-lookup"><span data-stu-id="b13e4-141">This handle persists until you call the <xref:System.DirectoryServices.SearchResultCollection.Dispose> method on the <xref:System.DirectoryServices.SearchResultCollection> object, so you must call <xref:System.DirectoryServices.SearchResultCollection.Dispose> to prevent a memory leak.</span></span> <span data-ttu-id="b13e4-142">ガベージ コレクターは、この特定のオブジェクトのメモリを解放しません。</span><span class="sxs-lookup"><span data-stu-id="b13e4-142">The garbage collector does not free memory for this particular object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.DirectoryServices.SearchResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.DirectoryServices.SearchResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.SearchResultCollection.IndexOf(System.DirectoryServices.SearchResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (result As SearchResult) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::DirectoryServices::SearchResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.DirectoryServices.SearchResult -&gt; int" Usage="searchResultCollection.IndexOf result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.DirectoryServices.SearchResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="b13e4-143">このコレクション内で検索する <see cref="T:System.DirectoryServices.SearchResult" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b13e4-143">The <see cref="T:System.DirectoryServices.SearchResult" /> object to search for in this collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b13e4-144">指定した <see cref="T:System.DirectoryServices.SearchResult" /> オブジェクトがこのコレクション内で最初に見つかった位置のインデックスを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b13e4-144">Returns the index of the first occurrence of the specified <see cref="T:System.DirectoryServices.SearchResult" /> object in this collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b13e4-145">最初に一致するオブジェクトの 0 から始まるインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b13e4-145">The zero-based index of the first matching object.</span>
          </span>
          <span data-ttu-id="b13e4-146">このコレクションに <see cref="T:System.DirectoryServices.SearchResult" /> オブジェクトと同じメンバーが存在しない場合は、-1 を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b13e4-146">Returns -1 if no member of this collection is identical to the <see cref="T:System.DirectoryServices.SearchResult" /> object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.SearchResult this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.SearchResult Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.SearchResultCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As SearchResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::SearchResult ^ default[int] { System::DirectoryServices::SearchResult ^ get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.DirectoryServices.SearchResult" Usage="System.DirectoryServices.SearchResultCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.SearchResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="b13e4-147">取得する <see cref="T:System.DirectoryServices.SearchResult" /> オブジェクトの 0 から始まるインデックス番号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b13e4-147">The zero-based index of the <see cref="T:System.DirectoryServices.SearchResult" /> object to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b13e4-148">このコレクションの指定したインデックスにある <see cref="T:System.DirectoryServices.SearchResult" /> オブジェクトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b13e4-148">Gets the <see cref="T:System.DirectoryServices.SearchResult" /> object that is located at a specified index in this collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b13e4-149">指定したインデックスにある <see cref="T:System.DirectoryServices.SearchResult" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b13e4-149">The <see cref="T:System.DirectoryServices.SearchResult" /> object that is located at the specified index.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b13e4-150">C# では、このプロパティは <xref:System.DirectoryServices.SearchResultCollection> クラスのインデクサーです。</span><span class="sxs-lookup"><span data-stu-id="b13e4-150">In C#, this property is the indexer for the <xref:System.DirectoryServices.SearchResultCollection> class.</span></span>  
  
 <span data-ttu-id="b13e4-151">JScript では、型によって定義された既定のインデックス付きプロパティを使用することができますが明示的に独自を定義できません。</span><span class="sxs-lookup"><span data-stu-id="b13e4-151">In JScript, you can use the default indexed properties defined by a type, but you cannot explicitly define your own.</span></span> <span data-ttu-id="b13e4-152">ただし、型がオブジェクトのプロパティをクラスに expando 属性は、既定値を自動的に提供を指定するインデックス付きのインデックスの型を使用して<xref:System.String>します。</span><span class="sxs-lookup"><span data-stu-id="b13e4-152">However, specifying the expando attribute on a class automatically provides a default indexed property whose type is Object and with an index type of <xref:System.String>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertiesLoaded">
      <MemberSignature Language="C#" Value="public string[] PropertiesLoaded { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] PropertiesLoaded" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.SearchResultCollection.PropertiesLoaded" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PropertiesLoaded As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ PropertiesLoaded { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PropertiesLoaded : string[]" Usage="System.DirectoryServices.SearchResultCollection.PropertiesLoaded" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b13e4-153">検索を実行する前に指定された <see cref="T:System.DirectoryServices.DirectorySearcher" /> プロパティを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b13e4-153">Gets the <see cref="T:System.DirectoryServices.DirectorySearcher" /> properties that were specified before the search was executed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b13e4-154">検索を実行する前に <see cref="T:System.String" /> プロパティで指定されたプロパティを含む <see cref="P:System.DirectoryServices.DirectorySearcher.PropertiesToLoad" /> 型の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b13e4-154">An array of type <see cref="T:System.String" /> that contains the properties that were specified in the <see cref="P:System.DirectoryServices.DirectorySearcher.PropertiesToLoad" /> property collection before the search was executed.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="b13e4-155">
            <see cref="T:System.Array" /> から要素がコピーされる 1 次元の <see cref="T:System.Collections.ICollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b13e4-155">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection" />.</span>
          </span>
          <span data-ttu-id="b13e4-156">
            <see cref="T:System.Array" /> には、0 から始まるインデックス番号が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b13e4-156">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="b13e4-157">コピーの開始位置となる、<paramref name="array" /> 内の 0 から始まるインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b13e4-157">The zero-based index in <paramref name="array" /> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b13e4-158">
            <see cref="T:System.Collections.ICollection" /> の要素を <see cref="T:System.Array" /> にコピーします。<see cref="T:System.Array" /> の特定のインデックスからコピーが開始されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b13e4-158">Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b13e4-159">
            <paramref name="array" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b13e4-159">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="b13e4-160">
            <paramref name="index" /> が 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b13e4-160">
              <paramref name="index" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b13e4-161">
            <paramref name="array" /> が多次元です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b13e4-161">
              <paramref name="array" /> is multidimensional.</span>
          </span>
          <span data-ttu-id="b13e4-162">または</span>
          <span class="sxs-lookup">
            <span data-stu-id="b13e4-162">-or-</span>
          </span>
          <span data-ttu-id="b13e4-163">コピー元の <see cref="T:System.Collections.ICollection" /> の要素数が、コピー先 <paramref name="array" /> の <paramref name="index" /> から最後までの使用可能領域を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b13e4-163">The number of elements in the source <see cref="T:System.Collections.ICollection" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="b13e4-164">コピー元の <see cref="T:System.Collections.ICollection" /> の型が、コピー先の <paramref name="array" /> の型に自動的にキャストできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b13e4-164">The type of the source <see cref="T:System.Collections.ICollection" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b13e4-165">
            <see cref="T:System.Collections.ICollection" /> へのアクセスが同期されている (スレッド セーフである) かどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b13e4-165">Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b13e4-166">
            <see cref="T:System.Collections.ICollection" /> へのアクセスが同期されている (スレッド セーフである) 場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b13e4-166">
              <see langword="true" /> if access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b13e4-167"><xref:System.Collections.ICollection.SyncRoot%2A> は、<xref:System.Collections.ICollection> へのアクセスを同期するために使用できるオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="b13e4-167"><xref:System.Collections.ICollection.SyncRoot%2A> returns an object, which can be used to synchronize access to the <xref:System.Collections.ICollection>.</span></span>  
  
 <span data-ttu-id="b13e4-168">ほとんどのコレクション クラス、<xref:System.Collections?displayProperty=nameWithType>名前空間は、基になるコレクションの同期されたラッパーを提供する同期メソッドを実装することもできます。</span><span class="sxs-lookup"><span data-stu-id="b13e4-168">Most collection classes in the <xref:System.Collections?displayProperty=nameWithType> namespace also implement a Synchronized method, which provides a synchronized wrapper around the underlying collection.</span></span>  
  
 <span data-ttu-id="b13e4-169">コレクションの列挙は、スレッド セーフな方法では本質的にします。</span><span class="sxs-lookup"><span data-stu-id="b13e4-169">Enumerating through a collection is intrinsically not a thread safe procedure.</span></span> <span data-ttu-id="b13e4-170">コレクションの同期がとられている場合でも、別のスレッドによってそのコレクションを変更できるため、変更の結果として列挙子は例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="b13e4-170">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="b13e4-171">列挙処理を確実にスレッド セーフに行うには、列挙中にコレクションをロックするか、他のスレッドによって行われた変更によってスローされる例外をキャッチします。</span><span class="sxs-lookup"><span data-stu-id="b13e4-171">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="b13e4-172">[Visual Basic、 C#]</span><span class="sxs-lookup"><span data-stu-id="b13e4-172">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="b13e4-173">次のコード例を使用してコレクションをロックする方法を示しています、<xref:System.Collections.ICollection.SyncRoot%2A>列挙中に。</span><span class="sxs-lookup"><span data-stu-id="b13e4-173">The following code example shows how to lock the collection using the <xref:System.Collections.ICollection.SyncRoot%2A> during the entire enumeration:</span></span>  
  
```csharp  
ICollection myCollection = new ICollection();  
  lock(myCollection.SyncRoot) {  
  foreach (Object item in myCollection) {  
  // Insert your code here.  
  }  
 }  
```  
  
```vb  
Dim myCollection As New ICollection()  
 Dim item As Object  
 SyncLock myCollection.SyncRoot  
  For Each item In myCollection  
  ' Insert your code here.  
  Next item  
 End SyncLock  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b13e4-174">
            <see cref="T:System.Collections.ICollection" /> へのアクセスを同期するために使用できるオブジェクトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b13e4-174">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b13e4-175">
            <see cref="T:System.Collections.ICollection" /> へのアクセスを同期するために使用できるオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b13e4-175">An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b13e4-176">基になっているストアがパブリックではないコレクションの場合、現在のインスタンスを返す実装が要求されます。</span><span class="sxs-lookup"><span data-stu-id="b13e4-176">For collections whose underlying store is not publicly available, the expected implementation is to return the current instance.</span></span> <span data-ttu-id="b13e4-177">現在のインスタンスへのポインターは他のコレクションをラップするコレクションのための十分なできない可能性がありますに注意してください。基になるコレクションを返す必要があります、`SyncRoot`プロパティ。</span><span class="sxs-lookup"><span data-stu-id="b13e4-177">Note that the pointer to the current instance might not be sufficient for collections that wrap other collections; those should return the underlying collection's `SyncRoot` property.</span></span>  
  
 <span data-ttu-id="b13e4-178"><xref:System.Collections?displayProperty=nameWithType> 名前空間内のほとんどのコレクション クラスは、`Synchronized` メソッドも実装しています。このメソッドは、基になるコレクションをラップする同期されたラッパーを提供します。</span><span class="sxs-lookup"><span data-stu-id="b13e4-178">Most collection classes in the <xref:System.Collections?displayProperty=nameWithType> namespace also implement a `Synchronized` method, which provides a synchronized wrapper around the underlying collection.</span></span> <span data-ttu-id="b13e4-179">ただし、派生クラスは <xref:System.Collections.ICollection.SyncRoot%2A> プロパティを使って、コレクションの同期されたバージョンを独自に提供できます。</span><span class="sxs-lookup"><span data-stu-id="b13e4-179">However, derived classes can provide their own synchronized version of the collection using the <xref:System.Collections.ICollection.SyncRoot%2A> property.</span></span> <span data-ttu-id="b13e4-180">同期されたコードで操作を実行する必要があります、<xref:System.Collections.ICollection.SyncRoot%2A>コレクションの直接ではなく、コレクションの。</span><span class="sxs-lookup"><span data-stu-id="b13e4-180">The synchronizing code must perform operations on the <xref:System.Collections.ICollection.SyncRoot%2A> of the collection, not directly on the collection.</span></span> <span data-ttu-id="b13e4-181">これにより、他のオブジェクトから派生したコレクションを適切に操作できるようになります。</span><span class="sxs-lookup"><span data-stu-id="b13e4-181">This ensures proper operation of collections that are derived from other objects.</span></span> <span data-ttu-id="b13e4-182">特に、コレクション インスタンスを同時に変更する可能性がある別スレッドとの間で、正常な同期を維持します。</span><span class="sxs-lookup"><span data-stu-id="b13e4-182">Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the collection instance.</span></span>  
  
 <span data-ttu-id="b13e4-183">ない場合、`Synchronized`メソッドの予想される使用率、コレクションを<xref:System.Collections.ICollection.SyncRoot%2A>ようになります。</span><span class="sxs-lookup"><span data-stu-id="b13e4-183">In the absence of a `Synchronized` method on a collection, the expected usage for <xref:System.Collections.ICollection.SyncRoot%2A> looks like this:</span></span>  
  
```csharp  
ICollection MyCollection =...  
 lock(MyCollection.SyncRoot) {  
  // Some operation on the collection, which is now thread safe.  
 }  
```  
  
```vb  
Dim myCollection as New ICollection()  
 SyncLock myCollection.SyncRoot  
  ' Some operation on the collection, which is now thread safe.  
 End SyncLock  
```  
  
 <span data-ttu-id="b13e4-184">コレクションの列挙は、スレッド セーフな方法では本質的にします。</span><span class="sxs-lookup"><span data-stu-id="b13e4-184">Enumerating through a collection is intrinsically not a thread safe procedure.</span></span> <span data-ttu-id="b13e4-185">コレクションの同期がとられている場合でも、別のスレッドによってそのコレクションを変更できるため、変更の結果として列挙子は例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="b13e4-185">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="b13e4-186">列挙処理を確実にスレッド セーフに行うには、列挙中にコレクションをロックするか、他のスレッドによって行われた変更によってスローされる例外をキャッチします。</span><span class="sxs-lookup"><span data-stu-id="b13e4-186">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="b13e4-187">[Visual Basic、 C#]</span><span class="sxs-lookup"><span data-stu-id="b13e4-187">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="b13e4-188">次のコード例を使用してコレクションをロックする方法を示しています、<xref:System.Collections.ICollection.SyncRoot%2A>列挙中に。</span><span class="sxs-lookup"><span data-stu-id="b13e4-188">The following code example shows how to lock the collection using the <xref:System.Collections.ICollection.SyncRoot%2A> during the entire enumeration:</span></span>  
  
```csharp  
ICollection myCollection = new ICollection();  
 lock(myCollection.SyncRoot) {  
  foreach (Object item in myCollection) {  
  // Insert your code here.  
  }  
 }  
```  
  
```vb  
Dim myCollection As New ICollection()  
 Dim item As Object  
 SyncLock myCollection.SyncRoot  
  For Each item In myCollection  
  ' Insert your code here.  
  Next item  
 End SyncLock  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
      </Docs>
    </Member>
  </Members>
</Type>