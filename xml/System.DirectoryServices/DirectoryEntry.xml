<Type Name="DirectoryEntry" FullName="System.DirectoryServices.DirectoryEntry">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b4850893520fa8fdb8b60dc51c07a3d65be53973" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37659524" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DirectoryEntry : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DirectoryEntry extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.DirectoryServices.DirectoryEntry" />
  <TypeSignature Language="VB.NET" Value="Public Class DirectoryEntry&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class DirectoryEntry : System::ComponentModel::Component" />
  <TypeSignature Language="F#" Value="type DirectoryEntry = class&#xA;    inherit Component" />
  <AssemblyInfo>
    <AssemblyName>System.DirectoryServices</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.DirectoryServices.Design.DirectoryEntryConverter))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.DirectoryServices.DSDescription("DirectoryEntryDesc")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <see cref="T:System.DirectoryServices.DirectoryEntry" /> クラスは、Active Directory Domain Services 階層のノードまたはオブジェクトをカプセル化します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このクラスを使用して、オブジェクトにバインドするか、読み取りと属性を更新します。 <xref:System.DirectoryServices.DirectoryEntry>、、ヘルパー クラスとサポート ライフ サイクルの管理とナビゲーション メソッドを提供します。 作成、削除、名前変更、子ノードを移動および列挙子が含まれます。 ノードを変更した後は、ツリーに保存するには、変更をコミットする必要があります。 詳細については、<xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A> プロパティを参照してください。  
  
 <xref:System.DirectoryServices.DirectoryEntry> スキーマ エントリから正規のエントリとが、一部の情報にアクセスするために使用します。  
  
 Active Directory Domain Services 階層には、最大数千のいくつかのノードが含まれています。 各ノードでは、ネットワーク プリンターまたはドメイン内のユーザーなどのオブジェクトを表します。 企業ネットワークでは、新しい従業員が採用され、ネットワーク プリンターやコンピューターなどのオブジェクトが追加される継続的に変更します。 Active Directory サービス インターフェイス (ADSI) テクノロジには、ディレクトリ ツリーをプログラムによってこれらのオブジェクトを追加する方法が提供されます。  
  
 階層内のディレクトリ エントリを作成するには、使用、<xref:System.DirectoryServices.DirectoryEntry.Children%2A>プロパティ。 <xref:System.DirectoryServices.DirectoryEntry.Children%2A>プロパティが提供するコレクション、<xref:System.DirectoryServices.DirectoryEntries.Add%2A>メソッドを使用するコレクションにバインドされている親ノードのすぐ下にノードを追加します。 コレクションにノードを追加するときに、新しいノードの名前と、ノードに関連付けるたいスキーマ テンプレートの名前を指定する必要があります。 たとえば、"Computer"という名前のスキーマを使用して、階層に新しいコンピューターを追加します。  
  
 このクラスも含まれています属性は、キャッシュのネットワーク トラフィックを最適化できます。 属性のキャッシュを使用するには、次を参照してください。、<xref:System.DirectoryServices.DirectoryEntry.UsePropertyCache%2A>プロパティ。  
  
 関連付けられているクラス、<xref:System.DirectoryServices.DirectoryEntry>コンポーネントは、Active Directory Domain Services のサービス プロバイダーのいずれかで使用できます。 現在のプロバイダーには、インターネット インフォメーション サービス (IIS)、ライトウェイト ディレクトリ アクセス プロトコル (LDAP)、Novell NetWare Directory Service (NDS) および WinNT などがあります。  
  
> [!NOTE]
>  このクラスを使用する前に Active Directory Domain Services の一般知識があると見なされます。 詳細については、次を参照してください。、<xref:System.DirectoryServices?displayProperty=nameWithType>名前空間の概要。  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">
      <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />
    </permission>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.DirectoryServices.DirectoryEntry" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectoryEntry ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectoryEntry.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectoryEntry();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.DirectoryServices.DirectoryEntry" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">
          <see cref="F:System.Security.Permissions.SecurityAction.Demand" />
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectoryEntry (object adsObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object adsObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectoryEntry.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (adsObject As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectoryEntry(System::Object ^ adsObject);" />
      <MemberSignature Language="F#" Value="new System.DirectoryServices.DirectoryEntry : obj -&gt; System.DirectoryServices.DirectoryEntry" Usage="new System.DirectoryServices.DirectoryEntry adsObject" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="adsObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="adsObject">バインド先のネイティブ Active Directory Domain Services オブジェクトの名前。</param>
        <summary>指定したネイティブ Active Directory Domain Services オブジェクトにバインドする <see cref="T:System.DirectoryServices.DirectoryEntry" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンス トラクターにより、プログラムのプロパティとメソッドを使用する、<xref:System.DirectoryServices.DirectoryEntry>ネイティブ API を使用して、Iad インターフェイスを実装するネイティブ Active Directory Domain Services オブジェクトのクラス。 Iad インターフェイスの詳細については、トピックを参照してください。 [Iad](http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/iads.asp)に MSDN ライブラリで[ http://msdn.microsoft.com/library](http://msdn.microsoft.com/library)します。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">
          <see cref="F:System.Security.Permissions.SecurityAction.Demand" />
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectoryEntry (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectoryEntry.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectoryEntry(System::String ^ path);" />
      <MemberSignature Language="F#" Value="new System.DirectoryServices.DirectoryEntry : string -&gt; System.DirectoryServices.DirectoryEntry" Usage="new System.DirectoryServices.DirectoryEntry path" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <see cref="M:System.DirectoryServices.DirectoryEntry.#ctor(System.String)" /> をディレクトリにバインドするパス。 <see cref="P:System.DirectoryServices.DirectoryEntry.Path" /> プロパティは、この値に初期化されます。</param>
        <summary>指定したパスにある Active Directory Domain Services のノードに対象のインスタンスをバインドする <see cref="T:System.DirectoryServices.DirectoryEntry" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例では、バインド、<xref:System.DirectoryServices.DirectoryEntry>オブジェクトが表示されます、指定されたパスにあるディレクトリ エントリを<xref:System.DirectoryServices.DirectoryEntry.Path%2A>でノードの指定された各子エントリ<xref:System.DirectoryServices.DirectoryEntry.Children%2A>プロパティ。  
  
```vb  
Public Class PrintChildren  
  
    'Entry point which delegates to C-style main Private Function.  
    Public Overloads Shared Sub Main()  
        Main(System.Environment.GetCommandLineArgs())  
    End Sub  
  
    Overloads Public Shared Sub Main(args() As String)  
        Dim objDE As DirectoryEntry  
        Dim strPath As String = "LDAP://DC=onecity,DC=corp,DC=fabrikam,DC=com"  
        If args.Length > 0 Then  
            strPath = args(1)  
        End If   
        ' Create a new DirectoryEntry with the given path.  
        objDE = New DirectoryEntry(strPath)  
  
        Dim objChildDE As DirectoryEntry  
        For Each objChildDE In  objDE.Children  
            Console.WriteLine(objChildDE.Path)  
        Next objChildDE  
    End Sub 'Main  
End Class 'PrintChildren  
  
```  
  
```csharp  
public class PrintChildren{  
   public static void Main(String[] args)  
   {  
      DirectoryEntry objDE;  
      String strPath="LDAP://DC=onecity,DC=corp,DC=fabrikam,DC=com";  
      if(args.Length>0)strPath=args[1];  
  
      // Create a new DirectoryEntry with the given path.  
      objDE=new DirectoryEntry(strPath);  
  
      foreach(DirectoryEntry objChildDE in objDE.Children)  
        Console.WriteLine(objChildDE.Path);  
   }  
 }  
  
```  
  
```cpp#  
int main()  
{  
    String^ args[] = Environment::GetCommandLineArgs();  
    DirectoryEntry^ objDE;  
    String^ strPath = "LDAP://DC=onecity,DC=corp,DC=fabrikam,DC=com";  
    if(args->Length>1)  
    {  
        strPath=args[1];  
    }  
  
    // Create a new DirectoryEntry with the given path.  
    objDE = gcnew DirectoryEntry(strPath);  
  
    System::Collections::IEnumerator^ enum0 = objDE->Children->GetEnumerator();  
    while (enum0->MoveNext())  
    {  
        DirectoryEntry^ objChildDE = safe_cast<DirectoryEntry^>(enum0->Current);  
        Console::WriteLine(objChildDE->Path);  
    }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">
          <see cref="F:System.Security.Permissions.SecurityAction.Demand" />
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectoryEntry (string path, string username, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, string username, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectoryEntry.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, username As String, password As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectoryEntry(System::String ^ path, System::String ^ username, System::String ^ password);" />
      <MemberSignature Language="F#" Value="new System.DirectoryServices.DirectoryEntry : string * string * string -&gt; System.DirectoryServices.DirectoryEntry" Usage="new System.DirectoryServices.DirectoryEntry (path, username, password)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <see cref="T:System.DirectoryServices.DirectoryEntry" /> のパス。 <see cref="P:System.DirectoryServices.DirectoryEntry.Path" /> プロパティは、この値に初期化されます。</param>
        <param name="username">クライアントの認証時に使用するユーザー名。 <see cref="P:System.DirectoryServices.DirectoryEntry.Username" /> プロパティは、この値に初期化されます。</param>
        <param name="password">クライアントの認証時に使用するパスワード。 <see cref="P:System.DirectoryServices.DirectoryEntry.Password" /> プロパティは、この値に初期化されます。</param>
        <summary>
          <see cref="T:System.DirectoryServices.DirectoryEntry" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">
          <see cref="F:System.Security.Permissions.SecurityAction.Demand" />
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectoryEntry (string path, string username, string password, System.DirectoryServices.AuthenticationTypes authenticationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, string username, string password, valuetype System.DirectoryServices.AuthenticationTypes authenticationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectoryEntry.#ctor(System.String,System.String,System.String,System.DirectoryServices.AuthenticationTypes)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, username As String, password As String, authenticationType As AuthenticationTypes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectoryEntry(System::String ^ path, System::String ^ username, System::String ^ password, System::DirectoryServices::AuthenticationTypes authenticationType);" />
      <MemberSignature Language="F#" Value="new System.DirectoryServices.DirectoryEntry : string * string * string * System.DirectoryServices.AuthenticationTypes -&gt; System.DirectoryServices.DirectoryEntry" Usage="new System.DirectoryServices.DirectoryEntry (path, username, password, authenticationType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="authenticationType" Type="System.DirectoryServices.AuthenticationTypes" />
      </Parameters>
      <Docs>
        <param name="path">
          <see cref="T:System.DirectoryServices.DirectoryEntry" /> のパス。 <see cref="P:System.DirectoryServices.DirectoryEntry.Path" /> プロパティは、この値に初期化されます。</param>
        <param name="username">クライアントの認証時に使用するユーザー名。 <see cref="P:System.DirectoryServices.DirectoryEntry.Username" /> プロパティは、この値に初期化されます。</param>
        <param name="password">クライアントの認証時に使用するパスワード。 <see cref="P:System.DirectoryServices.DirectoryEntry.Password" /> プロパティは、この値に初期化されます。</param>
        <param name="authenticationType">
          <see cref="T:System.DirectoryServices.AuthenticationTypes" /> 値のいずれか 1 つ。 <see cref="P:System.DirectoryServices.DirectoryEntry.AuthenticationType" /> プロパティは、この値に初期化されます。</param>
        <summary>
          <see cref="T:System.DirectoryServices.DirectoryEntry" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">
          <see cref="F:System.Security.Permissions.SecurityAction.Demand" />
        </permission>
        <altmember cref="P:System.DirectoryServices.DirectoryEntry.Path" />
        <altmember cref="P:System.DirectoryServices.DirectoryEntry.Username" />
        <altmember cref="P:System.DirectoryServices.DirectoryEntry.Password" />
        <altmember cref="T:System.DirectoryServices.AuthenticationTypes" />
        <altmember cref="P:System.DirectoryServices.DirectoryEntry.AuthenticationType" />
      </Docs>
    </Member>
    <Member MemberName="AuthenticationType">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.AuthenticationTypes AuthenticationType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DirectoryServices.AuthenticationTypes AuthenticationType" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectoryEntry.AuthenticationType" />
      <MemberSignature Language="VB.NET" Value="Public Property AuthenticationType As AuthenticationTypes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::AuthenticationTypes AuthenticationType { System::DirectoryServices::AuthenticationTypes get(); void set(System::DirectoryServices::AuthenticationTypes value); };" />
      <MemberSignature Language="F#" Value="member this.AuthenticationType : System.DirectoryServices.AuthenticationTypes with get, set" Usage="System.DirectoryServices.DirectoryEntry.AuthenticationType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSAuthenticationType")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.AuthenticationTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>使用する認証の種類を取得または設定します。</summary>
        <value>
          <see cref="T:System.DirectoryServices.AuthenticationTypes" /> 値のいずれか 1 つ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 前のバージョン[!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)]、既定値は<xref:System.DirectoryServices.AuthenticationTypes.None>します。 [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] 以降は、既定値は <xref:System.DirectoryServices.AuthenticationTypes.Secure> です。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.DirectoryServices.AuthenticationTypes" />
      </Docs>
    </Member>
    <Member MemberName="Children">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.DirectoryEntries Children { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.DirectoryEntries Children" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectoryEntry.Children" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Children As DirectoryEntries" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::DirectoryEntries ^ Children { System::DirectoryServices::DirectoryEntries ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Children : System.DirectoryServices.DirectoryEntries" Usage="System.DirectoryServices.DirectoryEntry.Children" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSChildren")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.DirectoryEntries</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Active Directory Domain Services 階層でこのノードの子エントリを取得します。</summary>
        <value>Active Directory ドメイン サービス階層でこのノードの子エントリを格納している <see cref="T:System.DirectoryServices.DirectoryEntries" /> オブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 子エントリは、このノードの直下の子のみです。  
  
 このプロパティを使用して、検索、取得、または、階層内のディレクトリ エントリを作成します。 このプロパティは、通常の反復処理の機能と共に提供するコレクション、<xref:System.DirectoryServices.DirectoryEntries.Add%2A>メソッドにより、コレクションにバインドされている親ノードのすぐ下にノードを追加します。 コレクションにノードを追加するときに、新しいノードの名前と、ノードに関連付けるたいスキーマ テンプレートの名前を指定する必要があります。 たとえば、"Computer"という名前のスキーマを使用して、階層に新しいコンピューターを追加します。  
  
> [!NOTE]
>  既定では変更ローカルにキャッシュします。 呼び出す必要がありますを変更またはノードを追加した後、<xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A>メソッドに、ツリーに保存するには、変更をコミットします。 呼び出す場合<xref:System.DirectoryServices.DirectoryEntry.RefreshCache>呼び出す前に<xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A>、プロパティ キャッシュにコミットされていない変更は失われます。 詳細については、次を参照してください。、<xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A>と<xref:System.DirectoryServices.DirectoryEntry.RefreshCache>メソッド、および<xref:System.DirectoryServices.DirectoryEntry.UsePropertyCache%2A>プロパティ。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">子エントリを取得します。</permission>
        <altmember cref="T:System.DirectoryServices.DirectoryEntries" />
        <altmember cref="M:System.DirectoryServices.DirectoryEntries.Add(System.String,System.String)" />
        <altmember cref="M:System.DirectoryServices.DirectoryEntry.CommitChanges" />
        <altmember cref="M:System.DirectoryServices.DirectoryEntry.RefreshCache" />
        <altmember cref="P:System.DirectoryServices.DirectoryEntry.UsePropertyCache" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectoryEntry.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="directoryEntry.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.DirectoryServices.DirectoryEntry" /> オブジェクトを閉じ、このコンポーネントと関連付けられているシステム リソースを解放します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ガベージ コレクションを待つことがなく、非管理対象のシステム リソースを解放するには、このメソッドを呼び出します。  
  
 呼び出しに続く<xref:System.DirectoryServices.DirectoryEntry.Close%2A>でその操作、<xref:System.DirectoryServices.DirectoryEntry>例外が発生する可能性があります。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommitChanges">
      <MemberSignature Language="C#" Value="public void CommitChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CommitChanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectoryEntry.CommitChanges" />
      <MemberSignature Language="VB.NET" Value="Public Sub CommitChanges ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CommitChanges();" />
      <MemberSignature Language="F#" Value="member this.CommitChanges : unit -&gt; unit" Usage="directoryEntry.CommitChanges " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ディレクトリ エントリに加えられた変更を基になるディレクトリ ストアに保存します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定では、プロパティの変更は、キャッシュにローカルで行われ、プロパティの値を読み取るが最初に読み取られた後にキャッシュされます。 詳細については、「<xref:System.DirectoryServices.DirectoryEntry.UsePropertyCache%2A>」を参照してください。  
  
 プロパティの変更とへの呼び出しにキャッシュに加えられた変更が含ま<xref:System.DirectoryServices.DirectoryEntries.Add%2A>(これが、新しく作成されたエントリの場合)。  
  
> [!CAUTION]
>  呼び出す場合<xref:System.DirectoryServices.DirectoryEntry.RefreshCache%2A>呼び出す前に<xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A>、プロパティ キャッシュにコミットされていない変更は失われます。  
  
## <a name="security"></a>セキュリティ  
  
-   使用して、<xref:System.DirectoryServices.DirectoryServicesPermission>クラスの読み取り、書き込み、削除、変更すると、および Active Directory Domain Services 階層に追加します。 <xref:System.DirectoryServices.DirectoryServicesPermissionAccess> (関連する列挙体)  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">変更をコミットします。</permission>
        <altmember cref="M:System.DirectoryServices.DirectoryEntries.Add(System.String,System.String)" />
        <altmember cref="M:System.DirectoryServices.DirectoryEntries.Remove(System.DirectoryServices.DirectoryEntry)" />
        <altmember cref="M:System.DirectoryServices.DirectoryEntry.RefreshCache" />
        <altmember cref="P:System.DirectoryServices.DirectoryEntry.UsePropertyCache" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyTo">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>このエントリのコピーを作成します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.DirectoryEntry CopyTo (System.DirectoryServices.DirectoryEntry newParent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.DirectoryEntry CopyTo(class System.DirectoryServices.DirectoryEntry newParent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectoryEntry.CopyTo(System.DirectoryServices.DirectoryEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyTo (newParent As DirectoryEntry) As DirectoryEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::DirectoryEntry ^ CopyTo(System::DirectoryServices::DirectoryEntry ^ newParent);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : System.DirectoryServices.DirectoryEntry -&gt; System.DirectoryServices.DirectoryEntry" Usage="directoryEntry.CopyTo newParent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.DirectoryEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newParent" Type="System.DirectoryServices.DirectoryEntry" />
      </Parameters>
      <Docs>
        <param name="newParent">作成されるコピーの親になる <see cref="T:System.DirectoryServices.DirectoryEntry" /> オブジェクトの識別名。</param>
        <summary>指定した親の子として、このエントリのコピーを作成します。</summary>
        <returns>新しい親の子としてのこのエントリのコピーを表す <see cref="T:System.DirectoryServices.DirectoryEntry" /> オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合<xref:System.DirectoryServices.DirectoryEntry.UsePropertyCache%2A>は`true`、呼び出す<xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A>で永続的なコピーを作成する新しいオブジェクト。  
  
 ライトウェイト ディレクトリ アクセス プロトコル (LDAP) プロバイダーはサポートされていない、<xref:System.DirectoryServices.DirectoryEntry.CopyTo%28System.DirectoryServices.DirectoryEntry%29>メソッド。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">指定した <see cref="T:System.DirectoryServices.DirectoryEntry" /> がコンテナーではありません。</exception>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">指定したコピーを作成する<see cref="T:System.DirectoryServices.DirectoryEntry" />オブジェクト。</permission>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.DirectoryEntry CopyTo (System.DirectoryServices.DirectoryEntry newParent, string newName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.DirectoryEntry CopyTo(class System.DirectoryServices.DirectoryEntry newParent, string newName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectoryEntry.CopyTo(System.DirectoryServices.DirectoryEntry,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyTo (newParent As DirectoryEntry, newName As String) As DirectoryEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::DirectoryEntry ^ CopyTo(System::DirectoryServices::DirectoryEntry ^ newParent, System::String ^ newName);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : System.DirectoryServices.DirectoryEntry * string -&gt; System.DirectoryServices.DirectoryEntry" Usage="directoryEntry.CopyTo (newParent, newName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.DirectoryEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newParent" Type="System.DirectoryServices.DirectoryEntry" />
        <Parameter Name="newName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="newParent">作成されるコピーの親になる <see cref="T:System.DirectoryServices.DirectoryEntry" /> オブジェクトの DN。</param>
        <param name="newName">このエントリのコピーの名前。</param>
        <summary>指定した新しい名前で、指定した親 <see cref="T:System.DirectoryServices.DirectoryEntry" /> オブジェクトの子として、この <see cref="T:System.DirectoryServices.DirectoryEntry" /> オブジェクトのコピーを作成します。</summary>
        <returns>指定した親の子として名前を変更したこのエントリのコピー。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ライトウェイト ディレクトリ アクセス プロトコル (LDAP) プロバイダーは、このメソッドを現在サポートしていません。  
  
 場合<xref:System.DirectoryServices.DirectoryEntry.UsePropertyCache%2A>は`true`、呼び出す<xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A>で永続的なコピーを作成する新しいオブジェクト。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">指定した <see cref="T:System.DirectoryServices.DirectoryEntry" /> オブジェクトがコンテナーではありません。</exception>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">エントリのコピーを作成します。</permission>
        <altmember cref="P:System.DirectoryServices.DirectoryEntry.UsePropertyCache" />
        <altmember cref="M:System.DirectoryServices.DirectoryEntry.CommitChanges" />
      </Docs>
    </Member>
    <Member MemberName="DeleteTree">
      <MemberSignature Language="C#" Value="public void DeleteTree ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteTree() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectoryEntry.DeleteTree" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteTree ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteTree();" />
      <MemberSignature Language="F#" Value="member this.DeleteTree : unit -&gt; unit" Usage="directoryEntry.DeleteTree " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Active Directory Domain Services 階層からこのエントリとそのサブツリー全体を削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Active Directory サービス インターフェイス (ADSI) システムが指定したプロバイダーののみ、ライトウェイト ディレクトリ アクセス プロトコル (LDAP) は現在この操作をサポートします。  
  
> [!CAUTION]
>  エントリとそのサブツリー全体は、Active Directory Domain Services 階層から削除されます。  
  
## <a name="security"></a>セキュリティ  
  
-   使用<xref:System.DirectoryServices.DirectoryServicesPermission>Active Directory Domain Services 階層からのエントリを削除するためです。 <xref:System.DirectoryServices.DirectoryServicesPermissionAccess?displayProperty=nameWithType> (関連する列挙体)  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">指定した <see cref="T:System.DirectoryServices.DirectoryEntry" /> がコンテナーではありません。</exception>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">エントリとその子を削除します。</permission>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectoryEntry.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="directoryEntry.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
        <summary>
          <see cref="T:System.DirectoryServices.DirectoryEntry" /> で使用されているリソース (メモリを除く) を解放します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、パブリック<xref:System.ComponentModel.Component.Dispose%2A>メソッドと<xref:System.Object.Finalize%2A>メソッド。 <xref:System.ComponentModel.Component.Dispose%2A> 保護された起動<xref:System.DirectoryServices.DirectoryEntry.Dispose%2A>メソッドを`disposing`パラメーターに設定`true`します。 <xref:System.Object.Finalize%2A> 呼び出す<xref:System.ComponentModel.Component.Dispose%2A>で`disposing`に設定`false`します。  
  
 ときに、`disposing`パラメーターが`true`、このメソッドは、すべてのマネージ オブジェクトによって保持されているすべてのリソースを解放します。 この<xref:System.DirectoryServices.DirectoryEntry>オブジェクト参照。 このメソッドは、参照される各オブジェクトの <xref:System.ComponentModel.Component.Dispose%2A> メソッドを呼び出します。  
  
 詳細については、<xref:System.ComponentModel.Component.Dispose%2A>と<xref:System.Object.Finalize%2A>メソッドを参照してください[Finalize メソッドをオーバーライドする](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)します。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <see cref="M:System.ComponentModel.Component.Dispose" /> 他のオブジェクトで何度も呼び出せます。<see cref="M:System.DirectoryServices.DirectoryEntry.Dispose(System.Boolean)" /> をオーバーライドする場合は、以前に <see cref="M:System.ComponentModel.Component.Dispose" /> を呼び出したときに破棄されたオブジェクトを参照しないように注意する必要があります。実装する方法についての詳細は<see cref="M:System.ComponentModel.Component.Dispose" />、[Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md) を実装を参照してください。 します。</para>
        </block>
        <altmember cref="M:System.ComponentModel.Component.Dispose" />
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public static bool Exists (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Exists(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectoryEntry.Exists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Exists (path As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Exists(System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member Exists : string -&gt; bool" Usage="System.DirectoryServices.DirectoryEntry.Exists path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">確認するエントリのパス。</param>
        <summary>指定したパスがディレクトリ サービスの実際のエントリを表しているかどうかを判断します。</summary>
        <returns>指定したパスがディレクトリ サービスの有効なエントリを表している場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例では、1 つの引数を受け取るし、有効なに対応するパスかどうかを判断します<xref:System.DirectoryServices.DirectoryEntry>します。  
  
```vb  
Dim myADSPath As String = "LDAP://onecity/CN=Users,DC=onecity,DC=corp,DC=fabrikam,DC=com"  
' Determine whether the given path is correct for the DirectoryEntry.  
If DirectoryEntry.Exists(myADSPath) Then  
   Console.WriteLine("The path {0} is valid",myADSPath)  
Else  
   Console.WriteLine("The path {0} is invalid",myADSPath)  
End If  
  
```  
  
```csharp  
string myADSPath ="LDAP://onecity/CN=Users,DC=onecity,DC=corp,DC=fabrikam,DC=com";  
  
// Determine whether the given path is correct for the DirectoryEntry.  
if (DirectoryEntry.Exists(myADSPath))  
{  
    Console.WriteLine("The path {0} is valid",myADSPath);  
}  
    else  
{  
    Console.WriteLine("The path {0} is invalid",myADSPath);  
}  
  
```  
  
```cpp#  
String^ myADSPath = "LDAP://onecity/CN=Users,DC=onecity,DC=corp,DC=fabrikam,DC=com";  
// Determine whether the given path is correct for the DirectoryEntry.  
if (DirectoryEntry::Exists(myADSPath))   
{  
    Console::WriteLine("The path {0} is valid", myADSPath);  
}   
else   
{  
    Console::WriteLine("The path {0} is invalid", myADSPath);  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Guid">
      <MemberSignature Language="C#" Value="public Guid Guid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid Guid" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectoryEntry.Guid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Guid As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid Guid { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.Guid : Guid" Usage="System.DirectoryServices.DirectoryEntry.Guid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSGuid")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.DirectoryServices.DirectoryEntry" /> の GUID を取得します。</summary>
        <value>
          <see cref="T:System.DirectoryServices.DirectoryEntry" /> の GUID を表す <see cref="T:System.Guid" /> 構造体。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Active Directory Domain Services 内のオブジェクトにバインドする場合は、使用、<xref:System.DirectoryServices.DirectoryEntry.NativeGuid%2A>プロパティ。  
  
   
  
## Examples  
 次の例で、<xref:System.DirectoryServices.DirectoryEntry.Guid%2A>と<xref:System.DirectoryServices.DirectoryEntry.NativeGuid%2A>のプロパティ、<xref:System.DirectoryServices.DirectoryEntry>クラス。 この例では、ユーザーが指定したかを取得します。<xref:System.DirectoryServices.DirectoryEntry>し、表示、<xref:System.DirectoryServices.DirectoryEntry.Guid%2A>と<xref:System.DirectoryServices.DirectoryEntry.NativeGuid%2A>プロパティ。  
  
```vb  
Dim myADSPath As [String] = "LDAP://onecity/CN=Users,DC=onecity,DC=corp,DC=fabrikam,DC=com"  
Dim myDirectoryEntry As New DirectoryEntry(myADSPath)  
  
' Display the Guid and NativeGuid.  
Console.WriteLine("The GUID of the ADS object:" + myDirectoryEntry.Guid.ToString)  
Console.WriteLine("The Native GUID of the ADS" + "object:" + myDirectoryEntry.NativeGuid)  
  
```  
  
```csharp  
String myADSPath = "LDAP://onecity/CN=Users,DC=onecity,DC=corp,DC=fabrikam,DC=com";  
DirectoryEntry myDirectoryEntry=new DirectoryEntry(myADSPath);  
  
// Display the Guid and NativeGuid.  
Console.WriteLine("The GUID of the ADS object:"+  
                  myDirectoryEntry.Guid);  
Console.WriteLine("The Native GUID of the ADS"+  
                  "object:"+myDirectoryEntry.NativeGuid);  
  
```  
  
```cpp#  
String^ myADSPath = "LDAP://onecity/CN=Users,DC=onecity,DC=corp,DC=fabrikam,DC=com";  
DirectoryEntry^ myDirectoryEntry = gcnew DirectoryEntry(myADSPath);  
  
// Display the Guid and NativeGuid.  
Console::WriteLine("The GUID of the ADS object: {0}", myDirectoryEntry->Guid);  
Console::WriteLine("The Native GUID of the ADS object: {0}",  
                   myDirectoryEntry->NativeGuid);  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Guid" />
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (string methodName, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Invoke(string methodName, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectoryEntry.Invoke(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (methodName As String, ParamArray args As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(System::String ^ methodName, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="member this.Invoke : string * obj[] -&gt; obj" Usage="directoryEntry.Invoke (methodName, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="methodName">呼び出すメソッドの名前。</param>
        <param name="args">呼び出すメソッドの引数を格納している型 <see cref="T:System.Object" /> のオブジェクトの配列。</param>
        <summary>ネイティブ Active Directory Domain Services オブジェクトでメソッドを呼び出します。</summary>
        <returns>呼び出されたメソッドの戻り値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ネイティブ メソッドの戻り値は、対応する、Iad インターフェイスを実装している場合<xref:System.DirectoryServices.DirectoryEntry>が返されます。 Iad インターフェイスの詳細については、トピックを参照してください。 [Iad](http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/iads.asp)に MSDN ライブラリで[ http://msdn.microsoft.com/library](http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/iads.asp)します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DirectoryServices.DirectoryServicesCOMException">ネイティブ メソッドが <see cref="T:System.Runtime.InteropServices.COMException" /> 例外をスローしました。</exception>
        <exception cref="T:System.Reflection.TargetInvocationException">ネイティブ メソッドが <see cref="T:System.Reflection.TargetInvocationException" /> 例外をスローしました。 <see cref="P:System.Exception.InnerException" /> プロパティには、発生した実際のエラーに関する情報が格納された <see cref="T:System.Runtime.InteropServices.COMException" /> 例外が含まれます。</exception>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">メソッドを呼び出します。</permission>
      </Docs>
    </Member>
    <Member MemberName="InvokeGet">
      <MemberSignature Language="C#" Value="public object InvokeGet (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object InvokeGet(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectoryEntry.InvokeGet(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function InvokeGet (propertyName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ InvokeGet(System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="member this.InvokeGet : string -&gt; obj" Usage="directoryEntry.InvokeGet propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">取得するプロパティの名前。</param>
        <summary>ネイティブ Active Directory Domain Services オブジェクトからプロパティを取得します。</summary>
        <returns>要求されたプロパティを表すオブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドを使用しない必要があります。 <xref:System.DirectoryServices.DirectoryEntry.Properties%2A>のプロパティにアクセスするプロパティを使用する必要があります、<xref:System.DirectoryServices.DirectoryEntry>オブジェクト。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">ネイティブ オブジェクトからプロパティを取得します。</permission>
        <altmember cref="P:System.DirectoryServices.DirectoryEntry.Properties" />
      </Docs>
    </Member>
    <Member MemberName="InvokeSet">
      <MemberSignature Language="C#" Value="public void InvokeSet (string propertyName, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InvokeSet(string propertyName, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectoryEntry.InvokeSet(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub InvokeSet (propertyName As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InvokeSet(System::String ^ propertyName, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="member this.InvokeSet : string * obj[] -&gt; unit" Usage="directoryEntry.InvokeSet (propertyName, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="propertyName">設定するプロパティの名前。</param>
        <param name="args">設定する Active Directory Domain Services オブジェクト。</param>
        <summary>ネイティブ Active Directory Domain Services オブジェクトでプロパティを設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドを使用しない必要があります。 <xref:System.DirectoryServices.DirectoryEntry.Properties%2A>のプロパティにアクセスするプロパティを使用する必要があります、<xref:System.DirectoryServices.DirectoryEntry>オブジェクト。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">ネイティブ オブジェクトのプロパティを設定します。</permission>
        <altmember cref="P:System.DirectoryServices.DirectoryEntry.Properties" />
      </Docs>
    </Member>
    <MemberGroup MemberName="MoveTo">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>この <see cref="T:System.DirectoryServices.DirectoryEntry" /> を移動します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MoveTo">
      <MemberSignature Language="C#" Value="public void MoveTo (System.DirectoryServices.DirectoryEntry newParent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MoveTo(class System.DirectoryServices.DirectoryEntry newParent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectoryEntry.MoveTo(System.DirectoryServices.DirectoryEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MoveTo (newParent As DirectoryEntry)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MoveTo(System::DirectoryServices::DirectoryEntry ^ newParent);" />
      <MemberSignature Language="F#" Value="member this.MoveTo : System.DirectoryServices.DirectoryEntry -&gt; unit" Usage="directoryEntry.MoveTo newParent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newParent" Type="System.DirectoryServices.DirectoryEntry" />
      </Parameters>
      <Docs>
        <param name="newParent">このエントリの移動先の親。</param>
        <summary>この <see cref="T:System.DirectoryServices.DirectoryEntry" /> オブジェクトを指定した親に移動します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合<xref:System.DirectoryServices.DirectoryEntry.UsePropertyCache%2A>は`true`を呼び出し、<xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A>の移行を永続的な新しいオブジェクトのメソッド。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">指定した <see cref="T:System.DirectoryServices.DirectoryEntry" /> がコンテナーではありません。</exception>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">エントリに移動します。</permission>
        <altmember cref="P:System.DirectoryServices.DirectoryEntry.UsePropertyCache" />
        <altmember cref="M:System.DirectoryServices.DirectoryEntry.CommitChanges" />
      </Docs>
    </Member>
    <Member MemberName="MoveTo">
      <MemberSignature Language="C#" Value="public void MoveTo (System.DirectoryServices.DirectoryEntry newParent, string newName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MoveTo(class System.DirectoryServices.DirectoryEntry newParent, string newName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectoryEntry.MoveTo(System.DirectoryServices.DirectoryEntry,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MoveTo (newParent As DirectoryEntry, newName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MoveTo(System::DirectoryServices::DirectoryEntry ^ newParent, System::String ^ newName);" />
      <MemberSignature Language="F#" Value="member this.MoveTo : System.DirectoryServices.DirectoryEntry * string -&gt; unit" Usage="directoryEntry.MoveTo (newParent, newName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newParent" Type="System.DirectoryServices.DirectoryEntry" />
        <Parameter Name="newName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="newParent">このエントリの移動先の親。</param>
        <param name="newName">このエントリの新しい名前。</param>
        <summary>この <see cref="T:System.DirectoryServices.DirectoryEntry" /> オブジェクトを指定した親に移動し、その名前を指定した値に変更します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合<xref:System.DirectoryServices.DirectoryEntry.UsePropertyCache%2A>は`true`、呼び出す<xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A>の移行を永続的な新しいオブジェクトにします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">指定した <see cref="T:System.DirectoryServices.DirectoryEntry" /> がコンテナーではありません。</exception>
        <altmember cref="P:System.DirectoryServices.DirectoryEntry.UsePropertyCache" />
        <altmember cref="M:System.DirectoryServices.DirectoryEntry.CommitChanges" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectoryEntry.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.DirectoryServices.DirectoryEntry.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSName")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>基になるディレクトリ サービスで命名されているオブジェクトの名前を取得します。</summary>
        <value>基になるディレクトリ サービスで命名されているオブジェクトの名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 これは、名前をと共にで<xref:System.DirectoryServices.DirectoryEntry.SchemaClassName%2A>、その兄弟からこのエントリを区別し、各コンテナーでは、その兄弟間で一意である必要があります。  
  
   
  
## Examples  
 次の例では、作成、<xref:System.DirectoryServices.DirectoryEntry>の Active Directory Domain Services 内のノード。 これは、後、表示、<xref:System.DirectoryServices.DirectoryEntry.Name%2A>と<xref:System.DirectoryServices.DirectoryEntry.Path%2A>その子ノードのプロパティ。  
  
```vb  
Dim myADSPath As String = "LDAP://onecity/CN=Users,DC=onecity,  
           _DC=corp,DC=fabrikam,DC=com"  
Dim myDirectoryEntry As New DirectoryEntry(myADSPath)  
  
Console.WriteLine("DirectoryEntry Name :" + myDirectoryEntry.Name)  
Console.WriteLine(ControlChars.NewLine _  
        + "The child entries for this node in the Active Directory Domain Services hierarchy")  
  
Dim myDirectoryEntryChild As DirectoryEntry  
For Each myDirectoryEntryChild In  myDirectoryEntry.Children  
   Console.WriteLine(myDirectoryEntryChild.Path)  
Next myDirectoryEntryChild  
```  
  
```csharp  
String myADSPath = "LDAP://onecity/CN=Users,  
             DC=onecity,DC=corp,DC=fabrikam,DC=com";  
DirectoryEntry myDirectoryEntry=new DirectoryEntry(myADSPath);  
  
Console.WriteLine("DirectoryEntry Name :"+ myDirectoryEntry.Name);  
Console.WriteLine("\nThe child entries for this node "+  
   "in the Active Directory Domain Services hierarchy");  
  
foreach(DirectoryEntry myDirectoryEntryChild in  
   myDirectoryEntry.Children)  
{  
   Console.WriteLine(myDirectoryEntryChild.Path);  
}  
  
```  
  
```cpp#  
String^ myADSPath = "LDAP://onecity/CN=Users,DC=onecity,DC=corp,DC=fabrikam,DC=com";  
DirectoryEntry^ myDirectoryEntry = gcnew DirectoryEntry(myADSPath);  
  
Console::WriteLine("DirectoryEntry Name : {0}", myDirectoryEntry->Name);  
Console::WriteLine("\nThe child entries for this node in the Active Directory Domain Services hierarchy");  
  
Collections::IEnumerator^ myEnumerator = myDirectoryEntry->Children->GetEnumerator();  
while (myEnumerator->MoveNext())   
{  
    DirectoryEntry^ myDirectoryEntryChild = safe_cast<DirectoryEntry^>(myEnumerator->Current);  
    Console::WriteLine(myDirectoryEntryChild->Path);  
}  
```  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">名前を取得します。</permission>
      </Docs>
    </Member>
    <Member MemberName="NativeGuid">
      <MemberSignature Language="C#" Value="public string NativeGuid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NativeGuid" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectoryEntry.NativeGuid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NativeGuid As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NativeGuid { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NativeGuid : string" Usage="System.DirectoryServices.DirectoryEntry.NativeGuid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSNativeGuid")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>プロバイダーが返す <see cref="T:System.DirectoryServices.DirectoryEntry" /> の GUID を取得します。</summary>
        <value>プロバイダーが返す <see cref="T:System.DirectoryServices.DirectoryEntry" /> の GUID を表す <see cref="T:System.Guid" /> 構造体。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.DirectoryServices.DirectoryEntry.NativeGuid%2A>プロパティが Active Directory Domain Services でオブジェクトをバインドするときにします。  
  
> [!NOTE]
>  ライトウェイト ディレクトリ アクセス プロトコル (LDAP) プロバイダーのグローバルに一意の識別子を返します、<xref:System.DirectoryServices.DirectoryEntry>インターネット インフォメーション サービス (IIS)、Novell NetWare Directory Server (NDS) および WinNT プロバイダーとは異なる形式にします。  
  
   
  
## Examples  
 次の例で、<xref:System.DirectoryServices.DirectoryEntry.Guid%2A>と<xref:System.DirectoryServices.DirectoryEntry.NativeGuid%2A>のプロパティ、<xref:System.DirectoryServices.DirectoryEntry>クラス。 この例では、ユーザーが指定したかを取得します。<xref:System.DirectoryServices.DirectoryEntry>し、表示、<xref:System.DirectoryServices.DirectoryEntry.Guid%2A>と<xref:System.DirectoryServices.DirectoryEntry.NativeGuid%2A>プロパティ。  
  
```vb  
Dim myADSPath As [String] = "LDAP://onecity/CN=Users,  
             DC=onecity,DC=corp,DC=fabrikam,DC=com"  
Dim myDirectoryEntry As New DirectoryEntry(myADSPath)  
  
' Display the Guid and NativeGuid.  
Console.WriteLine("The GUID of the ADS object:" + myDirectoryEntry.Guid.ToString)  
Console.WriteLine("The Native GUID of the ADS" + "object:" +   
             myDirectoryEntry.NativeGuid)  
```  
  
```csharp  
String myADSPath = "LDAP://onecity/CN=Users,  
             DC=onecity,DC=corp,DC=fabrikam,DC=com";  
DirectoryEntry myDirectoryEntry=new DirectoryEntry(myADSPath);  
  
// Display the Guid and NativeGuid.  
Console.WriteLine("The GUID of the ADS object:"+  
                  myDirectoryEntry.Guid);  
Console.WriteLine("The Native GUID of the ADS"+  
                  "object:"+myDirectoryEntry.NativeGuid);  
  
```  
  
```cpp#  
String^ myADSPath = "LDAP://onecity/CN=Users,DC=onecity,DC=corp,DC=fabrikam,DC=com";  
DirectoryEntry^ myDirectoryEntry = gcnew DirectoryEntry(myADSPath);  
  
// Display the Guid and NativeGuid.  
Console::WriteLine("The GUID of the ADS object: {0}", myDirectoryEntry->Guid));  
Console::WriteLine("The Native GUID of the ADS object: {0}",  
                   myDirectoryEntry->NativeGuid);  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Guid" />
      </Docs>
    </Member>
    <Member MemberName="NativeObject">
      <MemberSignature Language="C#" Value="public object NativeObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object NativeObject" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectoryEntry.NativeObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NativeObject As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ NativeObject { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NativeObject : obj" Usage="System.DirectoryServices.DirectoryEntry.NativeObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSNativeObject")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ネイティブ Active Directory Service Interfaces (ADSI) オブジェクトを取得します。</summary>
        <value>ネイティブ ADSI オブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを使用して、COM インターフェイスを使用する場合、Iad インターフェイスを実装するネイティブの Active Directory Domain Services オブジェクトにキャストします。 Iad インターフェイスの詳細については、トピックを参照してください。 [Iad](http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/iads.asp)に MSDN ライブラリで[ http://msdn.microsoft.com/library](http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/iads.asp)します。  
  
 このオブジェクトはでは実現できない高度なシナリオは、<xref:System.DirectoryServices?displayProperty=nameWithType>クラスだけです。 これを使用するには、Iad ファミリから COM インターフェイスの 1 つをインポートし、そのインターフェイスには、このプロパティをキャストする必要があります。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ObjectSecurity">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectorySecurity ObjectSecurity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.ActiveDirectorySecurity ObjectSecurity" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectoryEntry.ObjectSecurity" />
      <MemberSignature Language="VB.NET" Value="Public Property ObjectSecurity As ActiveDirectorySecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::ActiveDirectorySecurity ^ ObjectSecurity { System::DirectoryServices::ActiveDirectorySecurity ^ get(); void set(System::DirectoryServices::ActiveDirectorySecurity ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ObjectSecurity : System.DirectoryServices.ActiveDirectorySecurity with get, set" Usage="System.DirectoryServices.DirectoryEntry.ObjectSecurity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSObjectSecurity")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectorySecurity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このエントリのセキュリティ記述子を取得または設定します。</summary>
        <value>このディレクトリ エントリのセキュリティ記述子を表す <see cref="T:System.DirectoryServices.ActiveDirectorySecurity" /> オブジェクト。</value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">
          <see cref="F:System.Security.Permissions.SecurityAction.Demand" /> アプリケーションの設定時に実行、<see cref="P:System.DirectoryServices.DirectoryEntry.ObjectSecurity" />プロパティの場合、<see cref="P:System.DirectoryServices.DirectoryEntry.UsePropertyCache" />プロパティは<see langword="false" />。</permission>
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.DirectoryEntryConfiguration Options { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.DirectoryEntryConfiguration Options" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectoryEntry.Options" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Options As DirectoryEntryConfiguration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::DirectoryEntryConfiguration ^ Options { System::DirectoryServices::DirectoryEntryConfiguration ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Options : System.DirectoryServices.DirectoryEntryConfiguration" Usage="System.DirectoryServices.DirectoryEntry.Options" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSOptions")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.DirectoryEntryConfiguration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このエントリのプロバイダー固有のオプションを取得します。</summary>
        <value>このエントリのプロバイダー固有のオプションが格納された <see cref="T:System.DirectoryServices.DirectoryEntryConfiguration" /> オブジェクト。</value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">オプションを取得します。</permission>
        <altmember cref="T:System.DirectoryServices.DirectoryEntryConfiguration" />
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.DirectoryEntry Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.DirectoryEntry Parent" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectoryEntry.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As DirectoryEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::DirectoryEntry ^ Parent { System::DirectoryServices::DirectoryEntry ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.DirectoryServices.DirectoryEntry" Usage="System.DirectoryServices.DirectoryEntry.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSParent")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.DirectoryEntry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Active Directory Domain Services 階層でのこのエントリの親を取得します。</summary>
        <value>このエントリの親を表す <see cref="T:System.DirectoryServices.DirectoryEntry" /> オブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例で、指定された<xref:System.DirectoryServices.DirectoryEntry>し、表示、<xref:System.DirectoryServices.DirectoryEntry.Name%2A>と<xref:System.DirectoryServices.DirectoryEntry.Parent%2A>結果の。  
  
```vb  
Dim myADSPath As String = _   
          "LDAP://onecity/CN=user,CN=Users,DC=onecity,DC=corp,DC=fabrikam,DC=com"  
Dim myDirectoryEntry As New DirectoryEntry(myADSPath, UserName, SecurelyStoredPassword)  
  
Console.WriteLine("Parent is :" + myDirectoryEntry.Parent.Path)  
  
```  
  
```csharp  
String myADSPath = "LDAP://onecity/CN=user,CN=Users,DC=onecity,DC=corp,DC=fabrikam,DC=com";  
DirectoryEntry myDirectoryEntry=new DirectoryEntry(myADSPath, UserName, SecurelyStoredPassword);  
  
Console.WriteLine("Parent is :"+myDirectoryEntry.Parent.Path);  
```  
  
```cpp#  
String^ myADSPath = "LDAP://onecity/CN=user,CN=Users,DC=onecity,DC=corp,DC=fabrikam,DC=com";  
DirectoryEntry^ myDirectoryEntry = gcnew DirectoryEntry(myADSPath, UserName, SecurelyStoredPassword);  
  
Console::WriteLine("Parent is :{0}", myDirectoryEntry->Parent->Path);  
  
```  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">親を取得します。</permission>
      </Docs>
    </Member>
    <Member MemberName="Password">
      <MemberSignature Language="C#" Value="public string Password { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Password" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectoryEntry.Password" />
      <MemberSignature Language="VB.NET" Value="Public Property Password As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Password {  void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Password : string" Usage="System.DirectoryServices.DirectoryEntry.Password" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSPassword")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>クライアントの認証時に使用するパスワードを設定します。</summary>
        <value>クライアントの認証時に使用するパスワード。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 設定することができます、<xref:System.DirectoryServices.DirectoryEntry.Username%2A>と<xref:System.DirectoryServices.DirectoryEntry.Password%2A>プロパティを Active Directory Domain Services 内の情報のアクセスに使用する代替の資格情報を指定します。 その他の<xref:System.DirectoryServices.DirectoryEntry>オブジェクトがこのインスタンスから取得 (を使用して<xref:System.DirectoryServices.DirectoryEntry.Children%2A>) が同じ代替資格情報で自動的に作成します。  
  
   
  
## Examples  
 次の例で、<xref:System.DirectoryServices.DirectoryEntry.Username%2A>と<xref:System.DirectoryServices.DirectoryEntry.Password%2A>のプロパティ、<xref:System.DirectoryServices.DirectoryEntry>クラス。 この例では、ユーザーが指定したかを取得します。<xref:System.DirectoryServices.DirectoryEntry>と<xref:System.DirectoryServices.DirectoryEntry.Path%2A>すべてその<xref:System.DirectoryServices.DirectoryEntry.Children%2A>します。  
  
```vb  
Dim myADSPath As String = _  
      "LDAP://onecity/CN=Users,DC=onecity,DC=corp,DC=fabrikam,DC=com"  
  
' Create an Instance of DirectoryEntry.  
Dim myDirectoryEntry As New DirectoryEntry(myADSPath)  
myDirectoryEntry.Username = UserName  
myDirectoryEntry.Password = SecurelyStoredPassword  
  
' Get the Child ADS objects.  
Console.WriteLine("The Child ADS objects are:")  
Dim myChildDirectoryEntry As DirectoryEntry  
For Each myChildDirectoryEntry In  myDirectoryEntry.Children  
   Console.WriteLine(myChildDirectoryEntry.Path)  
Next myChildDirectoryEntry   
```  
  
```csharp  
String myADSPath = "LDAP://onecity/CN=Users,  
         DC=onecity,DC=corp,DC=fabrikam,DC=com";  
  
// Create an Instance of DirectoryEntry.  
DirectoryEntry myDirectoryEntry = new DirectoryEntry(myADSPath);  
myDirectoryEntry.Username = UserName;  
myDirectoryEntry.Password = SecurelyStoredPassword;  
  
// Get the Child ADS objects.  
Console.WriteLine("The Child ADS objects are:");  
foreach(DirectoryEntry myChildDirectoryEntry in myDirectoryEntry.Children)  
   Console.WriteLine(myChildDirectoryEntry.Path);  
  
```  
  
```cpp#  
String^ myADSPath = "LDAP://onecity/CN=Users,DC=onecity,DC=corp,DC=fabrikam,DC=com";  
  
// Create an Instance of DirectoryEntry.  
DirectoryEntry^ myDirectoryEntry = gcnew DirectoryEntry(myADSPath);  
myDirectoryEntry->Username = UserName;  
myDirectoryEntry->Password = SecurelyStoredPassword;  
  
// Get the Child ADS objects.  
Console::WriteLine("The Child ADS objects are:");  
Collections::IEnumerator^ myEnum = myDirectoryEntry->Children->GetEnumerator();  
while (myEnum->MoveNext())   
{  
    DirectoryEntry^ myChildDirectoryEntry = safe_cast<DirectoryEntry^>  
             (myEnum->Current);  
    Console::WriteLine(myChildDirectoryEntry->Path);  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DirectoryServices.DirectoryEntry.Username" />
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectoryEntry.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Path : string with get, set" Usage="System.DirectoryServices.DirectoryEntry.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSPath")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.DirectoryServices.DirectoryEntry" /> のパスを取得または設定します。</summary>
        <value>この <see cref="T:System.DirectoryServices.DirectoryEntry" /> オブジェクトのパス。 既定値は、空の文字列 ("") です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DirectoryServices.DirectoryEntry.Path%2A>プロパティは、ネットワーク環境では、このエントリを一意に識別します。 これを使用してこのエントリを取得することができます常に<xref:System.DirectoryServices.DirectoryEntry.Path%2A>します。  
  
 設定、<xref:System.DirectoryServices.DirectoryEntry.Path%2A>は、取得、ディレクトリから新しいエントリを格納し、現在バインドされているエントリのパスは変更されません。  
  
 関連付けられているクラス、<xref:System.DirectoryServices.DirectoryEntry>コンポーネントは、Active Directory Domain Services のサービス プロバイダーのいずれかで使用できます。 現在のプロバイダーには、インターネット インフォメーション サービス (IIS)、ライトウェイト ディレクトリ アクセス プロトコル (LDAP)、Novell NetWare Directory Service (NDS) および WinNT などがあります。  
  
> [!NOTE]
>  セクション、 <xref:System.DirectoryServices.DirectoryEntry.Path%2A> (「://」の前に) プロバイダーを識別する小文字が区別されます。 たとえば、"LDAP://"または"WinNT://"。  
  
 構文、<xref:System.DirectoryServices.DirectoryEntry.Path%2A>プロパティは、プロバイダーによって異なります。 一般的なシナリオを次に示します。  
  
 WinNT  
  
-   コンピューターのグループに接続します。 たとえば、"WinNT **://\<ドメイン名 >/\<コンピューター名 >/\<グループ名 >**"。 ローカル コンピューターに接続している場合は、"WinNT://**\<コンピューター名 >/\<グループ名 >**"。  
  
-   コンピューターのユーザーに接続します。 たとえば、"WinNT://**\<ドメイン名 >/\<コンピューター名 >/\<ユーザー名 >**"。 ローカル コンピューターに接続している場合は、"WinNT://**\<コンピューター名 >/\<ユーザー名 >**"。  
  
-   コンピューター上のサービスに接続します。 たとえば、"WinNT://**\<ドメイン名 >/\<コンピューター名 >/\<サービス名 >**"。 ローカル コンピューターに接続している場合は、"WinNT://**\<コンピューター名 >/\<サービス名 >**"。  
  
-   ネットワーク上のすべてのドメインを検出します。 たとえば、"WinNT:"このエントリの子を列挙することによって、ドメインが見つかりません。  
  
 LDAP  
  
-   ドメイン内のグループに接続します。 たとえば、"なります\<グループ名 >、CN =\<ユーザー >、DC =\<ドメイン コンポーネント >、DC =\<ドメイン コンポーネント >,..."です。  
  
-   ドメイン内のユーザーに接続します。 たとえば、"なります\<完全なユーザー名 >、CN =\<ユーザー >、DC =\<ドメイン コンポーネント >、DC =\<ドメイン コンポーネント >,..."です。  
  
-   ドメイン内のコンピューターに接続します。 たとえば、"なります\<コンピューター名 >、CN =\<コンピューター >、DC =\<ドメイン コンポーネント >、DC =\<ドメイン コンポーネント >,..."です。  
  
 IIS  
  
-   Web ディレクトリに接続します。 たとえば、"IIS://LocalHost/W3SVC/1/ROOT/\<Web ディレクトリ名 >"。  
  
 LDAP を使用して、現在のドメインにバインドするには、"LDAP://RootDSE"パスを使用して既定の名前付けコンテキストを取得し、エントリを再バインドします。 例:  
  
```csharp  
String str = ent.Properties["defaultNamingContext"][0];  
DirectoryEntry domain = new DirectoryEntry("LDAP://" + str);  
```  
  
 詳細については、ドキュメントをご利用のプロバイダーとのトピックを参照してください。 [Active Directory サービス インターフェイスを使用して](http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/using_adsi.asp)に MSDN ライブラリで[ http://msdn.microsoft.com/library](http://msdn.microsoft.com/library)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.PropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.PropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectoryEntry.Properties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Properties As PropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::PropertyCollection ^ Properties { System::DirectoryServices::PropertyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.DirectoryServices.PropertyCollection" Usage="System.DirectoryServices.DirectoryEntry.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSProperties")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.PropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.DirectoryServices.DirectoryEntry" /> オブジェクトの Active Directory Domain Services のプロパティを取得します。</summary>
        <value>このエントリに設定されるプロパティが格納された <see cref="T:System.DirectoryServices.PropertyCollection" /> オブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プロパティが初期化されていない場合<xref:System.DirectoryServices.DirectoryEntry.Properties%2A>ADSI インターフェイスを呼び出し、 [IADs::Get](http://msdn2.microsoft.com/library/aa746347.aspx)キャッシュから値を取得します。 元になるキャッシュが読み込まれていない場合[IADs::Get](http://msdn2.microsoft.com/library/aa746347.aspx)暗黙的に呼び出します[::getinfo に関するページ](http://msdn2.microsoft.com/library/aa746349.aspx)します。 このメソッドは、基になるディレクトリ ストアからキャッシュに設定されていないサポートされているプロパティの値を読み込みます。 後続の呼び出し<xref:System.DirectoryServices.DirectoryEntry.Properties%2A>キャッシュのみでプロパティ値を取得します。 プロパティ キャッシュの読み込みを制御するには、呼び出す<xref:System.DirectoryServices.DirectoryEntry.RefreshCache%2A>します。  
  
 **注**、<xref:System.DirectoryServices.DirectoryEntry.Properties%2A>プロパティはサポートされていません、Active Directory Client Extension (DSClient) で使用するため[!INCLUDE[WinNt4Family](~/includes/winnt4family-md.md)]します。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">プロパティを取得します。</permission>
        <altmember cref="T:System.DirectoryServices.PropertyCollection" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RefreshCache">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>この <see cref="T:System.DirectoryServices.DirectoryEntry" /> オブジェクトのプロパティ値をプロパティ キャッシュに読み込みます。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RefreshCache">
      <MemberSignature Language="C#" Value="public void RefreshCache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RefreshCache() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectoryEntry.RefreshCache" />
      <MemberSignature Language="VB.NET" Value="Public Sub RefreshCache ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RefreshCache();" />
      <MemberSignature Language="F#" Value="member this.RefreshCache : unit -&gt; unit" Usage="directoryEntry.RefreshCache " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>この <see cref="T:System.DirectoryServices.DirectoryEntry" /> オブジェクトのプロパティ値をプロパティ キャッシュに読み込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  プロパティ キャッシュにコミットされていない変更が失われます。 使用して、<xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A>メソッドは、ディレクトリ ストアに対して、変更を確定します。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">プロパティのキャッシュを更新します。</permission>
        <altmember cref="M:System.DirectoryServices.DirectoryEntry.CommitChanges" />
      </Docs>
    </Member>
    <Member MemberName="RefreshCache">
      <MemberSignature Language="C#" Value="public void RefreshCache (string[] propertyNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RefreshCache(string[] propertyNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectoryEntry.RefreshCache(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub RefreshCache (propertyNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RefreshCache(cli::array &lt;System::String ^&gt; ^ propertyNames);" />
      <MemberSignature Language="F#" Value="member this.RefreshCache : string[] -&gt; unit" Usage="directoryEntry.RefreshCache propertyNames" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="propertyNames">指定したプロパティの配列。</param>
        <summary>指定したプロパティの値をプロパティ キャッシュに読み込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  プロパティ キャッシュにコミットされていない変更が失われます。 使用<xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A>ディレクトリ ストアに変更を確定します。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">プロパティのキャッシュを更新します。</permission>
        <altmember cref="M:System.DirectoryServices.DirectoryEntry.CommitChanges" />
      </Docs>
    </Member>
    <Member MemberName="Rename">
      <MemberSignature Language="C#" Value="public void Rename (string newName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Rename(string newName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectoryEntry.Rename(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Rename (newName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Rename(System::String ^ newName);" />
      <MemberSignature Language="F#" Value="member this.Rename : string -&gt; unit" Usage="directoryEntry.Rename newName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="newName">エントリの新しい名前。</param>
        <summary>この <see cref="T:System.DirectoryServices.DirectoryEntry" /> オブジェクトの名前を変更します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  この記事を参照するために使用するパスにも影響します。  
  
 場合<xref:System.DirectoryServices.DirectoryEntry.UsePropertyCache%2A>は`true`、必ず、<xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A>の移行を永続的な新しいオブジェクトのメソッド。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DirectoryServices.DirectoryEntry.UsePropertyCache" />
        <altmember cref="M:System.DirectoryServices.DirectoryEntry.CommitChanges" />
      </Docs>
    </Member>
    <Member MemberName="SchemaClassName">
      <MemberSignature Language="C#" Value="public string SchemaClassName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SchemaClassName" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectoryEntry.SchemaClassName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SchemaClassName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SchemaClassName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SchemaClassName : string" Usage="System.DirectoryServices.DirectoryEntry.SchemaClassName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSSchemaClassName")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.DirectoryServices.DirectoryEntry" /> オブジェクトのスキーマ クラスの名前を取得します。</summary>
        <value>この <see cref="T:System.DirectoryServices.DirectoryEntry" /> オブジェクトのスキーマ クラスの名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 これと同じ、<xref:System.DirectoryServices.DirectoryEntry.Name%2A>のプロパティ、<xref:System.DirectoryServices.DirectoryEntry.SchemaEntry%2A>プロパティ。  
  
 A<xref:System.DirectoryServices.DirectoryEntry>オブジェクトのスキーマは、そのプロパティとメソッドを定義します。  
  
   
  
## Examples  
 次の例で、<xref:System.DirectoryServices.DirectoryEntry.SchemaClassName%2A>と<xref:System.DirectoryServices.DirectoryEntry.SchemaEntry%2A>のプロパティ、<xref:System.DirectoryServices.DirectoryEntry>クラス。 この例では、ユーザーが指定したかを取得します。<xref:System.DirectoryServices.DirectoryEntry>場合は、そのすべての子を取得し、<xref:System.DirectoryServices.DirectoryEntry.SchemaEntry%2A>はコンテナー オブジェクトです。  <xref:System.DirectoryServices.DirectoryEntry.SchemaEntry%2A>オブジェクトがコンテナー オブジェクト、 <xref:System.DirectoryServices.DirectoryEntry.Name%2A> "container"は、そのオブジェクトの。  
  
```vb  
Dim myADSPath As String = "LDAP://onecity/CN=Users,DC=onecity,DC=corp,DC=fabrikam,DC=com"  
  
' Creates an Instance of DirectoryEntry.  
Dim myDirectoryEntry As New DirectoryEntry(myADSPath, UserName, SecurelyStoredPassword)  
  
' Display the 'SchemaClassName'.  
Console.WriteLine("Schema class name:" + myDirectoryEntry.SchemaClassName)  
  
' Gets the SchemaEntry of the ADS object.  
Dim mySchemaEntry As DirectoryEntry = myDirectoryEntry.SchemaEntry  
  
If String.Compare(mySchemaEntry.Name, "container") = 0 Then  
   Dim myChildDirectoryEntry As DirectoryEntry  
   For Each myChildDirectoryEntry In  myDirectoryEntry.Children  
      Console.WriteLine(myChildDirectoryEntry.Path)  
   Next  
```  
  
```csharp  
String myADSPath = "LDAP://onecity/CN=Users,DC=onecity,DC=corp,DC=fabrikam,DC=com";  
  
// Creates an Instance of DirectoryEntry.  
DirectoryEntry  myDirectoryEntry=new DirectoryEntry(myADSPath, UserName, SecurelyStoredPassword);  
  
// Display the 'SchemaClassName'.  
Console.WriteLine("Schema class name:" + myDirectoryEntry.SchemaClassName);  
  
// Gets the SchemaEntry of the ADS object.  
DirectoryEntry mySchemaEntry = myDirectoryEntry.SchemaEntry;  
  
if (string.Compare(mySchemaEntry.Name, "container") == 0)  
{  
   foreach(DirectoryEntry myChildDirectoryEntry in myDirectoryEntry.Children)  
      Console.WriteLine(myChildDirectoryEntry.Path);  
}  
  
```  
  
```cpp#  
String^ myADSPath = "LDAP://onecity/CN=Users,DC=onecity,DC=corp,DC=fabrikam,DC=com";  
  
// Creates an Instance of DirectoryEntry.  
DirectoryEntry^ myDirectoryEntry = gcnew DirectoryEntry(myADSPath, UserName, SecurelyStoredPassword);  
  
// Display the 'SchemaClassName'.  
Console::WriteLine("Schema class name:{0}", myDirectoryEntry->SchemaClassName);  
  
// Gets the SchemaEntry of the ADS Object.  
DirectoryEntry^ mySchemaEntry = myDirectoryEntry->SchemaEntry;  
  
if (!String::Compare(mySchemaEntry->Name, "container"))   
{  
    Collections::IEnumerator^ myEnum = myDirectoryEntry->Children->GetEnumerator();  
    while (myEnum->MoveNext())   
    {  
        DirectoryEntry^ myChildDirectoryEntry = safe_cast<DirectoryEntry^>(myEnum->Current);  
        Console::WriteLine(myChildDirectoryEntry->Path);  
    }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">スキーマ名を取得します。</permission>
        <altmember cref="P:System.DirectoryServices.DirectoryEntry.SchemaEntry" />
      </Docs>
    </Member>
    <Member MemberName="SchemaEntry">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.DirectoryEntry SchemaEntry { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.DirectoryEntry SchemaEntry" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectoryEntry.SchemaEntry" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SchemaEntry As DirectoryEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::DirectoryEntry ^ SchemaEntry { System::DirectoryServices::DirectoryEntry ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SchemaEntry : System.DirectoryServices.DirectoryEntry" Usage="System.DirectoryServices.DirectoryEntry.SchemaEntry" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSSchemaEntry")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.DirectoryEntry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このエントリのスキーマ オブジェクトを取得します。</summary>
        <value>このエントリのスキーマ クラスを表す <see cref="T:System.DirectoryServices.DirectoryEntry" /> オブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 エントリのスキーマは、その必須および省略可能なプロパティ名の一覧を決定します。  
  
 このプロパティを使用して、関連付けられたオブジェクトで利用できるプロパティとメソッドを調べることができます。  
  
   
  
## Examples  
 次の例で、<xref:System.DirectoryServices.DirectoryEntry.SchemaClassName%2A>と<xref:System.DirectoryServices.DirectoryEntry.SchemaEntry%2A>のプロパティ、<xref:System.DirectoryServices.DirectoryEntry>クラス。 この例では、ユーザーが指定したかを取得します。<xref:System.DirectoryServices.DirectoryEntry>オブジェクトとすべての子の取得、<xref:System.DirectoryServices.DirectoryEntry.SchemaEntry%2A>オブジェクトはコンテナー オブジェクトです。  <xref:System.DirectoryServices.DirectoryEntry.SchemaEntry%2A>オブジェクトがコンテナー オブジェクト、 <xref:System.DirectoryServices.DirectoryEntry.Name%2A> "container"は、そのオブジェクトの。  
  
```vb  
Dim myADSPath As String = "LDAP://onecity/CN=Users,DC=onecity,DC=corp,DC=fabrikam,DC=com"  
  
' Creates an Instance of DirectoryEntry.  
Dim myDirectoryEntry As New DirectoryEntry(myADSPath, UserName, SecurelyStoredPassword)  
  
' Display the 'SchemaClassName'.  
Console.WriteLine("Schema class name:" + myDirectoryEntry.SchemaClassName)  
  
' Gets the SchemaEntry of the ADS object.  
Dim mySchemaEntry As DirectoryEntry = myDirectoryEntry.SchemaEntry  
  
If String.Compare(mySchemaEntry.Name, "container") = 0 Then  
   Dim myChildDirectoryEntry As DirectoryEntry  
   For Each myChildDirectoryEntry In  myDirectoryEntry.Children  
      Console.WriteLine(myChildDirectoryEntry.Path)  
   Next  
```  
  
```csharp  
String myADSPath = "LDAP://onecity/CN=Users,DC=onecity,DC=corp,DC=fabrikam,DC=com";  
  
// Creates an Instance of DirectoryEntry.  
DirectoryEntry  myDirectoryEntry=new DirectoryEntry(myADSPath, UserName, SecurelyStoredPassword);  
  
// Display the 'SchemaClassName'.  
Console.WriteLine("Schema class name:"+myDirectoryEntry.SchemaClassName);  
  
// Gets the SchemaEntry of the ADS object.  
DirectoryEntry mySchemaEntry = myDirectoryEntry.SchemaEntry;  
  
if (string.Compare(mySchemaEntry.Name,"container") == 0)  
{  
   foreach(DirectoryEntry myChildDirectoryEntry in myDirectoryEntry.Children)  
      Console.WriteLine(myChildDirectoryEntry.Path);  
}  
  
```  
  
```cpp#  
String^ myADSPath = "LDAP://onecity/CN=Users,DC=onecity,DC=corp,DC=fabrikam,DC=com";  
  
// Creates an Instance of DirectoryEntry.  
DirectoryEntry^ myDirectoryEntry = gcnew DirectoryEntry(myADSPath, UserName, SecurelyStoredPassword);  
  
// Display the 'SchemaClassName'.  
Console::WriteLine("Schema class name:{0}", myDirectoryEntry->SchemaClassName);  
  
// Gets the SchemaEntry of the ADS Object*.  
DirectoryEntry^ mySchemaEntry = myDirectoryEntry->SchemaEntry;  
  
if (!String::Compare(mySchemaEntry->Name, S"container"))   
{  
    Collections::IEnumerator^ myEnum = myDirectoryEntry->Children->GetEnumerator();  
    while (myEnum->MoveNext())   
    {  
        DirectoryEntry^ myChildDirectoryEntry = safe_cast<DirectoryEntry^>(myEnum->Current);  
        Console::WriteLine(myChildDirectoryEntry->Path);  
    }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">スキーマ オブジェクトを取得します。</permission>
        <altmember cref="P:System.DirectoryServices.DirectoryEntry.SchemaClassName" />
      </Docs>
    </Member>
    <Member MemberName="UsePropertyCache">
      <MemberSignature Language="C#" Value="public bool UsePropertyCache { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UsePropertyCache" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectoryEntry.UsePropertyCache" />
      <MemberSignature Language="VB.NET" Value="Public Property UsePropertyCache As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UsePropertyCache { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UsePropertyCache : bool with get, set" Usage="System.DirectoryServices.DirectoryEntry.UsePropertyCache" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSUsePropertyCache")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>操作を実行するたびにキャッシュをコミットするかどうかを示す値を取得または設定します。</summary>
        <value>操作を実行するたびにキャッシュをコミットしない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定では、プロパティの変更は、キャッシュにローカルで行われ、プロパティの値を読み取るが最初に読み取られた後にキャッシュされます。 ときに、<xref:System.DirectoryServices.DirectoryEntry.UsePropertyCache%2A>プロパティは`true`へのアクセス、<xref:System.DirectoryServices.DirectoryEntry>オブジェクトのプロパティが高速です。 これを設定`false`により、各操作後にコミットするキャッシュ。  
  
 場合、<xref:System.DirectoryServices.DirectoryEntry.UsePropertyCache%2A>プロパティは`true`呼び出すキャッシュ コミットの変更をして、<xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A>メソッド。 ディレクトリに変更を行った後は、キャッシュ内の値を更新するには、呼び出し、<xref:System.DirectoryServices.DirectoryEntry.RefreshCache%2A>メソッド。  
  
> [!CAUTION]
>  呼び出す場合<xref:System.DirectoryServices.DirectoryEntry.RefreshCache%2A>呼び出す前に<xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A>、プロパティ キャッシュにコミットされていない変更は失われます。  
  
> [!NOTE]
>  インターネット インフォメーション サービス (IIS) プロバイダーでは、各操作後にキャッシュをコミットすることはできません。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.DirectoryServices.DirectoryEntry.CommitChanges" />
        <altmember cref="M:System.DirectoryServices.DirectoryEntry.RefreshCache" />
      </Docs>
    </Member>
    <Member MemberName="Username">
      <MemberSignature Language="C#" Value="public string Username { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Username" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectoryEntry.Username" />
      <MemberSignature Language="VB.NET" Value="Public Property Username As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Username { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Username : string with get, set" Usage="System.DirectoryServices.DirectoryEntry.Username" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSUsername")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>クライアントの認証時に使用するユーザー名を取得または設定します。</summary>
        <value>クライアントの認証時に使用するユーザー名。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 設定することができます、<xref:System.DirectoryServices.DirectoryEntry.Username%2A>と<xref:System.DirectoryServices.DirectoryEntry.Password%2A>Active Directory Domain Services 内の情報のアクセスに使用する代替の資格情報を指定するためにします。 その他の<xref:System.DirectoryServices.DirectoryEntry>オブジェクトがこのインスタンスから取得 (を使用して<xref:System.DirectoryServices.DirectoryEntry.Children%2A>) が同じ代替資格情報で自動的に作成します。  
  
   
  
## Examples  
 次の例で、<xref:System.DirectoryServices.DirectoryEntry.Username%2A>と<xref:System.DirectoryServices.DirectoryEntry.Password%2A>のプロパティ、<xref:System.DirectoryServices.DirectoryEntry>クラス。 この例では、ユーザーが指定したかを取得します。<xref:System.DirectoryServices.DirectoryEntry>と<xref:System.DirectoryServices.DirectoryEntry.Path%2A>すべてその<xref:System.DirectoryServices.DirectoryEntry.Children%2A>します。  
  
```vb  
Dim myADSPath As String = _  
      "LDAP://onecity/CN=Users,DC=onecity,DC=corp,DC=fabrikam,DC=com"  
  
' Create an Instance of DirectoryEntry.  
Dim myDirectoryEntry As New DirectoryEntry(myADSPath)  
myDirectoryEntry.Username = UserName  
myDirectoryEntry.Password = SecurelyStoredPassword  
  
' Get the Child ADS objects.  
Console.WriteLine("The Child ADS objects are:")  
Dim myChildDirectoryEntry As DirectoryEntry  
For Each myChildDirectoryEntry In  myDirectoryEntry.Children  
   Console.WriteLine(myChildDirectoryEntry.Path)  
Next myChildDirectoryEntry  
```  
  
```csharp  
String myADSPath = "LDAP://onecity/CN=Users,DC=onecity,DC=corp,DC=fabrikam,DC=com";  
  
// Create an Instance of DirectoryEntry.  
DirectoryEntry myDirectoryEntry = new DirectoryEntry(myADSPath);  
myDirectoryEntry.Username = UserName;  
myDirectoryEntry.Password = SecurelyStoredPassword;  
  
// Get the Child ADS objects.  
Console.WriteLine("The Child ADS objects are:");  
foreach(DirectoryEntry myChildDirectoryEntry in myDirectoryEntry.Children)  
   Console.WriteLine(myChildDirectoryEntry.Path);  
  
```  
  
```cpp#  
String^ myADSPath = "LDAP://onecity/CN=Users,DC=onecity,DC=corp,DC=fabrikam,DC=com";  
  
// Create an Instance of DirectoryEntry.  
DirectoryEntry^ myDirectoryEntry = new DirectoryEntry(myADSPath);  
myDirectoryEntry->Username = UserName;  
myDirectoryEntry->Password = SecurelyStoredPassword;  
  
// Get the Child ADS objects.  
Console::WriteLine("The Child ADS objects are:");  
Collections::IEnumerator^ myEnum = myDirectoryEntry->Children->GetEnumerator();  
while (myEnum->MoveNext())   
{  
    DirectoryEntry^ myChildDirectoryEntry = safe_cast<DirectoryEntry^>(myEnum->Current);  
    Console::WriteLine(myChildDirectoryEntry->Path);  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DirectoryServices.DirectoryEntry.Password" />
      </Docs>
    </Member>
  </Members>
</Type>