<Type Name="ProfileManager" FullName="System.Web.Profile.ProfileManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5f2f70d5b1749f212a41f5e1536ca55e830438f7" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37545521" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class ProfileManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ProfileManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Profile.ProfileManager" />
  <TypeSignature Language="VB.NET" Value="Public Class ProfileManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProfileManager abstract sealed" />
  <TypeSignature Language="F#" Value="type ProfileManager = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Manages user profile data and settings.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET プロファイルは、格納およびデータベースなどのデータ ソース内のユーザー設定の取得に使用されます。 使用して、ユーザー プロファイルをアクセス、<xref:System.Web.HttpContext.Profile%2A>プロパティ、現在の<xref:System.Web.HttpContext>します。 プロファイル情報とプロパティの値は、プロファイル プロバイダーを使用して管理されます。  
  
 <xref:System.Web.Profile.ProfileManager>プロファイル設定の管理、ユーザーのプロファイルを検索および使用されなくなったユーザー プロファイルを削除するクラスを使用します。 <xref:System.Web.Profile.ProfileManager>クラスは、静的メソッドとプロパティを参照してアクセスできる、<xref:System.Web.Profile.ProfileManager>アプリケーション コード内のクラス。 例については、メンバーのこのトピックの「使用例とトピックでは、その他の例を参照、<xref:System.Web.Profile.ProfileManager>クラス。  
  
 既定では、すべての ASP.NET アプリケーションのユーザー プロファイルが無効になります。 ユーザー プロファイルを有効にするには設定、`enabled`を true に、次の例に示すように構成要素の属性です。  
  
```  
<configuration>  
  <system.web>  
    <profile enabled="true" />  
  </system.web>  
</configuration>  
```  
  
 ユーザー プロファイルの詳細については、次を参照してください。 [ASP.NET プロファイル プロパティの概要](http://msdn.microsoft.com/library/89439440-92ea-48c3-a4bd-dea40307899d)します。  
  
 プロファイル プロバイダーは、格納、ユーザー プロファイルのプロパティを取得して使用されます。 .NET Framework が含まれています、 <xref:System.Web.Profile.SqlProfileProvider> SQL Server データベースのユーザー プロファイルのプロパティを格納するクラスです。 A<xref:System.Web.Profile.SqlProfileProvider>という名前のインスタンス`AspNetSqlProvider`は既定のプロファイル プロバイダーとしてのマシン構成で指定します。 `AspNetSqlProvider`インスタンスは、ローカル Web サーバー上の SQL Server データベースに接続します。 指定することができます、<xref:System.Web.Profile.SqlProfileProvider>構成要素を使用して既定のプロファイル プロバイダーとして別の SQL Server に接続して、`defaultProvider`次の例に示すように構成要素の属性。  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="SqlServices" connectionString=  
      "Data Source=MySqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;" />  
  </connectionStrings>  
  <system.web>  
    <profile defaultProvider="SqlProvider">  
      <providers>  
        <clear />  
        <add name="SqlProvider"  
          type="System.Web.Profile.SqlProfileProvider"  
          connectionStringName="SqlServices"  
          applicationName="MyApplication" />  
      </providers>  
    </profile>  
  </system.web>  
</configuration>  
```  
  
   
  
## Examples  
 次のコード例を使用する ASP.NET ページを示しています、<xref:System.Web.Profile.ProfileManager>非アクティブなプロファイルを管理するクラス。  
  
> [!IMPORTANT]
>  この例には、潜在的なセキュリティ上の脅威がユーザー入力を受け付けるテキスト ボックスが含まれています。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/DeleteInactiveProfilescs.aspx#4)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/DeleteInactiveProfilesvb.aspx#4)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddDynamicProfileProperty">
      <MemberSignature Language="C#" Value="public static void AddDynamicProfileProperty (System.Web.Configuration.ProfilePropertySettings property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddDynamicProfileProperty(class System.Web.Configuration.ProfilePropertySettings property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.AddDynamicProfileProperty(System.Web.Configuration.ProfilePropertySettings)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddDynamicProfileProperty (property As ProfilePropertySettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddDynamicProfileProperty(System::Web::Configuration::ProfilePropertySettings ^ property);" />
      <MemberSignature Language="F#" Value="static member AddDynamicProfileProperty : System.Web.Configuration.ProfilePropertySettings -&gt; unit" Usage="System.Web.Profile.ProfileManager.AddDynamicProfileProperty property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Web.Configuration.ProfilePropertySettings" />
      </Parameters>
      <Docs>
        <param name="property">The property settings to be added.</param>
        <summary>Adds a profile property programmatically.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは機能的にプロパティを追加するのには、`profile`構成ファイルのセクション。 プロファイル プロパティを追加するには、このメソッドを呼び出すでマークされているメソッドの呼び出しを行う必要があります、<xref:System.Web.PreApplicationStartMethodAttribute>属性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public static string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileManager.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationName : string with get, set" Usage="System.Web.Profile.ProfileManager.ApplicationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the name of the application for which to store and retrieve profile information.</summary>
        <value>プロファイル情報を格納および取得するアプリケーションの名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Profile.ProfileManager>を使用して、<xref:System.Web.Profile.ProfileManager.ApplicationName%2A>にプロファイル情報を別のアプリケーションに関連付けるプロパティ。 これにより、同じデータベースを使用して、重複するユーザーの間で競合を実行しているユーザー情報を格納する複数のアプリケーション。 複数の ASP.NET アプリケーションは、同じユーザー データベースを使用して、内の同じ値を指定することによって、<xref:System.Web.Profile.ProfileManager.ApplicationName%2A>プロパティ。 <xref:System.Web.Profile.ProfileManager.ApplicationName%2A>プロパティをプログラムで設定できますか、宣言して設定できますで Web アプリケーションの構成ファイルを使用して、`applicationName`属性。  
  
 値が指定されていない場合、`applicationName`に含まれている .NET Framework プロファイル プロバイダーを使用して、Web アプリケーションの構成ファイル内の属性、 <xref:System.Web.Hosting.HostingEnvironment.ApplicationVirtualPath%2A> ASP.NET アプリケーションのプロパティの値。 非 ASP.NET アプリケーションを既定値は、<xref:System.Diagnostics.ProcessModule.ModuleName%2A>ファイル拡張子なしのプロパティの値。  
  
 <xref:System.Web.Profile.ProfileManager.ApplicationName%2A>プロパティが公開、<xref:System.Configuration.SettingsProvider.ApplicationName%2A?displayProperty=nameWithType>既定のプロファイル プロバイダーのプロパティ。 使用して既定のプロファイル プロバイダーを指定、`defaultProvider`構成要素の属性です。 ユーザー プロファイルに既定のプロバイダー以外のプロファイル プロバイダーで管理されているプロパティが含まれている場合は、別のアプリケーション名で構成できます。 既定のプロバイダー以外のプロファイル プロバイダーのアプリケーション名にアクセスするには、プロファイルを使用してプロバイダーへの参照を取得、<xref:System.Web.Profile.ProfileManager.Providers%2A>プロパティとアクセス、<xref:System.Configuration.SettingsProvider.ApplicationName%2A>直接プロバイダーのプロパティ。  
  
> [!CAUTION]
>  によって処理された要求のすべてのプロバイダーのインスタンスを 1 つの既定のプロファイルが使用されるため、<xref:System.Web.HttpApplication>オブジェクト、複数の要求を同時に実行し、設定しようとすることができます、<xref:System.Web.Profile.ProfileManager.ApplicationName%2A>プロパティの値。 <xref:System.Web.Profile.ProfileManager.ApplicationName%2A>プロパティは、複数の書き込みに対して安全と変化するスレッドではありません、<xref:System.Web.Profile.ProfileManager.ApplicationName%2A>プロパティの値が、アプリケーションの複数のユーザーの予期しない動作結果ことができます。 ユーザー設定をできるようにするコードを記述しないことをお勧めしますが、<xref:System.Web.Profile.ProfileManager.ApplicationName%2A>プロパティが必要な場合を除き、します。 アプリケーションの例の設定が、<xref:System.Web.Profile.ProfileManager.ApplicationName%2A>プロパティが必要には複数のアプリケーションのプロファイル データを管理する管理アプリケーションです。 このようなアプリケーションは、シングル ユーザー アプリケーションと Web アプリケーションではなく必要があります。  
  
   
  
## Examples  
 次の構成ファイルの抜粋では、ASP.NET アプリケーションの Web.config ファイルのセクションでは、要素を示します。 アプリケーションの既定のプロファイル プロバイダーを設定、<xref:System.Web.Profile.SqlProfileProvider>インスタンスとセット、<xref:System.Web.Profile.ProfileManager.ApplicationName%2A>に`MyApplication`します。  
  
```  
<profile enabled="true" defaultProvider="SqlProvider">  
  <providers>  
  <add name="SqlProvider"  
    type="System.Web.Profile.SqlProfileProvider"  
    connectionStringName="SqlServices"  
    applicationName="MyApplication" />  
  </providers>  
</profile>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutomaticSaveEnabled">
      <MemberSignature Language="C#" Value="public static bool AutomaticSaveEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool AutomaticSaveEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileManager.AutomaticSaveEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AutomaticSaveEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool AutomaticSaveEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AutomaticSaveEnabled : bool" Usage="System.Web.Profile.ProfileManager.AutomaticSaveEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the user profile will be automatically saved at the end of the execution of an ASP.NET page.</summary>
        <value>
          <see langword="true" /> ユーザー プロファイルは自動的に ASP.NET ページの実行の最後に保存する場合それ以外の場合、<see langword="false" />します。 既定値は <see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Profile.ProfileManager.AutomaticSaveEnabled%2A>プロパティは、アプリケーションのユーザー プロファイルの自動保存が有効になっているかどうかを示します。 自動保存が有効になっている場合、<xref:System.Web.Profile.ProfileModule>オブジェクト、<xref:System.Web.Profile.ProfileModule.ProfileAutoSaving>イベントと呼び出し、<xref:System.Web.Profile.ProfileBase.Save%2A>メソッド中に、 <xref:System.Web.HttpApplication.EndRequest> ASP.NET ページの実行の終了時にイベント。  
  
 <xref:System.Web.Profile.ProfileManager.AutomaticSaveEnabled%2A>を使用してプロパティを設定、 `automaticSaveEnabled` ASP.NET アプリケーションの Web.config ファイル内の要素の属性。  
  
   
  
## Examples  
 次の構成ファイルの抜粋では、ASP.NET アプリケーションの Web.config ファイルのセクションでは、要素を示します。 アプリケーションの既定のプロファイル プロバイダーを指定します、<xref:System.Web.Profile.SqlProfileProvider>インスタンスとセット、`automaticSaveEnabled`属性を`true`します。  
  
```  
<profile enabled="true"  
  automaticSaveEnabled="true"  
  defaultProvider="SqlProvider">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Profile.SqlProfileProvider"  
      connectionStringName="SqlServices"  
      applicationName="MyApplication" />  
  </providers>  
</profile>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">An attempt was made to get the <see cref="P:System.Web.Profile.ProfileManager.AutomaticSaveEnabled" /> property value without at least <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" /> permission.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteInactiveProfiles">
      <MemberSignature Language="C#" Value="public static int DeleteInactiveProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 DeleteInactiveProfiles(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, valuetype System.DateTime userInactiveSinceDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.DeleteInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DeleteInactiveProfiles (authenticationOption As ProfileAuthenticationOption, userInactiveSinceDate As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int DeleteInactiveProfiles(System::Web::Profile::ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate);" />
      <MemberSignature Language="F#" Value="static member DeleteInactiveProfiles : System.Web.Profile.ProfileAuthenticationOption * DateTime -&gt; int" Usage="System.Web.Profile.ProfileManager.DeleteInactiveProfiles (authenticationOption, userInactiveSinceDate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="userInactiveSinceDate" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="authenticationOption">One of the <see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> enumeration values, specifying whether anonymous, authenticated, or both types of profiles are deleted.</param>
        <param name="userInactiveSinceDate">A <see cref="T:System.DateTime" /> that identifies which user profiles are considered inactive. If the <see cref="P:System.Web.Profile.ProfileInfo.LastActivityDate" /> of a user profile occurs on or before this date and time, the profile is considered inactive.</param>
        <summary>Deletes user profile data for which the last activity date and time occurred before the specified date and time.</summary>
        <returns>The number of profiles deleted from the data source.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Profile.ProfileManager.DeleteInactiveProfiles%2A>メソッドを使用してで指定されたアプリケーションのデータ ソースから未使用のプロファイル データを削除、`applicationName`構成ファイル内の属性。 使用して、`authenticationOption`のみ匿名プロファイルするかどうかを指定するパラメーターは、プロファイル、または検索対象のすべてのプロファイルにのみ認証します。 検索対象のプロファイルのいずれかを使用したプロファイリング、<xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A>または、指定する前に発生する`userInactiveSinceDate`パラメーターの値を削除します。  
  
 <xref:System.Web.Profile.ProfileManager.DeleteInactiveProfiles%2A>メソッドの呼び出し、<xref:System.Web.Profile.ProfileProvider.DeleteInactiveProfiles%2A>メソッドの既定のプロファイル プロバイダー。 使用して既定のプロファイル プロバイダーを指定、`defaultProvider`構成要素の属性です。 ユーザー プロファイルに既定のプロバイダー以外のプロファイル プロバイダーで管理されているプロパティが含まれている場合、その他のデータ ソース内のプロファイル情報は削除されません。 既定のプロバイダー以外のプロファイル プロバイダーで管理されている非アクティブなプロファイルを削除するには、プロファイルを使用してプロバイダーへの参照を取得、<xref:System.Web.Profile.ProfileManager.Providers%2A>プロパティと呼び出し、<xref:System.Web.Profile.ProfileProvider.DeleteInactiveProfiles%2A>プロバイダーを直接のメソッド。  
  
   
  
## Examples  
 次のコード例では、非アクティブなプロファイルを管理する ASP.NET ページを示します。 指定した日数の使用された、したがって非アクティブと見なさすべてのプロファイルを削除するボタンが提供されます。  
  
> [!IMPORTANT]
>  この例には、潜在的なセキュリティ上の脅威がユーザー入力を受け付けるテキスト ボックスが含まれています。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/DeleteInactiveProfilescs.aspx#4)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/DeleteInactiveProfilesvb.aspx#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteProfile">
      <MemberSignature Language="C#" Value="public static bool DeleteProfile (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool DeleteProfile(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.DeleteProfile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DeleteProfile (username As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool DeleteProfile(System::String ^ username);" />
      <MemberSignature Language="F#" Value="static member DeleteProfile : string -&gt; bool" Usage="System.Web.Profile.ProfileManager.DeleteProfile username" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">The user name for the profile to be deleted.</param>
        <summary>Deletes the profile for the specified user name from the data source.</summary>
        <returns>
          <see langword="true" /> if the user profile was found and deleted; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Profile.ProfileManager.DeleteProfile%2A>メソッドは、すべてのプロファイル情報と、指定されたユーザー プロファイルのプロパティを削除します。 `username` 、指定されたデータ ソースから<xref:System.Web.Profile.ProfileManager.ApplicationName%2A>します。  
  
 <xref:System.Web.Profile.ProfileManager.DeleteProfile%2A>メソッドの呼び出し、<xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A>削除操作を実行する既定のプロファイル プロバイダーのメソッド。 使用して既定のプロファイル プロバイダーを指定、`defaultProvider`構成要素の属性です。 ユーザー プロファイルには、既定のプロバイダー以外のプロファイル プロバイダーで管理されているプロパティが含まれていますは削除されません。 既定のプロバイダー以外のプロファイル プロバイダーで管理されているプロファイルのプロパティを削除するには、プロファイルを使用してプロバイダーへの参照を取得、<xref:System.Web.Profile.ProfileManager.Providers%2A>プロパティと呼び出し、<xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A>プロバイダーを直接のメソッド。  
  
   
  
## Examples  
 次のコード例では、非アクティブなプロファイルを管理する ASP.NET ページを示します。 <xref:System.Web.Profile.ProfileManager.DeleteProfile%2A>を削除する 1 つのプロファイルを選択すると、メソッドが呼び出されます。 指定された日付に基づくプロファイルがアクティブでないと見なされるかどうかは、`userInactiveSinceDate`に渡されるパラメーター値、<xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A>メソッド。  
  
> [!IMPORTANT]
>  この例には、潜在的なセキュリティ上の脅威がユーザー入力を受け付けるテキスト ボックスが含まれています。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#10](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/DeleteProfilecs.aspx#10)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/DeleteProfilevb.aspx#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> is an empty string ("") or contains a comma.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DeleteProfiles">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Deletes profile properties and information from the data source for a supplied list of profiles.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DeleteProfiles">
      <MemberSignature Language="C#" Value="public static int DeleteProfiles (string[] usernames);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 DeleteProfiles(string[] usernames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.DeleteProfiles(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DeleteProfiles (usernames As String()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int DeleteProfiles(cli::array &lt;System::String ^&gt; ^ usernames);" />
      <MemberSignature Language="F#" Value="static member DeleteProfiles : string[] -&gt; int" Usage="System.Web.Profile.ProfileManager.DeleteProfiles usernames" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="usernames">A string array of user names for profiles to be deleted.</param>
        <summary>Deletes profile properties and information for the supplied list of user names.</summary>
        <returns>The number of profiles deleted from the data source.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Profile.ProfileManager.DeleteProfiles%2A>メソッドで指定されたアプリケーションのデータ ソースからのすべてのプロファイル情報および指定されたプロファイル プロパティの削除、<xref:System.Web.Profile.ProfileManager.ApplicationName%2A>プロパティ。 削除するプロファイルの一覧はユーザー名の文字列の配列として指定します。 プロパティと情報は、ユーザー名でのデータ ソースに存在しない場合、`usernames`パラメーター、削除されます。  
  
 戻り値の指定した配列の長さが異なる場合があります`usernames`します。 これが示すいくつかの指定した配列内のプロファイルの`usernames`データ ストアから既に削除されていた。  
  
 <xref:System.Web.Profile.ProfileManager.DeleteProfiles%2A>メソッドの呼び出し、<xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A>メソッドの既定のプロファイル プロバイダー。 使用して既定のプロファイル プロバイダーを指定、`defaultProvider`構成要素の属性です。 ユーザー プロファイルには、既定のプロバイダー以外のプロファイル プロバイダーで管理されているプロパティが含まれていますは削除されません。 既定のプロバイダー以外のプロファイル プロバイダーで管理されているプロファイルのプロパティを削除するには、プロファイルを使用してプロバイダーへの参照を取得、<xref:System.Web.Profile.ProfileManager.Providers%2A>プロパティと呼び出し、<xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A>プロバイダーを直接のメソッド。  
  
   
  
## Examples  
 次のコード例では、非アクティブなプロファイルを管理する ASP.NET ページを示します。 A<xref:System.Web.UI.WebControls.GridView>コントロールには、返された非アクティブなプロファイルが表示されます。 行ごと、<xref:System.Web.UI.WebControls.GridView>コントロールにはへの呼び出しでデータ ソースからその行に対してプロファイルを削除するボタンが含まれています、<xref:System.Web.Profile.ProfileManager.DeleteProfiles%2A>メソッド。  
  
> [!IMPORTANT]
>  この例には、潜在的なセキュリティ上の脅威がユーザー入力を受け付けるテキスト ボックスが含まれています。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/DeleteInactiveProfilescs.aspx#4)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/DeleteInactiveProfilesvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The length of <paramref name="usernames" /> is zero.  \- or -  One of the items in <paramref name="usernames" /> is an empty string ("") or contains a comma.  \- or -  Two or more items in <paramref name="usernames" /> have the same value.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="usernames" /> is <see langword="null" />.  \- or -  One of the items in <paramref name="usernames" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteProfiles">
      <MemberSignature Language="C#" Value="public static int DeleteProfiles (System.Web.Profile.ProfileInfoCollection profiles);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 DeleteProfiles(class System.Web.Profile.ProfileInfoCollection profiles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.DeleteProfiles(System.Web.Profile.ProfileInfoCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DeleteProfiles (profiles As ProfileInfoCollection) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int DeleteProfiles(System::Web::Profile::ProfileInfoCollection ^ profiles);" />
      <MemberSignature Language="F#" Value="static member DeleteProfiles : System.Web.Profile.ProfileInfoCollection -&gt; int" Usage="System.Web.Profile.ProfileManager.DeleteProfiles profiles" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="profiles" Type="System.Web.Profile.ProfileInfoCollection" />
      </Parameters>
      <Docs>
        <param name="profiles">A <see cref="T:System.Web.Profile.ProfileInfoCollection" /> that contains profile information for profiles to be deleted.</param>
        <summary>Deletes profile properties and information from the data source for the supplied list of profiles.</summary>
        <returns>The number of profiles deleted from the data source.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Profile.ProfileManager.DeleteProfiles%2A>メソッドで指定されたアプリケーションのデータ ソースからのすべてのプロファイル情報および指定されたプロファイル プロパティの削除、<xref:System.Web.Profile.ProfileManager.ApplicationName%2A>プロパティ。 使用して削除するプロファイルの一覧を指定する<xref:System.Web.Profile.ProfileInfoCollection>として渡される、`profiles`パラメーター。 A<xref:System.Web.Profile.ProfileInfoCollection>から返される、 <xref:System.Web.Profile.ProfileManager.GetAllProfiles%2A>、 <xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A>、 <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A>、および<xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A>メソッド。  
  
 戻り値が異なる場合がありますに注意してください、<xref:System.Web.Profile.ProfileInfoCollection.Count%2A>の指定された値<xref:System.Web.Profile.ProfileInfoCollection>します。 これが示す、指定したプロファイルの一部<xref:System.Web.Profile.ProfileInfoCollection>データ ストアから既に削除されていた。  
  
 <xref:System.Web.Profile.ProfileManager.DeleteProfiles%2A>メソッドの呼び出し、<xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A?displayProperty=nameWithType>メソッドの既定のプロファイル プロバイダー。 使用して既定のプロファイル プロバイダーを指定、`defaultProvider`構成要素の属性です。 ユーザー プロファイルには、既定のプロバイダー以外のプロファイル プロバイダーで管理されているプロパティが含まれていますは削除されません。 既定のプロバイダー以外のプロファイル プロバイダーで管理されているプロファイルのプロパティを削除するには、プロファイルを使用してプロバイダーへの参照を取得、<xref:System.Web.Profile.ProfileManager.Providers%2A>プロパティと呼び出し、<xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A>プロバイダーを直接のメソッド。  
  
   
  
## Examples  
 次のコード例を使用してプロファイルを検索するユーザーの許可、<xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A>と<xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A>メソッド。 ユーザーがへの呼び出しで返されるプロファイルを削除できるし、<xref:System.Web.Profile.ProfileManager.DeleteProfiles%2A>メソッド。  
  
> [!IMPORTANT]
>  この例には、潜在的なセキュリティ上の脅威がユーザー入力を受け付けるテキスト ボックスが含まれています。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/FindProfilesByUserNamecs.aspx#5)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/FindProfilesByUserNamevb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="profiles" /> has a <see cref="P:System.Web.Profile.ProfileInfoCollection.Count" /> value of zero.  \- or -  One of the <see cref="T:System.Web.Profile.ProfileInfo" /> objects in <paramref name="profiles" /> has a <see cref="P:System.Web.Profile.ProfileInfo.UserName" /> that is an empty string ("") or contains a comma.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="profiles" /> is <see langword="null" />.  \- or -  One of the <see cref="T:System.Web.Profile.ProfileInfo" /> objects in <paramref name="profiles" /> has a <see cref="P:System.Web.Profile.ProfileInfo.UserName" /> that is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public static bool Enabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileManager.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool Enabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool" Usage="System.Web.Profile.ProfileManager.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the user profile is enabled for the application.</summary>
        <value>
          <see langword="true" /> は、ユーザー プロファイルが有効な場合それ以外の場合、<see langword="false" />します。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、アプリケーションのユーザー プロファイルが有効になっている、`enabled`構成要素の属性です。  
  
   
  
## Examples  
 次のコード例では、ユーザー プロファイルが有効になっている ASP.NET アプリケーションの Web.config ファイルのセクションでは、要素を示します。  
  
```  
<profile enabled="true" defaultProvider="SqlProvider">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Profile.SqlProfileProvider"  
      connectionStringName="SqlServices"  
      applicationName="MyApplication" />  
  </providers>  
</profile>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindInactiveProfilesByUserName">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Retrieves profile information for profiles in which the last activity date occurred on or before a specified date and time and the user name for the profile matches a specified name.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindInactiveProfilesByUserName">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileInfoCollection FindInactiveProfilesByUserName (System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch, DateTime userInactiveSinceDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Profile.ProfileInfoCollection FindInactiveProfilesByUserName(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch, valuetype System.DateTime userInactiveSinceDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindInactiveProfilesByUserName (authenticationOption As ProfileAuthenticationOption, usernameToMatch As String, userInactiveSinceDate As DateTime) As ProfileInfoCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Profile::ProfileInfoCollection ^ FindInactiveProfilesByUserName(System::Web::Profile::ProfileAuthenticationOption authenticationOption, System::String ^ usernameToMatch, DateTime userInactiveSinceDate);" />
      <MemberSignature Language="F#" Value="static member FindInactiveProfilesByUserName : System.Web.Profile.ProfileAuthenticationOption * string * DateTime -&gt; System.Web.Profile.ProfileInfoCollection" Usage="System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName (authenticationOption, usernameToMatch, userInactiveSinceDate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileInfoCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="usernameToMatch" Type="System.String" />
        <Parameter Name="userInactiveSinceDate" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="authenticationOption">One of the <see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> enumeration values, specifying whether anonymous, authenticated, or both types of profiles are returned.</param>
        <param name="usernameToMatch">The user name for which to search.</param>
        <param name="userInactiveSinceDate">A <see cref="T:System.DateTime" /> that identifies which user profiles are considered inactive. If the <see cref="P:System.Web.Profile.ProfileInfo.LastActivityDate" /> of a user profile occurs on or before this date and time, the profile is considered inactive.</param>
        <summary>Retrieves profile information for all profiles in which the last activity date occurred on or before the specified date and time and the user name for the profile matches the specified name.</summary>
        <returns>A <see cref="T:System.Web.Profile.ProfileInfoCollection" /> containing user profile information for inactive profiles in which the user name matches the supplied <paramref name="usernameToMatch" /> parameter.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A>で指定されたアプリケーションのすべての未使用のユーザー プロファイルのプロファイル情報を取得するメソッドが使用される、`applicationName`構成ファイル内の属性。 このメソッドは、プロファイルのユーザー名が指定されたを一致プロファイルのみを取得`usernameToMatch`パラメーターの値。 使用して、`authenticationOption`のみ匿名プロファイルするかどうかを指定するパラメーターは、プロファイル、または検索対象のすべてのプロファイルにのみ認証します。 検索対象のプロファイルのいずれかを使用したプロファイリング、<xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A>または、指定する前に発生する`userInactiveSinceDate`パラメーターの値が返されます。  
  
 オーバー ロードを使用してデータのページでは、この情報を取得することができます、<xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%28System.Web.Profile.ProfileAuthenticationOption%2CSystem.String%2CSystem.DateTime%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%40%29>を受け取る追加メソッド`pageIndex`と`pageSize`パラメーター。  
  
> [!NOTE]
>  プロファイル プロバイダーでワイルドカード文字をサポートして可能性があります、`usernameToMatch`パラメーター。 たとえば、<xref:System.Web.Profile.SqlProfileProvider.FindInactiveProfilesByUserName%2A>のメソッド、<xref:System.Web.Profile.SqlProfileProvider>クラスがワイルドカード文字をサポートしている、`usernameToMatch`パラメーター。  
  
 <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A>メソッドの呼び出し、<xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A?displayProperty=nameWithType>メソッドの既定のプロファイル プロバイダー。 使用して既定のプロファイル プロバイダーを指定、`defaultProvider`構成要素の属性です。 ユーザー プロファイルに既定のプロバイダー以外のプロファイル プロバイダーで管理されているプロパティが含まれている場合、その他のプロファイル プロバイダーのデータ ソースは検索されません。 既定のプロバイダー以外のプロファイル プロバイダーで管理されている非アクティブなプロファイルを検索するには、プロファイルを使用してプロバイダーへの参照を取得、<xref:System.Web.Profile.ProfileManager.Providers%2A>プロパティと呼び出し、<xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A>プロバイダーを直接のメソッド。  
  
   
  
## Examples  
 次のコード例を指定するユーザーの許可、`usernameToMatch`値と<xref:System.Web.Profile.ProfileAuthenticationOption>プロファイルすべて一致するプロファイルの情報を列挙値を取得します。 このサンプルは、のみ非アクティブなプロファイルを返すかどうかを指定できます。 ユーザーがアクティブでないプロファイルのみを指定した場合、<xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A>メソッドが呼び出される。 それ以外の<xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A>メソッドが呼び出されます。  
  
> [!IMPORTANT]
>  この例には、潜在的なセキュリティ上の脅威がユーザー入力を受け付けるテキスト ボックスが含まれています。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/FindProfilesByUserName2cs.aspx#8)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/FindProfilesByUserName2vb.aspx#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="usernameToMatch" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="usernameToMatch" /> is an empty string ("").</exception>
      </Docs>
    </Member>
    <Member MemberName="FindInactiveProfilesByUserName">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileInfoCollection FindInactiveProfilesByUserName (System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch, DateTime userInactiveSinceDate, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Profile.ProfileInfoCollection FindInactiveProfilesByUserName(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch, valuetype System.DateTime userInactiveSinceDate, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.DateTime,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindInactiveProfilesByUserName (authenticationOption As ProfileAuthenticationOption, usernameToMatch As String, userInactiveSinceDate As DateTime, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As ProfileInfoCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Profile::ProfileInfoCollection ^ FindInactiveProfilesByUserName(System::Web::Profile::ProfileAuthenticationOption authenticationOption, System::String ^ usernameToMatch, DateTime userInactiveSinceDate, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberSignature Language="F#" Value="static member FindInactiveProfilesByUserName : System.Web.Profile.ProfileAuthenticationOption * string * DateTime * int * int *  -&gt; System.Web.Profile.ProfileInfoCollection" Usage="System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName (authenticationOption, usernameToMatch, userInactiveSinceDate, pageIndex, pageSize, totalRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileInfoCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="usernameToMatch" Type="System.String" />
        <Parameter Name="userInactiveSinceDate" Type="System.DateTime" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="authenticationOption">One of the <see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> values, specifying whether anonymous, authenticated, or both types of profiles are returned.</param>
        <param name="usernameToMatch">The user name for which to search.</param>
        <param name="userInactiveSinceDate">A <see cref="T:System.DateTime" /> that identifies which user profiles are considered inactive. If the <see cref="P:System.Web.Profile.ProfileInfo.LastActivityDate" /> of a user profile occurs on or before this date and time, the profile is considered inactive.</param>
        <param name="pageIndex">The index of the page of results to return. <c>pageIndex</c> is zero-based.</param>
        <param name="pageSize">The size of the page of results to return.</param>
        <param name="totalRecords">When this method returns, contains an integer that identifies the total number of profiles. This parameter is passed uninitialized.</param>
        <summary>Retrieves profile information in pages of data for profiles in which the last activity date occurred on or before the specified date and time and the user name for the profile matches the specified name.</summary>
        <returns>A <see cref="T:System.Web.Profile.ProfileInfoCollection" /> containing user profile information for inactive profiles where the user name matches the supplied <paramref name="usernameToMatch" /> parameter.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A>で指定されたアプリケーションの未使用のユーザー プロファイルのプロファイル情報を取得するメソッドが使用される、`applicationName`構成ファイル内の属性。 このメソッドはユーザー名が指定された一致対象のプロファイルのみを取得`usernameToMatch`パラメーターの値。 使用して、`authenticationOption`のみ匿名プロファイルするかどうかを指定するパラメーターは、プロファイル、または検索対象のすべてのプロファイルにのみ認証します。 検索対象のプロファイルのすべてのプロファイルが返されますが、<xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A>または、指定する前に発生する`userInactiveSinceDate`パラメーターの値。  
  
 によって返される結果<xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A>によって制限されます、`pageIndex`と`pageSize`パラメーター。 `pageSize`パラメーターの最大数を識別する<xref:System.Web.Profile.ProfileInfo>で返されるオブジェクト、<xref:System.Web.Profile.ProfileInfoCollection>コレクション。 `pageIndex`パラメーターが返される結果のページを識別します。 0 は最初のページを識別します。 `totalRecords`パラメーターは、`out`構成済みの非アクティブなユーザー プロファイルの合計数に設定されているパラメーター`applicationName`を基に、`authenticationOption`と`userInactiveSinceDate`パラメーター。 たとえば、構成済みの 13 人のユーザーがある場合`applicationName`と`pageIndex`値は 1、 `pageSize` 5 の場合、<xref:System.Web.Profile.ProfileInfoCollection>が返されますは 6 ~ 10 番目の非アクティブなプロファイルを含めることが。 `totalRecords`パラメーターを 13 に設定されます。  
  
 ワイルドカード文字をプロファイル プロバイダーは対応する必要があることに注意してください、`usernameToMatch`パラメーター。 たとえば、<xref:System.Web.Profile.SqlProfileProvider.FindInactiveProfilesByUserName%2A>のメソッド、<xref:System.Web.Profile.SqlProfileProvider>クラスがワイルドカード文字をサポートしている、`usernameToMatch`パラメーター。  
  
 <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A>メソッドの呼び出し、<xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A>メソッドの既定のプロファイル プロバイダー。 使用して既定のプロファイル プロバイダーを指定、`defaultProvider`構成要素の属性です。 ユーザー プロファイルに既定のプロバイダー以外のプロファイル プロバイダーで管理されているプロパティが含まれている場合、その他のプロファイル プロバイダーのデータ ソースは検索されません。 既定のプロバイダー以外のプロファイル プロバイダーで管理されている非アクティブなプロファイルを検索するには、プロファイルを使用してプロバイダーへの参照を取得、<xref:System.Web.Profile.ProfileManager.Providers%2A>プロパティと呼び出し、<xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A>プロバイダーを直接のメソッド。  
  
   
  
## Examples  
 次のコード例を指定するユーザーの許可、`usernameToMatch`値と<xref:System.Web.Profile.ProfileAuthenticationOption>値し、一致するプロファイルのプロファイル情報を取得します。 例は、非アクティブなプロファイルだけを返すかどうかを指定できます。 ユーザーがアクティブでないプロファイルのみを指定した場合、<xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A>メソッドが呼び出される。 それ以外の<xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A>メソッドが呼び出されます。  
  
> [!IMPORTANT]
>  この例には、潜在的なセキュリティ上の脅威がユーザー入力を受け付けるテキスト ボックスが含まれています。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/FindProfilesByUserNamecs.aspx#5)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/FindProfilesByUserNamevb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="usernameToMatch" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="usernameToMatch" /> is an empty string ("").  \- or -  <paramref name="pageIndex" /> is less than zero.  \- or -  <paramref name="pageSize" /> is less than 1.  \- or -  <paramref name="pageIndex" /> multiplied by <paramref name="pageSize" /> is larger than <see cref="F:System.Int32.MaxValue" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindProfilesByUserName">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Retrieves profile information for profiles in which the user name matches a specified name.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindProfilesByUserName">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileInfoCollection FindProfilesByUserName (System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Profile.ProfileInfoCollection FindProfilesByUserName(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.FindProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindProfilesByUserName (authenticationOption As ProfileAuthenticationOption, usernameToMatch As String) As ProfileInfoCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Profile::ProfileInfoCollection ^ FindProfilesByUserName(System::Web::Profile::ProfileAuthenticationOption authenticationOption, System::String ^ usernameToMatch);" />
      <MemberSignature Language="F#" Value="static member FindProfilesByUserName : System.Web.Profile.ProfileAuthenticationOption * string -&gt; System.Web.Profile.ProfileInfoCollection" Usage="System.Web.Profile.ProfileManager.FindProfilesByUserName (authenticationOption, usernameToMatch)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileInfoCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="usernameToMatch" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="authenticationOption">One of the <see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> enumeration values, specifying whether anonymous, authenticated, or both types of profiles are returned.</param>
        <param name="usernameToMatch">The user name for which to search.</param>
        <summary>Retrieves all profile information for profiles in which the user name matches the specified name.</summary>
        <returns>A <see cref="T:System.Web.Profile.ProfileInfoCollection" /> containing user profile information for profiles where the user name matches the supplied <paramref name="usernameToMatch" /> parameter.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A>メソッドは、ユーザー名が指定された一致対象のすべてのプロファイル情報の一覧を返します`usernameToMatch`構成済みのパラメーター値<xref:System.Web.Profile.ProfileManager.ApplicationName%2A>プロパティの値。 使用して、`authenticationOption`のみ匿名プロファイルするかどうかを指定するパラメーターは、プロファイル、または検索対象のすべてのプロファイルにのみ認証します。  
  
 オーバー ロードを使用してデータのページでユーザー プロファイルのプロファイル情報を取得することができます、<xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A>を受け取る追加メソッド`pageIndex`と`pageSize`パラメーター。  
  
 ワイルドカード文字をプロファイル プロバイダーは対応する必要があることに注意してください、`usernameToMatch`パラメーター。 たとえば、<xref:System.Web.Profile.SqlProfileProvider.FindProfilesByUserName%2A>のメソッド、<xref:System.Web.Profile.SqlProfileProvider>クラスがワイルドカード文字をサポートしている、`usernameToMatch`パラメーター。  
  
 <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A>メソッドの呼び出し、<xref:System.Web.Profile.ProfileProvider.FindProfilesByUserName%2A>メソッドの既定のプロファイル プロバイダー。 使用して既定のプロファイル プロバイダーを指定、`defaultProvider`構成要素の属性です。 ユーザー プロファイルに既定のプロバイダー以外のプロファイル プロバイダーで管理されているプロパティが含まれている場合、その他のプロファイル プロバイダーのデータ ソースは検索されません。 既定のプロバイダー以外のプロファイル プロバイダーで管理されているプロファイルを検索するには、プロファイルを使用してプロバイダーへの参照を取得、<xref:System.Web.Profile.ProfileManager.Providers%2A>プロパティと呼び出し、<xref:System.Web.Profile.ProfileProvider.FindProfilesByUserName%2A>プロバイダーを直接のメソッド。  
  
   
  
## Examples  
 次のコード例を指定するユーザーの許可、`usernameToMatch`値と<xref:System.Web.Profile.ProfileAuthenticationOption>プロファイルすべて一致するプロファイルの情報を列挙値を取得します。 例は、非アクティブなプロファイルだけを返すかどうかを指定できます。 ユーザーがアクティブでないプロファイルのみを指定した場合、<xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A>メソッドが呼び出される。 それ以外の<xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A>メソッドが呼び出されます。  
  
> [!IMPORTANT]
>  この例には、潜在的なセキュリティ上の脅威がユーザー入力を受け付けるテキスト ボックスが含まれています。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/FindProfilesByUserName2cs.aspx#8)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/FindProfilesByUserName2vb.aspx#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="usernameToMatch" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="usernameToMatch" /> is an empty string ("").</exception>
      </Docs>
    </Member>
    <Member MemberName="FindProfilesByUserName">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileInfoCollection FindProfilesByUserName (System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Profile.ProfileInfoCollection FindProfilesByUserName(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.FindProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindProfilesByUserName (authenticationOption As ProfileAuthenticationOption, usernameToMatch As String, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As ProfileInfoCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Profile::ProfileInfoCollection ^ FindProfilesByUserName(System::Web::Profile::ProfileAuthenticationOption authenticationOption, System::String ^ usernameToMatch, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberSignature Language="F#" Value="static member FindProfilesByUserName : System.Web.Profile.ProfileAuthenticationOption * string * int * int *  -&gt; System.Web.Profile.ProfileInfoCollection" Usage="System.Web.Profile.ProfileManager.FindProfilesByUserName (authenticationOption, usernameToMatch, pageIndex, pageSize, totalRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileInfoCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="usernameToMatch" Type="System.String" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="authenticationOption">One of the <see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> enumeration values, specifying whether anonymous, authenticated, or both types of profiles are returned.</param>
        <param name="usernameToMatch">The user name for which to search.</param>
        <param name="pageIndex">The index of the page of results to return. <c>pageIndex</c> is zero-based.</param>
        <param name="pageSize">The size of the page of results to return.</param>
        <param name="totalRecords">When this method returns, contains an integer that identifies the total number of profiles. This parameter is passed uninitialized.</param>
        <summary>Retrieves profile information in pages of data for profiles in which the user name matches the specified name.</summary>
        <returns>A <see cref="T:System.Web.Profile.ProfileInfoCollection" /> containing user profile information for profiles where the user name matches the supplied <paramref name="usernameToMatch" /> parameter.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A>メソッドは、対象のプロファイルのユーザー名と一致する、指定されたプロファイル情報の一覧を返します`usernameToMatch`構成済みのパラメーター値<xref:System.Web.Profile.ProfileManager.ApplicationName%2A>します。 使用して、`authenticationOption`のみ匿名プロファイルするかどうかを指定するパラメーターは、プロファイル、または検索対象のすべてのプロファイルにのみ認証します。  
  
 ワイルドカード文字をプロファイル プロバイダーは対応する必要があることに注意してください、`usernameToMatch`パラメーター。 たとえば、<xref:System.Web.Profile.SqlProfileProvider.FindProfilesByUserName%2A>のメソッド、<xref:System.Web.Profile.SqlProfileProvider>クラスがワイルドカード文字をサポートしている、`usernameToMatch`パラメーター。  
  
 によって返される結果<xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A>によって制限されます、`pageIndex`と`pageSize`パラメーター。 `pageSize`パラメーターの最大数を識別する<xref:System.Web.Profile.ProfileInfo>で返されるオブジェクト、<xref:System.Web.Profile.ProfileInfoCollection>します。 `pageIndex`パラメーターは、返される結果のページを識別します。 0 は最初のページを識別します。 `totalRecords`パラメーターは、`out`パラメーターで指定されたアプリケーションの非アクティブなユーザー プロファイルの合計数に設定されている、`applicationName`に基づいて、指定された構成ファイルで属性`authenticationOption`します。 たとえば、構成済みの 13 人のユーザーがある場合`applicationName`と`pageIndex`値は 1、 `pageSize` 5 の場合、<xref:System.Web.Profile.ProfileInfoCollection>が返されますは 6 ~ 10 番目のプロファイルを含めることが。 `totalRecords`パラメーターを 13 に設定されます。  
  
 <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A>メソッドの呼び出し、<xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A>メソッドの既定のプロファイル プロバイダー。 使用して既定のプロファイル プロバイダーを指定、`defaultProvider`構成要素の属性です。 ユーザー プロファイルに既定のプロバイダー以外のプロファイル プロバイダーで管理されているプロパティが含まれている場合、その他のプロファイル プロバイダーのデータ ソースは検索されません。 既定のプロバイダー以外のプロファイル プロバイダーで管理されているプロファイルを検索するには、プロファイルを使用してプロバイダーへの参照を取得、<xref:System.Web.Profile.ProfileManager.Providers%2A>プロパティと呼び出し、<xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A>プロバイダーを直接のメソッド。  
  
   
  
## Examples  
 次のコード例は、ユーザーを入力する、`usernameToMatch`値と<xref:System.Web.Profile.ProfileAuthenticationOption>およびを取得しますが、一致するプロファイルの情報をプロファイルします。 例は、非アクティブなプロファイルだけを返すかどうかを指定できます。 ユーザーがアクティブでないプロファイルのみを指定した場合、<xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A>メソッドが呼び出される。 それ以外の<xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A>メソッドが呼び出されます。  
  
> [!IMPORTANT]
>  この例には、潜在的なセキュリティ上の脅威がユーザー入力を受け付けるテキスト ボックスが含まれています。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/FindProfilesByUserNamecs.aspx#5)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/FindProfilesByUserNamevb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="usernameToMatch" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="usernameToMatch" /> is an empty string ("").  \- or -  <paramref name="pageIndex" /> is less than zero.  \- or -  <paramref name="pageSize" /> is less than 1.  \- or -  <paramref name="pageIndex" /> multiplied by <paramref name="pageSize" /> is larger than <see cref="F:System.Int32.MaxValue" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAllInactiveProfiles">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Retrieves user profile data for profiles in which the last activity date occurred on or before a specified date and time.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAllInactiveProfiles">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileInfoCollection GetAllInactiveProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Profile.ProfileInfoCollection GetAllInactiveProfiles(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, valuetype System.DateTime userInactiveSinceDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.GetAllInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAllInactiveProfiles (authenticationOption As ProfileAuthenticationOption, userInactiveSinceDate As DateTime) As ProfileInfoCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Profile::ProfileInfoCollection ^ GetAllInactiveProfiles(System::Web::Profile::ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate);" />
      <MemberSignature Language="F#" Value="static member GetAllInactiveProfiles : System.Web.Profile.ProfileAuthenticationOption * DateTime -&gt; System.Web.Profile.ProfileInfoCollection" Usage="System.Web.Profile.ProfileManager.GetAllInactiveProfiles (authenticationOption, userInactiveSinceDate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileInfoCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="userInactiveSinceDate" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="authenticationOption">One of the <see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> enumeration values, specifying whether anonymous, authenticated, or both types of profiles are returned.</param>
        <param name="userInactiveSinceDate">A <see cref="T:System.DateTime" /> that identifies which user profiles are considered inactive. If the <see cref="P:System.Web.Profile.ProfileInfo.LastActivityDate" /> of a user profile occurs on or before this date and time, the profile is considered inactive.</param>
        <summary>Retrieves all user profile data for profiles in which the last activity date occurred on or before the specified date and time.</summary>
        <returns>A <see cref="T:System.Web.Profile.ProfileInfoCollection" /> containing user profile information about the inactive profiles.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A>メソッドを使用してで指定されたアプリケーションのすべての未使用のユーザー プロファイルのデータ ソースからプロファイル情報を取得、`applicationName`構成ファイル内の属性。 使用して、`authenticationOption`のみ匿名プロファイルするかどうかを指定するパラメーターは、プロファイル、または検索対象のすべてのプロファイルにのみ認証します。 検索対象のプロファイルのすべてのプロファイルが返されますが、<xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A>または、指定する前に発生する`userInactiveSinceDate`パラメーターの値。  
  
 オーバー ロードを使用してデータのページで非アクティブなユーザー プロファイルのプロファイル情報を取得することができます、<xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A>を受け取る追加メソッド`pageIndex`と`pageSize`パラメーター。  
  
 <xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A>メソッドの呼び出し、<xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A>メソッドの既定のプロファイル プロバイダー。 使用して既定のプロファイル プロバイダーを指定、`defaultProvider`構成要素の属性です。 ユーザー プロファイルに既定のプロバイダー以外のプロファイル プロバイダーで管理されているプロパティが含まれている場合、その他のプロファイル プロバイダーのデータ ソースは検索されません。 既定のプロバイダー以外のプロファイル プロバイダーで管理されている未使用のプロファイルを検索するには、プロファイルを使用してプロバイダーへの参照を取得、<xref:System.Web.Profile.ProfileManager.Providers%2A>プロパティと呼び出し、<xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A>プロバイダーを直接のメソッド。  
  
   
  
## Examples  
 次のコード例では、非アクティブなプロファイルを管理する ASP.NET ページを示します。 すべての非アクティブなプロファイルを削除するボタンが提供されます。 指定された日付に基づくプロファイルがアクティブでないと見なされるかどうかは、`userInactiveSinceDate`パラメーター。  
  
> [!IMPORTANT]
>  この例には、潜在的なセキュリティ上の脅威がユーザー入力を受け付けるテキスト ボックスが含まれています。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/DeleteInactiveProfiles2cs.aspx#7)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/DeleteInactiveProfiles2vb.aspx#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllInactiveProfiles">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileInfoCollection GetAllInactiveProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Profile.ProfileInfoCollection GetAllInactiveProfiles(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, valuetype System.DateTime userInactiveSinceDate, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.GetAllInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAllInactiveProfiles (authenticationOption As ProfileAuthenticationOption, userInactiveSinceDate As DateTime, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As ProfileInfoCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Profile::ProfileInfoCollection ^ GetAllInactiveProfiles(System::Web::Profile::ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberSignature Language="F#" Value="static member GetAllInactiveProfiles : System.Web.Profile.ProfileAuthenticationOption * DateTime * int * int *  -&gt; System.Web.Profile.ProfileInfoCollection" Usage="System.Web.Profile.ProfileManager.GetAllInactiveProfiles (authenticationOption, userInactiveSinceDate, pageIndex, pageSize, totalRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileInfoCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="userInactiveSinceDate" Type="System.DateTime" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="authenticationOption">One of the <see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> enumeration values, specifying whether anonymous, authenticated, or both types of profiles are returned.</param>
        <param name="userInactiveSinceDate">A <see cref="T:System.DateTime" /> that identifies which user profiles are considered inactive. If the <see cref="P:System.Web.Profile.ProfileInfo.LastActivityDate" /> of a user profile occurs on or before this date and time, the profile is considered inactive.</param>
        <param name="pageIndex">The index of the page of results to return. <c>pageIndex</c> is zero-based.</param>
        <param name="pageSize">The size of the page of results to return.</param>
        <param name="totalRecords">When this method returns, contains an integer that identifies the total number of profiles. This parameter is passed uninitialized.</param>
        <summary>Retrieves a page of <see cref="T:System.Web.Profile.ProfileInfo" /> objects for user profiles in which the last activity date occurred on or before the specified date and time.</summary>
        <returns>A <see cref="T:System.Web.Profile.ProfileInfoCollection" /> containing user profile information about the inactive profiles.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A>メソッドを使用して、未使用のユーザー プロファイルで指定されたアプリケーション用のデータ ソースからプロファイル情報を取得、`applicationName`構成ファイル内の属性。 使用して、`authenticationOption`のみ匿名プロファイルするかどうかを指定するパラメーターは、プロファイル、または検索対象のすべてのプロファイルにのみ認証します。 検索対象のプロファイルのすべてのプロファイルが返されますが、 <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A> 、指定の前に発生する`userInactiveSinceDate`パラメーターの値。  
  
 によって返される結果<xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A>によって制限されます、`pageIndex`と`pageSize`パラメーター。 `pageSize`パラメーターの最大数を識別する<xref:System.Web.Profile.ProfileInfo>で返されるオブジェクト、<xref:System.Web.Profile.ProfileInfoCollection>します。 `pageIndex`パラメーターは、返される結果のページを識別します。 0 は最初のページを識別します。 `totalRecords`パラメーターは、`out`構成済みの非アクティブなユーザー プロファイルの合計数に設定されているパラメーター`applicationName`を基に、`authenticationOption`と`userInactiveSinceDate`パラメーター。 例では、構成済みの 13 人のユーザーがある場合`applicationName`、および`pageIndex`値は 1 つ、 `pageSize` 5 の場合、<xref:System.Web.Profile.ProfileInfoCollection>が返されるは 6 ~ 10 番目の非アクティブなプロファイルを含めることが。 `totalRecords`パラメーターを 13 に設定されます。  
  
 <xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A>メソッドの呼び出し、<xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A>メソッドの既定のプロファイル プロバイダー。 使用して既定のプロファイル プロバイダーを指定、`defaultProvider`構成要素の属性です。 ユーザー プロファイルに既定のプロバイダー以外のプロファイル プロバイダーで管理されているプロパティが含まれている場合、その他のプロファイル プロバイダーのデータ ソースは検索されません。 既定のプロバイダー以外のプロファイル プロバイダーで管理されているプロファイルを検索するには、プロファイルを使用してプロバイダーへの参照を取得、<xref:System.Web.Profile.ProfileManager.Providers%2A>プロパティと呼び出し、<xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A>プロバイダーを直接のメソッド。  
  
   
  
## Examples  
 次のコード例では、非アクティブなプロファイルを管理する ASP.NET Web ページを示します。 すべての非アクティブなプロファイルを削除するボタンが提供されます。 指定された日付に基づくプロファイルがアクティブでないと見なされるかどうかは、`userInactiveSinceDate`パラメーター。  
  
> [!IMPORTANT]
>  この例には、潜在的なセキュリティ上の脅威がユーザー入力を受け付けるテキスト ボックスが含まれています。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/DeleteInactiveProfilescs.aspx#4)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/DeleteInactiveProfilesvb.aspx#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAllProfiles">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Retrieves user profile data for profiles in the data source.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAllProfiles">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileInfoCollection GetAllProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Profile.ProfileInfoCollection GetAllProfiles(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.GetAllProfiles(System.Web.Profile.ProfileAuthenticationOption)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAllProfiles (authenticationOption As ProfileAuthenticationOption) As ProfileInfoCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Profile::ProfileInfoCollection ^ GetAllProfiles(System::Web::Profile::ProfileAuthenticationOption authenticationOption);" />
      <MemberSignature Language="F#" Value="static member GetAllProfiles : System.Web.Profile.ProfileAuthenticationOption -&gt; System.Web.Profile.ProfileInfoCollection" Usage="System.Web.Profile.ProfileManager.GetAllProfiles authenticationOption" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileInfoCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
      </Parameters>
      <Docs>
        <param name="authenticationOption">One of the <see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> enumeration values, specifying whether anonymous, authenticated, or both types of profiles are returned.</param>
        <summary>Retrieves user profile data for profiles in the data source.</summary>
        <returns>A <see cref="T:System.Web.Profile.ProfileInfoCollection" /> containing user profile information for all of the profiles in the data source.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Profile.ProfileManager.GetAllProfiles%2A>メソッドを使用してで指定されたアプリケーションのデータ ソースからプロファイル情報を取得、`applicationName`構成ファイル内の属性。 使用して、`authenticationOption`のみ匿名プロファイルするかどうかを指定するパラメーターは、プロファイル、または検索対象のすべてのプロファイルにのみ認証します。  
  
 ページを取得する<xref:System.Web.Profile.ProfileInfo>のオーバー ロードを使用して、ユーザー プロファイル用のオブジェクト、<xref:System.Web.Profile.ProfileManager.GetAllProfiles%2A>を受け取る追加メソッド`pageIndex`と`pageSize`パラメーター。  
  
 <xref:System.Web.Profile.ProfileManager.GetAllProfiles%2A>メソッドの呼び出し、<xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A>メソッドの既定のプロファイル プロバイダー。 使用して既定のプロファイル プロバイダーを指定、`defaultProvider`構成要素の属性です。 ユーザー プロファイルに既定のプロバイダー以外のプロファイル プロバイダーで管理されているプロパティが含まれている場合、その他のプロファイル プロバイダーのデータ ソースは検索されません。 既定のプロバイダー以外のプロファイル プロバイダーで管理されているプロファイルを検索するには、プロファイルを使用してプロバイダーへの参照を取得、<xref:System.Web.Profile.ProfileManager.Providers%2A>プロパティと呼び出し、<xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A>プロバイダーを直接のメソッド。  
  
   
  
## Examples  
 次のコード例は、すべての構成済みのプロファイルのプロファイル情報を表示します。`applicationName`します。  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/ShowProfiles2cs.aspx#6)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/ShowProfiles2vb.aspx#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllProfiles">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileInfoCollection GetAllProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Profile.ProfileInfoCollection GetAllProfiles(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.GetAllProfiles(System.Web.Profile.ProfileAuthenticationOption,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAllProfiles (authenticationOption As ProfileAuthenticationOption, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As ProfileInfoCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Profile::ProfileInfoCollection ^ GetAllProfiles(System::Web::Profile::ProfileAuthenticationOption authenticationOption, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberSignature Language="F#" Value="static member GetAllProfiles : System.Web.Profile.ProfileAuthenticationOption * int * int *  -&gt; System.Web.Profile.ProfileInfoCollection" Usage="System.Web.Profile.ProfileManager.GetAllProfiles (authenticationOption, pageIndex, pageSize, totalRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileInfoCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="authenticationOption">One of the <see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> enumeration values, specifying whether anonymous, authenticated, or both types of profiles are returned.</param>
        <param name="pageIndex">The index of the page of results to return. <c>pageIndex</c> is zero-based.</param>
        <param name="pageSize">The size of the page of results to return.</param>
        <param name="totalRecords">When this method returns, contains an integer that identifies the total number of profiles. This parameter is passed uninitialized.</param>
        <summary>Retrieves pages of user profile data.</summary>
        <returns>A <see cref="T:System.Web.Profile.ProfileInfoCollection" /> containing user profile information for all of the profiles in the data source.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Profile.ProfileManager.GetAllProfiles%2A>メソッドを使用してで指定されたアプリケーションのデータ ソースからプロファイル情報を取得、`applicationName`構成ファイル内の属性。 使用して、`authenticationOption`のみ匿名プロファイルするかどうかを指定するパラメーターは、プロファイル、または検索対象のすべてのプロファイルにのみ認証します。  
  
 によって返される結果<xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A>によって制限されます、`pageIndex`と`pageSize`パラメーター。 `pageSize`パラメーターの最大数を識別する<xref:System.Web.Profile.ProfileInfo>で返されるオブジェクト、<xref:System.Web.Profile.ProfileInfoCollection>します。 `pageIndex`パラメーターは、返される結果のページを識別します。 0 は最初のページを識別します。 `totalRecords`パラメーターは、`out`構成済みの非アクティブなユーザー プロファイルの合計数に設定されているパラメーター`applicationName`を基に、指定された`authenticationOption`します。 例では、構成済みの 13 人のユーザーがある場合`applicationName`、および`pageIndex`値は 1 つ、 `pageSize` 5 の場合、<xref:System.Web.Profile.ProfileInfoCollection>が返されるは 6 ~ 10 番目のプロファイルを含めることが。 `totalRecords`パラメーターを 13 に設定されます。  
  
 <xref:System.Web.Profile.ProfileManager.GetAllProfiles%2A>メソッドの呼び出し、<xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A>メソッドの既定のプロファイル プロバイダー。 使用して既定のプロファイル プロバイダーを指定、`defaultProvider`構成要素の属性です。 ユーザー プロファイルに既定のプロバイダー以外のプロファイル プロバイダーで管理されているプロパティが含まれている場合、その他のプロファイル プロバイダーのデータ ソースは検索されません。 既定のプロバイダー以外のプロファイル プロバイダーで管理されているプロファイルを検索するには、プロファイルを使用してプロバイダーへの参照を取得、<xref:System.Web.Profile.ProfileManager.Providers%2A>プロパティと呼び出し、<xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A>プロバイダーを直接のメソッド。  
  
   
  
## Examples  
 次のコード例は、すべての構成済みのプロファイルのプロファイル情報を表示します。`applicationName`ページのデータでします。  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/ShowProfilescs.aspx#3)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/ShowProfilesvb.aspx#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNumberOfInactiveProfiles">
      <MemberSignature Language="C#" Value="public static int GetNumberOfInactiveProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetNumberOfInactiveProfiles(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, valuetype System.DateTime userInactiveSinceDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.GetNumberOfInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNumberOfInactiveProfiles (authenticationOption As ProfileAuthenticationOption, userInactiveSinceDate As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetNumberOfInactiveProfiles(System::Web::Profile::ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate);" />
      <MemberSignature Language="F#" Value="static member GetNumberOfInactiveProfiles : System.Web.Profile.ProfileAuthenticationOption * DateTime -&gt; int" Usage="System.Web.Profile.ProfileManager.GetNumberOfInactiveProfiles (authenticationOption, userInactiveSinceDate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="userInactiveSinceDate" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="authenticationOption">One of the <see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> enumeration values, specifying whether anonymous, authenticated, or both types of profiles are returned.</param>
        <param name="userInactiveSinceDate">A <see cref="T:System.DateTime" /> object that identifies which user profiles are considered inactive. If the <see cref="P:System.Web.Profile.ProfileInfo.LastActivityDate" /> of a user profile occurs on or before this date and time, the profile is considered inactive.</param>
        <summary>Gets the number of profiles in which the last activity date occurred on or before the specified date.</summary>
        <returns>The number of profiles in the data source for which the last activity date occurred before the specified date and time.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Profile.ProfileManager.GetNumberOfInactiveProfiles%2A>メソッドを使用してで指定されたアプリケーションのデータ ソースからのすべての未使用のユーザー プロファイルの数を取得、`applicationName`構成ファイル内の属性。 使用して、`authenticationOption`のみ匿名プロファイルするかどうかを指定するパラメーターは、プロファイル、または検索対象のすべてのプロファイルにのみ認証します。 検索対象のプロファイルのすべてのプロファイルがカウントされますが、<xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A>または、指定する前に発生する`userInactiveSinceDate`パラメーターの値。  
  
   
  
## Examples  
 次のコード例を表示および検索条件に基づいてアクティブおよび非アクティブなプロファイルの情報を削除できます。 結果を使用して、非アクティブなプロファイルの数が表示されます、<xref:System.Web.Profile.ProfileManager.GetNumberOfInactiveProfiles%2A>メソッド。  
  
> [!IMPORTANT]
>  この例には、潜在的なセキュリティ上の脅威がユーザー入力を受け付けるテキスト ボックスが含まれています。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/FindProfilesByUserNamecs.aspx#5)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/FindProfilesByUserNamevb.aspx#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNumberOfProfiles">
      <MemberSignature Language="C#" Value="public static int GetNumberOfProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetNumberOfProfiles(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.GetNumberOfProfiles(System.Web.Profile.ProfileAuthenticationOption)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNumberOfProfiles (authenticationOption As ProfileAuthenticationOption) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetNumberOfProfiles(System::Web::Profile::ProfileAuthenticationOption authenticationOption);" />
      <MemberSignature Language="F#" Value="static member GetNumberOfProfiles : System.Web.Profile.ProfileAuthenticationOption -&gt; int" Usage="System.Web.Profile.ProfileManager.GetNumberOfProfiles authenticationOption" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
      </Parameters>
      <Docs>
        <param name="authenticationOption">One of the <see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> enumeration values, specifying whether anonymous, authenticated, or both types of profiles are returned.</param>
        <summary>Gets the number of profiles in the data source.</summary>
        <returns>The number of profiles in the data source.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Profile.ProfileManager.GetNumberOfProfiles%2A>メソッドを使用してで指定されたアプリケーションのデータ ソースからのすべてのユーザー プロファイルの数を取得、`applicationName`構成ファイル内の属性。 使用して、`authenticationOption`のみ匿名プロファイルするかどうかを指定するパラメーターは、プロファイル、または検索対象のすべてのプロファイルにのみ認証します。  
  
   
  
## Examples  
 次のコード例は、すべての構成済みのプロファイルのプロファイル情報を表示します。`applicationName`し、プロファイルの数を返します。  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/ShowProfiles2cs.aspx#6)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/ShowProfiles2vb.aspx#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileProvider Provider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.Profile.ProfileProvider Provider" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileManager.Provider" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Provider As ProfileProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::Profile::ProfileProvider ^ Provider { System::Web::Profile::ProfileProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Provider : System.Web.Profile.ProfileProvider" Usage="System.Web.Profile.ProfileManager.Provider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a reference to the default profile provider for the application.</summary>
        <value>アプリケーションの既定のプロファイル プロバイダー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Profile.ProfileManager.Provider%2A>プロパティでは、アプリケーションの既定のプロファイル プロバイダーを直接参照することができます。 これはよくないプロファイル プロバイダーのカスタムのメンバーにアクセスする使用の一部、<xref:System.Web.Profile.ProfileProvider>抽象基本クラス。  
  
   
  
## Examples  
 次のコード例では、既定のプロファイル プロバイダーのプロパティを示します。  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/Providercs.aspx#2)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/Providervb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">An attempt was made to get the <see cref="P:System.Web.Profile.ProfileManager.Provider" /> property value without at least <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" /> permission.</exception>
      </Docs>
    </Member>
    <Member MemberName="Providers">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileProviderCollection Providers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.Profile.ProfileProviderCollection Providers" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileManager.Providers" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Providers As ProfileProviderCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::Profile::ProfileProviderCollection ^ Providers { System::Web::Profile::ProfileProviderCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Providers : System.Web.Profile.ProfileProviderCollection" Usage="System.Web.Profile.ProfileManager.Providers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileProviderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a collection of the profile providers for the ASP.NET application.</summary>
        <value>A<see cref="T:System.Web.Profile.ProfileProviderCollection" />の ASP.NET アプリケーション用に構成されたプロファイル プロバイダー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Profile.ProfileManager.Providers%2A>マシンの構成で追加されたプロバイダーを含むプロパティは、すべてのアプリケーションに対して有効になっているプロファイル プロバイダーの参照、およびすべての Web.config ファイルでプロバイダーを追加します。 プロファイル プロバイダーは、構成ファイルでセクションの要素を使用して、アプリケーションの使用を制御できます。 たとえば、次の Web.config ファイルの親構成ファイルで指定されたプロファイル プロバイダーを削除し、追加します、<xref:System.Web.Profile.SqlProfileProvider>として、アプリケーションのプロファイル プロバイダーのインスタンス。  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="SqlServices" connectionString=  
      "Data Source=MySqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;" />  
  </connectionStrings>  
  <system.web>  
    <profile enabled="true" defaultProvider="SqlProvider">  
      <providers>  
        <clear />  
        <add name="SqlProvider"  
          type="System.Web.Profile.SqlProfileProvider"  
          connectionStringName="SqlServices"  
          applicationName="MyApplication" />  
      </providers>  
    </profile>  
  </system.web>  
</configuration>  
```  
  
 セクションを指定するときに設定して既定のプロバイダーを指定する必要があります、`defaultProvider`属性。 マシンの構成から値を使用する場合は、Web.config ファイルでセクションを指定しないと、および<xref:System.Web.Profile.SqlProfileProvider>AspNetSqlProvider という名前のインスタンスが既定のプロバイダーとして確立されています。  
  
 プロバイダーへの参照を厳密に型指定を取得することができます、<xref:System.Web.Profile.ProfileManager.Providers%2A>プロファイル プロバイダーを名前でインデックス作成し、目的の型としてキャストするコレクション。  
  
   
  
## Examples  
 次のコード例では、アプリケーションとそれらの種類に対して有効なプロバイダーが一覧表示します。  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/Providerscs.aspx#9)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/Providersvb.aspx#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">An attempt was made to get the <see cref="P:System.Web.Profile.ProfileManager.Providers" /> property value without at least <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" /> permission.</exception>
      </Docs>
    </Member>
  </Members>
</Type>