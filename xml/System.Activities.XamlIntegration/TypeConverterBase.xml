<Type Name="TypeConverterBase" FullName="System.Activities.XamlIntegration.TypeConverterBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="74b7b8a8061e36ec5301c764ed1184c8c7f482d5" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69345714" /></Metadata><TypeSignature Language="C#" Value="public abstract class TypeConverterBase : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TypeConverterBase extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Activities.XamlIntegration.TypeConverterBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TypeConverterBase&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeConverterBase abstract : System::ComponentModel::TypeConverter" />
  <TypeSignature Language="F#" Value="type TypeConverterBase = class&#xA;    inherit TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="a1c85-101">派生型のコンバーター クラスが、オブジェクトをさまざまな表現に変換したりその逆に変換したりするときに使用できるメソッドを提供します。</span><span class="sxs-lookup"><span data-stu-id="a1c85-101">Provides methods that derived type converter classes can use for converting objects to and from various representations.</span></span></summary>
    <remarks>To be added.</remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.XamlIntegration.TypeConverterBase.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberSignature Language="F#" Value="override this.CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="typeConverterBase.CanConvertFrom (context, sourceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="a1c85-102">変換に使用されるコンテキスト情報。</span><span class="sxs-lookup"><span data-stu-id="a1c85-102">Context information that is used for conversion.</span></span></param>
        <param name="sourceType"><span data-ttu-id="a1c85-103">変換前の型。</span><span class="sxs-lookup"><span data-stu-id="a1c85-103">The type to convert from.</span></span></param>
        <summary><span data-ttu-id="a1c85-104">派生クラスでオーバーライドされたとき、指定した型に変換できるかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="a1c85-104">When overridden in a derived class, determines whether the specified type can be converted from.</span></span></summary>
        <returns><span data-ttu-id="a1c85-105">指定した型を変換できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a1c85-105"><see langword="true" /> if the specified type can be converted from; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.XamlIntegration.TypeConverterBase.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="override this.CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="typeConverterBase.CanConvertTo (context, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="a1c85-106">変換に使用されるコンテキスト情報。</span><span class="sxs-lookup"><span data-stu-id="a1c85-106">Context information that is used for conversion.</span></span></param>
        <param name="destinationType"><span data-ttu-id="a1c85-107">変換後の型。</span><span class="sxs-lookup"><span data-stu-id="a1c85-107">The type to convert to.</span></span></param>
        <summary><span data-ttu-id="a1c85-108">派生クラスでオーバーライドされたとき、指定した型を変換できるかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="a1c85-108">When overridden in a derived class, determines whether the specified type can be converted to.</span></span></summary>
        <returns><span data-ttu-id="a1c85-109">指定した型を変換できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a1c85-109"><see langword="true" /> if the specified type can be converted to; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.XamlIntegration.TypeConverterBase.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj" Usage="typeConverterBase.ConvertFrom (context, culture, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="a1c85-110">変換に使用されるコンテキスト情報。</span><span class="sxs-lookup"><span data-stu-id="a1c85-110">Context information that is used for conversion.</span></span></param>
        <param name="culture"><span data-ttu-id="a1c85-111">オプションの <see cref="T:System.Globalization.CultureInfo" />。</span><span class="sxs-lookup"><span data-stu-id="a1c85-111">An optional <see cref="T:System.Globalization.CultureInfo" />.</span></span> <span data-ttu-id="a1c85-112">指定されなかった場合は、現在のカルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="a1c85-112">If not supplied, the current culture is assumed.</span></span></param>
        <param name="value"><span data-ttu-id="a1c85-113">変換対象のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="a1c85-113">The object to convert.</span></span></param>
        <summary><span data-ttu-id="a1c85-114">派生クラスでオーバーライドされたとき、指定した値を派生クラスで指定された新しい表現に変換します。</span><span class="sxs-lookup"><span data-stu-id="a1c85-114">When overridden in a derived class, converts the specified value to a new representation specified by the derived class.</span></span></summary>
        <returns><span data-ttu-id="a1c85-115">変換された値。</span><span class="sxs-lookup"><span data-stu-id="a1c85-115">The converted value.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.XamlIntegration.TypeConverterBase.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="override this.ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj" Usage="typeConverterBase.ConvertTo (context, culture, value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="a1c85-116">変換に使用されるコンテキスト情報。</span><span class="sxs-lookup"><span data-stu-id="a1c85-116">Context information that is used for conversion.</span></span></param>
        <param name="culture"><span data-ttu-id="a1c85-117">オプションの <see cref="T:System.Globalization.CultureInfo" />。</span><span class="sxs-lookup"><span data-stu-id="a1c85-117">An optional <see cref="T:System.Globalization.CultureInfo" />.</span></span> <span data-ttu-id="a1c85-118">指定されなかった場合は、現在のカルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="a1c85-118">If not supplied, the current culture is assumed.</span></span></param>
        <param name="value"><span data-ttu-id="a1c85-119">変換対象のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="a1c85-119">The object to convert.</span></span></param>
        <param name="destinationType"><span data-ttu-id="a1c85-120">変換後の型。</span><span class="sxs-lookup"><span data-stu-id="a1c85-120">The type to convert to.</span></span></param>
        <summary><span data-ttu-id="a1c85-121">派生クラスでオーバーライドされた場合、指定した値を指定した表現に変換します。</span><span class="sxs-lookup"><span data-stu-id="a1c85-121">When overridden in a derived class, converts the specified value to the specified representation.</span></span></summary>
        <returns><span data-ttu-id="a1c85-122">変換された値。</span><span class="sxs-lookup"><span data-stu-id="a1c85-122">The converted value.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>
