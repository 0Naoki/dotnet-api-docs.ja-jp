<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CaptureCollection.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac59d47c91b9b18202223de4773ff3948c6ed45bcae.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9d47c91b9b18202223de4773ff3948c6ed45bcae</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Text.RegularExpressions.CaptureCollection">
          <source>Represents the set of captures made by a single capturing group.</source>
          <target state="translated">単一キャプチャ グループによるキャプチャのセットを表します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.CaptureCollection">
          <source>The collection is immutable (read-only) and has no public constructor.</source>
          <target state="translated">コレクションは変更不可 (読み取り専用) のパブリック コンス トラクターはありません。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.CaptureCollection">
          <source>The <ph id="ph1">&lt;xref:System.Text.RegularExpressions.CaptureCollection&gt;</ph> object contains one or more <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Capture&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.RegularExpressions.CaptureCollection&gt;</ph>オブジェクトは、1 つ以上含まれています。<ph id="ph2">&lt;xref:System.Text.RegularExpressions.Capture&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.CaptureCollection">
          <source>Instances of the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.CaptureCollection&gt;</ph> class are returned by the following properties:</source>
          <target state="translated">インスタンス、<ph id="ph1">&lt;xref:System.Text.RegularExpressions.CaptureCollection&gt;</ph>クラスは、次のプロパティによって返されます。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.CaptureCollection">
          <source>The <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Group.Captures%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.RegularExpressions.Group.Captures%2A?displayProperty=nameWithType&gt;</ph> プロパティ。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.CaptureCollection">
          <source>Each member of the collection represents a substring captured by a capturing group.</source>
          <target state="translated">コレクションの各メンバーは、キャプチャ グループによってキャプチャされた部分文字列を表します。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.CaptureCollection">
          <source>If a quantifier is not applied to a capturing group, the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.CaptureCollection&gt;</ph> includes a single <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Capture&gt;</ph> object that represents the same captured substring as the <ph id="ph3">&lt;xref:System.Text.RegularExpressions.Group&gt;</ph> object.</source>
          <target state="translated">量指定子がキャプチャ グループに適用されていない場合、 <ph id="ph1">&lt;xref:System.Text.RegularExpressions.CaptureCollection&gt;</ph> 、1 つが含まれています<ph id="ph2">&lt;xref:System.Text.RegularExpressions.Capture&gt;</ph>キャプチャされた部分文字列としての同じを表すオブジェクト、<ph id="ph3">&lt;xref:System.Text.RegularExpressions.Group&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.CaptureCollection">
          <source>If a quantifier is applied to a capturing group, the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.CaptureCollection&gt;</ph> includes one <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Capture&gt;</ph> object for each captured substring, and the <ph id="ph3">&lt;xref:System.Text.RegularExpressions.Group&gt;</ph> object provides information only about the last captured substring.</source>
          <target state="translated">量指定子がキャプチャ グループに適用されている場合、<ph id="ph1">&lt;xref:System.Text.RegularExpressions.CaptureCollection&gt;</ph>いずれかが含まれています<ph id="ph2">&lt;xref:System.Text.RegularExpressions.Capture&gt;</ph>ごとにオブジェクトが、部分文字列をキャプチャし、<ph id="ph3">&lt;xref:System.Text.RegularExpressions.Group&gt;</ph>オブジェクトに関する情報のみをキャプチャされた最後の部分文字列を提供します。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.CaptureCollection">
          <source>The <ph id="ph1">`Match.Captures`</ph> property.</source>
          <target state="translated"><ph id="ph1">`Match.Captures`</ph> プロパティ。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.CaptureCollection">
          <source>In this case, the collection consists of a single <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Capture&gt;</ph> object that provides information about the match as a whole.</source>
          <target state="translated">ここでは、コレクションから成る、1 つ<ph id="ph1">&lt;xref:System.Text.RegularExpressions.Capture&gt;</ph>全体としては、一致に関する情報を提供するオブジェクト。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.CaptureCollection">
          <source>That is, the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.CaptureCollection&gt;</ph> object provides the same information as the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Match&gt;</ph> object.</source>
          <target state="translated">つまり、<ph id="ph1">&lt;xref:System.Text.RegularExpressions.CaptureCollection&gt;</ph>オブジェクトと同じ情報を提供する、<ph id="ph2">&lt;xref:System.Text.RegularExpressions.Match&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.CaptureCollection">
          <source>To iterate through the members of the collection, you should use the collection iteration construct provided by your language (such as <ph id="ph1">`foreach`</ph> in C# and <ph id="ph2">`For Each`</ph>…<ph id="ph3">`Next`</ph></source>
          <target state="translated">コレクションのメンバーを反復処理には、言語によって提供されるコレクションのイテレーション構文を使用する必要があります (など<ph id="ph1">`foreach`</ph>C# の場合と<ph id="ph2">`For Each`</ph>.<ph id="ph3">`Next`</ph></target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.CaptureCollection">
          <source>in Visual Basic) instead of retrieving the enumerator that is returned by the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.CaptureCollection.GetEnumerator%2A&gt;</ph> method.</source>
          <target state="translated">Visual basic) によって返される列挙子を取得する代わりに、<ph id="ph1">&lt;xref:System.Text.RegularExpressions.CaptureCollection.GetEnumerator%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.CaptureCollection">
          <source>The following example compares the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Capture&gt;</ph> objects in the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.CaptureCollection&gt;</ph> object returned by the <ph id="ph3">&lt;xref:System.Text.RegularExpressions.Group.Captures%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph4">`Match.Captures`</ph> properties.</source>
          <target state="translated">次の例を比較して、<ph id="ph1">&lt;xref:System.Text.RegularExpressions.Capture&gt;</ph>内のオブジェクト、<ph id="ph2">&lt;xref:System.Text.RegularExpressions.CaptureCollection&gt;</ph>によって返されるオブジェクト、<ph id="ph3">&lt;xref:System.Text.RegularExpressions.Group.Captures%2A?displayProperty=nameWithType&gt;</ph>と<ph id="ph4">`Match.Captures`</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.CaptureCollection">
          <source>It also compares <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Group&gt;</ph> objects with the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Capture&gt;</ph> objects in the <ph id="ph3">&lt;xref:System.Text.RegularExpressions.CaptureCollection&gt;</ph> returned by the <ph id="ph4">&lt;xref:System.Text.RegularExpressions.Group.Captures%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">比較<ph id="ph1">&lt;xref:System.Text.RegularExpressions.Group&gt;</ph>オブジェクトと、<ph id="ph2">&lt;xref:System.Text.RegularExpressions.Capture&gt;</ph>内のオブジェクト、<ph id="ph3">&lt;xref:System.Text.RegularExpressions.CaptureCollection&gt;</ph>によって返される、<ph id="ph4">&lt;xref:System.Text.RegularExpressions.Group.Captures%2A?displayProperty=nameWithType&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.CaptureCollection">
          <source>The example uses the following two regular expressions to find matches in a single input string:</source>
          <target state="translated">この例では、次の 2 つの正規表現を使用して、1 つの入力文字列内の一致を検索します。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.CaptureCollection">
          <source>This regular expression pattern identifies a word that consists of one or more word characters, followed by either one or two non-word characters such as white space or punctuation.</source>
          <target state="translated">この正規表現パターンでは、空白や句読点など、1 つまたは 2 個の単語以外の文字が続き、1 つ以上の単語文字で構成されている単語を識別します。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.CaptureCollection">
          <source>The regular expression does not include any capturing groups.</source>
          <target state="translated">正規表現では、すべてのキャプチャ グループは含まれません。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.CaptureCollection">
          <source>The output from the example shows that both the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Match&gt;</ph> object and the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.CaptureCollection&gt;</ph> objects returned by the <ph id="ph3">&lt;xref:System.Text.RegularExpressions.Group.Captures%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph4">`Match.Captures`</ph> properties contain information about the same match.</source>
          <target state="translated">例からの出力を示しています両方、<ph id="ph1">&lt;xref:System.Text.RegularExpressions.Match&gt;</ph>オブジェクトおよび<ph id="ph2">&lt;xref:System.Text.RegularExpressions.CaptureCollection&gt;</ph>によって返されるオブジェクト、<ph id="ph3">&lt;xref:System.Text.RegularExpressions.Group.Captures%2A?displayProperty=nameWithType&gt;</ph>と<ph id="ph4">`Match.Captures`</ph>プロパティが同じ一致に関する情報が含まれます。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.CaptureCollection">
          <source>This regular expression pattern identifies the words in a sentence.</source>
          <target state="translated">この正規表現パターンが文の単語を識別します。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.CaptureCollection">
          <source>The pattern defines a single capturing group that consists of one or more word characters followed by one or two non-word characters.</source>
          <target state="translated">パターンは、1 つまたは 2 つの単語に使用されない文字が続き、1 つまたは複数の単語文字で構成される単一のキャプチャ グループを定義します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.CaptureCollection">
          <source>The regular expression pattern uses the <ph id="ph1">`+`</ph> quantifier to match one or more occurrences of this group.</source>
          <target state="translated">正規表現パターンを使用して、<ph id="ph1">`+`</ph>量指定子をこのグループの 1 つ以上の出現と一致します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.CaptureCollection">
          <source>The output from this example shows that the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Match&gt;</ph> object and the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.CaptureCollection&gt;</ph> object returned by the <ph id="ph3">`Match.Captures`</ph> property contain information about the same match.</source>
          <target state="translated">この例の出力を示しています、<ph id="ph1">&lt;xref:System.Text.RegularExpressions.Match&gt;</ph>オブジェクトおよび<ph id="ph2">&lt;xref:System.Text.RegularExpressions.CaptureCollection&gt;</ph>によって返されるオブジェクト、<ph id="ph3">`Match.Captures`</ph>プロパティには、同じ一致に関する情報が含まれています。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.CaptureCollection">
          <source>The second <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Group&gt;</ph> object, which corresponds to the only capturing group in the regular expression, identifies only the last captured string, whereas the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.CaptureCollection&gt;</ph> object returned by the first capturing group's <ph id="ph3">&lt;xref:System.Text.RegularExpressions.Group.Captures%2A?displayProperty=nameWithType&gt;</ph> property includes all captured substrings.</source>
          <target state="translated">2 番目<ph id="ph1">&lt;xref:System.Text.RegularExpressions.Group&gt;</ph>、正規表現の唯一のキャプチャ グループに対応するオブジェクトを識別だけで、最後に、文字列がキャプチャされた一方、<ph id="ph2">&lt;xref:System.Text.RegularExpressions.CaptureCollection&gt;</ph>最初のキャプチャ グループによって返されるオブジェクト<ph id="ph3">&lt;xref:System.Text.RegularExpressions.Group.Captures%2A?displayProperty=nameWithType&gt;</ph>プロパティには、すべてが含まれていますキャプチャした部分文字列。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.CaptureCollection.CopyTo(System.Array,System.Int32)">
          <source>The array the collection is to be copied into.</source>
          <target state="translated">コレクションのコピー先の配列。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.CaptureCollection.CopyTo(System.Array,System.Int32)">
          <source>The position in the destination array where copying is to begin.</source>
          <target state="translated">コピー先の配列内のコピー開始位置。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.CaptureCollection.CopyTo(System.Array,System.Int32)">
          <source>Copies all the elements of the collection to the given array beginning at the given index.</source>
          <target state="translated">指定したインデックスを開始位置として、指定した配列にコレクションのすべての要素をコピーします。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.CaptureCollection.CopyTo(System.Array,System.Int32)">
          <source>Because the entire collection is copied into the array starting at the given index, the destination array must be at least as large as the collection.</source>
          <target state="translated">全体のコレクションは、指定したインデックスから始まる配列にコピーされる、ために、コピー先の配列は、コレクションと少なくとも同じサイズでなければなりません。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.CaptureCollection.CopyTo(System.Array,System.Int32)">
          <source>This member is not present in the <ph id="ph1">[!INCLUDE[net_portable](~/includes/net-portable-md.md)]</ph>.</source>
          <target state="translated">このメンバーは、<ph id="ph1">[!INCLUDE[net_portable](~/includes/net-portable-md.md)]</ph>です。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.CaptureCollection.CopyTo(System.Array,System.Int32)">
          <source>If you are developing applications that target the <ph id="ph1">[!INCLUDE[net_portable](~/includes/net-portable-md.md)]</ph>, use the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.CaptureCollection.System%23Collections%23ICollection%23CopyTo%2A?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">対象とするアプリケーションを開発する場合、<ph id="ph1">[!INCLUDE[net_portable](~/includes/net-portable-md.md)]</ph>を使用して、<ph id="ph2">&lt;xref:System.Text.RegularExpressions.CaptureCollection.System%23Collections%23ICollection%23CopyTo%2A?displayProperty=nameWithType&gt;</ph>メソッド代わりにします。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.CaptureCollection.CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.CaptureCollection.CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="arrayIndex" /&gt;</ph> is outside the bounds of <ph id="ph2">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="arrayIndex" /&gt;</ph> が <ph id="ph2">&lt;paramref name="array" /&gt;</ph> の境界の外側にあります。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.CaptureCollection.CopyTo(System.Array,System.Int32)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.CaptureCollection.CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="arrayIndex" /&gt;</ph> plus <ph id="ph2">&lt;see cref="P:System.Text.RegularExpressions.CaptureCollection.Count" /&gt;</ph> is outside the bounds of <ph id="ph3">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="arrayIndex" /&gt;</ph> に <ph id="ph2">&lt;see cref="P:System.Text.RegularExpressions.CaptureCollection.Count" /&gt;</ph> を加えた値が <ph id="ph3">&lt;paramref name="array" /&gt;</ph> の境界の外側にあります。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="P:System.Text.RegularExpressions.CaptureCollection.Count">
          <source>Gets the number of substrings captured by the group.</source>
          <target state="translated">グループによってキャプチャされた部分文字列の数を取得します。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.CaptureCollection.Count">
          <source>The number of items in the <ph id="ph1">&lt;see cref="T:System.Text.RegularExpressions.CaptureCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Text.RegularExpressions.CaptureCollection" /&gt;</ph> 内の項目数。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.CaptureCollection.GetEnumerator">
          <source>Provides an enumerator that iterates through the collection.</source>
          <target state="translated">コレクションを反復処理する列挙子を提供します。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.CaptureCollection.GetEnumerator">
          <source>An object that contains all <ph id="ph1">&lt;see cref="T:System.Text.RegularExpressions.Capture" /&gt;</ph> objects within the <ph id="ph2">&lt;see cref="T:System.Text.RegularExpressions.CaptureCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Text.RegularExpressions.Capture" /&gt;</ph> 内にあるすべての <ph id="ph2">&lt;see cref="T:System.Text.RegularExpressions.CaptureCollection" /&gt;</ph> オブジェクトを格納しているオブジェクト。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.CaptureCollection.GetEnumerator">
          <source>Instead of calling the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.GroupCollection.GetEnumerator%2A&gt;</ph> method to retrieve an enumerator that lets you iterate through the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Group&gt;</ph> objects in the collection, you should use the group iteration construct (such as <ph id="ph3">`foreach`</ph> in C# and <ph id="ph4">`For Each`</ph>…<ph id="ph5">`Next`</ph></source>
          <target state="translated">呼び出す代わりに、<ph id="ph1">&lt;xref:System.Text.RegularExpressions.GroupCollection.GetEnumerator%2A&gt;</ph>を反復処理できる列挙子を取得する方法を<ph id="ph2">&lt;xref:System.Text.RegularExpressions.Group&gt;</ph>グループ イテレーション構文を使用する必要があります、コレクション内のオブジェクト (など<ph id="ph3">`foreach`</ph>C# の場合と<ph id="ph4">`For Each`</ph>.<ph id="ph5">`Next`</ph></target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.CaptureCollection.GetEnumerator">
          <source>in Visual Basic) that is provided by your programming language.</source>
          <target state="translated">Visual Basic) ではによって提供される、プログラミング言語です。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="P:System.Text.RegularExpressions.CaptureCollection.IsReadOnly">
          <source>Gets a value that indicates whether the collection is read only.</source>
          <target state="translated">コレクションが読み取り専用かどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.CaptureCollection.IsReadOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> in all cases.</source>
          <target state="translated">常に <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="P:System.Text.RegularExpressions.CaptureCollection.IsSynchronized">
          <source>Gets a value that indicates whether access to the collection is synchronized (thread-safe).</source>
          <target state="translated">コレクションへのアクセスが同期されている (スレッド セーフである) かどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.CaptureCollection.IsSynchronized">
          <source><ph id="ph1">&lt;see langword="false" /&gt;</ph> in all cases.</source>
          <target state="translated">常に <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.CaptureCollection.IsSynchronized">
          <source>This member is not present in the <ph id="ph1">[!INCLUDE[net_portable](~/includes/net-portable-md.md)]</ph>.</source>
          <target state="translated">このメンバーは、<ph id="ph1">[!INCLUDE[net_portable](~/includes/net-portable-md.md)]</ph>です。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.CaptureCollection.IsSynchronized">
          <source>If you are developing applications that target the <ph id="ph1">[!INCLUDE[net_portable](~/includes/net-portable-md.md)]</ph>, use the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.CaptureCollection.System%23Collections%23ICollection%23IsSynchronized%2A?displayProperty=nameWithType&gt;</ph> property instead.</source>
          <target state="translated">対象とするアプリケーションを開発する場合、<ph id="ph1">[!INCLUDE[net_portable](~/includes/net-portable-md.md)]</ph>を使用して、<ph id="ph2">&lt;xref:System.Text.RegularExpressions.CaptureCollection.System%23Collections%23ICollection%23IsSynchronized%2A?displayProperty=nameWithType&gt;</ph>プロパティ代わりにします。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="P:System.Text.RegularExpressions.CaptureCollection.Item(System.Int32)">
          <source>Index into the capture collection.</source>
          <target state="translated">キャプチャ コレクション内のインデックス。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="P:System.Text.RegularExpressions.CaptureCollection.Item(System.Int32)">
          <source>Gets an individual member of the collection.</source>
          <target state="translated">コレクションの個別のメンバーを取得します。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.CaptureCollection.Item(System.Int32)">
          <source>The captured substring at position <ph id="ph1">&lt;paramref name="i" /&gt;</ph> in the collection.</source>
          <target state="translated">コレクション内の <ph id="ph1">&lt;paramref name="i" /&gt;</ph> の位置にあるキャプチャされた部分文字列。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="P:System.Text.RegularExpressions.CaptureCollection.Item(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="i" /&gt;</ph> is less than 0 or greater than <ph id="ph2">&lt;see cref="P:System.Text.RegularExpressions.CaptureCollection.Count" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="i" /&gt;</ph> が 0 未満であるか、または <ph id="ph2">&lt;see cref="P:System.Text.RegularExpressions.CaptureCollection.Count" /&gt;</ph> を超えています。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="P:System.Text.RegularExpressions.CaptureCollection.SyncRoot">
          <source>Gets an object that can be used to synchronize access to the collection.</source>
          <target state="translated">コレクションへのアクセスを同期するために使用できるオブジェクトを取得します。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.CaptureCollection.SyncRoot">
          <source>An object that can be used to synchronize access to the collection.</source>
          <target state="translated">コレクションへのアクセスを同期するために使用できるオブジェクト。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.CaptureCollection.SyncRoot">
          <source>This member is not present in the <ph id="ph1">[!INCLUDE[net_portable](~/includes/net-portable-md.md)]</ph>.</source>
          <target state="translated">このメンバーは、<ph id="ph1">[!INCLUDE[net_portable](~/includes/net-portable-md.md)]</ph>です。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.CaptureCollection.SyncRoot">
          <source>If you are developing applications that target the <ph id="ph1">[!INCLUDE[net_portable](~/includes/net-portable-md.md)]</ph>, use the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.CaptureCollection.System%23Collections%23ICollection%23SyncRoot%2A?displayProperty=nameWithType&gt;</ph> property instead.</source>
          <target state="translated">対象とするアプリケーションを開発する場合、<ph id="ph1">[!INCLUDE[net_portable](~/includes/net-portable-md.md)]</ph>を使用して、<ph id="ph2">&lt;xref:System.Text.RegularExpressions.CaptureCollection.System%23Collections%23ICollection%23SyncRoot%2A?displayProperty=nameWithType&gt;</ph>プロパティ代わりにします。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>