<Type Name="Capture" FullName="System.Text.RegularExpressions.Capture">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d9337200d039e74473b4b83c4e01cc0007507689" /><Meta Name="ms.sourcegitcommit" Value="d40b35262cbc997b79bf76da3a39ccf59b738efc" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/05/2018" /><Meta Name="ms.locfileid" Value="52911547" /></Metadata><TypeSignature Language="C#" Value="public class Capture" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Capture extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Text.RegularExpressions.Capture" />
  <TypeSignature Language="VB.NET" Value="Public Class Capture" />
  <TypeSignature Language="C++ CLI" Value="public ref class Capture" />
  <TypeSignature Language="F#" Value="type Capture = class" />
  <AssemblyInfo>
    <AssemblyName>System.Text.RegularExpressions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="4dfdf-101">正常にマッチした単一部分式キャプチャの結果を表します。</span><span class="sxs-lookup"><span data-stu-id="4dfdf-101">Represents the results from a single successful subexpression capture.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4dfdf-102">A<xref:System.Text.RegularExpressions.Capture>オブジェクトは不変でありパブリック コンス トラクターがありません。</span><span class="sxs-lookup"><span data-stu-id="4dfdf-102">A <xref:System.Text.RegularExpressions.Capture> object is immutable and has no public constructor.</span></span> <span data-ttu-id="4dfdf-103">インスタンスは、<xref:System.Text.RegularExpressions.CaptureCollection>によって返される、オブジェクト、`Match.Captures`と<xref:System.Text.RegularExpressions.Group.Captures%2A?displayProperty=nameWithType>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="4dfdf-103">Instances are returned through the <xref:System.Text.RegularExpressions.CaptureCollection> object, which is returned by the `Match.Captures` and <xref:System.Text.RegularExpressions.Group.Captures%2A?displayProperty=nameWithType> properties.</span></span> <span data-ttu-id="4dfdf-104">ただし、`Match.Captures`プロパティとして同じ一致に関する情報を提供する、<xref:System.Text.RegularExpressions.Match>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="4dfdf-104">However, the `Match.Captures` property provides information about the same match as the <xref:System.Text.RegularExpressions.Match> object.</span></span>  
  
 <span data-ttu-id="4dfdf-105">キャプチャ グループには、量指定子は該当しない場合、<xref:System.Text.RegularExpressions.Group.Captures%2A?displayProperty=nameWithType>プロパティが返す、<xref:System.Text.RegularExpressions.CaptureCollection>を 1 つの<xref:System.Text.RegularExpressions.Capture>として同じキャプチャについての情報を提供するオブジェクト、<xref:System.Text.RegularExpressions.Group>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="4dfdf-105">If you do not apply a quantifier to a capturing group, the <xref:System.Text.RegularExpressions.Group.Captures%2A?displayProperty=nameWithType> property returns a <xref:System.Text.RegularExpressions.CaptureCollection> with a single <xref:System.Text.RegularExpressions.Capture> object that provides information about the same capture as the <xref:System.Text.RegularExpressions.Group> object.</span></span> <span data-ttu-id="4dfdf-106">量指定子、キャプチャ グループに適用する場合、 `Group.Index`、 `Group.Length`、および`Group.Value`プロパティは、一方にのみ、最後のキャプチャされたグループに関する情報を提供、<xref:System.Text.RegularExpressions.Capture>内のオブジェクト、<xref:System.Text.RegularExpressions.CaptureCollection>すべてに関する情報を提供部分式をキャプチャします。</span><span class="sxs-lookup"><span data-stu-id="4dfdf-106">If you do apply a quantifier to a capturing group, the `Group.Index`, `Group.Length`, and `Group.Value` properties provide information only about the last captured group, whereas the <xref:System.Text.RegularExpressions.Capture> objects in the <xref:System.Text.RegularExpressions.CaptureCollection> provide information about all subexpression captures.</span></span> <span data-ttu-id="4dfdf-107">具体的な例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="4dfdf-107">The example provides an illustration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4dfdf-108">次の例では、ピリオドを除く句読点を含まない文に一致する正規表現を定義します (".")。</span><span class="sxs-lookup"><span data-stu-id="4dfdf-108">The following example defines a regular expression that matches sentences that contain no punctuation except for a period (".").</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Capture.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.capture.class/cs/example1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Capture.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.capture.class/vb/example1.vb#1)]  
  
 <span data-ttu-id="4dfdf-109">正規表現パターン `((\w+)[\s.])+` は、次の表に示すように定義されています。</span><span class="sxs-lookup"><span data-stu-id="4dfdf-109">The regular expression pattern `((\w+)[\s.])+` is defined as shown in the following table.</span></span> <span data-ttu-id="4dfdf-110">この正規表現、量指定子 (+) は正規表現全体に適用されますに注意してください。</span><span class="sxs-lookup"><span data-stu-id="4dfdf-110">Note that in this regular expression, a quantifier (+) is applied to the entire regular expression.</span></span>  
  
|<span data-ttu-id="4dfdf-111">パターン</span><span class="sxs-lookup"><span data-stu-id="4dfdf-111">Pattern</span></span>|<span data-ttu-id="4dfdf-112">説明</span><span class="sxs-lookup"><span data-stu-id="4dfdf-112">Description</span></span>|  
|-------------|-----------------|  
|`(\w+)`|<span data-ttu-id="4dfdf-113">1 つ以上の単語文字に一致します。</span><span class="sxs-lookup"><span data-stu-id="4dfdf-113">Match one or more word characters.</span></span> <span data-ttu-id="4dfdf-114">これが 2 番目のキャプチャ グループです。</span><span class="sxs-lookup"><span data-stu-id="4dfdf-114">This is the second capturing group.</span></span>|  
|`[\s.])`|<span data-ttu-id="4dfdf-115">一致の空白文字またはピリオド (".")。</span><span class="sxs-lookup"><span data-stu-id="4dfdf-115">Match a white-space character or period (".").</span></span>|  
|`((\w+)[\s.])`|<span data-ttu-id="4dfdf-116">空白文字またはピリオドが続く 1 つまたは複数の単語文字に一致 (".")。</span><span class="sxs-lookup"><span data-stu-id="4dfdf-116">Match one or more word characters followed by a white-space character or period (".").</span></span> <span data-ttu-id="4dfdf-117">これが最初のキャプチャ グループです。</span><span class="sxs-lookup"><span data-stu-id="4dfdf-117">This is the first capturing group.</span></span>|  
|`((\w+)[\s.])+`|<span data-ttu-id="4dfdf-118">単語文字または文字の後に空白文字またはピリオドの 1 つまたは複数回の出現に一致 (".")。</span><span class="sxs-lookup"><span data-stu-id="4dfdf-118">Match one or more occurrences of a word character or characters followed by a white-space character or period (".").</span></span>|  
  
 <span data-ttu-id="4dfdf-119">この例では 2 つの文の入力文字列で構成されます。</span><span class="sxs-lookup"><span data-stu-id="4dfdf-119">In this example, the input string consists of two sentences.</span></span> <span data-ttu-id="4dfdf-120">最初の文から成る 1 つだけの word では、出力をそのため、<xref:System.Text.RegularExpressions.CaptureCollection>オブジェクトには、1 つ<xref:System.Text.RegularExpressions.Capture>と同じキャプチャを表すオブジェクトを<xref:System.Text.RegularExpressions.Group>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="4dfdf-120">As the output shows, the first sentence consists of only one word, so the <xref:System.Text.RegularExpressions.CaptureCollection> object has a single <xref:System.Text.RegularExpressions.Capture> object that represents the same capture as the <xref:System.Text.RegularExpressions.Group> object.</span></span> <span data-ttu-id="4dfdf-121">2 番目の文は、複数の単語で構成されていますので、<xref:System.Text.RegularExpressions.Group>オブジェクトには、最後の一致した部分式に関する情報にはのみが含まれています。</span><span class="sxs-lookup"><span data-stu-id="4dfdf-121">The second sentence consists of multiple words, so the <xref:System.Text.RegularExpressions.Group> objects only contain information about the last matched subexpression.</span></span> <span data-ttu-id="4dfdf-122">グループ 1、最初のキャプチャを表すには、期間は終了する文の最後の単語が含まれています。</span><span class="sxs-lookup"><span data-stu-id="4dfdf-122">Group 1, which represents the first capture, contains the last word in the sentence that has a closing period.</span></span> <span data-ttu-id="4dfdf-123">グループ 2、2 番目のキャプチャを表すには、対象の文の最後の単語が含まれています。</span><span class="sxs-lookup"><span data-stu-id="4dfdf-123">Group 2, which represents the second capture, contains the last word in the sentence.</span></span> <span data-ttu-id="4dfdf-124">ただし、<xref:System.Text.RegularExpressions.Capture>グループのオブジェクト<xref:System.Text.RegularExpressions.CaptureCollection>オブジェクトは、各一致文字列の部分式をキャプチャします。</span><span class="sxs-lookup"><span data-stu-id="4dfdf-124">However, the <xref:System.Text.RegularExpressions.Capture> objects in the group's <xref:System.Text.RegularExpressions.CaptureCollection> object capture each subexpression match.</span></span> <span data-ttu-id="4dfdf-125"><xref:System.Text.RegularExpressions.Capture>キャプチャの最初のキャプチャ グループのコレクション内のオブジェクトには、各キャプチャされた単語および空白文字または期間に関する情報が含まれています。</span><span class="sxs-lookup"><span data-stu-id="4dfdf-125">The <xref:System.Text.RegularExpressions.Capture> objects in the first capturing group's collection of captures contain information about each captured word and white-space character or period.</span></span> <span data-ttu-id="4dfdf-126"><xref:System.Text.RegularExpressions.Capture>キャプチャの 2 番目のキャプチャ グループのコレクション内のオブジェクトには、キャプチャされた各単語についての情報が含まれています。</span><span class="sxs-lookup"><span data-stu-id="4dfdf-126">The <xref:System.Text.RegularExpressions.Capture> objects in the second capturing group's collection of captures contain information about each captured word.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Text.RegularExpressions.CaptureCollection" />
  </Docs>
  <Members>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public int Index { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Index" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.Capture.Index" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Index As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Index { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Index : int" Usage="System.Text.RegularExpressions.Capture.Index" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4dfdf-127">キャプチャした部分文字列の最初の文字が見つかる元の文字列内の位置。</span><span class="sxs-lookup"><span data-stu-id="4dfdf-127">The position in the original string where the first character of the captured substring is found.</span></span></summary>
        <value><span data-ttu-id="4dfdf-128">キャプチャした部分文字列が見つかった元の文字列内の開始位置を示す 0 から始まる数値。</span><span class="sxs-lookup"><span data-stu-id="4dfdf-128">The zero-based starting position in the original string where the captured substring is found.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public int Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Length" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.Capture.Length" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Length As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Length { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int" Usage="System.Text.RegularExpressions.Capture.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4dfdf-129">キャプチャした部分文字列の長さを取得します。</span><span class="sxs-lookup"><span data-stu-id="4dfdf-129">Gets the length of the captured substring.</span></span></summary>
        <value><span data-ttu-id="4dfdf-130">キャプチャした部分文字列の長さ。</span><span class="sxs-lookup"><span data-stu-id="4dfdf-130">The length of the captured substring.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Capture.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="capture.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4dfdf-131"><see cref="P:System.Text.RegularExpressions.Capture.Value" /> プロパティを呼び出して、入力文字列からキャプチャされた部分文字列を取得します。</span><span class="sxs-lookup"><span data-stu-id="4dfdf-131">Retrieves the captured substring from the input string by calling the <see cref="P:System.Text.RegularExpressions.Capture.Value" /> property.</span></span></summary>
        <returns><span data-ttu-id="4dfdf-132">検索によってキャプチャされた部分文字列。</span><span class="sxs-lookup"><span data-stu-id="4dfdf-132">The substring that was captured by the match.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4dfdf-133">`ToString` 内部的な呼び出しを実際には、<xref:System.Text.RegularExpressions.Capture.Value%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="4dfdf-133">`ToString` is actually an internal call to the <xref:System.Text.RegularExpressions.Capture.Value%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.Capture.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Value { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : string" Usage="System.Text.RegularExpressions.Capture.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4dfdf-134">入力文字列からキャプチャした部分文字列を取得します。</span><span class="sxs-lookup"><span data-stu-id="4dfdf-134">Gets the captured substring from the input string.</span></span></summary>
        <value><span data-ttu-id="4dfdf-135">検索によってキャプチャされた部分文字列。</span><span class="sxs-lookup"><span data-stu-id="4dfdf-135">The substring that is captured by the match.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4dfdf-136">呼び出し、<xref:System.Text.RegularExpressions.Regex.Match%2A?displayProperty=nameWithType>または<xref:System.Text.RegularExpressions.Match.NextMatch%2A?displayProperty=nameWithType>、返された値の一致を検索するメソッドが失敗した`Match.Value`プロパティは<xref:System.String.Empty?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="4dfdf-136">If a call to the <xref:System.Text.RegularExpressions.Regex.Match%2A?displayProperty=nameWithType> or <xref:System.Text.RegularExpressions.Match.NextMatch%2A?displayProperty=nameWithType> method fails to find a match, the value of the returned `Match.Value` property is <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="4dfdf-137">場合は、正規表現エンジンは、キャプチャ グループと一致することです。</span><span class="sxs-lookup"><span data-stu-id="4dfdf-137">If the regular expression engine is unable to match a capturing group.</span></span> <span data-ttu-id="4dfdf-138">返された値`Group.Value`プロパティは<xref:System.String.Empty?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="4dfdf-138">the value of the returned `Group.Value` property is <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="4dfdf-139">説明については、2 番目の例を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4dfdf-139">See the second example for an illustration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4dfdf-140">次の例では、ピリオドを除く句読点を含まない文に一致する正規表現を定義します (".")。</span><span class="sxs-lookup"><span data-stu-id="4dfdf-140">The following example defines a regular expression that matches sentences that contain no punctuation except for a period (".").</span></span> <span data-ttu-id="4dfdf-141">`Match.Value`プロパティが一致した文では、各一致で構成される結果の文字列が表示されます。</span><span class="sxs-lookup"><span data-stu-id="4dfdf-141">The `Match.Value` property displays the result string, which consists of a matched sentence, for each match.</span></span> <span data-ttu-id="4dfdf-142">`Group.Value`プロパティには、キャプチャ グループごとに結果の文字列が表示されます。 キャプチャ グループによってキャプチャされた最後の文字列で構成されています。</span><span class="sxs-lookup"><span data-stu-id="4dfdf-142">The `Group.Value` property displays the result string for each capturing group; it consists of the last string captured by that capturing group.</span></span> <span data-ttu-id="4dfdf-143"><xref:System.Text.RegularExpressions.Capture.Value%2A?displayProperty=nameWithType>プロパティは、各キャプチャの結果文字列を表示します。</span><span class="sxs-lookup"><span data-stu-id="4dfdf-143">The <xref:System.Text.RegularExpressions.Capture.Value%2A?displayProperty=nameWithType> property displays the result string for each capture.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Capture.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.capture.class/cs/example1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Capture.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.capture.class/vb/example1.vb#1)]  
  
 <span data-ttu-id="4dfdf-144">正規表現パターン `((\w+)[\s.])+` は、次の表に示すように定義されています。</span><span class="sxs-lookup"><span data-stu-id="4dfdf-144">The regular expression pattern `((\w+)[\s.])+` is defined as shown in the following table.</span></span> <span data-ttu-id="4dfdf-145">この正規表現、量指定子 (+) は正規表現全体に適用されますに注意してください。</span><span class="sxs-lookup"><span data-stu-id="4dfdf-145">Note that in this regular expression, a quantifier (+) is applied to the entire regular expression.</span></span>  
  
|<span data-ttu-id="4dfdf-146">パターン</span><span class="sxs-lookup"><span data-stu-id="4dfdf-146">Pattern</span></span>|<span data-ttu-id="4dfdf-147">説明</span><span class="sxs-lookup"><span data-stu-id="4dfdf-147">Description</span></span>|  
|-------------|-----------------|  
|`(\w+)`|<span data-ttu-id="4dfdf-148">1 つ以上の単語文字に一致します。</span><span class="sxs-lookup"><span data-stu-id="4dfdf-148">Match one or more word characters.</span></span> <span data-ttu-id="4dfdf-149">これが 2 番目のキャプチャ グループです。</span><span class="sxs-lookup"><span data-stu-id="4dfdf-149">This is the second capturing group.</span></span>|  
|`[\s.])`|<span data-ttu-id="4dfdf-150">一致の空白文字またはピリオド (".")。</span><span class="sxs-lookup"><span data-stu-id="4dfdf-150">Match a white-space character or period (".").</span></span>|  
|`((\w+)[\s.])`|<span data-ttu-id="4dfdf-151">空白文字またはピリオドが続く 1 つまたは複数の単語文字に一致 (".")。</span><span class="sxs-lookup"><span data-stu-id="4dfdf-151">Match one or more word characters followed by a white-space character or period (".").</span></span> <span data-ttu-id="4dfdf-152">これが最初のキャプチャ グループです。</span><span class="sxs-lookup"><span data-stu-id="4dfdf-152">This is the first capturing group.</span></span>|  
|`((\w+)[\s.])+`|<span data-ttu-id="4dfdf-153">単語文字または文字の後に空白文字またはピリオドの 1 つまたは複数回の出現に一致 (".")。</span><span class="sxs-lookup"><span data-stu-id="4dfdf-153">Match one or more occurrences of a word character or characters followed by a white-space character or period (".").</span></span>|  
  
 <span data-ttu-id="4dfdf-154">この例では 2 つの文の入力文字列で構成されます。</span><span class="sxs-lookup"><span data-stu-id="4dfdf-154">In this example, the input string consists of two sentences.</span></span> <span data-ttu-id="4dfdf-155">最初の文から成る 1 つだけの word では、出力をそのため、<xref:System.Text.RegularExpressions.CaptureCollection>オブジェクトには、1 つ<xref:System.Text.RegularExpressions.Capture>と同じキャプチャを表すオブジェクトを<xref:System.Text.RegularExpressions.Group>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="4dfdf-155">As the output shows, the first sentence consists of only one word, so the <xref:System.Text.RegularExpressions.CaptureCollection> object has a single <xref:System.Text.RegularExpressions.Capture> object that represents the same capture as the <xref:System.Text.RegularExpressions.Group> object.</span></span> <span data-ttu-id="4dfdf-156">2 番目の文は、複数の単語で構成されていますので、<xref:System.Text.RegularExpressions.Group>オブジェクトには、最後の一致した部分式に関する情報にはのみが含まれています。</span><span class="sxs-lookup"><span data-stu-id="4dfdf-156">The second sentence consists of multiple words, so the <xref:System.Text.RegularExpressions.Group> objects only contain information about the last matched subexpression.</span></span> <span data-ttu-id="4dfdf-157">グループ 1、最初のキャプチャを表すには、期間は終了する文の最後の単語が含まれています。</span><span class="sxs-lookup"><span data-stu-id="4dfdf-157">Group 1, which represents the first capture, contains the last word in the sentence that has a closing period.</span></span> <span data-ttu-id="4dfdf-158">グループ 2、2 番目のキャプチャを表すには、対象の文の最後の単語が含まれています。</span><span class="sxs-lookup"><span data-stu-id="4dfdf-158">Group 2, which represents the second capture, contains the last word in the sentence.</span></span> <span data-ttu-id="4dfdf-159">ただし、<xref:System.Text.RegularExpressions.Capture>グループのオブジェクト<xref:System.Text.RegularExpressions.CaptureCollection>オブジェクトは、各一致文字列の部分式をキャプチャします。</span><span class="sxs-lookup"><span data-stu-id="4dfdf-159">However, the <xref:System.Text.RegularExpressions.Capture> objects in the group's <xref:System.Text.RegularExpressions.CaptureCollection> object capture each subexpression match.</span></span> <span data-ttu-id="4dfdf-160"><xref:System.Text.RegularExpressions.Capture>キャプチャの最初のキャプチャ グループのコレクション内のオブジェクトには、各キャプチャされた単語および空白文字または期間に関する情報が含まれています。</span><span class="sxs-lookup"><span data-stu-id="4dfdf-160">The <xref:System.Text.RegularExpressions.Capture> objects in the first capturing group's collection of captures contain information about each captured word and white-space character or period.</span></span> <span data-ttu-id="4dfdf-161"><xref:System.Text.RegularExpressions.Capture>キャプチャの 2 番目のキャプチャ グループのコレクション内のオブジェクトには、キャプチャされた各単語についての情報が含まれています。</span><span class="sxs-lookup"><span data-stu-id="4dfdf-161">The <xref:System.Text.RegularExpressions.Capture> objects in the second capturing group's collection of captures contain information about each captured word.</span></span>  
  
 <span data-ttu-id="4dfdf-162">次のコードの例では、正規表現パターンでは、`^([a-z]+)(\d+)*\.([a-z]+(\d)*)$`ピリオドで区切られた 2 つの部分で構成される製品番号が一致するようにします。</span><span class="sxs-lookup"><span data-stu-id="4dfdf-162">The following example uses a regular expression pattern, `^([a-z]+)(\d+)*\.([a-z]+(\d)*)$`, to match a product number that consists of two parts separated by a period.</span></span> <span data-ttu-id="4dfdf-163">両方の部分は、アルファベット文字の後に省略可能な番号で構成されます。</span><span class="sxs-lookup"><span data-stu-id="4dfdf-163">Both parts consist of alphabetic characters followed by optional numbers.</span></span> <span data-ttu-id="4dfdf-164">最初の入力文字列がパターンを返された値と一致しないため<xref:System.Text.RegularExpressions.Match?displayProperty=nameWithType>オブジェクトの`Value`プロパティは<xref:System.String.Empty?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="4dfdf-164">Because the first input string does not match the pattern, the value of the returned <xref:System.Text.RegularExpressions.Match?displayProperty=nameWithType> object's `Value` property is <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="4dfdf-165">同様に、正規表現パターンができない場合、キャプチャ グループに対応する値に一致するように<xref:System.Text.RegularExpressions.Group>オブジェクトの`Value`プロパティは<xref:System.String.Empty?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="4dfdf-165">Similarly, when the regular expression pattern is unable to match a capturing group, the value of the corresponding <xref:System.Text.RegularExpressions.Group> object's `Value` property is <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Capture.Value#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.capture.value/cs/value1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Capture.Value#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.capture.value/vb/value1.vb#1)]  
  
 <span data-ttu-id="4dfdf-166">正規表現パターンは、次の表に示すように定義されます。</span><span class="sxs-lookup"><span data-stu-id="4dfdf-166">The regular expression pattern is defined as shown in the following table:</span></span>  
  
|<span data-ttu-id="4dfdf-167">パターン</span><span class="sxs-lookup"><span data-stu-id="4dfdf-167">Pattern</span></span>|<span data-ttu-id="4dfdf-168">説明</span><span class="sxs-lookup"><span data-stu-id="4dfdf-168">Description</span></span>|  
|-------------|-----------------|  
|`^`|<span data-ttu-id="4dfdf-169">文字列の先頭から照合を開始します。</span><span class="sxs-lookup"><span data-stu-id="4dfdf-169">Begin the match at the beginning of the string.</span></span>|  
|`([a-z]+)`|<span data-ttu-id="4dfdf-170">任意の文字の 1 つ以上の出現と一致する z。</span><span class="sxs-lookup"><span data-stu-id="4dfdf-170">Match one or more occurrences of any character from a to z.</span></span> <span data-ttu-id="4dfdf-171">正規表現エンジンが渡されるため、<xref:System.Text.RegularExpressions.RegexOptions.IgnoreCase?displayProperty=nameWithType>オプション、この比較は大文字です。</span><span class="sxs-lookup"><span data-stu-id="4dfdf-171">Because the regular expression engine is passed the <xref:System.Text.RegularExpressions.RegexOptions.IgnoreCase?displayProperty=nameWithType> option, this comparison is case-insensitive.</span></span> <span data-ttu-id="4dfdf-172">これが最初のキャプチャ グループです。</span><span class="sxs-lookup"><span data-stu-id="4dfdf-172">This is the first capturing group.</span></span>|  
|`(\d+)?`|<span data-ttu-id="4dfdf-173">1 つ以上の 10 進数字の 0 個または 1 回を一致します。</span><span class="sxs-lookup"><span data-stu-id="4dfdf-173">Match zero or one occurrence of one or more decimal digits.</span></span> <span data-ttu-id="4dfdf-174">これが 2 番目のキャプチャ グループです。</span><span class="sxs-lookup"><span data-stu-id="4dfdf-174">This is the second capturing group.</span></span>|  
|`\.`|<span data-ttu-id="4dfdf-175">リテラルのピリオド文字と一致します。</span><span class="sxs-lookup"><span data-stu-id="4dfdf-175">Match a literal period character.</span></span>|  
|`([a-z]+`|<span data-ttu-id="4dfdf-176">任意の文字の 1 つ以上の出現と一致する z。</span><span class="sxs-lookup"><span data-stu-id="4dfdf-176">Match one or more occurrences of any character from a to z.</span></span> <span data-ttu-id="4dfdf-177">比較では大文字です。</span><span class="sxs-lookup"><span data-stu-id="4dfdf-177">The comparison is case-insensitive.</span></span>|  
|`(\d)*`|<span data-ttu-id="4dfdf-178">0 個以上の 10 進数と一致します。</span><span class="sxs-lookup"><span data-stu-id="4dfdf-178">Match zero or more decimal digits.</span></span> <span data-ttu-id="4dfdf-179">一致した 1 桁の数字は、4 番目のキャプチャ グループです。</span><span class="sxs-lookup"><span data-stu-id="4dfdf-179">A single matched digit is the fourth capturing group.</span></span>|  
|`([a-z]+(\d)*)`|<span data-ttu-id="4dfdf-180">1 つ以上のアルファベット文字と一致する z を 0、1、または複数の 10 進数字が続きます。</span><span class="sxs-lookup"><span data-stu-id="4dfdf-180">Match one or more alphabetic characters from a to z followed by zero, one, or more decimal digits.</span></span> <span data-ttu-id="4dfdf-181">これが 4 番目のキャプチャ グループです。</span><span class="sxs-lookup"><span data-stu-id="4dfdf-181">This is the fourth capturing group.</span></span>|  
|`$`|<span data-ttu-id="4dfdf-182">最後に、文字列の末尾で照合します。</span><span class="sxs-lookup"><span data-stu-id="4dfdf-182">Conclude the match at the end of the string.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
