<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Capture.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac58dfeb69aa0ac9f45e2436969c276f2960db7be09.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8dfeb69aa0ac9f45e2436969c276f2960db7be09</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Text.RegularExpressions.Capture">
          <source>Represents the results from a single successful subexpression capture.</source>
          <target state="translated">正常にマッチした単一部分式キャプチャの結果を表します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.Capture">
          <source>A <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Capture&gt;</ph> object is immutable and has no public constructor.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Text.RegularExpressions.Capture&gt;</ph>オブジェクトは変更不可にし、パブリック コンス トラクターを持たない。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.Capture">
          <source>Instances are returned through the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.CaptureCollection&gt;</ph> object, which is returned by the <ph id="ph2">`Match.Captures`</ph> and <ph id="ph3">&lt;xref:System.Text.RegularExpressions.Group.Captures%2A?displayProperty=nameWithType&gt;</ph> properties.</source>
          <target state="translated">インスタンスは、<ph id="ph1">&lt;xref:System.Text.RegularExpressions.CaptureCollection&gt;</ph>によって返されるオブジェクト、<ph id="ph2">`Match.Captures`</ph>と<ph id="ph3">&lt;xref:System.Text.RegularExpressions.Group.Captures%2A?displayProperty=nameWithType&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.Capture">
          <source>However, the <ph id="ph1">`Match.Captures`</ph> property provides information about the same match as the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Match&gt;</ph> object.</source>
          <target state="translated">ただし、<ph id="ph1">`Match.Captures`</ph>プロパティとして同じ一致に関する情報を提供、<ph id="ph2">&lt;xref:System.Text.RegularExpressions.Match&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.Capture">
          <source>If you do not apply a  to a capturing group, the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Group.Captures%2A?displayProperty=nameWithType&gt;</ph> property returns a <ph id="ph2">&lt;xref:System.Text.RegularExpressions.CaptureCollection&gt;</ph> with a single <ph id="ph3">&lt;xref:System.Text.RegularExpressions.Capture&gt;</ph> object that provides information about the same capture as the <ph id="ph4">&lt;xref:System.Text.RegularExpressions.Group&gt;</ph> object.</source>
          <target state="translated">適用しない場合、キャプチャ グループに、<ph id="ph1">&lt;xref:System.Text.RegularExpressions.Group.Captures%2A?displayProperty=nameWithType&gt;</ph>プロパティから返される、<ph id="ph2">&lt;xref:System.Text.RegularExpressions.CaptureCollection&gt;</ph>を 1 つの<ph id="ph3">&lt;xref:System.Text.RegularExpressions.Capture&gt;</ph>と同じキャプチャに関する情報を提供するオブジェクト、<ph id="ph4">&lt;xref:System.Text.RegularExpressions.Group&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.Capture">
          <source>If you do apply a quantifier to a capturing group, the <ph id="ph1">`Group.Index`</ph>, <ph id="ph2">`Group.Length`</ph>, and <ph id="ph3">`Group.Value`</ph> properties provide information only about the last captured group, whereas the <ph id="ph4">&lt;xref:System.Text.RegularExpressions.Capture&gt;</ph> objects in the <ph id="ph5">&lt;xref:System.Text.RegularExpressions.CaptureCollection&gt;</ph> provide information about all subexpression captures.</source>
          <target state="translated">キャプチャ グループに量指定子を適用する場合、 <ph id="ph1">`Group.Index`</ph>、 <ph id="ph2">`Group.Length`</ph>、および<ph id="ph3">`Group.Value`</ph>が最後のキャプチャ グループについてのみ情報を指定、<ph id="ph4">&lt;xref:System.Text.RegularExpressions.Capture&gt;</ph>内のオブジェクト、<ph id="ph5">&lt;xref:System.Text.RegularExpressions.CaptureCollection&gt;</ph>についてすべての部分式はキャプチャします。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.Capture">
          <source>The example provides an illustration.</source>
          <target state="translated">具体的な例を次に示します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.Capture">
          <source>The following example defines a regular expression that matches sentences that contain no punctuation except for a period (".").</source>
          <target state="translated">次の例では、ピリオドを除く句読点を含まない文に一致する正規表現 ("です。") です。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.Capture">
          <source>The regular expression pattern <ph id="ph1">`((\w+)[\s.])+`</ph> is defined as shown in the following table.</source>
          <target state="translated">正規表現パターン <ph id="ph1">`((\w+)[\s.])+`</ph> は、次の表に示すように定義されています。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.Capture">
          <source>Note that in this regular expression, a quantifier (+) is applied to the entire regular expression.</source>
          <target state="translated">この正規表現、量指定子 (+) に適用される正規表現全体に注意してください。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.Capture">
          <source>Pattern</source>
          <target state="translated">パターン</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.Capture">
          <source>Description</source>
          <target state="translated">説明</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.Capture">
          <source>Match one or more word characters.</source>
          <target state="translated">1 つ以上の単語文字に一致します。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.Capture">
          <source>This is the second capturing group.</source>
          <target state="translated">これが 2 番目のキャプチャ グループです。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.Capture">
          <source>Match a white-space character or period (".").</source>
          <target state="translated">空白文字または期間と一致 ("です。") です。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.Capture">
          <source>Match one or more word characters followed by a white-space character or period (".").</source>
          <target state="translated">空白文字またはピリオドが続く 1 つ以上の単語文字に一致 ("です。") です。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.Capture">
          <source>This is the first capturing group.</source>
          <target state="translated">これが最初のキャプチャ グループです。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.Capture">
          <source>Match one or more occurrences of a word character or characters followed by a white-space character or period (".").</source>
          <target state="translated">単語文字または文字の後に空白文字または期間の 1 つ以上の出現と一致 ("です。") です。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.Capture">
          <source>In this example, the input string consists of two sentences.</source>
          <target state="translated">この例では、入力文字列は 2 つの文で構成されます。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.Capture">
          <source>As the output shows, the first sentence consists of only one word, so the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.CaptureCollection&gt;</ph> object has a single <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Capture&gt;</ph> object that represents the same capture as the <ph id="ph3">&lt;xref:System.Text.RegularExpressions.Group&gt;</ph> object.</source>
          <target state="translated">出力では、最初の文は、単語で構成 1 つだけため、<ph id="ph1">&lt;xref:System.Text.RegularExpressions.CaptureCollection&gt;</ph>オブジェクトには、1 つ<ph id="ph2">&lt;xref:System.Text.RegularExpressions.Capture&gt;</ph>と同じキャプチャを表すオブジェクト、<ph id="ph3">&lt;xref:System.Text.RegularExpressions.Group&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.Capture">
          <source>The second sentence consists of multiple words, so the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Group&gt;</ph> objects only contain information about the last matched subexpression.</source>
          <target state="translated">2 番目の文は、複数の単語で構成されていますので、<ph id="ph1">&lt;xref:System.Text.RegularExpressions.Group&gt;</ph>オブジェクトには、最後の一致した部分式に関する情報にはのみが含まれています。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.Capture">
          <source>Group 1, which represents the first capture, contains the last word in the sentence that has a closing period.</source>
          <target state="translated">グループ 1、最初のキャプチャを表すには、期間は終了する文の最後の単語が含まれています。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.Capture">
          <source>Group 2, which represents the second capture, contains the last word in the sentence.</source>
          <target state="translated">グループ 2、2 番目のキャプチャを表すには、文の最後の単語が含まれています。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.Capture">
          <source>However, the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Capture&gt;</ph> objects in the group's <ph id="ph2">&lt;xref:System.Text.RegularExpressions.CaptureCollection&gt;</ph> object capture each subexpression match.</source>
          <target state="translated">ただし、<ph id="ph1">&lt;xref:System.Text.RegularExpressions.Capture&gt;</ph>グループのオブジェクト<ph id="ph2">&lt;xref:System.Text.RegularExpressions.CaptureCollection&gt;</ph>オブジェクトは、各一致文字列の部分式をキャプチャします。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.Capture">
          <source>The <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Capture&gt;</ph> objects in the first capturing group's collection of captures contain information about each captured word and white-space character or period.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.RegularExpressions.Capture&gt;</ph>キャプチャの最初のキャプチャ グループのコレクション内のオブジェクトには、各キャプチャされた単語および空白文字または期間に関する情報が含まれています。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.Capture">
          <source>The <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Capture&gt;</ph> objects in the second capturing group's collection of captures contain information about each captured word.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.RegularExpressions.Capture&gt;</ph>キャプチャの 2 番目のキャプチャ グループのコレクション内のオブジェクトには、各キャプチャされた単語に関する情報が含まれています。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="P:System.Text.RegularExpressions.Capture.Index">
          <source>The position in the original string where the first character of the captured substring is found.</source>
          <target state="translated">キャプチャした部分文字列の最初の文字が見つかる元の文字列内の位置。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Index">
          <source>The zero-based starting position in the original string where the captured substring is found.</source>
          <target state="translated">キャプチャした部分文字列が見つかった元の文字列内の開始位置を示す 0 から始まる数値。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="P:System.Text.RegularExpressions.Capture.Length">
          <source>Gets the length of the captured substring.</source>
          <target state="translated">キャプチャした部分文字列の長さを取得します。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Length">
          <source>The length of the captured substring.</source>
          <target state="translated">キャプチャした部分文字列の長さ。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.Capture.ToString">
          <source>Retrieves the captured substring from the input string by calling the <ph id="ph1">&lt;see cref="P:System.Text.RegularExpressions.Capture.Value" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Text.RegularExpressions.Capture.Value" /&gt;</ph> プロパティを呼び出して、入力文字列からキャプチャされた部分文字列を取得します。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.Capture.ToString">
          <source>The substring that was captured by the match.</source>
          <target state="translated">検索によってキャプチャされた部分文字列。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.Capture.ToString">
          <source><ph id="ph1">`ToString`</ph> is actually an internal call to the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Capture.Value%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">`ToString`</ph> 実際には、内部の呼び出し、<ph id="ph2">&lt;xref:System.Text.RegularExpressions.Capture.Value%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>Gets the captured substring from the input string.</source>
          <target state="translated">入力文字列からキャプチャした部分文字列を取得します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>The substring that is captured by the match.</source>
          <target state="translated">検索によってキャプチャされた部分文字列。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>If a call to the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex.Match%2A?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Match.NextMatch%2A?displayProperty=nameWithType&gt;</ph> method fails to find a match, the value of the returned <ph id="ph3">`Match.Value`</ph> property is <ph id="ph4">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">呼び出し、<ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex.Match%2A?displayProperty=nameWithType&gt;</ph>または<ph id="ph2">&lt;xref:System.Text.RegularExpressions.Match.NextMatch%2A?displayProperty=nameWithType&gt;</ph>メソッドは、返された値、一致を見つける失敗<ph id="ph3">`Match.Value`</ph>プロパティは<ph id="ph4">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>します。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>If the regular expression engine is unable to match a capturing group.</source>
          <target state="translated">正規表現エンジンがない場合、キャプチャ グループに一致することです。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>the value of the returned <ph id="ph1">`Group.Value`</ph> property is <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">返された値<ph id="ph1">`Group.Value`</ph>プロパティは<ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>します。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>See the second example for an illustration.</source>
          <target state="translated">図については、2 番目の例を参照してください。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>The following example defines a regular expression that matches sentences that contain no punctuation except for a period (".").</source>
          <target state="translated">次の例では、ピリオドを除く句読点を含まない文に一致する正規表現 ("です。") です。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>The <ph id="ph1">`Match.Value`</ph> property displays the result string, which consists of a matched sentence, for each match.</source>
          <target state="translated"><ph id="ph1">`Match.Value`</ph>プロパティが一致した各文字列の一致の文で構成される結果の文字列が表示されます。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>The <ph id="ph1">`Group.Value`</ph> property displays the result string for each capturing group; it consists of the last string captured by that capturing group.</source>
          <target state="translated"><ph id="ph1">`Group.Value`</ph>のキャプチャ グループによってキャプチャされた最後の文字列で構成されます。 プロパティには、キャプチャ グループごとに結果の文字列が表示されます。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>The <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Capture.Value%2A?displayProperty=nameWithType&gt;</ph> property displays the result string for each capture.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.RegularExpressions.Capture.Value%2A?displayProperty=nameWithType&gt;</ph>プロパティには、各キャプチャの結果の文字列が表示されます。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>The regular expression pattern <ph id="ph1">`((\w+)[\s.])+`</ph> is defined as shown in the following table.</source>
          <target state="translated">正規表現パターン <ph id="ph1">`((\w+)[\s.])+`</ph> は、次の表に示すように定義されています。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>Note that in this regular expression, a quantifier (+) is applied to the entire regular expression.</source>
          <target state="translated">この正規表現、量指定子 (+) に適用される正規表現全体に注意してください。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>Pattern</source>
          <target state="translated">パターン</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>Description</source>
          <target state="translated">説明</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>Match one or more word characters.</source>
          <target state="translated">1 つ以上の単語文字に一致します。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>This is the second capturing group.</source>
          <target state="translated">これが 2 番目のキャプチャ グループです。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>Match a white-space character or period (".").</source>
          <target state="translated">空白文字または期間と一致 ("です。") です。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>Match one or more word characters followed by a white-space character or period (".").</source>
          <target state="translated">空白文字またはピリオドが続く 1 つ以上の単語文字に一致 ("です。") です。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>This is the first capturing group.</source>
          <target state="translated">これが最初のキャプチャ グループです。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>Match one or more occurrences of a word character or characters followed by a white-space character or period (".").</source>
          <target state="translated">単語文字または文字の後に空白文字または期間の 1 つ以上の出現と一致 ("です。") です。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>In this example, the input string consists of two sentences.</source>
          <target state="translated">この例では、入力文字列は 2 つの文で構成されます。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>As the output shows, the first sentence consists of only one word, so the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.CaptureCollection&gt;</ph> object has a single <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Capture&gt;</ph> object that represents the same capture as the <ph id="ph3">&lt;xref:System.Text.RegularExpressions.Group&gt;</ph> object.</source>
          <target state="translated">出力では、最初の文は、単語で構成 1 つだけため、<ph id="ph1">&lt;xref:System.Text.RegularExpressions.CaptureCollection&gt;</ph>オブジェクトには、1 つ<ph id="ph2">&lt;xref:System.Text.RegularExpressions.Capture&gt;</ph>と同じキャプチャを表すオブジェクト、<ph id="ph3">&lt;xref:System.Text.RegularExpressions.Group&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>The second sentence consists of multiple words, so the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Group&gt;</ph> objects only contain information about the last matched subexpression.</source>
          <target state="translated">2 番目の文は、複数の単語で構成されていますので、<ph id="ph1">&lt;xref:System.Text.RegularExpressions.Group&gt;</ph>オブジェクトには、最後の一致した部分式に関する情報にはのみが含まれています。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>Group 1, which represents the first capture, contains the last word in the sentence that has a closing period.</source>
          <target state="translated">グループ 1、最初のキャプチャを表すには、期間は終了する文の最後の単語が含まれています。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>Group 2, which represents the second capture, contains the last word in the sentence.</source>
          <target state="translated">グループ 2、2 番目のキャプチャを表すには、文の最後の単語が含まれています。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>However, the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Capture&gt;</ph> objects in the group's <ph id="ph2">&lt;xref:System.Text.RegularExpressions.CaptureCollection&gt;</ph> object capture each subexpression match.</source>
          <target state="translated">ただし、<ph id="ph1">&lt;xref:System.Text.RegularExpressions.Capture&gt;</ph>グループのオブジェクト<ph id="ph2">&lt;xref:System.Text.RegularExpressions.CaptureCollection&gt;</ph>オブジェクトは、各一致文字列の部分式をキャプチャします。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>The <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Capture&gt;</ph> objects in the first capturing group's collection of captures contain information about each captured word and white-space character or period.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.RegularExpressions.Capture&gt;</ph>キャプチャの最初のキャプチャ グループのコレクション内のオブジェクトには、各キャプチャされた単語および空白文字または期間に関する情報が含まれています。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>The <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Capture&gt;</ph> objects in the second capturing group's collection of captures contain information about each captured word.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.RegularExpressions.Capture&gt;</ph>キャプチャの 2 番目のキャプチャ グループのコレクション内のオブジェクトには、各キャプチャされた単語に関する情報が含まれています。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>The following example uses a regular expression pattern, <ph id="ph1">`^([a-z]+)(\d+)*\.([a-z]+(\d)*)$`</ph>, to match a product number that consists of two parts separated by a period.</source>
          <target state="translated">次の例では、正規表現パターンでは、<ph id="ph1">`^([a-z]+)(\d+)*\.([a-z]+(\d)*)$`</ph>ピリオドで区切られた 2 つの部分で構成されている製品の数に一致します。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>Both parts consist of alphabetic characters followed by optional numbers.</source>
          <target state="translated">両方の部分は省略可能な数字が続くのアルファベット文字で構成されます。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>Because the first input string does not match the pattern, the value of the returned <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Match?displayProperty=nameWithType&gt;</ph> object's <ph id="ph2">`Value`</ph> property is <ph id="ph3">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">最初の入力文字列がパターンで、返された値と一致しないため<ph id="ph1">&lt;xref:System.Text.RegularExpressions.Match?displayProperty=nameWithType&gt;</ph>オブジェクトの<ph id="ph2">`Value`</ph>プロパティは<ph id="ph3">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>します。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>Similarly, when the regular expression pattern is unable to match a capturing group, the value of the corresponding <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Group&gt;</ph> object's <ph id="ph2">`Value`</ph> property is <ph id="ph3">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">同様に、ときに、正規表現パターンはできません、キャプチャ グループの対応する値を一致するように<ph id="ph1">&lt;xref:System.Text.RegularExpressions.Group&gt;</ph>オブジェクトの<ph id="ph2">`Value`</ph>プロパティは<ph id="ph3">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>します。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>The regular expression pattern is defined as shown in the following table:</source>
          <target state="translated">正規表現パターンは、次の表に示すように定義されます。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>Pattern</source>
          <target state="translated">パターン</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>Description</source>
          <target state="translated">説明</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>Begin the match at the beginning of the string.</source>
          <target state="translated">文字列の先頭から照合を開始します。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>Match one or more occurrences of any character from a to z.</source>
          <target state="translated">任意の文字の 1 つ以上の出現と一致する z にします。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>Because the regular expression engine is passed the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexOptions.IgnoreCase?displayProperty=nameWithType&gt;</ph> option, this comparison is case-insensitive.</source>
          <target state="translated">正規表現エンジンが渡されるため、<ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexOptions.IgnoreCase?displayProperty=nameWithType&gt;</ph>オプション、この比較では区別されません。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>This is the first capturing group.</source>
          <target state="translated">これが最初のキャプチャ グループです。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>Match zero or one occurrence of one or more decimal digits.</source>
          <target state="translated">1 つ以上の 10 進数字の 0 回または 1 回を一致します。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>This is the second capturing group.</source>
          <target state="translated">これが 2 番目のキャプチャ グループです。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>Match a literal period character.</source>
          <target state="translated">リテラルのピリオド文字と一致します。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>Match one or more occurrences of any character from a to z.</source>
          <target state="translated">任意の文字の 1 つ以上の出現と一致する z にします。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>The comparison is case-insensitive.</source>
          <target state="translated">比較では区別されません。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>Match zero or more decimal digits.</source>
          <target state="translated">0 個以上の 10 進数と一致します。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>A single matched digit is the fourth capturing group.</source>
          <target state="translated">一致した 1 桁の数字は、4 番目のキャプチャ グループです。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>Match one or more alphabetic characters from a to z followed by zero, one, or more decimal digits.</source>
          <target state="translated">1 つ以上のアルファベット文字と一致、z、0、1、または複数の 10 進数字の後にします。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>This is the fourth capturing group.</source>
          <target state="translated">これが 4 番目のキャプチャ グループです。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>Conclude the match at the end of the string.</source>
          <target state="translated">文字列の末尾で照合を終了します。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>