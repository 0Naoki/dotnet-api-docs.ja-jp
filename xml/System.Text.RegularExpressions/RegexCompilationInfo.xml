<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="RegexCompilationInfo.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5731a068feb7a24b5a370b0ee36313a7a143e71c7.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">731a068feb7a24b5a370b0ee36313a7a143e71c7</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Text.RegularExpressions.RegexCompilationInfo">
          <source>Provides information about a regular expression that is used to compile a regular expression to a stand-alone assembly.</source>
          <target state="translated">正規表現をコンパイルしてスタンドアロン アセンブリを作成するために使用する正規表現についての情報を提供します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.RegexCompilationInfo">
          <source>An array of <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo&gt;</ph> objects is passed to the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A&gt;</ph> method to provide information about each regular expression to be included in the assembly.</source>
          <target state="translated">配列<ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo&gt;</ph>にオブジェクトが渡される、<ph id="ph2">&lt;xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A&gt;</ph>メソッド、アセンブリに含まれる各正規表現に関する情報を提供します。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.RegexCompilationInfo">
          <source>Each compiled regular expression that is included in the assembly is represented as a class derived from <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex&gt;</ph>.</source>
          <target state="translated">アセンブリに含まれているコンパイル済みの各正規表現がから派生したクラスとして表される<ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.RegexCompilationInfo">
          <source>The properties of the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo&gt;</ph> type define the regular expression's class name, its fully qualified name (that is, its namespace and its type name), its regular expression pattern, any additional options (such as whether the regular expression is case-insensitive), and a time-out interval that specifies how long the regular expression engine should search for a match.</source>
          <target state="translated">プロパティ、<ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo&gt;</ph>正規表現のクラス名、完全修飾名 (つまり、その名前空間とその型の名前)、正規表現パターン、(かどうか、正規表現が区別されません) などその他のオプションとタイムアウト間隔、正規表現エンジンは、一致を検索する期間を指定する型が定義されます。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.RegexCompilationInfo">
          <source>You can instantiate a <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo&gt;</ph> object by calling its overloaded class constructor.</source>
          <target state="translated">インスタンス化することができます、<ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo&gt;</ph>クラスのオーバー ロードされたコンス トラクターを呼び出してオブジェクト。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="T:System.Text.RegularExpressions.RegexCompilationInfo">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Text.RegularExpressions.RegexCompilationInfo" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Text.RegularExpressions.RegexCompilationInfo" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)">
          <source>The regular expression to compile.</source>
          <target state="translated">コンパイルする正規表現。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)">
          <source>The regular expression options to use when compiling the regular expression.</source>
          <target state="translated">正規表現をコンパイルするときに使用する正規表現オプション。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)">
          <source>The name of the type that represents the compiled regular expression.</source>
          <target state="translated">コンパイル済みの正規表現を表す型の名前。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)">
          <source>The namespace to which the new type belongs.</source>
          <target state="translated">新しい型の所属先となる名前空間。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to make the compiled regular expression publicly visible; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">コンパイルされた正規表現をパブリックに参照できるようにする場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Text.RegularExpressions.RegexCompilationInfo" /&gt;</ph> class that contains information about a regular expression to be included in an assembly.</source>
          <target state="translated">アセンブリに含める正規表現についての情報を格納する <ph id="ph1">&lt;see cref="T:System.Text.RegularExpressions.RegexCompilationInfo" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)">
          <source>Each parameter of the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.String%2CSystem.String%2CSystem.Boolean%29&gt;</ph> constructor directly corresponds to a property of the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo&gt;</ph> class.</source>
          <target state="translated">各パラメーター、<ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.String%2CSystem.String%2CSystem.Boolean%29&gt;</ph>コンス トラクターは、のプロパティに直接対応、<ph id="ph2">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)">
          <source>Because all properties are read/write, their values can also be assigned directly.</source>
          <target state="translated">すべてのプロパティは読み取り/書き込みであるためは、その値が直接割り当てることもできます。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A&gt;</ph> method generates an assembly that contains compiled regular expressions.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A&gt;</ph>メソッドは、コンパイルされた正規表現を格納するアセンブリを生成します。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)">
          <source>Therefore, you should not specify <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexOptions.Compiled&gt;</ph> as one of the values of <ph id="ph2">`options`</ph>.</source>
          <target state="translated">そのため、指定しないでください<ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexOptions.Compiled&gt;</ph>の値の 1 つとして<ph id="ph2">`options`</ph>です。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)">
          <source>If <ph id="ph1">`ispublic`</ph> is <ph id="ph2">`true`</ph>, the compiled regular expression class is given public accessibility.</source>
          <target state="translated">場合<ph id="ph1">`ispublic`</ph>は<ph id="ph2">`true`</ph>、コンパイルされた正規表現クラスは、パブリック アクセシビリティを指定します。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)">
          <source>That is, it can be instantiated from code that executes in any assembly.</source>
          <target state="translated">つまり、任意のアセンブリで実行するコードからインスタンス化することができます。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)">
          <source>If <ph id="ph1">`ispublic`</ph> is <ph id="ph2">`false`</ph>, the compiled regular expression class is given <ph id="ph3">`internal`</ph> (in C#) or <ph id="ph4">`Friend`</ph> (in Visual Basic) accessibility.</source>
          <target state="translated">場合<ph id="ph1">`ispublic`</ph>は<ph id="ph2">`false`</ph>、コンパイルされた正規表現クラスが指定された<ph id="ph3">`internal`</ph>(C# の場合) または<ph id="ph4">`Friend`</ph>(Visual Basic) のアクセシビリティ。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)">
          <source>That is, it can be instantiated only from code that executes in the same assembly as the regular expression class.</source>
          <target state="translated">つまり、正規表現クラスと同じアセンブリで実行するコードからのみインスタンス化することができます。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)">
          <source>The following example creates and uses a compiled regular expression in two steps.</source>
          <target state="translated">次の例では、作成し、2 つのステップでコンパイルされた正規表現を使用します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)">
          <source>In the first step, compile and execute the following code example.</source>
          <target state="translated">最初のステップでコンパイルし、次のコード例を実行します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%2A&gt;</ph> constructor in the code example defines a compiled regular expression.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%2A&gt;</ph>コード例ではコンス トラクターは、コンパイルされた正規表現を定義します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)">
          <source>The result of executing the code is an assembly named FishRegex.dll that contains a compiled regular expression type named <ph id="ph1">`FishRegex`</ph>.</source>
          <target state="translated">コードの実行の結果は、コンパイルされた正規表現型という名前を含む FishRegex.dll をという名前のアセンブリ<ph id="ph1">`FishRegex`</ph>です。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)">
          <source>In the second step, compile the following code example using a reference to FishRegex.dll, and then run the resulting executable file.</source>
          <target state="translated">2 番目の手順で、FishRegex.dll への参照を使用して次のコード例をコンパイルして、結果として得られる実行可能ファイルを実行します。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)">
          <source>The executable file matches a target string by using the <ph id="ph1">`FishRegex`</ph> type, and displays the match, group, capture group, and index position of the matches in the target string.</source>
          <target state="translated">実行可能ファイルを使用してターゲット文字列に一致する、<ph id="ph1">`FishRegex`</ph>型、および対象の文字列に一致する、グループ、キャプチャ グループ、および一致項目のインデックス位置が表示されます。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> は <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="pattern" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="pattern" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="fullnamespace" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="fullnamespace" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)">
          <source>This constructor creates a compiled regular expression that uses the default time-out value of the application domain in which it is created.</source>
          <target state="translated">このコンス トラクターでは、作成元でのアプリケーション ドメインの既定のタイムアウト値を使用してコンパイル済みの正規表現を作成します。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)">
          <source>If a time-out value is defined for the application domain, the compiled regular expression uses the value <ph id="ph1">&lt;see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /&gt;</ph>, which prevents a pattern-matching operation from timing out. The recommended constructor for creating a compiled regular expression is <ph id="ph2">&lt;see cref="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)" /&gt;</ph>, which lets you set the time-out interval.</source>
          <target state="translated">タイムアウト値がアプリケーション ドメインに対して定義されている場合、コンパイルされた正規表現に値が使用<ph id="ph1">&lt;see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /&gt;</ph>、パターン一致の操作がタイムアウトを防ぐことができます。コンパイルされた正規表現を作成するための推奨されるコンス トラクターは<ph id="ph2">&lt;see cref="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)" /&gt;</ph>、タイムアウト間隔を設定することができます。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)">
          <source>The regular expression to compile.</source>
          <target state="translated">コンパイルする正規表現。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)">
          <source>The regular expression options to use when compiling the regular expression.</source>
          <target state="translated">正規表現をコンパイルするときに使用する正規表現オプション。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)">
          <source>The name of the type that represents the compiled regular expression.</source>
          <target state="translated">コンパイル済みの正規表現を表す型の名前。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)">
          <source>The namespace to which the new type belongs.</source>
          <target state="translated">新しい型の所属先となる名前空間。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to make the compiled regular expression publicly visible; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">コンパイルされた正規表現をパブリックに参照できるようにする場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)">
          <source>The default time-out interval for the regular expression.</source>
          <target state="translated">正規表現の既定のタイムアウト間隔。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Text.RegularExpressions.RegexCompilationInfo" /&gt;</ph> class that contains information about a regular expression with a specified time-out value to be included in an assembly.</source>
          <target state="translated">アセンブリに含めるタイムアウト値を指定した正規表現についての情報を格納する <ph id="ph1">&lt;see cref="T:System.Text.RegularExpressions.RegexCompilationInfo" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)">
          <source>Each parameter of the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.String%2CSystem.String%2CSystem.Boolean%29&gt;</ph> constructor directly corresponds to a property of the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo&gt;</ph> class.</source>
          <target state="translated">各パラメーター、<ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.String%2CSystem.String%2CSystem.Boolean%29&gt;</ph>コンス トラクターは、のプロパティに直接対応、<ph id="ph2">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)">
          <source>Because all properties are read/write, their values can also be assigned directly.</source>
          <target state="translated">すべてのプロパティは読み取り/書き込みであるためは、その値が直接割り当てることもできます。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)">
          <source>The <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A&gt;</ph> method generates an assembly that contains compiled regular expressions.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A&gt;</ph>メソッドは、コンパイルされた正規表現を格納するアセンブリを生成します。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)">
          <source>Therefore, you should not specify <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexOptions.Compiled&gt;</ph> as one of the values of <ph id="ph2">`options`</ph>.</source>
          <target state="translated">そのため、指定しないでください<ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexOptions.Compiled&gt;</ph>の値の 1 つとして<ph id="ph2">`options`</ph>です。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)">
          <source>If <ph id="ph1">`ispublic`</ph> is <ph id="ph2">`true`</ph>, the compiled regular expression class is given public accessibility.</source>
          <target state="translated">場合<ph id="ph1">`ispublic`</ph>は<ph id="ph2">`true`</ph>、コンパイルされた正規表現クラスは、パブリック アクセシビリティを指定します。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)">
          <source>That is, it can be instantiated from code that executes in any assembly.</source>
          <target state="translated">つまり、任意のアセンブリで実行するコードからインスタンス化することができます。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)">
          <source>If <ph id="ph1">`ispublic`</ph> is <ph id="ph2">`false`</ph>, the compiled regular expression class is given <ph id="ph3">`internal`</ph> (in C#) or <ph id="ph4">`Friend`</ph> (in Visual Basic) accessibility.</source>
          <target state="translated">場合<ph id="ph1">`ispublic`</ph>は<ph id="ph2">`false`</ph>、コンパイルされた正規表現クラスが指定された<ph id="ph3">`internal`</ph>(C# の場合) または<ph id="ph4">`Friend`</ph>(Visual Basic) のアクセシビリティ。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)">
          <source>That is, it can be instantiated only from code that executes in the same assembly as the regular expression class.</source>
          <target state="translated">つまり、正規表現クラスと同じアセンブリで実行するコードからのみインスタンス化することができます。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)">
          <source>The <ph id="ph1">`matchTimeout`</ph> parameter defines the default time-out interval for the compiled regular expression.</source>
          <target state="translated"><ph id="ph1">`matchTimeout`</ph>パラメーターは、コンパイルされた正規表現の既定のタイムアウト間隔を定義します。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)">
          <source>This value represents the approximate amount of time that a compiled regular expression object will execute a single matching operation before the operation times out and the regular expression engine throws a <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt;</ph> exception during its next timing check.</source>
          <target state="translated">この値は概算の操作がタイムアウトになると、正規表現エンジンをスローする前に、コンパイルされた正規表現オブジェクトは 1 つの一致操作を実行する時間を表す、<ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt;</ph>次のタイミング チェック中に例外です。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)">
          <source>For additional information about the time-out value, see the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout%2A&gt;</ph> property.</source>
          <target state="translated">タイムアウト値の詳細については、次を参照してください。、<ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)">
          <source>We recommend that you always set a default time-out value for a compiled regular expression.</source>
          <target state="translated">常にコンパイルされる正規表現の既定のタイムアウト値を設定することをお勧めします。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)">
          <source>Consumers of your regular expression library can override that time-out value by passing a <ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph> value that represents the new time-out interval to this constructor overload.</source>
          <target state="translated">渡すことによって、正規表現ライブラリのコンシューマーがそのタイムアウト値をオーバーライドできます、<ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph>をこのコンス トラクター オーバー ロードに新しいタイムアウト間隔を表す値です。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)">
          <source>The following example defines a single compiled regular expression named <ph id="ph1">`DuplicateChars`</ph> that identifies two or more occurrences of the same character in an input string.</source>
          <target state="translated">次の例では、という単一のコンパイルされた正規表現<ph id="ph1">`DuplicateChars`</ph>入力文字列内の同じ文字の 2 つ以上の出現を識別します。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)">
          <source>The compiled regular expression has a default time-out of 2 seconds.</source>
          <target state="translated">コンパイルされた正規表現は、2 秒の既定のタイムアウトがします。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)">
          <source>When you execute the example, it creates a class library named RegexLib.dll that contains the compiled regular expression.</source>
          <target state="translated">例を実行するときに、コンパイルされた正規表現を含む RegexLib.dll をという名前のクラス ライブラリを作成します。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)">
          <source>The regular expression pattern <ph id="ph1">`(\w)\1+`</ph> is defined as shown in the following table.</source>
          <target state="translated">正規表現パターン <ph id="ph1">`(\w)\1+`</ph> は、次の表に示すように定義されています。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)">
          <source>Pattern</source>
          <target state="translated">パターン</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)">
          <source>Description</source>
          <target state="translated">説明</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)">
          <source>Match any word character and assign it to the first capturing group.</source>
          <target state="translated">任意の単語文字に一致し、最初のキャプチャ グループに割り当てます。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)">
          <source>Match one or more occurrences of the value of the first captured group.</source>
          <target state="translated">最初のキャプチャ グループの値の 1 つまたは複数回の出現に一致します。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)">
          <source>The following example uses the <ph id="ph1">`DuplicatedChars`</ph> regular expression to identify duplicate characters in a string array.</source>
          <target state="translated">次の例では、<ph id="ph1">`DuplicatedChars`</ph>文字列配列に重複する文字を識別する正規表現。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)">
          <source>When it calls the <ph id="ph1">`DuplicatedChars`</ph> constructor, it changes the time-out interval to .5 seconds.</source>
          <target state="translated">呼び出すとき、<ph id="ph1">`DuplicatedChars`</ph>コンス トラクター、.5 秒間にタイムアウト間隔を変更します。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> は <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)">
          <source><ph id="ph1">&lt;paramref name="pattern" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="pattern" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)">
          <source><ph id="ph1">&lt;paramref name="fullnamespace" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="fullnamespace" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)">
          <source><ph id="ph1">&lt;paramref name="matchTimeout" /&gt;</ph> is negative, zero, or greater than approximately 24 days.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="matchTimeout" /&gt;</ph> が負の値か、0 か、または約 24 日を超えています。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.IsPublic">
          <source>Gets or sets a value that indicates whether the compiled regular expression has public visibility.</source>
          <target state="translated">コンパイルされた正規表現をパブリックに参照できるかどうかを示す値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.IsPublic">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the regular expression has public visibility; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">正規表現をパブリックに参照できる場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.IsPublic">
          <source>If the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo.IsPublic%2A&gt;</ph> property is <ph id="ph2">`false`</ph>, the regular expression class defined by the current instance can be instantiated only by code that is executing in the assembly that contains the class.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo.IsPublic%2A&gt;</ph>プロパティは<ph id="ph2">`false`</ph>、現在のインスタンスで定義された正規表現クラスは、クラスが含まれているアセンブリで実行されているコードでのみインスタンス化できます。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.IsPublic">
          <source>However, because the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A?displayProperty=nameWithType&gt;</ph> method generates an assembly that contains only compiled regular expressions and does not allow additional code to be added, there is generally no reason to assign this property a value of <ph id="ph2">`false`</ph>.</source>
          <target state="translated">ただし、ため、<ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A?displayProperty=nameWithType&gt;</ph>コンパイルされる正規表現のみを含み、追加する追加のコードを許可しないアセンブリを生成するメソッド、通常、このプロパティの値を代入する必要はありません<ph id="ph2">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout">
          <source>Gets or sets the regular expression's default time-out interval.</source>
          <target state="translated">正規表現の既定のタイムアウト間隔を取得または設定します。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout">
          <source>The default maximum time interval that can elapse in a pattern-matching operation before a <ph id="ph1">&lt;see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /&gt;</ph> is thrown, or <ph id="ph2">&lt;see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /&gt;</ph> if time-outs are disabled.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /&gt;</ph> がスローされる前にパターン一致操作で経過できる既定の最大時間間隔、またはタイムアウトが無効な場合は <ph id="ph2">&lt;see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout">
          <source>The <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout%2A&gt;</ph> property defines the default time-out interval for the compiled regular expression.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout%2A&gt;</ph>プロパティは、コンパイルされた正規表現の既定のタイムアウト間隔を定義します。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout">
          <source>This value represents the approximate amount of time that a compiled regular expression will execute a single matching operation before the operation times out and the regular expression engine throws a <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt;</ph> exception during its next timing check.</source>
          <target state="translated">この値は概算の操作がタイムアウトになると、正規表現エンジンをスローする前に、コンパイルされた正規表現は単一の一致操作を実行する時間を表す、<ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt;</ph>次のタイミング チェック中に例外です。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout">
          <source>We recommend that you always set a default time-out value for a compiled regular expression.</source>
          <target state="translated">常にコンパイルされる正規表現の既定のタイムアウト値を設定することをお勧めします。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout">
          <source>Consumers of your regular expression library can override that time-out value by passing a <ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph> value that represents the new time-out interval to the compiled regular expression's class constructor.</source>
          <target state="translated">渡すことによって、正規表現ライブラリのコンシューマーがそのタイムアウト値をオーバーライドできます、<ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph>コンパイルされた正規表現のクラスのコンス トラクターへの新しいタイムアウト間隔を表す値です。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout">
          <source>You can assign a default time-out value to a <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo&gt;</ph> object in any of the following ways:</source>
          <target state="translated">既定のタイムアウト値を割り当てることができます、<ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo&gt;</ph>で、次の方法のいずれかのオブジェクト。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout">
          <source>By calling the <ph id="ph1">&lt;xref:System.AppDomain.SetData%2A?displayProperty=nameWithType&gt;</ph> method and providing the string representation of a <ph id="ph2">&lt;xref:System.TimeSpan&gt;</ph> value for the "REGEX_DEFAULT_MATCH_TIMEOUT" property.</source>
          <target state="translated">呼び出して、<ph id="ph1">&lt;xref:System.AppDomain.SetData%2A?displayProperty=nameWithType&gt;</ph>メソッドとの文字列表現を提供する、 <ph id="ph2">&lt;xref:System.TimeSpan&gt;</ph> "REGEX_DEFAULT_MATCH_TIMEOUT"プロパティの値。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout">
          <source>By calling the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.String%2CSystem.String%2CSystem.Boolean%2CSystem.TimeSpan%29&gt;</ph> constructor and providing a value for the <ph id="ph2">`matchTimeout`</ph> parameter.</source>
          <target state="translated">呼び出して、<ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.String%2CSystem.String%2CSystem.Boolean%2CSystem.TimeSpan%29&gt;</ph>コンス トラクターとの値を提供する、<ph id="ph2">`matchTimeout`</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout">
          <source>By setting the value of this property.</source>
          <target state="translated">このプロパティの値を設定します。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout">
          <source>To set a reasonable time-out interval, consider the following factors:</source>
          <target state="translated">妥当なタイムアウトの間隔を設定するには、次の要因を検討してください。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout">
          <source>The length and complexity of the regular expression pattern.</source>
          <target state="translated">長さと複雑な正規表現パターンです。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout">
          <source>Longer and more complex regular expressions require more time than shorter and simpler ones.</source>
          <target state="translated">時間が長く、複雑な正規表現では、短くてわかりやすいものよりも時間が必要です。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout">
          <source>The expected machine load.</source>
          <target state="translated">予期されるマシンの負荷。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout">
          <source>Processing takes more time on systems with high CPU and memory utilization.</source>
          <target state="translated">処理では、CPU およびメモリ使用率が高いシステムでより多くの時間がかかります。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout">
          <source>The following example defines a single compiled regular expression named <ph id="ph1">`DuplicateChars`</ph> that identifies two or more occurrences of the same character in an input string.</source>
          <target state="translated">次の例では、という単一のコンパイルされた正規表現<ph id="ph1">`DuplicateChars`</ph>入力文字列内の同じ文字の 2 つ以上の出現を識別します。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout">
          <source>The compiled regular expression has a default time-out of 2 seconds.</source>
          <target state="translated">コンパイルされた正規表現は、2 秒の既定のタイムアウトがします。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout">
          <source>When you execute the example, it creates a class library named RegexLib.dll that contains the compiled regular expression.</source>
          <target state="translated">例を実行するときに、コンパイルされた正規表現を含む RegexLib.dll をという名前のクラス ライブラリを作成します。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout">
          <source>The regular expression pattern <ph id="ph1">`(\w)\1+`</ph> is defined as shown in the following table.</source>
          <target state="translated">正規表現パターン <ph id="ph1">`(\w)\1+`</ph> は、次の表に示すように定義されています。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout">
          <source>Pattern</source>
          <target state="translated">パターン</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout">
          <source>Description</source>
          <target state="translated">説明</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout">
          <source>Match any word character and assign it to the first capturing group.</source>
          <target state="translated">任意の単語文字に一致し、最初のキャプチャ グループに割り当てます。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout">
          <source>Match one or more occurrences of the value of the first captured group.</source>
          <target state="translated">最初のキャプチャ グループの値の 1 つまたは複数回の出現に一致します。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout">
          <source>The following example uses the <ph id="ph1">`DuplicatedChars`</ph> regular expression to identify duplicate characters in a string array.</source>
          <target state="translated">次の例では、<ph id="ph1">`DuplicatedChars`</ph>文字列配列に重複する文字を識別する正規表現。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout">
          <source>When it calls the <ph id="ph1">`DuplicatedChars`</ph> constructor, it changes the time-out interval to .5 seconds.</source>
          <target state="translated">呼び出すとき、<ph id="ph1">`DuplicatedChars`</ph>コンス トラクター、.5 秒間にタイムアウト間隔を変更します。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.Name">
          <source>Gets or sets the name of the type that represents the compiled regular expression.</source>
          <target state="translated">コンパイル済みの正規表現を表す型の名前を取得または設定します。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.Name">
          <source>The name of the new type.</source>
          <target state="translated">新しい型の名前。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.Name">
          <source>The <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo&gt;</ph> class is used to define a compiled regular expression, which is represented as a class derived from <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Regex&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo&gt;</ph>から派生したクラスとして表されるコンパイルされた正規表現を定義するクラスが使用される<ph id="ph2">&lt;xref:System.Text.RegularExpressions.Regex&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.Name">
          <source>The <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo.Name%2A&gt;</ph> property defines the class name of the regular expression type, and the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo.Namespace%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo.Name%2A&gt;</ph> properties together define its fully qualified name.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo.Name%2A&gt;</ph>プロパティは、正規表現型のクラス名を定義し、<ph id="ph2">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo.Namespace%2A&gt;</ph>と<ph id="ph3">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo.Name%2A&gt;</ph>プロパティが同時に、完全修飾名を定義します。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.Name">
          <source>The value for this property is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">このプロパティの値は <ph id="ph1">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.Name">
          <source>The value for this property is an empty string.</source>
          <target state="translated">このプロパティの値は空の文字列です。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.Namespace">
          <source>Gets or sets the namespace to which the new type belongs.</source>
          <target state="translated">新しい型の所属先となる名前空間を取得または設定します。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.Namespace">
          <source>The namespace of the new type.</source>
          <target state="translated">新しい型の名前空間。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.Namespace">
          <source>The <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo&gt;</ph> class is used to define a compiled regular expression, which is represented as a class derived from <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Regex&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo&gt;</ph>から派生したクラスとして表されるコンパイルされた正規表現を定義するクラスが使用される<ph id="ph2">&lt;xref:System.Text.RegularExpressions.Regex&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.Namespace">
          <source>The <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo.Namespace%2A&gt;</ph> property defines the namespace that contains the compiled regular expression type, and the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo.Namespace%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo.Name%2A&gt;</ph> properties together define its fully qualified name.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo.Namespace%2A&gt;</ph>プロパティは、コンパイルされた正規表現の種類を含む名前空間を定義し、<ph id="ph2">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo.Namespace%2A&gt;</ph>と<ph id="ph3">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo.Name%2A&gt;</ph>プロパティが同時に、完全修飾名を定義します。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.Namespace">
          <source>The value for this property is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">このプロパティの値は <ph id="ph1">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.Options">
          <source>Gets or sets the options to use when compiling the regular expression.</source>
          <target state="translated">正規表現をコンパイルするときに使用するオプションを取得または設定します。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.Options">
          <source>A bitwise combination of the enumeration values.</source>
          <target state="translated">列挙値のビットごとの組み合わせ。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.Options">
          <source>The <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A&gt;</ph> method generates an assembly that contains compiled regular expressions.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A&gt;</ph>メソッドは、コンパイルされた正規表現を格納するアセンブリを生成します。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.Options">
          <source>Therefore, you do not have to specify <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexOptions.Compiled&gt;</ph> as one of the values of this property.</source>
          <target state="translated">そのためを指定する必要はいない<ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexOptions.Compiled&gt;</ph>としてこのプロパティの値のいずれか。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.Options">
          <source>If it is present, the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexOptions.Compiled&gt;</ph> option is ignored.</source>
          <target state="translated">これが存在する場合、<ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexOptions.Compiled&gt;</ph>オプションは無視されます。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.Pattern">
          <source>Gets or sets the regular expression to compile.</source>
          <target state="translated">コンパイルする正規表現を取得または設定します。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.Pattern">
          <source>The regular expression to compile.</source>
          <target state="translated">コンパイルする正規表現。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.Pattern">
          <source>The <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo.Pattern%2A&gt;</ph> property can contain any valid regular expression.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo.Pattern%2A&gt;</ph>プロパティは、任意の有効な正規表現を含めることができます。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.Pattern">
          <source>If the value of the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo.Pattern%2A&gt;</ph> property is not a syntactically correct regular expression pattern, the call to the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A&gt;</ph> method throws an <ph id="ph3">&lt;xref:System.ArgumentException&gt;</ph>.</source>
          <target state="translated">場合の値、<ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo.Pattern%2A&gt;</ph>プロパティは構文的に正しい正規表現パターンへの呼び出しではありません、<ph id="ph2">&lt;xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A&gt;</ph>メソッドがスローされます、<ph id="ph3">&lt;xref:System.ArgumentException&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="P:System.Text.RegularExpressions.RegexCompilationInfo.Pattern">
          <source>The value for this property is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">このプロパティの値は <ph id="ph1">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>