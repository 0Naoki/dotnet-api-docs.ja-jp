<Type Name="RegexCompilationInfo" FullName="System.Text.RegularExpressions.RegexCompilationInfo">
  <TypeSignature Language="C#" Value="public class RegexCompilationInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit RegexCompilationInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Text.RegularExpressions.RegexCompilationInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class RegexCompilationInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class RegexCompilationInfo" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Text.RegularExpressions</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="2267b-101">正規表現をコンパイルしてスタンドアロン アセンブリを作成するために使用する正規表現についての情報を提供します。</span><span class="sxs-lookup"><span data-stu-id="2267b-101">Provides information about a regular expression that is used to compile a regular expression to a stand-alone assembly.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2267b-102">配列<xref:System.Text.RegularExpressions.RegexCompilationInfo>にオブジェクトが渡される、<xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A>メソッド、アセンブリに含まれる各正規表現に関する情報を提供します。</span><span class="sxs-lookup"><span data-stu-id="2267b-102">An array of <xref:System.Text.RegularExpressions.RegexCompilationInfo> objects is passed to the <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> method to provide information about each regular expression to be included in the assembly.</span></span> <span data-ttu-id="2267b-103">アセンブリに含まれているコンパイル済みの各正規表現がから派生したクラスとして表される<xref:System.Text.RegularExpressions.Regex>です。</span><span class="sxs-lookup"><span data-stu-id="2267b-103">Each compiled regular expression that is included in the assembly is represented as a class derived from <xref:System.Text.RegularExpressions.Regex>.</span></span> <span data-ttu-id="2267b-104">プロパティ、<xref:System.Text.RegularExpressions.RegexCompilationInfo>正規表現のクラス名、完全修飾名 (つまり、その名前空間とその型の名前)、正規表現パターン、(かどうか、正規表現が区別されません) などその他のオプションとタイムアウト間隔、正規表現エンジンは、一致を検索する期間を指定する型が定義されます。</span><span class="sxs-lookup"><span data-stu-id="2267b-104">The properties of the <xref:System.Text.RegularExpressions.RegexCompilationInfo> type define the regular expression's class name, its fully qualified name (that is, its namespace and its type name), its regular expression pattern, any additional options (such as whether the regular expression is case-insensitive), and a time-out interval that specifies how long the regular expression engine should search for a match.</span></span>  
  
 <span data-ttu-id="2267b-105">インスタンス化することができます、<xref:System.Text.RegularExpressions.RegexCompilationInfo>クラスのオーバー ロードされたコンス トラクターを呼び出してオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="2267b-105">You can instantiate a <xref:System.Text.RegularExpressions.RegexCompilationInfo> object by calling its overloaded class constructor.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2267b-106"><see cref="T:System.Text.RegularExpressions.RegexCompilationInfo" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="2267b-106">Initializes a new instance of the <see cref="T:System.Text.RegularExpressions.RegexCompilationInfo" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegexCompilationInfo (string pattern, System.Text.RegularExpressions.RegexOptions options, string name, string fullnamespace, bool ispublic);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string pattern, valuetype System.Text.RegularExpressions.RegexOptions options, string name, string fullnamespace, bool ispublic) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pattern As String, options As RegexOptions, name As String, fullnamespace As String, ispublic As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegexCompilationInfo(System::String ^ pattern, System::Text::RegularExpressions::RegexOptions options, System::String ^ name, System::String ^ fullnamespace, bool ispublic);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pattern" Type="System.String" />
        <Parameter Name="options" Type="System.Text.RegularExpressions.RegexOptions" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="fullnamespace" Type="System.String" />
        <Parameter Name="ispublic" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="pattern"><span data-ttu-id="2267b-107">コンパイルする正規表現。</span><span class="sxs-lookup"><span data-stu-id="2267b-107">The regular expression to compile.</span></span></param>
        <param name="options"><span data-ttu-id="2267b-108">正規表現をコンパイルするときに使用する正規表現オプション。</span><span class="sxs-lookup"><span data-stu-id="2267b-108">The regular expression options to use when compiling the regular expression.</span></span></param>
        <param name="name"><span data-ttu-id="2267b-109">コンパイル済みの正規表現を表す型の名前。</span><span class="sxs-lookup"><span data-stu-id="2267b-109">The name of the type that represents the compiled regular expression.</span></span></param>
        <param name="fullnamespace"><span data-ttu-id="2267b-110">新しい型の所属先となる名前空間。</span><span class="sxs-lookup"><span data-stu-id="2267b-110">The namespace to which the new type belongs.</span></span></param>
        <param name="ispublic">
          <span data-ttu-id="2267b-111">コンパイルされた正規表現をパブリックに参照できるようにする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2267b-111"><see langword="true" /> to make the compiled regular expression publicly visible; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="2267b-112">アセンブリに含める正規表現についての情報を格納する <see cref="T:System.Text.RegularExpressions.RegexCompilationInfo" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="2267b-112">Initializes a new instance of the <see cref="T:System.Text.RegularExpressions.RegexCompilationInfo" /> class that contains information about a regular expression to be included in an assembly.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2267b-113">各パラメーター、<xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.String%2CSystem.String%2CSystem.Boolean%29>コンス トラクターは、のプロパティに直接対応、<xref:System.Text.RegularExpressions.RegexCompilationInfo>クラスです。</span><span class="sxs-lookup"><span data-stu-id="2267b-113">Each parameter of the <xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> constructor directly corresponds to a property of the <xref:System.Text.RegularExpressions.RegexCompilationInfo> class.</span></span> <span data-ttu-id="2267b-114">すべてのプロパティは読み取り/書き込みであるためは、その値が直接割り当てることもできます。</span><span class="sxs-lookup"><span data-stu-id="2267b-114">Because all properties are read/write, their values can also be assigned directly.</span></span>  
  
 <span data-ttu-id="2267b-115"><xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A>メソッドは、コンパイルされた正規表現を格納するアセンブリを生成します。</span><span class="sxs-lookup"><span data-stu-id="2267b-115">The <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> method generates an assembly that contains compiled regular expressions.</span></span> <span data-ttu-id="2267b-116">そのため、指定しないでください<xref:System.Text.RegularExpressions.RegexOptions.Compiled>の値の 1 つとして`options`です。</span><span class="sxs-lookup"><span data-stu-id="2267b-116">Therefore, you should not specify <xref:System.Text.RegularExpressions.RegexOptions.Compiled> as one of the values of `options`.</span></span>  
  
 <span data-ttu-id="2267b-117">場合`ispublic`は`true`、コンパイルされた正規表現クラスは、パブリック アクセシビリティを指定します。</span><span class="sxs-lookup"><span data-stu-id="2267b-117">If `ispublic` is `true`, the compiled regular expression class is given public accessibility.</span></span> <span data-ttu-id="2267b-118">つまり、任意のアセンブリで実行するコードからインスタンス化することができます。</span><span class="sxs-lookup"><span data-stu-id="2267b-118">That is, it can be instantiated from code that executes in any assembly.</span></span> <span data-ttu-id="2267b-119">場合`ispublic`は`false`、コンパイルされた正規表現クラスが指定された`internal`(C# の場合) または`Friend`(Visual Basic) のアクセシビリティ。</span><span class="sxs-lookup"><span data-stu-id="2267b-119">If `ispublic` is `false`, the compiled regular expression class is given `internal` (in C#) or `Friend` (in Visual Basic) accessibility.</span></span> <span data-ttu-id="2267b-120">つまり、正規表現クラスと同じアセンブリで実行するコードからのみインスタンス化することができます。</span><span class="sxs-lookup"><span data-stu-id="2267b-120">That is, it can be instantiated only from code that executes in the same assembly as the regular expression class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2267b-121">次の例では、作成し、2 つのステップでコンパイルされた正規表現を使用します。</span><span class="sxs-lookup"><span data-stu-id="2267b-121">The following example creates and uses a compiled regular expression in two steps.</span></span>  
  
 <span data-ttu-id="2267b-122">最初のステップでコンパイルし、次のコード例を実行します。</span><span class="sxs-lookup"><span data-stu-id="2267b-122">In the first step, compile and execute the following code example.</span></span> <span data-ttu-id="2267b-123"><xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%2A>コード例ではコンス トラクターは、コンパイルされた正規表現を定義します。</span><span class="sxs-lookup"><span data-stu-id="2267b-123">The <xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%2A> constructor in the code example defines a compiled regular expression.</span></span> <span data-ttu-id="2267b-124">コードの実行の結果は、コンパイルされた正規表現型という名前を含む FishRegex.dll をという名前のアセンブリ`FishRegex`です。</span><span class="sxs-lookup"><span data-stu-id="2267b-124">The result of executing the code is an assembly named FishRegex.dll that contains a compiled regular expression type named `FishRegex`.</span></span>  
  
 [!code-csharp[sys.txt.rgxCompInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.txt.rgxCompInfo/cs/genFishRegex.cs#1)]
 [!code-vb[sys.txt.rgxCompInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.txt.rgxCompInfo/vb/genFishRegex.vb#1)]  
  
 <span data-ttu-id="2267b-125">2 番目の手順で、FishRegex.dll への参照を使用して次のコード例をコンパイルして、結果として得られる実行可能ファイルを実行します。</span><span class="sxs-lookup"><span data-stu-id="2267b-125">In the second step, compile the following code example using a reference to FishRegex.dll, and then run the resulting executable file.</span></span> <span data-ttu-id="2267b-126">実行可能ファイルを使用してターゲット文字列に一致する、`FishRegex`型、および対象の文字列に一致する、グループ、キャプチャ グループ、および一致項目のインデックス位置が表示されます。</span><span class="sxs-lookup"><span data-stu-id="2267b-126">The executable file matches a target string by using the `FishRegex` type, and displays the match, group, capture group, and index position of the matches in the target string.</span></span>  
  
 [!code-csharp[sys.txt.rgxCompInfo#2](~/samples/snippets/csharp/VS_Snippets_CLR/sys.txt.rgxCompInfo/cs/useFishRegex.cs#2)]
 [!code-vb[sys.txt.rgxCompInfo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.txt.rgxCompInfo/vb/useFishRegex.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2267b-127"><paramref name="name" /> は <see cref="F:System.String.Empty" />です。</span><span class="sxs-lookup"><span data-stu-id="2267b-127"><paramref name="name" /> is <see cref="F:System.String.Empty" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2267b-128"><paramref name="pattern" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="2267b-128"><paramref name="pattern" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="2267b-129">- または -</span><span class="sxs-lookup"><span data-stu-id="2267b-129">-or-</span></span>  
  
 <span data-ttu-id="2267b-130"><paramref name="name" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="2267b-130"><paramref name="name" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="2267b-131">- または -</span><span class="sxs-lookup"><span data-stu-id="2267b-131">-or-</span></span>  
  
 <span data-ttu-id="2267b-132"><paramref name="fullnamespace" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="2267b-132"><paramref name="fullnamespace" /> is <see langword="null" />.</span></span></exception>
        <block subset="none" type="usage">
          <para><span data-ttu-id="2267b-133">このコンス トラクターでは、作成元でのアプリケーション ドメインの既定のタイムアウト値を使用してコンパイル済みの正規表現を作成します。</span><span class="sxs-lookup"><span data-stu-id="2267b-133">This constructor creates a compiled regular expression that uses the default time-out value of the application domain in which it is created.</span></span> <span data-ttu-id="2267b-134">タイムアウト値がアプリケーション ドメインに対して定義されている場合、コンパイルされた正規表現に値が使用<see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />、パターン一致の操作がタイムアウトを防ぐことができます。コンパイルされた正規表現を作成するための推奨されるコンス トラクターは<see cref="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)" />、タイムアウト間隔を設定することができます。</span><span class="sxs-lookup"><span data-stu-id="2267b-134">If a time-out value is defined for the application domain, the compiled regular expression uses the value <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, which prevents a pattern-matching operation from timing out. The recommended constructor for creating a compiled regular expression is <see cref="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)" />, which lets you set the time-out interval.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegexCompilationInfo (string pattern, System.Text.RegularExpressions.RegexOptions options, string name, string fullnamespace, bool ispublic, TimeSpan matchTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string pattern, valuetype System.Text.RegularExpressions.RegexOptions options, string name, string fullnamespace, bool ispublic, valuetype System.TimeSpan matchTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pattern As String, options As RegexOptions, name As String, fullnamespace As String, ispublic As Boolean, matchTimeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegexCompilationInfo(System::String ^ pattern, System::Text::RegularExpressions::RegexOptions options, System::String ^ name, System::String ^ fullnamespace, bool ispublic, TimeSpan matchTimeout);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pattern" Type="System.String" />
        <Parameter Name="options" Type="System.Text.RegularExpressions.RegexOptions" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="fullnamespace" Type="System.String" />
        <Parameter Name="ispublic" Type="System.Boolean" />
        <Parameter Name="matchTimeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="pattern"><span data-ttu-id="2267b-135">コンパイルする正規表現。</span><span class="sxs-lookup"><span data-stu-id="2267b-135">The regular expression to compile.</span></span></param>
        <param name="options"><span data-ttu-id="2267b-136">正規表現をコンパイルするときに使用する正規表現オプション。</span><span class="sxs-lookup"><span data-stu-id="2267b-136">The regular expression options to use when compiling the regular expression.</span></span></param>
        <param name="name"><span data-ttu-id="2267b-137">コンパイル済みの正規表現を表す型の名前。</span><span class="sxs-lookup"><span data-stu-id="2267b-137">The name of the type that represents the compiled regular expression.</span></span></param>
        <param name="fullnamespace"><span data-ttu-id="2267b-138">新しい型の所属先となる名前空間。</span><span class="sxs-lookup"><span data-stu-id="2267b-138">The namespace to which the new type belongs.</span></span></param>
        <param name="ispublic">
          <span data-ttu-id="2267b-139">コンパイルされた正規表現をパブリックに参照できるようにする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2267b-139"><see langword="true" /> to make the compiled regular expression publicly visible; otherwise, <see langword="false" />.</span></span></param>
        <param name="matchTimeout"><span data-ttu-id="2267b-140">正規表現の既定のタイムアウト間隔。</span><span class="sxs-lookup"><span data-stu-id="2267b-140">The default time-out interval for the regular expression.</span></span></param>
        <summary><span data-ttu-id="2267b-141">アセンブリに含めるタイムアウト値を指定した正規表現についての情報を格納する <see cref="T:System.Text.RegularExpressions.RegexCompilationInfo" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="2267b-141">Initializes a new instance of the <see cref="T:System.Text.RegularExpressions.RegexCompilationInfo" /> class that contains information about a regular expression with a specified time-out value to be included in an assembly.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2267b-142">各パラメーター、<xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.String%2CSystem.String%2CSystem.Boolean%29>コンス トラクターは、のプロパティに直接対応、<xref:System.Text.RegularExpressions.RegexCompilationInfo>クラスです。</span><span class="sxs-lookup"><span data-stu-id="2267b-142">Each parameter of the <xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> constructor directly corresponds to a property of the <xref:System.Text.RegularExpressions.RegexCompilationInfo> class.</span></span> <span data-ttu-id="2267b-143">すべてのプロパティは読み取り/書き込みであるためは、その値が直接割り当てることもできます。</span><span class="sxs-lookup"><span data-stu-id="2267b-143">Because all properties are read/write, their values can also be assigned directly.</span></span>  
  
 <span data-ttu-id="2267b-144"><xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A>メソッドは、コンパイルされた正規表現を格納するアセンブリを生成します。</span><span class="sxs-lookup"><span data-stu-id="2267b-144">The <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> method generates an assembly that contains compiled regular expressions.</span></span> <span data-ttu-id="2267b-145">そのため、指定しないでください<xref:System.Text.RegularExpressions.RegexOptions.Compiled>の値の 1 つとして`options`です。</span><span class="sxs-lookup"><span data-stu-id="2267b-145">Therefore, you should not specify <xref:System.Text.RegularExpressions.RegexOptions.Compiled> as one of the values of `options`.</span></span>  
  
 <span data-ttu-id="2267b-146">場合`ispublic`は`true`、コンパイルされた正規表現クラスは、パブリック アクセシビリティを指定します。</span><span class="sxs-lookup"><span data-stu-id="2267b-146">If `ispublic` is `true`, the compiled regular expression class is given public accessibility.</span></span> <span data-ttu-id="2267b-147">つまり、任意のアセンブリで実行するコードからインスタンス化することができます。</span><span class="sxs-lookup"><span data-stu-id="2267b-147">That is, it can be instantiated from code that executes in any assembly.</span></span> <span data-ttu-id="2267b-148">場合`ispublic`は`false`、コンパイルされた正規表現クラスが指定された`internal`(C# の場合) または`Friend`(Visual Basic) のアクセシビリティ。</span><span class="sxs-lookup"><span data-stu-id="2267b-148">If `ispublic` is `false`, the compiled regular expression class is given `internal` (in C#) or `Friend` (in Visual Basic) accessibility.</span></span> <span data-ttu-id="2267b-149">つまり、正規表現クラスと同じアセンブリで実行するコードからのみインスタンス化することができます。</span><span class="sxs-lookup"><span data-stu-id="2267b-149">That is, it can be instantiated only from code that executes in the same assembly as the regular expression class.</span></span>  
  
 <span data-ttu-id="2267b-150">`matchTimeout`パラメーターは、コンパイルされた正規表現の既定のタイムアウト間隔を定義します。</span><span class="sxs-lookup"><span data-stu-id="2267b-150">The `matchTimeout` parameter defines the default time-out interval for the compiled regular expression.</span></span> <span data-ttu-id="2267b-151">この値は概算の操作がタイムアウトになると、正規表現エンジンをスローする前に、コンパイルされた正規表現オブジェクトは 1 つの一致操作を実行する時間を表す、<xref:System.Text.RegularExpressions.RegexMatchTimeoutException>次のタイミング チェック中に例外です。</span><span class="sxs-lookup"><span data-stu-id="2267b-151">This value represents the approximate amount of time that a compiled regular expression object will execute a single matching operation before the operation times out and the regular expression engine throws a <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception during its next timing check.</span></span> <span data-ttu-id="2267b-152">タイムアウト値の詳細については、次を参照してください。、<xref:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="2267b-152">For additional information about the time-out value, see the <xref:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout%2A> property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2267b-153">常にコンパイルされる正規表現の既定のタイムアウト値を設定することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="2267b-153">We recommend that you always set a default time-out value for a compiled regular expression.</span></span> <span data-ttu-id="2267b-154">渡すことによって、正規表現ライブラリのコンシューマーがそのタイムアウト値をオーバーライドできます、<xref:System.TimeSpan>をこのコンス トラクター オーバー ロードに新しいタイムアウト間隔を表す値です。</span><span class="sxs-lookup"><span data-stu-id="2267b-154">Consumers of your regular expression library can override that time-out value by passing a <xref:System.TimeSpan> value that represents the new time-out interval to this constructor overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2267b-155">次の例では、という単一のコンパイルされた正規表現`DuplicateChars`入力文字列内の同じ文字の 2 つ以上の出現を識別します。</span><span class="sxs-lookup"><span data-stu-id="2267b-155">The following example defines a single compiled regular expression named `DuplicateChars` that identifies two or more occurrences of the same character in an input string.</span></span> <span data-ttu-id="2267b-156">コンパイルされた正規表現は、2 秒の既定のタイムアウトがします。</span><span class="sxs-lookup"><span data-stu-id="2267b-156">The compiled regular expression has a default time-out of 2 seconds.</span></span> <span data-ttu-id="2267b-157">例を実行するときに、コンパイルされた正規表現を含む RegexLib.dll をという名前のクラス ライブラリを作成します。</span><span class="sxs-lookup"><span data-stu-id="2267b-157">When you execute the example, it creates a class library named RegexLib.dll that contains the compiled regular expression.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regexcompilationinfo.matchtimeout/cs/example1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regexcompilationinfo.matchtimeout/vb/example1.vb#1)]  
  
 <span data-ttu-id="2267b-158">正規表現パターン `(\w)\1+` は、次の表に示すように定義されています。</span><span class="sxs-lookup"><span data-stu-id="2267b-158">The regular expression pattern `(\w)\1+` is defined as shown in the following table.</span></span>  
  
|<span data-ttu-id="2267b-159">パターン</span><span class="sxs-lookup"><span data-stu-id="2267b-159">Pattern</span></span>|<span data-ttu-id="2267b-160">説明</span><span class="sxs-lookup"><span data-stu-id="2267b-160">Description</span></span>|  
|-------------|-----------------|  
|`(\w)`|<span data-ttu-id="2267b-161">任意の単語文字に一致し、最初のキャプチャ グループに割り当てます。</span><span class="sxs-lookup"><span data-stu-id="2267b-161">Match any word character and assign it to the first capturing group.</span></span>|  
|`\1+`|<span data-ttu-id="2267b-162">最初のキャプチャ グループの値の 1 つまたは複数回の出現に一致します。</span><span class="sxs-lookup"><span data-stu-id="2267b-162">Match one or more occurrences of the value of the first captured group.</span></span>|  
  
 <span data-ttu-id="2267b-163">次の例では、`DuplicatedChars`文字列配列に重複する文字を識別する正規表現。</span><span class="sxs-lookup"><span data-stu-id="2267b-163">The following example uses the `DuplicatedChars` regular expression to identify duplicate characters in a string array.</span></span> <span data-ttu-id="2267b-164">呼び出すとき、`DuplicatedChars`コンス トラクター、.5 秒間にタイムアウト間隔を変更します。</span><span class="sxs-lookup"><span data-stu-id="2267b-164">When it calls the `DuplicatedChars` constructor, it changes the time-out interval to .5 seconds.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regexcompilationinfo.matchtimeout/cs/example1a.cs#2)]
 [!code-vb[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regexcompilationinfo.matchtimeout/vb/example1a.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2267b-165"><paramref name="name" /> は <see cref="F:System.String.Empty" />です。</span><span class="sxs-lookup"><span data-stu-id="2267b-165"><paramref name="name" /> is <see cref="F:System.String.Empty" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2267b-166"><paramref name="pattern" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="2267b-166"><paramref name="pattern" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="2267b-167">- または -</span><span class="sxs-lookup"><span data-stu-id="2267b-167">-or-</span></span>  
  
 <span data-ttu-id="2267b-168"><paramref name="name" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="2267b-168"><paramref name="name" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="2267b-169">- または -</span><span class="sxs-lookup"><span data-stu-id="2267b-169">-or-</span></span>  
  
 <span data-ttu-id="2267b-170"><paramref name="fullnamespace" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="2267b-170"><paramref name="fullnamespace" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2267b-171"><paramref name="matchTimeout" /> が負の値か、0 か、または約 24 日を超えています。</span><span class="sxs-lookup"><span data-stu-id="2267b-171"><paramref name="matchTimeout" /> is negative, zero, or greater than approximately 24 days.</span></span></exception>
        <altmember cref="P:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout" />
      </Docs>
    </Member>
    <Member MemberName="IsPublic">
      <MemberSignature Language="C#" Value="public bool IsPublic { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPublic" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.RegexCompilationInfo.IsPublic" />
      <MemberSignature Language="VB.NET" Value="Public Property IsPublic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPublic { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2267b-172">コンパイルされた正規表現をパブリックに参照できるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="2267b-172">Gets or sets a value that indicates whether the compiled regular expression has public visibility.</span></span></summary>
        <value>
          <span data-ttu-id="2267b-173">正規表現をパブリックに参照できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2267b-173"><see langword="true" /> if the regular expression has public visibility; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2267b-174">場合、<xref:System.Text.RegularExpressions.RegexCompilationInfo.IsPublic%2A>プロパティは`false`、現在のインスタンスで定義された正規表現クラスは、クラスが含まれているアセンブリで実行されているコードでのみインスタンス化できます。</span><span class="sxs-lookup"><span data-stu-id="2267b-174">If the <xref:System.Text.RegularExpressions.RegexCompilationInfo.IsPublic%2A> property is `false`, the regular expression class defined by the current instance can be instantiated only by code that is executing in the assembly that contains the class.</span></span> <span data-ttu-id="2267b-175">ただし、ため、<xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A?displayProperty=nameWithType>コンパイルされる正規表現のみを含み、追加する追加のコードを許可しないアセンブリを生成するメソッド、通常、このプロパティの値を代入する必要はありません`false`です。</span><span class="sxs-lookup"><span data-stu-id="2267b-175">However, because the <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A?displayProperty=nameWithType> method generates an assembly that contains only compiled regular expressions and does not allow additional code to be added, there is generally no reason to assign this property a value of `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan MatchTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan MatchTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property MatchTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan MatchTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2267b-176">正規表現の既定のタイムアウト間隔を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="2267b-176">Gets or sets the regular expression's default time-out interval.</span></span></summary>
        <value><span data-ttu-id="2267b-177"><see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> がスローされる前にパターン一致操作で経過できる既定の最大時間間隔、またはタイムアウトが無効な場合は <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />。</span><span class="sxs-lookup"><span data-stu-id="2267b-177">The default maximum time interval that can elapse in a pattern-matching operation before a <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> is thrown, or <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> if time-outs are disabled.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2267b-178"><xref:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout%2A>プロパティは、コンパイルされた正規表現の既定のタイムアウト間隔を定義します。</span><span class="sxs-lookup"><span data-stu-id="2267b-178">The <xref:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout%2A> property defines the default time-out interval for the compiled regular expression.</span></span> <span data-ttu-id="2267b-179">この値は概算の操作がタイムアウトになると、正規表現エンジンをスローする前に、コンパイルされた正規表現は単一の一致操作を実行する時間を表す、<xref:System.Text.RegularExpressions.RegexMatchTimeoutException>次のタイミング チェック中に例外です。</span><span class="sxs-lookup"><span data-stu-id="2267b-179">This value represents the approximate amount of time that a compiled regular expression will execute a single matching operation before the operation times out and the regular expression engine throws a <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception during its next timing check.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2267b-180">常にコンパイルされる正規表現の既定のタイムアウト値を設定することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="2267b-180">We recommend that you always set a default time-out value for a compiled regular expression.</span></span> <span data-ttu-id="2267b-181">渡すことによって、正規表現ライブラリのコンシューマーがそのタイムアウト値をオーバーライドできます、<xref:System.TimeSpan>コンパイルされた正規表現のクラスのコンス トラクターへの新しいタイムアウト間隔を表す値です。</span><span class="sxs-lookup"><span data-stu-id="2267b-181">Consumers of your regular expression library can override that time-out value by passing a <xref:System.TimeSpan> value that represents the new time-out interval to the compiled regular expression's class constructor.</span></span>  
  
 <span data-ttu-id="2267b-182">既定のタイムアウト値を割り当てることができます、<xref:System.Text.RegularExpressions.RegexCompilationInfo>で、次の方法のいずれかのオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="2267b-182">You can assign a default time-out value to a <xref:System.Text.RegularExpressions.RegexCompilationInfo> object in any of the following ways:</span></span>  
  
-   <span data-ttu-id="2267b-183">呼び出して、<xref:System.AppDomain.SetData%2A?displayProperty=nameWithType>メソッドとの文字列表現を提供する、 <xref:System.TimeSpan> "REGEX_DEFAULT_MATCH_TIMEOUT"プロパティの値。</span><span class="sxs-lookup"><span data-stu-id="2267b-183">By calling the <xref:System.AppDomain.SetData%2A?displayProperty=nameWithType> method and providing the string representation of a <xref:System.TimeSpan> value for the "REGEX_DEFAULT_MATCH_TIMEOUT" property.</span></span>  
  
-   <span data-ttu-id="2267b-184">呼び出して、<xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.String%2CSystem.String%2CSystem.Boolean%2CSystem.TimeSpan%29>コンス トラクターとの値を提供する、`matchTimeout`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="2267b-184">By calling the <xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.String%2CSystem.String%2CSystem.Boolean%2CSystem.TimeSpan%29> constructor and providing a value for the `matchTimeout` parameter.</span></span>  
  
-   <span data-ttu-id="2267b-185">このプロパティの値を設定します。</span><span class="sxs-lookup"><span data-stu-id="2267b-185">By setting the value of this property.</span></span>  
  
 <span data-ttu-id="2267b-186">妥当なタイムアウトの間隔を設定するには、次の要因を検討してください。</span><span class="sxs-lookup"><span data-stu-id="2267b-186">To set a reasonable time-out interval, consider the following factors:</span></span>  
  
-   <span data-ttu-id="2267b-187">長さと複雑な正規表現パターンです。</span><span class="sxs-lookup"><span data-stu-id="2267b-187">The length and complexity of the regular expression pattern.</span></span> <span data-ttu-id="2267b-188">時間が長く、複雑な正規表現では、短くてわかりやすいものよりも時間が必要です。</span><span class="sxs-lookup"><span data-stu-id="2267b-188">Longer and more complex regular expressions require more time than shorter and simpler ones.</span></span>  
  
-   <span data-ttu-id="2267b-189">予期されるマシンの負荷。</span><span class="sxs-lookup"><span data-stu-id="2267b-189">The expected machine load.</span></span> <span data-ttu-id="2267b-190">処理では、CPU およびメモリ使用率が高いシステムでより多くの時間がかかります。</span><span class="sxs-lookup"><span data-stu-id="2267b-190">Processing takes more time on systems with high CPU and memory utilization.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2267b-191">次の例では、という単一のコンパイルされた正規表現`DuplicateChars`入力文字列内の同じ文字の 2 つ以上の出現を識別します。</span><span class="sxs-lookup"><span data-stu-id="2267b-191">The following example defines a single compiled regular expression named `DuplicateChars` that identifies two or more occurrences of the same character in an input string.</span></span> <span data-ttu-id="2267b-192">コンパイルされた正規表現は、2 秒の既定のタイムアウトがします。</span><span class="sxs-lookup"><span data-stu-id="2267b-192">The compiled regular expression has a default time-out of 2 seconds.</span></span> <span data-ttu-id="2267b-193">例を実行するときに、コンパイルされた正規表現を含む RegexLib.dll をという名前のクラス ライブラリを作成します。</span><span class="sxs-lookup"><span data-stu-id="2267b-193">When you execute the example, it creates a class library named RegexLib.dll that contains the compiled regular expression.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regexcompilationinfo.matchtimeout/cs/example1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regexcompilationinfo.matchtimeout/vb/example1.vb#1)]  
  
 <span data-ttu-id="2267b-194">正規表現パターン `(\w)\1+` は、次の表に示すように定義されています。</span><span class="sxs-lookup"><span data-stu-id="2267b-194">The regular expression pattern `(\w)\1+` is defined as shown in the following table.</span></span>  
  
|<span data-ttu-id="2267b-195">パターン</span><span class="sxs-lookup"><span data-stu-id="2267b-195">Pattern</span></span>|<span data-ttu-id="2267b-196">説明</span><span class="sxs-lookup"><span data-stu-id="2267b-196">Description</span></span>|  
|-------------|-----------------|  
|`(\w)`|<span data-ttu-id="2267b-197">任意の単語文字に一致し、最初のキャプチャ グループに割り当てます。</span><span class="sxs-lookup"><span data-stu-id="2267b-197">Match any word character and assign it to the first capturing group.</span></span>|  
|`\1+`|<span data-ttu-id="2267b-198">最初のキャプチャ グループの値の 1 つまたは複数回の出現に一致します。</span><span class="sxs-lookup"><span data-stu-id="2267b-198">Match one or more occurrences of the value of the first captured group.</span></span>|  
  
 <span data-ttu-id="2267b-199">次の例では、`DuplicatedChars`文字列配列に重複する文字を識別する正規表現。</span><span class="sxs-lookup"><span data-stu-id="2267b-199">The following example uses the `DuplicatedChars` regular expression to identify duplicate characters in a string array.</span></span> <span data-ttu-id="2267b-200">呼び出すとき、`DuplicatedChars`コンス トラクター、.5 秒間にタイムアウト間隔を変更します。</span><span class="sxs-lookup"><span data-stu-id="2267b-200">When it calls the `DuplicatedChars` constructor, it changes the time-out interval to .5 seconds.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regexcompilationinfo.matchtimeout/cs/example1a.cs#2)]
 [!code-vb[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regexcompilationinfo.matchtimeout/vb/example1a.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.RegexCompilationInfo.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2267b-201">コンパイル済みの正規表現を表す型の名前を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="2267b-201">Gets or sets the name of the type that represents the compiled regular expression.</span></span></summary>
        <value><span data-ttu-id="2267b-202">新しい型の名前。</span><span class="sxs-lookup"><span data-stu-id="2267b-202">The name of the new type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2267b-203"><xref:System.Text.RegularExpressions.RegexCompilationInfo>から派生したクラスとして表されるコンパイルされた正規表現を定義するクラスが使用される<xref:System.Text.RegularExpressions.Regex>です。</span><span class="sxs-lookup"><span data-stu-id="2267b-203">The <xref:System.Text.RegularExpressions.RegexCompilationInfo> class is used to define a compiled regular expression, which is represented as a class derived from <xref:System.Text.RegularExpressions.Regex>.</span></span> <span data-ttu-id="2267b-204"><xref:System.Text.RegularExpressions.RegexCompilationInfo.Name%2A>プロパティは、正規表現型のクラス名を定義し、<xref:System.Text.RegularExpressions.RegexCompilationInfo.Namespace%2A>と<xref:System.Text.RegularExpressions.RegexCompilationInfo.Name%2A>プロパティが同時に、完全修飾名を定義します。</span><span class="sxs-lookup"><span data-stu-id="2267b-204">The <xref:System.Text.RegularExpressions.RegexCompilationInfo.Name%2A> property defines the class name of the regular expression type, and the <xref:System.Text.RegularExpressions.RegexCompilationInfo.Namespace%2A> and <xref:System.Text.RegularExpressions.RegexCompilationInfo.Name%2A> properties together define its fully qualified name.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2267b-205">このプロパティの値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="2267b-205">The value for this property is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2267b-206">このプロパティの値は空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="2267b-206">The value for this property is an empty string.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.RegexCompilationInfo.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2267b-207">新しい型の所属先となる名前空間を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="2267b-207">Gets or sets the namespace to which the new type belongs.</span></span></summary>
        <value><span data-ttu-id="2267b-208">新しい型の名前空間。</span><span class="sxs-lookup"><span data-stu-id="2267b-208">The namespace of the new type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2267b-209"><xref:System.Text.RegularExpressions.RegexCompilationInfo>から派生したクラスとして表されるコンパイルされた正規表現を定義するクラスが使用される<xref:System.Text.RegularExpressions.Regex>です。</span><span class="sxs-lookup"><span data-stu-id="2267b-209">The <xref:System.Text.RegularExpressions.RegexCompilationInfo> class is used to define a compiled regular expression, which is represented as a class derived from <xref:System.Text.RegularExpressions.Regex>.</span></span> <span data-ttu-id="2267b-210"><xref:System.Text.RegularExpressions.RegexCompilationInfo.Namespace%2A>プロパティは、コンパイルされた正規表現の種類を含む名前空間を定義し、<xref:System.Text.RegularExpressions.RegexCompilationInfo.Namespace%2A>と<xref:System.Text.RegularExpressions.RegexCompilationInfo.Name%2A>プロパティが同時に、完全修飾名を定義します。</span><span class="sxs-lookup"><span data-stu-id="2267b-210">The <xref:System.Text.RegularExpressions.RegexCompilationInfo.Namespace%2A> property defines the namespace that contains the compiled regular expression type, and the <xref:System.Text.RegularExpressions.RegexCompilationInfo.Namespace%2A> and <xref:System.Text.RegularExpressions.RegexCompilationInfo.Name%2A> properties together define its fully qualified name.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2267b-211">このプロパティの値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="2267b-211">The value for this property is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="public System.Text.RegularExpressions.RegexOptions Options { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Text.RegularExpressions.RegexOptions Options" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.RegexCompilationInfo.Options" />
      <MemberSignature Language="VB.NET" Value="Public Property Options As RegexOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::RegularExpressions::RegexOptions Options { System::Text::RegularExpressions::RegexOptions get(); void set(System::Text::RegularExpressions::RegexOptions value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.RegexOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2267b-212">正規表現をコンパイルするときに使用するオプションを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="2267b-212">Gets or sets the options to use when compiling the regular expression.</span></span></summary>
        <value><span data-ttu-id="2267b-213">列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="2267b-213">A bitwise combination of the enumeration values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2267b-214"><xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A>メソッドは、コンパイルされた正規表現を格納するアセンブリを生成します。</span><span class="sxs-lookup"><span data-stu-id="2267b-214">The <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> method generates an assembly that contains compiled regular expressions.</span></span> <span data-ttu-id="2267b-215">そのためを指定する必要はいない<xref:System.Text.RegularExpressions.RegexOptions.Compiled>としてこのプロパティの値のいずれか。</span><span class="sxs-lookup"><span data-stu-id="2267b-215">Therefore, you do not have to specify <xref:System.Text.RegularExpressions.RegexOptions.Compiled> as one of the values of this property.</span></span> <span data-ttu-id="2267b-216">これが存在する場合、<xref:System.Text.RegularExpressions.RegexOptions.Compiled>オプションは無視されます。</span><span class="sxs-lookup"><span data-stu-id="2267b-216">If it is present, the <xref:System.Text.RegularExpressions.RegexOptions.Compiled> option is ignored.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pattern">
      <MemberSignature Language="C#" Value="public string Pattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Pattern" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.RegexCompilationInfo.Pattern" />
      <MemberSignature Language="VB.NET" Value="Public Property Pattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Pattern { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2267b-217">コンパイルする正規表現を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="2267b-217">Gets or sets the regular expression to compile.</span></span></summary>
        <value><span data-ttu-id="2267b-218">コンパイルする正規表現。</span><span class="sxs-lookup"><span data-stu-id="2267b-218">The regular expression to compile.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2267b-219"><xref:System.Text.RegularExpressions.RegexCompilationInfo.Pattern%2A>プロパティは、任意の有効な正規表現を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="2267b-219">The <xref:System.Text.RegularExpressions.RegexCompilationInfo.Pattern%2A> property can contain any valid regular expression.</span></span> <span data-ttu-id="2267b-220">場合の値、<xref:System.Text.RegularExpressions.RegexCompilationInfo.Pattern%2A>プロパティは構文的に正しい正規表現パターンへの呼び出しではありません、<xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A>メソッドがスローされます、<xref:System.ArgumentException>です。</span><span class="sxs-lookup"><span data-stu-id="2267b-220">If the value of the <xref:System.Text.RegularExpressions.RegexCompilationInfo.Pattern%2A> property is not a syntactically correct regular expression pattern, the call to the <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> method throws an <xref:System.ArgumentException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2267b-221">このプロパティの値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="2267b-221">The value for this property is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>