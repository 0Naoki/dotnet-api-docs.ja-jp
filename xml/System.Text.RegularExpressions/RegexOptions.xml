<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="RegexOptions.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5104d13d4e5feaf9355bd1e7502dc0e03ce40ec5e.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">104d13d4e5feaf9355bd1e7502dc0e03ce40ec5e</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Text.RegularExpressions.RegexOptions">
          <source>Provides enumerated values to use to set regular expression options.</source>
          <target state="translated">正規表現オプションを設定するために使用する列挙値を提供します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.RegexOptions">
          <source>A <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexOptions&gt;</ph> value can be provided as a parameter to the following members of the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Regex&gt;</ph> class:</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexOptions&gt;</ph>の次のメンバーに値をパラメーターとして指定することができます、<ph id="ph2">&lt;xref:System.Text.RegularExpressions.Regex&gt;</ph>クラス。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.RegexOptions">
          <source>The <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%29?displayProperty=nameWithType&gt;</ph> class constructor.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%29?displayProperty=nameWithType&gt;</ph>クラスのコンス トラクターです。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.RegexOptions">
          <source>The <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex.Split%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex.Split%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%29?displayProperty=nameWithType&gt;</ph> メソッド。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.RegexOptions">
          <source>The <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex.IsMatch%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex.IsMatch%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%29?displayProperty=nameWithType&gt;</ph> メソッド。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.RegexOptions">
          <source>The <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex.Match%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex.Match%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%29?displayProperty=nameWithType&gt;</ph> メソッド。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.RegexOptions">
          <source>The <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%29?displayProperty=nameWithType&gt;</ph> メソッド。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.RegexOptions">
          <source>The <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex.Replace%28System.String%2CSystem.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%29?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Regex.Replace%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.MatchEvaluator%2CSystem.Text.RegularExpressions.RegexOptions%29?displayProperty=nameWithType&gt;</ph> methods.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex.Replace%28System.String%2CSystem.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%29?displayProperty=nameWithType&gt;</ph>と<ph id="ph2">&lt;xref:System.Text.RegularExpressions.Regex.Replace%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.MatchEvaluator%2CSystem.Text.RegularExpressions.RegexOptions%29?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.RegexOptions">
          <source>A <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexOptions&gt;</ph> value can also be supplied as a parameter to the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%2A&gt;</ph> constructor, or it can be assigned directly to the <ph id="ph3">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo.Options%2A&gt;</ph> property.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexOptions&gt;</ph>へのパラメーターとして値を指定することができますも、<ph id="ph2">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%2A&gt;</ph>コンス トラクター、またはそれに直接割り当てすることができます、<ph id="ph3">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo.Options%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.RegexOptions">
          <source>The resulting <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo&gt;</ph> object is then used in the call to the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A&gt;</ph> method.</source>
          <target state="translated">その結果、<ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo&gt;</ph>への呼び出しでオブジェクトを使用して、<ph id="ph2">&lt;xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.RegexOptions">
          <source>Several options provided by members of the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexOptions&gt;</ph> enumeration (in particular, by its ExplicitCapture, IgnoreCase, Multiline, and Singleline members) can instead be provided by using an inline option character in the regular expression pattern.</source>
          <target state="translated">メンバーによって提供されるいくつかのオプション、 <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexOptions&gt;</ph> (具体的には、その ExplicitCapture、IgnoreCase、複数行および単一行のメンバー) で列挙は、正規表現パターンのインライン オプション文字を使用して、代わりに指定できます。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.RegexOptions">
          <source>For details, see <bpt id="p1">[</bpt>Regular Expression Options<ept id="p1">](~/docs/standard/base-types/regular-expression-options.md)</ept>.</source>
          <target state="translated">詳細については、「<bpt id="p1">[</bpt>正規表現のオプション<ept id="p1">](~/docs/standard/base-types/regular-expression-options.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.RegexOptions">
          <source>The following example defines two regular expressions that identify repeated words in text but that are instantiated using different <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexOptions.ExplicitCapture?displayProperty=nameWithType&gt;</ph> values.</source>
          <target state="translated">次の例では、次の 2 つの正規表現のテキストに重複する単語を識別するが、異なるインスタンス化する<ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexOptions.ExplicitCapture?displayProperty=nameWithType&gt;</ph>値。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.RegexOptions">
          <source>The first regular expression is case-insensitive; case is ignored when determining whether a word is identical to the preceding word.</source>
          <target state="translated">最初の正規表現が区別されません。場合に、単語が、前の単語と同じかどうかを判断する場合は無視されます。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.RegexOptions">
          <source>The second regular expression is case-sensitive; a word must match the case of the preceding word exactly to be considered a duplicate.</source>
          <target state="translated">2 つ目の正規表現が区別されます。単語が重複と見なされるに正確に前の単語の大文字と小文字を一致しなければなりません。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="F:System.Text.RegularExpressions.RegexOptions.Compiled">
          <source>Specifies that the regular expression is compiled to an assembly.</source>
          <target state="translated">正規表現をコンパイルしてアセンブリを作成することを指定します。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="F:System.Text.RegularExpressions.RegexOptions.Compiled">
          <source>This yields faster execution but increases startup time.</source>
          <target state="translated">これにより実行速度は速くなりますが、起動にかかる時間は長くなります。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="F:System.Text.RegularExpressions.RegexOptions.Compiled">
          <source>This value should not be assigned to the <ph id="ph1">&lt;see cref="P:System.Text.RegularExpressions.RegexCompilationInfo.Options" /&gt;</ph> property when calling the <ph id="ph2">&lt;see cref="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName)" /&gt;</ph> method.</source>
          <target state="translated">この値は、<ph id="ph1">&lt;see cref="P:System.Text.RegularExpressions.RegexCompilationInfo.Options" /&gt;</ph> メソッドを呼び出すときには <ph id="ph2">&lt;see cref="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName)" /&gt;</ph> プロパティに割り当てないでください。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="F:System.Text.RegularExpressions.RegexOptions.Compiled">
          <source>For more information, see the "Compiled Regular Expressions" section in the <bpt id="p1">[</bpt>Regular Expression Options<ept id="p1">](~/docs/standard/base-types/regular-expression-options.md)</ept> topic.</source>
          <target state="translated">詳細については、トピック「<bpt id="p1">[</bpt>正規表現のオプション<ept id="p1">](~/docs/standard/base-types/regular-expression-options.md)</ept>」の「コンパイルされた正規表現」を参照してください。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="F:System.Text.RegularExpressions.RegexOptions.CultureInvariant">
          <source>Specifies that cultural differences in language is ignored.</source>
          <target state="translated">言語の違いが無視されるように指定します。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="F:System.Text.RegularExpressions.RegexOptions.CultureInvariant">
          <source>For more information, see the "Comparison Using the Invariant Culture" section in the <bpt id="p1">[</bpt>Regular Expression Options<ept id="p1">](~/docs/standard/base-types/regular-expression-options.md)</ept> topic.</source>
          <target state="translated">詳細については、トピック「<bpt id="p1">[</bpt>正規表現のオプション<ept id="p1">](~/docs/standard/base-types/regular-expression-options.md)</ept>」の「インバリアント カルチャを使用した比較」を参照してください。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="F:System.Text.RegularExpressions.RegexOptions.ECMAScript">
          <source>Enables ECMAScript-compliant behavior for the expression.</source>
          <target state="translated">式の ECMAScript 準拠の動作を有効にします。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="F:System.Text.RegularExpressions.RegexOptions.ECMAScript">
          <source>This value can be used only in conjunction with the <ph id="ph1">&lt;see cref="F:System.Text.RegularExpressions.RegexOptions.IgnoreCase" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Text.RegularExpressions.RegexOptions.Multiline" /&gt;</ph>, and <ph id="ph3">&lt;see cref="F:System.Text.RegularExpressions.RegexOptions.Compiled" /&gt;</ph> values.</source>
          <target state="translated">この値は、必ず <ph id="ph1">&lt;see cref="F:System.Text.RegularExpressions.RegexOptions.IgnoreCase" /&gt;</ph>、<ph id="ph2">&lt;see cref="F:System.Text.RegularExpressions.RegexOptions.Multiline" /&gt;</ph>、<ph id="ph3">&lt;see cref="F:System.Text.RegularExpressions.RegexOptions.Compiled" /&gt;</ph> の各値と組み合わせて使用します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="F:System.Text.RegularExpressions.RegexOptions.ECMAScript">
          <source>The use of this value with any other values results in an exception.</source>
          <target state="translated">この値を他の値と組み合わせて使用すると、例外が発生します。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="F:System.Text.RegularExpressions.RegexOptions.ECMAScript">
          <source>For more information on the <ph id="ph1">&lt;see cref="F:System.Text.RegularExpressions.RegexOptions.ECMAScript" /&gt;</ph> option, see the "ECMAScript Matching Behavior" section in the <bpt id="p1">[</bpt>Regular Expression Options<ept id="p1">](~/docs/standard/base-types/regular-expression-options.md)</ept> topic.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="F:System.Text.RegularExpressions.RegexOptions.ECMAScript" /&gt;</ph> オプションの詳細については、トピック「<bpt id="p1">[</bpt>正規表現のオプション<ept id="p1">](~/docs/standard/base-types/regular-expression-options.md)</ept>」の「ECMAScript 一致の動作」セクションを参照してください。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="F:System.Text.RegularExpressions.RegexOptions.ExplicitCapture">
          <source>Specifies that the only valid captures are explicitly named or numbered groups of the form (?<ph id="ph1">&amp;lt;</ph>name<ph id="ph2">&amp;gt;</ph>…).</source>
          <target state="translated">明示的に名前または番号を指定された (?<ph id="ph1">&amp;lt;</ph>name<ph id="ph2">&amp;gt;</ph>...) の形式のグループだけが有効なキャプチャであることを指定します。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="F:System.Text.RegularExpressions.RegexOptions.ExplicitCapture">
          <source>This allows unnamed parentheses to act as noncapturing groups without the syntactic clumsiness of the expression (?:…).</source>
          <target state="translated">これにより、不恰好な表現 (?:...) を使用しなくても、名前のないかっこが非キャプチャ グループとして機能するようになります。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="F:System.Text.RegularExpressions.RegexOptions.ExplicitCapture">
          <source>For more information, see the "Explicit Captures Only" section in the <bpt id="p1">[</bpt>Regular Expression Options<ept id="p1">](~/docs/standard/base-types/regular-expression-options.md)</ept> topic.</source>
          <target state="translated">詳細については、トピック「<bpt id="p1">[</bpt>正規表現のオプション<ept id="p1">](~/docs/standard/base-types/regular-expression-options.md)</ept>」の「明示的なキャプチャのみ」を参照してください。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="F:System.Text.RegularExpressions.RegexOptions.IgnoreCase">
          <source>Specifies case-insensitive matching.</source>
          <target state="translated">検索時に大文字と小文字を区別しないことを指定します。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="F:System.Text.RegularExpressions.RegexOptions.IgnoreCase">
          <source>For more information, see the "Case-Insensitive Matching " section in the <bpt id="p1">[</bpt>Regular Expression Options<ept id="p1">](~/docs/standard/base-types/regular-expression-options.md)</ept> topic.</source>
          <target state="translated">詳細については、トピック「<bpt id="p1">[</bpt>正規表現のオプション<ept id="p1">](~/docs/standard/base-types/regular-expression-options.md)</ept>」の「大文字と小文字を区別しない一致」を参照してください。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="F:System.Text.RegularExpressions.RegexOptions.IgnorePatternWhitespace">
          <source>Eliminates unescaped white space from the pattern and enables comments marked with #.</source>
          <target state="translated">パターンからエスケープが解除された空白を削除し、# でマークされたコメントを有効にします。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="F:System.Text.RegularExpressions.RegexOptions.IgnorePatternWhitespace">
          <source>However, this value does not affect or eliminate white space in <bpt id="p1">[</bpt>character classes<ept id="p1">](~/docs/standard/base-types/character-classes-in-regular-expressions.md)</ept>, numeric <bpt id="p2">[</bpt>quantifiers<ept id="p2">](~/docs/standard/base-types/quantifiers-in-regular-expressions.md)</ept>, or tokens that mark the beginning of individual <bpt id="p3">[</bpt>regular expression language elements<ept id="p3">](~/docs/standard/base-types/regular-expression-language-quick-reference.md)</ept>.</source>
          <target state="translated">ただしこの値は、個々の<bpt id="p3">[</bpt>正規表現の言語要素<ept id="p3">](~/docs/standard/base-types/regular-expression-language-quick-reference.md)</ept>の開始を示す<bpt id="p1">[</bpt>文字クラス<ept id="p1">](~/docs/standard/base-types/character-classes-in-regular-expressions.md)</ept>、数値の<bpt id="p2">[</bpt>量指定子<ept id="p2">](~/docs/standard/base-types/quantifiers-in-regular-expressions.md)</ept>、またはトークンに影響を与えることも、これらの中の空白を削除することもありません。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="F:System.Text.RegularExpressions.RegexOptions.IgnorePatternWhitespace">
          <source>For more information, see the "Ignore White Space" section of the <bpt id="p1">[</bpt>Regular Expression Options<ept id="p1">](~/docs/standard/base-types/regular-expression-options.md)</ept> topic.</source>
          <target state="translated">詳細については、トピック「<bpt id="p1">[</bpt>正規表現のオプション<ept id="p1">](~/docs/standard/base-types/regular-expression-options.md)</ept>」の「空白を無視」を参照してください。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="F:System.Text.RegularExpressions.RegexOptions.Multiline">
          <source>Multiline mode.</source>
          <target state="translated">複数行モードを指定します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="F:System.Text.RegularExpressions.RegexOptions.Multiline">
          <source>Changes the meaning of ^ and $ so they match at the beginning and end, respectively, of any line, and not just the beginning and end of the entire string.</source>
          <target state="translated">^ と $ の意味を変更して、文字列全体の先頭と末尾だけでなく、任意の行の先頭と末尾にもそれぞれが一致するようにします。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="F:System.Text.RegularExpressions.RegexOptions.Multiline">
          <source>For more information, see the "Multiline Mode" section in the <bpt id="p1">[</bpt>Regular Expression Options<ept id="p1">](~/docs/standard/base-types/regular-expression-options.md)</ept> topic.</source>
          <target state="translated">詳細については、トピック「<bpt id="p1">[</bpt>正規表現のオプション<ept id="p1">](~/docs/standard/base-types/regular-expression-options.md)</ept>」の「複数行モード」を参照してください。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="F:System.Text.RegularExpressions.RegexOptions.None">
          <source>Specifies that no options are set.</source>
          <target state="translated">オプションが何も設定されないことを指定します。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="F:System.Text.RegularExpressions.RegexOptions.None">
          <source>For more information about the default behavior of the regular expression engine, see the "Default Options" section in the <bpt id="p1">[</bpt>Regular Expression Options<ept id="p1">](~/docs/standard/base-types/regular-expression-options.md)</ept> topic.</source>
          <target state="translated">正規表現エンジンの既定の動作の詳細については、トピック「<bpt id="p1">[</bpt>正規表現のオプション<ept id="p1">](~/docs/standard/base-types/regular-expression-options.md)</ept>」の「既定のオプション」を参照してください。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="F:System.Text.RegularExpressions.RegexOptions.RightToLeft">
          <source>Specifies that the search will be from right to left instead of from left to right.</source>
          <target state="translated">検索が左から右ではなく右から左になされるように指定します。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="F:System.Text.RegularExpressions.RegexOptions.RightToLeft">
          <source>For more information, see the "Right-to-Left Mode" section in the <bpt id="p1">[</bpt>Regular Expression Options<ept id="p1">](~/docs/standard/base-types/regular-expression-options.md)</ept> topic.</source>
          <target state="translated">詳細については、トピック「<bpt id="p1">[</bpt>正規表現のオプション<ept id="p1">](~/docs/standard/base-types/regular-expression-options.md)</ept>」の「右から左モード」を参照してください。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="F:System.Text.RegularExpressions.RegexOptions.Singleline">
          <source>Specifies single-line mode.</source>
          <target state="translated">単一行モードを指定します。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="F:System.Text.RegularExpressions.RegexOptions.Singleline">
          <source>Changes the meaning of the dot (.) so it matches every character (instead of every character except \n).</source>
          <target state="translated">\n 以外の任意の文字ではなく、すべての文字と一致するようにピリオド (.) の意味を変更します。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="F:System.Text.RegularExpressions.RegexOptions.Singleline">
          <source>For more information, see the "Single-line Mode" section in the <bpt id="p1">[</bpt>Regular Expression Options<ept id="p1">](~/docs/standard/base-types/regular-expression-options.md)</ept> topic.</source>
          <target state="translated">詳細については、トピック「<bpt id="p1">[</bpt>正規表現オプション<ept id="p1">](~/docs/standard/base-types/regular-expression-options.md)</ept>」の「単一行モード」を参照してください。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>