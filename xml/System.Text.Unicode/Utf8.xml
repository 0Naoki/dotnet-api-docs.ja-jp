<Type Name="Utf8" FullName="System.Text.Unicode.Utf8">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6be64e4d5286564bebfb594348d1b904f5a3a3bd" /><Meta Name="ms.sourcegitcommit" Value="634678f7ccd2928c6b2cf792a301b079b63639af" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="07/26/2019" /><Meta Name="ms.locfileid" Value="68542964" /></Metadata><TypeSignature Language="C#" Value="public static class Utf8" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Utf8 extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Text.Unicode.Utf8" />
  <TypeSignature Language="VB.NET" Value="Public Class Utf8" />
  <TypeSignature Language="C++ CLI" Value="public ref class Utf8 abstract sealed" />
  <TypeSignature Language="F#" Value="type Utf8 = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>UTF-8 と UTF-16 のエンコード間でチャンクされたデータを変換する静的メソッドを提供します。</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="FromUtf16">
      <MemberSignature Language="C#" Value="public static System.Buffers.OperationStatus FromUtf16 (ReadOnlySpan&lt;char&gt; source, Span&lt;byte&gt; destination, out int charsRead, out int bytesWritten, bool replaceInvalidSequences = true, bool isFinalBlock = true);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Buffers.OperationStatus FromUtf16(valuetype System.ReadOnlySpan`1&lt;char&gt; source, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; charsRead, [out] int32&amp; bytesWritten, bool replaceInvalidSequences, bool isFinalBlock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Unicode.Utf8.FromUtf16(System.ReadOnlySpan{System.Char},System.Span{System.Byte},System.Int32@,System.Int32@,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromUtf16 (source As ReadOnlySpan(Of Char), destination As Span(Of Byte), ByRef charsRead As Integer, ByRef bytesWritten As Integer, Optional replaceInvalidSequences As Boolean = true, Optional isFinalBlock As Boolean = true) As OperationStatus" />
      <MemberSignature Language="F#" Value="static member FromUtf16 : ReadOnlySpan&lt;char&gt; * Span&lt;byte&gt; *  *  * bool * bool -&gt; System.Buffers.OperationStatus" Usage="System.Text.Unicode.Utf8.FromUtf16 (source, destination, charsRead, bytesWritten, replaceInvalidSequences, isFinalBlock)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.OperationStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="charsRead" Type="System.Int32" RefType="out" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="replaceInvalidSequences" Type="System.Boolean" />
        <Parameter Name="isFinalBlock" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="source">UTF-16 でエンコードされた読み取り専用の文字スパン。</param>
        <param name="destination">UTF-8 でエンコードされたバイト スパン。</param>
        <param name="charsRead">メソッドが戻るときに、<paramref name="source" /> から読み取られた文字数。</param>
        <param name="bytesWritten">メソッドが戻るときに、<paramref name="destination" /> に書き込まれる文字数。</param>
        <param name="replaceInvalidSequences"><paramref name="source" /> で無効な UTF-16 シーケンスを U+FFFD に置き換えるには <see langword="true" />、無効な文字が <paramref name="source" /> で見つかった場合に <see cref="F:System.Buffers.OperationStatus.InvalidData" /> を返すには <see langword="false" />。</param>
        <param name="isFinalBlock">メソッドで <see cref="F:System.Buffers.OperationStatus.InvalidData" /> を返さない場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</param>
        <summary>UTF-16 の文字スパンを UTF-8 でエンコードされたバイト スパンに変換します。</summary>
        <returns>変換の状態を示す値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

### Remarks

このメソッドは、異なる呼び出し規則、さまざまなエラー処理機構、およびさまざまなパフォーマンス特性を持つことを除いて、 [Utfencoding. GetBytes](xref:System.Text.UTF8Encoding.GetBytes%2A)メソッドに対応しています。 

' Replaceinvalidsequences ' が`true`の場合、メソッドは、の正しくない形式の`source`サブシーケンスをの`destination` U + fffd に置き換え、バッファーの残りの部分を処理し続けます。 それ以外の場合、 <xref:System.Buffers.OperationStatus.InvalidData?displayProperty=nameWithType>メソッドは、正しくない形式のシーケンスが検出された場合、を返します。

メソッドからエラーコードが返された場合、out パラメーターは、正常に作成されたデータの量を示し、不適切な形式のサブシーケンスの位置はこれらの値から推測できます。

' Replaceinvalidsequences ' が`true`の場合、メソッドはを返し<xref:System.Buffers.OperationStatus.InvalidData?displayProperty=nameWithType>ません。 ' Isfinalblock ' が`true`の場合、メソッドはを返し<xref:System.Buffers.OperationStatus.NeedMoreData?displayProperty=nameWithType>ません。

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUtf16">
      <MemberSignature Language="C#" Value="public static System.Buffers.OperationStatus ToUtf16 (ReadOnlySpan&lt;byte&gt; source, Span&lt;char&gt; destination, out int bytesRead, out int charsWritten, bool replaceInvalidSequences = true, bool isFinalBlock = true);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Buffers.OperationStatus ToUtf16(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; bytesRead, [out] int32&amp; charsWritten, bool replaceInvalidSequences, bool isFinalBlock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Unicode.Utf8.ToUtf16(System.ReadOnlySpan{System.Byte},System.Span{System.Char},System.Int32@,System.Int32@,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUtf16 (source As ReadOnlySpan(Of Byte), destination As Span(Of Char), ByRef bytesRead As Integer, ByRef charsWritten As Integer, Optional replaceInvalidSequences As Boolean = true, Optional isFinalBlock As Boolean = true) As OperationStatus" />
      <MemberSignature Language="F#" Value="static member ToUtf16 : ReadOnlySpan&lt;byte&gt; * Span&lt;char&gt; *  *  * bool * bool -&gt; System.Buffers.OperationStatus" Usage="System.Text.Unicode.Utf8.ToUtf16 (source, destination, bytesRead, charsWritten, replaceInvalidSequences, isFinalBlock)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.OperationStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" />
        <Parameter Name="bytesRead" Type="System.Int32" RefType="out" />
        <Parameter Name="charsWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="replaceInvalidSequences" Type="System.Boolean" />
        <Parameter Name="isFinalBlock" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="source">UTF-8 でエンコードされた読み取り専用の文字スパン。</param>
        <param name="destination">UTF-8 でエンコードされたバイト スパン。</param>
        <param name="bytesRead">メソッドが戻るときに、<paramref name="source" /> から読み取られたバイト数。</param>
        <param name="charsWritten">メソッドが戻るときに、<paramref name="destination" /> に書き込まれる文字数。</param>
        <param name="replaceInvalidSequences"><paramref name="source" /> で無効な UTF-8 シーケンスを U+FFFD に置き換えるには <see langword="true" />、無効な文字が <paramref name="source" /> で見つかった場合に <see cref="F:System.Buffers.OperationStatus.InvalidData" /> を返すには <see langword="false" />。</param>
        <param name="isFinalBlock">メソッドで <see cref="F:System.Buffers.OperationStatus.InvalidData" /> を返さない場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</param>
        <summary>UTF-8 でエンコードされた読み取り専用のバイト スパンを UTF-16 でエンコードされた文字スパンに変換します。</summary>
        <returns>変換の状態を示す値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

### Remarks

このメソッドは、 [GetChars](xref:System.Text.UTF8Encoding.GetChars%2A)メソッドに対応しています。ただし、呼び出し規則が異なり、エラー処理機構が異なるため、パフォーマンス特性も異なります。 

' Replaceinvalidsequences ' が`true`の場合、メソッドは、の正しくない形式の`source`サブシーケンスをの`destination` U + fffd に置き換え、バッファーの残りの部分を処理し続けます。 それ以外の場合、 <xref:System.Buffers.OperationStatus.InvalidData?displayProperty=nameWithType>メソッドは、正しくない形式のシーケンスが検出された場合、を返します。

メソッドからエラーコードが返された場合、out パラメーターは、正常に作成されたデータの量を示し、不適切な形式のサブシーケンスの位置はこれらの値から推測できます。

' Replaceinvalidsequences ' が`true`の場合、メソッドはを返し<xref:System.Buffers.OperationStatus.InvalidData?displayProperty=nameWithType>ません。 ' Isfinalblock ' が`true`の場合、メソッドはを返し<xref:System.Buffers.OperationStatus.NeedMoreData?displayProperty=nameWithType>ません。

          ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>