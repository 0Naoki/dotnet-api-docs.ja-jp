<Type Name="Block" FullName="System.Windows.Documents.Block">
  <TypeSignature Language="C#" Value="public abstract class Block : System.Windows.Documents.TextElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Block extends System.Windows.Documents.TextElement" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Documents.Block" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Block&#xA;Inherits TextElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class Block abstract : System::Windows::Documents::TextElement" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Documents.TextElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="47c4d-101">すべてのブロック レベルのフロー コンテンツ要素のベースを提供する抽象クラス。</span><span class="sxs-lookup"><span data-stu-id="47c4d-101">An abstract class that provides a base for all block-level flow content elements.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47c4d-102">要素から継承する、<xref:System.Windows.Documents.Block>クラス (など<xref:System.Windows.Documents.Section>)、共通の親の下にある要素をグループ化またはグループに共通の属性を適用するために使用できます。</span><span class="sxs-lookup"><span data-stu-id="47c4d-102">Elements that inherit from the <xref:System.Windows.Documents.Block> class (such as <xref:System.Windows.Documents.Section>) can be used to group elements under a common parent or to apply common attributes to a group.</span></span> <span data-ttu-id="47c4d-103">概念的には、使用する方法に似ています、 \<DIV > タグで[!INCLUDE[TLA#tla_html](~/includes/tlasharptla-html-md.md)]です。</span><span class="sxs-lookup"><span data-stu-id="47c4d-103">Conceptually, this is similar to how you might use the \<DIV> tag in [!INCLUDE[TLA#tla_html](~/includes/tlasharptla-html-md.md)].</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Documents.Run" />
    <altmember cref="T:System.Windows.Documents.Span" />
    <altmember cref="T:System.Windows.Documents.InlineUIContainer" />
    <altmember cref="T:System.Windows.Documents.Floater" />
    <altmember cref="T:System.Windows.Documents.Figure" />
    <altmember cref="T:System.Windows.Documents.LineBreak" />
    <altmember cref="T:System.Windows.Documents.FlowDocument" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Block ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Block.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Block();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="47c4d-104">派生クラスによって呼び出されるときに <see cref="T:System.Windows.Documents.Block" /> 基本クラスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="47c4d-104">Initializes <see cref="T:System.Windows.Documents.Block" /> base class values when called by a derived class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderBrush">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Brush BorderBrush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Brush BorderBrush" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Block.BorderBrush" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderBrush As Brush" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Brush ^ BorderBrush { System::Windows::Media::Brush ^ get(); void set(System::Windows::Media::Brush ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Brush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="47c4d-105">要素の境界線を描画するときに使用する <see cref="T:System.Windows.Media.Brush" /> を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="47c4d-105">Gets or sets a <see cref="T:System.Windows.Media.Brush" /> to use when painting the element's border.</span></span></summary>
        <value><span data-ttu-id="47c4d-106">要素の境界線に適用するために使用するブラシ。</span><span class="sxs-lookup"><span data-stu-id="47c4d-106">The brush used to apply to the element's border.</span></span> <span data-ttu-id="47c4d-107">既定値は、<see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="47c4d-107">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47c4d-108">使用可能な定義済みのブラシの色の表は、次を参照してください。<xref:System.Windows.Media.Brushes>です。</span><span class="sxs-lookup"><span data-stu-id="47c4d-108">For a table of swatches that show the available predefined brush colors, see <xref:System.Windows.Media.Brushes>.</span></span>  
  
<a name="dependencyPropertyInfo_BorderBrush"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="47c4d-109">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="47c4d-109">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="47c4d-110">識別子のフィールド</span><span class="sxs-lookup"><span data-stu-id="47c4d-110">Identifier field</span></span>|<xref:System.Windows.Documents.Block.BorderBrushProperty>|  
|<span data-ttu-id="47c4d-111">メタデータ プロパティに設定します。 `true`</span><span class="sxs-lookup"><span data-stu-id="47c4d-111">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="47c4d-112">次の例は、設定する方法を示します、<xref:System.Windows.Documents.Block.BorderBrush%2A>の属性、<xref:System.Windows.Documents.Block>要素 (<xref:System.Windows.Documents.Paragraph>)。</span><span class="sxs-lookup"><span data-stu-id="47c4d-112">The following example shows how to set the <xref:System.Windows.Documents.Block.BorderBrush%2A> attribute of a <xref:System.Windows.Documents.Block> element (<xref:System.Windows.Documents.Paragraph>).</span></span>  
  
 [!code-xaml[BlockSnippets#_Block_BordersXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml#_block_bordersxaml)]  
  
 <span data-ttu-id="47c4d-113">次の図は、前の例をレンダリングする方法を示します。</span><span class="sxs-lookup"><span data-stu-id="47c4d-113">The following figure shows how the preceding example renders.</span></span>  
  
 <span data-ttu-id="47c4d-114">![スクリーン ショット: 青、1&#47;4 インチ ブロック境界線](~/add/media/block-borders.png "スクリーン ショット: 青、1/4 インチ境界線ブロック")</span><span class="sxs-lookup"><span data-stu-id="47c4d-114">![Screenshot: Blue, 1&#47;4inch border around Block](~/add/media/block-borders.png "Screenshot: Blue, 1/4inch border around Block")</span></span>  
  
 <span data-ttu-id="47c4d-115">次の例は、設定する方法を示します、<xref:System.Windows.Documents.Block.BorderBrush%2A>プロパティ プログラムでします。</span><span class="sxs-lookup"><span data-stu-id="47c4d-115">The following example shows how to set the <xref:System.Windows.Documents.Block.BorderBrush%2A> property programmatically.</span></span>  
  
 [!code-csharp[BlockSnippets#_Block_Borders](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml.cs#_block_borders)]
 [!code-vb[BlockSnippets#_Block_Borders](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BlockSnippets/visualbasic/window1.xaml.vb#_block_borders)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.Block.BorderThickness" />
      </Docs>
    </Member>
    <Member MemberName="BorderBrushProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty BorderBrushProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty BorderBrushProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Block.BorderBrushProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BorderBrushProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ BorderBrushProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="47c4d-116"><see cref="P:System.Windows.Documents.Block.BorderBrush" /> 依存関係プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="47c4d-116">Identifies the <see cref="P:System.Windows.Documents.Block.BorderBrush" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderThickness">
      <MemberSignature Language="C#" Value="public System.Windows.Thickness BorderThickness { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Thickness BorderThickness" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Block.BorderThickness" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderThickness As Thickness" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Thickness BorderThickness { System::Windows::Thickness get(); void set(System::Windows::Thickness value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Thickness</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="47c4d-117">要素の境界線の太さを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="47c4d-117">Gets or sets the border thickness for the element.</span></span></summary>
        <value><span data-ttu-id="47c4d-118">適用する境界線の量を指定する <see cref="T:System.Windows.Thickness" /> 構造体。デバイス非依存のピクセル単位で指定します。</span><span class="sxs-lookup"><span data-stu-id="47c4d-118">A <see cref="T:System.Windows.Thickness" /> structure specifying the amount of border to apply, in device independent pixels.</span></span> <span data-ttu-id="47c4d-119">既定では 0 (0.0) の均一の幅です。</span><span class="sxs-lookup"><span data-stu-id="47c4d-119">The default is a uniform thickness of zero (0.0).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_BorderThickness"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="47c4d-120">XAML 属性の使用方法</span><span class="sxs-lookup"><span data-stu-id="47c4d-120">XAML Attribute Usage</span></span>  
  
```  
<object BorderThickness="uniformThickness"/>  
- or -  
<object BorderThickness="independentThickness"/>  
- or -  
<object BorderThickness="qualifiedUniformThickness"/>  
- or -  
<object BorderThickness="qualifiedIndependentThickness"/>  
```  
  
<a name="xamlValues_BorderThickness"></a>   
## <a name="xaml-values"></a><span data-ttu-id="47c4d-121">XAML 値</span><span class="sxs-lookup"><span data-stu-id="47c4d-121">XAML Values</span></span>  
 <span data-ttu-id="47c4d-122">*uniformThickness*</span><span class="sxs-lookup"><span data-stu-id="47c4d-122">*uniformThickness*</span></span>  
 <span data-ttu-id="47c4d-123">1 つの文字列表現<xref:System.Double>4 つすべての厚みを一様に適用する値。</span><span class="sxs-lookup"><span data-stu-id="47c4d-123">String representation of a single <xref:System.Double> value to apply uniformly to all four thickness dimensions.</span></span>  <span data-ttu-id="47c4d-124">たとえば、値の`"10"`はの値に相当`"10,10,10,10"`です。</span><span class="sxs-lookup"><span data-stu-id="47c4d-124">For example, a value of `"10"` is equivalent to a value of `"10,10,10,10"`.</span></span>  <span data-ttu-id="47c4d-125">修飾されていない値は、デバイス非依存ピクセル単位で計測されます。</span><span class="sxs-lookup"><span data-stu-id="47c4d-125">An unqualified value is measured in device independent pixels.</span></span> <span data-ttu-id="47c4d-126">明示的に、文字列では、小数点を含める必要がありますされません。</span><span class="sxs-lookup"><span data-stu-id="47c4d-126">Strings need not explicitly include decimal points.</span></span>  
  
 <span data-ttu-id="47c4d-127">*independentThickness*</span><span class="sxs-lookup"><span data-stu-id="47c4d-127">*independentThickness*</span></span>  
 <span data-ttu-id="47c4d-128">順序付けに 4 つの文字列表現<xref:System.Double>左、上の太さの独立したディメンションに対応する値が右、および下には、この順序で。</span><span class="sxs-lookup"><span data-stu-id="47c4d-128">String representation of four ordered <xref:System.Double> values corresponding to independent thickness dimensions for left, top, right, and bottom, in this order.</span></span>  <span data-ttu-id="47c4d-129">4 つの値をコンマで区切る必要があります。スペースは使用できません。</span><span class="sxs-lookup"><span data-stu-id="47c4d-129">The four values must be separated with commas; spaces are not allowed.</span></span>  <span data-ttu-id="47c4d-130">たとえば、「5,10,15,20」結果 5 ピクセルの境界線のコンテンツ、コンテンツの上枠線のピクセルを 10、15 ピクセル、コンテンツの右に罫線のおよびコンテンツの下罫線の 20 ピクセルの左側にします。</span><span class="sxs-lookup"><span data-stu-id="47c4d-130">For example, "5,10,15,20" results in 5 pixels of border to the left of content, 10 pixels of border above content, 15 pixels of border to the right of content, and 20 pixels of border below the content.</span></span>  
  
 <span data-ttu-id="47c4d-131">*qualifiedUniformThickness*</span><span class="sxs-lookup"><span data-stu-id="47c4d-131">*qualifiedUniformThickness*</span></span>  
 <span data-ttu-id="47c4d-132">記述された値*uniformThickness*後に、次の単位指定子の 1 つ: `px`、`in`です。</span><span class="sxs-lookup"><span data-stu-id="47c4d-132">A value described by *uniformThickness* followed by one of the following unit specifiers: `px`, `in`.</span></span>  
  
 <span data-ttu-id="47c4d-133">`px` (既定値) [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span><span class="sxs-lookup"><span data-stu-id="47c4d-133">`px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span></span>  
  
 <span data-ttu-id="47c4d-134">`in` インチです。1 96px を = =</span><span class="sxs-lookup"><span data-stu-id="47c4d-134">`in` is inches; 1in==96px</span></span>  
  
 <span data-ttu-id="47c4d-135">たとえば、`"1in"`すべての方向に 1 インチの均一の境界を提供します。</span><span class="sxs-lookup"><span data-stu-id="47c4d-135">For example, `"1in"` provides uniform border of 1 inch in all directions.</span></span>  
  
 <span data-ttu-id="47c4d-136">*qualifiedIndependentThickness*</span><span class="sxs-lookup"><span data-stu-id="47c4d-136">*qualifiedIndependentThickness*</span></span>  
 <span data-ttu-id="47c4d-137">記述された値*independentThickness*、後に、次の単位指定子の 1 つの独立した各値を持つ: `px`、`in`です。</span><span class="sxs-lookup"><span data-stu-id="47c4d-137">A value described by *independentThickness*, with each independent value followed by one of the following unit specifiers: `px`, `in`.</span></span>  
  
 <span data-ttu-id="47c4d-138">`px` (既定値) [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span><span class="sxs-lookup"><span data-stu-id="47c4d-138">`px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span></span>  
  
 <span data-ttu-id="47c4d-139">`in` インチです。1 96px を = =</span><span class="sxs-lookup"><span data-stu-id="47c4d-139">`in` is inches; 1in==96px</span></span>  
  
 <span data-ttu-id="47c4d-140">たとえば、`"1.5in,0.8in,1.5in,0.8in"` のようにします。</span><span class="sxs-lookup"><span data-stu-id="47c4d-140">For example, `"1.5in,0.8in,1.5in,0.8in"`.</span></span>  <span data-ttu-id="47c4d-141">単位指定子は、混合または 1 つまたは複数の値からを省略すると場合があります。</span><span class="sxs-lookup"><span data-stu-id="47c4d-141">Unit specifiers may be mixed or omitted from one or more values.</span></span>  
  
<a name="dependencyPropertyInfo_BorderThickness"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="47c4d-142">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="47c4d-142">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="47c4d-143">識別子のフィールド</span><span class="sxs-lookup"><span data-stu-id="47c4d-143">Identifier field</span></span>|<xref:System.Windows.Documents.Block.BorderThicknessProperty>|  
|<span data-ttu-id="47c4d-144">メタデータ プロパティに設定します。 `true`</span><span class="sxs-lookup"><span data-stu-id="47c4d-144">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="47c4d-145">次の例は、設定する方法を示します、<xref:System.Windows.Documents.Block.BorderThickness%2A>の属性、<xref:System.Windows.Documents.Block>要素 (<xref:System.Windows.Documents.Paragraph>)。</span><span class="sxs-lookup"><span data-stu-id="47c4d-145">The following example shows how to set the <xref:System.Windows.Documents.Block.BorderThickness%2A> attribute of a <xref:System.Windows.Documents.Block> element (<xref:System.Windows.Documents.Paragraph>).</span></span>  
  
 [!code-xaml[BlockSnippets#_Block_BordersXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml#_block_bordersxaml)]  
  
 <span data-ttu-id="47c4d-146">次の図は、前の例をレンダリングする方法を示します。</span><span class="sxs-lookup"><span data-stu-id="47c4d-146">The following figure shows how the preceding example renders.</span></span>  
  
 <span data-ttu-id="47c4d-147">![スクリーン ショット: 青、1&#47;4 インチ ブロック境界線](~/add/media/block-borders.png "スクリーン ショット: 青、1/4 インチ境界線ブロック")</span><span class="sxs-lookup"><span data-stu-id="47c4d-147">![Screenshot: Blue, 1&#47;4inch border around Block](~/add/media/block-borders.png "Screenshot: Blue, 1/4inch border around Block")</span></span>  
  
 <span data-ttu-id="47c4d-148">次の例は、設定する方法を示します、<xref:System.Windows.Documents.Block.BorderThickness%2A>プロパティ プログラムでします。</span><span class="sxs-lookup"><span data-stu-id="47c4d-148">The following example shows how to set the <xref:System.Windows.Documents.Block.BorderThickness%2A> property programmatically.</span></span>  
  
 [!code-csharp[BlockSnippets#_Block_Borders](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml.cs#_block_borders)]
 [!code-vb[BlockSnippets#_Block_Borders](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BlockSnippets/visualbasic/window1.xaml.vb#_block_borders)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.Block.BorderBrush" />
      </Docs>
    </Member>
    <Member MemberName="BorderThicknessProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty BorderThicknessProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty BorderThicknessProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Block.BorderThicknessProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BorderThicknessProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ BorderThicknessProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="47c4d-149"><see cref="P:System.Windows.Documents.Block.BorderThickness" /> 依存関係プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="47c4d-149">Identifies the <see cref="P:System.Windows.Documents.Block.BorderThickness" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BreakColumnBefore">
      <MemberSignature Language="C#" Value="public bool BreakColumnBefore { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BreakColumnBefore" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Block.BreakColumnBefore" />
      <MemberSignature Language="VB.NET" Value="Public Property BreakColumnBefore As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool BreakColumnBefore { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="47c4d-150">この要素が列に基づく表示に参加する場合に要素の前に段区切りを自動的に挿入するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="47c4d-150">Gets or sets a value that indicates whether to automatically insert a column-break before this element in cases where the element participates in a column-based presentation.</span></span></summary>
        <value>
          <span data-ttu-id="47c4d-151">この要素の前に段区切りを自動的に挿入する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="47c4d-151"><see langword="true" /> to automatically insert a column-break before this element; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_BreakColumnBefore"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="47c4d-152">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="47c4d-152">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="47c4d-153">識別子のフィールド</span><span class="sxs-lookup"><span data-stu-id="47c4d-153">Identifier field</span></span>|<xref:System.Windows.Documents.Block.BreakColumnBeforeProperty>|  
|<span data-ttu-id="47c4d-154">メタデータ プロパティに設定します。 `true`</span><span class="sxs-lookup"><span data-stu-id="47c4d-154">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure%2A>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.Block.BreakPageBefore" />
      </Docs>
    </Member>
    <Member MemberName="BreakColumnBeforeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty BreakColumnBeforeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty BreakColumnBeforeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Block.BreakColumnBeforeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BreakColumnBeforeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ BreakColumnBeforeProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="47c4d-155"><see cref="P:System.Windows.Documents.Block.BreakColumnBefore" /> 依存関係プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="47c4d-155">Identifies the <see cref="P:System.Windows.Documents.Block.BreakColumnBefore" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BreakPageBefore">
      <MemberSignature Language="C#" Value="public bool BreakPageBefore { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BreakPageBefore" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Block.BreakPageBefore" />
      <MemberSignature Language="VB.NET" Value="Public Property BreakPageBefore As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool BreakPageBefore { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="47c4d-156">この要素の前にページ区切りを自動的に挿入するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="47c4d-156">Gets or sets a value that indicates whether to automatically insert a page-break before this element.</span></span></summary>
        <value>
          <span data-ttu-id="47c4d-157">この要素の前にページ区切りを自動的に挿入する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="47c4d-157"><see langword="true" /> to automatically insert a page-break before this element; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_BreakPageBefore"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="47c4d-158">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="47c4d-158">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="47c4d-159">識別子のフィールド</span><span class="sxs-lookup"><span data-stu-id="47c4d-159">Identifier field</span></span>|<xref:System.Windows.Documents.Block.BreakColumnBeforeProperty>|  
|<span data-ttu-id="47c4d-160">メタデータ プロパティに設定します。 `true`</span><span class="sxs-lookup"><span data-stu-id="47c4d-160">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure%2A>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.Block.BreakColumnBefore" />
      </Docs>
    </Member>
    <Member MemberName="BreakPageBeforeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty BreakPageBeforeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty BreakPageBeforeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Block.BreakPageBeforeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BreakPageBeforeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ BreakPageBeforeProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="47c4d-161"><see cref="P:System.Windows.Documents.Block.BreakPageBefore" /> 依存関係プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="47c4d-161">Identifies the <see cref="P:System.Windows.Documents.Block.BreakPageBefore" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearFloaters">
      <MemberSignature Language="C#" Value="public System.Windows.WrapDirection ClearFloaters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.WrapDirection ClearFloaters" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Block.ClearFloaters" />
      <MemberSignature Language="VB.NET" Value="Public Property ClearFloaters As WrapDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::WrapDirection ClearFloaters { System::Windows::WrapDirection get(); void set(System::Windows::WrapDirection value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.WrapDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="47c4d-162"><see cref="T:System.Windows.Documents.Floater" /> 要素に含まれる <see cref="T:System.Windows.Documents.Block" /> 要素を再配置する方向を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="47c4d-162">Gets or sets the direction in which any <see cref="T:System.Windows.Documents.Floater" /> elements contained by a <see cref="T:System.Windows.Documents.Block" /> element should be repositioned.</span></span></summary>
        <value><span data-ttu-id="47c4d-163"><see cref="T:System.Windows.WrapDirection" /> 要素に含まれる他のコンテンツから <see cref="T:System.Windows.Documents.Floater" /> 要素を分離する方向を指定する <see cref="T:System.Windows.Documents.Block" /> 値のいずれか。</span><span class="sxs-lookup"><span data-stu-id="47c4d-163">One of the <see cref="T:System.Windows.WrapDirection" /> values that specifies the direction in which to separate any <see cref="T:System.Windows.Documents.Floater" /> elements from other content contained in the <see cref="T:System.Windows.Documents.Block" /> element.</span></span> <span data-ttu-id="47c4d-164">既定値は <see cref="F:System.Windows.WrapDirection.None" /> で、浮遊要素をその位置に描画することを示します。</span><span class="sxs-lookup"><span data-stu-id="47c4d-164">The default is <see cref="F:System.Windows.WrapDirection.None" />, which indicates that floaters should be rendered in place.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47c4d-165"><xref:System.Windows.Documents.Block.ClearFloaters%2A>プロパティは、内のコンテンツのレイアウト方法に影響する<xref:System.Windows.Documents.Block>を防ぐために使用するためのものでは<xref:System.Windows.Documents.Floater>要素の内容が混雑を<xref:System.Windows.Documents.Block>要素。</span><span class="sxs-lookup"><span data-stu-id="47c4d-165">The <xref:System.Windows.Documents.Block.ClearFloaters%2A> property affects how content is laid out within a <xref:System.Windows.Documents.Block> and is intended to be used to prevent <xref:System.Windows.Documents.Floater> elements from congesting the contents of a <xref:System.Windows.Documents.Block> element.</span></span>  <span data-ttu-id="47c4d-166">このプロパティにより floater 内で統一された方向に位置を変更するには、方向を指定する、<xref:System.Windows.Documents.Block>コンテンツ。</span><span class="sxs-lookup"><span data-stu-id="47c4d-166">Specifying a direction for this property causes floaters to be repositioned in a uniform direction within the <xref:System.Windows.Documents.Block> content.</span></span>  <span data-ttu-id="47c4d-167">Floater の位置は、親の外部ではありません<xref:System.Windows.Documents.Block>です。</span><span class="sxs-lookup"><span data-stu-id="47c4d-167">Floaters are not repositioned outside of their parent <xref:System.Windows.Documents.Block>.</span></span>  
  
<a name="dependencyPropertyInfo_ClearFloaters"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="47c4d-168">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="47c4d-168">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="47c4d-169">識別子のフィールド</span><span class="sxs-lookup"><span data-stu-id="47c4d-169">Identifier field</span></span>|<xref:System.Windows.Documents.Block.ClearFloatersProperty>|  
|<span data-ttu-id="47c4d-170">メタデータ プロパティに設定します。 `true`</span><span class="sxs-lookup"><span data-stu-id="47c4d-170">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearFloatersProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ClearFloatersProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ClearFloatersProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Block.ClearFloatersProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ClearFloatersProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ClearFloatersProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="47c4d-171"><see cref="P:System.Windows.Documents.Block.ClearFloaters" /> 依存関係プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="47c4d-171">Identifies the <see cref="P:System.Windows.Documents.Block.ClearFloaters" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FlowDirection">
      <MemberSignature Language="C#" Value="public System.Windows.FlowDirection FlowDirection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.FlowDirection FlowDirection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Block.FlowDirection" />
      <MemberSignature Language="VB.NET" Value="Public Property FlowDirection As FlowDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::FlowDirection FlowDirection { System::Windows::FlowDirection get(); void set(System::Windows::FlowDirection value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FlowDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="47c4d-172"><see cref="T:System.Windows.Documents.Block" /> 要素内のコンテンツのフローの相対的な方向を指定する値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="47c4d-172">Gets or sets the relative direction for flow of content within a <see cref="T:System.Windows.Documents.Block" /> element.</span></span></summary>
        <value><span data-ttu-id="47c4d-173">相対的なフロー方向を指定する <see cref="T:System.Windows.FlowDirection" /> 値のいずれか。</span><span class="sxs-lookup"><span data-stu-id="47c4d-173">One of the <see cref="T:System.Windows.FlowDirection" /> values that specifies the relative flow direction.</span></span> <span data-ttu-id="47c4d-174">既定値は、<see cref="F:System.Windows.FlowDirection.LeftToRight" /> です。</span><span class="sxs-lookup"><span data-stu-id="47c4d-174">The default is <see cref="F:System.Windows.FlowDirection.LeftToRight" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47c4d-175">このプロパティを取得すると、現在有効なフロー方向が返されます。</span><span class="sxs-lookup"><span data-stu-id="47c4d-175">Getting this property returns the currently effective flow direction.</span></span>  <span data-ttu-id="47c4d-176">このプロパティを設定すると、<xref:System.Windows.Documents.Block> 要素のコンテンツが指定した方向に再フローされます。</span><span class="sxs-lookup"><span data-stu-id="47c4d-176">Setting this property causes the contents of the <xref:System.Windows.Documents.Block> element to re-flow in the indicated direction.</span></span>  
  
 <span data-ttu-id="47c4d-177">コンテンツのフローの方向は、通常、表される言語の固有のフロー方向に対応します。</span><span class="sxs-lookup"><span data-stu-id="47c4d-177">The flow direction of content typically corresponds to the innate flow direction of the language being represented.</span></span>  <span data-ttu-id="47c4d-178">ヘブライ語やアラビア語は、必然的に右から左に流れる言語の例を示します。</span><span class="sxs-lookup"><span data-stu-id="47c4d-178">Hebrew and Arabic are examples of languages that naturally flow from right to left.</span></span>  <span data-ttu-id="47c4d-179">英語、ドイツ語、およびロシア語は、左から右に必然的にフローする言語の例を示します。</span><span class="sxs-lookup"><span data-stu-id="47c4d-179">English, German, and Russian are examples of languages that naturally flow from left to right.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="47c4d-180">**このプロパティの値は、オペレーティング システムで使用される言語に合わせて自動的には変更されません。異なるを使用する必要がある場合番目の値**、**n の既定の** <xref:System.Windows.FlowDirection.LeftToRight> **、自分でに指定する必要があります。**</span><span class="sxs-lookup"><span data-stu-id="47c4d-180">**The value of this property is not automatically changed to match the language used by the operating system. If you need to use a different value th**a**n the default of** <xref:System.Windows.FlowDirection.LeftToRight>**, you must specify it yourself.**</span></span>  
  
<a name="dependencyPropertyInfo_FlowDirection"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="47c4d-181">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="47c4d-181">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="47c4d-182">識別子のフィールド</span><span class="sxs-lookup"><span data-stu-id="47c4d-182">Identifier field</span></span>|<xref:System.Windows.Documents.Block.FlowDirectionProperty>|  
|<span data-ttu-id="47c4d-183">メタデータ プロパティに設定します。 `true`</span><span class="sxs-lookup"><span data-stu-id="47c4d-183">Metadata properties set to `true`</span></span>|<span data-ttu-id="47c4d-184"><xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsParentArrange%2A></span><span class="sxs-lookup"><span data-stu-id="47c4d-184"><xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsParentArrange%2A></span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="47c4d-185">次の例は、設定する方法を示します、<xref:System.Windows.Documents.Block.FlowDirection%2A>の属性、<xref:System.Windows.Documents.Block>要素 (<xref:System.Windows.Documents.Paragraph>)。</span><span class="sxs-lookup"><span data-stu-id="47c4d-185">The following example shows how to set the <xref:System.Windows.Documents.Block.FlowDirection%2A> attribute of a <xref:System.Windows.Documents.Block> element (<xref:System.Windows.Documents.Paragraph>).</span></span>  
  
 [!code-xaml[BlockSnippets#_Block_FlowDirectionXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml#_block_flowdirectionxaml)]  
  
 <span data-ttu-id="47c4d-186">次の例は、設定する方法を示します、<xref:System.Windows.Documents.Block.FlowDirection%2A>プロパティ プログラムでします。</span><span class="sxs-lookup"><span data-stu-id="47c4d-186">The following example shows how to set the <xref:System.Windows.Documents.Block.FlowDirection%2A> property programmatically.</span></span>  
  
 [!code-csharp[BlockSnippets#_Block_FlowDirection](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml.cs#_block_flowdirection)]
 [!code-vb[BlockSnippets#_Block_FlowDirection](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BlockSnippets/visualbasic/window1.xaml.vb#_block_flowdirection)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FlowDirectionProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FlowDirectionProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FlowDirectionProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Block.FlowDirectionProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FlowDirectionProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ FlowDirectionProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="47c4d-187"><see cref="P:System.Windows.Documents.Block.FlowDirection" /> 依存関係プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="47c4d-187">Identifies the <see cref="P:System.Windows.Documents.Block.FlowDirection" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIsHyphenationEnabled">
      <MemberSignature Language="C#" Value="public static bool GetIsHyphenationEnabled (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetIsHyphenationEnabled(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Block.GetIsHyphenationEnabled(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIsHyphenationEnabled (element As DependencyObject) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool GetIsHyphenationEnabled(System::Windows::DependencyObject ^ element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="47c4d-188"><see cref="P:System.Windows.Documents.Block.IsHyphenationEnabled" /> プロパティの値の取得元となる依存関係オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="47c4d-188">The dependency object from which to retrieve the value of the <see cref="P:System.Windows.Documents.Block.IsHyphenationEnabled" /> property.</span></span></param>
        <summary><span data-ttu-id="47c4d-189">指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Block.IsHyphenationEnabled" /> 添付プロパティの値を返します。</span><span class="sxs-lookup"><span data-stu-id="47c4d-189">Returns the value of the <see cref="P:System.Windows.Documents.Block.IsHyphenationEnabled" /> attached property for a specified dependency object.</span></span></summary>
        <returns><span data-ttu-id="47c4d-190">指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Block.IsHyphenationEnabled" /> 添付プロパティの現在の値。</span><span class="sxs-lookup"><span data-stu-id="47c4d-190">The current value of the <see cref="P:System.Windows.Documents.Block.IsHyphenationEnabled" /> attached property on the specified dependency object.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47c4d-191"><paramref name="element" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="47c4d-191"><paramref name="element" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Windows.Documents.Block.SetIsHyphenationEnabled(System.Windows.DependencyObject,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetLineHeight">
      <MemberSignature Language="C#" Value="public static double GetLineHeight (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetLineHeight(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Block.GetLineHeight(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetLineHeight (element As DependencyObject) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double GetLineHeight(System::Windows::DependencyObject ^ element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.LengthConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="47c4d-192"><see cref="P:System.Windows.Documents.Block.LineHeight" /> プロパティの値の取得元となる依存関係オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="47c4d-192">The dependency object from which to retrieve the value of the <see cref="P:System.Windows.Documents.Block.LineHeight" /> property.</span></span></param>
        <summary><span data-ttu-id="47c4d-193">指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Block.LineHeight" /> 添付プロパティの値を返します。</span><span class="sxs-lookup"><span data-stu-id="47c4d-193">Returns the value of the <see cref="P:System.Windows.Documents.Block.LineHeight" /> attached property for a specified dependency object.</span></span></summary>
        <returns><span data-ttu-id="47c4d-194">指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Block.LineHeight" /> 添付プロパティの現在の値。</span><span class="sxs-lookup"><span data-stu-id="47c4d-194">The current value of the <see cref="P:System.Windows.Documents.Block.LineHeight" /> attached property on the specified dependency object.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47c4d-195"><paramref name="element" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="47c4d-195"><paramref name="element" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Windows.Documents.Block.SetLineHeight(System.Windows.DependencyObject,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="GetLineStackingStrategy">
      <MemberSignature Language="C#" Value="public static System.Windows.LineStackingStrategy GetLineStackingStrategy (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.LineStackingStrategy GetLineStackingStrategy(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Block.GetLineStackingStrategy(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetLineStackingStrategy (element As DependencyObject) As LineStackingStrategy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::LineStackingStrategy GetLineStackingStrategy(System::Windows::DependencyObject ^ element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.LineStackingStrategy</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="47c4d-196"><see cref="P:System.Windows.Documents.Block.LineStackingStrategy" /> 添付プロパティの値の取得元となる依存関係オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="47c4d-196">The dependency object from which to retrieve the value of the <see cref="P:System.Windows.Documents.Block.LineStackingStrategy" /> attached property.</span></span></param>
        <summary><span data-ttu-id="47c4d-197">指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Block.LineStackingStrategy" /> 添付プロパティの値を返します。</span><span class="sxs-lookup"><span data-stu-id="47c4d-197">Returns the value of the <see cref="P:System.Windows.Documents.Block.LineStackingStrategy" /> attached property for a specified dependency object.</span></span></summary>
        <returns><span data-ttu-id="47c4d-198">指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Block.LineStackingStrategy" /> 添付プロパティの現在の値。</span><span class="sxs-lookup"><span data-stu-id="47c4d-198">The current value of the <see cref="P:System.Windows.Documents.Block.LineStackingStrategy" /> attached property on the specified dependency object.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47c4d-199"><paramref name="element" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="47c4d-199"><paramref name="element" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Windows.Documents.Block.SetLineStackingStrategy(System.Windows.DependencyObject,System.Windows.LineStackingStrategy)" />
      </Docs>
    </Member>
    <Member MemberName="GetTextAlignment">
      <MemberSignature Language="C#" Value="public static System.Windows.TextAlignment GetTextAlignment (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.TextAlignment GetTextAlignment(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Block.GetTextAlignment(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTextAlignment (element As DependencyObject) As TextAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::TextAlignment GetTextAlignment(System::Windows::DependencyObject ^ element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.TextAlignment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="47c4d-200"><see cref="P:System.Windows.Documents.Block.TextAlignment" /> プロパティの値の取得元となる依存関係オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="47c4d-200">The dependency object from which to retrieve the value of the <see cref="P:System.Windows.Documents.Block.TextAlignment" /> property.</span></span></param>
        <summary><span data-ttu-id="47c4d-201">指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Block.TextAlignment" /> 添付プロパティの値を返します。</span><span class="sxs-lookup"><span data-stu-id="47c4d-201">Returns the value of the <see cref="P:System.Windows.Documents.Block.TextAlignment" /> attached property for a specified dependency object.</span></span></summary>
        <returns><span data-ttu-id="47c4d-202">指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Block.TextAlignment" /> 添付プロパティの現在の値。</span><span class="sxs-lookup"><span data-stu-id="47c4d-202">The current value of the <see cref="P:System.Windows.Documents.Block.TextAlignment" /> attached property on the specified dependency object.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47c4d-203"><paramref name="element" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="47c4d-203"><paramref name="element" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Windows.Documents.Block.SetTextAlignment(System.Windows.DependencyObject,System.Windows.TextAlignment)" />
      </Docs>
    </Member>
    <Member MemberName="IsHyphenationEnabled">
      <MemberSignature Language="C#" Value="public bool IsHyphenationEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsHyphenationEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Block.IsHyphenationEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsHyphenationEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsHyphenationEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="47c4d-204">単語の自動ハイフネーションが有効かどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="47c4d-204">Gets or sets a value that indicates whether automatic hyphenation of words is enabled or disabled.</span></span></summary>
        <value>
          <span data-ttu-id="47c4d-205">自動改行と単語の自動ハイフネーションが有効である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="47c4d-205"><see langword="true" /> if automatic breaking and hyphenation of words is enabled; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="47c4d-206">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="47c4d-206">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47c4d-207">自動単語ハイフネーション機能により、<xref:System.Windows.Documents.Block>現在のレイアウトの条件に基づいて、自動的に中断して、単語を単語を区切る要素。</span><span class="sxs-lookup"><span data-stu-id="47c4d-207">The automatic word hyphenation feature enables a <xref:System.Windows.Documents.Block> element to automatically break and hyphenate words, based on current layout conditions.</span></span>  <span data-ttu-id="47c4d-208">これにより、長い単語を 1 行で開始し、その次のまま続行して、揃えのテキスト内の空白のより均等に配分を実現する傾向があります。</span><span class="sxs-lookup"><span data-stu-id="47c4d-208">This enables long words to begin on one line and continue on this next, and tends to achieve a more even distribution of white space in justified text.</span></span>  <span data-ttu-id="47c4d-209">単語が分割され、標準の文法規則に従って設定されます。</span><span class="sxs-lookup"><span data-stu-id="47c4d-209">Words are broken and hyphenated according to standard grammar rules.</span></span>  
  
<a name="dependencyPropertyInfo_IsHyphenationEnabled"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="47c4d-210">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="47c4d-210">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="47c4d-211">識別子のフィールド</span><span class="sxs-lookup"><span data-stu-id="47c4d-211">Identifier field</span></span>|<xref:System.Windows.Documents.Block.IsHyphenationEnabledProperty>|  
|<span data-ttu-id="47c4d-212">メタデータ プロパティに設定します。 `true`</span><span class="sxs-lookup"><span data-stu-id="47c4d-212">Metadata properties set to `true`</span></span>|<span data-ttu-id="47c4d-213"><xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>、<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>、<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A></span><span class="sxs-lookup"><span data-stu-id="47c4d-213"><xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A></span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="47c4d-214">次の例は、設定する方法を示します、<xref:System.Windows.Documents.Block.IsHyphenationEnabled%2A>の属性、<xref:System.Windows.Documents.Block>要素。</span><span class="sxs-lookup"><span data-stu-id="47c4d-214">The following example shows how to set the <xref:System.Windows.Documents.Block.IsHyphenationEnabled%2A> attribute of a <xref:System.Windows.Documents.Block> element.</span></span>  
  
 [!code-xaml[BlockSnippets#_Block_HyphenateXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml#_block_hyphenatexaml)]  
  
 <span data-ttu-id="47c4d-215">次の図は、前の例をレンダリングする方法を示します。</span><span class="sxs-lookup"><span data-stu-id="47c4d-215">The following figure shows how the preceding example renders.</span></span>  
  
 <span data-ttu-id="47c4d-216">![スクリーン ショット: FlowDocument ハイフンが有効になっている](~/add/media/flowdoc-hyphenenabled.png "スクリーン ショット: FlowDocument ハイフンが有効になっています。")</span><span class="sxs-lookup"><span data-stu-id="47c4d-216">![Screenshot: FlowDocument hyphen enabled](~/add/media/flowdoc-hyphenenabled.png "Screenshot: FlowDocument hyphen enabled")</span></span>  
  
 <span data-ttu-id="47c4d-217">次の図で既定の設定と同じ例を表示する方法を示しています。 <xref:System.Windows.Documents.Block.IsHyphenationEnabled%2A> =`false`です。</span><span class="sxs-lookup"><span data-stu-id="47c4d-217">The following figure shows how the same example renders with the default setting of <xref:System.Windows.Documents.Block.IsHyphenationEnabled%2A>=`false`.</span></span>  
  
 <span data-ttu-id="47c4d-218">![スクリーン ショット: ハイフンが無効に FlowDocument](~/add/media/flowdoc-hyphendisabled.png "スクリーン ショット: ハイフンが無効になった FlowDocument")</span><span class="sxs-lookup"><span data-stu-id="47c4d-218">![Screenshot: FlowDocument with disabled hyphens](~/add/media/flowdoc-hyphendisabled.png "Screenshot: FlowDocument with disabled hyphens")</span></span>  
  
 <span data-ttu-id="47c4d-219">次の例は、設定する方法を示します、<xref:System.Windows.Documents.Block.IsHyphenationEnabled%2A>プロパティ プログラムでします。</span><span class="sxs-lookup"><span data-stu-id="47c4d-219">The following example shows how to set the <xref:System.Windows.Documents.Block.IsHyphenationEnabled%2A> property programmatically.</span></span>  
  
 [!code-csharp[BlockSnippets#_Block_Hyphenate](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml.cs#_block_hyphenate)]
 [!code-vb[BlockSnippets#_Block_Hyphenate](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BlockSnippets/visualbasic/window1.xaml.vb#_block_hyphenate)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHyphenationEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsHyphenationEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsHyphenationEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Block.IsHyphenationEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsHyphenationEnabledProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsHyphenationEnabledProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="47c4d-220"><see cref="P:System.Windows.Documents.Block.IsHyphenationEnabled" /> 依存関係プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="47c4d-220">Identifies the <see cref="P:System.Windows.Documents.Block.IsHyphenationEnabled" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineHeight">
      <MemberSignature Language="C#" Value="public double LineHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 LineHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Block.LineHeight" />
      <MemberSignature Language="VB.NET" Value="Public Property LineHeight As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double LineHeight { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.LengthConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="47c4d-221">コンテンツの各行の高さを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="47c4d-221">Gets or sets the height of each line of content.</span></span></summary>
        <value><span data-ttu-id="47c4d-222">デバイス非依存のピクセル、0.0034 ~ 160000 ですの範囲内の各行の高さまたは<see cref="F:System.Double.NaN" />高さを自動的に決定します。</span><span class="sxs-lookup"><span data-stu-id="47c4d-222">The height of each line in device independent pixels, in the range of 0.0034 to 160000, or <see cref="F:System.Double.NaN" /> to determine the height automatically.</span></span> <span data-ttu-id="47c4d-223">既定値は、<see cref="F:System.Double.NaN" /> です。</span><span class="sxs-lookup"><span data-stu-id="47c4d-223">The default is <see cref="F:System.Double.NaN" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47c4d-224">値<xref:System.Double.NaN?displayProperty=nameWithType>(属性値に相当`Auto`)、行の高さを現在のフォント特性から自動的に決定することを示します。</span><span class="sxs-lookup"><span data-stu-id="47c4d-224">A value of <xref:System.Double.NaN?displayProperty=nameWithType> (equivalent to an attribute value of `Auto`) indicates that the line height is determined automatically from the current font characteristics.</span></span>  
  
 <span data-ttu-id="47c4d-225">この値を変更しても、関連付けられているテキストの高さは変更されません。代わりに、テキストを含む行の高さを変更します。</span><span class="sxs-lookup"><span data-stu-id="47c4d-225">Changing this value does not change the height of the associated text; rather, it changes the height of the line that contains the text.</span></span> <span data-ttu-id="47c4d-226">テキストのサイズを変更するには、使用、<xref:System.Windows.Documents.FlowDocument.FontSize%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="47c4d-226">To change the size of the text, use the <xref:System.Windows.Documents.FlowDocument.FontSize%2A> property.</span></span>  
  
 <span data-ttu-id="47c4d-227">このプロパティでは、内の行のレイアウトだけでなく、<xref:System.Windows.Documents.Block>の影響を受けるその<xref:System.Windows.Documents.Block.LineStackingStrategy%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="47c4d-227">In addition to this property, the layout of lines in a <xref:System.Windows.Documents.Block> is affected by its <xref:System.Windows.Documents.Block.LineStackingStrategy%2A> property.</span></span>  
  
<a name="xamlAttributeUsage_LineHeight"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="47c4d-228">XAML 属性の使用方法</span><span class="sxs-lookup"><span data-stu-id="47c4d-228">XAML Attribute Usage</span></span>  
  
```  
<object LineHeight="double"/>  
- or -  
<object LineHeight="qualifiedDouble"/>  
- or -  
<object LineHeight="Auto"/>  
```  
  
<a name="xamlValues_LineHeight"></a>   
## <a name="xaml-values"></a><span data-ttu-id="47c4d-229">XAML 値</span><span class="sxs-lookup"><span data-stu-id="47c4d-229">XAML Values</span></span>  
 <span data-ttu-id="47c4d-230">*double*</span><span class="sxs-lookup"><span data-stu-id="47c4d-230">*double*</span></span>  
 <xref:System.Double>  
  
 <span data-ttu-id="47c4d-231">文字列表現を<xref:System.Double>に等しいまたは 0.0034 に等しいまたは 160000 よりも小さい値です。</span><span class="sxs-lookup"><span data-stu-id="47c4d-231">String representation of a <xref:System.Double> value equal to or greater than 0.0034 but equal to or less than 160000.</span></span> <span data-ttu-id="47c4d-232">修飾されていない値は、デバイス非依存ピクセル単位で計測されます。</span><span class="sxs-lookup"><span data-stu-id="47c4d-232">An unqualified value is measured in device independent pixels.</span></span> <span data-ttu-id="47c4d-233">明示的に、文字列では、小数点を含める必要がありますされません。</span><span class="sxs-lookup"><span data-stu-id="47c4d-233">Strings need not explicitly include decimal points.</span></span>  
  
 <span data-ttu-id="47c4d-234">*qualifiedDouble*</span><span class="sxs-lookup"><span data-stu-id="47c4d-234">*qualifiedDouble*</span></span>  
 <span data-ttu-id="47c4d-235">A*二重*、上記で説明したように値 (ドキュメントを除く`Auto`) 後に、次の単位指定子の 1 つ: `px`、 `in`、 `cm`、`pt`です。</span><span class="sxs-lookup"><span data-stu-id="47c4d-235">A *double* value as described above, (excepting `Auto`) followed by one of the following unit specifiers: `px`, `in`, `cm`, `pt`.</span></span>  
  
 <span data-ttu-id="47c4d-236">`px` (既定値) [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span><span class="sxs-lookup"><span data-stu-id="47c4d-236">`px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span></span>  
  
 <span data-ttu-id="47c4d-237">`in` インチです。1 96px を = =</span><span class="sxs-lookup"><span data-stu-id="47c4d-237">`in` is inches; 1in==96px</span></span>  
  
 <span data-ttu-id="47c4d-238">`cm` センチメートル; は、します。1cm==(96/2.54) px</span><span class="sxs-lookup"><span data-stu-id="47c4d-238">`cm` is centimeters; 1cm==(96/2.54) px</span></span>  
  
 <span data-ttu-id="47c4d-239">`pt` ポイントです。1pt==(96/72) px</span><span class="sxs-lookup"><span data-stu-id="47c4d-239">`pt` is points; 1pt==(96/72) px</span></span>  
  
 <span data-ttu-id="47c4d-240">自動</span><span class="sxs-lookup"><span data-stu-id="47c4d-240">Auto</span></span>  
 <span data-ttu-id="47c4d-241">原因は、行の高さは現在のフォント特性から自動的に決定されます。</span><span class="sxs-lookup"><span data-stu-id="47c4d-241">Causes the line height is determined automatically from the current font characteristics.</span></span>  <span data-ttu-id="47c4d-242">プロパティの値に相当<xref:System.Double.NaN?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="47c4d-242">Equivalent to a property value of <xref:System.Double.NaN?displayProperty=nameWithType>.</span></span>  
  
<a name="dependencyPropertyInfo_LineHeight"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="47c4d-243">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="47c4d-243">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="47c4d-244">識別子のフィールド</span><span class="sxs-lookup"><span data-stu-id="47c4d-244">Identifier field</span></span>|<xref:System.Windows.Documents.Block.LineHeightProperty>|  
|<span data-ttu-id="47c4d-245">メタデータ プロパティに設定します。 `true`</span><span class="sxs-lookup"><span data-stu-id="47c4d-245">Metadata properties set to `true`</span></span>|<span data-ttu-id="47c4d-246"><xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>、<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>、<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A></span><span class="sxs-lookup"><span data-stu-id="47c4d-246"><xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A></span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="47c4d-247">次の例は、設定する方法を示します、<xref:System.Windows.Documents.Block.LineHeight%2A>の属性、<xref:System.Windows.Documents.Block>要素。</span><span class="sxs-lookup"><span data-stu-id="47c4d-247">The following example shows how to set the <xref:System.Windows.Documents.Block.LineHeight%2A> attribute of a <xref:System.Windows.Documents.Block> element.</span></span>  
  
 [!code-xaml[BlockSnippets#_Block_LineHeightXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml#_block_lineheightxaml)]  
  
 <span data-ttu-id="47c4d-248">次の図は、前の例をレンダリングする方法を示します。</span><span class="sxs-lookup"><span data-stu-id="47c4d-248">The following figure shows how the preceding example renders.</span></span>  
  
 <span data-ttu-id="47c4d-249">![スクリーン ショット: FlowDocument LineHeight](~/add/media/flowdocument-lineheight.png "スクリーン ショット: FlowDocument LineHeight")</span><span class="sxs-lookup"><span data-stu-id="47c4d-249">![Screenshot: FlowDocument LineHeight](~/add/media/flowdocument-lineheight.png "Screenshot: FlowDocument LineHeight")</span></span>  
  
 <span data-ttu-id="47c4d-250">方法を次の図に示す同じ<xref:System.Windows.Documents.FlowDocument>の既定の設定を使用してレンダリング<xref:System.Windows.Documents.FlowDocument.LineHeight%2A> =<xref:System.Double.NaN?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="47c4d-250">The following figure shows how the same <xref:System.Windows.Documents.FlowDocument> renders with the default setting of <xref:System.Windows.Documents.FlowDocument.LineHeight%2A>=<xref:System.Double.NaN?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="47c4d-251">![スクリーン ショット: FlowDocument LineHeight の既定](~/add/media/flowdocument-lineheightdefault.png "スクリーン ショット: FlowDocument LineHeight の既定値")</span><span class="sxs-lookup"><span data-stu-id="47c4d-251">![Screenshot: FlowDocument LineHeight default](~/add/media/flowdocument-lineheightdefault.png "Screenshot: FlowDocument LineHeight default")</span></span>  
  
 <span data-ttu-id="47c4d-252">次の例は、設定する方法を示します、<xref:System.Windows.Documents.Block.LineHeight%2A>プロパティ プログラムでします。</span><span class="sxs-lookup"><span data-stu-id="47c4d-252">The following example shows how to set the <xref:System.Windows.Documents.Block.LineHeight%2A> property programmatically.</span></span>  
  
 [!code-csharp[BlockSnippets#_Block_LineHeight](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml.cs#_block_lineheight)]
 [!code-vb[BlockSnippets#_Block_LineHeight](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BlockSnippets/visualbasic/window1.xaml.vb#_block_lineheight)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="47c4d-253"><see cref="P:System.Windows.Controls.TextBlock.LineHeight" /> が負の値に設定されています。</span><span class="sxs-lookup"><span data-stu-id="47c4d-253"><see cref="P:System.Windows.Controls.TextBlock.LineHeight" /> is set to a non-positive value.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LineHeightProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty LineHeightProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty LineHeightProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Block.LineHeightProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LineHeightProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ LineHeightProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="47c4d-254"><see cref="P:System.Windows.Documents.Block.LineHeight" /> 依存関係プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="47c4d-254">Identifies the <see cref="P:System.Windows.Documents.Block.LineHeight" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineStackingStrategy">
      <MemberSignature Language="C#" Value="public System.Windows.LineStackingStrategy LineStackingStrategy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.LineStackingStrategy LineStackingStrategy" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Block.LineStackingStrategy" />
      <MemberSignature Language="VB.NET" Value="Public Property LineStackingStrategy As LineStackingStrategy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::LineStackingStrategy LineStackingStrategy { System::Windows::LineStackingStrategy get(); void set(System::Windows::LineStackingStrategy value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.LineStackingStrategy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="47c4d-255">ブロック レベルのフロー コンテンツ要素内のテキストの行ごとに行ボックスを決定する方法を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="47c4d-255">Gets or sets how a line box is determined for each line of text within the block-level flow content element.</span></span></summary>
        <value><span data-ttu-id="47c4d-256">ブロックレベルのフロー コンテンツ要素内の各テキスト行の行ボックスが決定される方法を指定する <see cref="T:System.Windows.LineStackingStrategy" /> 値のいずれか。</span><span class="sxs-lookup"><span data-stu-id="47c4d-256">One of the <see cref="T:System.Windows.LineStackingStrategy" /> values that specifies how a line box is determined for each line of text within the block-level flow content element.</span></span> <span data-ttu-id="47c4d-257">既定値は <see cref="F:System.Windows.LineStackingStrategy.MaxHeight" /> です。</span><span class="sxs-lookup"><span data-stu-id="47c4d-257">The default value is <see cref="F:System.Windows.LineStackingStrategy.MaxHeight" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47c4d-258">この依存関係プロパティには、添付プロパティの使用方法もあります。</span><span class="sxs-lookup"><span data-stu-id="47c4d-258">This dependency property also has an attached property usage.</span></span> <span data-ttu-id="47c4d-259">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]、使い方が\<*オブジェクト* <xref:System.Windows.Documents.Block.LineStackingStrategy%2A?displayProperty=nameWithType>="*値*".../> ここで、*オブジェクト*内に含まれる、オブジェクト要素 (通常はフロー要素) は、<xref:System.Windows.Documents.Block>派生クラスと*値*の文字列値です、<xref:System.Windows.LineStackingStrategy>列挙します。</span><span class="sxs-lookup"><span data-stu-id="47c4d-259">In [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], the usage is \<*object* <xref:System.Windows.Documents.Block.LineStackingStrategy%2A?displayProperty=nameWithType>="*value*".../>, where *object* is an object element (typically a flow element) contained within a <xref:System.Windows.Documents.Block> derived class, and *value* is a string value of the <xref:System.Windows.LineStackingStrategy> enumeration.</span></span> <span data-ttu-id="47c4d-260">コードでは、添付プロパティの使用がサポートされている、<xref:System.Windows.Documents.Block.GetLineStackingStrategy%2A>と<xref:System.Windows.Documents.Block.SetLineStackingStrategy%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="47c4d-260">In code, the attached property usage is supported by the <xref:System.Windows.Documents.Block.GetLineStackingStrategy%2A> and <xref:System.Windows.Documents.Block.SetLineStackingStrategy%2A> methods.</span></span> <span data-ttu-id="47c4d-261">添付プロパティの使用が一般的ではありません。</span><span class="sxs-lookup"><span data-stu-id="47c4d-261">The attached property usage is not common.</span></span>  
  
<a name="dependencyPropertyInfo_LineStackingStrategy"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="47c4d-262">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="47c4d-262">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="47c4d-263">識別子のフィールド</span><span class="sxs-lookup"><span data-stu-id="47c4d-263">Identifier field</span></span>|<xref:System.Windows.Documents.Block.LineStackingStrategyProperty>|  
|<span data-ttu-id="47c4d-264">メタデータ プロパティに設定します。 `true`</span><span class="sxs-lookup"><span data-stu-id="47c4d-264">Metadata properties set to `true`</span></span>|<span data-ttu-id="47c4d-265"><xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A></span><span class="sxs-lookup"><span data-stu-id="47c4d-265"><xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A></span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="47c4d-266">次の例を使用する方法を示しています、<xref:System.Windows.Controls.TextBlock.LineStackingStrategy%2A>のテキスト行に行ボックスを作成する方法を決定するプロパティ、<xref:System.Windows.Controls.TextBlock>です。</span><span class="sxs-lookup"><span data-stu-id="47c4d-266">The following example shows how to use the <xref:System.Windows.Controls.TextBlock.LineStackingStrategy%2A> property to determine how the line boxes are created for text lines of a <xref:System.Windows.Controls.TextBlock>.</span></span> <span data-ttu-id="47c4d-267">最初の<xref:System.Windows.Controls.TextBlock>が、<xref:System.Windows.Controls.TextBlock.LineStackingStrategy%2A>値<xref:System.Windows.LineStackingStrategy.MaxHeight>、2 番目<xref:System.Windows.Controls.TextBlock>の値を持つ<xref:System.Windows.LineStackingStrategy.BlockLineHeight>します。</span><span class="sxs-lookup"><span data-stu-id="47c4d-267">The first <xref:System.Windows.Controls.TextBlock> has a <xref:System.Windows.Controls.TextBlock.LineStackingStrategy%2A> value of <xref:System.Windows.LineStackingStrategy.MaxHeight> and the second <xref:System.Windows.Controls.TextBlock> has a value of <xref:System.Windows.LineStackingStrategy.BlockLineHeight>.</span></span>  
  
 [!code-xaml[FlowMiscSnippets_snip#LineStackingStrategyExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowMiscSnippets_snip/cs/linestackingstrategyexample.xaml#linestackingstrategyexamplewholepage)]  
  
 <span data-ttu-id="47c4d-268">次の図は、上記のコードの結果を示します。</span><span class="sxs-lookup"><span data-stu-id="47c4d-268">The following illustration shows the result of the preceding code.</span></span>  
  
 <span data-ttu-id="47c4d-269">![スクリーン ショット: LineStackingStrategy 値の比較](~/add/media/flow-linestackingstrategy.gif "スクリーン ショット: LineStackingStrategy の比較値")</span><span class="sxs-lookup"><span data-stu-id="47c4d-269">![Screenshot: Compare LineStackingStrategy values](~/add/media/flow-linestackingstrategy.gif "Screenshot: Compare LineStackingStrategy values")</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LineStackingStrategyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty LineStackingStrategyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty LineStackingStrategyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Block.LineStackingStrategyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LineStackingStrategyProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ LineStackingStrategyProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="47c4d-270"><see cref="P:System.Windows.Documents.Block.LineStackingStrategy" /> 依存関係プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="47c4d-270">Identifies the <see cref="P:System.Windows.Documents.Block.LineStackingStrategy" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Margin">
      <MemberSignature Language="C#" Value="public System.Windows.Thickness Margin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Thickness Margin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Block.Margin" />
      <MemberSignature Language="VB.NET" Value="Public Property Margin As Thickness" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Thickness Margin { System::Windows::Thickness get(); void set(System::Windows::Thickness value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Thickness</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="47c4d-271">要素の余白の厚みを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="47c4d-271">Gets or sets the margin thickness for the element.</span></span></summary>
        <value><span data-ttu-id="47c4d-272">A<see cref="T:System.Windows.Thickness" />デバイス非依存ピクセルで、適用する余白の量を指定します。</span><span class="sxs-lookup"><span data-stu-id="47c4d-272">A <see cref="T:System.Windows.Thickness" /> structure that specifies the amount of margin to apply, in device independent pixels.</span></span> <span data-ttu-id="47c4d-273">既定では 0 (0.0) の均一の幅です。</span><span class="sxs-lookup"><span data-stu-id="47c4d-273">The default is a uniform thickness of zero (0.0).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47c4d-274"><xref:System.Windows.Documents.Block.Margin%2A> 要素のコンテンツ エリアの端と親要素の端との間の要素のコンテンツ エリアの外側にあるバッファー領域がありません。</span><span class="sxs-lookup"><span data-stu-id="47c4d-274"><xref:System.Windows.Documents.Block.Margin%2A> is buffer space that falls outside an element's content area, between the edges of the element's content area and the edges of the parent element.</span></span>  <span data-ttu-id="47c4d-275">比較して<xref:System.Windows.Documents.Block.Padding%2A>要素のコンテンツと要素の内部の端の間の要素のコンテンツ領域の内側にあるバッファー領域があります。</span><span class="sxs-lookup"><span data-stu-id="47c4d-275">Contrast with <xref:System.Windows.Documents.Block.Padding%2A>, which is buffer space that falls inside an element's content area, between the element's content and the inner edge of the element.</span></span>  
  
<a name="xamlAttributeUsage_Margin"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="47c4d-276">XAML 属性の使用方法</span><span class="sxs-lookup"><span data-stu-id="47c4d-276">XAML Attribute Usage</span></span>  
  
```  
<object Margin="uniformThickness"/>  
- or -  
<object Margin="independentThickness"/>  
- or -  
<object Margin="qualifiedUniformThickness"/>  
- or -  
<object Margin="qualifiedIndependentThickness"/>  
```  
  
<a name="xamlValues_Margin"></a>   
## <a name="xaml-values"></a><span data-ttu-id="47c4d-277">XAML 値</span><span class="sxs-lookup"><span data-stu-id="47c4d-277">XAML Values</span></span>  
 <span data-ttu-id="47c4d-278">*uniformThickness*</span><span class="sxs-lookup"><span data-stu-id="47c4d-278">*uniformThickness*</span></span>  
 <span data-ttu-id="47c4d-279">1 つの文字列表現<xref:System.Double>4 つすべての厚みを一様に適用する値。</span><span class="sxs-lookup"><span data-stu-id="47c4d-279">String representation of a single <xref:System.Double> value to apply uniformly to all four thickness dimensions.</span></span>  <span data-ttu-id="47c4d-280">たとえば、値の`"10"`はの値に相当`"10,10,10,10"`です。</span><span class="sxs-lookup"><span data-stu-id="47c4d-280">For example, a value of `"10"` is equivalent to a value of `"10,10,10,10"`.</span></span>  <span data-ttu-id="47c4d-281">修飾されていない値は、デバイス非依存ピクセル単位で計測されます。</span><span class="sxs-lookup"><span data-stu-id="47c4d-281">An unqualified value is measured in device independent pixels.</span></span> <span data-ttu-id="47c4d-282">明示的に、文字列では、小数点を含める必要がありますされません。</span><span class="sxs-lookup"><span data-stu-id="47c4d-282">Strings need not explicitly include decimal points.</span></span>  
  
 <span data-ttu-id="47c4d-283">*independentThickness*</span><span class="sxs-lookup"><span data-stu-id="47c4d-283">*independentThickness*</span></span>  
 <span data-ttu-id="47c4d-284">順序付けに 4 つの文字列表現<xref:System.Double>左、上の太さの独立したディメンションに対応する値が右、および下には、この順序で。</span><span class="sxs-lookup"><span data-stu-id="47c4d-284">String representation of four ordered <xref:System.Double> values corresponding to independent thickness dimensions for left, top, right, and bottom, in this order.</span></span>  <span data-ttu-id="47c4d-285">4 つの値をコンマで区切る必要があります。スペースは使用できません。</span><span class="sxs-lookup"><span data-stu-id="47c4d-285">The four values must be separated with commas; spaces are not allowed.</span></span>  <span data-ttu-id="47c4d-286">たとえば、「5,10,15,20」結果余白の 5 ピクセル コンテンツ、コンテンツの上余白の 10 のピクセル、コンテンツの右側の余白の 15 ピクセルおよびコンテンツ下の余白 20 ピクセルの左側にします。</span><span class="sxs-lookup"><span data-stu-id="47c4d-286">For example, "5,10,15,20" results in 5 pixels of margin to the left of content, 10 pixels of margin above content, 15 pixels of margin to the right of content, and 20 pixels of margin below the content.</span></span>  
  
 <span data-ttu-id="47c4d-287">*qualifiedUniformThickness*</span><span class="sxs-lookup"><span data-stu-id="47c4d-287">*qualifiedUniformThickness*</span></span>  
 <span data-ttu-id="47c4d-288">記述された値*uniformThickness*後に、次の単位指定子の 1 つ: `px`、`in`です。</span><span class="sxs-lookup"><span data-stu-id="47c4d-288">A value described by *uniformThickness* followed by one of the following unit specifiers: `px`, `in`.</span></span>  
  
 <span data-ttu-id="47c4d-289">`px` (既定値) [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span><span class="sxs-lookup"><span data-stu-id="47c4d-289">`px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span></span>  
  
 <span data-ttu-id="47c4d-290">`in` インチです。1 96px を = =</span><span class="sxs-lookup"><span data-stu-id="47c4d-290">`in` is inches; 1in==96px</span></span>  
  
 <span data-ttu-id="47c4d-291">たとえば、`"1in"`すべての方向に 1 インチの均一の余白を提供します。</span><span class="sxs-lookup"><span data-stu-id="47c4d-291">For example, `"1in"` provides uniform margin of 1 inch in all directions.</span></span>  
  
 <span data-ttu-id="47c4d-292">*qualifiedIndependentThickness*</span><span class="sxs-lookup"><span data-stu-id="47c4d-292">*qualifiedIndependentThickness*</span></span>  
 <span data-ttu-id="47c4d-293">記述された値*independentThickness*、後に、次の単位指定子の 1 つの独立した各値を持つ: `px`、`in`です。</span><span class="sxs-lookup"><span data-stu-id="47c4d-293">A value described by *independentThickness*, with each independent value followed by one of the following unit specifiers: `px`, `in`.</span></span>  
  
 <span data-ttu-id="47c4d-294">`px` (既定値) [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span><span class="sxs-lookup"><span data-stu-id="47c4d-294">`px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span></span>  
  
 <span data-ttu-id="47c4d-295">`in` インチです。1 96px を = =</span><span class="sxs-lookup"><span data-stu-id="47c4d-295">`in` is inches; 1in==96px</span></span>  
  
 <span data-ttu-id="47c4d-296">たとえば、`"1.5in,0.8in,1.5in,0.8in"` のようにします。</span><span class="sxs-lookup"><span data-stu-id="47c4d-296">For example, `"1.5in,0.8in,1.5in,0.8in"`.</span></span>  <span data-ttu-id="47c4d-297">単位指定子は、混合または 1 つまたは複数の値からを省略すると場合があります。</span><span class="sxs-lookup"><span data-stu-id="47c4d-297">Unit specifiers may be mixed or omitted from one or more values.</span></span>  
  
<a name="dependencyPropertyInfo_Margin"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="47c4d-298">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="47c4d-298">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="47c4d-299">識別子のフィールド</span><span class="sxs-lookup"><span data-stu-id="47c4d-299">Identifier field</span></span>|<xref:System.Windows.Documents.Block.MarginProperty>|  
|<span data-ttu-id="47c4d-300">メタデータ プロパティに設定します。 `true`</span><span class="sxs-lookup"><span data-stu-id="47c4d-300">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="47c4d-301">次の例は、設定する方法を示します、<xref:System.Windows.Documents.Block.Margin%2A>の属性、<xref:System.Windows.Documents.Block>要素 (<xref:System.Windows.Documents.Paragraph>)。</span><span class="sxs-lookup"><span data-stu-id="47c4d-301">The following example shows how to set the <xref:System.Windows.Documents.Block.Margin%2A> attribute of a <xref:System.Windows.Documents.Block> element (<xref:System.Windows.Documents.Paragraph>).</span></span>  
  
 [!code-xaml[BlockSnippets#_Block_MarginPaddingXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml#_block_marginpaddingxaml)]  
  
 <span data-ttu-id="47c4d-302">次の図は、前の例をレンダリングする方法を示します。</span><span class="sxs-lookup"><span data-stu-id="47c4d-302">The following figure shows how the preceding example renders.</span></span>  <span data-ttu-id="47c4d-303">大ぶりの太さと色は、説明のために使用されます。</span><span class="sxs-lookup"><span data-stu-id="47c4d-303">Exaggerated thicknesses and colors are used for illustration.</span></span>  
  
 <span data-ttu-id="47c4d-304">![スクリーン ショット: パディングと余白段落](~/add/media/block-marginpadding.png "スクリーン ショット: 埋め込みと余白がある段落")</span><span class="sxs-lookup"><span data-stu-id="47c4d-304">![Screenshot: Paragraphs with padding and margins](~/add/media/block-marginpadding.png "Screenshot: Paragraphs with padding and margins")</span></span>  
  
 <span data-ttu-id="47c4d-305">次の例は、設定する方法を示します、<xref:System.Windows.Documents.Block.Margin%2A>プロパティ プログラムでします。</span><span class="sxs-lookup"><span data-stu-id="47c4d-305">The following example shows how to set the <xref:System.Windows.Documents.Block.Margin%2A> property programmatically.</span></span>  
  
 [!code-csharp[BlockSnippets#_Block_MarginPadding](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml.cs#_block_marginpadding)]
 [!code-vb[BlockSnippets#_Block_MarginPadding](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BlockSnippets/visualbasic/window1.xaml.vb#_block_marginpadding)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.Block.Padding" />
      </Docs>
    </Member>
    <Member MemberName="MarginProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty MarginProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty MarginProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Block.MarginProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MarginProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ MarginProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="47c4d-306"><see cref="P:System.Windows.Documents.Block.Margin" /> 依存関係プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="47c4d-306">Identifies the <see cref="P:System.Windows.Documents.Block.Margin" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NextBlock">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.Block NextBlock { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.Block NextBlock" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Block.NextBlock" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NextBlock As Block" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::Block ^ NextBlock { System::Windows::Documents::Block ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.Block</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="47c4d-307">現在の <see cref="T:System.Windows.Documents.Block" /> 要素の直後にある兄弟 <see cref="T:System.Windows.Documents.Block" /> 要素を取得します。</span><span class="sxs-lookup"><span data-stu-id="47c4d-307">Gets the sibling <see cref="T:System.Windows.Documents.Block" /> element that directly follows the current <see cref="T:System.Windows.Documents.Block" /> element.</span></span></summary>
        <value><span data-ttu-id="47c4d-308">現在の <see cref="T:System.Windows.Documents.Block" /> 要素の直後にある兄弟 <see cref="T:System.Windows.Documents.Block" /> 要素。そのような要素が存在しない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="47c4d-308">The sibling <see cref="T:System.Windows.Documents.Block" /> element that directly follows the current <see cref="T:System.Windows.Documents.Block" /> element, or <see langword="null" /> if no such element exists.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Documents.Block.PreviousBlock" />
        <altmember cref="P:System.Windows.Documents.Block.SiblingBlocks" />
      </Docs>
    </Member>
    <Member MemberName="Padding">
      <MemberSignature Language="C#" Value="public System.Windows.Thickness Padding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Thickness Padding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Block.Padding" />
      <MemberSignature Language="VB.NET" Value="Public Property Padding As Thickness" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Thickness Padding { System::Windows::Thickness get(); void set(System::Windows::Thickness value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Thickness</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="47c4d-309">要素のパディングの厚みを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="47c4d-309">Gets or sets the padding thickness for the element.</span></span></summary>
        <value><span data-ttu-id="47c4d-310">A<see cref="T:System.Windows.Thickness" />デバイス非依存ピクセルで、適用するパディングの量を指定します。</span><span class="sxs-lookup"><span data-stu-id="47c4d-310">A <see cref="T:System.Windows.Thickness" /> structure that specifies the amount of padding to apply, in device independent pixels.</span></span> <span data-ttu-id="47c4d-311">既定では 0 (0.0) の均一の幅です。</span><span class="sxs-lookup"><span data-stu-id="47c4d-311">The default is a uniform thickness of zero (0.0).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47c4d-312"><xref:System.Windows.Documents.Block.Padding%2A> 要素のコンテンツと要素の内部の端の間の要素のコンテンツ領域の内側にあるバッファー領域がありません。</span><span class="sxs-lookup"><span data-stu-id="47c4d-312"><xref:System.Windows.Documents.Block.Padding%2A> is buffer space that falls inside an element's content area, between the element's content and the inner edge of the element.</span></span>  <span data-ttu-id="47c4d-313">比較して<xref:System.Windows.Documents.Block.Margin%2A>要素のコンテンツ エリアの端と親要素の端との間の要素のコンテンツ エリアの外側にあるバッファー領域があります。</span><span class="sxs-lookup"><span data-stu-id="47c4d-313">Contrast with <xref:System.Windows.Documents.Block.Margin%2A>, which is buffer space that falls outside an element's content area, between the edges of the element's content area and the edges of the parent element.</span></span>  
  
<a name="xamlAttributeUsage_Padding"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="47c4d-314">XAML 属性の使用方法</span><span class="sxs-lookup"><span data-stu-id="47c4d-314">XAML Attribute Usage</span></span>  
  
```  
<object Padding="uniformThickness"/>  
- or -  
<object Padding="independentThickness"/>  
- or -  
<object Padding="qualifiedUniformThickness"/>  
- or -  
<object Padding="qualifiedIndependentThickness"/>  
```  
  
<a name="xamlValues_Padding"></a>   
## <a name="xaml-values"></a><span data-ttu-id="47c4d-315">XAML 値</span><span class="sxs-lookup"><span data-stu-id="47c4d-315">XAML Values</span></span>  
 <span data-ttu-id="47c4d-316">*uniformThickness*</span><span class="sxs-lookup"><span data-stu-id="47c4d-316">*uniformThickness*</span></span>  
 <span data-ttu-id="47c4d-317">1 つの文字列表現<xref:System.Double>4 つすべての厚みを一様に適用する値。</span><span class="sxs-lookup"><span data-stu-id="47c4d-317">String representation of a single <xref:System.Double> value to apply uniformly to all four thickness dimensions.</span></span>  <span data-ttu-id="47c4d-318">たとえば、値の`"10"`はの値に相当`"10,10,10,10"`です。</span><span class="sxs-lookup"><span data-stu-id="47c4d-318">For example, a value of `"10"` is equivalent to a value of `"10,10,10,10"`.</span></span>  <span data-ttu-id="47c4d-319">修飾されていない値は、デバイス非依存ピクセル単位で計測されます。</span><span class="sxs-lookup"><span data-stu-id="47c4d-319">An unqualified value is measured in device independent pixels.</span></span> <span data-ttu-id="47c4d-320">明示的に、文字列では、小数点を含める必要がありますされません。</span><span class="sxs-lookup"><span data-stu-id="47c4d-320">Strings need not explicitly include decimal points.</span></span>  
  
 <span data-ttu-id="47c4d-321">*independentThickness*</span><span class="sxs-lookup"><span data-stu-id="47c4d-321">*independentThickness*</span></span>  
 <span data-ttu-id="47c4d-322">順序付けに 4 つの文字列表現<xref:System.Double>左、上の太さの独立したディメンションに対応する値が右、および下には、この順序で。</span><span class="sxs-lookup"><span data-stu-id="47c4d-322">String representation of four ordered <xref:System.Double> values corresponding to independent thickness dimensions for left, top, right, and bottom, in this order.</span></span>  <span data-ttu-id="47c4d-323">4 つの値をコンマで区切る必要があります。スペースは使用できません。</span><span class="sxs-lookup"><span data-stu-id="47c4d-323">The four values must be separated with commas; spaces are not allowed.</span></span>  <span data-ttu-id="47c4d-324">たとえば、「5,10,15,20」結果パディングの 5 ピクセル コンテンツ、コンテンツの上の余白の 10 のピクセル、右の余白の 15 ピクセルおよびコンテンツの下の余白の 20 ピクセルの左側にします。</span><span class="sxs-lookup"><span data-stu-id="47c4d-324">For example, "5,10,15,20" results in 5 pixels of padding to the left of content, 10 pixels of padding above content, 15 pixels of padding to the right of content, and 20 pixels of padding below the content.</span></span>  
  
 <span data-ttu-id="47c4d-325">*qualifiedUniformThickness*</span><span class="sxs-lookup"><span data-stu-id="47c4d-325">*qualifiedUniformThickness*</span></span>  
 <span data-ttu-id="47c4d-326">記述された値*uniformThickness*後に、次の単位指定子の 1 つ: `px`、`in`です。</span><span class="sxs-lookup"><span data-stu-id="47c4d-326">A value described by *uniformThickness* followed by one of the following unit specifiers: `px`, `in`.</span></span>  
  
 <span data-ttu-id="47c4d-327">`px` (既定値) [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span><span class="sxs-lookup"><span data-stu-id="47c4d-327">`px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span></span>  
  
 <span data-ttu-id="47c4d-328">`in` インチです。1 96px を = =</span><span class="sxs-lookup"><span data-stu-id="47c4d-328">`in` is inches; 1in==96px</span></span>  
  
 <span data-ttu-id="47c4d-329">たとえば、`"1in"`すべての方向に 1 インチの統一されたパディングを提供します。</span><span class="sxs-lookup"><span data-stu-id="47c4d-329">For example, `"1in"` provides uniform padding of 1 inch in all directions.</span></span>  
  
 <span data-ttu-id="47c4d-330">*qualifiedIndependentThickness*</span><span class="sxs-lookup"><span data-stu-id="47c4d-330">*qualifiedIndependentThickness*</span></span>  
 <span data-ttu-id="47c4d-331">記述された値*independentThickness*、後に、次の単位指定子の 1 つの独立した各値を持つ: `px`、`in`です。</span><span class="sxs-lookup"><span data-stu-id="47c4d-331">A value described by *independentThickness*, with each independent value followed by one of the following unit specifiers: `px`, `in`.</span></span>  
  
 <span data-ttu-id="47c4d-332">`px` (既定値) [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span><span class="sxs-lookup"><span data-stu-id="47c4d-332">`px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span></span>  
  
 <span data-ttu-id="47c4d-333">`in` インチです。1 96px を = =</span><span class="sxs-lookup"><span data-stu-id="47c4d-333">`in` is inches; 1in==96px</span></span>  
  
 <span data-ttu-id="47c4d-334">たとえば、`"1.5in,0.8in,1.5in,0.8in"` のようにします。</span><span class="sxs-lookup"><span data-stu-id="47c4d-334">For example, `"1.5in,0.8in,1.5in,0.8in"`.</span></span>  <span data-ttu-id="47c4d-335">単位指定子は、混合または 1 つまたは複数の値からを省略すると場合があります。</span><span class="sxs-lookup"><span data-stu-id="47c4d-335">Unit specifiers may be mixed or omitted from one or more values.</span></span>  
  
<a name="dependencyPropertyInfo_Padding"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="47c4d-336">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="47c4d-336">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="47c4d-337">識別子のフィールド</span><span class="sxs-lookup"><span data-stu-id="47c4d-337">Identifier field</span></span>|<xref:System.Windows.Documents.Block.PaddingProperty>|  
|<span data-ttu-id="47c4d-338">メタデータ プロパティに設定します。 `true`</span><span class="sxs-lookup"><span data-stu-id="47c4d-338">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="47c4d-339">次の例は、設定する方法を示します、<xref:System.Windows.Documents.Block.Padding%2A>の属性、<xref:System.Windows.Documents.Block>要素 (<xref:System.Windows.Documents.Paragraph>)。</span><span class="sxs-lookup"><span data-stu-id="47c4d-339">The following example shows how to set the <xref:System.Windows.Documents.Block.Padding%2A> attribute of a <xref:System.Windows.Documents.Block> element (<xref:System.Windows.Documents.Paragraph>).</span></span>  
  
 [!code-xaml[BlockSnippets#_Block_MarginPaddingXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml#_block_marginpaddingxaml)]  
  
 <span data-ttu-id="47c4d-340">次の図は、前の例をレンダリングする方法を示します。</span><span class="sxs-lookup"><span data-stu-id="47c4d-340">The following figure shows how the preceding example renders.</span></span>  <span data-ttu-id="47c4d-341">大ぶりの太さと色は、説明のために使用されます。</span><span class="sxs-lookup"><span data-stu-id="47c4d-341">Exaggerated thicknesses and colors are used for illustration.</span></span>  
  
 <span data-ttu-id="47c4d-342">![スクリーン ショット: パディングと余白段落](~/add/media/block-marginpadding.png "スクリーン ショット: 埋め込みと余白がある段落")</span><span class="sxs-lookup"><span data-stu-id="47c4d-342">![Screenshot: Paragraphs with padding and margins](~/add/media/block-marginpadding.png "Screenshot: Paragraphs with padding and margins")</span></span>  
  
 <span data-ttu-id="47c4d-343">次の例は、設定する方法を示します、<xref:System.Windows.Documents.Block.Padding%2A>プロパティ プログラムでします。</span><span class="sxs-lookup"><span data-stu-id="47c4d-343">The following example shows how to set the <xref:System.Windows.Documents.Block.Padding%2A> property programmatically.</span></span>  
  
 [!code-csharp[BlockSnippets#_Block_MarginPadding](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml.cs#_block_marginpadding)]
 [!code-vb[BlockSnippets#_Block_MarginPadding](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BlockSnippets/visualbasic/window1.xaml.vb#_block_marginpadding)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.Block.Margin" />
      </Docs>
    </Member>
    <Member MemberName="PaddingProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PaddingProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PaddingProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Block.PaddingProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PaddingProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PaddingProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="47c4d-344"><see cref="P:System.Windows.Documents.Block.Padding" /> 依存関係プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="47c4d-344">Identifies the <see cref="P:System.Windows.Documents.Block.Padding" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviousBlock">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.Block PreviousBlock { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.Block PreviousBlock" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Block.PreviousBlock" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreviousBlock As Block" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::Block ^ PreviousBlock { System::Windows::Documents::Block ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.Block</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="47c4d-345">現在の <see cref="T:System.Windows.Documents.Block" /> 要素の直前にある兄弟 <see cref="T:System.Windows.Documents.Block" /> 要素を取得します。</span><span class="sxs-lookup"><span data-stu-id="47c4d-345">Gets the sibling <see cref="T:System.Windows.Documents.Block" /> element that directly precedes the current <see cref="T:System.Windows.Documents.Block" /> element.</span></span></summary>
        <value><span data-ttu-id="47c4d-346">現在の <see cref="T:System.Windows.Documents.Block" /> 要素の直前にある兄弟 <see cref="T:System.Windows.Documents.Block" /> 要素。そのような要素が存在しない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="47c4d-346">The sibling <see cref="T:System.Windows.Documents.Block" /> element that directly precedes the current <see cref="T:System.Windows.Documents.Block" /> element, or <see langword="null" /> if no such element exists.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Documents.Block.NextBlock" />
        <altmember cref="P:System.Windows.Documents.Block.SiblingBlocks" />
      </Docs>
    </Member>
    <Member MemberName="SetIsHyphenationEnabled">
      <MemberSignature Language="C#" Value="public static void SetIsHyphenationEnabled (System.Windows.DependencyObject element, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetIsHyphenationEnabled(class System.Windows.DependencyObject element, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Block.SetIsHyphenationEnabled(System.Windows.DependencyObject,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetIsHyphenationEnabled (element As DependencyObject, value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetIsHyphenationEnabled(System::Windows::DependencyObject ^ element, bool value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="47c4d-347"><see cref="P:System.Windows.Documents.Block.IsHyphenationEnabled" /> プロパティの値の設定対象となる依存関係オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="47c4d-347">The dependency object on which to set the value of the <see cref="P:System.Windows.Documents.Block.IsHyphenationEnabled" /> property.</span></span></param>
        <param name="value"><span data-ttu-id="47c4d-348">プロパティを設定する新しい値。</span><span class="sxs-lookup"><span data-stu-id="47c4d-348">The new value to set the property to.</span></span></param>
        <summary><span data-ttu-id="47c4d-349">指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Block.IsHyphenationEnabled" /> 添付プロパティの値を設定します。</span><span class="sxs-lookup"><span data-stu-id="47c4d-349">Sets the value of the <see cref="P:System.Windows.Documents.Block.IsHyphenationEnabled" /> attached property on a specified dependency object.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47c4d-350"><paramref name="element" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="47c4d-350"><paramref name="element" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Windows.Documents.Block.GetIsHyphenationEnabled(System.Windows.DependencyObject)" />
      </Docs>
    </Member>
    <Member MemberName="SetLineHeight">
      <MemberSignature Language="C#" Value="public static void SetLineHeight (System.Windows.DependencyObject element, double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetLineHeight(class System.Windows.DependencyObject element, float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Block.SetLineHeight(System.Windows.DependencyObject,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetLineHeight (element As DependencyObject, value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetLineHeight(System::Windows::DependencyObject ^ element, double value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="47c4d-351"><see cref="P:System.Windows.Documents.Block.LineHeight" /> プロパティの値の設定対象となる依存関係オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="47c4d-351">The dependency object on which to set the value of the <see cref="P:System.Windows.Documents.Block.LineHeight" /> property.</span></span></param>
        <param name="value"><span data-ttu-id="47c4d-352">プロパティを設定する新しい値。</span><span class="sxs-lookup"><span data-stu-id="47c4d-352">The new value to set the property to.</span></span></param>
        <summary><span data-ttu-id="47c4d-353">指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Block.LineHeight" /> 添付プロパティの値を設定します。</span><span class="sxs-lookup"><span data-stu-id="47c4d-353">Sets the value of the <see cref="P:System.Windows.Documents.Block.LineHeight" /> attached property for a specified dependency object.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47c4d-354"><paramref name="element" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="47c4d-354"><paramref name="element" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="47c4d-355"><paramref name="value" /> が負の値です。</span><span class="sxs-lookup"><span data-stu-id="47c4d-355"><paramref name="value" /> is negative.</span></span></exception>
        <altmember cref="M:System.Windows.Documents.Block.GetLineHeight(System.Windows.DependencyObject)" />
      </Docs>
    </Member>
    <Member MemberName="SetLineStackingStrategy">
      <MemberSignature Language="C#" Value="public static void SetLineStackingStrategy (System.Windows.DependencyObject element, System.Windows.LineStackingStrategy value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetLineStackingStrategy(class System.Windows.DependencyObject element, valuetype System.Windows.LineStackingStrategy value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Block.SetLineStackingStrategy(System.Windows.DependencyObject,System.Windows.LineStackingStrategy)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetLineStackingStrategy (element As DependencyObject, value As LineStackingStrategy)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetLineStackingStrategy(System::Windows::DependencyObject ^ element, System::Windows::LineStackingStrategy value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Windows.LineStackingStrategy" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="47c4d-356"><see cref="P:System.Windows.Documents.Block.LineStackingStrategy" /> プロパティの値の設定対象となる依存関係オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="47c4d-356">The dependency object on which to set the value of the <see cref="P:System.Windows.Documents.Block.LineStackingStrategy" /> property.</span></span></param>
        <param name="value"><span data-ttu-id="47c4d-357">プロパティを設定する新しい値。</span><span class="sxs-lookup"><span data-stu-id="47c4d-357">The new value to set the property to.</span></span></param>
        <summary><span data-ttu-id="47c4d-358">指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Block.LineStackingStrategy" /> 添付プロパティの値を設定します。</span><span class="sxs-lookup"><span data-stu-id="47c4d-358">Sets the value of the <see cref="P:System.Windows.Documents.Block.LineStackingStrategy" /> attached property on a specified dependency object.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47c4d-359"><paramref name="element" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="47c4d-359"><paramref name="element" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Windows.Documents.Block.GetLineStackingStrategy(System.Windows.DependencyObject)" />
      </Docs>
    </Member>
    <Member MemberName="SetTextAlignment">
      <MemberSignature Language="C#" Value="public static void SetTextAlignment (System.Windows.DependencyObject element, System.Windows.TextAlignment value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetTextAlignment(class System.Windows.DependencyObject element, valuetype System.Windows.TextAlignment value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Block.SetTextAlignment(System.Windows.DependencyObject,System.Windows.TextAlignment)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetTextAlignment (element As DependencyObject, value As TextAlignment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetTextAlignment(System::Windows::DependencyObject ^ element, System::Windows::TextAlignment value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Windows.TextAlignment" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="47c4d-360"><see cref="P:System.Windows.Documents.Block.TextAlignment" /> プロパティの値の設定対象となる依存関係オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="47c4d-360">The dependency object on which to set the value of the <see cref="P:System.Windows.Documents.Block.TextAlignment" /> property.</span></span></param>
        <param name="value"><span data-ttu-id="47c4d-361">プロパティを設定する新しい値。</span><span class="sxs-lookup"><span data-stu-id="47c4d-361">The new value to set the property to.</span></span></param>
        <summary><span data-ttu-id="47c4d-362">指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Block.TextAlignment" /> 添付プロパティの値を設定します。</span><span class="sxs-lookup"><span data-stu-id="47c4d-362">Sets the value of the <see cref="P:System.Windows.Documents.Block.TextAlignment" /> attached property for a specified dependency object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <xref:System.Windows.Documents.Block.GetTextAlignment%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47c4d-363"><paramref name="element" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="47c4d-363"><paramref name="element" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SiblingBlocks">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.BlockCollection SiblingBlocks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.BlockCollection SiblingBlocks" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Block.SiblingBlocks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SiblingBlocks As BlockCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::BlockCollection ^ SiblingBlocks { System::Windows::Documents::BlockCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.BlockCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="47c4d-364">現在の <see cref="T:System.Windows.Documents.Block" /> 要素と兄弟関係にある <see cref="T:System.Windows.Documents.Block" /> 要素のコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="47c4d-364">Gets a collection of <see cref="T:System.Windows.Documents.Block" /> elements that are siblings to the current <see cref="T:System.Windows.Documents.Block" /> element.</span></span></summary>
        <value><span data-ttu-id="47c4d-365">現在の <see cref="T:System.Windows.Documents.BlockCollection" /> 要素の親が直接ホストする子 <see cref="T:System.Windows.Documents.Block" /> 要素を格納する <see cref="T:System.Windows.Documents.Block" />。現在の <see cref="T:System.Windows.Documents.Block" /> 要素に親がない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="47c4d-365">A <see cref="T:System.Windows.Documents.BlockCollection" /> that contains the child <see cref="T:System.Windows.Documents.Block" /> elements that are directly hosted by the parent of the current <see cref="T:System.Windows.Documents.Block" /> element, or <see langword="null" /> if the current <see cref="T:System.Windows.Documents.Block" /> element has no parent.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47c4d-366"><xref:System.Windows.Documents.BlockCollection>このプロパティによって返されるが含まれています、<xref:System.Windows.Documents.Block>要素をコレクションにはアクセスです。 つまり、このプロパティを所有する要素が兄弟のコレクションを生成する目的で、独自の兄弟であると見なされます。</span><span class="sxs-lookup"><span data-stu-id="47c4d-366">The <xref:System.Windows.Documents.BlockCollection> returned by this property includes the <xref:System.Windows.Documents.Block> element through which the collection is accessed; that is, the element that owns this property is considered to be its own sibling for the purposes of generating the collection of siblings.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.Block.NextBlock" />
        <altmember cref="P:System.Windows.Documents.Block.PreviousBlock" />
      </Docs>
    </Member>
    <Member MemberName="TextAlignment">
      <MemberSignature Language="C#" Value="public System.Windows.TextAlignment TextAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.TextAlignment TextAlignment" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Block.TextAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property TextAlignment As TextAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::TextAlignment TextAlignment { System::Windows::TextAlignment get(); void set(System::Windows::TextAlignment value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.TextAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="47c4d-367">テキスト コンテンツの水平方向の配置を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="47c4d-367">Gets or sets the horizontal alignment of text content.</span></span></summary>
        <value><span data-ttu-id="47c4d-368">目的の配置を指定する、いずれかの <see cref="T:System.Windows.TextAlignment" /> 値。</span><span class="sxs-lookup"><span data-stu-id="47c4d-368">One of the <see cref="T:System.Windows.TextAlignment" /> values that specifies the desired alignment.</span></span> <span data-ttu-id="47c4d-369">既定値は、<see cref="F:System.Windows.TextAlignment.Left" /> です。</span><span class="sxs-lookup"><span data-stu-id="47c4d-369">The default is <see cref="F:System.Windows.TextAlignment.Left" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_TextAlignment"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="47c4d-370">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="47c4d-370">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="47c4d-371">識別子のフィールド</span><span class="sxs-lookup"><span data-stu-id="47c4d-371">Identifier field</span></span>|<xref:System.Windows.Documents.Block.TextAlignmentProperty>|  
|<span data-ttu-id="47c4d-372">メタデータ プロパティに設定します。 `true`</span><span class="sxs-lookup"><span data-stu-id="47c4d-372">Metadata properties set to `true`</span></span>|<span data-ttu-id="47c4d-373"><xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>、<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>、<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A></span><span class="sxs-lookup"><span data-stu-id="47c4d-373"><xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A></span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="47c4d-374">次の例は、設定する方法を示します、<xref:System.Windows.Documents.Block.TextAlignment%2A>の属性、<xref:System.Windows.Documents.Block>要素。</span><span class="sxs-lookup"><span data-stu-id="47c4d-374">The following example shows how to set the <xref:System.Windows.Documents.Block.TextAlignment%2A> attribute of a <xref:System.Windows.Documents.Block> element.</span></span>  
  
 [!code-xaml[BlockSnippets#_Block_TextAlignmentXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml#_block_textalignmentxaml)]  
  
 <span data-ttu-id="47c4d-375">次の図は、前の例で表示する方法を示します<xref:System.Windows.TextAlignment.Left>テキストの配置 (既定)。</span><span class="sxs-lookup"><span data-stu-id="47c4d-375">The following figure shows how the preceding example renders with <xref:System.Windows.TextAlignment.Left> text alignment (the default).</span></span>  
  
 <span data-ttu-id="47c4d-376">![スクリーン ショット: 左の TextAlign プロパティ値](~/add/media/flowdoc-textalign-left.png "スクリーン ショット: 左の TextAlign プロパティ値")</span><span class="sxs-lookup"><span data-stu-id="47c4d-376">![Screenshot: TextAlign property value of Left](~/add/media/flowdoc-textalign-left.png "Screenshot: TextAlign property value of Left")</span></span>  
  
 <span data-ttu-id="47c4d-377">同じ例を表示する方法を次に示します<xref:System.Windows.TextAlignment.Right>テキストの配置。</span><span class="sxs-lookup"><span data-stu-id="47c4d-377">The following figure shows how the same example renders with <xref:System.Windows.TextAlignment.Right> text alignment.</span></span>  
  
 <span data-ttu-id="47c4d-378">![スクリーン ショット: 右の TextAlign 値の](~/add/media/flowdoc-textalign-right.png "スクリーン ショット: 右の TextAlign 値")</span><span class="sxs-lookup"><span data-stu-id="47c4d-378">![Screenshot: TextAlign value of Right](~/add/media/flowdoc-textalign-right.png "Screenshot: TextAlign value of Right")</span></span>  
  
 <span data-ttu-id="47c4d-379">同じ例を表示する方法を次に示します<xref:System.Windows.TextAlignment.Center>テキストの配置。</span><span class="sxs-lookup"><span data-stu-id="47c4d-379">The following figure shows how the same example renders with <xref:System.Windows.TextAlignment.Center> text alignment.</span></span>  
  
 <span data-ttu-id="47c4d-380">![スクリーン ショット: 中央の TextAlign プロパティ値](~/add/media/flowdoc-textalign-center.png "スクリーン ショット: 中央の TextAlign プロパティ値")</span><span class="sxs-lookup"><span data-stu-id="47c4d-380">![Screenshot: TextAlign property value of Center](~/add/media/flowdoc-textalign-center.png "Screenshot: TextAlign property value of Center")</span></span>  
  
 <span data-ttu-id="47c4d-381">次の例は、設定する方法を示します、<xref:System.Windows.Documents.Block.TextAlignment%2A>プロパティ プログラムでします。</span><span class="sxs-lookup"><span data-stu-id="47c4d-381">The following example shows how to set the <xref:System.Windows.Documents.Block.TextAlignment%2A> property programmatically.</span></span>  
  
 [!code-csharp[BlockSnippets#_Block_TextAlignment](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml.cs#_block_textalignment)]
 [!code-vb[BlockSnippets#_Block_TextAlignment](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BlockSnippets/visualbasic/window1.xaml.vb#_block_textalignment)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextAlignmentProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TextAlignmentProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TextAlignmentProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Block.TextAlignmentProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TextAlignmentProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TextAlignmentProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="47c4d-382"><see cref="P:System.Windows.Documents.Block.TextAlignment" /> 依存関係プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="47c4d-382">Identifies the <see cref="P:System.Windows.Documents.Block.TextAlignment" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>