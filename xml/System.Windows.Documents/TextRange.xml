<Type Name="TextRange" FullName="System.Windows.Documents.TextRange">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0d0eea67c4771f8c670a456f6f11f4afbee0483b" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39857471" /></Metadata><TypeSignature Language="C#" Value="public class TextRange" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TextRange extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Documents.TextRange" />
  <TypeSignature Language="VB.NET" Value="Public Class TextRange" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextRange" />
  <TypeSignature Language="F#" Value="type TextRange = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="463f4-101">2 つの <see cref="T:System.Windows.Documents.TextPointer" /> 位置の間にあるコンテンツの選択範囲を表します。</span><span class="sxs-lookup"><span data-stu-id="463f4-101">Represents a selection of content between two <see cref="T:System.Windows.Documents.TextPointer" /> positions.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="463f4-102"><xref:System.Windows.Documents.TextRange>クラスは、次の用語を紹介します。</span><span class="sxs-lookup"><span data-stu-id="463f4-102">The <xref:System.Windows.Documents.TextRange> class introduces the following terminology.</span></span>  
  
-   <span data-ttu-id="463f4-103">**選択範囲**-<xref:System.Windows.Documents.TextRange>によって示される 2 つの位置の間のコンテンツの選択範囲が**TextPointers**します。</span><span class="sxs-lookup"><span data-stu-id="463f4-103">**Selection** - A <xref:System.Windows.Documents.TextRange> is a selection of content between two positions indicated by **TextPointers**.</span></span>  <span data-ttu-id="463f4-104">他の位置が移動可能な次のいずれかが、選択範囲に対して固定のアンカーを配置します。</span><span class="sxs-lookup"><span data-stu-id="463f4-104">One of these positions a fixed anchor with respect to the selection, while the other position is movable.</span></span>  <span data-ttu-id="463f4-105">これは、マウスまたはキーボードを使用して、ユーザーが行った選択の動作方法に似ています。</span><span class="sxs-lookup"><span data-stu-id="463f4-105">This is similar to how a selection made by a user using the mouse or keyboard behaves.</span></span>  
  
-   <span data-ttu-id="463f4-106">**現在の選択範囲**ため、<xref:System.Windows.Documents.TextRange>常に選択範囲を示しますコンテンツでは、理にかなってだけで示される選択範囲を参照してください、<xref:System.Windows.Documents.TextRange>として、 *selection*。</span><span class="sxs-lookup"><span data-stu-id="463f4-106">**Current Selection** - Because a <xref:System.Windows.Documents.TextRange> always indicates a selection in content, it makes sense to simply refer to the selection indicated by a <xref:System.Windows.Documents.TextRange> as the *current selection*.</span></span>  
  
-   <span data-ttu-id="463f4-107">**テキスト コンテナー** -*テキスト コンテナー*がフロー コンテンツを手動での最終的な境界を形成する要素は、<xref:System.Windows.Documents.TextRange>テキスト コンテナー内で常に分類されます。</span><span class="sxs-lookup"><span data-stu-id="463f4-107">**Text Container** - A *text container* is the element that forms the ultimate border for the flow content at hand; the selection indicated by a <xref:System.Windows.Documents.TextRange> always falls within a text container.</span></span>  <span data-ttu-id="463f4-108">現時点では、テキスト コンテナーがある必要がありますか、<xref:System.Windows.Documents.FlowDocument>または<xref:System.Windows.Controls.TextBlock>します。</span><span class="sxs-lookup"><span data-stu-id="463f4-108">Currently, a text container must be either a <xref:System.Windows.Documents.FlowDocument> or a <xref:System.Windows.Controls.TextBlock>.</span></span>  
  
-   <span data-ttu-id="463f4-109">**ドキュメント**-まとめてテキスト コンテナー内に含まれるコンテンツと呼ばれます、*ドキュメント*します。</span><span class="sxs-lookup"><span data-stu-id="463f4-109">**Document** - The content collectively contained within a text container is referred to as a *document*.</span></span>  
  
 <span data-ttu-id="463f4-110">その他の詳細についてなどのような関連する*位置*を参照してください<xref:System.Windows.Documents.TextPointer>します。</span><span class="sxs-lookup"><span data-stu-id="463f4-110">For more information about other related terms like *position*, see <xref:System.Windows.Documents.TextPointer>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="463f4-111">次の例を使用して、<xref:System.Windows.Documents.TextRange.Text%2A>のプロパティを<xref:System.Windows.Documents.TextRange>の指定されたプレーン テキスト表現を取得する<xref:System.Windows.Documents.FlowDocument>します。</span><span class="sxs-lookup"><span data-stu-id="463f4-111">The following example demonstrates using the <xref:System.Windows.Documents.TextRange.Text%2A> property of a <xref:System.Windows.Documents.TextRange> to return the plain text representation of a specified <xref:System.Windows.Documents.FlowDocument>.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextRange_Text](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textrange_text)]
 [!code-vb[TextPointer_Snippets#_TextRange_Text](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textrange_text)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Documents.TextPointerContext" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextRange (System.Windows.Documents.TextPointer position1, System.Windows.Documents.TextPointer position2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Documents.TextPointer position1, class System.Windows.Documents.TextPointer position2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextRange.#ctor(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (position1 As TextPointer, position2 As TextPointer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextRange(System::Windows::Documents::TextPointer ^ position1, System::Windows::Documents::TextPointer ^ position2);" />
      <MemberSignature Language="F#" Value="new System.Windows.Documents.TextRange : System.Windows.Documents.TextPointer * System.Windows.Documents.TextPointer -&gt; System.Windows.Documents.TextRange" Usage="new System.Windows.Documents.TextRange (position1, position2)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="position1" Type="System.Windows.Documents.TextPointer" />
        <Parameter Name="position2" Type="System.Windows.Documents.TextPointer" />
      </Parameters>
      <Docs>
        <param name="position1"><span data-ttu-id="463f4-112">新しい <see cref="T:System.Windows.Documents.TextRange" /> の作成に使用する選択範囲の一方の端を示す固定アンカー位置。</span><span class="sxs-lookup"><span data-stu-id="463f4-112">A fixed anchor position that marks one end of the selection used to form the new <see cref="T:System.Windows.Documents.TextRange" />.</span></span></param>
        <param name="position2"><span data-ttu-id="463f4-113">新しい <see cref="T:System.Windows.Documents.TextRange" /> の作成に使用する選択範囲のもう一方の端を示す移動可能な位置。</span><span class="sxs-lookup"><span data-stu-id="463f4-113">A movable position that marks the other end of the selection used to form the new <see cref="T:System.Windows.Documents.TextRange" />.</span></span></param>
        <summary><span data-ttu-id="463f4-114">新しい範囲の開始位置および終了位置として指定された 2 つの <see cref="T:System.Windows.Documents.TextRange" /> 位置を取得して、<see cref="T:System.Windows.Documents.TextPointer" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="463f4-114">Initializes a new instance of the <see cref="T:System.Windows.Documents.TextRange" /> class, taking two specified <see cref="T:System.Windows.Documents.TextPointer" /> positions as the beginning and end positions for the new range.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="463f4-115">A<xref:System.Windows.Documents.TextRange>によって示される 2 つの位置の間の選択範囲からの形式が**TextPointers**します。</span><span class="sxs-lookup"><span data-stu-id="463f4-115">A <xref:System.Windows.Documents.TextRange> is formed from a selection between two positions indicated by **TextPointers**.</span></span>  <span data-ttu-id="463f4-116">それらの位置のいずれか (によって示される`position1`) 他の位置の中に、選択基準に対して固定されます (によって示される`position2`) 移動します。</span><span class="sxs-lookup"><span data-stu-id="463f4-116">One of these positions (indicated by `position1`) is fixed with respect to the selection, while the other position (indicated by `position2`) is movable.</span></span>  <span data-ttu-id="463f4-117">これは、マウスまたはキーボードを使用して、ユーザーが行った選択の動作方法に似ています。</span><span class="sxs-lookup"><span data-stu-id="463f4-117">This is similar to how a selection made by a user using the mouse or keyboard behaves.</span></span>  
  
 <span data-ttu-id="463f4-118">新しいの実際の端<xref:System.Windows.Documents.TextRange>選択を含む、新しいドキュメントに適用されるヒューリスティックの一致するように調整される可能性があります<xref:System.Windows.Documents.TextRange>します。</span><span class="sxs-lookup"><span data-stu-id="463f4-118">The actual ends of the new <xref:System.Windows.Documents.TextRange> may be adjusted to match any selection heuristics that are applicable to the document that contains the new <xref:System.Windows.Documents.TextRange>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="463f4-119">次の例では、使用、<xref:System.Windows.Documents.TextRange>コンス トラクター。</span><span class="sxs-lookup"><span data-stu-id="463f4-119">The following example demonstrates the use of the <xref:System.Windows.Documents.TextRange> constructor.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextRange_Text](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textrange_text)]
 [!code-vb[TextPointer_Snippets#_TextRange_Text](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textrange_text)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="463f4-120"><paramref name="position1" /> と <paramref name="position2" /> が同じドキュメント内に位置していない場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="463f4-120">Occurs when <paramref name="position1" /> and <paramref name="position2" /> are not positioned within the same document.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="463f4-121"><paramref name="position1" /> または <paramref name="position2" /> が <see langword="null" /> の場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="463f4-121">Occurs when <paramref name="position1" /> or <paramref name="position2" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ApplyPropertyValue">
      <MemberSignature Language="C#" Value="public void ApplyPropertyValue (System.Windows.DependencyProperty formattingProperty, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ApplyPropertyValue(class System.Windows.DependencyProperty formattingProperty, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextRange.ApplyPropertyValue(System.Windows.DependencyProperty,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyPropertyValue (formattingProperty As DependencyProperty, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ApplyPropertyValue(System::Windows::DependencyProperty ^ formattingProperty, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.ApplyPropertyValue : System.Windows.DependencyProperty * obj -&gt; unit" Usage="textRange.ApplyPropertyValue (formattingProperty, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formattingProperty" Type="System.Windows.DependencyProperty" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="formattingProperty"><span data-ttu-id="463f4-122">適用する書式設定プロパティ。</span><span class="sxs-lookup"><span data-stu-id="463f4-122">A formatting property to apply.</span></span></param>
        <param name="value"><span data-ttu-id="463f4-123">書式設定プロパティの値。</span><span class="sxs-lookup"><span data-stu-id="463f4-123">The value for the formatting property.</span></span></param>
        <summary><span data-ttu-id="463f4-124">指定した書式設定プロパティとその値を現在の選択範囲に適用します。</span><span class="sxs-lookup"><span data-stu-id="463f4-124">Applies a specified formatting property and value to the current selection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="463f4-125">このメソッドは、適切な挿入することで書式設定を適用<xref:System.Windows.Documents.Inline>要素など<xref:System.Windows.Documents.Bold>と<xref:System.Windows.Documents.Italic>、これによって示される選択範囲に<xref:System.Windows.Documents.TextRange>します。</span><span class="sxs-lookup"><span data-stu-id="463f4-125">This method applies formatting by inserting the appropriate <xref:System.Windows.Documents.Inline> elements, such as <xref:System.Windows.Documents.Bold> and <xref:System.Windows.Documents.Italic>, into the selection indicated by this <xref:System.Windows.Documents.TextRange>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="463f4-126"><xref:System.Windows.Documents.TextRange.ApplyPropertyValue%2A> メソッドの使用例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="463f4-126">The following example demonstrates the use of the <xref:System.Windows.Documents.TextRange.ApplyPropertyValue%2A> method.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextRange_LoadSave](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textrange_loadsave)]
 [!code-vb[TextPointer_Snippets#_TextRange_LoadSave](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textrange_loadsave)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="463f4-127"><paramref name="formattingProperty" /> が有効な書式設定プロパティを指定していない場合、または <paramref name="value" /> が <paramref name="formattingProperty" /> の無効な値を指定している場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="463f4-127">Occurs when <paramref name="formattingProperty" /> does not specify a valid formatting property, or <paramref name="value" /> specifies an invalid value for <paramref name="formattingProperty" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="463f4-128"><paramref name="formattingProperty" /> が <see langword="null" /> の場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="463f4-128">Occurs when <paramref name="formattingProperty" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Windows.Documents.TextRange.ClearAllProperties" />
        <altmember cref="M:System.Windows.Documents.TextRange.GetPropertyValue(System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="CanLoad">
      <MemberSignature Language="C#" Value="public bool CanLoad (string dataFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanLoad(string dataFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextRange.CanLoad(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanLoad (dataFormat As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanLoad(System::String ^ dataFormat);" />
      <MemberSignature Language="F#" Value="member this.CanLoad : string -&gt; bool" Usage="textRange.CanLoad dataFormat" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataFormat" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataFormat"><span data-ttu-id="463f4-129">現在の選択範囲への読み込み互換性をチェックするデータ形式。</span><span class="sxs-lookup"><span data-stu-id="463f4-129">A data format to check for load-compatibility into the current selection.</span></span>  <span data-ttu-id="463f4-130">定義済みのデータ形式の一覧については、<see cref="T:System.Windows.DataFormats" /> を参照してください。</span><span class="sxs-lookup"><span data-stu-id="463f4-130">See <see cref="T:System.Windows.DataFormats" /> for a list of predefined data formats.</span></span></param>
        <summary><span data-ttu-id="463f4-131">指定したデータ形式でコンテンツを現在の選択範囲に読み込めるかどうかをチェックします。</span><span class="sxs-lookup"><span data-stu-id="463f4-131">Checks whether the current selection can be loaded with content in a specified data format.</span></span></summary>
        <returns><span data-ttu-id="463f4-132">指定したデータ形式でコンテンツを現在の選択範囲に読み込める場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="463f4-132"><see langword="true" /> if the current selection can be loaded with content in the specified data format; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="463f4-133">使用して、対応する<xref:System.Windows.Documents.TextRange.Load%2A>に実際にコンテンツを指定したデータ形式の現在の選択に読み込む方法です。</span><span class="sxs-lookup"><span data-stu-id="463f4-133">Use the corresponding <xref:System.Windows.Documents.TextRange.Load%2A> method to actually load content into the current selection in a specified data format.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="463f4-134"><xref:System.Windows.Documents.TextRange.CanLoad%2A> メソッドの使用例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="463f4-134">The following example demonstrates the use of the <xref:System.Windows.Documents.TextRange.CanLoad%2A> method.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextRange_LoadSave](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textrange_loadsave)]
 [!code-vb[TextPointer_Snippets#_TextRange_LoadSave](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textrange_loadsave)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.TextRange.CanSave(System.String)" />
        <altmember cref="M:System.Windows.Documents.TextRange.Save(System.IO.Stream,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CanSave">
      <MemberSignature Language="C#" Value="public bool CanSave (string dataFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanSave(string dataFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextRange.CanSave(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanSave (dataFormat As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanSave(System::String ^ dataFormat);" />
      <MemberSignature Language="F#" Value="member this.CanSave : string -&gt; bool" Usage="textRange.CanSave dataFormat" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Documents.ITextRange.CanSave(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataFormat" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataFormat"><span data-ttu-id="463f4-135">現在の選択範囲の保存互換性をチェックするデータ形式。</span><span class="sxs-lookup"><span data-stu-id="463f4-135">A data format to check for save compatibility with the current selection.</span></span>  <span data-ttu-id="463f4-136">定義済みのデータ形式の一覧については、<see cref="T:System.Windows.DataFormats" /> を参照してください。</span><span class="sxs-lookup"><span data-stu-id="463f4-136">See <see cref="T:System.Windows.DataFormats" /> for a list of predefined data formats.</span></span></param>
        <summary><span data-ttu-id="463f4-137">指定したデータ形式で現在の選択範囲を保存できるかどうかをチェックします。</span><span class="sxs-lookup"><span data-stu-id="463f4-137">Checks whether the current selection can be saved as a specified data format.</span></span></summary>
        <returns><span data-ttu-id="463f4-138">指定したデータ形式で現在の選択範囲を保存できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="463f4-138"><see langword="true" /> if the current selection can be saved as the specified data format; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="463f4-139">使用して、対応する<xref:System.Windows.Documents.TextRange.Save%2A>メソッドを実際には、指定したデータ形式で現在の選択を保存します。</span><span class="sxs-lookup"><span data-stu-id="463f4-139">Use the corresponding <xref:System.Windows.Documents.TextRange.Save%2A> method to actually save the current selection in a specified data format.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="463f4-140"><xref:System.Windows.Documents.TextRange.CanSave%2A> メソッドの使用例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="463f4-140">The following example demonstrates the use of the <xref:System.Windows.Documents.TextRange.CanSave%2A> method.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextRange_LoadSave](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textrange_loadsave)]
 [!code-vb[TextPointer_Snippets#_TextRange_LoadSave](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textrange_loadsave)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.TextRange.CanLoad(System.String)" />
        <altmember cref="M:System.Windows.Documents.TextRange.Load(System.IO.Stream,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Changed">
      <MemberSignature Language="C#" Value="public event EventHandler Changed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Changed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Documents.TextRange.Changed" />
      <MemberSignature Language="VB.NET" Value="Public Event Changed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Changed;" />
      <MemberSignature Language="F#" Value="member this.Changed : EventHandler " Usage="member this.Changed : System.EventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.Documents.ITextRange.Changed</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="463f4-141">コンテンツの新しいスパンをカバーするように範囲の位置が変更されたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="463f4-141">Occurs when the range is repositioned to cover a new span of content.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearAllProperties">
      <MemberSignature Language="C#" Value="public void ClearAllProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearAllProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextRange.ClearAllProperties" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearAllProperties ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearAllProperties();" />
      <MemberSignature Language="F#" Value="member this.ClearAllProperties : unit -&gt; unit" Usage="textRange.ClearAllProperties " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="463f4-142"><see cref="T:System.Windows.Documents.Inline" /> 要素によって表される書式設定プロパティを現在の選択範囲からすべて削除します。</span><span class="sxs-lookup"><span data-stu-id="463f4-142">Removes all formatting properties (represented by <see cref="T:System.Windows.Documents.Inline" /> elements) from the current selection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="463f4-143">このメソッドだけに影響を及ぼす<xref:System.Windows.Documents.Inline>など、要素の書式設定<xref:System.Windows.Documents.Bold>または<xref:System.Windows.Documents.Italic>します。</span><span class="sxs-lookup"><span data-stu-id="463f4-143">This method only affects any <xref:System.Windows.Documents.Inline> formatting elements, such as <xref:System.Windows.Documents.Bold> or <xref:System.Windows.Documents.Italic>.</span></span> <span data-ttu-id="463f4-144">段落とその他の外側に設定されたプロパティ<xref:System.Windows.Documents.Block>要素は変更されません。</span><span class="sxs-lookup"><span data-stu-id="463f4-144">Properties set on paragraphs and other enclosing <xref:System.Windows.Documents.Block> elements are not changed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.TextRange.ApplyPropertyValue(System.Windows.DependencyProperty,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Windows.Documents.TextPointer textPointer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Windows.Documents.TextPointer textPointer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextRange.Contains(System.Windows.Documents.TextPointer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Windows::Documents::TextPointer ^ textPointer);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Windows.Documents.TextPointer -&gt; bool" Usage="textRange.Contains textPointer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textPointer" Type="System.Windows.Documents.TextPointer" />
      </Parameters>
      <Docs>
        <param name="textPointer"><span data-ttu-id="463f4-145">現在の選択範囲に含まれているかどうかをテストする位置。</span><span class="sxs-lookup"><span data-stu-id="463f4-145">A position to test for inclusion in the current selection.</span></span></param>
        <summary><span data-ttu-id="463f4-146"><see cref="T:System.Windows.Documents.TextPointer" /> で指定された位置が現在の選択範囲内にあるかどうかをチェックします。</span><span class="sxs-lookup"><span data-stu-id="463f4-146">Checks whether a position (specified by a <see cref="T:System.Windows.Documents.TextPointer" />) is located within the current selection.</span></span></summary>
        <returns><span data-ttu-id="463f4-147">指定した位置が現在の選択範囲内にある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="463f4-147"><see langword="true" /> if the specified position is located within the current selection; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="463f4-148">現在の選択範囲の一方の端の位置 (によって示される<xref:System.Windows.Documents.TextRange.Start%2A>と<xref:System.Windows.Documents.TextRange.End%2A>) は、現在の選択範囲の一部であると見なされます。</span><span class="sxs-lookup"><span data-stu-id="463f4-148">Positions at either end of the current selection (indicated by <xref:System.Windows.Documents.TextRange.Start%2A> and <xref:System.Windows.Documents.TextRange.End%2A>) are considered to be part of the current selection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="463f4-149"><xref:System.Windows.Documents.TextRange.Contains%2A> メソッドの使用例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="463f4-149">The following example demonstrates the use of the <xref:System.Windows.Documents.TextRange.Contains%2A> method.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextRange_StartEnd](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textrange_startend)]
 [!code-vb[TextPointer_Snippets#_TextRange_StartEnd](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textrange_startend)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="463f4-150">*textPointer* が現在の選択範囲と同じドキュメント内にない場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="463f4-150">Occurs when *textPointer* is not in the same document as the current selection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="End">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer End { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.TextPointer End" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextRange.End" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property End As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::TextPointer ^ End { System::Windows::Documents::TextPointer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.End : System.Windows.Documents.TextPointer" Usage="System.Windows.Documents.TextRange.End" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="463f4-151">現在の選択範囲の末尾を示す位置を取得します。</span><span class="sxs-lookup"><span data-stu-id="463f4-151">Get the position that marks the end of the current selection.</span></span></summary>
        <value><span data-ttu-id="463f4-152">現在の選択範囲の末尾を示す <see cref="T:System.Windows.Documents.TextPointer" />。</span><span class="sxs-lookup"><span data-stu-id="463f4-152">A <see cref="T:System.Windows.Documents.TextPointer" /> that points to the end of the current selection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="463f4-153">次の例では、使用、<xref:System.Windows.Documents.TextRange.End%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="463f4-153">The following example demonstrates the use of the <xref:System.Windows.Documents.TextRange.End%2A> property.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextRange_StartEnd](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textrange_startend)]
 [!code-vb[TextPointer_Snippets#_TextRange_StartEnd](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textrange_startend)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.TextRange.Start" />
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValue">
      <MemberSignature Language="C#" Value="public object GetPropertyValue (System.Windows.DependencyProperty formattingProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetPropertyValue(class System.Windows.DependencyProperty formattingProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextRange.GetPropertyValue(System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertyValue (formattingProperty As DependencyProperty) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetPropertyValue(System::Windows::DependencyProperty ^ formattingProperty);" />
      <MemberSignature Language="F#" Value="member this.GetPropertyValue : System.Windows.DependencyProperty -&gt; obj" Usage="textRange.GetPropertyValue formattingProperty" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Documents.ITextRange.GetPropertyValue(System.Windows.DependencyProperty)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formattingProperty" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="formattingProperty"><span data-ttu-id="463f4-154">現在の選択範囲について値を取得する書式設定プロパティ。</span><span class="sxs-lookup"><span data-stu-id="463f4-154">A formatting property to get the value of with respect to the current selection.</span></span></param>
        <summary><span data-ttu-id="463f4-155">現在の選択範囲の指定した書式設定プロパティの有効な値を返します。</span><span class="sxs-lookup"><span data-stu-id="463f4-155">Returns the effective value of a specified formatting property on the current selection.</span></span></summary>
        <returns><span data-ttu-id="463f4-156">指定された書式設定プロパティの値を指定するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="463f4-156">An object specifying the value of the specified formatting property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="463f4-157">プロパティの値では、全体を返すために<xref:System.Windows.Documents.TextRange>の値を 1 つだけでテキストの上に拡張する必要があります、`formattingProperty`します。</span><span class="sxs-lookup"><span data-stu-id="463f4-157">In order to return a property value, the entire <xref:System.Windows.Documents.TextRange> must extend over text with only one value for the `formattingProperty`.</span></span> <span data-ttu-id="463f4-158">場合、<xref:System.Windows.Documents.TextRange>に 2 つまたは複数の異なる値のテキストにまで及びます、 `formattingProperty`、<xref:System.Windows.DependencyProperty.UnsetValue>が返されます。</span><span class="sxs-lookup"><span data-stu-id="463f4-158">If the <xref:System.Windows.Documents.TextRange> extends over text with two or more different values for the `formattingProperty`, <xref:System.Windows.DependencyProperty.UnsetValue> is returned.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="463f4-159"><paramref name="formattingProperty" /> が有効な書式設定プロパティを指定していない場合、または <paramref name="value" /> が <paramref name="formattingProperty" /> の無効な値を指定している場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="463f4-159">Occurs when <paramref name="formattingProperty" /> does not specify a valid formatting property, or <paramref name="value" /> specifies an invalid value for <paramref name="formattingProperty" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="463f4-160"><paramref name="formattingProperty" /> が <see langword="null" /> の場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="463f4-160">Occurs when <paramref name="formattingProperty" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Windows.Documents.TextRange.ClearAllProperties" />
        <altmember cref="M:System.Windows.Documents.TextRange.ApplyPropertyValue(System.Windows.DependencyProperty,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public bool IsEmpty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextRange.IsEmpty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEmpty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEmpty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEmpty : bool" Usage="System.Windows.Documents.TextRange.IsEmpty" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Documents.ITextRange.IsEmpty</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="463f4-161">現在の選択範囲が空かどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="463f4-161">Gets a value indicating whether or not the current selection is empty.</span></span></summary>
        <value><span data-ttu-id="463f4-162">現在の選択範囲が空の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="463f4-162"><see langword="true" /> if the current selection is empty; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="463f4-163">A<xref:System.Windows.Documents.TextRange>場合に、空と見なされますが、<xref:System.Windows.Documents.TextRange.Start%2A>と<xref:System.Windows.Documents.TextRange.End%2A>位置が等しい。</span><span class="sxs-lookup"><span data-stu-id="463f4-163">A <xref:System.Windows.Documents.TextRange> is considered empty if the <xref:System.Windows.Documents.TextRange.Start%2A> and <xref:System.Windows.Documents.TextRange.End%2A> positions are equal.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="463f4-164">次の例では、使用、<xref:System.Windows.Documents.TextRange.IsEmpty%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="463f4-164">The following example demonstrates the use of the <xref:System.Windows.Documents.TextRange.IsEmpty%2A> property.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextRange_LoadSave](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textrange_loadsave)]
 [!code-vb[TextPointer_Snippets#_TextRange_LoadSave](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textrange_loadsave)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.IO.Stream stream, string dataFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.IO.Stream stream, string dataFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextRange.Load(System.IO.Stream,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::IO::Stream ^ stream, System::String ^ dataFormat);" />
      <MemberSignature Language="F#" Value="member this.Load : System.IO.Stream * string -&gt; unit" Usage="textRange.Load (stream, dataFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="dataFormat" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="463f4-165">現在の選択範囲へ読み込むデータを格納する読み込み可能なストリーム。</span><span class="sxs-lookup"><span data-stu-id="463f4-165">A readable stream that contains data to load into the current selection.</span></span></param>
        <param name="dataFormat"><span data-ttu-id="463f4-166">データを読み込む際に使用するデータ形式。</span><span class="sxs-lookup"><span data-stu-id="463f4-166">A data format to load the data as.</span></span>  <span data-ttu-id="463f4-167">現在サポートされているデータ形式は、<see cref="F:System.Windows.DataFormats.Rtf" />、<see cref="F:System.Windows.DataFormats.Text" />、<see cref="F:System.Windows.DataFormats.Xaml" />、および <see cref="F:System.Windows.DataFormats.XamlPackage" /> です。</span><span class="sxs-lookup"><span data-stu-id="463f4-167">Currently supported data formats are <see cref="F:System.Windows.DataFormats.Rtf" />, <see cref="F:System.Windows.DataFormats.Text" />, <see cref="F:System.Windows.DataFormats.Xaml" />, and <see cref="F:System.Windows.DataFormats.XamlPackage" />.</span></span></param>
        <summary><span data-ttu-id="463f4-168">指定したストリームから、指定したデータ形式で現在の選択範囲を読み込みます。</span><span class="sxs-lookup"><span data-stu-id="463f4-168">Loads the current selection in a specified data format from a specified stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="463f4-169">場合<xref:System.IO.Stream.CanSeek%2A>は`true`の`stream`ストリームの末尾にコンテンツは、ストリームの先頭から読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="463f4-169">If <xref:System.IO.Stream.CanSeek%2A> is `true` for `stream`, content will be loaded from the beginning of the stream to the end of the stream.</span></span>  <span data-ttu-id="463f4-170">現在からのコンテンツの読み取りそれ以外の場合、<xref:System.IO.Stream.Position%2A>ストリームの末尾にします。</span><span class="sxs-lookup"><span data-stu-id="463f4-170">Otherwise, content will be read from the current <xref:System.IO.Stream.Position%2A> to the end of the stream.</span></span>  <span data-ttu-id="463f4-171">このメソッドが戻るとき`stream`オープン、および内の現在位置のまま`stream`が定義されていません。</span><span class="sxs-lookup"><span data-stu-id="463f4-171">When this method returns, `stream` is left open, and the current position within `stream` is undefined.</span></span>  
  
 <span data-ttu-id="463f4-172">読み込み操作では、新しく読み込まれたコンテンツを含む現在の選択項目が置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="463f4-172">A load operation replaces the current selection with the newly loaded content.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="463f4-173"><xref:System.Windows.Documents.TextRange.Load%2A> メソッドの使用例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="463f4-173">The following example demonstrates the use of the <xref:System.Windows.Documents.TextRange.Load%2A> method.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextRange_LoadSave](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textrange_loadsave)]
 [!code-vb[TextPointer_Snippets#_TextRange_LoadSave](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textrange_loadsave)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="463f4-174"><paramref name="stream" /> または <paramref name="dataFormat" /> が <see langword="null" /> の場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="463f4-174">Occurs when <paramref name="stream" /> or <paramref name="dataFormat" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="463f4-175">指定したデータ形式がサポートされていない場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="463f4-175">Occurs when the specified data format is unsupported.</span></span>  <span data-ttu-id="463f4-176">また、<paramref name="stream" /> から読み込まれたコンテンツが指定したデータ形式と一致しない場合にも発生することがあります。</span><span class="sxs-lookup"><span data-stu-id="463f4-176">May also be raised if content loaded from <paramref name="stream" /> does not match the specified data format.</span></span></exception>
        <altmember cref="M:System.Windows.Documents.TextRange.CanLoad(System.String)" />
        <altmember cref="M:System.Windows.Documents.TextRange.Save(System.IO.Stream,System.String)" />
        <altmember cref="M:System.Windows.Documents.TextRange.CanSave(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Save">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="463f4-177">指定したストリームに、指定したデータ形式で現在の選択範囲を保存します。</span><span class="sxs-lookup"><span data-stu-id="463f4-177">Saves the current selection to a specified stream in a specified data format.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.IO.Stream stream, string dataFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(class System.IO.Stream stream, string dataFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextRange.Save(System.IO.Stream,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::IO::Stream ^ stream, System::String ^ dataFormat);" />
      <MemberSignature Language="F#" Value="member this.Save : System.IO.Stream * string -&gt; unit" Usage="textRange.Save (stream, dataFormat)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Documents.ITextRange.Save(System.IO.Stream,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="dataFormat" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="463f4-178">現在の選択範囲を保存する空の書き込み可能なストリーム。</span><span class="sxs-lookup"><span data-stu-id="463f4-178">An empty, writable stream to save the current selection to.</span></span></param>
        <param name="dataFormat"><span data-ttu-id="463f4-179">現在の選択範囲を保存する際に使用するデータ形式。</span><span class="sxs-lookup"><span data-stu-id="463f4-179">A data format to save the current selection as.</span></span>  <span data-ttu-id="463f4-180">現在サポートされているデータ形式は、<see cref="F:System.Windows.DataFormats.Rtf" />、<see cref="F:System.Windows.DataFormats.Text" />、<see cref="F:System.Windows.DataFormats.Xaml" />、および <see cref="F:System.Windows.DataFormats.XamlPackage" /> です。</span><span class="sxs-lookup"><span data-stu-id="463f4-180">Currently supported data formats are <see cref="F:System.Windows.DataFormats.Rtf" />, <see cref="F:System.Windows.DataFormats.Text" />, <see cref="F:System.Windows.DataFormats.Xaml" />, and <see cref="F:System.Windows.DataFormats.XamlPackage" />.</span></span></param>
        <summary><span data-ttu-id="463f4-181">指定したストリームに、指定したデータ形式で現在の選択範囲を保存します。</span><span class="sxs-lookup"><span data-stu-id="463f4-181">Saves the current selection to a specified stream in a specified data format.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="463f4-182">このメソッドが戻るとき`stream`オープン、および内の現在位置のまま`stream`が定義されていません。</span><span class="sxs-lookup"><span data-stu-id="463f4-182">When this method returns, `stream` is left open, and the current position within `stream` is undefined.</span></span>  
  
 <span data-ttu-id="463f4-183">指定されたデータ形式に変換できます操作では、現在選択されているコンテンツ ファイルの一部として`dataFormat`します。</span><span class="sxs-lookup"><span data-stu-id="463f4-183">As part of the save operation, content in the current selection may be converted to the data format specified by `dataFormat`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="463f4-184"><xref:System.Windows.Documents.TextRange.Save%2A> メソッドの使用例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="463f4-184">The following example demonstrates the use of the <xref:System.Windows.Documents.TextRange.Save%2A> method.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextRange_LoadSave](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textrange_loadsave)]
 [!code-vb[TextPointer_Snippets#_TextRange_LoadSave](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textrange_loadsave)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="463f4-185"><paramref name="stream" /> または <paramref name="dataFormat" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="463f4-185"><paramref name="stream" /> or <paramref name="dataFormat" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="463f4-186">指定したデータ形式がサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="463f4-186">The specified data format is unsupported.</span></span>  
  
<span data-ttu-id="463f4-187">または</span><span class="sxs-lookup"><span data-stu-id="463f4-187">-or</span></span> 
<span data-ttu-id="463f4-188"><paramref name="stream" /> から読み込まれたコンテンツが、指定したデータ形式と一致しません。</span><span class="sxs-lookup"><span data-stu-id="463f4-188">Content loaded from <paramref name="stream" /> does not match the specified data format.</span></span></exception>
        <altmember cref="M:System.Windows.Documents.TextRange.CanSave(System.String)" />
        <altmember cref="M:System.Windows.Documents.TextRange.Load(System.IO.Stream,System.String)" />
        <altmember cref="M:System.Windows.Documents.TextRange.CanLoad(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.IO.Stream stream, string dataFormat, bool preserveTextElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(class System.IO.Stream stream, string dataFormat, bool preserveTextElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextRange.Save(System.IO.Stream,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::IO::Stream ^ stream, System::String ^ dataFormat, bool preserveTextElements);" />
      <MemberSignature Language="F#" Value="member this.Save : System.IO.Stream * string * bool -&gt; unit" Usage="textRange.Save (stream, dataFormat, preserveTextElements)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Documents.ITextRange.Save(System.IO.Stream,System.String,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="dataFormat" Type="System.String" />
        <Parameter Name="preserveTextElements" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="463f4-189">現在の選択範囲を保存する空の書き込み可能なストリーム。</span><span class="sxs-lookup"><span data-stu-id="463f4-189">An empty, writable stream to save the current selection to.</span></span></param>
        <param name="dataFormat"><span data-ttu-id="463f4-190">現在の選択範囲を保存する際に使用するデータ形式。</span><span class="sxs-lookup"><span data-stu-id="463f4-190">A data format to save the current selection as.</span></span>  <span data-ttu-id="463f4-191">現在サポートされているデータ形式は、<see cref="F:System.Windows.DataFormats.Rtf" />、<see cref="F:System.Windows.DataFormats.Text" />、<see cref="F:System.Windows.DataFormats.Xaml" />、および <see cref="F:System.Windows.DataFormats.XamlPackage" /> です。</span><span class="sxs-lookup"><span data-stu-id="463f4-191">Currently supported data formats are <see cref="F:System.Windows.DataFormats.Rtf" />, <see cref="F:System.Windows.DataFormats.Text" />, <see cref="F:System.Windows.DataFormats.Xaml" />, and <see cref="F:System.Windows.DataFormats.XamlPackage" />.</span></span></param>
        <param name="preserveTextElements"><span data-ttu-id="463f4-192">カスタム <see cref="T:System.Windows.Documents.TextElement" /> オブジェクトを保存する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="463f4-192"><see langword="true" /> to preserve custom <see cref="T:System.Windows.Documents.TextElement" /> objects; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="463f4-193">カスタム <see cref="T:System.Windows.Documents.TextElement" /> オブジェクトを保存するオプションを指定して、指定したストリームに、指定したデータ形式で現在の選択範囲を保存します。</span><span class="sxs-lookup"><span data-stu-id="463f4-193">Saves the current selection to a specified stream in a specified data format, with the option of preserving custom <see cref="T:System.Windows.Documents.TextElement" /> objects.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="463f4-194">ときに`preserveTextElements`は`false`カスタム<xref:System.Windows.Documents.TextElement>既知のオブジェクトが保存される<xref:System.Windows.Documents.TextElement>型。</span><span class="sxs-lookup"><span data-stu-id="463f4-194">When `preserveTextElements` is `false`, custom <xref:System.Windows.Documents.TextElement> objects are saved as known <xref:System.Windows.Documents.TextElement> types.</span></span>  <span data-ttu-id="463f4-195">たとえば、カスタムを作成する<xref:System.Windows.Documents.TextElement>と呼ばれる`Heading1`から継承される<xref:System.Windows.Documents.Paragraph>します。</span><span class="sxs-lookup"><span data-stu-id="463f4-195">For example, suppose you create a custom <xref:System.Windows.Documents.TextElement> called `Heading1`, which inherits from <xref:System.Windows.Documents.Paragraph>.</span></span> <span data-ttu-id="463f4-196">このメソッドを呼び出して`preserveTextElements`に設定`false`、`Heading1`に変換されます、<xref:System.Windows.Documents.Paragraph>ときに、<xref:System.Windows.Documents.TextRange>保存されます。</span><span class="sxs-lookup"><span data-stu-id="463f4-196">When you call this method with `preserveTextElements` set to `false`, `Heading1` is converted to a <xref:System.Windows.Documents.Paragraph> when the <xref:System.Windows.Documents.TextRange> is saved.</span></span>  <span data-ttu-id="463f4-197">このメソッドを呼び出すと`preserveTextElements`に設定`true`、`Heading1`変換されずに保存されます。</span><span class="sxs-lookup"><span data-stu-id="463f4-197">When you call this method with `preserveTextElements` set to `true`, `Heading1` is saved without being converted.</span></span> <span data-ttu-id="463f4-198">カスタム テキストの要素を維持する`dataFormat`に設定する必要があります<xref:System.Windows.DataFormats.Xaml?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="463f4-198">To preserve custom text elements, `dataFormat` must be set to <xref:System.Windows.DataFormats.Xaml?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="463f4-199"><xref:System.Windows.Documents.TextRange.Save%28System.IO.Stream%2CSystem.String%2CSystem.Boolean%29> .NET Framework version 3.5 で導入されました。</span><span class="sxs-lookup"><span data-stu-id="463f4-199"><xref:System.Windows.Documents.TextRange.Save%28System.IO.Stream%2CSystem.String%2CSystem.Boolean%29> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="463f4-200">詳細については、「[.NET Framework のバージョンおよび依存関係](~/docs/framework/migration-guide/versions-and-dependencies.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="463f4-200">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="463f4-201"><paramref name="stream" /> または <paramref name="dataFormat" /> が <see langword="null" /> の場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="463f4-201">Occurs when <paramref name="stream" /> or <paramref name="dataFormat" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="463f4-202">指定したデータ形式がサポートされていない場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="463f4-202">Occurs when the specified data format is unsupported.</span></span>  <span data-ttu-id="463f4-203">また、<paramref name="stream" /> から読み込まれたコンテンツが指定したデータ形式と一致しない場合にも発生することがあります。</span><span class="sxs-lookup"><span data-stu-id="463f4-203">May also be raised if content loaded from <paramref name="stream" /> does not match the specified data format.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select (System.Windows.Documents.TextPointer position1, System.Windows.Documents.TextPointer position2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Select(class System.Windows.Documents.TextPointer position1, class System.Windows.Documents.TextPointer position2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextRange.Select(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select (position1 As TextPointer, position2 As TextPointer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Select(System::Windows::Documents::TextPointer ^ position1, System::Windows::Documents::TextPointer ^ position2);" />
      <MemberSignature Language="F#" Value="member this.Select : System.Windows.Documents.TextPointer * System.Windows.Documents.TextPointer -&gt; unit" Usage="textRange.Select (position1, position2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position1" Type="System.Windows.Documents.TextPointer" />
        <Parameter Name="position2" Type="System.Windows.Documents.TextPointer" />
      </Parameters>
      <Docs>
        <param name="position1"><span data-ttu-id="463f4-204">更新対象の選択範囲の一方の端を示す固定アンカー位置。</span><span class="sxs-lookup"><span data-stu-id="463f4-204">A fixed anchor position that marks one end of the updated selection.</span></span></param>
        <param name="position2"><span data-ttu-id="463f4-205">更新対象の選択範囲のもう一方の端を示す移動可能な位置。</span><span class="sxs-lookup"><span data-stu-id="463f4-205">A movable position that marks the other end of the updated selection.</span></span></param>
        <summary><span data-ttu-id="463f4-206">更新対象の選択範囲を示す 2 つの <see cref="T:System.Windows.Documents.TextPointer" /> 位置を取得して現在の選択範囲を更新します。</span><span class="sxs-lookup"><span data-stu-id="463f4-206">Updates the current selection, taking two <see cref="T:System.Windows.Documents.TextPointer" /> positions to indicate the updated selection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="463f4-207">A<xref:System.Windows.Documents.TextRange>によって示される 2 つの位置の間の選択範囲からの形式が**TextPointers**します。</span><span class="sxs-lookup"><span data-stu-id="463f4-207">A <xref:System.Windows.Documents.TextRange> is formed from a selection between two positions indicated by **TextPointers**.</span></span>  <span data-ttu-id="463f4-208">それらの位置のいずれか (によって示される`position1`) 他の位置の中に、選択基準に対して固定されます (によって示される`position2`) 移動します。</span><span class="sxs-lookup"><span data-stu-id="463f4-208">One of these positions (indicated by `position1`) is fixed with respect to the selection, while the other position (indicated by `position2`) is movable.</span></span>  <span data-ttu-id="463f4-209">これは、マウスまたはキーボードを使用して、ユーザーが行った選択の動作方法に似ています。</span><span class="sxs-lookup"><span data-stu-id="463f4-209">This is similar to how a selection made by a user using the mouse or keyboard behaves.</span></span>  
  
 <span data-ttu-id="463f4-210">新しい現在の選択範囲を含むドキュメントに適用できる選択ヒューリスティックを一致するように、新しい選択範囲の実際の端を調整する場合があります。</span><span class="sxs-lookup"><span data-stu-id="463f4-210">The actual ends of the new selection may be adjusted to match any selection heuristics that are applicable to the document that contains the new current selection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="463f4-211"><paramref name="position1" /> と <paramref name="position2" /> が同じドキュメント内に位置していない場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="463f4-211">Occurs when <paramref name="position1" /> and <paramref name="position2" /> are not positioned within the same document.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="463f4-212"><paramref name="position1" /> または <paramref name="position2" /> が <see langword="null" /> の場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="463f4-212">Occurs when <paramref name="position1" /> or <paramref name="position2" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer Start { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.TextPointer Start" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextRange.Start" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Start As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::TextPointer ^ Start { System::Windows::Documents::TextPointer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Start : System.Windows.Documents.TextPointer" Usage="System.Windows.Documents.TextRange.Start" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="463f4-213">現在の選択範囲の先頭を示す位置を取得します。</span><span class="sxs-lookup"><span data-stu-id="463f4-213">Gets the position that marks the beginning of the current selection.</span></span></summary>
        <value><span data-ttu-id="463f4-214">現在の選択範囲の先頭を示す <see cref="T:System.Windows.Documents.TextPointer" />。</span><span class="sxs-lookup"><span data-stu-id="463f4-214">A <see cref="T:System.Windows.Documents.TextPointer" /> that points to the beginning of the current selection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="463f4-215">次の例では、使用、<xref:System.Windows.Documents.TextRange.Start%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="463f4-215">The following example demonstrates the use of the <xref:System.Windows.Documents.TextRange.Start%2A> property.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextRange_StartEnd](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textrange_startend)]
 [!code-vb[TextPointer_Snippets#_TextRange_StartEnd](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textrange_startend)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.TextRange.End" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextRange.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Windows.Documents.TextRange.Text" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Documents.ITextRange.Text</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="463f4-216">現在の選択範囲のプレーン テキスト コンテンツを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="463f4-216">Gets or sets the plain text contents of the current selection.</span></span></summary>
        <value><span data-ttu-id="463f4-217">現在の選択範囲のプレーン テキスト コンテンツを含む文字列。</span><span class="sxs-lookup"><span data-stu-id="463f4-217">A string containing the plain text contents of the current selection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="463f4-218">このプロパティを使用して、存在する可能性がある書式設定に関係なく、現在選択されているプレーン テキスト コンテンツを抽出します。</span><span class="sxs-lookup"><span data-stu-id="463f4-218">Use this property to extract the plain text content in the current selection, regardless of any formatting that may be present.</span></span>  
  
 <span data-ttu-id="463f4-219">改行文字および段落区切りは、このプロパティに対して同等として扱われます。</span><span class="sxs-lookup"><span data-stu-id="463f4-219">New line characters and paragraph breaks are treated as equivalent with respect to this property.</span></span>  <span data-ttu-id="463f4-220">現在選択されているコンテンツ区切りの任意の型は、このプロパティが読み取られるときに新しい行に変換されます。</span><span class="sxs-lookup"><span data-stu-id="463f4-220">Any types of content breaks present in the current selection are converted to new lines when this property is read.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="463f4-221">次の例では、使用、<xref:System.Windows.Documents.TextRange.Text%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="463f4-221">The following example demonstrates the use of the <xref:System.Windows.Documents.TextRange.Text%2A> property.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextRange_Text](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textrange_text)]
 [!code-vb[TextPointer_Snippets#_TextRange_Text](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textrange_text)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="463f4-222">このプロパティを <see langword="null" /> に設定しようとすると発生します。</span><span class="sxs-lookup"><span data-stu-id="463f4-222">Occurs when an attempt is made to set this property to <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>