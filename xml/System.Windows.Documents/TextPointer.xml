<Type Name="TextPointer" FullName="System.Windows.Documents.TextPointer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="80ffc4468fcd8385587be234b88e4272ca043528" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37577930" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TextPointer : System.Windows.Documents.ContentPosition" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TextPointer extends System.Windows.Documents.ContentPosition" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Documents.TextPointer" />
  <TypeSignature Language="VB.NET" Value="Public Class TextPointer&#xA;Inherits ContentPosition" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextPointer : System::Windows::Documents::ContentPosition" />
  <TypeSignature Language="F#" Value="type TextPointer = class&#xA;    inherit ContentPosition" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Documents.ContentPosition</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="fedf8-101">Represents a position within a <see cref="T:System.Windows.Documents.FlowDocument" /> or <see cref="T:System.Windows.Controls.TextBlock" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="fedf8-101">Represents a position within a <see cref="T:System.Windows.Documents.FlowDocument" /> or <see cref="T:System.Windows.Controls.TextBlock" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fedf8-102"><xref:System.Windows.Documents.TextPointer>クラスは、次の用語を紹介します。</span><span class="sxs-lookup"><span data-stu-id="fedf8-102">The <xref:System.Windows.Documents.TextPointer> class introduces the following terminology:</span></span>  
  
-   <span data-ttu-id="fedf8-103">配置の本質的に、<xref:System.Windows.Documents.TextPointer>を常にポイントを*位置*コンテンツでします。</span><span class="sxs-lookup"><span data-stu-id="fedf8-103">Position - Inherently, a <xref:System.Windows.Documents.TextPointer> always points to a *position* in content.</span></span>  <span data-ttu-id="fedf8-104">このような位置のいずれかの分類、コンテンツ内の文字間やフロー コンテンツ要素タグは、コンテンツの構造を定義します。</span><span class="sxs-lookup"><span data-stu-id="fedf8-104">Such positions either fall between characters in the content, or between flow content element tags that define structure for the content.</span></span>  
  
-   <span data-ttu-id="fedf8-105">現在位置のため、<xref:System.Windows.Documents.TextPointer>常に示された位置、ためとで実行できる操作の多くを<xref:System.Windows.Documents.TextPointer>は現在が指す位置を基準と、<xref:System.Windows.Documents.TextPointer>を参照する方、指定された位置、<xref:System.Windows.Documents.TextPointer>として、*現在位置*します。</span><span class="sxs-lookup"><span data-stu-id="fedf8-105">Current Position - Because a <xref:System.Windows.Documents.TextPointer> always indicates a position, and because many of the operations that can be performed through a <xref:System.Windows.Documents.TextPointer> are relative to the position currently pointed to by the <xref:System.Windows.Documents.TextPointer>, it makes sense to simply refer to the position indicated by a <xref:System.Windows.Documents.TextPointer> as the *current position*.</span></span>  
  
-   <span data-ttu-id="fedf8-106">挿入位置の*挿入位置*は関連付けられているコンテンツの任意の意味ルールを損なうことがなく新しいコンテンツを追加することがあります位置です。</span><span class="sxs-lookup"><span data-stu-id="fedf8-106">Insertion Position - An *insertion position* is a position where new content may be added without breaking any semantic rules for the associated content.</span></span>  <span data-ttu-id="fedf8-107">実際には、挿入位置は、キャレットを配置する場所のコンテンツで任意の場所です。</span><span class="sxs-lookup"><span data-stu-id="fedf8-107">In practice, an insertion position is anywhere in content where a caret may be positioned.</span></span>  <span data-ttu-id="fedf8-108">有効な例<xref:System.Windows.Documents.TextPointer>挿入位置ではない位置は 2 つの隣接する間位置<xref:System.Windows.Documents.Paragraph>タグ (つまり、前の段落の終了タグと、次の段落の開始タグの間)。</span><span class="sxs-lookup"><span data-stu-id="fedf8-108">An example of a valid <xref:System.Windows.Documents.TextPointer> position that is not an insertion position is the position between two adjacent <xref:System.Windows.Documents.Paragraph> tags (that is, between the closing tag of the preceding paragraph and the opening tag of the next paragraph).</span></span>  
  
-   <span data-ttu-id="fedf8-109">目的で、シンボル<xref:System.Windows.Documents.TextPointer>シンボルに関連する操作では、次のいずれかと見なされます、*シンボル*:</span><span class="sxs-lookup"><span data-stu-id="fedf8-109">Symbol - For the purposes of <xref:System.Windows.Documents.TextPointer> operations that involve symbols, any of the following is considered to be a *symbol*:</span></span>  
  
    -   <span data-ttu-id="fedf8-110">開始タグまたは終了タグを<xref:System.Windows.Documents.TextElement>要素。</span><span class="sxs-lookup"><span data-stu-id="fedf8-110">An opening or closing tag for a <xref:System.Windows.Documents.TextElement> element.</span></span>  
  
    -   <span data-ttu-id="fedf8-111">A<xref:System.Windows.UIElement>要素内に含まれる、<xref:System.Windows.Documents.InlineUIContainer>または<xref:System.Windows.Documents.BlockUIContainer>します。</span><span class="sxs-lookup"><span data-stu-id="fedf8-111">A <xref:System.Windows.UIElement> element contained within an <xref:System.Windows.Documents.InlineUIContainer> or <xref:System.Windows.Documents.BlockUIContainer>.</span></span>  <span data-ttu-id="fedf8-112">このようなメモを<xref:System.Windows.UIElement>常に正確に 1 つの記号は任意の他のコンテンツまたはに含まれる要素としてカウントされますが、<xref:System.Windows.UIElement>シンボルとしてはカウントされません。</span><span class="sxs-lookup"><span data-stu-id="fedf8-112">Note that such a <xref:System.Windows.UIElement> is always counted as exactly one symbol; any additional content or elements contained by the <xref:System.Windows.UIElement> are not counted as symbols.</span></span>  
  
    -   <span data-ttu-id="fedf8-113">各 16 ビット[!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)]テキスト内で文字<xref:System.Windows.Documents.Run>要素。</span><span class="sxs-lookup"><span data-stu-id="fedf8-113">Each 16-bit [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] character inside of a text <xref:System.Windows.Documents.Run> element.</span></span>  
  
-   <span data-ttu-id="fedf8-114">テキスト コンテナー -*テキスト コンテナー*がフロー コンテンツを手動での最終的な境界を形成する要素で指定された位置、<xref:System.Windows.Documents.TextPointer>テキスト コンテナー内で常に分類されます。</span><span class="sxs-lookup"><span data-stu-id="fedf8-114">Text Container - A *text container* is the element that forms the ultimate border for the flow content at hand; the position indicated by a <xref:System.Windows.Documents.TextPointer> always falls within a text container.</span></span>  <span data-ttu-id="fedf8-115">現時点では、テキスト コンテナーがある必要がありますか、<xref:System.Windows.Documents.FlowDocument>または<xref:System.Windows.Controls.TextBlock>します。</span><span class="sxs-lookup"><span data-stu-id="fedf8-115">Currently, a text container must be either a <xref:System.Windows.Documents.FlowDocument> or a <xref:System.Windows.Controls.TextBlock>.</span></span>  <span data-ttu-id="fedf8-116">一般的には、操作の間で<xref:System.Windows.Documents.TextPointer>別のテキスト コンテナー内のインスタンスはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="fedf8-116">Generally speaking, operations between <xref:System.Windows.Documents.TextPointer> instances in different text containers are not supported.</span></span>  
  
-   <span data-ttu-id="fedf8-117">ドキュメントのテキスト コンテナー内のコンテンツと呼びます、*ドキュメント*、<xref:System.Windows.Documents.TextPointer.IsInSameDocument%2A>メソッドと<xref:System.Windows.Documents.TextPointer.DocumentStart%2A>と<xref:System.Windows.Documents.TextPointer.DocumentEnd%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="fedf8-117">Document - The content in a text container is referred to as a *document*, as in the <xref:System.Windows.Documents.TextPointer.IsInSameDocument%2A> method and the <xref:System.Windows.Documents.TextPointer.DocumentStart%2A> and <xref:System.Windows.Documents.TextPointer.DocumentEnd%2A> properties.</span></span>  
  
 <span data-ttu-id="fedf8-118"><xref:System.Windows.Documents.TextPointer>トラバーサルとで表されるコンテンツの操作を容易にするためのものがクラス[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]フロー コンテンツ要素は、このような要素がから派生する一般に、<xref:System.Windows.Documents.TextElement>します。</span><span class="sxs-lookup"><span data-stu-id="fedf8-118">The <xref:System.Windows.Documents.TextPointer> class is intended to facilitate traversal and manipulation of content that is represented by [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] flow content elements; in general, such elements derive from <xref:System.Windows.Documents.TextElement>.</span></span>  <span data-ttu-id="fedf8-119">一部の操作を<xref:System.Windows.Documents.TextPointer>を容易に、次が含まれます。</span><span class="sxs-lookup"><span data-stu-id="fedf8-119">Some of the operations that <xref:System.Windows.Documents.TextPointer> facilitates include the following:</span></span>  
  
-   <span data-ttu-id="fedf8-120">2 番目の指定した位置の現在の位置の序数に基づく比較を実行します。</span><span class="sxs-lookup"><span data-stu-id="fedf8-120">Perform an ordinal comparison of the current position with a second specified position.</span></span>  <span data-ttu-id="fedf8-121">参照してください、<xref:System.Windows.Documents.TextPointer.CompareTo%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="fedf8-121">See the <xref:System.Windows.Documents.TextPointer.CompareTo%2A> method.</span></span>  
  
-   <span data-ttu-id="fedf8-122">指定した方向で現在の位置に隣接するコンテンツの種類を決定します。</span><span class="sxs-lookup"><span data-stu-id="fedf8-122">Determine the type of content adjacent to the current position in a specified direction.</span></span>  <span data-ttu-id="fedf8-123">参照してください、<xref:System.Windows.Documents.TextPointer.GetPointerContext%2A>メソッドと<xref:System.Windows.Documents.TextPointerContext>列挙体。</span><span class="sxs-lookup"><span data-stu-id="fedf8-123">See the <xref:System.Windows.Documents.TextPointer.GetPointerContext%2A> method and <xref:System.Windows.Documents.TextPointerContext> enumeration.</span></span>  
  
-   <span data-ttu-id="fedf8-124">取得、<xref:System.Windows.Documents.TextElement>スコープまたは現在の位置に隣接しています。</span><span class="sxs-lookup"><span data-stu-id="fedf8-124">Get the <xref:System.Windows.Documents.TextElement> that scopes or is adjacent to the current position.</span></span>  <span data-ttu-id="fedf8-125">参照してください<xref:System.Windows.Documents.Paragraph>と<xref:System.Windows.Documents.TextPointer.GetAdjacentElement%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="fedf8-125">See <xref:System.Windows.Documents.Paragraph> and the <xref:System.Windows.Documents.TextPointer.GetAdjacentElement%2A> method.</span></span>  
  
-   <span data-ttu-id="fedf8-126">現在のドキュメントのスコープとなるテキスト コンテナーを取得します。</span><span class="sxs-lookup"><span data-stu-id="fedf8-126">Get the text container that scopes the current document.</span></span>  <span data-ttu-id="fedf8-127"><xref:System.Windows.Documents.TextPointer.Parent%2A> プロパティを参照してください。</span><span class="sxs-lookup"><span data-stu-id="fedf8-127">See the <xref:System.Windows.Documents.TextPointer.Parent%2A> property.</span></span>  
  
-   <span data-ttu-id="fedf8-128">指定された数の文字の前または現在の位置を取得します。</span><span class="sxs-lookup"><span data-stu-id="fedf8-128">Get a specified number of characters preceding or following the current position.</span></span>  <span data-ttu-id="fedf8-129">参照してください、<xref:System.Windows.Documents.TextPointer.GetTextInRun%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="fedf8-129">See the <xref:System.Windows.Documents.TextPointer.GetTextInRun%2A> method.</span></span>  
  
-   <span data-ttu-id="fedf8-130">現在の位置にある文字の文字列を挿入します。</span><span class="sxs-lookup"><span data-stu-id="fedf8-130">Insert a string of characters at the current position.</span></span>  <span data-ttu-id="fedf8-131">参照してください、<xref:System.Windows.Documents.TextPointer.InsertTextInRun%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="fedf8-131">See the <xref:System.Windows.Documents.TextPointer.InsertTextInRun%2A> method.</span></span>  
  
-   <span data-ttu-id="fedf8-132">コンテンツの行の境界を検索します。</span><span class="sxs-lookup"><span data-stu-id="fedf8-132">Find line boundaries in content.</span></span>  <span data-ttu-id="fedf8-133">参照してください、<xref:System.Windows.Documents.TextPointer.GetLineStartPosition%2A>メソッドと<xref:System.Windows.Documents.TextPointer.IsAtLineStartPosition%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="fedf8-133">See the <xref:System.Windows.Documents.TextPointer.GetLineStartPosition%2A> method and <xref:System.Windows.Documents.TextPointer.IsAtLineStartPosition%2A> property.</span></span>  
  
-   <span data-ttu-id="fedf8-134">間で変換<xref:System.Windows.Documents.TextPointer>のコンテンツの位置とシンボルのオフセットします。</span><span class="sxs-lookup"><span data-stu-id="fedf8-134">Translate between <xref:System.Windows.Documents.TextPointer> positions and symbol offsets into content.</span></span>  <span data-ttu-id="fedf8-135">参照してください、<xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A>と<xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="fedf8-135">See the <xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A> and <xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A> methods.</span></span>  
  
-   <span data-ttu-id="fedf8-136">間で変換することによってビジュアル ヒット テストの実行、<xref:System.Windows.Documents.TextPointer>位置と<xref:System.Windows.Point>相対座標を表します。</span><span class="sxs-lookup"><span data-stu-id="fedf8-136">Perform visual hit testing by translating between a <xref:System.Windows.Documents.TextPointer> position and a <xref:System.Windows.Point> representing relative coordinates.</span></span>  
  
-   <span data-ttu-id="fedf8-137">近くの挿入位置を検索または現在の位置が挿入位置であるかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="fedf8-137">Find a nearby insertion position, or check whether the current position is an insertion position.</span></span>  <span data-ttu-id="fedf8-138">参照してください、<xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A>と<xref:System.Windows.Documents.TextPointer.GetNextInsertionPosition%2A>メソッドと<xref:System.Windows.Documents.TextPointer.IsAtInsertionPosition%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="fedf8-138">See the <xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A> and <xref:System.Windows.Documents.TextPointer.GetNextInsertionPosition%2A> methods and the <xref:System.Windows.Documents.TextPointer.IsAtInsertionPosition%2A> property.</span></span>  
  
 <span data-ttu-id="fedf8-139">位置と<xref:System.Windows.Documents.TextPointer.LogicalDirection%2A>によって示される、<xref:System.Windows.Documents.TextPointer>オブジェクトは変更できません。</span><span class="sxs-lookup"><span data-stu-id="fedf8-139">The position and <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> indicated by a <xref:System.Windows.Documents.TextPointer> object are immutable.</span></span>  <span data-ttu-id="fedf8-140">コンテンツの編集または変更、によって示される位置の場合、<xref:System.Windows.Documents.TextPointer>基準周囲のテキストと変わらない内の新しい相対位置を反映するようのコンテンツの先頭からその位置のオフセットの同様の調整ではなくコンテンツ。</span><span class="sxs-lookup"><span data-stu-id="fedf8-140">When content is edited or modified, the position indicated by a <xref:System.Windows.Documents.TextPointer> does not change relative to the surrounding text; rather the offset of that position from the beginning of content is adjusted correspondingly to reflect the new relative position in content.</span></span>  <span data-ttu-id="fedf8-141">たとえば、<xref:System.Windows.Documents.TextPointer>コンテンツを挿入または削除する前に、または段落の後である場合でも、その段落の先頭を指すには引き続き、特定の段落の先頭に位置を示します。</span><span class="sxs-lookup"><span data-stu-id="fedf8-141">For example, a <xref:System.Windows.Documents.TextPointer> that indicates a position at the beginning of a given paragraph continues to point to the beginning of that paragraph even when content is inserted or deleted before or after the paragraph.</span></span>  
  
 <span data-ttu-id="fedf8-142"><xref:System.Windows.Documents.TextPointer>クラスはパブリック コンス トラクターを提供しません。</span><span class="sxs-lookup"><span data-stu-id="fedf8-142">The <xref:System.Windows.Documents.TextPointer> class does not provide any public constructors.</span></span>  <span data-ttu-id="fedf8-143">インスタンス<xref:System.Windows.Documents.TextPointer>が他のオブジェクトのプロパティまたはメソッドを使用して作成されます (他を含む<xref:System.Windows.Documents.TextPointer>オブジェクト)。</span><span class="sxs-lookup"><span data-stu-id="fedf8-143">An instance of <xref:System.Windows.Documents.TextPointer> is created by using properties or methods of other objects (including other <xref:System.Windows.Documents.TextPointer> objects).</span></span> <span data-ttu-id="fedf8-144">次の一覧は、メソッドおよびプロパティを作成して返す例をいくつかを示します、<xref:System.Windows.Documents.TextPointer>します。</span><span class="sxs-lookup"><span data-stu-id="fedf8-144">The following list provides a few examples of methods and properties that create and return a <xref:System.Windows.Documents.TextPointer>.</span></span>  <span data-ttu-id="fedf8-145">この一覧は完全ではありません。</span><span class="sxs-lookup"><span data-stu-id="fedf8-145">This list is not exhaustive:</span></span>  
  
-   <span data-ttu-id="fedf8-146"><xref:System.Windows.Documents.TextRange>:<xref:System.Windows.Documents.TextRange.Start%2A>と<xref:System.Windows.Documents.TextRange.End%2A>します。</span><span class="sxs-lookup"><span data-stu-id="fedf8-146">From a <xref:System.Windows.Documents.TextRange>: <xref:System.Windows.Documents.TextRange.Start%2A> and <xref:System.Windows.Documents.TextRange.End%2A>.</span></span>  
  
-   <span data-ttu-id="fedf8-147"><xref:System.Windows.Documents.TextElement>: <xref:System.Windows.Documents.TextElement.ContentStart%2A>、 <xref:System.Windows.Documents.TextElement.ContentEnd%2A>、 <xref:System.Windows.Documents.TextElement.ElementStart%2A>、および<xref:System.Windows.Documents.TextElement.ElementEnd%2A>します。</span><span class="sxs-lookup"><span data-stu-id="fedf8-147">From a <xref:System.Windows.Documents.TextElement>:  <xref:System.Windows.Documents.TextElement.ContentStart%2A>, <xref:System.Windows.Documents.TextElement.ContentEnd%2A>, <xref:System.Windows.Documents.TextElement.ElementStart%2A>, and <xref:System.Windows.Documents.TextElement.ElementEnd%2A>.</span></span>  
  
-   <span data-ttu-id="fedf8-148"><xref:System.Windows.Controls.TextBlock> (テキスト コンテナー): <xref:System.Windows.Controls.TextBlock.ContentStart%2A>、 <xref:System.Windows.Controls.TextBlock.ContentEnd%2A>、および<xref:System.Windows.Controls.TextBlock.GetPositionFromPoint%2A>します。</span><span class="sxs-lookup"><span data-stu-id="fedf8-148">From a <xref:System.Windows.Controls.TextBlock> (text container): <xref:System.Windows.Controls.TextBlock.ContentStart%2A>, <xref:System.Windows.Controls.TextBlock.ContentEnd%2A>, and <xref:System.Windows.Controls.TextBlock.GetPositionFromPoint%2A>.</span></span>  
  
-   <span data-ttu-id="fedf8-149"><xref:System.Windows.Documents.FlowDocument> (テキスト コンテナー):<xref:System.Windows.Documents.FlowDocument.ContentStart%2A>と <xref:System.Windows.Documents.FlowDocument.ContentEnd%2A></span><span class="sxs-lookup"><span data-stu-id="fedf8-149">From a <xref:System.Windows.Documents.FlowDocument> (text container): <xref:System.Windows.Documents.FlowDocument.ContentStart%2A>, and <xref:System.Windows.Documents.FlowDocument.ContentEnd%2A></span></span>  
  
-   <span data-ttu-id="fedf8-150">既存の<xref:System.Windows.Documents.TextPointer>: <xref:System.Windows.Documents.TextPointer.DocumentStart%2A>、 <xref:System.Windows.Documents.TextPointer.DocumentEnd%2A>、 <xref:System.Windows.Documents.TextPointer.GetNextInsertionPosition%2A>、および<xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A>します。</span><span class="sxs-lookup"><span data-stu-id="fedf8-150">From an existing <xref:System.Windows.Documents.TextPointer>: <xref:System.Windows.Documents.TextPointer.DocumentStart%2A>, <xref:System.Windows.Documents.TextPointer.DocumentEnd%2A>, <xref:System.Windows.Documents.TextPointer.GetNextInsertionPosition%2A>, and <xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fedf8-151">次の例では、使用する方法、 <xref:System.Windows.Documents.TextPointer> 1 つ目の内部でだけの位置を検索する<xref:System.Windows.Documents.Run>指定したテキスト コンテナー内の要素。</span><span class="sxs-lookup"><span data-stu-id="fedf8-151">The following example demonstrates how to use a <xref:System.Windows.Documents.TextPointer> to find a position just inside of the first <xref:System.Windows.Documents.Run> element in a specified text container.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_TextPointer1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_textpointer1)]
 [!code-vb[TextPointer_Snippets#_TextPointer_TextPointer1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_textpointer1)]  
  
 <span data-ttu-id="fedf8-152">次の例を使用して単純検索アルゴリズムを実装する<xref:System.Windows.Documents.TextPointer>機能します。</span><span class="sxs-lookup"><span data-stu-id="fedf8-152">The following example implements a simplistic find algorithm using <xref:System.Windows.Documents.TextPointer> facilities.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_TextPointer2](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_textpointer2)]
 [!code-vb[TextPointer_Snippets#_TextPointer_TextPointer2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_textpointer2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Documents.TextRange" />
    <altmember cref="T:System.Windows.Documents.TextPointerContext" />
    <altmember cref="T:System.Windows.Documents.TextElement" />
  </Docs>
  <Members>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (System.Windows.Documents.TextPointer position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 CompareTo(class System.Windows.Documents.TextPointer position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.CompareTo(System.Windows.Documents.TextPointer)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (position As TextPointer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int CompareTo(System::Windows::Documents::TextPointer ^ position);" />
      <MemberSignature Language="F#" Value="member this.CompareTo : System.Windows.Documents.TextPointer -&gt; int" Usage="textPointer.CompareTo position" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Windows.Documents.TextPointer" />
      </Parameters>
      <Docs>
        <param name="position">
          <span data-ttu-id="fedf8-153">A <see cref="T:System.Windows.Documents.TextPointer" /> that specifies a position to compare to the current position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-153">A <see cref="T:System.Windows.Documents.TextPointer" /> that specifies a position to compare to the current position.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fedf8-154">Performs an ordinal comparison between the positions specified by the current <see cref="T:System.Windows.Documents.TextPointer" /> and a second specified <see cref="T:System.Windows.Documents.TextPointer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-154">Performs an ordinal comparison between the positions specified by the current <see cref="T:System.Windows.Documents.TextPointer" /> and a second specified <see cref="T:System.Windows.Documents.TextPointer" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fedf8-155">–1 if the current <see cref="T:System.Windows.Documents.TextPointer" /> precedes <paramref name="position" />; 0 if the locations are the same; +1 if the current <see cref="T:System.Windows.Documents.TextPointer" /> follows <paramref name="position" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-155">–1 if the current <see cref="T:System.Windows.Documents.TextPointer" /> precedes <paramref name="position" />; 0 if the locations are the same; +1 if the current <see cref="T:System.Windows.Documents.TextPointer" /> follows <paramref name="position" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fedf8-156">値-1 は、現在の位置が指定されていることを示します<xref:System.Windows.Documents.TextPointer>で指定した位置の前に`position`します。</span><span class="sxs-lookup"><span data-stu-id="fedf8-156">A value of –1 indicates that the position specified by the current <xref:System.Windows.Documents.TextPointer> precedes the position specified by `position`.</span></span>  <span data-ttu-id="fedf8-157">値 0 は、指定された位置が等しいことを示します。</span><span class="sxs-lookup"><span data-stu-id="fedf8-157">A value of 0 indicates that the indicated positions are equal.</span></span>  <span data-ttu-id="fedf8-158">+1 の正の値は、現在の位置が指定されていることを示します<xref:System.Windows.Documents.TextPointer>で指定した位置に依存して`position`します。</span><span class="sxs-lookup"><span data-stu-id="fedf8-158">A value of positive +1 indicates that the position specified by the current <xref:System.Windows.Documents.TextPointer> follows the position specified by `position`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fedf8-159">次の例では、このメソッドの使用を示します。</span><span class="sxs-lookup"><span data-stu-id="fedf8-159">The following example demonstrates a use for this method.</span></span>  <span data-ttu-id="fedf8-160">例では、<xref:System.Windows.Documents.TextPointer.CompareTo%2A>メソッドを組み合わせて使用、<xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A>メソッドを指定するかどうかをテストする<xref:System.Windows.Documents.TextElement>が空です。</span><span class="sxs-lookup"><span data-stu-id="fedf8-160">In the example, the <xref:System.Windows.Documents.TextPointer.CompareTo%2A> method is used in conjunction with the <xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A> method to test whether a specified <xref:System.Windows.Documents.TextElement> is empty.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetInsertionPosition](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_getinsertionposition)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetInsertionPosition](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_getinsertionposition)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="fedf8-161">
            <paramref name="position" /> specifies a position outside of the text container associated with the current position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-161">
              <paramref name="position" /> specifies a position outside of the text container associated with the current position.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Documents.TextPointer.IsInSameDocument(System.Windows.Documents.TextPointer)" />
      </Docs>
    </Member>
    <Member MemberName="DeleteTextInRun">
      <MemberSignature Language="C#" Value="public int DeleteTextInRun (int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 DeleteTextInRun(int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.DeleteTextInRun(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function DeleteTextInRun (count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int DeleteTextInRun(int count);" />
      <MemberSignature Language="F#" Value="member this.DeleteTextInRun : int -&gt; int" Usage="textPointer.DeleteTextInRun count" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="count">
          <span data-ttu-id="fedf8-162">The number of characters to delete, starting at the current position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-162">The number of characters to delete, starting at the current position.</span>
          </span>
          <span data-ttu-id="fedf8-163">Specify a positive value to delete characters that follow the current position; specify a negative value to delete characters that precede the current position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-163">Specify a positive value to delete characters that follow the current position; specify a negative value to delete characters that precede the current position.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fedf8-164">Deletes the specified number of characters from the position indicated by the current <see cref="T:System.Windows.Documents.TextPointer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-164">Deletes the specified number of characters from the position indicated by the current <see cref="T:System.Windows.Documents.TextPointer" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fedf8-165">The number of characters actually deleted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-165">The number of characters actually deleted.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fedf8-166">現在の位置に続く文字を削除するのには正の値を指定 (と<xref:System.Windows.Documents.LogicalDirection.Forward?displayProperty=nameWithType>); 現在の位置より前の文字を削除するのには負の値を指定 (としてで<xref:System.Windows.Documents.LogicalDirection.Backward?displayProperty=nameWithType>)。</span><span class="sxs-lookup"><span data-stu-id="fedf8-166">Specify a positive value to delete characters that follow the current position (as in <xref:System.Windows.Documents.LogicalDirection.Forward?displayProperty=nameWithType>); specify a negative value to delete characters that precede the current position (as in <xref:System.Windows.Documents.LogicalDirection.Backward?displayProperty=nameWithType>).</span></span>  
  
 <span data-ttu-id="fedf8-167">実際に削除された文字数で指定された数よりも少ないあります`count`します。</span><span class="sxs-lookup"><span data-stu-id="fedf8-167">The number of characters actually deleted may be less than the number specified by `count`.</span></span>  <span data-ttu-id="fedf8-168">場合、`count`存在ため削除できませんより多くの文字を指定します。</span><span class="sxs-lookup"><span data-stu-id="fedf8-168">This happens in cases where `count` specifies more characters than exist to be deleted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="fedf8-169">The method is called at a position where text is not allowed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-169">The method is called at a position where text is not allowed.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Windows.Documents.TextPointer.GetTextInRun" />
        <altmember cref="M:System.Windows.Documents.TextPointer.InsertTextInRun(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="DocumentEnd">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer DocumentEnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.TextPointer DocumentEnd" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.DocumentEnd" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DocumentEnd As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::TextPointer ^ DocumentEnd { System::Windows::Documents::TextPointer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DocumentEnd : System.Windows.Documents.TextPointer" Usage="System.Windows.Documents.TextPointer.DocumentEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fedf8-170">Gets a <see cref="T:System.Windows.Documents.TextPointer" /> at the end of content in the text container associated with the current position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-170">Gets a <see cref="T:System.Windows.Documents.TextPointer" /> at the end of content in the text container associated with the current position.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fedf8-171">A<see cref="T:System.Windows.Documents.TextPointer" />現在の位置に関連付けられているテキスト コンテナー内のコンテンツの末尾にします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-171">A <see cref="T:System.Windows.Documents.TextPointer" /> at the end of content in the text container associated with the current position.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fedf8-172"><xref:System.Windows.Documents.TextPointer.Parent%2A>返される<xref:System.Windows.Documents.TextPointer>は常にテキスト コンテナー (<xref:System.Windows.Controls.TextBlock>または<xref:System.Windows.Documents.FlowDocument>)、なく<xref:System.Windows.Documents.TextElement>します。</span><span class="sxs-lookup"><span data-stu-id="fedf8-172">The <xref:System.Windows.Documents.TextPointer.Parent%2A> for the returned <xref:System.Windows.Documents.TextPointer> is always a text container (<xref:System.Windows.Controls.TextBlock> or <xref:System.Windows.Documents.FlowDocument>), rather than a <xref:System.Windows.Documents.TextElement>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.TextPointer.DocumentStart" />
      </Docs>
    </Member>
    <Member MemberName="DocumentStart">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer DocumentStart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.TextPointer DocumentStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.DocumentStart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DocumentStart As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::TextPointer ^ DocumentStart { System::Windows::Documents::TextPointer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DocumentStart : System.Windows.Documents.TextPointer" Usage="System.Windows.Documents.TextPointer.DocumentStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fedf8-173">Gets a <see cref="T:System.Windows.Documents.TextPointer" /> at the beginning of content in the text container associated with the current position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-173">Gets a <see cref="T:System.Windows.Documents.TextPointer" /> at the beginning of content in the text container associated with the current position.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fedf8-174">A<see cref="T:System.Windows.Documents.TextPointer" />現在の位置に関連付けられているテキスト コンテナー内のコンテンツの先頭にします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-174">A <see cref="T:System.Windows.Documents.TextPointer" /> at the beginning of content in the text container associated with the current position.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fedf8-175">他の位置への相対オフセットを使用するベースライン位置として、このプロパティによって返される位置を使用します。</span><span class="sxs-lookup"><span data-stu-id="fedf8-175">Use the position returned by this property as a baseline position from which to work with relative offsets to other positions.</span></span>  <span data-ttu-id="fedf8-176"><xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A>と<xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A>メソッド間の位置と位置を変換する方法を提供するオフセットします。</span><span class="sxs-lookup"><span data-stu-id="fedf8-176">The <xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A> and <xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A> methods provide a way to translate between positions and position offsets.</span></span>  
  
 <span data-ttu-id="fedf8-177"><xref:System.Windows.Documents.TextPointer.Parent%2A>返される<xref:System.Windows.Documents.TextPointer>は常にテキスト コンテナー (<xref:System.Windows.Controls.TextBlock>または<xref:System.Windows.Documents.FlowDocument>)、なく<xref:System.Windows.Documents.TextElement>します。</span><span class="sxs-lookup"><span data-stu-id="fedf8-177">The <xref:System.Windows.Documents.TextPointer.Parent%2A> for the returned <xref:System.Windows.Documents.TextPointer> is always a text container (<xref:System.Windows.Controls.TextBlock> or <xref:System.Windows.Documents.FlowDocument>), rather than a <xref:System.Windows.Documents.TextElement>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.TextPointer.DocumentEnd" />
      </Docs>
    </Member>
    <Member MemberName="GetAdjacentElement">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyObject GetAdjacentElement (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.DependencyObject GetAdjacentElement(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetAdjacentElement(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAdjacentElement (direction As LogicalDirection) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::DependencyObject ^ GetAdjacentElement(System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetAdjacentElement : System.Windows.Documents.LogicalDirection -&gt; System.Windows.DependencyObject" Usage="textPointer.GetAdjacentElement direction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction">
          <span data-ttu-id="fedf8-178">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to search for an adjacent element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-178">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to search for an adjacent element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fedf8-179">Returns the element, if any, that borders the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified logical direction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-179">Returns the element, if any, that borders the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified logical direction.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fedf8-180">The adjacent element in the specified <paramref name="direction" />, or <see langword="null" /> if no adjacent element exists.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-180">The adjacent element in the specified <paramref name="direction" />, or <see langword="null" /> if no adjacent element exists.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fedf8-181">返される要素は、通常、<xref:System.Windows.Documents.TextElement>します。</span><span class="sxs-lookup"><span data-stu-id="fedf8-181">The returned element is typically a <xref:System.Windows.Documents.TextElement>.</span></span>  <span data-ttu-id="fedf8-182">A<xref:System.Windows.UIElement>場合、返されることができます、<xref:System.Windows.Documents.TextPointer>内の位置を示す、<xref:System.Windows.Documents.BlockUIContainer>要素または<xref:System.Windows.Documents.InlineUIContainer>要素。</span><span class="sxs-lookup"><span data-stu-id="fedf8-182">A <xref:System.Windows.UIElement> can be returned when the <xref:System.Windows.Documents.TextPointer> indicates a position inside a <xref:System.Windows.Documents.BlockUIContainer> element or an <xref:System.Windows.Documents.InlineUIContainer> element.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.TextPointer.Parent" />
      </Docs>
    </Member>
    <Member MemberName="GetCharacterRect">
      <MemberSignature Language="C#" Value="public System.Windows.Rect GetCharacterRect (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Rect GetCharacterRect(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetCharacterRect(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCharacterRect (direction As LogicalDirection) As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Rect GetCharacterRect(System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetCharacterRect : System.Windows.Documents.LogicalDirection -&gt; System.Windows.Rect" Usage="textPointer.GetCharacterRect direction" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Documents.ITextPointer.GetCharacterRect(System.Windows.Documents.LogicalDirection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction">
          <span data-ttu-id="fedf8-183">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to find a content bounding box.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-183">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to find a content bounding box.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fedf8-184">Returns a bounding box (<see cref="T:System.Windows.Rect" />) for content that borders the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified logical direction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-184">Returns a bounding box (<see cref="T:System.Windows.Rect" />) for content that borders the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified logical direction.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fedf8-185">A bounding box for content that borders the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified direction, or <see cref="P:System.Windows.Rect.Empty" /> if current, valid layout information is unavailable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-185">A bounding box for content that borders the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified direction, or <see cref="P:System.Windows.Rect.Empty" /> if current, valid layout information is unavailable.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fedf8-186"><xref:System.Windows.Documents.TextElement> エッジでは、このメソッドの目的のコンテンツは考慮されません。</span><span class="sxs-lookup"><span data-stu-id="fedf8-186"><xref:System.Windows.Documents.TextElement> edges are not considered content for the purposes of this method.</span></span>  <span data-ttu-id="fedf8-187">場合、<xref:System.Windows.Documents.TextPointer>が前に配置されている、 <xref:System.Windows.Documents.TextElement> edge では、戻り値は、[次へ] の境界ボックス以外<xref:System.Windows.Documents.TextElement>指定した方向でコンテンツ。</span><span class="sxs-lookup"><span data-stu-id="fedf8-187">If the <xref:System.Windows.Documents.TextPointer> is positioned before a <xref:System.Windows.Documents.TextElement> edge, the return value is a bounding box for the next non-<xref:System.Windows.Documents.TextElement> content in the specified direction.</span></span>  <span data-ttu-id="fedf8-188">ゼロ幅の指定した方向にコンテンツがないかどうかは<xref:System.Windows.Rect>前にすべてのコンテンツの高さに一致する高さが返されます。</span><span class="sxs-lookup"><span data-stu-id="fedf8-188">If there is no content in the specified direction, a zero-width <xref:System.Windows.Rect> is returned with a height matching the height of any preceding content.</span></span>  
  
 <span data-ttu-id="fedf8-189">このメソッドによって実行される操作は、有効なレイアウトに依存します。</span><span class="sxs-lookup"><span data-stu-id="fedf8-189">The operation performed by this method depends on a valid layout.</span></span>  <span data-ttu-id="fedf8-190">必要に応じて、このメソッドは、操作を続行する前に有効なレイアウトを自動的に再生成しようとします。</span><span class="sxs-lookup"><span data-stu-id="fedf8-190">When necessary, this method attempts to automatically regenerate a valid layout before proceeding with the operation.</span></span>  <span data-ttu-id="fedf8-191">レイアウトの再生成すると、比較的高価な操作を指定できます。</span><span class="sxs-lookup"><span data-stu-id="fedf8-191">Regenerating a layout can be a relatively expensive operation.</span></span>  <span data-ttu-id="fedf8-192">使用して、<xref:System.Windows.Documents.TextPointer.HasValidLayout%2A>レイアウトを再生成する操作を実行する前に有効なレイアウトを確認するプロパティ。</span><span class="sxs-lookup"><span data-stu-id="fedf8-192">Use the <xref:System.Windows.Documents.TextPointer.HasValidLayout%2A> property to check for a valid layout before performing operations that may regenerate the layout.</span></span>  <span data-ttu-id="fedf8-193">詳細については、「[Layout](~/docs/framework/wpf/advanced/layout.md)」 (レイアウト) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="fedf8-193">For more information, see [Layout](~/docs/framework/wpf/advanced/layout.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.TextPointer.HasValidLayout" />
      </Docs>
    </Member>
    <Member MemberName="GetInsertionPosition">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer GetInsertionPosition (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer GetInsertionPosition(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetInsertionPosition(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInsertionPosition (direction As LogicalDirection) As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ GetInsertionPosition(System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetInsertionPosition : System.Windows.Documents.LogicalDirection -&gt; System.Windows.Documents.TextPointer" Usage="textPointer.GetInsertionPosition direction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction">
          <span data-ttu-id="fedf8-194">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to search for the closest insertion position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-194">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to search for the closest insertion position.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fedf8-195">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the closest insertion position in the specified logical direction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-195">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the closest insertion position in the specified logical direction.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fedf8-196">A <see cref="T:System.Windows.Documents.TextPointer" /> to the closest insertion position in the specified direction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-196">A <see cref="T:System.Windows.Documents.TextPointer" /> to the closest insertion position in the specified direction.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fedf8-197">挿入位置とは、位置、関連するコンテンツの任意の意味ルールを損なうことがなく新しいコンテンツを追加することがあります。</span><span class="sxs-lookup"><span data-stu-id="fedf8-197">An insertion position is a position where new content may be added without breaking any semantic rules for the associated content.</span></span>  <span data-ttu-id="fedf8-198">実際には、挿入位置は、キャレットを配置する場所のコンテンツで任意の場所です。</span><span class="sxs-lookup"><span data-stu-id="fedf8-198">In practice, an insertion position is anywhere in content where a caret may be positioned.</span></span>  <span data-ttu-id="fedf8-199">有効な例<xref:System.Windows.Documents.TextPointer>挿入位置ではない位置は 2 つの隣接する間位置<xref:System.Windows.Documents.Paragraph>タグ (つまり、前の段落の終了タグと、次の段落の開始タグの間)。</span><span class="sxs-lookup"><span data-stu-id="fedf8-199">An example of a valid <xref:System.Windows.Documents.TextPointer> position that is not an insertion position is the position between two adjacent <xref:System.Windows.Documents.Paragraph> tags (that is, between the closing tag of the preceding paragraph and the opening tag of the next paragraph).</span></span>  
  
 <span data-ttu-id="fedf8-200">場合、<xref:System.Windows.Documents.TextPointer>空でない書式設定のシーケンスのすぐ後ろに指定した方向には、その位置の有効な挿入位置、終了タグに既にポイント、<xref:System.Windows.Documents.TextPointer>これによって返されるメソッドは、挿入ポイントに調整されます書式設定のシーケンスの終了直後に配置します。</span><span class="sxs-lookup"><span data-stu-id="fedf8-200">If the <xref:System.Windows.Documents.TextPointer> already points to a valid insertion position, but the closing tag for a non-empty formatting sequence directly follows that position in the given direction, then the <xref:System.Windows.Documents.TextPointer> returned by this method is adjusted to point to the insertion position just after the close of the formatting sequence.</span></span> <span data-ttu-id="fedf8-201">たとえば、マークアップ シーケンス`<Bold>a</Bold>b`します。</span><span class="sxs-lookup"><span data-stu-id="fedf8-201">For example, consider the markup sequence `<Bold>a</Bold>b`.</span></span> <span data-ttu-id="fedf8-202">文字の間の 2 つのカーソル位置があることに注意してください。`a`と`b`: 終了の前にある 1 つ`Bold`タグ、とに 1 つ`Bold`タグ。</span><span class="sxs-lookup"><span data-stu-id="fedf8-202">Note that there are two insertion positions between the letters `a` and `b` — one that precedes the closing `Bold` tag, and one directly following the closing `Bold` tag.</span></span> <span data-ttu-id="fedf8-203">場合<xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A>で呼び出される、<xref:System.Windows.Documents.TextPointer>文字の直後後の位置に`a`とする前に閉じるときの`Bold`タグを使用して、`direction`の<xref:System.Windows.Documents.LogicalDirection.Forward>、返された<xref:System.Windows.Documents.TextPointer> をポイントするように調整、文字の直前の位置`b`、終了後`Bold`タグ。</span><span class="sxs-lookup"><span data-stu-id="fedf8-203">If <xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A> is called on a <xref:System.Windows.Documents.TextPointer> to the position directly after the letter `a` and before of the closing `Bold` tag, and with a `direction` of <xref:System.Windows.Documents.LogicalDirection.Forward>, the returned <xref:System.Windows.Documents.TextPointer> is adjusted to point to the position just before the letter `b`, after the closing `Bold` tag.</span></span> <span data-ttu-id="fedf8-204">反対側の論理方向での作業には、書式設定タグを開くことのような調整が可能です。</span><span class="sxs-lookup"><span data-stu-id="fedf8-204">A similar adjustment is made for opening formatting tags when working in the opposite logical direction.</span></span> <span data-ttu-id="fedf8-205">このメソッドは、同様のケースでの挿入位置間のあいまいさの手段を提供するものです。</span><span class="sxs-lookup"><span data-stu-id="fedf8-205">This method is intended to provide a means of disambiguation between insertion positions in similar cases.</span></span>  
  
 <span data-ttu-id="fedf8-206">このメソッドは、構造タグのシーケンスが含まれている場合に、挿入ポイントを選択することもできます。</span><span class="sxs-lookup"><span data-stu-id="fedf8-206">This method can also be used to be selective about insertion points when a sequence of structural tags is involved.</span></span> <span data-ttu-id="fedf8-207">たとえばを閉じると、段落タグの開始タグの間の位置にあるときに方向パラメーターができます、次の段落の先頭に最も近い挿入ポイントを選択する (を指定して<xref:System.Windows.Documents.LogicalDirection.Forward?displayProperty=nameWithType>) または前の段落 (の末尾指定して<xref:System.Windows.Documents.LogicalDirection.Backward?displayProperty=nameWithType>)。</span><span class="sxs-lookup"><span data-stu-id="fedf8-207">For example, when at a position between closing and opening paragraph tags, the direction parameter can be used to select the closest insertion point at the beginning of the following paragraph (by specifying <xref:System.Windows.Documents.LogicalDirection.Forward?displayProperty=nameWithType>) or at the end of the preceding paragraph (by specifying <xref:System.Windows.Documents.LogicalDirection.Backward?displayProperty=nameWithType>).</span></span>  
  
 <span data-ttu-id="fedf8-208">ポインターはカーソル位置にあるが既にあり、指定した隣接する書式設定タグがない場合`direction`、返された<xref:System.Windows.Documents.TextPointer>、呼び出し元と同じ位置を指す<xref:System.Windows.Documents.TextPointer>します。</span><span class="sxs-lookup"><span data-stu-id="fedf8-208">If the pointer is already at insertion position, and there are no adjacent formatting tags in the specified `direction`, the returned <xref:System.Windows.Documents.TextPointer> points to the same position as the calling <xref:System.Windows.Documents.TextPointer>.</span></span>  
  
 <span data-ttu-id="fedf8-209">によって示される位置の基準とした有効な挿入位置が存在しないことができます、<xref:System.Windows.Documents.TextPointer>します。</span><span class="sxs-lookup"><span data-stu-id="fedf8-209">It is possible that no valid insertion position exists relative to the position pointed to by a <xref:System.Windows.Documents.TextPointer>.</span></span>  <span data-ttu-id="fedf8-210">これは、参照コンテンツが、空のテーブルまたは一覧のように構造的に完了していない場合に発生することができます。</span><span class="sxs-lookup"><span data-stu-id="fedf8-210">This can happen if the referenced content is structurally incomplete, as in an empty table or list.</span></span>  <span data-ttu-id="fedf8-211">このような場合、このメソッドがだけを返します、<xref:System.Windows.Documents.TextPointer>と同じ位置に、<xref:System.Windows.Documents.TextPointer>からこのメソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="fedf8-211">In such cases, this method simply returns a <xref:System.Windows.Documents.TextPointer> to the same position as the <xref:System.Windows.Documents.TextPointer> from which this method was called.</span></span>  <span data-ttu-id="fedf8-212">このメソッドは常に有効な返します<xref:System.Windows.Documents.TextPointer>します。</span><span class="sxs-lookup"><span data-stu-id="fedf8-212">This method always returns a valid <xref:System.Windows.Documents.TextPointer>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fedf8-213">この例は、使用する方法を示します、<xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A>指定したかどうかを確認する方法を<xref:System.Windows.Documents.TextElement>が印刷可能なコンテンツの空です。</span><span class="sxs-lookup"><span data-stu-id="fedf8-213">This example shows how to use the <xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A> method to check whether a specified <xref:System.Windows.Documents.TextElement> is empty of printable content.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetInsertionPosition](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_getinsertionposition)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetInsertionPosition](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_getinsertionposition)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.TextPointer.GetNextInsertionPosition(System.Windows.Documents.LogicalDirection)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetLineStartPosition">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fedf8-214">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the beginning of a line that is specified relative to the current <see cref="T:System.Windows.Documents.TextPointer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-214">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the beginning of a line that is specified relative to the current <see cref="T:System.Windows.Documents.TextPointer" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetLineStartPosition">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer GetLineStartPosition (int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer GetLineStartPosition(int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetLineStartPosition(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLineStartPosition (count As Integer) As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ GetLineStartPosition(int count);" />
      <MemberSignature Language="F#" Value="member this.GetLineStartPosition : int -&gt; System.Windows.Documents.TextPointer" Usage="textPointer.GetLineStartPosition count" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="count">
          <span data-ttu-id="fedf8-215">The number of start-of-line markers to skip when determining the line for which to return the starting position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-215">The number of start-of-line markers to skip when determining the line for which to return the starting position.</span>
          </span>
          <span data-ttu-id="fedf8-216">Negative values specify preceding lines, 0 specifies the current line, and positive values specify following lines.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-216">Negative values specify preceding lines, 0 specifies the current line, and positive values specify following lines.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fedf8-217">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the beginning of a line that is specified relative to the current <see cref="T:System.Windows.Documents.TextPointer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-217">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the beginning of a line that is specified relative to the current <see cref="T:System.Windows.Documents.TextPointer" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fedf8-218">A <see cref="T:System.Windows.Documents.TextPointer" /> pointing to the beginning of the specified line (with the <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> set to <see cref="F:System.Windows.Documents.LogicalDirection.Forward" />), or <see langword="null" /> if the specified line is out of range or otherwise cannot be located.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-218">A <see cref="T:System.Windows.Documents.TextPointer" /> pointing to the beginning of the specified line (with the <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> set to <see cref="F:System.Windows.Documents.LogicalDirection.Forward" />), or <see langword="null" /> if the specified line is out of range or otherwise cannot be located.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fedf8-219">場合、<xref:System.Windows.Documents.TextPointer>指すあいまいな位置では、たとえば、2 つの行の間行で指定された方向では、<xref:System.Windows.Documents.TextPointer.LogicalDirection%2A>として相対開始行を選択します。</span><span class="sxs-lookup"><span data-stu-id="fedf8-219">If the <xref:System.Windows.Documents.TextPointer> points to an ambiguous position, for example, between two lines, the line in the direction specified by <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> is selected as the relative starting line.</span></span>  
  
 <span data-ttu-id="fedf8-220">このメソッドによって実行される操作は、有効なレイアウトに依存します。</span><span class="sxs-lookup"><span data-stu-id="fedf8-220">The operation performed by this method depends on a valid layout.</span></span>  <span data-ttu-id="fedf8-221">必要に応じて、このメソッドは、操作を続行する前に有効なレイアウトを自動的に再生成しようとします。</span><span class="sxs-lookup"><span data-stu-id="fedf8-221">When necessary, this method attempts to automatically regenerate a valid layout before proceeding with the operation.</span></span>  <span data-ttu-id="fedf8-222">レイアウトの再生成すると、比較的高価な操作を指定できます。</span><span class="sxs-lookup"><span data-stu-id="fedf8-222">Regenerating a layout can be a relatively expensive operation.</span></span>  <span data-ttu-id="fedf8-223">使用<xref:System.Windows.Documents.TextPointer.HasValidLayout%2A>レイアウトを再生成する操作を実行する前に有効なレイアウトを確認します。</span><span class="sxs-lookup"><span data-stu-id="fedf8-223">Use <xref:System.Windows.Documents.TextPointer.HasValidLayout%2A> to check for a valid layout before performing operations that may regenerate the layout.</span></span>  <span data-ttu-id="fedf8-224">詳細については、「[Layout](~/docs/framework/wpf/advanced/layout.md)」 (レイアウト) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="fedf8-224">For more information, see [Layout](~/docs/framework/wpf/advanced/layout.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLineStartPosition">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer GetLineStartPosition (int count, out int actualCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer GetLineStartPosition(int32 count, [out] int32&amp; actualCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetLineStartPosition(System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLineStartPosition (count As Integer, ByRef actualCount As Integer) As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ GetLineStartPosition(int count, [Runtime::InteropServices::Out] int % actualCount);" />
      <MemberSignature Language="F#" Value="member this.GetLineStartPosition : int *  -&gt; System.Windows.Documents.TextPointer" Usage="textPointer.GetLineStartPosition (count, actualCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="actualCount" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="count">
          <span data-ttu-id="fedf8-225">The number of start-of-line markers to skip when determining the line for which to return the starting position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-225">The number of start-of-line markers to skip when determining the line for which to return the starting position.</span>
          </span>
          <span data-ttu-id="fedf8-226">Negative values specify preceding lines, 0 specifies the current line, and positive values specify following lines.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-226">Negative values specify preceding lines, 0 specifies the current line, and positive values specify following lines.</span>
          </span>
        </param>
        <param name="actualCount">
          <span data-ttu-id="fedf8-227">When this method returns, contains the actual number of start-of-line markers that were skipped when determining the line for which to return the starting position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-227">When this method returns, contains the actual number of start-of-line markers that were skipped when determining the line for which to return the starting position.</span>
          </span>
          <span data-ttu-id="fedf8-228">This value may be less than <c>count</c> if the beginning or end of content is encountered before the specified number of lines are skipped.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-228">This value may be less than <c>count</c> if the beginning or end of content is encountered before the specified number of lines are skipped.</span>
          </span>
          <span data-ttu-id="fedf8-229">This parameter is passed uninitialized.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-229">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fedf8-230">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the beginning of a line that is specified relative to the current <see cref="T:System.Windows.Documents.TextPointer" />, and reports how many lines were skipped.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-230">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the beginning of a line that is specified relative to the current <see cref="T:System.Windows.Documents.TextPointer" />, and reports how many lines were skipped.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fedf8-231">A <see cref="T:System.Windows.Documents.TextPointer" /> pointing to the beginning of the specified line (with the <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> set to <see cref="F:System.Windows.Documents.LogicalDirection.Forward" />), or to the beginning of the line closest to the specified line if the specified line is out of range.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-231">A <see cref="T:System.Windows.Documents.TextPointer" /> pointing to the beginning of the specified line (with the <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> set to <see cref="F:System.Windows.Documents.LogicalDirection.Forward" />), or to the beginning of the line closest to the specified line if the specified line is out of range.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fedf8-232">場合、<xref:System.Windows.Documents.TextPointer>指すあいまいな位置では、たとえば、2 つの行の間行で指定された方向では、<xref:System.Windows.Documents.TextPointer.LogicalDirection%2A>プロパティが相対開始行として選択されています。</span><span class="sxs-lookup"><span data-stu-id="fedf8-232">If the <xref:System.Windows.Documents.TextPointer> points to an ambiguous position, for example, between two lines, the line in the direction specified by the <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> property is selected as the relative starting line.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNextContextPosition">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer GetNextContextPosition (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer GetNextContextPosition(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetNextContextPosition(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNextContextPosition (direction As LogicalDirection) As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ GetNextContextPosition(System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetNextContextPosition : System.Windows.Documents.LogicalDirection -&gt; System.Windows.Documents.TextPointer" Usage="textPointer.GetNextContextPosition direction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction">
          <span data-ttu-id="fedf8-233">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to search for the next symbol.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-233">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to search for the next symbol.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fedf8-234">Returns a pointer to the next symbol in the specified logical direction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-234">Returns a pointer to the next symbol in the specified logical direction.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fedf8-235">A <see cref="T:System.Windows.Documents.TextPointer" /> to the next symbol in the requested direction, or <see langword="null" /> if the current <see cref="T:System.Windows.Documents.TextPointer" /> borders the start or end of content.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-235">A <see cref="T:System.Windows.Documents.TextPointer" /> to the next symbol in the requested direction, or <see langword="null" /> if the current <see cref="T:System.Windows.Documents.TextPointer" /> borders the start or end of content.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fedf8-236">シンボルを使用して、次のいずれかが考慮されます。</span><span class="sxs-lookup"><span data-stu-id="fedf8-236">Any of the following is considered to be a symbol:</span></span>  
  
-   <span data-ttu-id="fedf8-237">開始タグまたは終了タグを<xref:System.Windows.Documents.TextElement>要素。</span><span class="sxs-lookup"><span data-stu-id="fedf8-237">An opening or closing tag for a <xref:System.Windows.Documents.TextElement> element.</span></span>  
  
-   <span data-ttu-id="fedf8-238">A<xref:System.Windows.UIElement>に含まれる要素を<xref:System.Windows.Documents.InlineUIContainer>または<xref:System.Windows.Documents.BlockUIContainer>します。</span><span class="sxs-lookup"><span data-stu-id="fedf8-238">A <xref:System.Windows.UIElement> element contained in an <xref:System.Windows.Documents.InlineUIContainer> or <xref:System.Windows.Documents.BlockUIContainer>.</span></span>  <span data-ttu-id="fedf8-239">このようなメモを<xref:System.Windows.UIElement>常に正確に 1 つの記号は任意の他のコンテンツまたはに含まれる要素としてカウントされますが、<xref:System.Windows.UIElement>シンボルとしてはカウントされません。</span><span class="sxs-lookup"><span data-stu-id="fedf8-239">Note that such a <xref:System.Windows.UIElement> is always counted as exactly one symbol; any additional content or elements contained by the <xref:System.Windows.UIElement> are not counted as symbols.</span></span>  
  
-   <span data-ttu-id="fedf8-240">16 ビット[!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)]テキスト内で文字<xref:System.Windows.Documents.Run>要素。</span><span class="sxs-lookup"><span data-stu-id="fedf8-240">A 16-bit [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] character inside of a text <xref:System.Windows.Documents.Run> element.</span></span>  
  
 <span data-ttu-id="fedf8-241">次の記号としてカテゴリ化される場合<xref:System.Windows.Documents.TextPointerContext.EmbeddedElement>、 <xref:System.Windows.Documents.TextPointerContext.ElementStart>、または<xref:System.Windows.Documents.TextPointerContext.ElementEnd>(で識別される、<xref:System.Windows.Documents.TextPointer.GetPointerContext%2A>メソッド) を<xref:System.Windows.Documents.TextPointer>これによって返されるメソッドが現在の位置から 1 つの記号で高度な。</span><span class="sxs-lookup"><span data-stu-id="fedf8-241">If the next symbol is categorized as <xref:System.Windows.Documents.TextPointerContext.EmbeddedElement>, <xref:System.Windows.Documents.TextPointerContext.ElementStart>, or <xref:System.Windows.Documents.TextPointerContext.ElementEnd> (as identified by the <xref:System.Windows.Documents.TextPointer.GetPointerContext%2A> method), then the <xref:System.Windows.Documents.TextPointer> returned by this method is advanced by exactly one symbol from the current position.</span></span>  
  
 <span data-ttu-id="fedf8-242">次の記号としてカテゴリ化される場合<xref:System.Windows.Documents.TextPointerContext.Text>、<xref:System.Windows.Documents.TextPointer>これによって返されるメソッドが次のテキスト以外のシンボルを過去のテキスト、高度な (は、次が位置、<xref:System.Windows.Documents.TextPointerContext>ない<xref:System.Windows.Documents.TextPointerContext.Text>)。</span><span class="sxs-lookup"><span data-stu-id="fedf8-242">If the next symbol is categorized as <xref:System.Windows.Documents.TextPointerContext.Text>, then the <xref:System.Windows.Documents.TextPointer> returned by this method is advanced past the text to the next non-text symbol (that is, the next position where the <xref:System.Windows.Documents.TextPointerContext> is not <xref:System.Windows.Documents.TextPointerContext.Text>).</span></span>  <span data-ttu-id="fedf8-243">呼び出すことによって、正確なシンボルの数を超えました。 が事前に計算する、<xref:System.Windows.Documents.TextPointer.GetTextRunLength%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="fedf8-243">The exact symbol count crossed can be calculated in advance by calling the <xref:System.Windows.Documents.TextPointer.GetTextRunLength%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fedf8-244">次の例では、このメソッドの使用を示します。</span><span class="sxs-lookup"><span data-stu-id="fedf8-244">The following example demonstrates a use for this method.</span></span>  <span data-ttu-id="fedf8-245">この例では、<xref:System.Windows.Documents.TextPointer.GetNextContextPosition%2A>メソッドと組み合わせて、<xref:System.Windows.Documents.TextPointer.GetPointerContext%2A>メソッドを走査し、指定したシンボルを抽出<xref:System.Windows.Documents.TextElement>します。</span><span class="sxs-lookup"><span data-stu-id="fedf8-245">The example uses the <xref:System.Windows.Documents.TextPointer.GetNextContextPosition%2A> method in conjunction with the <xref:System.Windows.Documents.TextPointer.GetPointerContext%2A> method to traverse and extract the symbols in a specified <xref:System.Windows.Documents.TextElement>.</span></span>  
  
 <span data-ttu-id="fedf8-246">例を使用して抽出することができます、[!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)]の内容の構造を特定<xref:System.Windows.Documents.TextElement>、例示を目的としてのみを対象としていますが、実稼働コードでは使用しない必要があります。</span><span class="sxs-lookup"><span data-stu-id="fedf8-246">While the example can be used to extract a [!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)] structure for the contents of a given <xref:System.Windows.Documents.TextElement>, it is intended for illustrative purposes only, and should not be used in production code.</span></span>  <span data-ttu-id="fedf8-247">参照してください、<xref:System.Xml>豊富な一連の操作と、XML の処理のために設計された型の名前空間。</span><span class="sxs-lookup"><span data-stu-id="fedf8-247">See the <xref:System.Xml> namespace for a rich set of types designed for working with and processing XML.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetNextContextPosition](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_getnextcontextposition)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetNextContextPosition](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_getnextcontextposition)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNextInsertionPosition">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer GetNextInsertionPosition (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer GetNextInsertionPosition(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetNextInsertionPosition(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNextInsertionPosition (direction As LogicalDirection) As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ GetNextInsertionPosition(System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetNextInsertionPosition : System.Windows.Documents.LogicalDirection -&gt; System.Windows.Documents.TextPointer" Usage="textPointer.GetNextInsertionPosition direction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction">
          <span data-ttu-id="fedf8-248">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to search for the next insertion position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-248">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to search for the next insertion position.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fedf8-249">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the next insertion position in the specified logical direction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-249">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the next insertion position in the specified logical direction.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fedf8-250">A <see cref="T:System.Windows.Documents.TextPointer" /> that identifies the next insertion position in the requested direction, or <see langword="null" /> if no next insertion position can be found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-250">A <see cref="T:System.Windows.Documents.TextPointer" /> that identifies the next insertion position in the requested direction, or <see langword="null" /> if no next insertion position can be found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fedf8-251">*挿入位置*は関連付けられているコンテンツの任意の意味ルールを損なうことがなく新しいコンテンツを追加することがあります位置です。</span><span class="sxs-lookup"><span data-stu-id="fedf8-251">An *insertion position* is a position where new content may be added without breaking any semantic rules for the associated content.</span></span>  <span data-ttu-id="fedf8-252">実際には、挿入位置は、キャレットを配置する場所のコンテンツで任意の場所です。</span><span class="sxs-lookup"><span data-stu-id="fedf8-252">In practice, an insertion position is anywhere in content where a caret may be positioned.</span></span>  <span data-ttu-id="fedf8-253">有効な例<xref:System.Windows.Documents.TextPointer>挿入位置ではない位置は 2 つの隣接する間位置<xref:System.Windows.Documents.Paragraph>タグ (つまり、前の段落の終了タグと、次の段落の開始タグの間)。</span><span class="sxs-lookup"><span data-stu-id="fedf8-253">An example of a valid <xref:System.Windows.Documents.TextPointer> position that is not an insertion position is the position between two adjacent <xref:System.Windows.Documents.Paragraph> tags (that is, between the closing tag of the preceding paragraph and the opening tag of the next paragraph).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fedf8-254">次の例では、このメソッドの使用を示します。</span><span class="sxs-lookup"><span data-stu-id="fedf8-254">The following example demonstrates a use for this method.</span></span> <span data-ttu-id="fedf8-255">この例では、<xref:System.Windows.Documents.TextPointer.GetNextInsertionPosition%2A>メソッドの数をカウントするにはコンテンツ要素の境界を通過する<xref:System.Windows.Documents.Paragraph>間で指定した 2 つ存在する要素<xref:System.Windows.Documents.TextPointer>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="fedf8-255">The example uses the <xref:System.Windows.Documents.TextPointer.GetNextInsertionPosition%2A> method to traverse content element boundaries in order to count the number of <xref:System.Windows.Documents.Paragraph> elements present between two specified <xref:System.Windows.Documents.TextPointer> instances.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetNextInsertionPosition](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_getnextinsertionposition)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetNextInsertionPosition](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_getnextinsertionposition)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.TextPointer.GetInsertionPosition(System.Windows.Documents.LogicalDirection)" />
      </Docs>
    </Member>
    <Member MemberName="GetOffsetToPosition">
      <MemberSignature Language="C#" Value="public int GetOffsetToPosition (System.Windows.Documents.TextPointer position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetOffsetToPosition(class System.Windows.Documents.TextPointer position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetOffsetToPosition(System.Windows.Documents.TextPointer)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOffsetToPosition (position As TextPointer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetOffsetToPosition(System::Windows::Documents::TextPointer ^ position);" />
      <MemberSignature Language="F#" Value="member this.GetOffsetToPosition : System.Windows.Documents.TextPointer -&gt; int" Usage="textPointer.GetOffsetToPosition position" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Windows.Documents.TextPointer" />
      </Parameters>
      <Docs>
        <param name="position">
          <span data-ttu-id="fedf8-256">A <see cref="T:System.Windows.Documents.TextPointer" /> that specifies a position to find the distance (in symbols) to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-256">A <see cref="T:System.Windows.Documents.TextPointer" /> that specifies a position to find the distance (in symbols) to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fedf8-257">Returns the count of symbols between the current <see cref="T:System.Windows.Documents.TextPointer" /> and a second specified <see cref="T:System.Windows.Documents.TextPointer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-257">Returns the count of symbols between the current <see cref="T:System.Windows.Documents.TextPointer" /> and a second specified <see cref="T:System.Windows.Documents.TextPointer" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fedf8-258">The relative number of symbols between the current <see cref="T:System.Windows.Documents.TextPointer" /> and <paramref name="position" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-258">The relative number of symbols between the current <see cref="T:System.Windows.Documents.TextPointer" /> and <paramref name="position" />.</span>
          </span>
          <span data-ttu-id="fedf8-259">A negative value indicates that the current <see cref="T:System.Windows.Documents.TextPointer" /> follows the position specified by <paramref name="position" />, 0 indicates that the positions are equal, and a positive value indicates that the current <see cref="T:System.Windows.Documents.TextPointer" /> precedes the position specified by <paramref name="position" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-259">A negative value indicates that the current <see cref="T:System.Windows.Documents.TextPointer" /> follows the position specified by <paramref name="position" />, 0 indicates that the positions are equal, and a positive value indicates that the current <see cref="T:System.Windows.Documents.TextPointer" /> precedes the position specified by <paramref name="position" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fedf8-260">シンボルを使用して、次のいずれかが考慮されます。</span><span class="sxs-lookup"><span data-stu-id="fedf8-260">Any of the following is considered to be a symbol:</span></span>  
  
-   <span data-ttu-id="fedf8-261">開始タグまたは終了タグを<xref:System.Windows.Documents.TextElement>要素。</span><span class="sxs-lookup"><span data-stu-id="fedf8-261">An opening or closing tag for a <xref:System.Windows.Documents.TextElement> element.</span></span>  
  
-   <span data-ttu-id="fedf8-262">A<xref:System.Windows.UIElement>に含まれる要素を<xref:System.Windows.Documents.InlineUIContainer>または<xref:System.Windows.Documents.BlockUIContainer>します。</span><span class="sxs-lookup"><span data-stu-id="fedf8-262">A <xref:System.Windows.UIElement> element contained in an <xref:System.Windows.Documents.InlineUIContainer> or <xref:System.Windows.Documents.BlockUIContainer>.</span></span>  <span data-ttu-id="fedf8-263">このようなメモを<xref:System.Windows.UIElement>常に正確に 1 つの記号は任意の他のコンテンツまたはに含まれる要素としてカウントされますが、<xref:System.Windows.UIElement>シンボルとしてはカウントされません。</span><span class="sxs-lookup"><span data-stu-id="fedf8-263">Note that such a <xref:System.Windows.UIElement> is always counted as exactly one symbol; any additional content or elements contained by the <xref:System.Windows.UIElement> are not counted as symbols.</span></span>  
  
-   <span data-ttu-id="fedf8-264">16 ビット[!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)]テキスト内で文字<xref:System.Windows.Documents.Run>要素。</span><span class="sxs-lookup"><span data-stu-id="fedf8-264">A 16-bit [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] character inside of a text <xref:System.Windows.Documents.Run> element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fedf8-265">次の例では、このメソッドの使用を示します。</span><span class="sxs-lookup"><span data-stu-id="fedf8-265">The following example demonstrates a use for this method.</span></span> <span data-ttu-id="fedf8-266">この例では、 <xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A> 2 つのオフセットを検索するメソッド<xref:System.Windows.Documents.TextPointer>インスタンスし、この情報を使用して、保存し、復元での選択、 <xref:System.Windows.Controls.RichTextBox>。</span><span class="sxs-lookup"><span data-stu-id="fedf8-266">The example uses the <xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A> method to find the offsets for two <xref:System.Windows.Documents.TextPointer> instances, and then uses this information to save and restore the selection in a <xref:System.Windows.Controls.RichTextBox>.</span></span>  <span data-ttu-id="fedf8-267">例では、内容、<xref:System.Windows.Controls.RichTextBox>選択範囲を保存して復元する間は変更されていません。</span><span class="sxs-lookup"><span data-stu-id="fedf8-267">The example assumes that the contents of the <xref:System.Windows.Controls.RichTextBox> have not changed between a selection save and a selection restore.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetOffsetToPosition](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_getoffsettoposition)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetOffsetToPosition](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_getoffsettoposition)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="fedf8-268">
            <paramref name="position" /> specifies a position outside of the text container associated with the current position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-268">
              <paramref name="position" /> specifies a position outside of the text container associated with the current position.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Windows.Documents.TextPointer.GetPositionAtOffset" />
        <altmember cref="M:System.Windows.Documents.TextPointer.IsInSameDocument(System.Windows.Documents.TextPointer)" />
      </Docs>
    </Member>
    <Member MemberName="GetPointerContext">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointerContext GetPointerContext (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Documents.TextPointerContext GetPointerContext(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetPointerContext(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPointerContext (direction As LogicalDirection) As TextPointerContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointerContext GetPointerContext(System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetPointerContext : System.Windows.Documents.LogicalDirection -&gt; System.Windows.Documents.TextPointerContext" Usage="textPointer.GetPointerContext direction" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Documents.ITextPointer.GetPointerContext(System.Windows.Documents.LogicalDirection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointerContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction">
          <span data-ttu-id="fedf8-269">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to determine the category for adjacent content.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-269">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to determine the category for adjacent content.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fedf8-270">Returns a category indicator for the content adjacent to the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified logical direction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-270">Returns a category indicator for the content adjacent to the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified logical direction.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fedf8-271">One of the <see cref="T:System.Windows.Documents.TextPointerContext" /> values that indicates the category for adjacent content in the specified logical direction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-271">One of the <see cref="T:System.Windows.Documents.TextPointerContext" /> values that indicates the category for adjacent content in the specified logical direction.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fedf8-272">次の例では、このメソッドの使用を示します。</span><span class="sxs-lookup"><span data-stu-id="fedf8-272">The following example demonstrates a use for this method.</span></span> <span data-ttu-id="fedf8-273">この例では、<xref:System.Windows.Documents.TextPointer.GetPointerContext%2A>タグと終了要素タグが指定した 2 つの間の分散を計算するためのアルゴリズムを実装するメソッド<xref:System.Windows.Documents.TextPointer>位置。</span><span class="sxs-lookup"><span data-stu-id="fedf8-273">The example uses the <xref:System.Windows.Documents.TextPointer.GetPointerContext%2A> method to implement an algorithm for calculating the balance of opening and closing element tags between two specified <xref:System.Windows.Documents.TextPointer> positions.</span></span>  <span data-ttu-id="fedf8-274">各 +1 としてし、各カウントが開始要素タグ終了要素タグは – 1 としてカウントされます。</span><span class="sxs-lookup"><span data-stu-id="fedf8-274">Each opening element tag is counted as +1, and each closing element tag is counted as –1.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetOffsetToPosition2](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_getoffsettoposition2)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetOffsetToPosition2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_getoffsettoposition2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPositionAtOffset">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fedf8-275">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the position indicated by the specified offset, in symbols, from the beginning of content.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-275">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the position indicated by the specified offset, in symbols, from the beginning of content.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPositionAtOffset">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer GetPositionAtOffset (int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer GetPositionAtOffset(int32 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetPositionAtOffset(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPositionAtOffset (offset As Integer) As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ GetPositionAtOffset(int offset);" />
      <MemberSignature Language="F#" Value="member this.GetPositionAtOffset : int -&gt; System.Windows.Documents.TextPointer" Usage="textPointer.GetPositionAtOffset offset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="fedf8-276">An offset, in symbols, for which to calculate and return the position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-276">An offset, in symbols, for which to calculate and return the position.</span>
          </span>
          <span data-ttu-id="fedf8-277">If the offset is negative, the position is calculated in the logical direction opposite of that indicated by the <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-277">If the offset is negative, the position is calculated in the logical direction opposite of that indicated by the <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fedf8-278">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the position indicated by the specified offset, in symbols, from the beginning of the current <see cref="T:System.Windows.Documents.TextPointer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-278">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the position indicated by the specified offset, in symbols, from the beginning of the current <see cref="T:System.Windows.Documents.TextPointer" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fedf8-279">A <see cref="T:System.Windows.Documents.TextPointer" /> to the position indicated by the specified offset, or <see langword="null" /> if no corresponding position can be found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-279">A <see cref="T:System.Windows.Documents.TextPointer" /> to the position indicated by the specified offset, or <see langword="null" /> if no corresponding position can be found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fedf8-280">シンボルを使用して、次のいずれかが考慮されます。</span><span class="sxs-lookup"><span data-stu-id="fedf8-280">Any of the following is considered to be a symbol:</span></span>  
  
-   <span data-ttu-id="fedf8-281">開始タグまたは終了タグを<xref:System.Windows.Documents.TextElement>要素。</span><span class="sxs-lookup"><span data-stu-id="fedf8-281">An opening or closing tag for the <xref:System.Windows.Documents.TextElement> element.</span></span>  
  
-   <span data-ttu-id="fedf8-282">A<xref:System.Windows.UIElement>に含まれる要素を<xref:System.Windows.Documents.InlineUIContainer>または<xref:System.Windows.Documents.BlockUIContainer>します。</span><span class="sxs-lookup"><span data-stu-id="fedf8-282">A <xref:System.Windows.UIElement> element contained in an <xref:System.Windows.Documents.InlineUIContainer> or <xref:System.Windows.Documents.BlockUIContainer>.</span></span>  <span data-ttu-id="fedf8-283">このようなメモを<xref:System.Windows.UIElement>常に正確に 1 つの記号は任意の他のコンテンツまたはに含まれる要素としてカウントされますが、<xref:System.Windows.UIElement>シンボルとしてはカウントされません。</span><span class="sxs-lookup"><span data-stu-id="fedf8-283">Note that such a <xref:System.Windows.UIElement> is always counted as exactly one symbol; any additional content or elements contained by the <xref:System.Windows.UIElement> are not counted as symbols.</span></span>  
  
-   <span data-ttu-id="fedf8-284">16 ビット[!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)]テキスト内で文字<xref:System.Windows.Documents.Run>要素。</span><span class="sxs-lookup"><span data-stu-id="fedf8-284">A 16-bit [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] character inside of a text <xref:System.Windows.Documents.Run> element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fedf8-285">次の例では、このメソッドの使用を示します。</span><span class="sxs-lookup"><span data-stu-id="fedf8-285">The following example demonstrates a use for this method.</span></span> <span data-ttu-id="fedf8-286">この例では、<xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A>メソッドは、任意のホスティングの段落およびを返す、その他の基準の指定した位置のオフセットを計算する 1 つのペアを実装するメソッド、<xref:System.Windows.Documents.TextPointer>に指定した段落内の指定したオフセット。</span><span class="sxs-lookup"><span data-stu-id="fedf8-286">The example uses the <xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A> method to implement a pair of methods, one to calculate the offset to a specified position relative to any hosting paragraph, and the other to return a <xref:System.Windows.Documents.TextPointer> to a specified offset in a specified paragraph.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetPositionAtOffset](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_getpositionatoffset)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetPositionAtOffset](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_getpositionatoffset)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.TextPointer.GetOffsetToPosition(System.Windows.Documents.TextPointer)" />
      </Docs>
    </Member>
    <Member MemberName="GetPositionAtOffset">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer GetPositionAtOffset (int offset, System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer GetPositionAtOffset(int32 offset, valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetPositionAtOffset(System.Int32,System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPositionAtOffset (offset As Integer, direction As LogicalDirection) As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ GetPositionAtOffset(int offset, System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetPositionAtOffset : int * System.Windows.Documents.LogicalDirection -&gt; System.Windows.Documents.TextPointer" Usage="textPointer.GetPositionAtOffset (offset, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="fedf8-287">An offset, in symbols, for which to calculate and return the position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-287">An offset, in symbols, for which to calculate and return the position.</span>
          </span>
          <span data-ttu-id="fedf8-288">If the offset is negative, the returned <see cref="T:System.Windows.Documents.TextPointer" /> precedes the current <see cref="T:System.Windows.Documents.TextPointer" />; otherwise, it follows.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-288">If the offset is negative, the returned <see cref="T:System.Windows.Documents.TextPointer" /> precedes the current <see cref="T:System.Windows.Documents.TextPointer" />; otherwise, it follows.</span>
          </span>
        </param>
        <param name="direction">
          <span data-ttu-id="fedf8-289">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction of the returned <see cref="T:System.Windows.Documents.TextPointer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-289">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction of the returned <see cref="T:System.Windows.Documents.TextPointer" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fedf8-290">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the position indicated by the specified offset, in symbols, from the beginning of the current <see cref="T:System.Windows.Documents.TextPointer" /> and in the specified direction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-290">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the position indicated by the specified offset, in symbols, from the beginning of the current <see cref="T:System.Windows.Documents.TextPointer" /> and in the specified direction.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fedf8-291">A <see cref="T:System.Windows.Documents.TextPointer" /> to the position indicated by the specified offset, or <see langword="null" /> if the offset extends past the end of the content.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-291">A <see cref="T:System.Windows.Documents.TextPointer" /> to the position indicated by the specified offset, or <see langword="null" /> if the offset extends past the end of the content.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fedf8-292">シンボルを使用して、次のいずれかが考慮されます。</span><span class="sxs-lookup"><span data-stu-id="fedf8-292">Any of the following is considered to be a symbol:</span></span>  
  
-   <span data-ttu-id="fedf8-293">開始タグまたは終了タグを<xref:System.Windows.Documents.TextElement>要素。</span><span class="sxs-lookup"><span data-stu-id="fedf8-293">An opening or closing tag for the <xref:System.Windows.Documents.TextElement> element.</span></span>  
  
-   <span data-ttu-id="fedf8-294">A<xref:System.Windows.UIElement>に含まれる要素を<xref:System.Windows.Documents.InlineUIContainer>または<xref:System.Windows.Documents.BlockUIContainer>します。</span><span class="sxs-lookup"><span data-stu-id="fedf8-294">A <xref:System.Windows.UIElement> element contained in an <xref:System.Windows.Documents.InlineUIContainer> or <xref:System.Windows.Documents.BlockUIContainer>.</span></span>  <span data-ttu-id="fedf8-295">このようなメモを<xref:System.Windows.UIElement>常に正確に 1 つの記号は任意の他のコンテンツまたはに含まれる要素としてカウントされますが、<xref:System.Windows.UIElement>シンボルとしてはカウントされません。</span><span class="sxs-lookup"><span data-stu-id="fedf8-295">Note that such a <xref:System.Windows.UIElement> is always counted as exactly one symbol; any additional content or elements contained by the <xref:System.Windows.UIElement> are not counted as symbols.</span></span>  
  
-   <span data-ttu-id="fedf8-296">16 ビット[!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)]テキスト内で文字<xref:System.Windows.Documents.Run>要素。</span><span class="sxs-lookup"><span data-stu-id="fedf8-296">A 16-bit [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] character inside of a text <xref:System.Windows.Documents.Run> element.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.TextPointer.GetOffsetToPosition(System.Windows.Documents.TextPointer)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetTextInRun">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fedf8-297">Returns text adjacent to the current <see cref="T:System.Windows.Documents.TextPointer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-297">Returns text adjacent to the current <see cref="T:System.Windows.Documents.TextPointer" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetTextInRun">
      <MemberSignature Language="C#" Value="public string GetTextInRun (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetTextInRun(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTextInRun (direction As LogicalDirection) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetTextInRun(System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetTextInRun : System.Windows.Documents.LogicalDirection -&gt; string" Usage="textPointer.GetTextInRun direction" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Documents.ITextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction">
          <span data-ttu-id="fedf8-298">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to find and return any adjacent text.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-298">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to find and return any adjacent text.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fedf8-299">Returns a string containing any text adjacent to the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified logical direction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-299">Returns a string containing any text adjacent to the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified logical direction.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fedf8-300">A string containing any adjacent text in the specified logical direction, or <see cref="F:System.String.Empty" /> if no adjacent text can be found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-300">A string containing any adjacent text in the specified logical direction, or <see cref="F:System.String.Empty" /> if no adjacent text can be found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fedf8-301">このメソッドは、テキストの中断のない実行のみを返します。</span><span class="sxs-lookup"><span data-stu-id="fedf8-301">This method returns only uninterrupted runs of text.</span></span>  <span data-ttu-id="fedf8-302">いずれかの記号の型以外の場合は、何も返されない<xref:System.Windows.Documents.TextPointerContext.Text>は現在の横にある<xref:System.Windows.Documents.TextPointer>指定した方向でします。</span><span class="sxs-lookup"><span data-stu-id="fedf8-302">Nothing is returned if any symbol type other than <xref:System.Windows.Documents.TextPointerContext.Text> is adjacent to the current <xref:System.Windows.Documents.TextPointer> in the specified direction.</span></span>  <span data-ttu-id="fedf8-303">同様に、次のテキスト以外のシンボルに達するまで、テキストが返されます。</span><span class="sxs-lookup"><span data-stu-id="fedf8-303">Similarly, text is returned only up to the next non-text symbol.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fedf8-304">次の例では、このメソッドの使用を示します。</span><span class="sxs-lookup"><span data-stu-id="fedf8-304">The following example demonstrates a use for this method.</span></span> <span data-ttu-id="fedf8-305">この例では、<xref:System.Windows.Documents.TextPointer.GetTextInRun%2A>単純なテキスト エクス トラクターを実装するメソッド。</span><span class="sxs-lookup"><span data-stu-id="fedf8-305">The example uses the <xref:System.Windows.Documents.TextPointer.GetTextInRun%2A> method to implement a simple text extractor.</span></span>  <span data-ttu-id="fedf8-306">指定した 2 つの間のすべてのテキストの文字列の連結を返します<xref:System.Windows.Documents.TextPointer>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="fedf8-306">The method returns a string concatenation of all text between two specified <xref:System.Windows.Documents.TextPointer> instances.</span></span>  
  
 <span data-ttu-id="fedf8-307">例を使用して、2 つの任意のテキストを抽出する<xref:System.Windows.Documents.TextPointer>インスタンス、これは目的を目的としたものと実稼働コードでは使用しない必要があります。</span><span class="sxs-lookup"><span data-stu-id="fedf8-307">While the example can be used to extract any text between two <xref:System.Windows.Documents.TextPointer> instances, it is intended for illustrative purposes only, and should not be used in production code.</span></span>  <span data-ttu-id="fedf8-308">代わりに、<xref:System.Windows.Documents.TextRange.Text%2A?displayProperty=nameWithType> プロパティを使用してください。</span><span class="sxs-lookup"><span data-stu-id="fedf8-308">Use the <xref:System.Windows.Documents.TextRange.Text%2A?displayProperty=nameWithType> property instead.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetTextInRun](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_gettextinrun)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetTextInRun](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_gettextinrun)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.TextPointer.DeleteTextInRun(System.Int32)" />
        <altmember cref="M:System.Windows.Documents.TextPointer.InsertTextInRun(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetTextInRun">
      <MemberSignature Language="C#" Value="public int GetTextInRun (System.Windows.Documents.LogicalDirection direction, char[] textBuffer, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetTextInRun(valuetype System.Windows.Documents.LogicalDirection direction, char[] textBuffer, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection,System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTextInRun (direction As LogicalDirection, textBuffer As Char(), startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetTextInRun(System::Windows::Documents::LogicalDirection direction, cli::array &lt;char&gt; ^ textBuffer, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.GetTextInRun : System.Windows.Documents.LogicalDirection * char[] * int * int -&gt; int" Usage="textPointer.GetTextInRun (direction, textBuffer, startIndex, count)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Documents.ITextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection,System.Char[],System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
        <Parameter Name="textBuffer" Type="System.Char[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="direction">
          <span data-ttu-id="fedf8-309">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to find and copy any adjacent text.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-309">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to find and copy any adjacent text.</span>
          </span>
        </param>
        <param name="textBuffer">
          <span data-ttu-id="fedf8-310">A buffer into which any text is copied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-310">A buffer into which any text is copied.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="fedf8-311">An index into <c>textBuffer</c> at which to begin writing copied text.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-311">An index into <c>textBuffer</c> at which to begin writing copied text.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="fedf8-312">The maximum number of characters to copy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-312">The maximum number of characters to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fedf8-313">Copies the specified maximum number of characters from any adjacent text in the specified direction into a caller-supplied character array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-313">Copies the specified maximum number of characters from any adjacent text in the specified direction into a caller-supplied character array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fedf8-314">The number of characters actually copied into <paramref name="textBuffer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-314">The number of characters actually copied into <paramref name="textBuffer" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fedf8-315">このメソッドは、テキストの中断のない実行のみを返します。</span><span class="sxs-lookup"><span data-stu-id="fedf8-315">This method returns only uninterrupted runs of text.</span></span>  <span data-ttu-id="fedf8-316">いずれかの記号の型以外の場合は、何も返されない<xref:System.Windows.Documents.TextPointerContext.Text>は現在の横にある<xref:System.Windows.Documents.TextPointer>指定した方向でします。</span><span class="sxs-lookup"><span data-stu-id="fedf8-316">Nothing is returned if any symbol type other than <xref:System.Windows.Documents.TextPointerContext.Text> is adjacent to the current <xref:System.Windows.Documents.TextPointer> in the specified direction.</span></span>  <span data-ttu-id="fedf8-317">同様に、次のテキスト以外のシンボルに達するまで、テキストが返されます。</span><span class="sxs-lookup"><span data-stu-id="fedf8-317">Similarly, text is returned only up to the next non-text symbol.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="fedf8-318">
            <paramref name="startIndex" /> is less than 0 or greater than the <see cref="P:System.Array.Length" /> property of <paramref name="textBuffer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-318">
              <paramref name="startIndex" /> is less than 0 or greater than the <see cref="P:System.Array.Length" /> property of <paramref name="textBuffer" />.</span>
          </span>
          <span data-ttu-id="fedf8-319">-or-  <paramref name="count" /> is less than 0 or greater than the remaining space in <paramref name="textBuffer" /> (<paramref name="textBuffer" />.<see cref="P:System.Array.Length" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-319">-or-  <paramref name="count" /> is less than 0 or greater than the remaining space in <paramref name="textBuffer" /> (<paramref name="textBuffer" />.<see cref="P:System.Array.Length" /></span>
          </span>
          <span data-ttu-id="fedf8-320">minus <paramref name="startIndex" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-320">minus <paramref name="startIndex" />).</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Documents.TextPointer.DeleteTextInRun(System.Int32)" />
        <altmember cref="M:System.Windows.Documents.TextPointer.InsertTextInRun(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetTextRunLength">
      <MemberSignature Language="C#" Value="public int GetTextRunLength (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetTextRunLength(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetTextRunLength(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTextRunLength (direction As LogicalDirection) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetTextRunLength(System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetTextRunLength : System.Windows.Documents.LogicalDirection -&gt; int" Usage="textPointer.GetTextRunLength direction" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Documents.ITextPointer.GetTextRunLength(System.Windows.Documents.LogicalDirection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction">
          <span data-ttu-id="fedf8-321">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to count the number of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-321">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to count the number of characters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fedf8-322">Returns the number of Unicode characters between the current <see cref="T:System.Windows.Documents.TextPointer" /> and the next non-text symbol, in the specified logical direction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-322">Returns the number of Unicode characters between the current <see cref="T:System.Windows.Documents.TextPointer" /> and the next non-text symbol, in the specified logical direction.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fedf8-323">The number of Unicode characters between the current <see cref="T:System.Windows.Documents.TextPointer" /> and the next non-text symbol.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-323">The number of Unicode characters between the current <see cref="T:System.Windows.Documents.TextPointer" /> and the next non-text symbol.</span>
          </span>
          <span data-ttu-id="fedf8-324">This number may be 0 if there is no adjacent text.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-324">This number may be 0 if there is no adjacent text.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fedf8-325">シンボルを使用して、次のいずれかが考慮されます。</span><span class="sxs-lookup"><span data-stu-id="fedf8-325">Any of the following is considered to be a symbol:</span></span>  
  
-   <span data-ttu-id="fedf8-326">開始タグまたは終了タグを<xref:System.Windows.Documents.TextElement>要素。</span><span class="sxs-lookup"><span data-stu-id="fedf8-326">An opening or closing tag for the <xref:System.Windows.Documents.TextElement> element.</span></span>  
  
-   <span data-ttu-id="fedf8-327">A<xref:System.Windows.UIElement>に含まれる要素を<xref:System.Windows.Documents.InlineUIContainer>または<xref:System.Windows.Documents.BlockUIContainer>します。</span><span class="sxs-lookup"><span data-stu-id="fedf8-327">A <xref:System.Windows.UIElement> element contained in an <xref:System.Windows.Documents.InlineUIContainer> or <xref:System.Windows.Documents.BlockUIContainer>.</span></span>  <span data-ttu-id="fedf8-328">このようなメモを<xref:System.Windows.UIElement>常に正確に 1 つの記号は任意の他のコンテンツまたはに含まれる要素としてカウントされますが、<xref:System.Windows.UIElement>シンボルとしてはカウントされません。</span><span class="sxs-lookup"><span data-stu-id="fedf8-328">Note that such a <xref:System.Windows.UIElement> is always counted as exactly one symbol; any additional content or elements contained by the <xref:System.Windows.UIElement> are not counted as symbols.</span></span>  
  
-   <span data-ttu-id="fedf8-329">16 ビット[!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)]テキスト内で文字<xref:System.Windows.Documents.Run>要素。</span><span class="sxs-lookup"><span data-stu-id="fedf8-329">A 16-bit [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] character inside of a text <xref:System.Windows.Documents.Run> element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasValidLayout">
      <MemberSignature Language="C#" Value="public bool HasValidLayout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasValidLayout" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.HasValidLayout" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasValidLayout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasValidLayout { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasValidLayout : bool" Usage="System.Windows.Documents.TextPointer.HasValidLayout" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Documents.ITextPointer.HasValidLayout</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fedf8-330">Gets a value that indicates whether the text container associated with the current position has a valid (up-to-date) layout.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-330">Gets a value that indicates whether the text container associated with the current position has a valid (up-to-date) layout.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fedf8-331">
            <see langword="true" /> レイアウトは現在、有効な場合それ以外の場合、<see langword="false" />します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-331">
              <see langword="true" /> if the layout is current and valid; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fedf8-332">必要に応じて、有効なレイアウトに依存する操作 (など、<xref:System.Windows.Documents.TextPointer.GetLineStartPosition%2A>メソッド、<xref:System.Windows.Documents.TextPointer.GetCharacterRect%2A>メソッド、および<xref:System.Windows.Documents.TextPointer.IsAtLineStartPosition%2A>プロパティ) 操作を続行する前に有効なレイアウトを自動的に再生成しようとしています。</span><span class="sxs-lookup"><span data-stu-id="fedf8-332">When necessary, operations that depend on a valid layout (such as the <xref:System.Windows.Documents.TextPointer.GetLineStartPosition%2A> method, <xref:System.Windows.Documents.TextPointer.GetCharacterRect%2A> method, and <xref:System.Windows.Documents.TextPointer.IsAtLineStartPosition%2A> property) attempt to automatically regenerate a valid layout before proceeding with the operation.</span></span>  <span data-ttu-id="fedf8-333">レイアウトの再生成すると、比較的高価な操作を指定できます。</span><span class="sxs-lookup"><span data-stu-id="fedf8-333">Regenerating a layout can be a relatively expensive operation.</span></span>  <span data-ttu-id="fedf8-334">レイアウトを再生成する操作を実行する前に有効なレイアウトを確認するには、このプロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="fedf8-334">Use this property to check for a valid layout before performing operations that may regenerate the layout.</span></span>  <span data-ttu-id="fedf8-335">詳細については、「[Layout](~/docs/framework/wpf/advanced/layout.md)」 (レイアウト) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="fedf8-335">For more information, see [Layout](~/docs/framework/wpf/advanced/layout.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertLineBreak">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer InsertLineBreak ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer InsertLineBreak() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.InsertLineBreak" />
      <MemberSignature Language="VB.NET" Value="Public Function InsertLineBreak () As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ InsertLineBreak();" />
      <MemberSignature Language="F#" Value="member this.InsertLineBreak : unit -&gt; System.Windows.Documents.TextPointer" Usage="textPointer.InsertLineBreak " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fedf8-336">Inserts a line break at the current position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-336">Inserts a line break at the current position.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fedf8-337">A <see cref="T:System.Windows.Documents.TextPointer" /> positioned immediately after the <see cref="T:System.Windows.Documents.LineBreak" /> element inserted by this method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-337">A <see cref="T:System.Windows.Documents.TextPointer" /> positioned immediately after the <see cref="T:System.Windows.Documents.LineBreak" /> element inserted by this method.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertParagraphBreak">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer InsertParagraphBreak ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer InsertParagraphBreak() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.InsertParagraphBreak" />
      <MemberSignature Language="VB.NET" Value="Public Function InsertParagraphBreak () As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ InsertParagraphBreak();" />
      <MemberSignature Language="F#" Value="member this.InsertParagraphBreak : unit -&gt; System.Windows.Documents.TextPointer" Usage="textPointer.InsertParagraphBreak " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fedf8-338">Inserts a paragraph break at the current position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-338">Inserts a paragraph break at the current position.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fedf8-339">A <see cref="T:System.Windows.Documents.TextPointer" /> to the beginning (<see cref="P:System.Windows.Documents.TextElement.ContentStart" />) of the new paragraph.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-339">A <see cref="T:System.Windows.Documents.TextPointer" /> to the beginning (<see cref="P:System.Windows.Documents.TextElement.ContentStart" />) of the new paragraph.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fedf8-340">現在の位置は、既存の内部がときに、このメソッドが呼び出された場合<xref:System.Windows.Documents.Paragraph>要素、既存の段落および任意のコンテンツが含まれていますが、現在の位置にある 2 つの段落に分割されます。</span><span class="sxs-lookup"><span data-stu-id="fedf8-340">If this method is called when the current position is inside of an existing <xref:System.Windows.Documents.Paragraph> element, the existing paragraph and any content it contains are split into two paragraphs at the current position.</span></span>  <span data-ttu-id="fedf8-341">現在の位置が既存の段落内にない場合、このメソッドを呼び出すと、新しい空の段落が挿入されます。</span><span class="sxs-lookup"><span data-stu-id="fedf8-341">If this method is called when the current position is not inside of an existing paragraph, a new, empty paragraph is inserted.</span></span>  <span data-ttu-id="fedf8-342">このメソッドが呼び出された場合、位置にある分割または段落を挿入するには適さない (内の現在の位置は、たとえば場合、<xref:System.Windows.Documents.Hyperlink>要素)、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="fedf8-342">If this method is called at a position unsuitable for splitting or inserting a paragraph (for example, if the current position is inside of a <xref:System.Windows.Documents.Hyperlink> element), an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="fedf8-343">This method is called on a position that cannot be split to accommodate a new paragraph, such as in the scope of a <see cref="T:System.Windows.Documents.Hyperlink" /> or <see cref="T:System.Windows.Documents.InlineUIContainer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-343">This method is called on a position that cannot be split to accommodate a new paragraph, such as in the scope of a <see cref="T:System.Windows.Documents.Hyperlink" /> or <see cref="T:System.Windows.Documents.InlineUIContainer" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="InsertTextInRun">
      <MemberSignature Language="C#" Value="public void InsertTextInRun (string textData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertTextInRun(string textData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.InsertTextInRun(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertTextInRun (textData As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertTextInRun(System::String ^ textData);" />
      <MemberSignature Language="F#" Value="member this.InsertTextInRun : string -&gt; unit" Usage="textPointer.InsertTextInRun textData" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Documents.ITextPointer.InsertTextInRun(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textData" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textData">
          <span data-ttu-id="fedf8-344">The text to insert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-344">The text to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fedf8-345">Inserts the specified text into the text <see cref="T:System.Windows.Documents.Run" /> at the current position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-345">Inserts the specified text into the text <see cref="T:System.Windows.Documents.Run" /> at the current position.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fedf8-346">場合、<xref:System.Windows.Documents.TextPointer>によってスコープではない、<xref:System.Windows.Documents.Run>要素、<xref:System.Windows.Documents.Run>と共に挿入されます、`textData`します。</span><span class="sxs-lookup"><span data-stu-id="fedf8-346">If the <xref:System.Windows.Documents.TextPointer> is not scoped by a <xref:System.Windows.Documents.Run> element, a <xref:System.Windows.Documents.Run> is inserted along with the `textData`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="fedf8-347">The current position is not within a <see cref="T:System.Windows.Documents.Run" /> element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-347">The current position is not within a <see cref="T:System.Windows.Documents.Run" /> element.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fedf8-348">
            <paramref name="textData" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-348">
              <paramref name="textData" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsAtInsertionPosition">
      <MemberSignature Language="C#" Value="public bool IsAtInsertionPosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAtInsertionPosition" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.IsAtInsertionPosition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAtInsertionPosition As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAtInsertionPosition { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAtInsertionPosition : bool" Usage="System.Windows.Documents.TextPointer.IsAtInsertionPosition" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Documents.ITextPointer.IsAtInsertionPosition</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fedf8-349">Gets a value that indicates whether the current position is an insertion position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-349">Gets a value that indicates whether the current position is an insertion position.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fedf8-350">
            <see langword="true" /> 場合、現在の位置が挿入位置です。それ以外の場合、<see langword="false" />します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-350">
              <see langword="true" /> if the current position is an insertion position; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fedf8-351">挿入位置とは、位置、関連するコンテンツの任意の意味ルールを損なうことがなく新しいコンテンツを追加することがあります。</span><span class="sxs-lookup"><span data-stu-id="fedf8-351">An insertion position is a position where new content may be added without breaking any semantic rules for the associated content.</span></span>  <span data-ttu-id="fedf8-352">実際には、挿入位置は、キャレットを配置する場所のコンテンツで任意の場所です。</span><span class="sxs-lookup"><span data-stu-id="fedf8-352">In practice, an insertion position is anywhere in content where a caret may be positioned.</span></span>  <span data-ttu-id="fedf8-353">有効な例<xref:System.Windows.Documents.TextPointer>挿入位置ではない位置は 2 つの隣接する間位置<xref:System.Windows.Documents.Paragraph>タグ (つまり、前の段落の終了タグと、次の段落の開始タグの間)。</span><span class="sxs-lookup"><span data-stu-id="fedf8-353">An example of a valid <xref:System.Windows.Documents.TextPointer> position that is not an insertion position is the position between two adjacent <xref:System.Windows.Documents.Paragraph> tags (that is, between the closing tag of the preceding paragraph and the opening tag of the next paragraph).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.TextPointer.GetInsertionPosition(System.Windows.Documents.LogicalDirection)" />
        <altmember cref="M:System.Windows.Documents.TextPointer.GetNextInsertionPosition(System.Windows.Documents.LogicalDirection)" />
      </Docs>
    </Member>
    <Member MemberName="IsAtLineStartPosition">
      <MemberSignature Language="C#" Value="public bool IsAtLineStartPosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAtLineStartPosition" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.IsAtLineStartPosition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAtLineStartPosition As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAtLineStartPosition { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAtLineStartPosition : bool" Usage="System.Windows.Documents.TextPointer.IsAtLineStartPosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fedf8-354">Gets a value that indicates whether the current position is at the beginning of a line.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-354">Gets a value that indicates whether the current position is at the beginning of a line.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fedf8-355">
            <see langword="true" /> 現在の位置が行の先頭にある場合それ以外の場合、<see langword="false" />します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-355">
              <see langword="true" /> if the current position is at the beginning of a line; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fedf8-356">場合、<xref:System.Windows.Documents.TextPointer>指すあいまいな位置では、たとえば、2 つの行の間行で指定された方向では、<xref:System.Windows.Documents.TextPointer.LogicalDirection%2A>プロパティが相対開始行として選択されています。</span><span class="sxs-lookup"><span data-stu-id="fedf8-356">If the <xref:System.Windows.Documents.TextPointer> points to an ambiguous position, for example, between two lines, the line in the direction specified by the <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> property is selected as the relative starting line.</span></span>  
  
 <span data-ttu-id="fedf8-357">このプロパティによって実行される操作は、有効なレイアウトに依存します。</span><span class="sxs-lookup"><span data-stu-id="fedf8-357">The operation performed by this property depends on a valid layout.</span></span>  <span data-ttu-id="fedf8-358">必要に応じて、このメソッドは、操作を続行する前に有効なレイアウトを自動的に再生成しようとします。</span><span class="sxs-lookup"><span data-stu-id="fedf8-358">When necessary, this method attempts to automatically regenerate a valid layout before proceeding with the operation.</span></span>  <span data-ttu-id="fedf8-359">レイアウトの再生成すると、比較的高価な操作を指定できます。</span><span class="sxs-lookup"><span data-stu-id="fedf8-359">Regenerating a layout can be a relatively expensive operation.</span></span>  <span data-ttu-id="fedf8-360">使用して、<xref:System.Windows.Documents.TextPointer.HasValidLayout%2A>レイアウトを再生成する操作を実行する前に有効なレイアウトを確認するプロパティ。</span><span class="sxs-lookup"><span data-stu-id="fedf8-360">Use the <xref:System.Windows.Documents.TextPointer.HasValidLayout%2A> property to check for a valid layout before performing operations that may regenerate the layout.</span></span>  <span data-ttu-id="fedf8-361">詳細については、「[Layout](~/docs/framework/wpf/advanced/layout.md)」 (レイアウト) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="fedf8-361">For more information, see [Layout](~/docs/framework/wpf/advanced/layout.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.TextPointer.IsAtLineStartPosition" />
      </Docs>
    </Member>
    <Member MemberName="IsInSameDocument">
      <MemberSignature Language="C#" Value="public bool IsInSameDocument (System.Windows.Documents.TextPointer textPosition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsInSameDocument(class System.Windows.Documents.TextPointer textPosition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.IsInSameDocument(System.Windows.Documents.TextPointer)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsInSameDocument (textPosition As TextPointer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsInSameDocument(System::Windows::Documents::TextPointer ^ textPosition);" />
      <MemberSignature Language="F#" Value="member this.IsInSameDocument : System.Windows.Documents.TextPointer -&gt; bool" Usage="textPointer.IsInSameDocument textPosition" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textPosition" Type="System.Windows.Documents.TextPointer" />
      </Parameters>
      <Docs>
        <param name="textPosition">
          <span data-ttu-id="fedf8-362">A <see cref="T:System.Windows.Documents.TextPointer" /> that specifies a position to compare to the current position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-362">A <see cref="T:System.Windows.Documents.TextPointer" /> that specifies a position to compare to the current position.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fedf8-363">Indicates whether the specified position is in the same text container as the current position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-363">Indicates whether the specified position is in the same text container as the current position.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fedf8-364">
            <see langword="true" /> if <paramref name="textPosition" /> indicates a position that is in the same text container as the current position; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-364">
              <see langword="true" /> if <paramref name="textPosition" /> indicates a position that is in the same text container as the current position; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fedf8-365">複数の関連するほとんどの操作<xref:System.Windows.Documents.TextPointer>インスタンスは、対象のインスタンスが同じテキスト コンテナーのスコープ内の位置を示している場合にのみ有効です。</span><span class="sxs-lookup"><span data-stu-id="fedf8-365">Most operations that involve multiple <xref:System.Windows.Documents.TextPointer> instances are only valid if the instances in question indicate positions that are in the same text container scope.</span></span>  <span data-ttu-id="fedf8-366">たとえば、<xref:System.Windows.Documents.TextPointer.CompareTo%2A>と<xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A>メソッドでは使用できません、<xref:System.Windows.Documents.TextPointer>を現在の位置に関連付けられているテキスト コンテナーの外部での位置。</span><span class="sxs-lookup"><span data-stu-id="fedf8-366">For example the <xref:System.Windows.Documents.TextPointer.CompareTo%2A> and <xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A> methods cannot be used with a <xref:System.Windows.Documents.TextPointer> to a position outside of the text container associated with the current position.</span></span>  <span data-ttu-id="fedf8-367">このメソッドを使用していることを確認、指定した<xref:System.Windows.Documents.TextPointer>はこのような操作の現在の位置に互換性があります。</span><span class="sxs-lookup"><span data-stu-id="fedf8-367">Use this method to verify that a specified <xref:System.Windows.Documents.TextPointer> is compatible with the current position for such operations.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fedf8-368">次の例では、このメソッドの使用を示します。</span><span class="sxs-lookup"><span data-stu-id="fedf8-368">The following example demonstrates a use for this method.</span></span>  <span data-ttu-id="fedf8-369">例では、<xref:System.Windows.Documents.TextPointer.IsInSameDocument%2A>指定したかどうかを確認する方法を<xref:System.Windows.Documents.TextPointer>他の指定した 2 つの間に配置された<xref:System.Windows.Documents.TextPointer>インスタンス状況と、すべての 3 つの位置が同じテキスト コンテナーに属していることの保証はありません。</span><span class="sxs-lookup"><span data-stu-id="fedf8-369">The example uses the <xref:System.Windows.Documents.TextPointer.IsInSameDocument%2A> method to check whether a specified <xref:System.Windows.Documents.TextPointer> is positioned between two other specified <xref:System.Windows.Documents.TextPointer> instances in a situation when there is no guarantee that all three positions belong to the same text container.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_IsInSameDocument](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_isinsamedocument)]
 [!code-vb[TextPointer_Snippets#_TextPointer_IsInSameDocument](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_isinsamedocument)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fedf8-370">
            <paramref name="textPosition" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-370">
              <paramref name="textPosition" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="LogicalDirection">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.LogicalDirection LogicalDirection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Documents.LogicalDirection LogicalDirection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.LogicalDirection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LogicalDirection As LogicalDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::LogicalDirection LogicalDirection { System::Windows::Documents::LogicalDirection get(); };" />
      <MemberSignature Language="F#" Value="member this.LogicalDirection : System.Windows.Documents.LogicalDirection" Usage="System.Windows.Documents.TextPointer.LogicalDirection" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Documents.ITextPointer.LogicalDirection</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.LogicalDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fedf8-371">Gets the logical direction associated with the current position which is used to disambiguate content associated with the current position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-371">Gets the logical direction associated with the current position which is used to disambiguate content associated with the current position.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fedf8-372">
            <see cref="T:System.Windows.Documents.LogicalDirection" />現在の位置に関連付けられている値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-372">The <see cref="T:System.Windows.Documents.LogicalDirection" /> value that is associated with the current position.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fedf8-373">このプロパティの使用方法の例として、<xref:System.Windows.Documents.LogicalDirection>の<xref:System.Windows.Documents.TextPointer>返される方法でテキストの 2 つの文字ヒットをヒット テストによって。</span><span class="sxs-lookup"><span data-stu-id="fedf8-373">As an example of how this property is used, the <xref:System.Windows.Documents.LogicalDirection> of the <xref:System.Windows.Documents.TextPointer> returned by a hit test method gives a hit that is between two characters of text.</span></span> <span data-ttu-id="fedf8-374">論理方向では、実際にヒットする 2 つの文字を指定します: 左または右。</span><span class="sxs-lookup"><span data-stu-id="fedf8-374">The logical direction specifies which of the two characters was actually hit—the left or the right.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Paragraph">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.Paragraph Paragraph { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.Paragraph Paragraph" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.Paragraph" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Paragraph As Paragraph" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::Paragraph ^ Paragraph { System::Windows::Documents::Paragraph ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Paragraph : System.Windows.Documents.Paragraph" Usage="System.Windows.Documents.TextPointer.Paragraph" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.Paragraph</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fedf8-375">Gets the paragraph that scopes the current position, if any.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-375">Gets the paragraph that scopes the current position, if any.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fedf8-376">
            <see cref="T:System.Windows.Documents.Paragraph" />スコープ、現在の位置となるまたは<see langword="null" />このような段落が存在しない場合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-376">The <see cref="T:System.Windows.Documents.Paragraph" /> that scopes the current position, or <see langword="null" /> if no such paragraph exists.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Documents.TextPointer.Parent" />
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyObject Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyObject Parent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DependencyObject ^ Parent { System::Windows::DependencyObject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.Windows.DependencyObject" Usage="System.Windows.Documents.TextPointer.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fedf8-377">Gets the logical parent that scopes the current position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-377">Gets the logical parent that scopes the current position.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fedf8-378">現在の位置をスコープとなる論理上の親。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-378">The logical parent that scopes the current position.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Documents.TextPointer.Paragraph" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="textPointer.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fedf8-379">This type or member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-379">This type or member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fedf8-380">The string that represents the object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fedf8-380">The string that represents the object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>