<Type Name="TextPointer" FullName="System.Windows.Documents.TextPointer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d374acbfa59bece9a23ff4841ba74263d0c6fa42" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TextPointer : System.Windows.Documents.ContentPosition" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TextPointer extends System.Windows.Documents.ContentPosition" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Documents.TextPointer" />
  <TypeSignature Language="VB.NET" Value="Public Class TextPointer&#xA;Inherits ContentPosition" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextPointer : System::Windows::Documents::ContentPosition" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Documents.ContentPosition</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="29c82-101">
        <see cref="T:System.Windows.Documents.FlowDocument" /> 内または <see cref="T:System.Windows.Controls.TextBlock" /> 内の位置を表します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="29c82-101">Represents a position within a <see cref="T:System.Windows.Documents.FlowDocument" /> or <see cref="T:System.Windows.Controls.TextBlock" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29c82-102"><xref:System.Windows.Documents.TextPointer>クラスは、次の用語を紹介します。</span><span class="sxs-lookup"><span data-stu-id="29c82-102">The <xref:System.Windows.Documents.TextPointer> class introduces the following terminology:</span></span>  
  
-   <span data-ttu-id="29c82-103">配置の本質的に、<xref:System.Windows.Documents.TextPointer>常を指します、*位置*コンテンツにします。</span><span class="sxs-lookup"><span data-stu-id="29c82-103">Position - Inherently, a <xref:System.Windows.Documents.TextPointer> always points to a *position* in content.</span></span>  <span data-ttu-id="29c82-104">このような位置のいずれかの分類、コンテンツ内の文字間またはフロー間でコンテンツ要素タグは、コンテンツの構造を定義します。</span><span class="sxs-lookup"><span data-stu-id="29c82-104">Such positions either fall between characters in the content, or between flow content element tags that define structure for the content.</span></span>  
  
-   <span data-ttu-id="29c82-105">現在の位置にあるため、<xref:System.Windows.Documents.TextPointer>常に、位置を示すためとで実行できる操作の多くは、<xref:System.Windows.Documents.TextPointer>によって示される現在の位置に対しては、 <xref:System.Windows.Documents.TextPointer>、によって示される位置を指す理にかなって、<xref:System.Windows.Documents.TextPointer>として、*現在位置*です。</span><span class="sxs-lookup"><span data-stu-id="29c82-105">Current Position - Because a <xref:System.Windows.Documents.TextPointer> always indicates a position, and because many of the operations that can be performed through a <xref:System.Windows.Documents.TextPointer> are relative to the position currently pointed to by the <xref:System.Windows.Documents.TextPointer>, it makes sense to simply refer to the position indicated by a <xref:System.Windows.Documents.TextPointer> as the *current position*.</span></span>  
  
-   <span data-ttu-id="29c82-106">挿入位置の*挿入位置*任意セマンティック コンテンツ規則に関連付けられている可能性がありますに、新しいコンテンツを追加する位置です。</span><span class="sxs-lookup"><span data-stu-id="29c82-106">Insertion Position - An *insertion position* is a position where new content may be added without breaking any semantic rules for the associated content.</span></span>  <span data-ttu-id="29c82-107">実際には、挿入位置は、キャレットを配置する場所のコンテンツで任意の場所です。</span><span class="sxs-lookup"><span data-stu-id="29c82-107">In practice, an insertion position is anywhere in content where a caret may be positioned.</span></span>  <span data-ttu-id="29c82-108">有効な例<xref:System.Windows.Documents.TextPointer>挿入位置ではない位置は 2 つの隣接する位置<xref:System.Windows.Documents.Paragraph>タグ (つまり、前の段落の終わりのタグと次の段落の開始タグの間で)。</span><span class="sxs-lookup"><span data-stu-id="29c82-108">An example of a valid <xref:System.Windows.Documents.TextPointer> position that is not an insertion position is the position between two adjacent <xref:System.Windows.Documents.Paragraph> tags (that is, between the closing tag of the preceding paragraph and the opening tag of the next paragraph).</span></span>  
  
-   <span data-ttu-id="29c82-109">目的で、シンボル<xref:System.Windows.Documents.TextPointer>記号に関連する操作では、次の文字と見なされます、*シンボル*:</span><span class="sxs-lookup"><span data-stu-id="29c82-109">Symbol - For the purposes of <xref:System.Windows.Documents.TextPointer> operations that involve symbols, any of the following is considered to be a *symbol*:</span></span>  
  
    -   <span data-ttu-id="29c82-110">開始タグまたは終了タグの<xref:System.Windows.Documents.TextElement>要素。</span><span class="sxs-lookup"><span data-stu-id="29c82-110">An opening or closing tag for a <xref:System.Windows.Documents.TextElement> element.</span></span>  
  
    -   <span data-ttu-id="29c82-111">A<xref:System.Windows.UIElement>要素内に含まれる、<xref:System.Windows.Documents.InlineUIContainer>または<xref:System.Windows.Documents.BlockUIContainer>です。</span><span class="sxs-lookup"><span data-stu-id="29c82-111">A <xref:System.Windows.UIElement> element contained within an <xref:System.Windows.Documents.InlineUIContainer> or <xref:System.Windows.Documents.BlockUIContainer>.</span></span>  <span data-ttu-id="29c82-112">このようなことを注意してください、<xref:System.Windows.UIElement>常に正確に 1 つの記号以外の場合は、追加のコンテンツまたはに含まれる要素としてカウントされますが、<xref:System.Windows.UIElement>シンボルとしてはカウントされません。</span><span class="sxs-lookup"><span data-stu-id="29c82-112">Note that such a <xref:System.Windows.UIElement> is always counted as exactly one symbol; any additional content or elements contained by the <xref:System.Windows.UIElement> are not counted as symbols.</span></span>  
  
    -   <span data-ttu-id="29c82-113">各 16 ビット[!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)]テキスト内で文字<xref:System.Windows.Documents.Run>要素。</span><span class="sxs-lookup"><span data-stu-id="29c82-113">Each 16-bit [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] character inside of a text <xref:System.Windows.Documents.Run> element.</span></span>  
  
-   <span data-ttu-id="29c82-114">テキスト コンテナー -*テキスト コンテナー*が最終的なフロー コンテンツの境界を形成する要素で指定された位置、<xref:System.Windows.Documents.TextPointer>テキスト コンテナー内に常にします。</span><span class="sxs-lookup"><span data-stu-id="29c82-114">Text Container - A *text container* is the element that forms the ultimate border for the flow content at hand; the position indicated by a <xref:System.Windows.Documents.TextPointer> always falls within a text container.</span></span>  <span data-ttu-id="29c82-115">現時点では、テキスト コンテナーがある必要があるか、<xref:System.Windows.Documents.FlowDocument>または<xref:System.Windows.Controls.TextBlock>です。</span><span class="sxs-lookup"><span data-stu-id="29c82-115">Currently, a text container must be either a <xref:System.Windows.Documents.FlowDocument> or a <xref:System.Windows.Controls.TextBlock>.</span></span>  <span data-ttu-id="29c82-116">一般に、操作の間で<xref:System.Windows.Documents.TextPointer>異なるテキスト コンテナー内のインスタンスはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="29c82-116">Generally speaking, operations between <xref:System.Windows.Documents.TextPointer> instances in different text containers are not supported.</span></span>  
  
-   <span data-ttu-id="29c82-117">ドキュメントのテキスト コンテナー内のコンテンツと呼びます、*ドキュメント*など、<xref:System.Windows.Documents.TextPointer.IsInSameDocument%2A>メソッドおよび<xref:System.Windows.Documents.TextPointer.DocumentStart%2A>と<xref:System.Windows.Documents.TextPointer.DocumentEnd%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="29c82-117">Document - The content in a text container is referred to as a *document*, as in the <xref:System.Windows.Documents.TextPointer.IsInSameDocument%2A> method and the <xref:System.Windows.Documents.TextPointer.DocumentStart%2A> and <xref:System.Windows.Documents.TextPointer.DocumentEnd%2A> properties.</span></span>  
  
 <span data-ttu-id="29c82-118"><xref:System.Windows.Documents.TextPointer>クラスは、走査およびで表されるコンテンツの操作を容易に[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]フロー コンテンツ要素です。 このような要素がから派生する一般に、<xref:System.Windows.Documents.TextElement>です。</span><span class="sxs-lookup"><span data-stu-id="29c82-118">The <xref:System.Windows.Documents.TextPointer> class is intended to facilitate traversal and manipulation of content that is represented by [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] flow content elements; in general, such elements derive from <xref:System.Windows.Documents.TextElement>.</span></span>  <span data-ttu-id="29c82-119">一部の操作を<xref:System.Windows.Documents.TextPointer>を容易に、次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="29c82-119">Some of the operations that <xref:System.Windows.Documents.TextPointer> facilitates include the following:</span></span>  
  
-   <span data-ttu-id="29c82-120">2 番目の指定した位置の現在位置を示す序数に基づく比較を実行します。</span><span class="sxs-lookup"><span data-stu-id="29c82-120">Perform an ordinal comparison of the current position with a second specified position.</span></span>  <span data-ttu-id="29c82-121">参照してください、<xref:System.Windows.Documents.TextPointer.CompareTo%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="29c82-121">See the <xref:System.Windows.Documents.TextPointer.CompareTo%2A> method.</span></span>  
  
-   <span data-ttu-id="29c82-122">指定した方向で現在の位置に隣接するコンテンツの種類を決定します。</span><span class="sxs-lookup"><span data-stu-id="29c82-122">Determine the type of content adjacent to the current position in a specified direction.</span></span>  <span data-ttu-id="29c82-123">参照してください、<xref:System.Windows.Documents.TextPointer.GetPointerContext%2A>メソッドと<xref:System.Windows.Documents.TextPointerContext>列挙します。</span><span class="sxs-lookup"><span data-stu-id="29c82-123">See the <xref:System.Windows.Documents.TextPointer.GetPointerContext%2A> method and <xref:System.Windows.Documents.TextPointerContext> enumeration.</span></span>  
  
-   <span data-ttu-id="29c82-124">取得、<xref:System.Windows.Documents.TextElement>スコープまたは現在の位置に隣接しています。</span><span class="sxs-lookup"><span data-stu-id="29c82-124">Get the <xref:System.Windows.Documents.TextElement> that scopes or is adjacent to the current position.</span></span>  <span data-ttu-id="29c82-125">参照してください<xref:System.Windows.Documents.Paragraph>と<xref:System.Windows.Documents.TextPointer.GetAdjacentElement%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="29c82-125">See <xref:System.Windows.Documents.Paragraph> and the <xref:System.Windows.Documents.TextPointer.GetAdjacentElement%2A> method.</span></span>  
  
-   <span data-ttu-id="29c82-126">現在のドキュメントのスコープとなるテキスト コンテナーを取得します。</span><span class="sxs-lookup"><span data-stu-id="29c82-126">Get the text container that scopes the current document.</span></span>  <span data-ttu-id="29c82-127"><xref:System.Windows.Documents.TextPointer.Parent%2A> プロパティを参照してください。</span><span class="sxs-lookup"><span data-stu-id="29c82-127">See the <xref:System.Windows.Documents.TextPointer.Parent%2A> property.</span></span>  
  
-   <span data-ttu-id="29c82-128">指定の数の文字の直前または直後の現在の位置を取得します。</span><span class="sxs-lookup"><span data-stu-id="29c82-128">Get a specified number of characters preceding or following the current position.</span></span>  <span data-ttu-id="29c82-129">参照してください、<xref:System.Windows.Documents.TextPointer.GetTextInRun%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="29c82-129">See the <xref:System.Windows.Documents.TextPointer.GetTextInRun%2A> method.</span></span>  
  
-   <span data-ttu-id="29c82-130">現在の位置にある文字の文字列を挿入します。</span><span class="sxs-lookup"><span data-stu-id="29c82-130">Insert a string of characters at the current position.</span></span>  <span data-ttu-id="29c82-131">参照してください、<xref:System.Windows.Documents.TextPointer.InsertTextInRun%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="29c82-131">See the <xref:System.Windows.Documents.TextPointer.InsertTextInRun%2A> method.</span></span>  
  
-   <span data-ttu-id="29c82-132">コンテンツ内の行の境界を検索します。</span><span class="sxs-lookup"><span data-stu-id="29c82-132">Find line boundaries in content.</span></span>  <span data-ttu-id="29c82-133">参照してください、<xref:System.Windows.Documents.TextPointer.GetLineStartPosition%2A>メソッドおよび<xref:System.Windows.Documents.TextPointer.IsAtLineStartPosition%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="29c82-133">See the <xref:System.Windows.Documents.TextPointer.GetLineStartPosition%2A> method and <xref:System.Windows.Documents.TextPointer.IsAtLineStartPosition%2A> property.</span></span>  
  
-   <span data-ttu-id="29c82-134">間で変換<xref:System.Windows.Documents.TextPointer>の位置とシンボルは、コンテンツにオフセットします。</span><span class="sxs-lookup"><span data-stu-id="29c82-134">Translate between <xref:System.Windows.Documents.TextPointer> positions and symbol offsets into content.</span></span>  <span data-ttu-id="29c82-135">参照してください、<xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A>と<xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="29c82-135">See the <xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A> and <xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A> methods.</span></span>  
  
-   <span data-ttu-id="29c82-136">間で変換することによってビジュアル ヒット テストの実行、<xref:System.Windows.Documents.TextPointer>位置と<xref:System.Windows.Point>相対座標を表すです。</span><span class="sxs-lookup"><span data-stu-id="29c82-136">Perform visual hit testing by translating between a <xref:System.Windows.Documents.TextPointer> position and a <xref:System.Windows.Point> representing relative coordinates.</span></span>  
  
-   <span data-ttu-id="29c82-137">近くの挿入位置を見つけます。 または、現在の位置が、挿入位置であるかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="29c82-137">Find a nearby insertion position, or check whether the current position is an insertion position.</span></span>  <span data-ttu-id="29c82-138">参照してください、<xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A>と<xref:System.Windows.Documents.TextPointer.GetNextInsertionPosition%2A>メソッドおよび<xref:System.Windows.Documents.TextPointer.IsAtInsertionPosition%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="29c82-138">See the <xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A> and <xref:System.Windows.Documents.TextPointer.GetNextInsertionPosition%2A> methods and the <xref:System.Windows.Documents.TextPointer.IsAtInsertionPosition%2A> property.</span></span>  
  
 <span data-ttu-id="29c82-139">位置と<xref:System.Windows.Documents.TextPointer.LogicalDirection%2A>によって示される、<xref:System.Windows.Documents.TextPointer>オブジェクトは変更できません。</span><span class="sxs-lookup"><span data-stu-id="29c82-139">The position and <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> indicated by a <xref:System.Windows.Documents.TextPointer> object are immutable.</span></span>  <span data-ttu-id="29c82-140">コンテンツの編集または変更、によって示される位置の場合、<xref:System.Windows.Documents.TextPointer>前後のテキストに対して相対的変わらないではなくコンテンツの先頭からその位置のオフセットは調整コンテンツ内の新しい相対位置を反映するようにします。</span><span class="sxs-lookup"><span data-stu-id="29c82-140">When content is edited or modified, the position indicated by a <xref:System.Windows.Documents.TextPointer> does not change relative to the surrounding text; rather the offset of that position from the beginning of content is adjusted correspondingly to reflect the new relative position in content.</span></span>  <span data-ttu-id="29c82-141">たとえば、<xref:System.Windows.Documents.TextPointer>を示すコンテンツを挿入または削除する前に、または段落の後のときにもその段落の先頭を指す特定の段落の先頭の位置が続行されます。</span><span class="sxs-lookup"><span data-stu-id="29c82-141">For example, a <xref:System.Windows.Documents.TextPointer> that indicates a position at the beginning of a given paragraph continues to point to the beginning of that paragraph even when content is inserted or deleted before or after the paragraph.</span></span>  
  
 <span data-ttu-id="29c82-142"><xref:System.Windows.Documents.TextPointer>クラスは、パブリック コンス トラクターを提供しません。</span><span class="sxs-lookup"><span data-stu-id="29c82-142">The <xref:System.Windows.Documents.TextPointer> class does not provide any public constructors.</span></span>  <span data-ttu-id="29c82-143">インスタンス<xref:System.Windows.Documents.TextPointer>プロパティまたはその他のオブジェクトのメソッドを使用して作成された (その他を含む<xref:System.Windows.Documents.TextPointer>オブジェクト)。</span><span class="sxs-lookup"><span data-stu-id="29c82-143">An instance of <xref:System.Windows.Documents.TextPointer> is created by using properties or methods of other objects (including other <xref:System.Windows.Documents.TextPointer> objects).</span></span> <span data-ttu-id="29c82-144">次の一覧のメソッドとプロパティを作成して返す例をいくつかの提供、<xref:System.Windows.Documents.TextPointer>です。</span><span class="sxs-lookup"><span data-stu-id="29c82-144">The following list provides a few examples of methods and properties that create and return a <xref:System.Windows.Documents.TextPointer>.</span></span>  <span data-ttu-id="29c82-145">この一覧は完全ではありません。</span><span class="sxs-lookup"><span data-stu-id="29c82-145">This list is not exhaustive:</span></span>  
  
-   <span data-ttu-id="29c82-146"><xref:System.Windows.Documents.TextRange>:<xref:System.Windows.Documents.TextRange.Start%2A>と<xref:System.Windows.Documents.TextRange.End%2A>です。</span><span class="sxs-lookup"><span data-stu-id="29c82-146">From a <xref:System.Windows.Documents.TextRange>: <xref:System.Windows.Documents.TextRange.Start%2A> and <xref:System.Windows.Documents.TextRange.End%2A>.</span></span>  
  
-   <span data-ttu-id="29c82-147"><xref:System.Windows.Documents.TextElement>: <xref:System.Windows.Documents.TextElement.ContentStart%2A>、 <xref:System.Windows.Documents.TextElement.ContentEnd%2A>、 <xref:System.Windows.Documents.TextElement.ElementStart%2A>、および<xref:System.Windows.Documents.TextElement.ElementEnd%2A>です。</span><span class="sxs-lookup"><span data-stu-id="29c82-147">From a <xref:System.Windows.Documents.TextElement>:  <xref:System.Windows.Documents.TextElement.ContentStart%2A>, <xref:System.Windows.Documents.TextElement.ContentEnd%2A>, <xref:System.Windows.Documents.TextElement.ElementStart%2A>, and <xref:System.Windows.Documents.TextElement.ElementEnd%2A>.</span></span>  
  
-   <span data-ttu-id="29c82-148"><xref:System.Windows.Controls.TextBlock> (テキスト コンテナー): <xref:System.Windows.Controls.TextBlock.ContentStart%2A>、 <xref:System.Windows.Controls.TextBlock.ContentEnd%2A>、および<xref:System.Windows.Controls.TextBlock.GetPositionFromPoint%2A>です。</span><span class="sxs-lookup"><span data-stu-id="29c82-148">From a <xref:System.Windows.Controls.TextBlock> (text container): <xref:System.Windows.Controls.TextBlock.ContentStart%2A>, <xref:System.Windows.Controls.TextBlock.ContentEnd%2A>, and <xref:System.Windows.Controls.TextBlock.GetPositionFromPoint%2A>.</span></span>  
  
-   <span data-ttu-id="29c82-149"><xref:System.Windows.Documents.FlowDocument> (テキスト コンテナー): <xref:System.Windows.Documents.FlowDocument.ContentStart%2A>、および <xref:System.Windows.Documents.FlowDocument.ContentEnd%2A></span><span class="sxs-lookup"><span data-stu-id="29c82-149">From a <xref:System.Windows.Documents.FlowDocument> (text container): <xref:System.Windows.Documents.FlowDocument.ContentStart%2A>, and <xref:System.Windows.Documents.FlowDocument.ContentEnd%2A></span></span>  
  
-   <span data-ttu-id="29c82-150">既存の<xref:System.Windows.Documents.TextPointer>: <xref:System.Windows.Documents.TextPointer.DocumentStart%2A>、 <xref:System.Windows.Documents.TextPointer.DocumentEnd%2A>、 <xref:System.Windows.Documents.TextPointer.GetNextInsertionPosition%2A>、および<xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A>です。</span><span class="sxs-lookup"><span data-stu-id="29c82-150">From an existing <xref:System.Windows.Documents.TextPointer>: <xref:System.Windows.Documents.TextPointer.DocumentStart%2A>, <xref:System.Windows.Documents.TextPointer.DocumentEnd%2A>, <xref:System.Windows.Documents.TextPointer.GetNextInsertionPosition%2A>, and <xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29c82-151">次の例で使用する方法、 <xref:System.Windows.Documents.TextPointer> 1 つ目の内部でだけの位置を検索する<xref:System.Windows.Documents.Run>指定されたテキスト コンテナー内の要素。</span><span class="sxs-lookup"><span data-stu-id="29c82-151">The following example demonstrates how to use a <xref:System.Windows.Documents.TextPointer> to find a position just inside of the first <xref:System.Windows.Documents.Run> element in a specified text container.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_TextPointer1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_textpointer1)]
 [!code-vb[TextPointer_Snippets#_TextPointer_TextPointer1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_textpointer1)]  
  
 <span data-ttu-id="29c82-152">次の例を使用して単純検索アルゴリズムを実装する<xref:System.Windows.Documents.TextPointer>機能します。</span><span class="sxs-lookup"><span data-stu-id="29c82-152">The following example implements a simplistic find algorithm using <xref:System.Windows.Documents.TextPointer> facilities.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_TextPointer2](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_textpointer2)]
 [!code-vb[TextPointer_Snippets#_TextPointer_TextPointer2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_textpointer2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Documents.TextRange" />
    <altmember cref="T:System.Windows.Documents.TextPointerContext" />
    <altmember cref="T:System.Windows.Documents.TextElement" />
  </Docs>
  <Members>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (System.Windows.Documents.TextPointer position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 CompareTo(class System.Windows.Documents.TextPointer position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.CompareTo(System.Windows.Documents.TextPointer)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (position As TextPointer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int CompareTo(System::Windows::Documents::TextPointer ^ position);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Windows.Documents.TextPointer" />
      </Parameters>
      <Docs>
        <param name="position">
          <span data-ttu-id="29c82-153">現在の位置と比較する位置を指定する <see cref="T:System.Windows.Documents.TextPointer" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-153">A <see cref="T:System.Windows.Documents.TextPointer" /> that specifies a position to compare to the current position.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29c82-154">現在の <see cref="T:System.Windows.Documents.TextPointer" /> と指定された 2 つ目の <see cref="T:System.Windows.Documents.TextPointer" /> によって指定される位置の順序を比較します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-154">Performs an ordinal comparison between the positions specified by the current <see cref="T:System.Windows.Documents.TextPointer" /> and a second specified <see cref="T:System.Windows.Documents.TextPointer" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="29c82-155">現在の <see cref="T:System.Windows.Documents.TextPointer" /> が <paramref name="position" /> の前である場合は –1。両位置が同じ場合は 0。現在の <see cref="T:System.Windows.Documents.TextPointer" /> が <paramref name="position" /> の後である場合は +1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-155">–1 if the current <see cref="T:System.Windows.Documents.TextPointer" /> precedes <paramref name="position" />; 0 if the locations are the same; +1 if the current <see cref="T:System.Windows.Documents.TextPointer" /> follows <paramref name="position" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29c82-156">値-1 は、現在の位置が指定されていることを示します<xref:System.Windows.Documents.TextPointer>によって指定された位置の前に`position`です。</span><span class="sxs-lookup"><span data-stu-id="29c82-156">A value of –1 indicates that the position specified by the current <xref:System.Windows.Documents.TextPointer> precedes the position specified by `position`.</span></span>  <span data-ttu-id="29c82-157">値 0 は、指定された位置が等しいことを示します。</span><span class="sxs-lookup"><span data-stu-id="29c82-157">A value of 0 indicates that the indicated positions are equal.</span></span>  <span data-ttu-id="29c82-158">+1 の正の値は、現在の位置が指定されていることを示します<xref:System.Windows.Documents.TextPointer>によって指定された位置に依存して`position`です。</span><span class="sxs-lookup"><span data-stu-id="29c82-158">A value of positive +1 indicates that the position specified by the current <xref:System.Windows.Documents.TextPointer> follows the position specified by `position`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29c82-159">次の例では、このメソッドの使用を示します。</span><span class="sxs-lookup"><span data-stu-id="29c82-159">The following example demonstrates a use for this method.</span></span>  <span data-ttu-id="29c82-160">例では、<xref:System.Windows.Documents.TextPointer.CompareTo%2A>メソッドを組み合わせて使用、<xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A>メソッドを指定したかどうかをテストする<xref:System.Windows.Documents.TextElement>が空です。</span><span class="sxs-lookup"><span data-stu-id="29c82-160">In the example, the <xref:System.Windows.Documents.TextPointer.CompareTo%2A> method is used in conjunction with the <xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A> method to test whether a specified <xref:System.Windows.Documents.TextElement> is empty.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetInsertionPosition](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_getinsertionposition)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetInsertionPosition](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_getinsertionposition)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="29c82-161">
            <paramref name="position" /> は、現在の位置に関連付けられているテキスト コンテナー外部の位置を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-161">
              <paramref name="position" /> specifies a position outside of the text container associated with the current position.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Documents.TextPointer.IsInSameDocument(System.Windows.Documents.TextPointer)" />
      </Docs>
    </Member>
    <Member MemberName="DeleteTextInRun">
      <MemberSignature Language="C#" Value="public int DeleteTextInRun (int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 DeleteTextInRun(int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.DeleteTextInRun(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function DeleteTextInRun (count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int DeleteTextInRun(int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="count">
          <span data-ttu-id="29c82-162">現在の位置から削除する文字数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-162">The number of characters to delete, starting at the current position.</span>
          </span>
          <span data-ttu-id="29c82-163">現在の位置より後の文字を削除する場合は正の値を指定します。現在の位置より前の文字を削除する場合は負の値を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-163">Specify a positive value to delete characters that follow the current position; specify a negative value to delete characters that precede the current position.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29c82-164">現在の <see cref="T:System.Windows.Documents.TextPointer" /> で示される位置から指定された文字数を削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-164">Deletes the specified number of characters from the position indicated by the current <see cref="T:System.Windows.Documents.TextPointer" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="29c82-165">実際に削除された文字数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-165">The number of characters actually deleted.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29c82-166">現在の位置の後の文字を削除するのには正の値を指定 (としてで<xref:System.Windows.Documents.LogicalDirection.Forward?displayProperty=nameWithType>); の現在の位置を前にある文字を削除するのには負の値を指定 (としてで<xref:System.Windows.Documents.LogicalDirection.Backward?displayProperty=nameWithType>)。</span><span class="sxs-lookup"><span data-stu-id="29c82-166">Specify a positive value to delete characters that follow the current position (as in <xref:System.Windows.Documents.LogicalDirection.Forward?displayProperty=nameWithType>); specify a negative value to delete characters that precede the current position (as in <xref:System.Windows.Documents.LogicalDirection.Backward?displayProperty=nameWithType>).</span></span>  
  
 <span data-ttu-id="29c82-167">実際に削除された文字数で指定された数よりも少ない可能性があります`count`です。</span><span class="sxs-lookup"><span data-stu-id="29c82-167">The number of characters actually deleted may be less than the number specified by `count`.</span></span>  <span data-ttu-id="29c82-168">これは、ケースで、`count`を削除する存在より多くの文字を指定します。</span><span class="sxs-lookup"><span data-stu-id="29c82-168">This happens in cases where `count` specifies more characters than exist to be deleted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="29c82-169">テキストが許可されない位置でメソッドが呼び出されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-169">The method is called at a position where text is not allowed.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Windows.Documents.TextPointer.GetTextInRun" />
        <altmember cref="M:System.Windows.Documents.TextPointer.InsertTextInRun(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="DocumentEnd">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer DocumentEnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.TextPointer DocumentEnd" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.DocumentEnd" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DocumentEnd As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::TextPointer ^ DocumentEnd { System::Windows::Documents::TextPointer ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="29c82-170">現在の位置に関連付けられているテキスト コンテナーのコンテンツの末尾にある <see cref="T:System.Windows.Documents.TextPointer" /> を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-170">Gets a <see cref="T:System.Windows.Documents.TextPointer" /> at the end of content in the text container associated with the current position.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="29c82-171">現在の位置に関連付けられているテキスト コンテナーのコンテンツの末尾にある <see cref="T:System.Windows.Documents.TextPointer" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-171">A <see cref="T:System.Windows.Documents.TextPointer" /> at the end of content in the text container associated with the current position.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29c82-172"><xref:System.Windows.Documents.TextPointer.Parent%2A>の返された<xref:System.Windows.Documents.TextPointer>テキスト コンテナーでは常に (<xref:System.Windows.Controls.TextBlock>または<xref:System.Windows.Documents.FlowDocument>) ではなく、<xref:System.Windows.Documents.TextElement>です。</span><span class="sxs-lookup"><span data-stu-id="29c82-172">The <xref:System.Windows.Documents.TextPointer.Parent%2A> for the returned <xref:System.Windows.Documents.TextPointer> is always a text container (<xref:System.Windows.Controls.TextBlock> or <xref:System.Windows.Documents.FlowDocument>), rather than a <xref:System.Windows.Documents.TextElement>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.TextPointer.DocumentStart" />
      </Docs>
    </Member>
    <Member MemberName="DocumentStart">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer DocumentStart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.TextPointer DocumentStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.DocumentStart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DocumentStart As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::TextPointer ^ DocumentStart { System::Windows::Documents::TextPointer ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="29c82-173">現在の位置に関連付けられているテキスト コンテナーのコンテンツの先頭にある <see cref="T:System.Windows.Documents.TextPointer" /> を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-173">Gets a <see cref="T:System.Windows.Documents.TextPointer" /> at the beginning of content in the text container associated with the current position.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="29c82-174">現在の位置に関連付けられているテキスト コンテナーのコンテンツの先頭にある <see cref="T:System.Windows.Documents.TextPointer" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-174">A <see cref="T:System.Windows.Documents.TextPointer" /> at the beginning of content in the text container associated with the current position.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29c82-175">他の位置への相対オフセットで作業のベースライン位置として、このプロパティによって返される位置を使用します。</span><span class="sxs-lookup"><span data-stu-id="29c82-175">Use the position returned by this property as a baseline position from which to work with relative offsets to other positions.</span></span>  <span data-ttu-id="29c82-176"><xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A>と<xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A>メソッドの位置と位置の間で変換する方法を提供する数分オフセットします。</span><span class="sxs-lookup"><span data-stu-id="29c82-176">The <xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A> and <xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A> methods provide a way to translate between positions and position offsets.</span></span>  
  
 <span data-ttu-id="29c82-177"><xref:System.Windows.Documents.TextPointer.Parent%2A>の返された<xref:System.Windows.Documents.TextPointer>テキスト コンテナーでは常に (<xref:System.Windows.Controls.TextBlock>または<xref:System.Windows.Documents.FlowDocument>) ではなく、<xref:System.Windows.Documents.TextElement>です。</span><span class="sxs-lookup"><span data-stu-id="29c82-177">The <xref:System.Windows.Documents.TextPointer.Parent%2A> for the returned <xref:System.Windows.Documents.TextPointer> is always a text container (<xref:System.Windows.Controls.TextBlock> or <xref:System.Windows.Documents.FlowDocument>), rather than a <xref:System.Windows.Documents.TextElement>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.TextPointer.DocumentEnd" />
      </Docs>
    </Member>
    <Member MemberName="GetAdjacentElement">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyObject GetAdjacentElement (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.DependencyObject GetAdjacentElement(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetAdjacentElement(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAdjacentElement (direction As LogicalDirection) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::DependencyObject ^ GetAdjacentElement(System::Windows::Documents::LogicalDirection direction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction">
          <span data-ttu-id="29c82-178">隣接する要素を検索する論理方向を指定する <see cref="T:System.Windows.Documents.LogicalDirection" /> 値のいずれか。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-178">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to search for an adjacent element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29c82-179">指定された論理方向で現在の <see cref="T:System.Windows.Documents.TextPointer" /> に隣接する要素を返します (存在する場合)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-179">Returns the element, if any, that borders the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified logical direction.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="29c82-180">指定した <paramref name="direction" /> の隣接する要素。隣接する要素が存在しない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-180">The adjacent element in the specified <paramref name="direction" />, or <see langword="null" /> if no adjacent element exists.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29c82-181">返される要素は、通常、<xref:System.Windows.Documents.TextElement>です。</span><span class="sxs-lookup"><span data-stu-id="29c82-181">The returned element is typically a <xref:System.Windows.Documents.TextElement>.</span></span>  <span data-ttu-id="29c82-182">A<xref:System.Windows.UIElement>場合、返されることができます、<xref:System.Windows.Documents.TextPointer>内の位置を示す、<xref:System.Windows.Documents.BlockUIContainer>要素または<xref:System.Windows.Documents.InlineUIContainer>要素。</span><span class="sxs-lookup"><span data-stu-id="29c82-182">A <xref:System.Windows.UIElement> can be returned when the <xref:System.Windows.Documents.TextPointer> indicates a position inside a <xref:System.Windows.Documents.BlockUIContainer> element or an <xref:System.Windows.Documents.InlineUIContainer> element.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.TextPointer.Parent" />
      </Docs>
    </Member>
    <Member MemberName="GetCharacterRect">
      <MemberSignature Language="C#" Value="public System.Windows.Rect GetCharacterRect (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Rect GetCharacterRect(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetCharacterRect(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCharacterRect (direction As LogicalDirection) As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Rect GetCharacterRect(System::Windows::Documents::LogicalDirection direction);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Documents.ITextPointer.GetCharacterRect(System.Windows.Documents.LogicalDirection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction">
          <span data-ttu-id="29c82-183">コンテンツの境界ボックスを検索する論理方向を指定する <see cref="T:System.Windows.Documents.LogicalDirection" /> 値のいずれか。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-183">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to find a content bounding box.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29c82-184">指定した論理方向で現在の <see cref="T:System.Windows.Rect" /> に隣接するコンテンツの境界ボックス (<see cref="T:System.Windows.Documents.TextPointer" />) を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-184">Returns a bounding box (<see cref="T:System.Windows.Rect" />) for content that borders the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified logical direction.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="29c82-185">指定した方向で現在の <see cref="T:System.Windows.Documents.TextPointer" /> に隣接するコンテンツの境界ボックス。現在の有効なレイアウト情報を利用できない場合は <see cref="P:System.Windows.Rect.Empty" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-185">A bounding box for content that borders the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified direction, or <see cref="P:System.Windows.Rect.Empty" /> if current, valid layout information is unavailable.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29c82-186"><xref:System.Windows.Documents.TextElement> エッジでは、このメソッドのためのコンテンツは考慮されません。</span><span class="sxs-lookup"><span data-stu-id="29c82-186"><xref:System.Windows.Documents.TextElement> edges are not considered content for the purposes of this method.</span></span>  <span data-ttu-id="29c82-187">場合、<xref:System.Windows.Documents.TextPointer>前に位置付けられます、<xref:System.Windows.Documents.TextElement>エッジ、戻り値は、次の境界ボックスではない<xref:System.Windows.Documents.TextElement>指定した方向にコンテンツ。</span><span class="sxs-lookup"><span data-stu-id="29c82-187">If the <xref:System.Windows.Documents.TextPointer> is positioned before a <xref:System.Windows.Documents.TextElement> edge, the return value is a bounding box for the next non-<xref:System.Windows.Documents.TextElement> content in the specified direction.</span></span>  <span data-ttu-id="29c82-188">ゼロ幅、指定された方向にコンテンツがないかどうかは<xref:System.Windows.Rect>と共に、前のコンテンツの高さに一致する高さが返されます。</span><span class="sxs-lookup"><span data-stu-id="29c82-188">If there is no content in the specified direction, a zero-width <xref:System.Windows.Rect> is returned with a height matching the height of any preceding content.</span></span>  
  
 <span data-ttu-id="29c82-189">このメソッドによって実行される操作は、有効なレイアウトによって異なります。</span><span class="sxs-lookup"><span data-stu-id="29c82-189">The operation performed by this method depends on a valid layout.</span></span>  <span data-ttu-id="29c82-190">必要に応じて、このメソッドは、操作を続行する前に有効なレイアウトを自動的に再生成しようとします。</span><span class="sxs-lookup"><span data-stu-id="29c82-190">When necessary, this method attempts to automatically regenerate a valid layout before proceeding with the operation.</span></span>  <span data-ttu-id="29c82-191">レイアウトを再生成すると、比較的コストのかかる操作を指定できます。</span><span class="sxs-lookup"><span data-stu-id="29c82-191">Regenerating a layout can be a relatively expensive operation.</span></span>  <span data-ttu-id="29c82-192">使用して、<xref:System.Windows.Documents.TextPointer.HasValidLayout%2A>レイアウトを再生成する操作を実行する前に有効なレイアウトを確認するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="29c82-192">Use the <xref:System.Windows.Documents.TextPointer.HasValidLayout%2A> property to check for a valid layout before performing operations that may regenerate the layout.</span></span>  <span data-ttu-id="29c82-193">詳細については、次を参照してください。[レイアウト](~/docs/framework/wpf/advanced/layout.md)です。</span><span class="sxs-lookup"><span data-stu-id="29c82-193">For more information, see [Layout](~/docs/framework/wpf/advanced/layout.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.TextPointer.HasValidLayout" />
      </Docs>
    </Member>
    <Member MemberName="GetInsertionPosition">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer GetInsertionPosition (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer GetInsertionPosition(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetInsertionPosition(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInsertionPosition (direction As LogicalDirection) As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ GetInsertionPosition(System::Windows::Documents::LogicalDirection direction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction">
          <span data-ttu-id="29c82-194">最も近い挿入位置を検索する論理方向を指定する <see cref="T:System.Windows.Documents.LogicalDirection" /> 値のいずれか。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-194">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to search for the closest insertion position.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29c82-195">指定した論理方向の最も近い挿入位置への <see cref="T:System.Windows.Documents.TextPointer" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-195">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the closest insertion position in the specified logical direction.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="29c82-196">指定した方向の最も近い挿入位置への <see cref="T:System.Windows.Documents.TextPointer" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-196">A <see cref="T:System.Windows.Documents.TextPointer" /> to the closest insertion position in the specified direction.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29c82-197">挿入位置は、任意セマンティック コンテンツ規則に関連付けられている可能性がありますに、新しいコンテンツを追加する位置です。</span><span class="sxs-lookup"><span data-stu-id="29c82-197">An insertion position is a position where new content may be added without breaking any semantic rules for the associated content.</span></span>  <span data-ttu-id="29c82-198">実際には、挿入位置は、キャレットを配置する場所のコンテンツで任意の場所です。</span><span class="sxs-lookup"><span data-stu-id="29c82-198">In practice, an insertion position is anywhere in content where a caret may be positioned.</span></span>  <span data-ttu-id="29c82-199">有効な例<xref:System.Windows.Documents.TextPointer>挿入位置ではない位置は 2 つの隣接する位置<xref:System.Windows.Documents.Paragraph>タグ (つまり、前の段落の終わりのタグと次の段落の開始タグの間で)。</span><span class="sxs-lookup"><span data-stu-id="29c82-199">An example of a valid <xref:System.Windows.Documents.TextPointer> position that is not an insertion position is the position between two adjacent <xref:System.Windows.Documents.Paragraph> tags (that is, between the closing tag of the preceding paragraph and the opening tag of the next paragraph).</span></span>  
  
 <span data-ttu-id="29c82-200">場合、<xref:System.Windows.Documents.TextPointer>既に、有効な挿入位置が、終了タグを指す空でない書式シーケンスのすぐ後ろに指定した方向にその位置の<xref:System.Windows.Documents.TextPointer>これによって返されるメソッドは、書式設定のシーケンスの終了直後に挿入位置を指すに調整します。</span><span class="sxs-lookup"><span data-stu-id="29c82-200">If the <xref:System.Windows.Documents.TextPointer> already points to a valid insertion position, but the closing tag for a non-empty formatting sequence directly follows that position in the given direction, then the <xref:System.Windows.Documents.TextPointer> returned by this method is adjusted to point to the insertion position just after the close of the formatting sequence.</span></span> <span data-ttu-id="29c82-201">たとえば、マークアップ シーケンス`<Bold>a</Bold>b`です。</span><span class="sxs-lookup"><span data-stu-id="29c82-201">For example, consider the markup sequence `<Bold>a</Bold>b`.</span></span> <span data-ttu-id="29c82-202">文字の間の 2 つのカーソル位置があることに注意してください`a`と`b`: いずれかの終わりの前にある`Bold`タグとに 1 つ`Bold`タグ。</span><span class="sxs-lookup"><span data-stu-id="29c82-202">Note that there are two insertion positions between the letters `a` and `b` — one that precedes the closing `Bold` tag, and one directly following the closing `Bold` tag.</span></span> <span data-ttu-id="29c82-203">場合<xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A>で呼び出されると、<xref:System.Windows.Documents.TextPointer>文字の直後に位置する`a`前に閉じるときの`Bold`タグを使用して、`direction`の<xref:System.Windows.Documents.LogicalDirection.Forward>、返された<xref:System.Windows.Documents.TextPointer>文字の直前の位置 をポイントするように調整`b`、終了後に`Bold`タグ。</span><span class="sxs-lookup"><span data-stu-id="29c82-203">If <xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A> is called on a <xref:System.Windows.Documents.TextPointer> to the position directly after the letter `a` and before of the closing `Bold` tag, and with a `direction` of <xref:System.Windows.Documents.LogicalDirection.Forward>, the returned <xref:System.Windows.Documents.TextPointer> is adjusted to point to the position just before the letter `b`, after the closing `Bold` tag.</span></span> <span data-ttu-id="29c82-204">ような調整は論理方向が逆で作業するときに書式設定タグを開くため実行します。</span><span class="sxs-lookup"><span data-stu-id="29c82-204">A similar adjustment is made for opening formatting tags when working in the opposite logical direction.</span></span> <span data-ttu-id="29c82-205">このメソッドは、ような場合に、挿入位置間のあいまいさの手段を提供します。</span><span class="sxs-lookup"><span data-stu-id="29c82-205">This method is intended to provide a means of disambiguation between insertion positions in similar cases.</span></span>  
  
 <span data-ttu-id="29c82-206">このメソッドは、構造タグのシーケンスが含まれているときに、挿入ポイントの選択的にも使用できます。</span><span class="sxs-lookup"><span data-stu-id="29c82-206">This method can also be used to be selective about insertion points when a sequence of structural tags is involved.</span></span> <span data-ttu-id="29c82-207">たとえば、決算残高と期首段落タグの間での位置にあるときに方向パラメーターは、する使用を次の段落の先頭に最も近い挿入ポイントを選択 (を指定して<xref:System.Windows.Documents.LogicalDirection.Forward?displayProperty=nameWithType>) または前の段落の末尾 (を指定して<xref:System.Windows.Documents.LogicalDirection.Backward?displayProperty=nameWithType>)。</span><span class="sxs-lookup"><span data-stu-id="29c82-207">For example, when at a position between closing and opening paragraph tags, the direction parameter can be used to select the closest insertion point at the beginning of the following paragraph (by specifying <xref:System.Windows.Documents.LogicalDirection.Forward?displayProperty=nameWithType>) or at the end of the preceding paragraph (by specifying <xref:System.Windows.Documents.LogicalDirection.Backward?displayProperty=nameWithType>).</span></span>  
  
 <span data-ttu-id="29c82-208">カーソル位置にあるポインターであるし、指定した隣接する書式設定タグが存在しません`direction`、返された<xref:System.Windows.Documents.TextPointer>、呼び出し元と同じ位置を指す<xref:System.Windows.Documents.TextPointer>です。</span><span class="sxs-lookup"><span data-stu-id="29c82-208">If the pointer is already at insertion position, and there are no adjacent formatting tags in the specified `direction`, the returned <xref:System.Windows.Documents.TextPointer> points to the same position as the calling <xref:System.Windows.Documents.TextPointer>.</span></span>  
  
 <span data-ttu-id="29c82-209">によって示される位置を基準に有効な挿入位置が存在しないことが可能であれば、<xref:System.Windows.Documents.TextPointer>です。</span><span class="sxs-lookup"><span data-stu-id="29c82-209">It is possible that no valid insertion position exists relative to the position pointed to by a <xref:System.Windows.Documents.TextPointer>.</span></span>  <span data-ttu-id="29c82-210">これは、参照先の内容が空のテーブルまたはリストと同様に構造的に完了していない場合に発生することができます。</span><span class="sxs-lookup"><span data-stu-id="29c82-210">This can happen if the referenced content is structurally incomplete, as in an empty table or list.</span></span>  <span data-ttu-id="29c82-211">このような場合、このメソッドだけを返します、<xref:System.Windows.Documents.TextPointer>と同じ位置に、<xref:System.Windows.Documents.TextPointer>からこのメソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="29c82-211">In such cases, this method simply returns a <xref:System.Windows.Documents.TextPointer> to the same position as the <xref:System.Windows.Documents.TextPointer> from which this method was called.</span></span>  <span data-ttu-id="29c82-212">このメソッドは常に有効な返します<xref:System.Windows.Documents.TextPointer>です。</span><span class="sxs-lookup"><span data-stu-id="29c82-212">This method always returns a valid <xref:System.Windows.Documents.TextPointer>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29c82-213">この例を使用する方法を示しています、 <xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A> 、指定したかどうかを確認する方法を<xref:System.Windows.Documents.TextElement>が印刷可能なコンテンツの空です。</span><span class="sxs-lookup"><span data-stu-id="29c82-213">This example shows how to use the <xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A> method to check whether a specified <xref:System.Windows.Documents.TextElement> is empty of printable content.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetInsertionPosition](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_getinsertionposition)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetInsertionPosition](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_getinsertionposition)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.TextPointer.GetNextInsertionPosition(System.Windows.Documents.LogicalDirection)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetLineStartPosition">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="29c82-214">現在の <see cref="T:System.Windows.Documents.TextPointer" /> の位置に対する相対位置で指定した行の先頭にある <see cref="T:System.Windows.Documents.TextPointer" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-214">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the beginning of a line that is specified relative to the current <see cref="T:System.Windows.Documents.TextPointer" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetLineStartPosition">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer GetLineStartPosition (int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer GetLineStartPosition(int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetLineStartPosition(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLineStartPosition (count As Integer) As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ GetLineStartPosition(int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="count">
          <span data-ttu-id="29c82-215">開始位置を返す対象の行を決定するときにスキップする行頭マーカーの数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-215">The number of start-of-line markers to skip when determining the line for which to return the starting position.</span>
          </span>
          <span data-ttu-id="29c82-216">負の値は以前の行、0 は現在の行、正の値は以降の行をそれぞれ指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-216">Negative values specify preceding lines, 0 specifies the current line, and positive values specify following lines.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29c82-217">現在の <see cref="T:System.Windows.Documents.TextPointer" /> の位置に対する相対位置で指定した行の先頭にある <see cref="T:System.Windows.Documents.TextPointer" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-217">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the beginning of a line that is specified relative to the current <see cref="T:System.Windows.Documents.TextPointer" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="29c82-218">指定した行の先頭を指す <see cref="T:System.Windows.Documents.TextPointer" /> (<see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> が <see cref="F:System.Windows.Documents.LogicalDirection.Forward" /> に設定されている場合)。指定した行が範囲外の場合や見つからない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-218">A <see cref="T:System.Windows.Documents.TextPointer" /> pointing to the beginning of the specified line (with the <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> set to <see cref="F:System.Windows.Documents.LogicalDirection.Forward" />), or <see langword="null" /> if the specified line is out of range or otherwise cannot be located.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29c82-219">場合、<xref:System.Windows.Documents.TextPointer>を指すあいまいな位置、たとえば、2 つの線の間で指定された方向に行<xref:System.Windows.Documents.TextPointer.LogicalDirection%2A>相対の開始行を選択しています。</span><span class="sxs-lookup"><span data-stu-id="29c82-219">If the <xref:System.Windows.Documents.TextPointer> points to an ambiguous position, for example, between two lines, the line in the direction specified by <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> is selected as the relative starting line.</span></span>  
  
 <span data-ttu-id="29c82-220">このメソッドによって実行される操作は、有効なレイアウトによって異なります。</span><span class="sxs-lookup"><span data-stu-id="29c82-220">The operation performed by this method depends on a valid layout.</span></span>  <span data-ttu-id="29c82-221">必要に応じて、このメソッドは、操作を続行する前に有効なレイアウトを自動的に再生成しようとします。</span><span class="sxs-lookup"><span data-stu-id="29c82-221">When necessary, this method attempts to automatically regenerate a valid layout before proceeding with the operation.</span></span>  <span data-ttu-id="29c82-222">レイアウトを再生成すると、比較的コストのかかる操作を指定できます。</span><span class="sxs-lookup"><span data-stu-id="29c82-222">Regenerating a layout can be a relatively expensive operation.</span></span>  <span data-ttu-id="29c82-223">使用して<xref:System.Windows.Documents.TextPointer.HasValidLayout%2A>レイアウトを再生成する操作を実行する前に有効なレイアウトを確認します。</span><span class="sxs-lookup"><span data-stu-id="29c82-223">Use <xref:System.Windows.Documents.TextPointer.HasValidLayout%2A> to check for a valid layout before performing operations that may regenerate the layout.</span></span>  <span data-ttu-id="29c82-224">詳細については、次を参照してください。[レイアウト](~/docs/framework/wpf/advanced/layout.md)です。</span><span class="sxs-lookup"><span data-stu-id="29c82-224">For more information, see [Layout](~/docs/framework/wpf/advanced/layout.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLineStartPosition">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer GetLineStartPosition (int count, out int actualCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer GetLineStartPosition(int32 count, [out] int32&amp; actualCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetLineStartPosition(System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLineStartPosition (count As Integer, ByRef actualCount As Integer) As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ GetLineStartPosition(int count, [Runtime::InteropServices::Out] int % actualCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="actualCount" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="count">
          <span data-ttu-id="29c82-225">開始位置を返す対象の行を決定するときにスキップする行頭マーカーの数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-225">The number of start-of-line markers to skip when determining the line for which to return the starting position.</span>
          </span>
          <span data-ttu-id="29c82-226">負の値は以前の行、0 は現在の行、正の値は以降の行をそれぞれ指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-226">Negative values specify preceding lines, 0 specifies the current line, and positive values specify following lines.</span>
          </span>
        </param>
        <param name="actualCount">
          <span data-ttu-id="29c82-227">このメソッドが終了すると、開始位置を返す対象の行を決定するときにスキップされた行頭マーカーの実際の数が格納されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-227">When this method returns, contains the actual number of start-of-line markers that were skipped when determining the line for which to return the starting position.</span>
          </span>
          <span data-ttu-id="29c82-228">指定された行数をスキップする前にコンテンツの先頭または末尾が見つかった場合は、この値が <c>count</c> より少なくなることがあります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-228">This value may be less than <c>count</c> if the beginning or end of content is encountered before the specified number of lines are skipped.</span>
          </span>
          <span data-ttu-id="29c82-229">このパラメーターは初期化せずに渡されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-229">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29c82-230">現在の <see cref="T:System.Windows.Documents.TextPointer" /> の位置に対する相対位置で指定した行の先頭にある <see cref="T:System.Windows.Documents.TextPointer" /> を返し、スキップされた行数を通知します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-230">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the beginning of a line that is specified relative to the current <see cref="T:System.Windows.Documents.TextPointer" />, and reports how many lines were skipped.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="29c82-231">指定した行の先頭を指す <see cref="T:System.Windows.Documents.TextPointer" /> (<see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> が <see cref="F:System.Windows.Documents.LogicalDirection.Forward" /> に設定されている場合)。または指定した行が範囲外の場合は、指定した行に最も近い行の先頭を指します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-231">A <see cref="T:System.Windows.Documents.TextPointer" /> pointing to the beginning of the specified line (with the <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> set to <see cref="F:System.Windows.Documents.LogicalDirection.Forward" />), or to the beginning of the line closest to the specified line if the specified line is out of range.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29c82-232">場合、<xref:System.Windows.Documents.TextPointer>を指すあいまいな位置、たとえば、2 つの線の間で指定された方向に行、<xref:System.Windows.Documents.TextPointer.LogicalDirection%2A>プロパティが相対の開始行として選択されています。</span><span class="sxs-lookup"><span data-stu-id="29c82-232">If the <xref:System.Windows.Documents.TextPointer> points to an ambiguous position, for example, between two lines, the line in the direction specified by the <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> property is selected as the relative starting line.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNextContextPosition">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer GetNextContextPosition (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer GetNextContextPosition(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetNextContextPosition(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNextContextPosition (direction As LogicalDirection) As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ GetNextContextPosition(System::Windows::Documents::LogicalDirection direction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction">
          <span data-ttu-id="29c82-233">次のシンボルを検索する論理方向を指定する <see cref="T:System.Windows.Documents.LogicalDirection" /> 値のいずれか。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-233">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to search for the next symbol.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29c82-234">指定された論理方向の次のシンボルへのポインターを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-234">Returns a pointer to the next symbol in the specified logical direction.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="29c82-235">指定した方向の次のシンボルへの <see cref="T:System.Windows.Documents.TextPointer" />。現在の <see cref="T:System.Windows.Documents.TextPointer" /> がコンテンツの先頭または末尾に隣接している場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-235">A <see cref="T:System.Windows.Documents.TextPointer" /> to the next symbol in the requested direction, or <see langword="null" /> if the current <see cref="T:System.Windows.Documents.TextPointer" /> borders the start or end of content.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29c82-236">次のいずれかは、シンボルを使用すると見なされます。</span><span class="sxs-lookup"><span data-stu-id="29c82-236">Any of the following is considered to be a symbol:</span></span>  
  
-   <span data-ttu-id="29c82-237">開始タグまたは終了タグの<xref:System.Windows.Documents.TextElement>要素。</span><span class="sxs-lookup"><span data-stu-id="29c82-237">An opening or closing tag for a <xref:System.Windows.Documents.TextElement> element.</span></span>  
  
-   <span data-ttu-id="29c82-238">A<xref:System.Windows.UIElement>要素に含まれている、<xref:System.Windows.Documents.InlineUIContainer>または<xref:System.Windows.Documents.BlockUIContainer>です。</span><span class="sxs-lookup"><span data-stu-id="29c82-238">A <xref:System.Windows.UIElement> element contained in an <xref:System.Windows.Documents.InlineUIContainer> or <xref:System.Windows.Documents.BlockUIContainer>.</span></span>  <span data-ttu-id="29c82-239">このようなことを注意してください、<xref:System.Windows.UIElement>常に正確に 1 つの記号以外の場合は、追加のコンテンツまたはに含まれる要素としてカウントされますが、<xref:System.Windows.UIElement>シンボルとしてはカウントされません。</span><span class="sxs-lookup"><span data-stu-id="29c82-239">Note that such a <xref:System.Windows.UIElement> is always counted as exactly one symbol; any additional content or elements contained by the <xref:System.Windows.UIElement> are not counted as symbols.</span></span>  
  
-   <span data-ttu-id="29c82-240">16 ビット[!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)]テキスト内で文字<xref:System.Windows.Documents.Run>要素。</span><span class="sxs-lookup"><span data-stu-id="29c82-240">A 16-bit [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] character inside of a text <xref:System.Windows.Documents.Run> element.</span></span>  
  
 <span data-ttu-id="29c82-241">次の記号としてカテゴリ化される場合<xref:System.Windows.Documents.TextPointerContext.EmbeddedElement>、 <xref:System.Windows.Documents.TextPointerContext.ElementStart>、または<xref:System.Windows.Documents.TextPointerContext.ElementEnd>(で識別される、<xref:System.Windows.Documents.TextPointer.GetPointerContext%2A>メソッド)、<xref:System.Windows.Documents.TextPointer>これによって返されるメソッドは現在の位置から 1 つの記号で高度なです。</span><span class="sxs-lookup"><span data-stu-id="29c82-241">If the next symbol is categorized as <xref:System.Windows.Documents.TextPointerContext.EmbeddedElement>, <xref:System.Windows.Documents.TextPointerContext.ElementStart>, or <xref:System.Windows.Documents.TextPointerContext.ElementEnd> (as identified by the <xref:System.Windows.Documents.TextPointer.GetPointerContext%2A> method), then the <xref:System.Windows.Documents.TextPointer> returned by this method is advanced by exactly one symbol from the current position.</span></span>  
  
 <span data-ttu-id="29c82-242">次の記号としてカテゴリ化される場合<xref:System.Windows.Documents.TextPointerContext.Text>、<xref:System.Windows.Documents.TextPointer>これによって返されるメソッドは次のテキスト以外の記号をテキスト過去の高度な (は、次が位置、<xref:System.Windows.Documents.TextPointerContext>は<xref:System.Windows.Documents.TextPointerContext.Text>)。</span><span class="sxs-lookup"><span data-stu-id="29c82-242">If the next symbol is categorized as <xref:System.Windows.Documents.TextPointerContext.Text>, then the <xref:System.Windows.Documents.TextPointer> returned by this method is advanced past the text to the next non-text symbol (that is, the next position where the <xref:System.Windows.Documents.TextPointerContext> is not <xref:System.Windows.Documents.TextPointerContext.Text>).</span></span>  <span data-ttu-id="29c82-243">呼び出してを超えました。 正確なシンボル数が事前に計算する、<xref:System.Windows.Documents.TextPointer.GetTextRunLength%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="29c82-243">The exact symbol count crossed can be calculated in advance by calling the <xref:System.Windows.Documents.TextPointer.GetTextRunLength%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29c82-244">次の例では、このメソッドの使用を示します。</span><span class="sxs-lookup"><span data-stu-id="29c82-244">The following example demonstrates a use for this method.</span></span>  <span data-ttu-id="29c82-245">この例では、<xref:System.Windows.Documents.TextPointer.GetNextContextPosition%2A>メソッドと組み合わせて、<xref:System.Windows.Documents.TextPointer.GetPointerContext%2A>を走査し、指定したシンボルを抽出メソッド<xref:System.Windows.Documents.TextElement>です。</span><span class="sxs-lookup"><span data-stu-id="29c82-245">The example uses the <xref:System.Windows.Documents.TextPointer.GetNextContextPosition%2A> method in conjunction with the <xref:System.Windows.Documents.TextPointer.GetPointerContext%2A> method to traverse and extract the symbols in a specified <xref:System.Windows.Documents.TextElement>.</span></span>  
  
 <span data-ttu-id="29c82-246">抽出する例を使用できますが、[!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)]構造体の内容を指定された<xref:System.Windows.Documents.TextElement>、わかりやすくするためだけのためのものでは、実稼働コードでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="29c82-246">While the example can be used to extract a [!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)] structure for the contents of a given <xref:System.Windows.Documents.TextElement>, it is intended for illustrative purposes only, and should not be used in production code.</span></span>  <span data-ttu-id="29c82-247">参照してください、<xref:System.Xml>名前空間を機能豊富な一連の型を使用して XML を処理するために設計されています。</span><span class="sxs-lookup"><span data-stu-id="29c82-247">See the <xref:System.Xml> namespace for a rich set of types designed for working with and processing XML.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetNextContextPosition](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_getnextcontextposition)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetNextContextPosition](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_getnextcontextposition)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNextInsertionPosition">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer GetNextInsertionPosition (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer GetNextInsertionPosition(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetNextInsertionPosition(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNextInsertionPosition (direction As LogicalDirection) As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ GetNextInsertionPosition(System::Windows::Documents::LogicalDirection direction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction">
          <span data-ttu-id="29c82-248">次の挿入位置を検索する論理方向を指定する <see cref="T:System.Windows.Documents.LogicalDirection" /> 値のいずれか。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-248">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to search for the next insertion position.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29c82-249">指定された論理方向の次の挿入位置への <see cref="T:System.Windows.Documents.TextPointer" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-249">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the next insertion position in the specified logical direction.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="29c82-250">指定した方向の次の挿入位置を識別する <see cref="T:System.Windows.Documents.TextPointer" />。次の挿入位置が見つからない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-250">A <see cref="T:System.Windows.Documents.TextPointer" /> that identifies the next insertion position in the requested direction, or <see langword="null" /> if no next insertion position can be found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29c82-251">*挿入位置*任意セマンティック コンテンツ規則に関連付けられている可能性がありますに、新しいコンテンツを追加する位置です。</span><span class="sxs-lookup"><span data-stu-id="29c82-251">An *insertion position* is a position where new content may be added without breaking any semantic rules for the associated content.</span></span>  <span data-ttu-id="29c82-252">実際には、挿入位置は、キャレットを配置する場所のコンテンツで任意の場所です。</span><span class="sxs-lookup"><span data-stu-id="29c82-252">In practice, an insertion position is anywhere in content where a caret may be positioned.</span></span>  <span data-ttu-id="29c82-253">有効な例<xref:System.Windows.Documents.TextPointer>挿入位置ではない位置は 2 つの隣接する位置<xref:System.Windows.Documents.Paragraph>タグ (つまり、前の段落の終わりのタグと次の段落の開始タグの間で)。</span><span class="sxs-lookup"><span data-stu-id="29c82-253">An example of a valid <xref:System.Windows.Documents.TextPointer> position that is not an insertion position is the position between two adjacent <xref:System.Windows.Documents.Paragraph> tags (that is, between the closing tag of the preceding paragraph and the opening tag of the next paragraph).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29c82-254">次の例では、このメソッドの使用を示します。</span><span class="sxs-lookup"><span data-stu-id="29c82-254">The following example demonstrates a use for this method.</span></span> <span data-ttu-id="29c82-255">この例では、<xref:System.Windows.Documents.TextPointer.GetNextInsertionPosition%2A>の数をカウントするためにコンテンツの要素の境界を走査するメソッド<xref:System.Windows.Documents.Paragraph>要素が指定した 2 つの間で提示<xref:System.Windows.Documents.TextPointer>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="29c82-255">The example uses the <xref:System.Windows.Documents.TextPointer.GetNextInsertionPosition%2A> method to traverse content element boundaries in order to count the number of <xref:System.Windows.Documents.Paragraph> elements present between two specified <xref:System.Windows.Documents.TextPointer> instances.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetNextInsertionPosition](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_getnextinsertionposition)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetNextInsertionPosition](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_getnextinsertionposition)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.TextPointer.GetInsertionPosition(System.Windows.Documents.LogicalDirection)" />
      </Docs>
    </Member>
    <Member MemberName="GetOffsetToPosition">
      <MemberSignature Language="C#" Value="public int GetOffsetToPosition (System.Windows.Documents.TextPointer position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetOffsetToPosition(class System.Windows.Documents.TextPointer position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetOffsetToPosition(System.Windows.Documents.TextPointer)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOffsetToPosition (position As TextPointer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetOffsetToPosition(System::Windows::Documents::TextPointer ^ position);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Windows.Documents.TextPointer" />
      </Parameters>
      <Docs>
        <param name="position">
          <span data-ttu-id="29c82-256">距離 (シンボル単位) を確認する位置を指定する <see cref="T:System.Windows.Documents.TextPointer" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-256">A <see cref="T:System.Windows.Documents.TextPointer" /> that specifies a position to find the distance (in symbols) to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29c82-257">現在の <see cref="T:System.Windows.Documents.TextPointer" /> と指定した 2 つ目の <see cref="T:System.Windows.Documents.TextPointer" /> の間にあるシンボルの数を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-257">Returns the count of symbols between the current <see cref="T:System.Windows.Documents.TextPointer" /> and a second specified <see cref="T:System.Windows.Documents.TextPointer" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="29c82-258">現在の <see cref="T:System.Windows.Documents.TextPointer" /> と <paramref name="position" /> の間にあるシンボルの相対的な数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-258">The relative number of symbols between the current <see cref="T:System.Windows.Documents.TextPointer" /> and <paramref name="position" />.</span>
          </span>
          <span data-ttu-id="29c82-259">負の値は、現在の <see cref="T:System.Windows.Documents.TextPointer" /> が <paramref name="position" /> で指定された位置より後にあることを示します。0 は、2 つの位置が等しいことを示します。正の値は、現在の <see cref="T:System.Windows.Documents.TextPointer" /> が <paramref name="position" /> で指定されている位置より前にあることを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-259">A negative value indicates that the current <see cref="T:System.Windows.Documents.TextPointer" /> follows the position specified by <paramref name="position" />, 0 indicates that the positions are equal, and a positive value indicates that the current <see cref="T:System.Windows.Documents.TextPointer" /> precedes the position specified by <paramref name="position" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29c82-260">次のいずれかは、シンボルを使用すると見なされます。</span><span class="sxs-lookup"><span data-stu-id="29c82-260">Any of the following is considered to be a symbol:</span></span>  
  
-   <span data-ttu-id="29c82-261">開始タグまたは終了タグの<xref:System.Windows.Documents.TextElement>要素。</span><span class="sxs-lookup"><span data-stu-id="29c82-261">An opening or closing tag for a <xref:System.Windows.Documents.TextElement> element.</span></span>  
  
-   <span data-ttu-id="29c82-262">A<xref:System.Windows.UIElement>要素に含まれている、<xref:System.Windows.Documents.InlineUIContainer>または<xref:System.Windows.Documents.BlockUIContainer>です。</span><span class="sxs-lookup"><span data-stu-id="29c82-262">A <xref:System.Windows.UIElement> element contained in an <xref:System.Windows.Documents.InlineUIContainer> or <xref:System.Windows.Documents.BlockUIContainer>.</span></span>  <span data-ttu-id="29c82-263">このようなことを注意してください、<xref:System.Windows.UIElement>常に正確に 1 つの記号以外の場合は、追加のコンテンツまたはに含まれる要素としてカウントされますが、<xref:System.Windows.UIElement>シンボルとしてはカウントされません。</span><span class="sxs-lookup"><span data-stu-id="29c82-263">Note that such a <xref:System.Windows.UIElement> is always counted as exactly one symbol; any additional content or elements contained by the <xref:System.Windows.UIElement> are not counted as symbols.</span></span>  
  
-   <span data-ttu-id="29c82-264">16 ビット[!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)]テキスト内で文字<xref:System.Windows.Documents.Run>要素。</span><span class="sxs-lookup"><span data-stu-id="29c82-264">A 16-bit [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] character inside of a text <xref:System.Windows.Documents.Run> element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29c82-265">次の例では、このメソッドの使用を示します。</span><span class="sxs-lookup"><span data-stu-id="29c82-265">The following example demonstrates a use for this method.</span></span> <span data-ttu-id="29c82-266">この例では、<xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A>という 2 つのオフセットを検索するメソッド<xref:System.Windows.Documents.TextPointer>インスタンスし、この情報を使用して保存し、選択内容を復元する<xref:System.Windows.Controls.RichTextBox>です。</span><span class="sxs-lookup"><span data-stu-id="29c82-266">The example uses the <xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A> method to find the offsets for two <xref:System.Windows.Documents.TextPointer> instances, and then uses this information to save and restore the selection in a <xref:System.Windows.Controls.RichTextBox>.</span></span>  <span data-ttu-id="29c82-267">例では、内容、<xref:System.Windows.Controls.RichTextBox>選択範囲を保存して復元する間で変更されていません。</span><span class="sxs-lookup"><span data-stu-id="29c82-267">The example assumes that the contents of the <xref:System.Windows.Controls.RichTextBox> have not changed between a selection save and a selection restore.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetOffsetToPosition](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_getoffsettoposition)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetOffsetToPosition](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_getoffsettoposition)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="29c82-268">
            <paramref name="position" /> は、現在の位置に関連付けられているテキスト コンテナー外部の位置を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-268">
              <paramref name="position" /> specifies a position outside of the text container associated with the current position.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Windows.Documents.TextPointer.GetPositionAtOffset" />
        <altmember cref="M:System.Windows.Documents.TextPointer.IsInSameDocument(System.Windows.Documents.TextPointer)" />
      </Docs>
    </Member>
    <Member MemberName="GetPointerContext">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointerContext GetPointerContext (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Documents.TextPointerContext GetPointerContext(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetPointerContext(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPointerContext (direction As LogicalDirection) As TextPointerContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointerContext GetPointerContext(System::Windows::Documents::LogicalDirection direction);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Documents.ITextPointer.GetPointerContext(System.Windows.Documents.LogicalDirection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointerContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction">
          <span data-ttu-id="29c82-269">隣接するコンテンツのカテゴリを決定する論理方向を指定する <see cref="T:System.Windows.Documents.LogicalDirection" /> 値のいずれか。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-269">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to determine the category for adjacent content.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29c82-270">指定された論理方向で現在の <see cref="T:System.Windows.Documents.TextPointer" /> に隣接するコンテンツのカテゴリ インジケーターを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-270">Returns a category indicator for the content adjacent to the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified logical direction.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="29c82-271">指定された論理方向の隣接するコンテンツのカテゴリを指定する <see cref="T:System.Windows.Documents.TextPointerContext" /> 値のいずれか。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-271">One of the <see cref="T:System.Windows.Documents.TextPointerContext" /> values that indicates the category for adjacent content in the specified logical direction.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="29c82-272">次の例では、このメソッドの使用を示します。</span><span class="sxs-lookup"><span data-stu-id="29c82-272">The following example demonstrates a use for this method.</span></span> <span data-ttu-id="29c82-273">この例では、<xref:System.Windows.Documents.TextPointer.GetPointerContext%2A>タグと終了要素タグが指定した 2 つの間の分散を計算するためのアルゴリズムを実装するメソッド<xref:System.Windows.Documents.TextPointer>位置。</span><span class="sxs-lookup"><span data-stu-id="29c82-273">The example uses the <xref:System.Windows.Documents.TextPointer.GetPointerContext%2A> method to implement an algorithm for calculating the balance of opening and closing element tags between two specified <xref:System.Windows.Documents.TextPointer> positions.</span></span>  <span data-ttu-id="29c82-274">各 +1、および各カウントが開始要素タグ終了要素タグは – 1 としてカウントされます。</span><span class="sxs-lookup"><span data-stu-id="29c82-274">Each opening element tag is counted as +1, and each closing element tag is counted as –1.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetOffsetToPosition2](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_getoffsettoposition2)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetOffsetToPosition2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_getoffsettoposition2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPositionAtOffset">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="29c82-275">コンテンツの先頭からの指定されたオフセット (シンボル単位) が示す位置への <see cref="T:System.Windows.Documents.TextPointer" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-275">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the position indicated by the specified offset, in symbols, from the beginning of content.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPositionAtOffset">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer GetPositionAtOffset (int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer GetPositionAtOffset(int32 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetPositionAtOffset(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPositionAtOffset (offset As Integer) As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ GetPositionAtOffset(int offset);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="29c82-276">位置を計算して返す際の対象となるオフセット (シンボル単位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-276">An offset, in symbols, for which to calculate and return the position.</span>
          </span>
          <span data-ttu-id="29c82-277">このオフセットが負の場合は、<see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> プロパティが示すのとは逆の論理方向で位置が計算されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-277">If the offset is negative, the position is calculated in the logical direction opposite of that indicated by the <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29c82-278">現在の <see cref="T:System.Windows.Documents.TextPointer" /> の先頭からの指定されたオフセット (シンボル単位) が示す位置への <see cref="T:System.Windows.Documents.TextPointer" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-278">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the position indicated by the specified offset, in symbols, from the beginning of the current <see cref="T:System.Windows.Documents.TextPointer" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="29c82-279">指定されたオフセットが示す位置への <see cref="T:System.Windows.Documents.TextPointer" />。対応する位置が見つからない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-279">A <see cref="T:System.Windows.Documents.TextPointer" /> to the position indicated by the specified offset, or <see langword="null" /> if no corresponding position can be found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29c82-280">次のいずれかは、シンボルを使用すると見なされます。</span><span class="sxs-lookup"><span data-stu-id="29c82-280">Any of the following is considered to be a symbol:</span></span>  
  
-   <span data-ttu-id="29c82-281">開始タグまたは終了タグの<xref:System.Windows.Documents.TextElement>要素。</span><span class="sxs-lookup"><span data-stu-id="29c82-281">An opening or closing tag for the <xref:System.Windows.Documents.TextElement> element.</span></span>  
  
-   <span data-ttu-id="29c82-282">A<xref:System.Windows.UIElement>要素に含まれている、<xref:System.Windows.Documents.InlineUIContainer>または<xref:System.Windows.Documents.BlockUIContainer>です。</span><span class="sxs-lookup"><span data-stu-id="29c82-282">A <xref:System.Windows.UIElement> element contained in an <xref:System.Windows.Documents.InlineUIContainer> or <xref:System.Windows.Documents.BlockUIContainer>.</span></span>  <span data-ttu-id="29c82-283">このようなことを注意してください、<xref:System.Windows.UIElement>常に正確に 1 つの記号以外の場合は、追加のコンテンツまたはに含まれる要素としてカウントされますが、<xref:System.Windows.UIElement>シンボルとしてはカウントされません。</span><span class="sxs-lookup"><span data-stu-id="29c82-283">Note that such a <xref:System.Windows.UIElement> is always counted as exactly one symbol; any additional content or elements contained by the <xref:System.Windows.UIElement> are not counted as symbols.</span></span>  
  
-   <span data-ttu-id="29c82-284">16 ビット[!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)]テキスト内で文字<xref:System.Windows.Documents.Run>要素。</span><span class="sxs-lookup"><span data-stu-id="29c82-284">A 16-bit [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] character inside of a text <xref:System.Windows.Documents.Run> element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29c82-285">次の例では、このメソッドの使用を示します。</span><span class="sxs-lookup"><span data-stu-id="29c82-285">The following example demonstrates a use for this method.</span></span> <span data-ttu-id="29c82-286">この例では、<xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A>メソッド、任意のホスティングの段落およびを返す他と比較して指定した位置のオフセットを計算する 1 つのペアを実装するメソッド、<xref:System.Windows.Documents.TextPointer>指定段落内の指定したオフセット。</span><span class="sxs-lookup"><span data-stu-id="29c82-286">The example uses the <xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A> method to implement a pair of methods, one to calculate the offset to a specified position relative to any hosting paragraph, and the other to return a <xref:System.Windows.Documents.TextPointer> to a specified offset in a specified paragraph.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetPositionAtOffset](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_getpositionatoffset)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetPositionAtOffset](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_getpositionatoffset)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.TextPointer.GetOffsetToPosition(System.Windows.Documents.TextPointer)" />
      </Docs>
    </Member>
    <Member MemberName="GetPositionAtOffset">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer GetPositionAtOffset (int offset, System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer GetPositionAtOffset(int32 offset, valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetPositionAtOffset(System.Int32,System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPositionAtOffset (offset As Integer, direction As LogicalDirection) As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ GetPositionAtOffset(int offset, System::Windows::Documents::LogicalDirection direction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="29c82-287">位置を計算して返す際の対象となるオフセット (シンボル単位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-287">An offset, in symbols, for which to calculate and return the position.</span>
          </span>
          <span data-ttu-id="29c82-288">このオフセットが負の場合は、返される <see cref="T:System.Windows.Documents.TextPointer" /> は現在の <see cref="T:System.Windows.Documents.TextPointer" /> より前になります。それ以外の場合は後になります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-288">If the offset is negative, the returned <see cref="T:System.Windows.Documents.TextPointer" /> precedes the current <see cref="T:System.Windows.Documents.TextPointer" />; otherwise, it follows.</span>
          </span>
        </param>
        <param name="direction">
          <span data-ttu-id="29c82-289">返される <see cref="T:System.Windows.Documents.LogicalDirection" /> の論理方向を指定する <see cref="T:System.Windows.Documents.TextPointer" /> 値のいずれか。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-289">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction of the returned <see cref="T:System.Windows.Documents.TextPointer" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29c82-290">指定された方向に、現在の <see cref="T:System.Windows.Documents.TextPointer" /> の先頭からの指定されたオフセット (シンボル単位) が示す位置への <see cref="T:System.Windows.Documents.TextPointer" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-290">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the position indicated by the specified offset, in symbols, from the beginning of the current <see cref="T:System.Windows.Documents.TextPointer" /> and in the specified direction.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="29c82-291">指定されたオフセットが示す位置への <see cref="T:System.Windows.Documents.TextPointer" />。オフセットがコンテンツの末尾を超える場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-291">A <see cref="T:System.Windows.Documents.TextPointer" /> to the position indicated by the specified offset, or <see langword="null" /> if the offset extends past the end of the content.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29c82-292">次のいずれかは、シンボルを使用すると見なされます。</span><span class="sxs-lookup"><span data-stu-id="29c82-292">Any of the following is considered to be a symbol:</span></span>  
  
-   <span data-ttu-id="29c82-293">開始タグまたは終了タグの<xref:System.Windows.Documents.TextElement>要素。</span><span class="sxs-lookup"><span data-stu-id="29c82-293">An opening or closing tag for the <xref:System.Windows.Documents.TextElement> element.</span></span>  
  
-   <span data-ttu-id="29c82-294">A<xref:System.Windows.UIElement>要素に含まれている、<xref:System.Windows.Documents.InlineUIContainer>または<xref:System.Windows.Documents.BlockUIContainer>です。</span><span class="sxs-lookup"><span data-stu-id="29c82-294">A <xref:System.Windows.UIElement> element contained in an <xref:System.Windows.Documents.InlineUIContainer> or <xref:System.Windows.Documents.BlockUIContainer>.</span></span>  <span data-ttu-id="29c82-295">このようなことを注意してください、<xref:System.Windows.UIElement>常に正確に 1 つの記号以外の場合は、追加のコンテンツまたはに含まれる要素としてカウントされますが、<xref:System.Windows.UIElement>シンボルとしてはカウントされません。</span><span class="sxs-lookup"><span data-stu-id="29c82-295">Note that such a <xref:System.Windows.UIElement> is always counted as exactly one symbol; any additional content or elements contained by the <xref:System.Windows.UIElement> are not counted as symbols.</span></span>  
  
-   <span data-ttu-id="29c82-296">16 ビット[!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)]テキスト内で文字<xref:System.Windows.Documents.Run>要素。</span><span class="sxs-lookup"><span data-stu-id="29c82-296">A 16-bit [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] character inside of a text <xref:System.Windows.Documents.Run> element.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.TextPointer.GetOffsetToPosition(System.Windows.Documents.TextPointer)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetTextInRun">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="29c82-297">現在の <see cref="T:System.Windows.Documents.TextPointer" /> に隣接するテキストを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-297">Returns text adjacent to the current <see cref="T:System.Windows.Documents.TextPointer" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetTextInRun">
      <MemberSignature Language="C#" Value="public string GetTextInRun (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetTextInRun(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTextInRun (direction As LogicalDirection) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetTextInRun(System::Windows::Documents::LogicalDirection direction);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Documents.ITextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction">
          <span data-ttu-id="29c82-298">隣接するテキストを検索して返す論理方向を指定する <see cref="T:System.Windows.Documents.LogicalDirection" /> 値のいずれか。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-298">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to find and return any adjacent text.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29c82-299">指定された論理方向で現在の <see cref="T:System.Windows.Documents.TextPointer" /> に隣接するテキストを格納する文字列を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-299">Returns a string containing any text adjacent to the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified logical direction.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="29c82-300">指定された論理方向の隣接するテキストを格納する文字列。隣接するテキストが見つからない場合は <see cref="F:System.String.Empty" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-300">A string containing any adjacent text in the specified logical direction, or <see cref="F:System.String.Empty" /> if no adjacent text can be found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29c82-301">このメソッドは、テキストの中断のない実行のみを返します。</span><span class="sxs-lookup"><span data-stu-id="29c82-301">This method returns only uninterrupted runs of text.</span></span>  <span data-ttu-id="29c82-302">いずれかの記号の型以外の場合は、何も返されない<xref:System.Windows.Documents.TextPointerContext.Text>は現在の横にある<xref:System.Windows.Documents.TextPointer>指定した方向にします。</span><span class="sxs-lookup"><span data-stu-id="29c82-302">Nothing is returned if any symbol type other than <xref:System.Windows.Documents.TextPointerContext.Text> is adjacent to the current <xref:System.Windows.Documents.TextPointer> in the specified direction.</span></span>  <span data-ttu-id="29c82-303">同様に、次のテキスト以外の記号までしかテキストが返されます。</span><span class="sxs-lookup"><span data-stu-id="29c82-303">Similarly, text is returned only up to the next non-text symbol.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29c82-304">次の例では、このメソッドの使用を示します。</span><span class="sxs-lookup"><span data-stu-id="29c82-304">The following example demonstrates a use for this method.</span></span> <span data-ttu-id="29c82-305">この例では、<xref:System.Windows.Documents.TextPointer.GetTextInRun%2A>単純なテキストの抽出を実装するメソッド。</span><span class="sxs-lookup"><span data-stu-id="29c82-305">The example uses the <xref:System.Windows.Documents.TextPointer.GetTextInRun%2A> method to implement a simple text extractor.</span></span>  <span data-ttu-id="29c82-306">メソッドは、指定した 2 つの間のすべてのテキスト文字列の連結を返します<xref:System.Windows.Documents.TextPointer>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="29c82-306">The method returns a string concatenation of all text between two specified <xref:System.Windows.Documents.TextPointer> instances.</span></span>  
  
 <span data-ttu-id="29c82-307">例を使用して、2 つの間の任意のテキストを抽出する<xref:System.Windows.Documents.TextPointer>インスタンス、わかりやすくするためだけのためのものでは、実稼働コードでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="29c82-307">While the example can be used to extract any text between two <xref:System.Windows.Documents.TextPointer> instances, it is intended for illustrative purposes only, and should not be used in production code.</span></span>  <span data-ttu-id="29c82-308">代わりに、<xref:System.Windows.Documents.TextRange.Text%2A?displayProperty=nameWithType> プロパティを使用してください。</span><span class="sxs-lookup"><span data-stu-id="29c82-308">Use the <xref:System.Windows.Documents.TextRange.Text%2A?displayProperty=nameWithType> property instead.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetTextInRun](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_gettextinrun)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetTextInRun](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_gettextinrun)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.TextPointer.DeleteTextInRun(System.Int32)" />
        <altmember cref="M:System.Windows.Documents.TextPointer.InsertTextInRun(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetTextInRun">
      <MemberSignature Language="C#" Value="public int GetTextInRun (System.Windows.Documents.LogicalDirection direction, char[] textBuffer, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetTextInRun(valuetype System.Windows.Documents.LogicalDirection direction, char[] textBuffer, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection,System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTextInRun (direction As LogicalDirection, textBuffer As Char(), startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetTextInRun(System::Windows::Documents::LogicalDirection direction, cli::array &lt;char&gt; ^ textBuffer, int startIndex, int count);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Documents.ITextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection,System.Char[],System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
        <Parameter Name="textBuffer" Type="System.Char[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="direction">
          <span data-ttu-id="29c82-309">隣接するテキストを検索してコピーする論理方向を指定する <see cref="T:System.Windows.Documents.LogicalDirection" /> 値のいずれか。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-309">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to find and copy any adjacent text.</span>
          </span>
        </param>
        <param name="textBuffer">
          <span data-ttu-id="29c82-310">テキストのコピー先のバッファー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-310">A buffer into which any text is copied.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="29c82-311">コピーしたテキストの書き込みを開始する <c>textBuffer</c> のインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-311">An index into <c>textBuffer</c> at which to begin writing copied text.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="29c82-312">コピーする文字の最大数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-312">The maximum number of characters to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29c82-313">指定された方向の隣接するテキストから、指定された最大数の文字を、呼び出し元が用意した文字配列にコピーします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-313">Copies the specified maximum number of characters from any adjacent text in the specified direction into a caller-supplied character array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="29c82-314">実際に <paramref name="textBuffer" /> にコピーされた文字数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-314">The number of characters actually copied into <paramref name="textBuffer" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29c82-315">このメソッドは、テキストの中断のない実行のみを返します。</span><span class="sxs-lookup"><span data-stu-id="29c82-315">This method returns only uninterrupted runs of text.</span></span>  <span data-ttu-id="29c82-316">いずれかの記号の型以外の場合は、何も返されない<xref:System.Windows.Documents.TextPointerContext.Text>は現在の横にある<xref:System.Windows.Documents.TextPointer>指定した方向にします。</span><span class="sxs-lookup"><span data-stu-id="29c82-316">Nothing is returned if any symbol type other than <xref:System.Windows.Documents.TextPointerContext.Text> is adjacent to the current <xref:System.Windows.Documents.TextPointer> in the specified direction.</span></span>  <span data-ttu-id="29c82-317">同様に、次のテキスト以外の記号までしかテキストが返されます。</span><span class="sxs-lookup"><span data-stu-id="29c82-317">Similarly, text is returned only up to the next non-text symbol.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="29c82-318">
            <paramref name="startIndex" /> が 0 より小さいか、<paramref name="textBuffer" /> の <see cref="P:System.Array.Length" /> プロパティより大きい。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-318">
              <paramref name="startIndex" /> is less than 0 or greater than the <see cref="P:System.Array.Length" /> property of <paramref name="textBuffer" />.</span>
          </span>
          <span data-ttu-id="29c82-319">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-319">-or-</span>
          </span>
          <span data-ttu-id="29c82-320">
            <paramref name="count" /> が 0 より小さいか、<paramref name="textBuffer" /> (<paramref name="textBuffer" />.<see cref="P:System.Array.Length" /> - </span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-320">
              <paramref name="count" /> is less than 0 or greater than the remaining space in <paramref name="textBuffer" /> (<paramref name="textBuffer" />.<see cref="P:System.Array.Length" /></span>
          </span>
          <span data-ttu-id="29c82-321">
            <paramref name="startIndex" />) の残りの領域より大きい。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-321">minus <paramref name="startIndex" />).</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Documents.TextPointer.DeleteTextInRun(System.Int32)" />
        <altmember cref="M:System.Windows.Documents.TextPointer.InsertTextInRun(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetTextRunLength">
      <MemberSignature Language="C#" Value="public int GetTextRunLength (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetTextRunLength(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetTextRunLength(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTextRunLength (direction As LogicalDirection) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetTextRunLength(System::Windows::Documents::LogicalDirection direction);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Documents.ITextPointer.GetTextRunLength(System.Windows.Documents.LogicalDirection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction">
          <span data-ttu-id="29c82-322">文字数をカウントする論理方向を指定する <see cref="T:System.Windows.Documents.LogicalDirection" /> 値のいずれか。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-322">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to count the number of characters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29c82-323">現在の <see cref="T:System.Windows.Documents.TextPointer" /> と、指定された論理方向の次のテキスト以外のシンボルとの間にある Unicode 文字の数を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-323">Returns the number of Unicode characters between the current <see cref="T:System.Windows.Documents.TextPointer" /> and the next non-text symbol, in the specified logical direction.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="29c82-324">現在の <see cref="T:System.Windows.Documents.TextPointer" /> と次のテキスト以外のシンボルとの間にある Unicode 文字の数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-324">The number of Unicode characters between the current <see cref="T:System.Windows.Documents.TextPointer" /> and the next non-text symbol.</span>
          </span>
          <span data-ttu-id="29c82-325">隣接するテキストがない場合は 0 になります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-325">This number may be 0 if there is no adjacent text.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29c82-326">次のいずれかは、シンボルを使用すると見なされます。</span><span class="sxs-lookup"><span data-stu-id="29c82-326">Any of the following is considered to be a symbol:</span></span>  
  
-   <span data-ttu-id="29c82-327">開始タグまたは終了タグの<xref:System.Windows.Documents.TextElement>要素。</span><span class="sxs-lookup"><span data-stu-id="29c82-327">An opening or closing tag for the <xref:System.Windows.Documents.TextElement> element.</span></span>  
  
-   <span data-ttu-id="29c82-328">A<xref:System.Windows.UIElement>要素に含まれている、<xref:System.Windows.Documents.InlineUIContainer>または<xref:System.Windows.Documents.BlockUIContainer>です。</span><span class="sxs-lookup"><span data-stu-id="29c82-328">A <xref:System.Windows.UIElement> element contained in an <xref:System.Windows.Documents.InlineUIContainer> or <xref:System.Windows.Documents.BlockUIContainer>.</span></span>  <span data-ttu-id="29c82-329">このようなことを注意してください、<xref:System.Windows.UIElement>常に正確に 1 つの記号以外の場合は、追加のコンテンツまたはに含まれる要素としてカウントされますが、<xref:System.Windows.UIElement>シンボルとしてはカウントされません。</span><span class="sxs-lookup"><span data-stu-id="29c82-329">Note that such a <xref:System.Windows.UIElement> is always counted as exactly one symbol; any additional content or elements contained by the <xref:System.Windows.UIElement> are not counted as symbols.</span></span>  
  
-   <span data-ttu-id="29c82-330">16 ビット[!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)]テキスト内で文字<xref:System.Windows.Documents.Run>要素。</span><span class="sxs-lookup"><span data-stu-id="29c82-330">A 16-bit [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] character inside of a text <xref:System.Windows.Documents.Run> element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasValidLayout">
      <MemberSignature Language="C#" Value="public bool HasValidLayout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasValidLayout" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.HasValidLayout" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasValidLayout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasValidLayout { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Documents.ITextPointer.HasValidLayout</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="29c82-331">現在の位置に関連付けられているテキスト コンテナーに有効な (最新の) レイアウトがあるかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-331">Gets a value that indicates whether the text container associated with the current position has a valid (up-to-date) layout.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="29c82-332">レイアウトが最新かつ有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-332">
              <see langword="true" /> if the layout is current and valid; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29c82-333">必要に応じて、有効なレイアウトに依存する操作 (など、<xref:System.Windows.Documents.TextPointer.GetLineStartPosition%2A>メソッド、<xref:System.Windows.Documents.TextPointer.GetCharacterRect%2A>メソッド、および<xref:System.Windows.Documents.TextPointer.IsAtLineStartPosition%2A>プロパティ) 操作を続行する前に有効なレイアウトを自動的に再生成しようとしています。</span><span class="sxs-lookup"><span data-stu-id="29c82-333">When necessary, operations that depend on a valid layout (such as the <xref:System.Windows.Documents.TextPointer.GetLineStartPosition%2A> method, <xref:System.Windows.Documents.TextPointer.GetCharacterRect%2A> method, and <xref:System.Windows.Documents.TextPointer.IsAtLineStartPosition%2A> property) attempt to automatically regenerate a valid layout before proceeding with the operation.</span></span>  <span data-ttu-id="29c82-334">レイアウトを再生成すると、比較的コストのかかる操作を指定できます。</span><span class="sxs-lookup"><span data-stu-id="29c82-334">Regenerating a layout can be a relatively expensive operation.</span></span>  <span data-ttu-id="29c82-335">このプロパティを使用して、レイアウトを再生成操作を実行する前に有効なレイアウトをチェックします。</span><span class="sxs-lookup"><span data-stu-id="29c82-335">Use this property to check for a valid layout before performing operations that may regenerate the layout.</span></span>  <span data-ttu-id="29c82-336">詳細については、次を参照してください。[レイアウト](~/docs/framework/wpf/advanced/layout.md)です。</span><span class="sxs-lookup"><span data-stu-id="29c82-336">For more information, see [Layout](~/docs/framework/wpf/advanced/layout.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertLineBreak">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer InsertLineBreak ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer InsertLineBreak() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.InsertLineBreak" />
      <MemberSignature Language="VB.NET" Value="Public Function InsertLineBreak () As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ InsertLineBreak();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="29c82-337">現在の位置に改行を挿入します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-337">Inserts a line break at the current position.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="29c82-338">このメソッドによって挿入された <see cref="T:System.Windows.Documents.TextPointer" /> 要素の直後にある <see cref="T:System.Windows.Documents.LineBreak" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-338">A <see cref="T:System.Windows.Documents.TextPointer" /> positioned immediately after the <see cref="T:System.Windows.Documents.LineBreak" /> element inserted by this method.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertParagraphBreak">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer InsertParagraphBreak ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer InsertParagraphBreak() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.InsertParagraphBreak" />
      <MemberSignature Language="VB.NET" Value="Public Function InsertParagraphBreak () As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ InsertParagraphBreak();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="29c82-339">現在の位置に段落の区切りを挿入します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-339">Inserts a paragraph break at the current position.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="29c82-340">新しい段落の先頭 (<see cref="T:System.Windows.Documents.TextPointer" />) への <see cref="P:System.Windows.Documents.TextElement.ContentStart" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-340">A <see cref="T:System.Windows.Documents.TextPointer" /> to the beginning (<see cref="P:System.Windows.Documents.TextElement.ContentStart" />) of the new paragraph.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29c82-341">既存の内部では、現在の位置はときに、このメソッドが呼び出された場合<xref:System.Windows.Documents.Paragraph>要素、既存の段落およびそのコンテンツが含まれていますが、現在の位置で 2 つの段落に分割されます。</span><span class="sxs-lookup"><span data-stu-id="29c82-341">If this method is called when the current position is inside of an existing <xref:System.Windows.Documents.Paragraph> element, the existing paragraph and any content it contains are split into two paragraphs at the current position.</span></span>  <span data-ttu-id="29c82-342">このメソッドが呼び出された場合、現在の位置が既存の段落の内部ではない場合に、新しい空の段落が挿入されます。</span><span class="sxs-lookup"><span data-stu-id="29c82-342">If this method is called when the current position is not inside of an existing paragraph, a new, empty paragraph is inserted.</span></span>  <span data-ttu-id="29c82-343">このメソッドは、位置にある分割または段落を挿入するには適さない場合 (などの場合は、現在の位置の内側、<xref:System.Windows.Documents.Hyperlink>要素)、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="29c82-343">If this method is called at a position unsuitable for splitting or inserting a paragraph (for example, if the current position is inside of a <xref:System.Windows.Documents.Hyperlink> element), an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="29c82-344">このメソッドが新しい段落を作るために分割することができない位置 (<see cref="T:System.Windows.Documents.Hyperlink" /> や <see cref="T:System.Windows.Documents.InlineUIContainer" /> のスコープ内など) で呼び出されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-344">This method is called on a position that cannot be split to accommodate a new paragraph, such as in the scope of a <see cref="T:System.Windows.Documents.Hyperlink" /> or <see cref="T:System.Windows.Documents.InlineUIContainer" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="InsertTextInRun">
      <MemberSignature Language="C#" Value="public void InsertTextInRun (string textData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertTextInRun(string textData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.InsertTextInRun(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertTextInRun (textData As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertTextInRun(System::String ^ textData);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Documents.ITextPointer.InsertTextInRun(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textData" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textData">
          <span data-ttu-id="29c82-345">挿入するテキスト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-345">The text to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29c82-346">現在の位置のテキスト <see cref="T:System.Windows.Documents.Run" /> に、指定されたテキストを挿入します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-346">Inserts the specified text into the text <see cref="T:System.Windows.Documents.Run" /> at the current position.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29c82-347">場合、<xref:System.Windows.Documents.TextPointer>によってスコープが設定されません、<xref:System.Windows.Documents.Run>要素、<xref:System.Windows.Documents.Run>と共に挿入、`textData`です。</span><span class="sxs-lookup"><span data-stu-id="29c82-347">If the <xref:System.Windows.Documents.TextPointer> is not scoped by a <xref:System.Windows.Documents.Run> element, a <xref:System.Windows.Documents.Run> is inserted along with the `textData`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="29c82-348">現在の位置が <see cref="T:System.Windows.Documents.Run" /> 要素内にありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-348">The current position is not within a <see cref="T:System.Windows.Documents.Run" /> element.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="29c82-349">
            <paramref name="textData" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-349">
              <paramref name="textData" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsAtInsertionPosition">
      <MemberSignature Language="C#" Value="public bool IsAtInsertionPosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAtInsertionPosition" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.IsAtInsertionPosition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAtInsertionPosition As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAtInsertionPosition { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Documents.ITextPointer.IsAtInsertionPosition</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="29c82-350">現在の位置が挿入位置かどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-350">Gets a value that indicates whether the current position is an insertion position.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="29c82-351">現在の位置が挿入位置の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-351">
              <see langword="true" /> if the current position is an insertion position; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29c82-352">挿入位置は、任意セマンティック コンテンツ規則に関連付けられている可能性がありますに、新しいコンテンツを追加する位置です。</span><span class="sxs-lookup"><span data-stu-id="29c82-352">An insertion position is a position where new content may be added without breaking any semantic rules for the associated content.</span></span>  <span data-ttu-id="29c82-353">実際には、挿入位置は、キャレットを配置する場所のコンテンツで任意の場所です。</span><span class="sxs-lookup"><span data-stu-id="29c82-353">In practice, an insertion position is anywhere in content where a caret may be positioned.</span></span>  <span data-ttu-id="29c82-354">有効な例<xref:System.Windows.Documents.TextPointer>挿入位置ではない位置は 2 つの隣接する位置<xref:System.Windows.Documents.Paragraph>タグ (つまり、前の段落の終わりのタグと次の段落の開始タグの間で)。</span><span class="sxs-lookup"><span data-stu-id="29c82-354">An example of a valid <xref:System.Windows.Documents.TextPointer> position that is not an insertion position is the position between two adjacent <xref:System.Windows.Documents.Paragraph> tags (that is, between the closing tag of the preceding paragraph and the opening tag of the next paragraph).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.TextPointer.GetInsertionPosition(System.Windows.Documents.LogicalDirection)" />
        <altmember cref="M:System.Windows.Documents.TextPointer.GetNextInsertionPosition(System.Windows.Documents.LogicalDirection)" />
      </Docs>
    </Member>
    <Member MemberName="IsAtLineStartPosition">
      <MemberSignature Language="C#" Value="public bool IsAtLineStartPosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAtLineStartPosition" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.IsAtLineStartPosition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAtLineStartPosition As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAtLineStartPosition { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="29c82-355">現在の位置が行頭にあるかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-355">Gets a value that indicates whether the current position is at the beginning of a line.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="29c82-356">現在の位置が行頭にある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-356">
              <see langword="true" /> if the current position is at the beginning of a line; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29c82-357">場合、<xref:System.Windows.Documents.TextPointer>を指すあいまいな位置、たとえば、2 つの線の間で指定された方向に行、<xref:System.Windows.Documents.TextPointer.LogicalDirection%2A>プロパティが相対の開始行として選択されています。</span><span class="sxs-lookup"><span data-stu-id="29c82-357">If the <xref:System.Windows.Documents.TextPointer> points to an ambiguous position, for example, between two lines, the line in the direction specified by the <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> property is selected as the relative starting line.</span></span>  
  
 <span data-ttu-id="29c82-358">このプロパティによって実行される操作は、有効なレイアウトによって異なります。</span><span class="sxs-lookup"><span data-stu-id="29c82-358">The operation performed by this property depends on a valid layout.</span></span>  <span data-ttu-id="29c82-359">必要に応じて、このメソッドは、操作を続行する前に有効なレイアウトを自動的に再生成しようとします。</span><span class="sxs-lookup"><span data-stu-id="29c82-359">When necessary, this method attempts to automatically regenerate a valid layout before proceeding with the operation.</span></span>  <span data-ttu-id="29c82-360">レイアウトを再生成すると、比較的コストのかかる操作を指定できます。</span><span class="sxs-lookup"><span data-stu-id="29c82-360">Regenerating a layout can be a relatively expensive operation.</span></span>  <span data-ttu-id="29c82-361">使用して、<xref:System.Windows.Documents.TextPointer.HasValidLayout%2A>レイアウトを再生成する操作を実行する前に有効なレイアウトを確認するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="29c82-361">Use the <xref:System.Windows.Documents.TextPointer.HasValidLayout%2A> property to check for a valid layout before performing operations that may regenerate the layout.</span></span>  <span data-ttu-id="29c82-362">詳細については、次を参照してください。[レイアウト](~/docs/framework/wpf/advanced/layout.md)です。</span><span class="sxs-lookup"><span data-stu-id="29c82-362">For more information, see [Layout](~/docs/framework/wpf/advanced/layout.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.TextPointer.IsAtLineStartPosition" />
      </Docs>
    </Member>
    <Member MemberName="IsInSameDocument">
      <MemberSignature Language="C#" Value="public bool IsInSameDocument (System.Windows.Documents.TextPointer textPosition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsInSameDocument(class System.Windows.Documents.TextPointer textPosition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.IsInSameDocument(System.Windows.Documents.TextPointer)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsInSameDocument (textPosition As TextPointer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsInSameDocument(System::Windows::Documents::TextPointer ^ textPosition);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textPosition" Type="System.Windows.Documents.TextPointer" />
      </Parameters>
      <Docs>
        <param name="textPosition">
          <span data-ttu-id="29c82-363">現在の位置と比較する位置を指定する <see cref="T:System.Windows.Documents.TextPointer" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-363">A <see cref="T:System.Windows.Documents.TextPointer" /> that specifies a position to compare to the current position.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29c82-364">指定された位置が現在の位置と同じテキスト コンテナーに含まれているかどうかを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-364">Indicates whether the specified position is in the same text container as the current position.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="29c82-365">
            <paramref name="textPosition" /> が示す位置が現在の位置と同じテキスト コンテナー内にある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-365">
              <see langword="true" /> if <paramref name="textPosition" /> indicates a position that is in the same text container as the current position; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29c82-366">複数の関連するほとんどの操作<xref:System.Windows.Documents.TextPointer>インスタンスは、対象のインスタンスに同じテキスト コンテナーのスコープ内の位置が示されている場合にのみ有効です。</span><span class="sxs-lookup"><span data-stu-id="29c82-366">Most operations that involve multiple <xref:System.Windows.Documents.TextPointer> instances are only valid if the instances in question indicate positions that are in the same text container scope.</span></span>  <span data-ttu-id="29c82-367">たとえば、<xref:System.Windows.Documents.TextPointer.CompareTo%2A>と<xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A>でメソッドを使用することはできません、<xref:System.Windows.Documents.TextPointer>を現在の位置に関連付けられたテキスト コンテナーの外部での位置。</span><span class="sxs-lookup"><span data-stu-id="29c82-367">For example the <xref:System.Windows.Documents.TextPointer.CompareTo%2A> and <xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A> methods cannot be used with a <xref:System.Windows.Documents.TextPointer> to a position outside of the text container associated with the current position.</span></span>  <span data-ttu-id="29c82-368">このメソッドを使用していることを確認、指定した<xref:System.Windows.Documents.TextPointer>はこのような操作の現在の位置と互換性ができます。</span><span class="sxs-lookup"><span data-stu-id="29c82-368">Use this method to verify that a specified <xref:System.Windows.Documents.TextPointer> is compatible with the current position for such operations.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29c82-369">次の例では、このメソッドの使用を示します。</span><span class="sxs-lookup"><span data-stu-id="29c82-369">The following example demonstrates a use for this method.</span></span>  <span data-ttu-id="29c82-370">この例では、 <xref:System.Windows.Documents.TextPointer.IsInSameDocument%2A> 、指定したかどうかを確認する方法を<xref:System.Windows.Documents.TextPointer>他の指定した 2 つの間に配置された<xref:System.Windows.Documents.TextPointer>すべての 3 つの位置が同じテキスト コンテナーに属していることの保証がないときの状況でのインスタンス。</span><span class="sxs-lookup"><span data-stu-id="29c82-370">The example uses the <xref:System.Windows.Documents.TextPointer.IsInSameDocument%2A> method to check whether a specified <xref:System.Windows.Documents.TextPointer> is positioned between two other specified <xref:System.Windows.Documents.TextPointer> instances in a situation when there is no guarantee that all three positions belong to the same text container.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_IsInSameDocument](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_isinsamedocument)]
 [!code-vb[TextPointer_Snippets#_TextPointer_IsInSameDocument](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_isinsamedocument)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="29c82-371">
            <paramref name="textPosition" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-371">
              <paramref name="textPosition" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="LogicalDirection">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.LogicalDirection LogicalDirection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Documents.LogicalDirection LogicalDirection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.LogicalDirection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LogicalDirection As LogicalDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::LogicalDirection LogicalDirection { System::Windows::Documents::LogicalDirection get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Documents.ITextPointer.LogicalDirection</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.LogicalDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="29c82-372">現在の位置に関連付けられている論理方向を取得します。論理方向は、現在の位置に関連付けられているコンテンツのあいまいさを解消するために使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-372">Gets the logical direction associated with the current position which is used to disambiguate content associated with the current position.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="29c82-373">現在の位置に関連付けられている <see cref="T:System.Windows.Documents.LogicalDirection" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-373">The <see cref="T:System.Windows.Documents.LogicalDirection" /> value that is associated with the current position.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29c82-374">このプロパティの使用方法の例として、<xref:System.Windows.Documents.LogicalDirection>の<xref:System.Windows.Documents.TextPointer>返されるヒット テストによって方法では 2 つの文字のテキストの間にあるヒットします。</span><span class="sxs-lookup"><span data-stu-id="29c82-374">As an example of how this property is used, the <xref:System.Windows.Documents.LogicalDirection> of the <xref:System.Windows.Documents.TextPointer> returned by a hit test method gives a hit that is between two characters of text.</span></span> <span data-ttu-id="29c82-375">論理の方向は、実際にヒットする 2 つの文字を指定します: 左側または右側です。</span><span class="sxs-lookup"><span data-stu-id="29c82-375">The logical direction specifies which of the two characters was actually hit—the left or the right.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Paragraph">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.Paragraph Paragraph { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.Paragraph Paragraph" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.Paragraph" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Paragraph As Paragraph" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::Paragraph ^ Paragraph { System::Windows::Documents::Paragraph ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.Paragraph</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="29c82-376">現在の位置のスコープとなる段落を取得します (存在する場合)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-376">Gets the paragraph that scopes the current position, if any.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="29c82-377">
            <see cref="T:System.Windows.Documents.Paragraph" />現在の位置のスコープをまたは<see langword="null" />このような段落が存在しない場合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-377">The <see cref="T:System.Windows.Documents.Paragraph" /> that scopes the current position, or <see langword="null" /> if no such paragraph exists.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Documents.TextPointer.Parent" />
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyObject Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyObject Parent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DependencyObject ^ Parent { System::Windows::DependencyObject ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="29c82-378">現在の位置のスコープとなる論理上の親を取得します (存在する場合)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-378">Gets the logical parent that scopes the current position.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="29c82-379">現在の位置のスコープとなる論理上の親。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-379">The logical parent that scopes the current position.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Documents.TextPointer.Paragraph" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="29c82-380">この型またはメンバーは、[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-380">This type or member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="29c82-381">オブジェクトを表す文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29c82-381">The string that represents the object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>