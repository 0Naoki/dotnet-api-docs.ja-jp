<Type Name="ListItem" FullName="System.Windows.Documents.ListItem">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="21efbdd61782ae1cbaec1a44d5fdf573043b4a6f" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36362488" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ListItem : System.Windows.Documents.TextElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ListItem extends System.Windows.Documents.TextElement" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Documents.ListItem" />
  <TypeSignature Language="VB.NET" Value="Public Class ListItem&#xA;Inherits TextElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class ListItem : System::Windows::Documents::TextElement" />
  <TypeSignature Language="F#" Value="type ListItem = class&#xA;    inherit TextElement" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Documents.TextElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Blocks")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="c6970-101">順序付きまたは順序の付いていない <see cref="T:System.Windows.Documents.List" /> 内の特定のコンテンツ項目を表すフロー コンテンツ要素。</span>
      <span class="sxs-lookup">
        <span data-stu-id="c6970-101">A flow content element that represents a particular content item in an ordered or unordered <see cref="T:System.Windows.Documents.List" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6970-102"><xref:System.Windows.Documents.ListItem> 子コンテンツの強力なコンテンツ モデルを適用します。</span><span class="sxs-lookup"><span data-stu-id="c6970-102"><xref:System.Windows.Documents.ListItem> enforces a strong content model for child content.</span></span> <span data-ttu-id="c6970-103">参照してください[TextElement コンテンツ モデルの概要](~/docs/framework/wpf/advanced/textelement-content-model-overview.md)の詳細については、<xref:System.Windows.Documents.ListItem>コンテンツ モデルです。</span><span class="sxs-lookup"><span data-stu-id="c6970-103">See [TextElement Content Model Overview](~/docs/framework/wpf/advanced/textelement-content-model-overview.md) for more information about the <xref:System.Windows.Documents.ListItem> content model.</span></span>  
  
 <span data-ttu-id="c6970-104"><xref:System.Windows.Documents.ListItem> 要素が含まれている必要があります、<xref:System.Windows.Documents.List>要素。</span><span class="sxs-lookup"><span data-stu-id="c6970-104"><xref:System.Windows.Documents.ListItem> elements must be contained by a <xref:System.Windows.Documents.List> element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6970-105">次の例は、定義する方法を示します、<xref:System.Windows.Documents.List>を使用して[!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)]です。</span><span class="sxs-lookup"><span data-stu-id="c6970-105">The following example shows how to define a <xref:System.Windows.Documents.List> using [!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)].</span></span>  
  
 [!code-xaml[ListSnippets#_ListXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/ListSnippets/CSharp/Window1.xaml#_listxaml)]  
  
 <span data-ttu-id="c6970-106">次の例を作成し、設定する方法を示しています、<xref:System.Windows.Documents.List>プログラムでします。</span><span class="sxs-lookup"><span data-stu-id="c6970-106">The following example shows how to create and populate a <xref:System.Windows.Documents.List> programmatically.</span></span>  
  
 [!code-csharp[ListSnippets#_List_Props](~/samples/snippets/csharp/VS_Snippets_Wpf/ListSnippets/CSharp/Window1.xaml.cs#_list_props)]
 [!code-vb[ListSnippets#_List_Props](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ListSnippets/visualbasic/window1.xaml.vb#_list_props)]  
  
 <span data-ttu-id="c6970-107">この例の表示結果を次の図に示します。</span><span class="sxs-lookup"><span data-stu-id="c6970-107">The following figure shows how this example renders.</span></span>  
  
 <span data-ttu-id="c6970-108">![スクリーン ショット: 順序指定された](~/add/media/ordered-list.png "スクリーン ショット: 順序付きリスト")</span><span class="sxs-lookup"><span data-stu-id="c6970-108">![Screenshot: Ordered list](~/add/media/ordered-list.png "Screenshot: Ordered list")</span></span>  
  
 <span data-ttu-id="c6970-109">次の例は、入れ子になったを定義する方法を示しています。 <xref:System.Windows.Documents.List> (一覧内でリスト) を使用して[!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)]です。</span><span class="sxs-lookup"><span data-stu-id="c6970-109">The following example shows how to define a nested <xref:System.Windows.Documents.List> (lists within lists) using [!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)].</span></span>  
  
 [!code-xaml[ListSnippets#_NestedListXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/ListSnippets/CSharp/Window1.xaml#_nestedlistxaml)]  
  
 <span data-ttu-id="c6970-110">この例の表示結果を次の図に示します。</span><span class="sxs-lookup"><span data-stu-id="c6970-110">The following figure shows how this example renders.</span></span>  
  
 <span data-ttu-id="c6970-111">![入れ子になったリスト](~/add/media/flow-nested-list-example.png "入れ子になったリスト")</span><span class="sxs-lookup"><span data-stu-id="c6970-111">![Nested list](~/add/media/flow-nested-list-example.png "Nested list")</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c6970-112">
            <see cref="T:System.Windows.Documents.ListItem" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6970-112">Initializes a new instance of the <see cref="T:System.Windows.Documents.ListItem" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListItem ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.ListItem.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListItem();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c6970-113">
            <see cref="T:System.Windows.Documents.ListItem" /> クラスの新しい空のインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6970-113">Initializes a new, empty instance of the <see cref="T:System.Windows.Documents.ListItem" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListItem (System.Windows.Documents.Paragraph paragraph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Documents.Paragraph paragraph) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.ListItem.#ctor(System.Windows.Documents.Paragraph)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListItem(System::Windows::Documents::Paragraph ^ paragraph);" />
      <MemberSignature Language="F#" Value="new System.Windows.Documents.ListItem : System.Windows.Documents.Paragraph -&gt; System.Windows.Documents.ListItem" Usage="new System.Windows.Documents.ListItem paragraph" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="paragraph" Type="System.Windows.Documents.Paragraph" />
      </Parameters>
      <Docs>
        <param name="paragraph">
          <span data-ttu-id="c6970-114">新しい <see cref="T:System.Windows.Documents.Paragraph" /> の初期コンテンツを指定する <see cref="T:System.Windows.Documents.ListItem" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6970-114">A <see cref="T:System.Windows.Documents.Paragraph" /> object specifying the initial contents of the new <see cref="T:System.Windows.Documents.ListItem" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6970-115">指定した <see cref="T:System.Windows.Documents.ListItem" /> オブジェクトを新しい <see cref="T:System.Windows.Documents.Paragraph" /> の初期コンテンツとして受け取って、<see cref="T:System.Windows.Documents.ListItem" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6970-115">Initializes a new instance of the <see cref="T:System.Windows.Documents.ListItem" /> class, taking a specified <see cref="T:System.Windows.Documents.Paragraph" /> object as the initial contents of the new <see cref="T:System.Windows.Documents.ListItem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c6970-116">次の例では、このコンス トラクターの使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="c6970-116">The following example demonstrates usage of this constructor.</span></span>  
  
 [!code-csharp[ListSnippets#_List_Const](~/samples/snippets/csharp/VS_Snippets_Wpf/ListSnippets/CSharp/Window1.xaml.cs#_list_const)]
 [!code-vb[ListSnippets#_List_Const](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ListSnippets/visualbasic/window1.xaml.vb#_list_const)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Blocks">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.BlockCollection Blocks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.BlockCollection Blocks" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.ListItem.Blocks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Blocks As BlockCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::BlockCollection ^ Blocks { System::Windows::Documents::BlockCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Blocks : System.Windows.Documents.BlockCollection" Usage="System.Windows.Documents.ListItem.Blocks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.BlockCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6970-117">
            <see cref="T:System.Windows.Documents.Block" /> のトップレベルの <see cref="T:System.Windows.Documents.ListItem" /> 要素が格納されるブロック コレクションを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6970-117">Gets a block collection that contains the top-level <see cref="T:System.Windows.Documents.Block" /> elements of the <see cref="T:System.Windows.Documents.ListItem" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c6970-118">
            <see cref="T:System.Windows.Documents.Block" /> の <see cref="T:System.Windows.Documents.ListItem" /> 要素が格納されるブロック コレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6970-118">A block collection that contains the <see cref="T:System.Windows.Documents.Block" /> elements of the <see cref="T:System.Windows.Documents.ListItem" /></span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6970-119">このプロパティによって返されるブロック コレクションを列挙またはの内容を操作を使用して、<xref:System.Windows.Documents.Section>要素。</span><span class="sxs-lookup"><span data-stu-id="c6970-119">Use the block collection returned by this property to enumerate or manipulate the contents of a <xref:System.Windows.Documents.Section> element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderBrush">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Brush BorderBrush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Brush BorderBrush" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.ListItem.BorderBrush" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderBrush As Brush" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Brush ^ BorderBrush { System::Windows::Media::Brush ^ get(); void set(System::Windows::Media::Brush ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BorderBrush : System.Windows.Media.Brush with get, set" Usage="System.Windows.Documents.ListItem.BorderBrush" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Brush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6970-120">要素の境界線を描画するときに使用する <see cref="T:System.Windows.Media.Brush" /> を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6970-120">Gets or sets a <see cref="T:System.Windows.Media.Brush" /> to use when painting the element's border.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c6970-121">要素の境界線に適用するために使用するブラシ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6970-121">The brush used to apply to the element's border.</span>
          </span>
          <span data-ttu-id="c6970-122">既定値は、<see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6970-122">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6970-123">使用可能な定義済みのブラシの色の表は、次を参照してください。<xref:System.Windows.Media.Brushes>です。</span><span class="sxs-lookup"><span data-stu-id="c6970-123">For a table of swatches that show the available predefined brush colors, see <xref:System.Windows.Media.Brushes>.</span></span>  
  
<a name="dependencyPropertyInfo_BorderBrush"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="c6970-124">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="c6970-124">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c6970-125">識別子のフィールド</span><span class="sxs-lookup"><span data-stu-id="c6970-125">Identifier field</span></span>|<xref:System.Windows.Documents.ListItem.BorderBrushProperty>|  
|<span data-ttu-id="c6970-126">メタデータ プロパティに設定します。 `true`</span><span class="sxs-lookup"><span data-stu-id="c6970-126">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="c6970-127">次の例は、設定する方法を示します、<xref:System.Windows.Documents.ListItem.BorderBrush%2A>の属性、<xref:System.Windows.Documents.Block>要素 (<xref:System.Windows.Documents.Paragraph>)。</span><span class="sxs-lookup"><span data-stu-id="c6970-127">The following example shows how to set the <xref:System.Windows.Documents.ListItem.BorderBrush%2A> attribute of a <xref:System.Windows.Documents.Block> element (<xref:System.Windows.Documents.Paragraph>).</span></span>  
  
 [!code-xaml[BlockSnippets#_Block_BordersXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml#_block_bordersxaml)]  
  
 <span data-ttu-id="c6970-128">この例の表示結果を次の図に示します。</span><span class="sxs-lookup"><span data-stu-id="c6970-128">The following figure shows how this example renders.</span></span>  
  
 <span data-ttu-id="c6970-129">![スクリーン ショット: 青、1&#47;4 インチ ブロック境界線](~/add/media/block-borders.png "スクリーン ショット: 青、1/4 インチ境界線ブロック")</span><span class="sxs-lookup"><span data-stu-id="c6970-129">![Screenshot: Blue, 1&#47;4inch border around Block](~/add/media/block-borders.png "Screenshot: Blue, 1/4inch border around Block")</span></span>  
  
 <span data-ttu-id="c6970-130">次の例は、設定する方法を示します、<xref:System.Windows.Documents.ListItem.BorderBrush%2A>プロパティ プログラムでします。</span><span class="sxs-lookup"><span data-stu-id="c6970-130">The following example shows how to set the <xref:System.Windows.Documents.ListItem.BorderBrush%2A> property programmatically.</span></span>  
  
 [!code-csharp[BlockSnippets#_Block_Borders](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml.cs#_block_borders)]
 [!code-vb[BlockSnippets#_Block_Borders](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BlockSnippets/visualbasic/window1.xaml.vb#_block_borders)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.ListItem.BorderThickness" />
      </Docs>
    </Member>
    <Member MemberName="BorderBrushProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty BorderBrushProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty BorderBrushProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.ListItem.BorderBrushProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BorderBrushProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ BorderBrushProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable BorderBrushProperty : System.Windows.DependencyProperty" Usage="System.Windows.Documents.ListItem.BorderBrushProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6970-131">
            <see cref="P:System.Windows.Documents.ListItem.BorderBrush" /> 依存関係プロパティを識別します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6970-131">Identifies the <see cref="P:System.Windows.Documents.ListItem.BorderBrush" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderThickness">
      <MemberSignature Language="C#" Value="public System.Windows.Thickness BorderThickness { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Thickness BorderThickness" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.ListItem.BorderThickness" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderThickness As Thickness" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Thickness BorderThickness { System::Windows::Thickness get(); void set(System::Windows::Thickness value); };" />
      <MemberSignature Language="F#" Value="member this.BorderThickness : System.Windows.Thickness with get, set" Usage="System.Windows.Documents.ListItem.BorderThickness" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Thickness</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6970-132">要素の境界線の太さを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6970-132">Gets or sets the border thickness for the element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c6970-133">適用する境界線の量を指定する <see cref="T:System.Windows.Thickness" /> 構造体。デバイス非依存のピクセル単位で指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6970-133">A <see cref="T:System.Windows.Thickness" /> structure that specifies the amount of border to apply, in device independent pixels.</span>
          </span>
          <span data-ttu-id="c6970-134">既定では 0 (0.0) の均一の幅です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6970-134">The default is a uniform thickness of zero (0.0).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_BorderThickness"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c6970-135">XAML 属性の使用方法</span><span class="sxs-lookup"><span data-stu-id="c6970-135">XAML Attribute Usage</span></span>  
  
```  
<object BorderThickness="uniformThickness"/>  
- or -  
<object BorderThickness="independentThickness"/>  
- or -  
<object BorderThickness="qualifiedUniformThickness"/>  
- or -  
<object BorderThickness="qualifiedIndependentThickness"/>  
```  
  
<a name="xamlValues_BorderThickness"></a>   
## <a name="xaml-values"></a><span data-ttu-id="c6970-136">XAML 値</span><span class="sxs-lookup"><span data-stu-id="c6970-136">XAML Values</span></span>  
 <span data-ttu-id="c6970-137">*uniformThickness*</span><span class="sxs-lookup"><span data-stu-id="c6970-137">*uniformThickness*</span></span>  
 <span data-ttu-id="c6970-138">1 つの文字列表現<xref:System.Double>4 つすべての厚みを一様に適用する値。</span><span class="sxs-lookup"><span data-stu-id="c6970-138">String representation of a single <xref:System.Double> value to apply uniformly to all four thickness dimensions.</span></span>  <span data-ttu-id="c6970-139">たとえば、値の`"10"`はの値に相当`"10,10,10,10"`です。</span><span class="sxs-lookup"><span data-stu-id="c6970-139">For example, a value of `"10"` is equivalent to a value of `"10,10,10,10"`.</span></span>  <span data-ttu-id="c6970-140">修飾されていない値は、デバイス非依存ピクセル単位で計測されます。</span><span class="sxs-lookup"><span data-stu-id="c6970-140">An unqualified value is measured in device independent pixels.</span></span> <span data-ttu-id="c6970-141">明示的に、文字列では、小数点を含める必要がありますされません。</span><span class="sxs-lookup"><span data-stu-id="c6970-141">Strings need not explicitly include decimal points.</span></span>  
  
 <span data-ttu-id="c6970-142">*independentThickness*</span><span class="sxs-lookup"><span data-stu-id="c6970-142">*independentThickness*</span></span>  
 <span data-ttu-id="c6970-143">順序付けに 4 つの文字列表現<xref:System.Double>左、上の太さの独立したディメンションに対応する値が右、および下には、この順序で。</span><span class="sxs-lookup"><span data-stu-id="c6970-143">String representation of four ordered <xref:System.Double> values corresponding to independent thickness dimensions for left, top, right, and bottom, in this order.</span></span>  <span data-ttu-id="c6970-144">4 つの値をコンマで区切る必要があります。スペースは使用できません。</span><span class="sxs-lookup"><span data-stu-id="c6970-144">The four values must be separated with commas; spaces are not allowed.</span></span>  <span data-ttu-id="c6970-145">たとえば、「5,10,15,20」結果 5 ピクセルの境界線のコンテンツ、コンテンツの上枠線のピクセルを 10、15 ピクセル、コンテンツの右に罫線のおよびコンテンツの下罫線の 20 ピクセルの左側にします。</span><span class="sxs-lookup"><span data-stu-id="c6970-145">For example, "5,10,15,20" results in 5 pixels of border to the left of content, 10 pixels of border above content, 15 pixels of border to the right of content, and 20 pixels of border below the content.</span></span>  
  
 <span data-ttu-id="c6970-146">*qualifiedUniformThickness*</span><span class="sxs-lookup"><span data-stu-id="c6970-146">*qualifiedUniformThickness*</span></span>  
 <span data-ttu-id="c6970-147">記述された値*uniformThickness*後に、次の単位指定子の 1 つ: `px`、`in`です。</span><span class="sxs-lookup"><span data-stu-id="c6970-147">A value described by *uniformThickness* followed by one of the following unit specifiers: `px`, `in`.</span></span>  
  
 <span data-ttu-id="c6970-148">`px` (既定値) [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span><span class="sxs-lookup"><span data-stu-id="c6970-148">`px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span></span>  
  
 <span data-ttu-id="c6970-149">`in` インチです。1 96px を = =</span><span class="sxs-lookup"><span data-stu-id="c6970-149">`in` is inches; 1in==96px</span></span>  
  
 <span data-ttu-id="c6970-150">たとえば、`"1in"`すべての方向に 1 インチの均一の境界を提供します。</span><span class="sxs-lookup"><span data-stu-id="c6970-150">For example, `"1in"` provides uniform border of 1 inch in all directions.</span></span>  
  
 <span data-ttu-id="c6970-151">*qualifiedIndependentThickness*</span><span class="sxs-lookup"><span data-stu-id="c6970-151">*qualifiedIndependentThickness*</span></span>  
 <span data-ttu-id="c6970-152">記述された値*independentThickness*、後に、次の単位指定子の 1 つの独立した各値を持つ: `px`、`in`です。</span><span class="sxs-lookup"><span data-stu-id="c6970-152">A value described by *independentThickness*, with each independent value followed by one of the following unit specifiers: `px`, `in`.</span></span>  
  
 <span data-ttu-id="c6970-153">`px` (既定値) [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span><span class="sxs-lookup"><span data-stu-id="c6970-153">`px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span></span>  
  
 <span data-ttu-id="c6970-154">`in` インチです。1 96px を = =</span><span class="sxs-lookup"><span data-stu-id="c6970-154">`in` is inches; 1in==96px</span></span>  
  
 <span data-ttu-id="c6970-155">たとえば、`"1.5in,0.8in,1.5in,0.8in"` のようにします。</span><span class="sxs-lookup"><span data-stu-id="c6970-155">For example, `"1.5in,0.8in,1.5in,0.8in"`.</span></span>  <span data-ttu-id="c6970-156">単位指定子は、混合または 1 つまたは複数の値からを省略すると場合があります。</span><span class="sxs-lookup"><span data-stu-id="c6970-156">Unit specifiers may be mixed or omitted from one or more values.</span></span>  
  
<a name="dependencyPropertyInfo_BorderThickness"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="c6970-157">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="c6970-157">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c6970-158">識別子のフィールド</span><span class="sxs-lookup"><span data-stu-id="c6970-158">Identifier field</span></span>|<xref:System.Windows.Documents.ListItem.BorderThicknessProperty>|  
|<span data-ttu-id="c6970-159">メタデータ プロパティに設定します。 `true`</span><span class="sxs-lookup"><span data-stu-id="c6970-159">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="c6970-160">次の例は、設定する方法を示します、<xref:System.Windows.Documents.ListItem.BorderThickness%2A>の属性、<xref:System.Windows.Documents.Block>要素 (<xref:System.Windows.Documents.Paragraph>)。</span><span class="sxs-lookup"><span data-stu-id="c6970-160">The following example shows how to set the <xref:System.Windows.Documents.ListItem.BorderThickness%2A> attribute of a <xref:System.Windows.Documents.Block> element (<xref:System.Windows.Documents.Paragraph>).</span></span>  
  
 [!code-xaml[BlockSnippets#_Block_BordersXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml#_block_bordersxaml)]  
  
 <span data-ttu-id="c6970-161">この例の表示結果を次の図に示します。</span><span class="sxs-lookup"><span data-stu-id="c6970-161">The following figure shows how this example renders.</span></span>  
  
 <span data-ttu-id="c6970-162">![スクリーン ショット: 青、1&#47;4 インチ ブロック境界線](~/add/media/block-borders.png "スクリーン ショット: 青、1/4 インチ境界線ブロック")</span><span class="sxs-lookup"><span data-stu-id="c6970-162">![Screenshot: Blue, 1&#47;4inch border around Block](~/add/media/block-borders.png "Screenshot: Blue, 1/4inch border around Block")</span></span>  
  
 <span data-ttu-id="c6970-163">次の例は、設定する方法を示します、<xref:System.Windows.Documents.ListItem.BorderThickness%2A>プロパティ プログラムでします。</span><span class="sxs-lookup"><span data-stu-id="c6970-163">The following example shows how to set the <xref:System.Windows.Documents.ListItem.BorderThickness%2A> property programmatically.</span></span>  
  
 [!code-csharp[BlockSnippets#_Block_Borders](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml.cs#_block_borders)]
 [!code-vb[BlockSnippets#_Block_Borders](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BlockSnippets/visualbasic/window1.xaml.vb#_block_borders)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.ListItem.BorderBrush" />
      </Docs>
    </Member>
    <Member MemberName="BorderThicknessProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty BorderThicknessProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty BorderThicknessProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.ListItem.BorderThicknessProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BorderThicknessProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ BorderThicknessProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable BorderThicknessProperty : System.Windows.DependencyProperty" Usage="System.Windows.Documents.ListItem.BorderThicknessProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6970-164">
            <see cref="P:System.Windows.Documents.ListItem.BorderThickness" /> 依存関係プロパティを識別します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6970-164">Identifies the <see cref="P:System.Windows.Documents.ListItem.BorderThickness" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FlowDirection">
      <MemberSignature Language="C#" Value="public System.Windows.FlowDirection FlowDirection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.FlowDirection FlowDirection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.ListItem.FlowDirection" />
      <MemberSignature Language="VB.NET" Value="Public Property FlowDirection As FlowDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::FlowDirection FlowDirection { System::Windows::FlowDirection get(); void set(System::Windows::FlowDirection value); };" />
      <MemberSignature Language="F#" Value="member this.FlowDirection : System.Windows.FlowDirection with get, set" Usage="System.Windows.Documents.ListItem.FlowDirection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FlowDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6970-165">
            <see cref="T:System.Windows.Documents.ListItem" /> 要素内のコンテンツのフローの相対的な方向を指定する値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6970-165">Gets or sets the relative direction for flow of content within a <see cref="T:System.Windows.Documents.ListItem" /> element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c6970-166">相対的なフロー方向を指定する <see cref="T:System.Windows.FlowDirection" /> 値のいずれか。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6970-166">One of the <see cref="T:System.Windows.FlowDirection" /> values that specifies the relative flow direction.</span>
          </span>
          <span data-ttu-id="c6970-167">既定値は、<see cref="F:System.Windows.FlowDirection.LeftToRight" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6970-167">The default is <see cref="F:System.Windows.FlowDirection.LeftToRight" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6970-168">このプロパティを取得すると、現在有効なフロー方向が返されます。</span><span class="sxs-lookup"><span data-stu-id="c6970-168">Getting this property returns the currently effective flow direction.</span></span>  <span data-ttu-id="c6970-169">このプロパティを設定すると、<xref:System.Windows.Documents.ListItem> 要素のコンテンツが指定した方向に再フローされます。</span><span class="sxs-lookup"><span data-stu-id="c6970-169">Setting this property causes the contents of the <xref:System.Windows.Documents.ListItem> element to re-flow in the indicated direction.</span></span>  
  
 <span data-ttu-id="c6970-170">コンテンツのフローの方向は、通常、表される言語の固有のフロー方向に対応します。</span><span class="sxs-lookup"><span data-stu-id="c6970-170">The flow direction of content typically corresponds to the innate flow direction of the language being represented.</span></span>  <span data-ttu-id="c6970-171">ヘブライ語やアラビア語は、必然的に右から左に流れる言語の例を示します。</span><span class="sxs-lookup"><span data-stu-id="c6970-171">Hebrew and Arabic are examples of languages that naturally flow from right to left.</span></span>  <span data-ttu-id="c6970-172">英語、ドイツ語、およびロシア語は、左から右に必然的にフローする言語の例を示します。</span><span class="sxs-lookup"><span data-stu-id="c6970-172">English, German, and Russian are examples of languages that naturally flow from left to right.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c6970-173">このプロパティの値は、オペレーティング システムで使用される言語に合わせて自動的には変更されません。</span><span class="sxs-lookup"><span data-stu-id="c6970-173">The value of this property is not automatically changed to match the language used by the operating system.</span></span> <span data-ttu-id="c6970-174">かどうかの既定値は異なる値を使用する必要があります<xref:System.Windows.FlowDirection.LeftToRight>、自分でに指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="c6970-174">If you need to use a different value than the default of <xref:System.Windows.FlowDirection.LeftToRight>, you must specify it yourself.</span></span>  
  
<a name="dependencyPropertyInfo_FlowDirection"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="c6970-175">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="c6970-175">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c6970-176">識別子のフィールド</span><span class="sxs-lookup"><span data-stu-id="c6970-176">Identifier field</span></span>|<xref:System.Windows.Documents.ListItem.FlowDirectionProperty>|  
|<span data-ttu-id="c6970-177">メタデータ プロパティに設定します。 `true`</span><span class="sxs-lookup"><span data-stu-id="c6970-177">Metadata properties set to `true`</span></span>|<span data-ttu-id="c6970-178"><xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsParentArrange%2A></span><span class="sxs-lookup"><span data-stu-id="c6970-178"><xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsParentArrange%2A></span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="c6970-179">次の例は、設定する方法を示します、<xref:System.Windows.Documents.ListItem.FlowDirection%2A>の属性、<xref:System.Windows.Documents.Block>要素 (<xref:System.Windows.Documents.Paragraph>)。</span><span class="sxs-lookup"><span data-stu-id="c6970-179">The following example shows how to set the <xref:System.Windows.Documents.ListItem.FlowDirection%2A> attribute of a <xref:System.Windows.Documents.Block> element (<xref:System.Windows.Documents.Paragraph>).</span></span>  
  
 [!code-xaml[BlockSnippets#_Block_FlowDirectionXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml#_block_flowdirectionxaml)]  
  
 <span data-ttu-id="c6970-180">次の例は、設定する方法を示します、<xref:System.Windows.Documents.ListItem.FlowDirection%2A>プロパティ プログラムでします。</span><span class="sxs-lookup"><span data-stu-id="c6970-180">The following example shows how to set the <xref:System.Windows.Documents.ListItem.FlowDirection%2A> property programmatically.</span></span>  
  
 [!code-csharp[BlockSnippets#_Block_FlowDirection](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml.cs#_block_flowdirection)]
 [!code-vb[BlockSnippets#_Block_FlowDirection](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BlockSnippets/visualbasic/window1.xaml.vb#_block_flowdirection)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FlowDirectionProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FlowDirectionProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FlowDirectionProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.ListItem.FlowDirectionProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FlowDirectionProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ FlowDirectionProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable FlowDirectionProperty : System.Windows.DependencyProperty" Usage="System.Windows.Documents.ListItem.FlowDirectionProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6970-181">
            <see cref="P:System.Windows.Documents.ListItem.FlowDirection" /> 依存関係プロパティを識別します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6970-181">Identifies the <see cref="P:System.Windows.Documents.ListItem.FlowDirection" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineHeight">
      <MemberSignature Language="C#" Value="public double LineHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 LineHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.ListItem.LineHeight" />
      <MemberSignature Language="VB.NET" Value="Public Property LineHeight As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double LineHeight { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.LineHeight : double with get, set" Usage="System.Windows.Documents.ListItem.LineHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.LengthConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6970-182">コンテンツの各行の高さを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6970-182">Gets or sets the height of each line of content.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c6970-183">各行の高さ。単位はデバイスに依存しないピクセルで、値は 0.0034 から 160000 までの範囲です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6970-183">The height of each line in device independent pixels with a value range of 0.0034 to 160000.</span>
          </span>
          <span data-ttu-id="c6970-184">値<see cref="F:System.Double.NaN" />(属性値に相当"<c>自動</c>")、行の高さが現在のフォント特性から自動的に決定されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6970-184">A value of <see cref="F:System.Double.NaN" /> (equivalent to an attribute value of "<c>Auto</c>") causes the line height to be determined automatically from the current font characteristics.</span>
          </span>
          <span data-ttu-id="c6970-185">既定値は、<see cref="F:System.Double.NaN" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6970-185">The default is <see cref="F:System.Double.NaN" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6970-186">変更、<xref:System.Windows.Documents.ListItem.LineHeight%2A>値が関連付けられているテキストの高さを変更していません; 代わりに、テキストを含む行の高さを変更します。</span><span class="sxs-lookup"><span data-stu-id="c6970-186">Changing the <xref:System.Windows.Documents.ListItem.LineHeight%2A> value does not change the height of the associated text; rather, it changes the height of the line that contains the text.</span></span>  
  
 <span data-ttu-id="c6970-187">このプロパティでは、内の行のレイアウトだけでなく、<xref:System.Windows.Documents.ListItem>の影響を受けるその<xref:System.Windows.Documents.ListItem.LineStackingStrategy%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="c6970-187">In addition to this property, the layout of lines in a <xref:System.Windows.Documents.ListItem> is affected by its <xref:System.Windows.Documents.ListItem.LineStackingStrategy%2A> property.</span></span>  
  
<a name="xamlAttributeUsage_LineHeight"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c6970-188">XAML 属性の使用方法</span><span class="sxs-lookup"><span data-stu-id="c6970-188">XAML Attribute Usage</span></span>  
  
```  
<object LineHeight="double"/>  
- or -  
<object LineHeight="qualifiedDouble"/>  
- or -  
<object LineHeight="Auto"/>  
```  
  
<a name="xamlValues_LineHeight"></a>   
## <a name="xaml-values"></a><span data-ttu-id="c6970-189">XAML 値</span><span class="sxs-lookup"><span data-stu-id="c6970-189">XAML Values</span></span>  
 <span data-ttu-id="c6970-190">*double*</span><span class="sxs-lookup"><span data-stu-id="c6970-190">*double*</span></span>  
 <span data-ttu-id="c6970-191">文字列表現を<xref:System.Double>の範囲の値`0.0034`に`160000`です。</span><span class="sxs-lookup"><span data-stu-id="c6970-191">String representation of a <xref:System.Double> value in the range `0.0034` to `160000`.</span></span> <span data-ttu-id="c6970-192">修飾されていない値は、デバイス非依存ピクセル単位で計測されます。</span><span class="sxs-lookup"><span data-stu-id="c6970-192">An unqualified value is measured in device independent pixels.</span></span> <span data-ttu-id="c6970-193">明示的に、文字列では、小数点を含める必要がありますされません。</span><span class="sxs-lookup"><span data-stu-id="c6970-193">Strings need not explicitly include decimal points.</span></span>  
  
 <span data-ttu-id="c6970-194">*qualifiedDouble*</span><span class="sxs-lookup"><span data-stu-id="c6970-194">*qualifiedDouble*</span></span>  
 <span data-ttu-id="c6970-195">A*二重*、上記で説明したように値 (ドキュメントを除く`Auto`) 後に、次の単位指定子の 1 つ: `px`、 `in`、 `cm`、`pt`です。</span><span class="sxs-lookup"><span data-stu-id="c6970-195">A *double* value as described above, (excepting `Auto`) followed by one of the following unit specifiers: `px`, `in`, `cm`, `pt`.</span></span>  
  
 <span data-ttu-id="c6970-196">`px` (既定値) [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span><span class="sxs-lookup"><span data-stu-id="c6970-196">`px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span></span>  
  
 <span data-ttu-id="c6970-197">`in` インチです。1 96px を = =</span><span class="sxs-lookup"><span data-stu-id="c6970-197">`in` is inches; 1in==96px</span></span>  
  
 <span data-ttu-id="c6970-198">`cm` センチメートル; は、します。1cm==(96/2.54) px</span><span class="sxs-lookup"><span data-stu-id="c6970-198">`cm` is centimeters; 1cm==(96/2.54) px</span></span>  
  
 <span data-ttu-id="c6970-199">`pt` ポイントです。1pt==(96/72) px</span><span class="sxs-lookup"><span data-stu-id="c6970-199">`pt` is points; 1pt==(96/72) px</span></span>  
  
 <span data-ttu-id="c6970-200">自動</span><span class="sxs-lookup"><span data-stu-id="c6970-200">Auto</span></span>  
 <span data-ttu-id="c6970-201">現在のフォント特性から自動的に決定される行の高さが発生します。</span><span class="sxs-lookup"><span data-stu-id="c6970-201">Causes the line height to be determined automatically from the current font characteristics.</span></span>  <span data-ttu-id="c6970-202">プロパティの値に相当<xref:System.Double.NaN?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="c6970-202">Equivalent to a property value of <xref:System.Double.NaN?displayProperty=nameWithType>.</span></span>  
  
<a name="dependencyPropertyInfo_LineHeight"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="c6970-203">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="c6970-203">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c6970-204">識別子のフィールド</span><span class="sxs-lookup"><span data-stu-id="c6970-204">Identifier field</span></span>|<xref:System.Windows.Documents.ListItem.LineHeightProperty>|  
|<span data-ttu-id="c6970-205">メタデータ プロパティに設定します。 `true`</span><span class="sxs-lookup"><span data-stu-id="c6970-205">Metadata properties set to `true`</span></span>|<span data-ttu-id="c6970-206"><xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>、<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>、<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A></span><span class="sxs-lookup"><span data-stu-id="c6970-206"><xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A></span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="c6970-207">次の例は、設定する方法を示します、<xref:System.Windows.Documents.ListItem.LineHeight%2A>の属性、<xref:System.Windows.Documents.Block>要素。</span><span class="sxs-lookup"><span data-stu-id="c6970-207">The following example shows how to set the <xref:System.Windows.Documents.ListItem.LineHeight%2A> attribute of a <xref:System.Windows.Documents.Block> element.</span></span>  
  
 [!code-xaml[BlockSnippets#_Block_LineHeightXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml#_block_lineheightxaml)]  
  
 <span data-ttu-id="c6970-208">次の図は、前の例をレンダリングする方法を示します。</span><span class="sxs-lookup"><span data-stu-id="c6970-208">The following figure shows how the previous example renders.</span></span>  
  
 <span data-ttu-id="c6970-209">![スクリーン ショット: FlowDocument LineHeight](~/add/media/flowdocument-lineheight.png "スクリーン ショット: FlowDocument LineHeight")</span><span class="sxs-lookup"><span data-stu-id="c6970-209">![Screenshot: FlowDocument LineHeight](~/add/media/flowdocument-lineheight.png "Screenshot: FlowDocument LineHeight")</span></span>  
  
 <span data-ttu-id="c6970-210">次の図で既定の設定と同じ例を表示する方法を示しています。 <xref:System.Windows.Documents.ListItem.LineHeight%2A> =<xref:System.Double.NaN?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="c6970-210">The following figure shows how the same example renders with the default setting of <xref:System.Windows.Documents.ListItem.LineHeight%2A>=<xref:System.Double.NaN?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="c6970-211">![スクリーン ショット: FlowDocument LineHeight の既定](~/add/media/flowdocument-lineheightdefault.png "スクリーン ショット: FlowDocument LineHeight の既定値")</span><span class="sxs-lookup"><span data-stu-id="c6970-211">![Screenshot: FlowDocument LineHeight default](~/add/media/flowdocument-lineheightdefault.png "Screenshot: FlowDocument LineHeight default")</span></span>  
  
 <span data-ttu-id="c6970-212">次の例は、設定する方法を示します、<xref:System.Windows.Documents.ListItem.LineHeight%2A>プロパティ プログラムでします。</span><span class="sxs-lookup"><span data-stu-id="c6970-212">The following example shows how to set the <xref:System.Windows.Documents.ListItem.LineHeight%2A> property programmatically.</span></span>  
  
 [!code-csharp[BlockSnippets#_Block_LineHeight](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml.cs#_block_lineheight)]
 [!code-vb[BlockSnippets#_Block_LineHeight](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BlockSnippets/visualbasic/window1.xaml.vb#_block_lineheight)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LineHeightProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty LineHeightProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty LineHeightProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.ListItem.LineHeightProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LineHeightProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ LineHeightProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable LineHeightProperty : System.Windows.DependencyProperty" Usage="System.Windows.Documents.ListItem.LineHeightProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6970-213">
            <see cref="P:System.Windows.Documents.ListItem.LineHeight" /> 依存関係プロパティを識別します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6970-213">Identifies the <see cref="P:System.Windows.Documents.ListItem.LineHeight" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineStackingStrategy">
      <MemberSignature Language="C#" Value="public System.Windows.LineStackingStrategy LineStackingStrategy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.LineStackingStrategy LineStackingStrategy" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.ListItem.LineStackingStrategy" />
      <MemberSignature Language="VB.NET" Value="Public Property LineStackingStrategy As LineStackingStrategy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::LineStackingStrategy LineStackingStrategy { System::Windows::LineStackingStrategy get(); void set(System::Windows::LineStackingStrategy value); };" />
      <MemberSignature Language="F#" Value="member this.LineStackingStrategy : System.Windows.LineStackingStrategy with get, set" Usage="System.Windows.Documents.ListItem.LineStackingStrategy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.LineStackingStrategy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6970-214">
            <see cref="T:System.Windows.Documents.ListItem" /> 内の各テキスト行の行ボックスを決定する際に使用する機構を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6970-214">Gets or sets the mechanism by which a line box is determined for each line of text within the <see cref="T:System.Windows.Documents.ListItem" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c6970-215">
            <see cref="T:System.Windows.LineStackingStrategy" /> 内の各テキスト行の行ボックスを決定する際に使用される機構を指定する <see cref="T:System.Windows.Documents.ListItem" /> 値のいずれか。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6970-215">One of the <see cref="T:System.Windows.LineStackingStrategy" /> values that specifies the mechanism by which a line box is determined for each line of text within the <see cref="T:System.Windows.Documents.ListItem" />.</span>
          </span>
          <span data-ttu-id="c6970-216">既定値は、<see cref="F:System.Windows.LineStackingStrategy.MaxHeight" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6970-216">The default is <see cref="F:System.Windows.LineStackingStrategy.MaxHeight" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_LineStackingStrategy"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="c6970-217">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="c6970-217">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c6970-218">識別子のフィールド</span><span class="sxs-lookup"><span data-stu-id="c6970-218">Identifier field</span></span>|<xref:System.Windows.Documents.ListItem.LineStackingStrategyProperty>|  
|<span data-ttu-id="c6970-219">メタデータ プロパティに設定します。 `true`</span><span class="sxs-lookup"><span data-stu-id="c6970-219">Metadata properties set to `true`</span></span>|<span data-ttu-id="c6970-220"><xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>、<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>、<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A></span><span class="sxs-lookup"><span data-stu-id="c6970-220"><xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A></span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="c6970-221">次の例を使用する方法を示しています、<xref:System.Windows.Controls.TextBlock.LineStackingStrategy%2A>のテキスト行に行ボックスを作成する方法を決定するプロパティ、<xref:System.Windows.Controls.TextBlock>です。</span><span class="sxs-lookup"><span data-stu-id="c6970-221">The following example shows how to use the <xref:System.Windows.Controls.TextBlock.LineStackingStrategy%2A> property to determine how the line boxes are created for text lines of a <xref:System.Windows.Controls.TextBlock>.</span></span> <span data-ttu-id="c6970-222">最初の<xref:System.Windows.Controls.TextBlock>が、<xref:System.Windows.Controls.TextBlock.LineStackingStrategy%2A>値<xref:System.Windows.LineStackingStrategy.MaxHeight>、2 番目<xref:System.Windows.Controls.TextBlock>の値を持つ<xref:System.Windows.LineStackingStrategy.BlockLineHeight>します。</span><span class="sxs-lookup"><span data-stu-id="c6970-222">The first <xref:System.Windows.Controls.TextBlock> has a <xref:System.Windows.Controls.TextBlock.LineStackingStrategy%2A> value of <xref:System.Windows.LineStackingStrategy.MaxHeight> and the second <xref:System.Windows.Controls.TextBlock> has a value of <xref:System.Windows.LineStackingStrategy.BlockLineHeight>.</span></span>  
  
 [!code-xaml[FlowMiscSnippets_snip#LineStackingStrategyExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowMiscSnippets_snip/cs/linestackingstrategyexample.xaml#linestackingstrategyexamplewholepage)]  
  
 <span data-ttu-id="c6970-223">次の図は、上記のコードの結果を示します。</span><span class="sxs-lookup"><span data-stu-id="c6970-223">The following illustration shows the result of the preceding code.</span></span>  
  
 <span data-ttu-id="c6970-224">![スクリーン ショット: LineStackingStrategy 値の比較](~/add/media/flow-linestackingstrategy.gif "スクリーン ショット: LineStackingStrategy の比較値")</span><span class="sxs-lookup"><span data-stu-id="c6970-224">![Screenshot: Compare LineStackingStrategy values](~/add/media/flow-linestackingstrategy.gif "Screenshot: Compare LineStackingStrategy values")</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LineStackingStrategyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty LineStackingStrategyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty LineStackingStrategyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.ListItem.LineStackingStrategyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LineStackingStrategyProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ LineStackingStrategyProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable LineStackingStrategyProperty : System.Windows.DependencyProperty" Usage="System.Windows.Documents.ListItem.LineStackingStrategyProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6970-225">
            <see cref="P:System.Windows.Documents.ListItem.LineStackingStrategy" /> 依存関係プロパティを識別します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6970-225">Identifies the <see cref="P:System.Windows.Documents.ListItem.LineStackingStrategy" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="List">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.List List { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.List List" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.ListItem.List" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property List As List" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::List ^ List { System::Windows::Documents::List ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.List : System.Windows.Documents.List" Usage="System.Windows.Documents.ListItem.List" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.List</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6970-226">
            <see cref="T:System.Windows.Documents.List" /> を格納している <see cref="T:System.Windows.Documents.ListItem" /> を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6970-226">Gets the <see cref="T:System.Windows.Documents.List" /> that contains the <see cref="T:System.Windows.Documents.ListItem" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c6970-227">
            <see cref="T:System.Windows.Documents.ListItem" /> を格納しているリスト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6970-227">The list that contains the <see cref="T:System.Windows.Documents.ListItem" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Margin">
      <MemberSignature Language="C#" Value="public System.Windows.Thickness Margin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Thickness Margin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.ListItem.Margin" />
      <MemberSignature Language="VB.NET" Value="Public Property Margin As Thickness" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Thickness Margin { System::Windows::Thickness get(); void set(System::Windows::Thickness value); };" />
      <MemberSignature Language="F#" Value="member this.Margin : System.Windows.Thickness with get, set" Usage="System.Windows.Documents.ListItem.Margin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Thickness</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6970-228">要素の余白の厚みを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6970-228">Gets or sets the margin thickness for the element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c6970-229">A<see cref="T:System.Windows.Thickness" />デバイス非依存ピクセルで、適用する余白の量を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6970-229">A <see cref="T:System.Windows.Thickness" /> structure that specifies the amount of margin to apply, in device independent pixels.</span>
          </span>
          <span data-ttu-id="c6970-230">既定では 0 (0.0) の均一の幅です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6970-230">The default is a uniform thickness of zero (0.0).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6970-231"><xref:System.Windows.Documents.ListItem.Margin%2A> 要素のコンテンツ エリアの端と親要素の端との間の要素のコンテンツ エリアの外側にあるバッファー領域がありません。</span><span class="sxs-lookup"><span data-stu-id="c6970-231"><xref:System.Windows.Documents.ListItem.Margin%2A> is buffer space that falls outside an element's content area, between the edges of the element's content area and the edges of the parent element.</span></span>  <span data-ttu-id="c6970-232">比較して<xref:System.Windows.Documents.ListItem.Padding%2A>要素のコンテンツと要素の内部の端の間の要素のコンテンツ領域の内側にあるバッファー領域があります。</span><span class="sxs-lookup"><span data-stu-id="c6970-232">Contrast with <xref:System.Windows.Documents.ListItem.Padding%2A>, which is buffer space that falls inside an element's content area, between the element's content and the inner edge of the element.</span></span>  
  
<a name="xamlAttributeUsage_Margin"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c6970-233">XAML 属性の使用方法</span><span class="sxs-lookup"><span data-stu-id="c6970-233">XAML Attribute Usage</span></span>  
  
```  
<object Margin="uniformThickness"/>  
- or -  
<object Margin="independentThickness"/>  
- or -  
<object Margin="qualifiedUniformThickness"/>  
- or -  
<object Margin="qualifiedIndependentThickness"/>  
```  
  
<a name="xamlValues_Margin"></a>   
## <a name="xaml-values"></a><span data-ttu-id="c6970-234">XAML 値</span><span class="sxs-lookup"><span data-stu-id="c6970-234">XAML Values</span></span>  
 <span data-ttu-id="c6970-235">*uniformThickness*</span><span class="sxs-lookup"><span data-stu-id="c6970-235">*uniformThickness*</span></span>  
 <span data-ttu-id="c6970-236">1 つの文字列表現<xref:System.Double>4 つすべての厚みを一様に適用する値。</span><span class="sxs-lookup"><span data-stu-id="c6970-236">String representation of a single <xref:System.Double> value to apply uniformly to all four thickness dimensions.</span></span>  <span data-ttu-id="c6970-237">たとえば、値の`"10"`はの値に相当`"10,10,10,10"`です。</span><span class="sxs-lookup"><span data-stu-id="c6970-237">For example, a value of `"10"` is equivalent to a value of `"10,10,10,10"`.</span></span>  <span data-ttu-id="c6970-238">修飾されていない値は、デバイス非依存ピクセル単位で計測されます。</span><span class="sxs-lookup"><span data-stu-id="c6970-238">An unqualified value is measured in device independent pixels.</span></span> <span data-ttu-id="c6970-239">明示的に、文字列では、小数点を含める必要がありますされません。</span><span class="sxs-lookup"><span data-stu-id="c6970-239">Strings need not explicitly include decimal points.</span></span>  
  
 <span data-ttu-id="c6970-240">*independentThickness*</span><span class="sxs-lookup"><span data-stu-id="c6970-240">*independentThickness*</span></span>  
 <span data-ttu-id="c6970-241">順序付けに 4 つの文字列表現<xref:System.Double>左、上の太さの独立したディメンションに対応する値が右、および下には、この順序で。</span><span class="sxs-lookup"><span data-stu-id="c6970-241">String representation of four ordered <xref:System.Double> values corresponding to independent thickness dimensions for left, top, right, and bottom, in this order.</span></span>  <span data-ttu-id="c6970-242">4 つの値をコンマで区切る必要があります。スペースは使用できません。</span><span class="sxs-lookup"><span data-stu-id="c6970-242">The four values must be separated with commas; spaces are not allowed.</span></span>  <span data-ttu-id="c6970-243">たとえば、「5,10,15,20」結果余白の 5 ピクセル コンテンツ、コンテンツの上余白の 10 のピクセル、コンテンツの右側の余白の 15 ピクセルおよびコンテンツ下の余白 20 ピクセルの左側にします。</span><span class="sxs-lookup"><span data-stu-id="c6970-243">For example, "5,10,15,20" results in 5 pixels of margin to the left of content, 10 pixels of margin above content, 15 pixels of margin to the right of content, and 20 pixels of margin below the content.</span></span>  
  
 <span data-ttu-id="c6970-244">*qualifiedUniformThickness*</span><span class="sxs-lookup"><span data-stu-id="c6970-244">*qualifiedUniformThickness*</span></span>  
 <span data-ttu-id="c6970-245">記述された値*uniformThickness*後に、次の単位指定子の 1 つ: `px`、`in`です。</span><span class="sxs-lookup"><span data-stu-id="c6970-245">A value described by *uniformThickness* followed by one of the following unit specifiers: `px`, `in`.</span></span>  
  
 <span data-ttu-id="c6970-246">`px` (既定値) [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span><span class="sxs-lookup"><span data-stu-id="c6970-246">`px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span></span>  
  
 <span data-ttu-id="c6970-247">`in` インチです。1 96px を = =</span><span class="sxs-lookup"><span data-stu-id="c6970-247">`in` is inches; 1in==96px</span></span>  
  
 <span data-ttu-id="c6970-248">たとえば、`"1in"`すべての方向に 1 インチの均一の余白を提供します。</span><span class="sxs-lookup"><span data-stu-id="c6970-248">For example, `"1in"` provides uniform margin of 1 inch in all directions.</span></span>  
  
 <span data-ttu-id="c6970-249">*qualifiedIndependentThickness*</span><span class="sxs-lookup"><span data-stu-id="c6970-249">*qualifiedIndependentThickness*</span></span>  
 <span data-ttu-id="c6970-250">記述された値*independentThickness*、後に、次の単位指定子の 1 つの独立した各値を持つ: `px`、`in`です。</span><span class="sxs-lookup"><span data-stu-id="c6970-250">A value described by *independentThickness*, with each independent value followed by one of the following unit specifiers: `px`, `in`.</span></span>  
  
 <span data-ttu-id="c6970-251">`px` (既定値) [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span><span class="sxs-lookup"><span data-stu-id="c6970-251">`px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span></span>  
  
 <span data-ttu-id="c6970-252">`in` インチです。1 96px を = =</span><span class="sxs-lookup"><span data-stu-id="c6970-252">`in` is inches; 1in==96px</span></span>  
  
 <span data-ttu-id="c6970-253">たとえば、`"1.5in,0.8in,1.5in,0.8in"` のようにします。</span><span class="sxs-lookup"><span data-stu-id="c6970-253">For example, `"1.5in,0.8in,1.5in,0.8in"`.</span></span>  <span data-ttu-id="c6970-254">単位指定子は、混合または 1 つまたは複数の値からを省略すると場合があります。</span><span class="sxs-lookup"><span data-stu-id="c6970-254">Unit specifiers may be mixed or omitted from one or more values.</span></span>  
  
<a name="dependencyPropertyInfo_Margin"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="c6970-255">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="c6970-255">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c6970-256">識別子のフィールド</span><span class="sxs-lookup"><span data-stu-id="c6970-256">Identifier field</span></span>|<xref:System.Windows.Documents.ListItem.MarginProperty>|  
|<span data-ttu-id="c6970-257">メタデータ プロパティに設定します。 `true`</span><span class="sxs-lookup"><span data-stu-id="c6970-257">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="c6970-258">次の例は、設定する方法を示します、<xref:System.Windows.Documents.ListItem.Margin%2A>の属性、<xref:System.Windows.Documents.Block>要素 (<xref:System.Windows.Documents.Paragraph>)。</span><span class="sxs-lookup"><span data-stu-id="c6970-258">The following example shows how to set the <xref:System.Windows.Documents.ListItem.Margin%2A> attribute of a <xref:System.Windows.Documents.Block> element (<xref:System.Windows.Documents.Paragraph>).</span></span>  
  
 [!code-xaml[BlockSnippets#_Block_MarginPaddingXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml#_block_marginpaddingxaml)]  
  
 <span data-ttu-id="c6970-259">この例の表示結果を次の図に示します。</span><span class="sxs-lookup"><span data-stu-id="c6970-259">The following figure shows how this example renders.</span></span>  <span data-ttu-id="c6970-260">大ぶりの太さと色は、説明のために使用されます。</span><span class="sxs-lookup"><span data-stu-id="c6970-260">Exaggerated thicknesses and colors are used for illustration.</span></span>  
  
 <span data-ttu-id="c6970-261">![スクリーン ショット: パディングと余白段落](~/add/media/block-marginpadding.png "スクリーン ショット: 埋め込みと余白がある段落")</span><span class="sxs-lookup"><span data-stu-id="c6970-261">![Screenshot: Paragraphs with padding and margins](~/add/media/block-marginpadding.png "Screenshot: Paragraphs with padding and margins")</span></span>  
  
 <span data-ttu-id="c6970-262">次の例は、設定する方法を示します、<xref:System.Windows.Documents.ListItem.Margin%2A>プロパティ プログラムでします。</span><span class="sxs-lookup"><span data-stu-id="c6970-262">The following example shows how to set the <xref:System.Windows.Documents.ListItem.Margin%2A> property programmatically.</span></span>  
  
 [!code-csharp[BlockSnippets#_Block_MarginPadding](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml.cs#_block_marginpadding)]
 [!code-vb[BlockSnippets#_Block_MarginPadding](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BlockSnippets/visualbasic/window1.xaml.vb#_block_marginpadding)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.ListItem.Padding" />
      </Docs>
    </Member>
    <Member MemberName="MarginProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty MarginProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty MarginProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.ListItem.MarginProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MarginProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ MarginProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable MarginProperty : System.Windows.DependencyProperty" Usage="System.Windows.Documents.ListItem.MarginProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6970-263">
            <see cref="P:System.Windows.Documents.ListItem.Margin" /> 依存関係プロパティを識別します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6970-263">Identifies the <see cref="P:System.Windows.Documents.ListItem.Margin" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NextListItem">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.ListItem NextListItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.ListItem NextListItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.ListItem.NextListItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NextListItem As ListItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::ListItem ^ NextListItem { System::Windows::Documents::ListItem ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NextListItem : System.Windows.Documents.ListItem" Usage="System.Windows.Documents.ListItem.NextListItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.ListItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6970-264">含有する <see cref="T:System.Windows.Documents.ListItem" /> 内の次の <see cref="T:System.Windows.Documents.List" /> を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6970-264">Gets the next <see cref="T:System.Windows.Documents.ListItem" /> in the containing <see cref="T:System.Windows.Documents.List" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c6970-265">
            <see cref="T:System.Windows.Documents.ListItem" /> 内の次の <see cref="T:System.Windows.Documents.List" />。次の <see cref="T:System.Windows.Documents.ListItem" /> がない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6970-265">The next <see cref="T:System.Windows.Documents.ListItem" /> in the <see cref="T:System.Windows.Documents.List" />, or <see langword="null" /> if there is no next <see cref="T:System.Windows.Documents.ListItem" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Documents.ListItem.PreviousListItem" />
        <altmember cref="P:System.Windows.Documents.ListItem.SiblingListItems" />
      </Docs>
    </Member>
    <Member MemberName="Padding">
      <MemberSignature Language="C#" Value="public System.Windows.Thickness Padding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Thickness Padding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.ListItem.Padding" />
      <MemberSignature Language="VB.NET" Value="Public Property Padding As Thickness" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Thickness Padding { System::Windows::Thickness get(); void set(System::Windows::Thickness value); };" />
      <MemberSignature Language="F#" Value="member this.Padding : System.Windows.Thickness with get, set" Usage="System.Windows.Documents.ListItem.Padding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Thickness</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6970-266">要素のパディングの厚みを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6970-266">Gets or sets the padding thickness for the element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c6970-267">A<see cref="T:System.Windows.Thickness" />デバイス非依存ピクセルで、適用するパディングの量を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6970-267">A <see cref="T:System.Windows.Thickness" /> structure that specifies the amount of padding to apply, in device independent pixels.</span>
          </span>
          <span data-ttu-id="c6970-268">既定では 0 (0.0) の均一の幅です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6970-268">The default is a uniform thickness of zero (0.0).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6970-269"><xref:System.Windows.Documents.ListItem.Padding%2A> 要素のコンテンツと要素の内部の端の間の要素のコンテンツ領域の内側にあるバッファー領域がありません。</span><span class="sxs-lookup"><span data-stu-id="c6970-269"><xref:System.Windows.Documents.ListItem.Padding%2A> is buffer space that falls inside an element's content area, between the element's content and the inner edge of the element.</span></span>  <span data-ttu-id="c6970-270">比較して<xref:System.Windows.Documents.ListItem.Margin%2A>要素のコンテンツ エリアの端と親要素の端との間の要素のコンテンツ エリアの外側にあるバッファー領域があります。</span><span class="sxs-lookup"><span data-stu-id="c6970-270">Contrast with <xref:System.Windows.Documents.ListItem.Margin%2A>, which is buffer space that falls outside an element's content area, between the edges of the element's content area and the edges of the parent element.</span></span>  
  
<a name="xamlAttributeUsage_Padding"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c6970-271">XAML 属性の使用方法</span><span class="sxs-lookup"><span data-stu-id="c6970-271">XAML Attribute Usage</span></span>  
  
```  
<object Padding="uniformThickness"/>  
- or -  
<object Padding="independentThickness"/>  
- or -  
<object Padding="qualifiedUniformThickness"/>  
- or -  
<object Padding="qualifiedIndependentThickness"/>  
```  
  
<a name="xamlValues_Padding"></a>   
## <a name="xaml-values"></a><span data-ttu-id="c6970-272">XAML 値</span><span class="sxs-lookup"><span data-stu-id="c6970-272">XAML Values</span></span>  
 <span data-ttu-id="c6970-273">*uniformThickness*</span><span class="sxs-lookup"><span data-stu-id="c6970-273">*uniformThickness*</span></span>  
 <span data-ttu-id="c6970-274">1 つの文字列表現<xref:System.Double>4 つすべての厚みを一様に適用する値。</span><span class="sxs-lookup"><span data-stu-id="c6970-274">String representation of a single <xref:System.Double> value to apply uniformly to all four thickness dimensions.</span></span>  <span data-ttu-id="c6970-275">たとえば、値の`"10"`はの値に相当`"10,10,10,10"`です。</span><span class="sxs-lookup"><span data-stu-id="c6970-275">For example, a value of `"10"` is equivalent to a value of `"10,10,10,10"`.</span></span>  <span data-ttu-id="c6970-276">修飾されていない値は、デバイス非依存ピクセル単位で計測されます。</span><span class="sxs-lookup"><span data-stu-id="c6970-276">An unqualified value is measured in device independent pixels.</span></span> <span data-ttu-id="c6970-277">明示的に、文字列では、小数点を含める必要がありますされません。</span><span class="sxs-lookup"><span data-stu-id="c6970-277">Strings need not explicitly include decimal points.</span></span>  
  
 <span data-ttu-id="c6970-278">*independentThickness*</span><span class="sxs-lookup"><span data-stu-id="c6970-278">*independentThickness*</span></span>  
 <span data-ttu-id="c6970-279">順序付けに 4 つの文字列表現<xref:System.Double>左、上の太さの独立したディメンションに対応する値が右、および下には、この順序で。</span><span class="sxs-lookup"><span data-stu-id="c6970-279">String representation of four ordered <xref:System.Double> values corresponding to independent thickness dimensions for left, top, right, and bottom, in this order.</span></span>  <span data-ttu-id="c6970-280">4 つの値をコンマで区切る必要があります。スペースは使用できません。</span><span class="sxs-lookup"><span data-stu-id="c6970-280">The four values must be separated with commas; spaces are not allowed.</span></span>  <span data-ttu-id="c6970-281">たとえば、「5,10,15,20」結果パディングの 5 ピクセル コンテンツ、コンテンツの上の余白の 10 のピクセル、右の余白の 15 ピクセルおよびコンテンツの下の余白の 20 ピクセルの左側にします。</span><span class="sxs-lookup"><span data-stu-id="c6970-281">For example, "5,10,15,20" results in 5 pixels of padding to the left of content, 10 pixels of padding above content, 15 pixels of padding to the right of content, and 20 pixels of padding below the content.</span></span>  
  
 <span data-ttu-id="c6970-282">*qualifiedUniformThickness*</span><span class="sxs-lookup"><span data-stu-id="c6970-282">*qualifiedUniformThickness*</span></span>  
 <span data-ttu-id="c6970-283">記述された値*uniformThickness*後に、次の単位指定子の 1 つ: `px`、`in`です。</span><span class="sxs-lookup"><span data-stu-id="c6970-283">A value described by *uniformThickness* followed by one of the following unit specifiers: `px`, `in`.</span></span>  
  
 <span data-ttu-id="c6970-284">`px` (既定値) [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span><span class="sxs-lookup"><span data-stu-id="c6970-284">`px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span></span>  
  
 <span data-ttu-id="c6970-285">`in` インチです。1 96px を = =</span><span class="sxs-lookup"><span data-stu-id="c6970-285">`in` is inches; 1in==96px</span></span>  
  
 <span data-ttu-id="c6970-286">たとえば、`"1in"`すべての方向に 1 インチの統一されたパディングを提供します。</span><span class="sxs-lookup"><span data-stu-id="c6970-286">For example, `"1in"` provides uniform padding of 1 inch in all directions.</span></span>  
  
 <span data-ttu-id="c6970-287">*qualifiedIndependentThickness*</span><span class="sxs-lookup"><span data-stu-id="c6970-287">*qualifiedIndependentThickness*</span></span>  
 <span data-ttu-id="c6970-288">記述された値*independentThickness*、後に、次の単位指定子の 1 つの独立した各値を持つ: `px`、`in`です。</span><span class="sxs-lookup"><span data-stu-id="c6970-288">A value described by *independentThickness*, with each independent value followed by one of the following unit specifiers: `px`, `in`.</span></span>  
  
 <span data-ttu-id="c6970-289">`px` (既定値) [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span><span class="sxs-lookup"><span data-stu-id="c6970-289">`px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span></span>  
  
 <span data-ttu-id="c6970-290">`in` インチです。1 96px を = =</span><span class="sxs-lookup"><span data-stu-id="c6970-290">`in` is inches; 1in==96px</span></span>  
  
 <span data-ttu-id="c6970-291">たとえば、`"1.5in,0.8in,1.5in,0.8in"` のようにします。</span><span class="sxs-lookup"><span data-stu-id="c6970-291">For example, `"1.5in,0.8in,1.5in,0.8in"`.</span></span>  <span data-ttu-id="c6970-292">単位指定子は、混合または 1 つまたは複数の値からを省略すると場合があります。</span><span class="sxs-lookup"><span data-stu-id="c6970-292">Unit specifiers may be mixed or omitted from one or more values.</span></span>  
  
<a name="dependencyPropertyInfo_Padding"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="c6970-293">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="c6970-293">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c6970-294">識別子のフィールド</span><span class="sxs-lookup"><span data-stu-id="c6970-294">Identifier field</span></span>|<xref:System.Windows.Documents.ListItem.PaddingProperty>|  
|<span data-ttu-id="c6970-295">メタデータ プロパティに設定します。 `true`</span><span class="sxs-lookup"><span data-stu-id="c6970-295">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="c6970-296">次の例は、設定する方法を示します、<xref:System.Windows.Documents.ListItem.Padding%2A>の属性、<xref:System.Windows.Documents.Block>要素 (<xref:System.Windows.Documents.Paragraph>)。</span><span class="sxs-lookup"><span data-stu-id="c6970-296">The following example shows how to set the <xref:System.Windows.Documents.ListItem.Padding%2A> attribute of a <xref:System.Windows.Documents.Block> element (<xref:System.Windows.Documents.Paragraph>).</span></span>  
  
 [!code-xaml[BlockSnippets#_Block_MarginPaddingXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml#_block_marginpaddingxaml)]  
  
 <span data-ttu-id="c6970-297">この例の表示結果を次の図に示します。</span><span class="sxs-lookup"><span data-stu-id="c6970-297">The following figure shows how this example renders.</span></span>  <span data-ttu-id="c6970-298">大ぶりの太さと色は、説明のために使用されます。</span><span class="sxs-lookup"><span data-stu-id="c6970-298">Exaggerated thicknesses and colors are used for illustration.</span></span>  
  
 <span data-ttu-id="c6970-299">![スクリーン ショット: パディングと余白段落](~/add/media/block-marginpadding.png "スクリーン ショット: 埋め込みと余白がある段落")</span><span class="sxs-lookup"><span data-stu-id="c6970-299">![Screenshot: Paragraphs with padding and margins](~/add/media/block-marginpadding.png "Screenshot: Paragraphs with padding and margins")</span></span>  
  
 <span data-ttu-id="c6970-300">次の例は、設定する方法を示します、<xref:System.Windows.Documents.ListItem.Padding%2A>プロパティ プログラムでします。</span><span class="sxs-lookup"><span data-stu-id="c6970-300">The following example shows how to set the <xref:System.Windows.Documents.ListItem.Padding%2A> property programmatically.</span></span>  
  
 [!code-csharp[BlockSnippets#_Block_MarginPadding](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml.cs#_block_marginpadding)]
 [!code-vb[BlockSnippets#_Block_MarginPadding](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BlockSnippets/visualbasic/window1.xaml.vb#_block_marginpadding)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.ListItem.Margin" />
      </Docs>
    </Member>
    <Member MemberName="PaddingProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PaddingProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PaddingProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.ListItem.PaddingProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PaddingProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PaddingProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable PaddingProperty : System.Windows.DependencyProperty" Usage="System.Windows.Documents.ListItem.PaddingProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6970-301">
            <see cref="P:System.Windows.Documents.ListItem.Padding" /> 依存関係プロパティを識別します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6970-301">Identifies the <see cref="P:System.Windows.Documents.ListItem.Padding" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviousListItem">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.ListItem PreviousListItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.ListItem PreviousListItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.ListItem.PreviousListItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreviousListItem As ListItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::ListItem ^ PreviousListItem { System::Windows::Documents::ListItem ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PreviousListItem : System.Windows.Documents.ListItem" Usage="System.Windows.Documents.ListItem.PreviousListItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.ListItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6970-302">含有する <see cref="T:System.Windows.Documents.ListItem" /> 内の前の <see cref="T:System.Windows.Documents.List" /> を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6970-302">Gets the previous <see cref="T:System.Windows.Documents.ListItem" /> in the containing <see cref="T:System.Windows.Documents.List" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c6970-303">
            <see cref="T:System.Windows.Documents.ListItem" /> 内の前の <see cref="T:System.Windows.Documents.List" />。前の <see cref="T:System.Windows.Documents.ListItem" /> がない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6970-303">The previous <see cref="T:System.Windows.Documents.ListItem" /> in the <see cref="T:System.Windows.Documents.List" />, or <see langword="null" /> if there is no previous <see cref="T:System.Windows.Documents.ListItem" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Documents.ListItem.NextListItem" />
        <altmember cref="P:System.Windows.Documents.ListItem.SiblingListItems" />
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeBlocks">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeBlocks (System.Windows.Markup.XamlDesignerSerializationManager manager);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeBlocks(class System.Windows.Markup.XamlDesignerSerializationManager manager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.ListItem.ShouldSerializeBlocks(System.Windows.Markup.XamlDesignerSerializationManager)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeBlocks (manager As XamlDesignerSerializationManager) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeBlocks(System::Windows::Markup::XamlDesignerSerializationManager ^ manager);" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeBlocks : System.Windows.Markup.XamlDesignerSerializationManager -&gt; bool" Usage="listItem.ShouldSerializeBlocks manager" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.Windows.Markup.XamlDesignerSerializationManager" />
      </Parameters>
      <Docs>
        <param name="manager">
          <span data-ttu-id="c6970-304">このオブジェクトのシリアル化サービス マネージャー オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6970-304">A serialization service manager object for the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6970-305">
            <see cref="P:System.Windows.Documents.ListItem.Blocks" /> オブジェクトのシリアル化中に <see cref="T:System.Windows.Documents.ListItem" /> プロパティの有効値をシリアル化する必要があるかどうかを示す値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6970-305">Returns a value that indicates whether the effective value of the <see cref="P:System.Windows.Documents.ListItem.Blocks" /> property should be serialized during serialization of the <see cref="T:System.Windows.Documents.ListItem" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c6970-306">
            <see cref="P:System.Windows.Documents.ListItem.Blocks" /> プロパティをシリアル化する必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6970-306">
              <see langword="true" /> if the <see cref="P:System.Windows.Documents.ListItem.Blocks" /> property should be serialized; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="c6970-307">
            <paramref name="manager" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6970-307">
              <paramref name="manager" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SiblingListItems">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.ListItemCollection SiblingListItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.ListItemCollection SiblingListItems" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.ListItem.SiblingListItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SiblingListItems As ListItemCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::ListItemCollection ^ SiblingListItems { System::Windows::Documents::ListItemCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SiblingListItems : System.Windows.Documents.ListItemCollection" Usage="System.Windows.Documents.ListItem.SiblingListItems" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.ListItemCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6970-308">現在の <see cref="T:System.Windows.Documents.ListItemCollection" /> 要素の兄弟である <see cref="T:System.Windows.Documents.ListItem" /> 要素を格納する <see cref="T:System.Windows.Documents.ListItem" /> を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6970-308">Gets a <see cref="T:System.Windows.Documents.ListItemCollection" /> that contains the <see cref="T:System.Windows.Documents.ListItem" /> elements that are siblings of the current <see cref="T:System.Windows.Documents.ListItem" /> element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c6970-309">現在の <see cref="T:System.Windows.Documents.ListItemCollection" /> 要素の親が直接ホストする子 <see cref="T:System.Windows.Documents.ListItem" /> 要素を格納する <see cref="T:System.Windows.Documents.ListItem" />。現在の <see cref="T:System.Windows.Documents.ListItem" /> 要素に親がない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6970-309">A <see cref="T:System.Windows.Documents.ListItemCollection" /> that contains the child <see cref="T:System.Windows.Documents.ListItem" /> elements that are directly hosted by the parent of the current <see cref="T:System.Windows.Documents.ListItem" /> element, or <see langword="null" /> if the current <see cref="T:System.Windows.Documents.ListItem" /> element has no parent.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6970-310"><xref:System.Windows.Documents.ListItemCollection>このプロパティによって返されるが含まれています、<xref:System.Windows.Documents.ListItem>要素をコレクションにはアクセスです。 つまり、このプロパティを所有する要素が兄弟のコレクションを生成する目的で、独自の兄弟であると見なされます。</span><span class="sxs-lookup"><span data-stu-id="c6970-310">The <xref:System.Windows.Documents.ListItemCollection> returned by this property includes the <xref:System.Windows.Documents.ListItem> element through which the collection is accessed; that is, the element that owns this property is considered to be its own sibling for the purposes of generating the collection of siblings.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.ListItem.NextListItem" />
        <altmember cref="P:System.Windows.Documents.ListItem.PreviousListItem" />
      </Docs>
    </Member>
    <Member MemberName="TextAlignment">
      <MemberSignature Language="C#" Value="public System.Windows.TextAlignment TextAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.TextAlignment TextAlignment" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.ListItem.TextAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property TextAlignment As TextAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::TextAlignment TextAlignment { System::Windows::TextAlignment get(); void set(System::Windows::TextAlignment value); };" />
      <MemberSignature Language="F#" Value="member this.TextAlignment : System.Windows.TextAlignment with get, set" Usage="System.Windows.Documents.ListItem.TextAlignment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.TextAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6970-311">テキスト コンテンツの水平方向の配置を示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6970-311">Gets or sets a value that indicates the horizontal alignment of text content.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c6970-312">目的の配置を指定する、いずれかの <see cref="T:System.Windows.TextAlignment" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6970-312">One of the <see cref="T:System.Windows.TextAlignment" /> values that specifies the desired alignment.</span>
          </span>
          <span data-ttu-id="c6970-313">既定値は、<see cref="F:System.Windows.TextAlignment.Left" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6970-313">The default is <see cref="F:System.Windows.TextAlignment.Left" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_TextAlignment"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="c6970-314">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="c6970-314">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c6970-315">識別子のフィールド</span><span class="sxs-lookup"><span data-stu-id="c6970-315">Identifier field</span></span>|<xref:System.Windows.Documents.ListItem.TextAlignmentProperty>|  
|<span data-ttu-id="c6970-316">メタデータ プロパティに設定します。 `true`</span><span class="sxs-lookup"><span data-stu-id="c6970-316">Metadata properties set to `true`</span></span>|<span data-ttu-id="c6970-317"><xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>、<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>、<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A></span><span class="sxs-lookup"><span data-stu-id="c6970-317"><xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A></span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="c6970-318">次の例は、設定する方法を示します、<xref:System.Windows.Documents.Block.TextAlignment%2A>の属性、<xref:System.Windows.Documents.Block>要素。</span><span class="sxs-lookup"><span data-stu-id="c6970-318">The following example shows how to set the <xref:System.Windows.Documents.Block.TextAlignment%2A> attribute of a <xref:System.Windows.Documents.Block> element.</span></span>  
  
 [!code-xaml[BlockSnippets#_Block_TextAlignmentXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml#_block_textalignmentxaml)]  
  
 <span data-ttu-id="c6970-319">前の例を表示する方法を次に示します<xref:System.Windows.TextAlignment.Left>テキストの配置 (既定)。</span><span class="sxs-lookup"><span data-stu-id="c6970-319">The following figure shows how the previous example renders with <xref:System.Windows.TextAlignment.Left> text alignment (the default).</span></span>  
  
 <span data-ttu-id="c6970-320">![スクリーン ショット: 左の TextAlign プロパティ値](~/add/media/flowdoc-textalign-left.png "スクリーン ショット: 左の TextAlign プロパティ値")</span><span class="sxs-lookup"><span data-stu-id="c6970-320">![Screenshot: TextAlign property value of Left](~/add/media/flowdoc-textalign-left.png "Screenshot: TextAlign property value of Left")</span></span>  
  
 <span data-ttu-id="c6970-321">同じ例を表示する方法を次に示します<xref:System.Windows.TextAlignment.Right>テキストの配置。</span><span class="sxs-lookup"><span data-stu-id="c6970-321">The following figure shows how the same example renders with <xref:System.Windows.TextAlignment.Right> text alignment.</span></span>  
  
 <span data-ttu-id="c6970-322">![スクリーン ショット: 右の TextAlign 値の](~/add/media/flowdoc-textalign-right.png "スクリーン ショット: 右の TextAlign 値")</span><span class="sxs-lookup"><span data-stu-id="c6970-322">![Screenshot: TextAlign value of Right](~/add/media/flowdoc-textalign-right.png "Screenshot: TextAlign value of Right")</span></span>  
  
 <span data-ttu-id="c6970-323">同じ例を表示する方法を次に示します<xref:System.Windows.TextAlignment.Center>テキストの配置。</span><span class="sxs-lookup"><span data-stu-id="c6970-323">The following figure shows how the same example renders with <xref:System.Windows.TextAlignment.Center> text alignment.</span></span>  
  
 <span data-ttu-id="c6970-324">![スクリーン ショット: 中央の TextAlign プロパティ値](~/add/media/flowdoc-textalign-center.png "スクリーン ショット: 中央の TextAlign プロパティ値")</span><span class="sxs-lookup"><span data-stu-id="c6970-324">![Screenshot: TextAlign property value of Center](~/add/media/flowdoc-textalign-center.png "Screenshot: TextAlign property value of Center")</span></span>  
  
 <span data-ttu-id="c6970-325">次の例は、設定する方法を示します、<xref:System.Windows.Documents.ListItem.TextAlignment%2A>プロパティ プログラムでします。</span><span class="sxs-lookup"><span data-stu-id="c6970-325">The following example shows how to set the <xref:System.Windows.Documents.ListItem.TextAlignment%2A> property programmatically.</span></span>  
  
 [!code-csharp[BlockSnippets#_Block_TextAlignment](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml.cs#_block_textalignment)]
 [!code-vb[BlockSnippets#_Block_TextAlignment](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BlockSnippets/visualbasic/window1.xaml.vb#_block_textalignment)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextAlignmentProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TextAlignmentProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TextAlignmentProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.ListItem.TextAlignmentProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TextAlignmentProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TextAlignmentProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TextAlignmentProperty : System.Windows.DependencyProperty" Usage="System.Windows.Documents.ListItem.TextAlignmentProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6970-326">
            <see cref="P:System.Windows.Documents.ListItem.TextAlignment" /> 依存関係プロパティを識別します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6970-326">Identifies the <see cref="P:System.Windows.Documents.ListItem.TextAlignment" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>