<Type Name="ListItem" FullName="System.Windows.Documents.ListItem">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2e13b07a0293eb96bc6555524d116c8b5101825d" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70721447" /></Metadata><TypeSignature Language="C#" Value="public class ListItem : System.Windows.Documents.TextElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ListItem extends System.Windows.Documents.TextElement" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Documents.ListItem" />
  <TypeSignature Language="VB.NET" Value="Public Class ListItem&#xA;Inherits TextElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class ListItem : System::Windows::Documents::TextElement" />
  <TypeSignature Language="F#" Value="type ListItem = class&#xA;    inherit TextElement" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Documents.TextElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Blocks")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="a7c3b-101">順序付きまたは順序の付いていない <see cref="T:System.Windows.Documents.List" /> 内の特定のコンテンツ項目を表すフロー コンテンツ要素。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-101">A flow content element that represents a particular content item in an ordered or unordered <see cref="T:System.Windows.Documents.List" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c3b-102"><xref:System.Windows.Documents.ListItem>子コンテンツに対して強力なコンテンツモデルを適用します。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-102"><xref:System.Windows.Documents.ListItem> enforces a strong content model for child content.</span></span> <span data-ttu-id="a7c3b-103">コンテンツモデルの詳細については、 <xref:System.Windows.Documents.ListItem> 「 [textelement コンテンツモデルの概要](~/docs/framework/wpf/advanced/textelement-content-model-overview.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-103">See [TextElement Content Model Overview](~/docs/framework/wpf/advanced/textelement-content-model-overview.md) for more information about the <xref:System.Windows.Documents.ListItem> content model.</span></span>  
  
 <span data-ttu-id="a7c3b-104"><xref:System.Windows.Documents.ListItem>要素は<xref:System.Windows.Documents.List>要素に含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-104"><xref:System.Windows.Documents.ListItem> elements must be contained by a <xref:System.Windows.Documents.List> element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7c3b-105">次の例は、 <xref:System.Windows.Documents.List>を使用してを定義する方法を示して[!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)]います。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-105">The following example shows how to define a <xref:System.Windows.Documents.List> using [!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)].</span></span>  
  
 [!code-xaml[ListSnippets#_ListXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/ListSnippets/CSharp/Window1.xaml#_listxaml)]  
  
 <span data-ttu-id="a7c3b-106">次の例は、をプログラムで<xref:System.Windows.Documents.List>作成して設定する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-106">The following example shows how to create and populate a <xref:System.Windows.Documents.List> programmatically.</span></span>  
  
 [!code-csharp[ListSnippets#_List_Props](~/samples/snippets/csharp/VS_Snippets_Wpf/ListSnippets/CSharp/Window1.xaml.cs#_list_props)]
 [!code-vb[ListSnippets#_List_Props](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ListSnippets/visualbasic/window1.xaml.vb#_list_props)]  
  
 <span data-ttu-id="a7c3b-107">この例の表示結果を次の図に示します。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-107">The following figure shows how this example renders.</span></span>  
  
 <span data-ttu-id="a7c3b-108">![スクリーンショット: 順序付きリスト](~/add/media/ordered-list.png "スクリーンショット: 順序付きリスト")</span><span class="sxs-lookup"><span data-stu-id="a7c3b-108">![Screenshot: Ordered list](~/add/media/ordered-list.png "Screenshot: Ordered list")</span></span>  
  
 <span data-ttu-id="a7c3b-109">次の例は、を使用して<xref:System.Windows.Documents.List> [!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)]、入れ子になった (リスト内のリスト) を定義する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-109">The following example shows how to define a nested <xref:System.Windows.Documents.List> (lists within lists) using [!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)].</span></span>  
  
 [!code-xaml[ListSnippets#_NestedListXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/ListSnippets/CSharp/Window1.xaml#_nestedlistxaml)]  
  
 <span data-ttu-id="a7c3b-110">この例の表示結果を次の図に示します。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-110">The following figure shows how this example renders.</span></span>  
  
 <span data-ttu-id="a7c3b-111">![入れ子になったリスト](~/add/media/flow-nested-list-example.png "入れ子になったリスト")</span><span class="sxs-lookup"><span data-stu-id="a7c3b-111">![Nested list](~/add/media/flow-nested-list-example.png "Nested list")</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a7c3b-112"><see cref="T:System.Windows.Documents.ListItem" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-112">Initializes a new instance of the <see cref="T:System.Windows.Documents.ListItem" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListItem ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.ListItem.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListItem();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a7c3b-113"><see cref="T:System.Windows.Documents.ListItem" /> クラスの新しい空のインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-113">Initializes a new, empty instance of the <see cref="T:System.Windows.Documents.ListItem" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListItem (System.Windows.Documents.Paragraph paragraph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Documents.Paragraph paragraph) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.ListItem.#ctor(System.Windows.Documents.Paragraph)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListItem(System::Windows::Documents::Paragraph ^ paragraph);" />
      <MemberSignature Language="F#" Value="new System.Windows.Documents.ListItem : System.Windows.Documents.Paragraph -&gt; System.Windows.Documents.ListItem" Usage="new System.Windows.Documents.ListItem paragraph" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="paragraph" Type="System.Windows.Documents.Paragraph" />
      </Parameters>
      <Docs>
        <param name="paragraph"><span data-ttu-id="a7c3b-114">新しい <see cref="T:System.Windows.Documents.Paragraph" /> の初期コンテンツを指定する <see cref="T:System.Windows.Documents.ListItem" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-114">A <see cref="T:System.Windows.Documents.Paragraph" /> object specifying the initial contents of the new <see cref="T:System.Windows.Documents.ListItem" />.</span></span></param>
        <summary><span data-ttu-id="a7c3b-115">指定した <see cref="T:System.Windows.Documents.ListItem" /> オブジェクトを新しい <see cref="T:System.Windows.Documents.Paragraph" /> の初期コンテンツとして受け取って、<see cref="T:System.Windows.Documents.ListItem" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-115">Initializes a new instance of the <see cref="T:System.Windows.Documents.ListItem" /> class, taking a specified <see cref="T:System.Windows.Documents.Paragraph" /> object as the initial contents of the new <see cref="T:System.Windows.Documents.ListItem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a7c3b-116">次の例は、このコンストラクターの使用方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-116">The following example demonstrates usage of this constructor.</span></span>  
  
 [!code-csharp[ListSnippets#_List_Const](~/samples/snippets/csharp/VS_Snippets_Wpf/ListSnippets/CSharp/Window1.xaml.cs#_list_const)]
 [!code-vb[ListSnippets#_List_Const](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ListSnippets/visualbasic/window1.xaml.vb#_list_const)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Blocks">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.BlockCollection Blocks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.BlockCollection Blocks" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.ListItem.Blocks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Blocks As BlockCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::BlockCollection ^ Blocks { System::Windows::Documents::BlockCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Blocks : System.Windows.Documents.BlockCollection" Usage="System.Windows.Documents.ListItem.Blocks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.BlockCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a7c3b-117"><see cref="T:System.Windows.Documents.ListItem" /> の最上位 <see cref="T:System.Windows.Documents.Block" /> 要素を格納するブロック コレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-117">Gets a block collection that contains the top-level <see cref="T:System.Windows.Documents.Block" /> elements of the <see cref="T:System.Windows.Documents.ListItem" />.</span></span></summary>
        <value><span data-ttu-id="a7c3b-118"><see cref="T:System.Windows.Documents.ListItem" /> の <see cref="T:System.Windows.Documents.Block" /> 要素を格納するブロック コレクション。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-118">A block collection that contains the <see cref="T:System.Windows.Documents.Block" /> elements of the <see cref="T:System.Windows.Documents.ListItem" /></span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c3b-119"><xref:System.Windows.Documents.Section>要素の内容を列挙または操作するには、このプロパティによって返されるブロックコレクションを使用します。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-119">Use the block collection returned by this property to enumerate or manipulate the contents of a <xref:System.Windows.Documents.Section> element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderBrush">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Brush BorderBrush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Brush BorderBrush" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.ListItem.BorderBrush" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderBrush As Brush" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Brush ^ BorderBrush { System::Windows::Media::Brush ^ get(); void set(System::Windows::Media::Brush ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BorderBrush : System.Windows.Media.Brush with get, set" Usage="System.Windows.Documents.ListItem.BorderBrush" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Brush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a7c3b-120">要素の境界線を描画するときに使用する <see cref="T:System.Windows.Media.Brush" /> を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-120">Gets or sets a <see cref="T:System.Windows.Media.Brush" /> to use when painting the element's border.</span></span></summary>
        <value><span data-ttu-id="a7c3b-121">要素の境界線に適用するために使用するブラシ。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-121">The brush used to apply to the element's border.</span></span> <span data-ttu-id="a7c3b-122">既定値は、<see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-122">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c3b-123">使用できる定義済みのブラシの色を示す見本の表に<xref:System.Windows.Media.Brushes>ついては、「」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-123">For a table of swatches that show the available predefined brush colors, see <xref:System.Windows.Media.Brushes>.</span></span>  
  
<a name="dependencyPropertyInfo_BorderBrush"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="a7c3b-124">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="a7c3b-124">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a7c3b-125">識別子フィールド</span><span class="sxs-lookup"><span data-stu-id="a7c3b-125">Identifier field</span></span>|<xref:System.Windows.Documents.ListItem.BorderBrushProperty>|  
|<span data-ttu-id="a7c3b-126">メタデータプロパティがに設定される`true`</span><span class="sxs-lookup"><span data-stu-id="a7c3b-126">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="a7c3b-127">要素の属性 <xref:System.Windows.Documents.ListItem.BorderBrush%2A> を設定する方法を次の例に示し<xref:System.Windows.Documents.Paragraph>ます ()。 <xref:System.Windows.Documents.Block></span><span class="sxs-lookup"><span data-stu-id="a7c3b-127">The following example shows how to set the <xref:System.Windows.Documents.ListItem.BorderBrush%2A> attribute of a <xref:System.Windows.Documents.Block> element (<xref:System.Windows.Documents.Paragraph>).</span></span>  
  
 [!code-xaml[BlockSnippets#_Block_BordersXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml#_block_bordersxaml)]  
  
 <span data-ttu-id="a7c3b-128">この例の表示結果を次の図に示します。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-128">The following figure shows how this example renders.</span></span>  
  
 <span data-ttu-id="a7c3b-129">![スクリーンショット: ブロックの&#47;周囲に青、4インチの境界線](~/add/media/block-borders.png "スクリーンショット: ブロックの周囲に青、1/4 インチの境界線")</span><span class="sxs-lookup"><span data-stu-id="a7c3b-129">![Screenshot: Blue, 1&#47;4inch border around Block](~/add/media/block-borders.png "Screenshot: Blue, 1/4inch border around Block")</span></span>  
  
 <span data-ttu-id="a7c3b-130">次の例では、プログラムを<xref:System.Windows.Documents.ListItem.BorderBrush%2A>使用してプロパティを設定する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-130">The following example shows how to set the <xref:System.Windows.Documents.ListItem.BorderBrush%2A> property programmatically.</span></span>  
  
 [!code-csharp[BlockSnippets#_Block_Borders](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml.cs#_block_borders)]
 [!code-vb[BlockSnippets#_Block_Borders](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BlockSnippets/visualbasic/window1.xaml.vb#_block_borders)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.ListItem.BorderThickness" />
      </Docs>
    </Member>
    <Member MemberName="BorderBrushProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty BorderBrushProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty BorderBrushProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.ListItem.BorderBrushProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BorderBrushProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ BorderBrushProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable BorderBrushProperty : System.Windows.DependencyProperty" Usage="System.Windows.Documents.ListItem.BorderBrushProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a7c3b-131"><see cref="P:System.Windows.Documents.ListItem.BorderBrush" /> 依存関係プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-131">Identifies the <see cref="P:System.Windows.Documents.ListItem.BorderBrush" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderThickness">
      <MemberSignature Language="C#" Value="public System.Windows.Thickness BorderThickness { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Thickness BorderThickness" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.ListItem.BorderThickness" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderThickness As Thickness" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Thickness BorderThickness { System::Windows::Thickness get(); void set(System::Windows::Thickness value); };" />
      <MemberSignature Language="F#" Value="member this.BorderThickness : System.Windows.Thickness with get, set" Usage="System.Windows.Documents.ListItem.BorderThickness" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Thickness</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a7c3b-132">要素の境界線の太さを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-132">Gets or sets the border thickness for the element.</span></span></summary>
        <value><span data-ttu-id="a7c3b-133">適用する境界線の量を指定する <see cref="T:System.Windows.Thickness" /> 構造体。デバイス非依存のピクセル単位で指定します。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-133">A <see cref="T:System.Windows.Thickness" /> structure that specifies the amount of border to apply, in device independent pixels.</span></span> <span data-ttu-id="a7c3b-134">既定では 0 (0.0) の均一の幅です。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-134">The default is a uniform thickness of zero (0.0).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_BorderThickness"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="a7c3b-135">XAML 属性の使用方法</span><span class="sxs-lookup"><span data-stu-id="a7c3b-135">XAML Attribute Usage</span></span>  
  
```  
<object BorderThickness="uniformThickness"/>  
- or -  
<object BorderThickness="independentThickness"/>  
- or -  
<object BorderThickness="qualifiedUniformThickness"/>  
- or -  
<object BorderThickness="qualifiedIndependentThickness"/>  
```  
  
<a name="xamlValues_BorderThickness"></a>   
## <a name="xaml-values"></a><span data-ttu-id="a7c3b-136">XAML 値</span><span class="sxs-lookup"><span data-stu-id="a7c3b-136">XAML Values</span></span>  
 <span data-ttu-id="a7c3b-137">*uniformThickness*</span><span class="sxs-lookup"><span data-stu-id="a7c3b-137">*uniformThickness*</span></span>  
 <span data-ttu-id="a7c3b-138">4つのすべての<xref:System.Double>太さ寸法に一様に適用される単一値の文字列表現。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-138">String representation of a single <xref:System.Double> value to apply uniformly to all four thickness dimensions.</span></span>  <span data-ttu-id="a7c3b-139">たとえば、の`"10"`値は、の`"10,10,10,10"`値に相当します。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-139">For example, a value of `"10"` is equivalent to a value of `"10,10,10,10"`.</span></span>  <span data-ttu-id="a7c3b-140">非修飾値は、デバイス非依存のピクセル単位で測定されます。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-140">An unqualified value is measured in device independent pixels.</span></span> <span data-ttu-id="a7c3b-141">文字列には、小数点を明示的に含める必要があります。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-141">Strings need not explicitly include decimal points.</span></span>  
  
 <span data-ttu-id="a7c3b-142">*independentThickness*</span><span class="sxs-lookup"><span data-stu-id="a7c3b-142">*independentThickness*</span></span>  
 <span data-ttu-id="a7c3b-143">この順序で、左<xref:System.Double> 、上、右、下の独立した太さの寸法に対応する4つの順序付けられた値の文字列表現。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-143">String representation of four ordered <xref:System.Double> values corresponding to independent thickness dimensions for left, top, right, and bottom, in this order.</span></span>  <span data-ttu-id="a7c3b-144">4つの値はコンマで区切る必要があります。スペースは使用できません。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-144">The four values must be separated with commas; spaces are not allowed.</span></span>  <span data-ttu-id="a7c3b-145">たとえば、"5, 10, 15, 20" を使用すると、コンテンツの左側に5ピクセルの境界線が表示され、コンテンツの上に10ピクセルの境界線が表示され、コンテンツの右側に15ピクセルの境界線が表示され、コンテンツの下に20ピクセルの罫線が表示されます。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-145">For example, "5,10,15,20" results in 5 pixels of border to the left of content, 10 pixels of border above content, 15 pixels of border to the right of content, and 20 pixels of border below the content.</span></span>  
  
 <span data-ttu-id="a7c3b-146">*qualifiedUniformThickness*</span><span class="sxs-lookup"><span data-stu-id="a7c3b-146">*qualifiedUniformThickness*</span></span>  
 <span data-ttu-id="a7c3b-147">*UniformThickness*によって記述される値。 `px`その後に、、 `in`のいずれかの単位指定子が続きます。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-147">A value described by *uniformThickness* followed by one of the following unit specifiers: `px`, `in`.</span></span>  
  
 <span data-ttu-id="a7c3b-148">`px`(既定) はです。[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span><span class="sxs-lookup"><span data-stu-id="a7c3b-148">`px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span></span>  
  
 <span data-ttu-id="a7c3b-149">`in` はインチ。1in==96px</span><span class="sxs-lookup"><span data-stu-id="a7c3b-149">`in` is inches; 1in==96px</span></span>  
  
 <span data-ttu-id="a7c3b-150">たとえば、は`"1in"` 、すべての方向に1インチの均一な境界線を提供します。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-150">For example, `"1in"` provides uniform border of 1 inch in all directions.</span></span>  
  
 <span data-ttu-id="a7c3b-151">*qualifiedIndependentThickness*</span><span class="sxs-lookup"><span data-stu-id="a7c3b-151">*qualifiedIndependentThickness*</span></span>  
 <span data-ttu-id="a7c3b-152">*IndependentThickness*によって記述される値。 `px`それぞれの値に続けて、 `in`次のいずれかの単位指定子が続きます。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-152">A value described by *independentThickness*, with each independent value followed by one of the following unit specifiers: `px`, `in`.</span></span>  
  
 <span data-ttu-id="a7c3b-153">`px`(既定) はです。[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span><span class="sxs-lookup"><span data-stu-id="a7c3b-153">`px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span></span>  
  
 <span data-ttu-id="a7c3b-154">`in` はインチ。1in==96px</span><span class="sxs-lookup"><span data-stu-id="a7c3b-154">`in` is inches; 1in==96px</span></span>  
  
 <span data-ttu-id="a7c3b-155">たとえば、`"1.5in,0.8in,1.5in,0.8in"` のようにします。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-155">For example, `"1.5in,0.8in,1.5in,0.8in"`.</span></span>  <span data-ttu-id="a7c3b-156">単位指定子は、1つまたは複数の値から混在させることも、省略することもできます。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-156">Unit specifiers may be mixed or omitted from one or more values.</span></span>  
  
<a name="dependencyPropertyInfo_BorderThickness"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="a7c3b-157">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="a7c3b-157">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a7c3b-158">識別子フィールド</span><span class="sxs-lookup"><span data-stu-id="a7c3b-158">Identifier field</span></span>|<xref:System.Windows.Documents.ListItem.BorderThicknessProperty>|  
|<span data-ttu-id="a7c3b-159">メタデータプロパティがに設定される`true`</span><span class="sxs-lookup"><span data-stu-id="a7c3b-159">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="a7c3b-160">要素の属性 <xref:System.Windows.Documents.ListItem.BorderThickness%2A> を設定する方法を次の例に示し<xref:System.Windows.Documents.Paragraph>ます ()。 <xref:System.Windows.Documents.Block></span><span class="sxs-lookup"><span data-stu-id="a7c3b-160">The following example shows how to set the <xref:System.Windows.Documents.ListItem.BorderThickness%2A> attribute of a <xref:System.Windows.Documents.Block> element (<xref:System.Windows.Documents.Paragraph>).</span></span>  
  
 [!code-xaml[BlockSnippets#_Block_BordersXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml#_block_bordersxaml)]  
  
 <span data-ttu-id="a7c3b-161">この例の表示結果を次の図に示します。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-161">The following figure shows how this example renders.</span></span>  
  
 <span data-ttu-id="a7c3b-162">![スクリーンショット: ブロックの&#47;周囲に青、4インチの境界線](~/add/media/block-borders.png "スクリーンショット: ブロックの周囲に青、1/4 インチの境界線")</span><span class="sxs-lookup"><span data-stu-id="a7c3b-162">![Screenshot: Blue, 1&#47;4inch border around Block](~/add/media/block-borders.png "Screenshot: Blue, 1/4inch border around Block")</span></span>  
  
 <span data-ttu-id="a7c3b-163">次の例では、プログラムを<xref:System.Windows.Documents.ListItem.BorderThickness%2A>使用してプロパティを設定する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-163">The following example shows how to set the <xref:System.Windows.Documents.ListItem.BorderThickness%2A> property programmatically.</span></span>  
  
 [!code-csharp[BlockSnippets#_Block_Borders](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml.cs#_block_borders)]
 [!code-vb[BlockSnippets#_Block_Borders](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BlockSnippets/visualbasic/window1.xaml.vb#_block_borders)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.ListItem.BorderBrush" />
      </Docs>
    </Member>
    <Member MemberName="BorderThicknessProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty BorderThicknessProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty BorderThicknessProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.ListItem.BorderThicknessProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BorderThicknessProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ BorderThicknessProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable BorderThicknessProperty : System.Windows.DependencyProperty" Usage="System.Windows.Documents.ListItem.BorderThicknessProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a7c3b-164"><see cref="P:System.Windows.Documents.ListItem.BorderThickness" /> 依存関係プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-164">Identifies the <see cref="P:System.Windows.Documents.ListItem.BorderThickness" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FlowDirection">
      <MemberSignature Language="C#" Value="public System.Windows.FlowDirection FlowDirection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.FlowDirection FlowDirection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.ListItem.FlowDirection" />
      <MemberSignature Language="VB.NET" Value="Public Property FlowDirection As FlowDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::FlowDirection FlowDirection { System::Windows::FlowDirection get(); void set(System::Windows::FlowDirection value); };" />
      <MemberSignature Language="F#" Value="member this.FlowDirection : System.Windows.FlowDirection with get, set" Usage="System.Windows.Documents.ListItem.FlowDirection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FlowDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a7c3b-165"><see cref="T:System.Windows.Documents.ListItem" /> 要素内のコンテンツのフローの相対的な方向を指定する値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-165">Gets or sets the relative direction for flow of content within a <see cref="T:System.Windows.Documents.ListItem" /> element.</span></span></summary>
        <value><span data-ttu-id="a7c3b-166">相対的なフロー方向を指定する <see cref="T:System.Windows.FlowDirection" /> 値のいずれか。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-166">One of the <see cref="T:System.Windows.FlowDirection" /> values that specifies the relative flow direction.</span></span>  <span data-ttu-id="a7c3b-167">既定値は、<see cref="F:System.Windows.FlowDirection.LeftToRight" /> です。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-167">The default is <see cref="F:System.Windows.FlowDirection.LeftToRight" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c3b-168">このプロパティを取得すると、現在有効なフロー方向が返されます。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-168">Getting this property returns the currently effective flow direction.</span></span>  <span data-ttu-id="a7c3b-169">このプロパティを設定すると、<xref:System.Windows.Documents.ListItem> 要素のコンテンツが指定した方向に再フローされます。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-169">Setting this property causes the contents of the <xref:System.Windows.Documents.ListItem> element to re-flow in the indicated direction.</span></span>  
  
 <span data-ttu-id="a7c3b-170">コンテンツのフロー方向は、通常、表現される言語の innate flow 方向に対応します。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-170">The flow direction of content typically corresponds to the innate flow direction of the language being represented.</span></span>  <span data-ttu-id="a7c3b-171">ヘブライ語とアラビア語は、自然に右から左に流れる言語の例です。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-171">Hebrew and Arabic are examples of languages that naturally flow from right to left.</span></span>  <span data-ttu-id="a7c3b-172">英語、ドイツ語、ロシア語は、自然に左から右に流れる言語の例です。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-172">English, German, and Russian are examples of languages that naturally flow from left to right.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a7c3b-173">このプロパティの値は、オペレーティングシステムで使用される言語に合わせて自動的に変更されることはありません。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-173">The value of this property is not automatically changed to match the language used by the operating system.</span></span> <span data-ttu-id="a7c3b-174">の<xref:System.Windows.FlowDirection.LeftToRight>既定値とは異なる値を使用する必要がある場合は、自分で指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-174">If you need to use a different value than the default of <xref:System.Windows.FlowDirection.LeftToRight>, you must specify it yourself.</span></span>  
  
<a name="dependencyPropertyInfo_FlowDirection"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="a7c3b-175">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="a7c3b-175">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a7c3b-176">識別子フィールド</span><span class="sxs-lookup"><span data-stu-id="a7c3b-176">Identifier field</span></span>|<xref:System.Windows.Documents.ListItem.FlowDirectionProperty>|  
|<span data-ttu-id="a7c3b-177">メタデータプロパティがに設定される`true`</span><span class="sxs-lookup"><span data-stu-id="a7c3b-177">Metadata properties set to `true`</span></span>|<span data-ttu-id="a7c3b-178"><xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>、 <xref:System.Windows.FrameworkPropertyMetadata.AffectsParentArrange%2A></span><span class="sxs-lookup"><span data-stu-id="a7c3b-178"><xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsParentArrange%2A></span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="a7c3b-179">要素の属性 <xref:System.Windows.Documents.ListItem.FlowDirection%2A> を設定する方法を次の例に示し<xref:System.Windows.Documents.Paragraph>ます ()。 <xref:System.Windows.Documents.Block></span><span class="sxs-lookup"><span data-stu-id="a7c3b-179">The following example shows how to set the <xref:System.Windows.Documents.ListItem.FlowDirection%2A> attribute of a <xref:System.Windows.Documents.Block> element (<xref:System.Windows.Documents.Paragraph>).</span></span>  
  
 [!code-xaml[BlockSnippets#_Block_FlowDirectionXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml#_block_flowdirectionxaml)]  
  
 <span data-ttu-id="a7c3b-180">次の例では、プログラムを<xref:System.Windows.Documents.ListItem.FlowDirection%2A>使用してプロパティを設定する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-180">The following example shows how to set the <xref:System.Windows.Documents.ListItem.FlowDirection%2A> property programmatically.</span></span>  
  
 [!code-csharp[BlockSnippets#_Block_FlowDirection](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml.cs#_block_flowdirection)]
 [!code-vb[BlockSnippets#_Block_FlowDirection](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BlockSnippets/visualbasic/window1.xaml.vb#_block_flowdirection)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FlowDirectionProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FlowDirectionProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FlowDirectionProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.ListItem.FlowDirectionProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FlowDirectionProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ FlowDirectionProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable FlowDirectionProperty : System.Windows.DependencyProperty" Usage="System.Windows.Documents.ListItem.FlowDirectionProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a7c3b-181"><see cref="P:System.Windows.Documents.ListItem.FlowDirection" /> 依存関係プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-181">Identifies the <see cref="P:System.Windows.Documents.ListItem.FlowDirection" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineHeight">
      <MemberSignature Language="C#" Value="public double LineHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 LineHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.ListItem.LineHeight" />
      <MemberSignature Language="VB.NET" Value="Public Property LineHeight As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double LineHeight { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.LineHeight : double with get, set" Usage="System.Windows.Documents.ListItem.LineHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.LengthConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a7c3b-182">コンテンツの各行の高さを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-182">Gets or sets the height of each line of content.</span></span></summary>
        <value><span data-ttu-id="a7c3b-183">各行の高さ。単位はデバイスに依存しないピクセルで、値は 0.0034 から 160000 までの範囲です。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-183">The height of each line in device independent pixels with a value range of 0.0034 to 160000.</span></span>  <span data-ttu-id="a7c3b-184">値 (属性<see cref="F:System.Double.NaN" />値 "<c>Auto</c>" に相当) を指定すると、現在のフォント特性を基に行の高さが自動的に決定されます。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-184">A value of <see cref="F:System.Double.NaN" /> (equivalent to an attribute value of "<c>Auto</c>") causes the line height to be determined automatically from the current font characteristics.</span></span>  <span data-ttu-id="a7c3b-185">既定値は、<see cref="F:System.Double.NaN" /> です。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-185">The default is <see cref="F:System.Double.NaN" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c3b-186">値を<xref:System.Windows.Documents.ListItem.LineHeight%2A>変更しても、関連付けられているテキストの高さは変わりません。テキストを含む行の高さが変更されます。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-186">Changing the <xref:System.Windows.Documents.ListItem.LineHeight%2A> value does not change the height of the associated text; rather, it changes the height of the line that contains the text.</span></span>  
  
 <span data-ttu-id="a7c3b-187">このプロパティに加え<xref:System.Windows.Documents.ListItem> <xref:System.Windows.Documents.ListItem.LineStackingStrategy%2A>て、の行のレイアウトはプロパティの影響を受けます。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-187">In addition to this property, the layout of lines in a <xref:System.Windows.Documents.ListItem> is affected by its <xref:System.Windows.Documents.ListItem.LineStackingStrategy%2A> property.</span></span>  
  
<a name="xamlAttributeUsage_LineHeight"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="a7c3b-188">XAML 属性の使用方法</span><span class="sxs-lookup"><span data-stu-id="a7c3b-188">XAML Attribute Usage</span></span>  
  
```  
<object LineHeight="double"/>  
- or -  
<object LineHeight="qualifiedDouble"/>  
- or -  
<object LineHeight="Auto"/>  
```  
  
<a name="xamlValues_LineHeight"></a>   
## <a name="xaml-values"></a><span data-ttu-id="a7c3b-189">XAML 値</span><span class="sxs-lookup"><span data-stu-id="a7c3b-189">XAML Values</span></span>  
 <span data-ttu-id="a7c3b-190">*double*</span><span class="sxs-lookup"><span data-stu-id="a7c3b-190">*double*</span></span>  
 <span data-ttu-id="a7c3b-191">から`0.0034` <xref:System.Double> までの範囲の値の文字列形式 `160000` 。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-191">String representation of a <xref:System.Double> value in the range `0.0034` to `160000`.</span></span> <span data-ttu-id="a7c3b-192">非修飾値は、デバイス非依存のピクセル単位で測定されます。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-192">An unqualified value is measured in device independent pixels.</span></span> <span data-ttu-id="a7c3b-193">文字列には、小数点を明示的に含める必要があります。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-193">Strings need not explicitly include decimal points.</span></span>  
  
 <span data-ttu-id="a7c3b-194">*qualifiedDouble*</span><span class="sxs-lookup"><span data-stu-id="a7c3b-194">*qualifiedDouble*</span></span>  
 <span data-ttu-id="a7c3b-195">前述*の double*値 (違う`Auto`) の後に、 `cm` `px`次のいずれかの`in`単位指定子が続く場合`pt`は、、、、です。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-195">A *double* value as described above, (excepting `Auto`) followed by one of the following unit specifiers: `px`, `in`, `cm`, `pt`.</span></span>  
  
 <span data-ttu-id="a7c3b-196">`px`(既定) はです。[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span><span class="sxs-lookup"><span data-stu-id="a7c3b-196">`px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span></span>  
  
 <span data-ttu-id="a7c3b-197">`in` はインチ。1in==96px</span><span class="sxs-lookup"><span data-stu-id="a7c3b-197">`in` is inches; 1in==96px</span></span>  
  
 <span data-ttu-id="a7c3b-198">`cm`はセンチメートルです。1cm = = (96/2.54) px</span><span class="sxs-lookup"><span data-stu-id="a7c3b-198">`cm` is centimeters; 1cm==(96/2.54) px</span></span>  
  
 <span data-ttu-id="a7c3b-199">`pt` はポイント。1pt==(96/72) px</span><span class="sxs-lookup"><span data-stu-id="a7c3b-199">`pt` is points; 1pt==(96/72) px</span></span>  
  
 <span data-ttu-id="a7c3b-200">自動</span><span class="sxs-lookup"><span data-stu-id="a7c3b-200">Auto</span></span>  
 <span data-ttu-id="a7c3b-201">現在のフォント特性を基に行の高さが自動的に決定されます。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-201">Causes the line height to be determined automatically from the current font characteristics.</span></span>  <span data-ttu-id="a7c3b-202">の<xref:System.Double.NaN?displayProperty=nameWithType>プロパティ値と同じです。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-202">Equivalent to a property value of <xref:System.Double.NaN?displayProperty=nameWithType>.</span></span>  
  
<a name="dependencyPropertyInfo_LineHeight"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="a7c3b-203">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="a7c3b-203">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a7c3b-204">識別子フィールド</span><span class="sxs-lookup"><span data-stu-id="a7c3b-204">Identifier field</span></span>|<xref:System.Windows.Documents.ListItem.LineHeightProperty>|  
|<span data-ttu-id="a7c3b-205">メタデータプロパティがに設定される`true`</span><span class="sxs-lookup"><span data-stu-id="a7c3b-205">Metadata properties set to `true`</span></span>|<span data-ttu-id="a7c3b-206"><xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>、<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>、<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A></span><span class="sxs-lookup"><span data-stu-id="a7c3b-206"><xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A></span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="a7c3b-207">要素の属性 <xref:System.Windows.Documents.ListItem.LineHeight%2A> を設定する方法を次の例に示します。 <xref:System.Windows.Documents.Block></span><span class="sxs-lookup"><span data-stu-id="a7c3b-207">The following example shows how to set the <xref:System.Windows.Documents.ListItem.LineHeight%2A> attribute of a <xref:System.Windows.Documents.Block> element.</span></span>  
  
 [!code-xaml[BlockSnippets#_Block_LineHeightXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml#_block_lineheightxaml)]  
  
 <span data-ttu-id="a7c3b-208">次の図は、前の例がどのようにレンダリングされるかを示しています。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-208">The following figure shows how the previous example renders.</span></span>  
  
 <span data-ttu-id="a7c3b-209">![スクリーンショット: FlowDocument LineHeight](~/add/media/flowdocument-lineheight.png "スクリーンショット: FlowDocument LineHeight")</span><span class="sxs-lookup"><span data-stu-id="a7c3b-209">![Screenshot: FlowDocument LineHeight](~/add/media/flowdocument-lineheight.png "Screenshot: FlowDocument LineHeight")</span></span>  
  
 <span data-ttu-id="a7c3b-210">次の図は、同じ例がの<xref:System.Windows.Documents.ListItem.LineHeight%2A> = <xref:System.Double.NaN?displayProperty=nameWithType>既定の設定を使用してレンダリングされる方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-210">The following figure shows how the same example renders with the default setting of <xref:System.Windows.Documents.ListItem.LineHeight%2A>=<xref:System.Double.NaN?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="a7c3b-211">![スクリーンショット: FlowDocument LineHeight の既定値](~/add/media/flowdocument-lineheightdefault.png "スクリーンショット: FlowDocument LineHeight の既定値")</span><span class="sxs-lookup"><span data-stu-id="a7c3b-211">![Screenshot: FlowDocument LineHeight default](~/add/media/flowdocument-lineheightdefault.png "Screenshot: FlowDocument LineHeight default")</span></span>  
  
 <span data-ttu-id="a7c3b-212">次の例では、プログラムを<xref:System.Windows.Documents.ListItem.LineHeight%2A>使用してプロパティを設定する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-212">The following example shows how to set the <xref:System.Windows.Documents.ListItem.LineHeight%2A> property programmatically.</span></span>  
  
 [!code-csharp[BlockSnippets#_Block_LineHeight](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml.cs#_block_lineheight)]
 [!code-vb[BlockSnippets#_Block_LineHeight](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BlockSnippets/visualbasic/window1.xaml.vb#_block_lineheight)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LineHeightProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty LineHeightProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty LineHeightProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.ListItem.LineHeightProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LineHeightProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ LineHeightProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable LineHeightProperty : System.Windows.DependencyProperty" Usage="System.Windows.Documents.ListItem.LineHeightProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a7c3b-213"><see cref="P:System.Windows.Documents.ListItem.LineHeight" /> 依存関係プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-213">Identifies the <see cref="P:System.Windows.Documents.ListItem.LineHeight" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineStackingStrategy">
      <MemberSignature Language="C#" Value="public System.Windows.LineStackingStrategy LineStackingStrategy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.LineStackingStrategy LineStackingStrategy" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.ListItem.LineStackingStrategy" />
      <MemberSignature Language="VB.NET" Value="Public Property LineStackingStrategy As LineStackingStrategy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::LineStackingStrategy LineStackingStrategy { System::Windows::LineStackingStrategy get(); void set(System::Windows::LineStackingStrategy value); };" />
      <MemberSignature Language="F#" Value="member this.LineStackingStrategy : System.Windows.LineStackingStrategy with get, set" Usage="System.Windows.Documents.ListItem.LineStackingStrategy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.LineStackingStrategy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a7c3b-214"><see cref="T:System.Windows.Documents.ListItem" /> 内の各テキスト行の行ボックスを決定する際に使用する機構を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-214">Gets or sets the mechanism by which a line box is determined for each line of text within the <see cref="T:System.Windows.Documents.ListItem" />.</span></span></summary>
        <value><span data-ttu-id="a7c3b-215"><see cref="T:System.Windows.LineStackingStrategy" /> 内の各テキスト行の行ボックスを決定する際に使用される機構を指定する <see cref="T:System.Windows.Documents.ListItem" /> 値のいずれか。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-215">One of the <see cref="T:System.Windows.LineStackingStrategy" /> values that specifies the mechanism by which a line box is determined for each line of text within the <see cref="T:System.Windows.Documents.ListItem" />.</span></span> <span data-ttu-id="a7c3b-216">既定値は、<see cref="F:System.Windows.LineStackingStrategy.MaxHeight" /> です。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-216">The default is <see cref="F:System.Windows.LineStackingStrategy.MaxHeight" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_LineStackingStrategy"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="a7c3b-217">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="a7c3b-217">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a7c3b-218">識別子フィールド</span><span class="sxs-lookup"><span data-stu-id="a7c3b-218">Identifier field</span></span>|<xref:System.Windows.Documents.ListItem.LineStackingStrategyProperty>|  
|<span data-ttu-id="a7c3b-219">メタデータプロパティがに設定される`true`</span><span class="sxs-lookup"><span data-stu-id="a7c3b-219">Metadata properties set to `true`</span></span>|<span data-ttu-id="a7c3b-220"><xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>、<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>、<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A></span><span class="sxs-lookup"><span data-stu-id="a7c3b-220"><xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A></span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="a7c3b-221">次の例は、 <xref:System.Windows.Controls.TextBlock.LineStackingStrategy%2A>プロパティを使用して、 <xref:System.Windows.Controls.TextBlock>のテキスト行に対して行ボックスを作成する方法を決定する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-221">The following example shows how to use the <xref:System.Windows.Controls.TextBlock.LineStackingStrategy%2A> property to determine how the line boxes are created for text lines of a <xref:System.Windows.Controls.TextBlock>.</span></span> <span data-ttu-id="a7c3b-222">最初<xref:System.Windows.Controls.TextBlock> <xref:System.Windows.LineStackingStrategy.BlockLineHeight> <xref:System.Windows.Controls.TextBlock>のの<xref:System.Windows.LineStackingStrategy.MaxHeight>値はで、2番目のの値はです。 <xref:System.Windows.Controls.TextBlock.LineStackingStrategy%2A></span><span class="sxs-lookup"><span data-stu-id="a7c3b-222">The first <xref:System.Windows.Controls.TextBlock> has a <xref:System.Windows.Controls.TextBlock.LineStackingStrategy%2A> value of <xref:System.Windows.LineStackingStrategy.MaxHeight> and the second <xref:System.Windows.Controls.TextBlock> has a value of <xref:System.Windows.LineStackingStrategy.BlockLineHeight>.</span></span>  
  
 [!code-xaml[FlowMiscSnippets_snip#LineStackingStrategyExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowMiscSnippets_snip/cs/linestackingstrategyexample.xaml#linestackingstrategyexamplewholepage)]  
  
 <span data-ttu-id="a7c3b-223">次の図は、上記のコードの結果を示しています。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-223">The following illustration shows the result of the preceding code.</span></span>  
  
 <span data-ttu-id="a7c3b-224">![スクリーンショット: LineStackingStrategy 値の比較](~/add/media/flow-linestackingstrategy.gif "スクリーンショット: LineStackingStrategy 値の比較")</span><span class="sxs-lookup"><span data-stu-id="a7c3b-224">![Screenshot: Compare LineStackingStrategy values](~/add/media/flow-linestackingstrategy.gif "Screenshot: Compare LineStackingStrategy values")</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LineStackingStrategyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty LineStackingStrategyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty LineStackingStrategyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.ListItem.LineStackingStrategyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LineStackingStrategyProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ LineStackingStrategyProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable LineStackingStrategyProperty : System.Windows.DependencyProperty" Usage="System.Windows.Documents.ListItem.LineStackingStrategyProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a7c3b-225"><see cref="P:System.Windows.Documents.ListItem.LineStackingStrategy" /> 依存関係プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-225">Identifies the <see cref="P:System.Windows.Documents.ListItem.LineStackingStrategy" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="List">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.List List { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.List List" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.ListItem.List" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property List As List" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::List ^ List { System::Windows::Documents::List ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.List : System.Windows.Documents.List" Usage="System.Windows.Documents.ListItem.List" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.List</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a7c3b-226"><see cref="T:System.Windows.Documents.List" /> を格納している <see cref="T:System.Windows.Documents.ListItem" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-226">Gets the <see cref="T:System.Windows.Documents.List" /> that contains the <see cref="T:System.Windows.Documents.ListItem" />.</span></span></summary>
        <value><span data-ttu-id="a7c3b-227"><see cref="T:System.Windows.Documents.ListItem" /> を格納しているリスト。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-227">The list that contains the <see cref="T:System.Windows.Documents.ListItem" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Margin">
      <MemberSignature Language="C#" Value="public System.Windows.Thickness Margin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Thickness Margin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.ListItem.Margin" />
      <MemberSignature Language="VB.NET" Value="Public Property Margin As Thickness" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Thickness Margin { System::Windows::Thickness get(); void set(System::Windows::Thickness value); };" />
      <MemberSignature Language="F#" Value="member this.Margin : System.Windows.Thickness with get, set" Usage="System.Windows.Documents.ListItem.Margin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Thickness</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a7c3b-228">要素の余白の厚みを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-228">Gets or sets the margin thickness for the element.</span></span></summary>
        <value><span data-ttu-id="a7c3b-229">適用する余白の量を指定する <see cref="T:System.Windows.Thickness" /> 構造体。デバイス非依存のピクセル単位で指定します。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-229">A <see cref="T:System.Windows.Thickness" /> structure that specifies the amount of margin to apply, in device independent pixels.</span></span> <span data-ttu-id="a7c3b-230">既定では 0 (0.0) の均一の幅です。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-230">The default is a uniform thickness of zero (0.0).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c3b-231"><xref:System.Windows.Documents.ListItem.Margin%2A>は要素のコンテンツ領域の外側にあり、要素のコンテンツ領域の端と親要素の端の間にあるバッファー領域です。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-231"><xref:System.Windows.Documents.ListItem.Margin%2A> is buffer space that falls outside an element's content area, between the edges of the element's content area and the edges of the parent element.</span></span>  <span data-ttu-id="a7c3b-232">と<xref:System.Windows.Documents.ListItem.Padding%2A>は対照的に、要素のコンテンツ領域の内側にあるバッファー領域であり、要素のコンテンツと要素の内側の境界の間にあります。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-232">Contrast with <xref:System.Windows.Documents.ListItem.Padding%2A>, which is buffer space that falls inside an element's content area, between the element's content and the inner edge of the element.</span></span>  
  
<a name="xamlAttributeUsage_Margin"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="a7c3b-233">XAML 属性の使用方法</span><span class="sxs-lookup"><span data-stu-id="a7c3b-233">XAML Attribute Usage</span></span>  
  
```  
<object Margin="uniformThickness"/>  
- or -  
<object Margin="independentThickness"/>  
- or -  
<object Margin="qualifiedUniformThickness"/>  
- or -  
<object Margin="qualifiedIndependentThickness"/>  
```  
  
<a name="xamlValues_Margin"></a>   
## <a name="xaml-values"></a><span data-ttu-id="a7c3b-234">XAML 値</span><span class="sxs-lookup"><span data-stu-id="a7c3b-234">XAML Values</span></span>  
 <span data-ttu-id="a7c3b-235">*uniformThickness*</span><span class="sxs-lookup"><span data-stu-id="a7c3b-235">*uniformThickness*</span></span>  
 <span data-ttu-id="a7c3b-236">4つのすべての<xref:System.Double>太さ寸法に一様に適用される単一値の文字列表現。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-236">String representation of a single <xref:System.Double> value to apply uniformly to all four thickness dimensions.</span></span>  <span data-ttu-id="a7c3b-237">たとえば、の`"10"`値は、の`"10,10,10,10"`値に相当します。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-237">For example, a value of `"10"` is equivalent to a value of `"10,10,10,10"`.</span></span>  <span data-ttu-id="a7c3b-238">非修飾値は、デバイス非依存のピクセル単位で測定されます。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-238">An unqualified value is measured in device independent pixels.</span></span> <span data-ttu-id="a7c3b-239">文字列には、小数点を明示的に含める必要があります。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-239">Strings need not explicitly include decimal points.</span></span>  
  
 <span data-ttu-id="a7c3b-240">*independentThickness*</span><span class="sxs-lookup"><span data-stu-id="a7c3b-240">*independentThickness*</span></span>  
 <span data-ttu-id="a7c3b-241">この順序で、左<xref:System.Double> 、上、右、下の独立した太さの寸法に対応する4つの順序付けられた値の文字列表現。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-241">String representation of four ordered <xref:System.Double> values corresponding to independent thickness dimensions for left, top, right, and bottom, in this order.</span></span>  <span data-ttu-id="a7c3b-242">4つの値はコンマで区切る必要があります。スペースは使用できません。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-242">The four values must be separated with commas; spaces are not allowed.</span></span>  <span data-ttu-id="a7c3b-243">たとえば、"5, 10, 15, 20" の場合、コンテンツの左側に5ピクセルの余白、コンテンツの上に10ピクセルの余白、コンテンツの右側に15ピクセルの余白、コンテンツの下に20ピクセルの余白が表示されます。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-243">For example, "5,10,15,20" results in 5 pixels of margin to the left of content, 10 pixels of margin above content, 15 pixels of margin to the right of content, and 20 pixels of margin below the content.</span></span>  
  
 <span data-ttu-id="a7c3b-244">*qualifiedUniformThickness*</span><span class="sxs-lookup"><span data-stu-id="a7c3b-244">*qualifiedUniformThickness*</span></span>  
 <span data-ttu-id="a7c3b-245">*UniformThickness*によって記述される値。 `px`その後に、、 `in`のいずれかの単位指定子が続きます。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-245">A value described by *uniformThickness* followed by one of the following unit specifiers: `px`, `in`.</span></span>  
  
 <span data-ttu-id="a7c3b-246">`px`(既定) はです。[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span><span class="sxs-lookup"><span data-stu-id="a7c3b-246">`px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span></span>  
  
 <span data-ttu-id="a7c3b-247">`in` はインチ。1in==96px</span><span class="sxs-lookup"><span data-stu-id="a7c3b-247">`in` is inches; 1in==96px</span></span>  
  
 <span data-ttu-id="a7c3b-248">たとえば、は`"1in"` 、すべての方向に1インチの均一な余白を提供します。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-248">For example, `"1in"` provides uniform margin of 1 inch in all directions.</span></span>  
  
 <span data-ttu-id="a7c3b-249">*qualifiedIndependentThickness*</span><span class="sxs-lookup"><span data-stu-id="a7c3b-249">*qualifiedIndependentThickness*</span></span>  
 <span data-ttu-id="a7c3b-250">*IndependentThickness*によって記述される値。 `px`それぞれの値に続けて、 `in`次のいずれかの単位指定子が続きます。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-250">A value described by *independentThickness*, with each independent value followed by one of the following unit specifiers: `px`, `in`.</span></span>  
  
 <span data-ttu-id="a7c3b-251">`px`(既定) はです。[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span><span class="sxs-lookup"><span data-stu-id="a7c3b-251">`px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span></span>  
  
 <span data-ttu-id="a7c3b-252">`in` はインチ。1in==96px</span><span class="sxs-lookup"><span data-stu-id="a7c3b-252">`in` is inches; 1in==96px</span></span>  
  
 <span data-ttu-id="a7c3b-253">たとえば、`"1.5in,0.8in,1.5in,0.8in"` のようにします。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-253">For example, `"1.5in,0.8in,1.5in,0.8in"`.</span></span>  <span data-ttu-id="a7c3b-254">単位指定子は、1つまたは複数の値から混在させることも、省略することもできます。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-254">Unit specifiers may be mixed or omitted from one or more values.</span></span>  
  
<a name="dependencyPropertyInfo_Margin"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="a7c3b-255">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="a7c3b-255">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a7c3b-256">識別子フィールド</span><span class="sxs-lookup"><span data-stu-id="a7c3b-256">Identifier field</span></span>|<xref:System.Windows.Documents.ListItem.MarginProperty>|  
|<span data-ttu-id="a7c3b-257">メタデータプロパティがに設定される`true`</span><span class="sxs-lookup"><span data-stu-id="a7c3b-257">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="a7c3b-258">要素の属性 <xref:System.Windows.Documents.ListItem.Margin%2A> を設定する方法を次の例に示し<xref:System.Windows.Documents.Paragraph>ます ()。 <xref:System.Windows.Documents.Block></span><span class="sxs-lookup"><span data-stu-id="a7c3b-258">The following example shows how to set the <xref:System.Windows.Documents.ListItem.Margin%2A> attribute of a <xref:System.Windows.Documents.Block> element (<xref:System.Windows.Documents.Paragraph>).</span></span>  
  
 [!code-xaml[BlockSnippets#_Block_MarginPaddingXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml#_block_marginpaddingxaml)]  
  
 <span data-ttu-id="a7c3b-259">この例の表示結果を次の図に示します。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-259">The following figure shows how this example renders.</span></span>  <span data-ttu-id="a7c3b-260">図には、誇張された太さと色が使用されています。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-260">Exaggerated thicknesses and colors are used for illustration.</span></span>  
  
 <span data-ttu-id="a7c3b-261">![スクリーンショット: 埋め込みと余白がある段落](~/add/media/block-marginpadding.png "スクリーンショット: 埋め込みと余白がある段落")</span><span class="sxs-lookup"><span data-stu-id="a7c3b-261">![Screenshot: Paragraphs with padding and margins](~/add/media/block-marginpadding.png "Screenshot: Paragraphs with padding and margins")</span></span>  
  
 <span data-ttu-id="a7c3b-262">次の例では、プログラムを<xref:System.Windows.Documents.ListItem.Margin%2A>使用してプロパティを設定する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-262">The following example shows how to set the <xref:System.Windows.Documents.ListItem.Margin%2A> property programmatically.</span></span>  
  
 [!code-csharp[BlockSnippets#_Block_MarginPadding](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml.cs#_block_marginpadding)]
 [!code-vb[BlockSnippets#_Block_MarginPadding](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BlockSnippets/visualbasic/window1.xaml.vb#_block_marginpadding)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.ListItem.Padding" />
      </Docs>
    </Member>
    <Member MemberName="MarginProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty MarginProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty MarginProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.ListItem.MarginProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MarginProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ MarginProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable MarginProperty : System.Windows.DependencyProperty" Usage="System.Windows.Documents.ListItem.MarginProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a7c3b-263"><see cref="P:System.Windows.Documents.ListItem.Margin" /> 依存関係プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-263">Identifies the <see cref="P:System.Windows.Documents.ListItem.Margin" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NextListItem">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.ListItem NextListItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.ListItem NextListItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.ListItem.NextListItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NextListItem As ListItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::ListItem ^ NextListItem { System::Windows::Documents::ListItem ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NextListItem : System.Windows.Documents.ListItem" Usage="System.Windows.Documents.ListItem.NextListItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.ListItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a7c3b-264">含有する <see cref="T:System.Windows.Documents.ListItem" /> 内の次の <see cref="T:System.Windows.Documents.List" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-264">Gets the next <see cref="T:System.Windows.Documents.ListItem" /> in the containing <see cref="T:System.Windows.Documents.List" />.</span></span></summary>
        <value><span data-ttu-id="a7c3b-265"><see cref="T:System.Windows.Documents.ListItem" /> 内の次の <see cref="T:System.Windows.Documents.List" />。次の <see cref="T:System.Windows.Documents.ListItem" /> がない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-265">The next <see cref="T:System.Windows.Documents.ListItem" /> in the <see cref="T:System.Windows.Documents.List" />, or <see langword="null" /> if there is no next <see cref="T:System.Windows.Documents.ListItem" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Documents.ListItem.PreviousListItem" />
        <altmember cref="P:System.Windows.Documents.ListItem.SiblingListItems" />
      </Docs>
    </Member>
    <Member MemberName="Padding">
      <MemberSignature Language="C#" Value="public System.Windows.Thickness Padding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Thickness Padding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.ListItem.Padding" />
      <MemberSignature Language="VB.NET" Value="Public Property Padding As Thickness" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Thickness Padding { System::Windows::Thickness get(); void set(System::Windows::Thickness value); };" />
      <MemberSignature Language="F#" Value="member this.Padding : System.Windows.Thickness with get, set" Usage="System.Windows.Documents.ListItem.Padding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Thickness</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a7c3b-266">要素のパディングの厚みを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-266">Gets or sets the padding thickness for the element.</span></span></summary>
        <value><span data-ttu-id="a7c3b-267">適用する余白の量を指定する <see cref="T:System.Windows.Thickness" /> 構造体。デバイス非依存のピクセル単位で指定します。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-267">A <see cref="T:System.Windows.Thickness" /> structure that specifies the amount of padding to apply, in device independent pixels.</span></span> <span data-ttu-id="a7c3b-268">既定では 0 (0.0) の均一の幅です。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-268">The default is a uniform thickness of zero (0.0).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c3b-269"><xref:System.Windows.Documents.ListItem.Padding%2A>は要素のコンテンツ領域の内側にあり、要素のコンテンツと要素の内側の境界の間にあるバッファー領域です。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-269"><xref:System.Windows.Documents.ListItem.Padding%2A> is buffer space that falls inside an element's content area, between the element's content and the inner edge of the element.</span></span>  <span data-ttu-id="a7c3b-270">と<xref:System.Windows.Documents.ListItem.Margin%2A>コントラスト。これは、要素のコンテンツ領域の外側にあるバッファー領域であり、要素のコンテンツ領域の端と親要素の端との間にあります。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-270">Contrast with <xref:System.Windows.Documents.ListItem.Margin%2A>, which is buffer space that falls outside an element's content area, between the edges of the element's content area and the edges of the parent element.</span></span>  
  
<a name="xamlAttributeUsage_Padding"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="a7c3b-271">XAML 属性の使用方法</span><span class="sxs-lookup"><span data-stu-id="a7c3b-271">XAML Attribute Usage</span></span>  
  
```  
<object Padding="uniformThickness"/>  
- or -  
<object Padding="independentThickness"/>  
- or -  
<object Padding="qualifiedUniformThickness"/>  
- or -  
<object Padding="qualifiedIndependentThickness"/>  
```  
  
<a name="xamlValues_Padding"></a>   
## <a name="xaml-values"></a><span data-ttu-id="a7c3b-272">XAML 値</span><span class="sxs-lookup"><span data-stu-id="a7c3b-272">XAML Values</span></span>  
 <span data-ttu-id="a7c3b-273">*uniformThickness*</span><span class="sxs-lookup"><span data-stu-id="a7c3b-273">*uniformThickness*</span></span>  
 <span data-ttu-id="a7c3b-274">4つのすべての<xref:System.Double>太さ寸法に一様に適用される単一値の文字列表現。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-274">String representation of a single <xref:System.Double> value to apply uniformly to all four thickness dimensions.</span></span>  <span data-ttu-id="a7c3b-275">たとえば、の`"10"`値は、の`"10,10,10,10"`値に相当します。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-275">For example, a value of `"10"` is equivalent to a value of `"10,10,10,10"`.</span></span>  <span data-ttu-id="a7c3b-276">非修飾値は、デバイス非依存のピクセル単位で測定されます。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-276">An unqualified value is measured in device independent pixels.</span></span> <span data-ttu-id="a7c3b-277">文字列には、小数点を明示的に含める必要があります。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-277">Strings need not explicitly include decimal points.</span></span>  
  
 <span data-ttu-id="a7c3b-278">*independentThickness*</span><span class="sxs-lookup"><span data-stu-id="a7c3b-278">*independentThickness*</span></span>  
 <span data-ttu-id="a7c3b-279">この順序で、左<xref:System.Double> 、上、右、下の独立した太さの寸法に対応する4つの順序付けられた値の文字列表現。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-279">String representation of four ordered <xref:System.Double> values corresponding to independent thickness dimensions for left, top, right, and bottom, in this order.</span></span>  <span data-ttu-id="a7c3b-280">4つの値はコンマで区切る必要があります。スペースは使用できません。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-280">The four values must be separated with commas; spaces are not allowed.</span></span>  <span data-ttu-id="a7c3b-281">たとえば、"5, 10, 15, 20" の場合、コンテンツの左側に5ピクセルの余白、コンテンツの上に10ピクセルの余白、コンテンツの右側に15ピクセルの余白、コンテンツの下に20ピクセルの余白があります。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-281">For example, "5,10,15,20" results in 5 pixels of padding to the left of content, 10 pixels of padding above content, 15 pixels of padding to the right of content, and 20 pixels of padding below the content.</span></span>  
  
 <span data-ttu-id="a7c3b-282">*qualifiedUniformThickness*</span><span class="sxs-lookup"><span data-stu-id="a7c3b-282">*qualifiedUniformThickness*</span></span>  
 <span data-ttu-id="a7c3b-283">*UniformThickness*によって記述される値。 `px`その後に、、 `in`のいずれかの単位指定子が続きます。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-283">A value described by *uniformThickness* followed by one of the following unit specifiers: `px`, `in`.</span></span>  
  
 <span data-ttu-id="a7c3b-284">`px`(既定) はです。[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span><span class="sxs-lookup"><span data-stu-id="a7c3b-284">`px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span></span>  
  
 <span data-ttu-id="a7c3b-285">`in` はインチ。1in==96px</span><span class="sxs-lookup"><span data-stu-id="a7c3b-285">`in` is inches; 1in==96px</span></span>  
  
 <span data-ttu-id="a7c3b-286">たとえば、で`"1in"`は、すべての方向に1インチの均一な余白が用意されています。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-286">For example, `"1in"` provides uniform padding of 1 inch in all directions.</span></span>  
  
 <span data-ttu-id="a7c3b-287">*qualifiedIndependentThickness*</span><span class="sxs-lookup"><span data-stu-id="a7c3b-287">*qualifiedIndependentThickness*</span></span>  
 <span data-ttu-id="a7c3b-288">*IndependentThickness*によって記述される値。 `px`それぞれの値に続けて、 `in`次のいずれかの単位指定子が続きます。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-288">A value described by *independentThickness*, with each independent value followed by one of the following unit specifiers: `px`, `in`.</span></span>  
  
 <span data-ttu-id="a7c3b-289">`px`(既定) はです。[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span><span class="sxs-lookup"><span data-stu-id="a7c3b-289">`px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span></span>  
  
 <span data-ttu-id="a7c3b-290">`in` はインチ。1in==96px</span><span class="sxs-lookup"><span data-stu-id="a7c3b-290">`in` is inches; 1in==96px</span></span>  
  
 <span data-ttu-id="a7c3b-291">たとえば、`"1.5in,0.8in,1.5in,0.8in"` のようにします。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-291">For example, `"1.5in,0.8in,1.5in,0.8in"`.</span></span>  <span data-ttu-id="a7c3b-292">単位指定子は、1つまたは複数の値から混在させることも、省略することもできます。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-292">Unit specifiers may be mixed or omitted from one or more values.</span></span>  
  
<a name="dependencyPropertyInfo_Padding"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="a7c3b-293">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="a7c3b-293">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a7c3b-294">識別子フィールド</span><span class="sxs-lookup"><span data-stu-id="a7c3b-294">Identifier field</span></span>|<xref:System.Windows.Documents.ListItem.PaddingProperty>|  
|<span data-ttu-id="a7c3b-295">メタデータプロパティがに設定される`true`</span><span class="sxs-lookup"><span data-stu-id="a7c3b-295">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="a7c3b-296">要素の属性 <xref:System.Windows.Documents.ListItem.Padding%2A> を設定する方法を次の例に示し<xref:System.Windows.Documents.Paragraph>ます ()。 <xref:System.Windows.Documents.Block></span><span class="sxs-lookup"><span data-stu-id="a7c3b-296">The following example shows how to set the <xref:System.Windows.Documents.ListItem.Padding%2A> attribute of a <xref:System.Windows.Documents.Block> element (<xref:System.Windows.Documents.Paragraph>).</span></span>  
  
 [!code-xaml[BlockSnippets#_Block_MarginPaddingXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml#_block_marginpaddingxaml)]  
  
 <span data-ttu-id="a7c3b-297">この例の表示結果を次の図に示します。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-297">The following figure shows how this example renders.</span></span>  <span data-ttu-id="a7c3b-298">図には、誇張された太さと色が使用されています。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-298">Exaggerated thicknesses and colors are used for illustration.</span></span>  
  
 <span data-ttu-id="a7c3b-299">![スクリーンショット: 埋め込みと余白がある段落](~/add/media/block-marginpadding.png "スクリーンショット: 埋め込みと余白がある段落")</span><span class="sxs-lookup"><span data-stu-id="a7c3b-299">![Screenshot: Paragraphs with padding and margins](~/add/media/block-marginpadding.png "Screenshot: Paragraphs with padding and margins")</span></span>  
  
 <span data-ttu-id="a7c3b-300">次の例では、プログラムを<xref:System.Windows.Documents.ListItem.Padding%2A>使用してプロパティを設定する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-300">The following example shows how to set the <xref:System.Windows.Documents.ListItem.Padding%2A> property programmatically.</span></span>  
  
 [!code-csharp[BlockSnippets#_Block_MarginPadding](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml.cs#_block_marginpadding)]
 [!code-vb[BlockSnippets#_Block_MarginPadding](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BlockSnippets/visualbasic/window1.xaml.vb#_block_marginpadding)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.ListItem.Margin" />
      </Docs>
    </Member>
    <Member MemberName="PaddingProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PaddingProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PaddingProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.ListItem.PaddingProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PaddingProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PaddingProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable PaddingProperty : System.Windows.DependencyProperty" Usage="System.Windows.Documents.ListItem.PaddingProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a7c3b-301"><see cref="P:System.Windows.Documents.ListItem.Padding" /> 依存関係プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-301">Identifies the <see cref="P:System.Windows.Documents.ListItem.Padding" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviousListItem">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.ListItem PreviousListItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.ListItem PreviousListItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.ListItem.PreviousListItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreviousListItem As ListItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::ListItem ^ PreviousListItem { System::Windows::Documents::ListItem ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PreviousListItem : System.Windows.Documents.ListItem" Usage="System.Windows.Documents.ListItem.PreviousListItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.ListItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a7c3b-302">含有する <see cref="T:System.Windows.Documents.ListItem" /> 内の前の <see cref="T:System.Windows.Documents.List" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-302">Gets the previous <see cref="T:System.Windows.Documents.ListItem" /> in the containing <see cref="T:System.Windows.Documents.List" />.</span></span></summary>
        <value><span data-ttu-id="a7c3b-303"><see cref="T:System.Windows.Documents.ListItem" /> 内の前の <see cref="T:System.Windows.Documents.List" />。前の <see cref="T:System.Windows.Documents.ListItem" /> がない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-303">The previous <see cref="T:System.Windows.Documents.ListItem" /> in the <see cref="T:System.Windows.Documents.List" />, or <see langword="null" /> if there is no previous <see cref="T:System.Windows.Documents.ListItem" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Documents.ListItem.NextListItem" />
        <altmember cref="P:System.Windows.Documents.ListItem.SiblingListItems" />
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeBlocks">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeBlocks (System.Windows.Markup.XamlDesignerSerializationManager manager);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeBlocks(class System.Windows.Markup.XamlDesignerSerializationManager manager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.ListItem.ShouldSerializeBlocks(System.Windows.Markup.XamlDesignerSerializationManager)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeBlocks (manager As XamlDesignerSerializationManager) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeBlocks(System::Windows::Markup::XamlDesignerSerializationManager ^ manager);" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeBlocks : System.Windows.Markup.XamlDesignerSerializationManager -&gt; bool" Usage="listItem.ShouldSerializeBlocks manager" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.Windows.Markup.XamlDesignerSerializationManager" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="a7c3b-304">このオブジェクトのシリアル化サービス マネージャー オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-304">A serialization service manager object for the object.</span></span></param>
        <summary><span data-ttu-id="a7c3b-305"><see cref="P:System.Windows.Documents.ListItem.Blocks" /> オブジェクトのシリアル化中に <see cref="T:System.Windows.Documents.ListItem" /> プロパティの有効値をシリアル化する必要があるかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-305">Returns a value that indicates whether the effective value of the <see cref="P:System.Windows.Documents.ListItem.Blocks" /> property should be serialized during serialization of the <see cref="T:System.Windows.Documents.ListItem" /> object.</span></span></summary>
        <returns><span data-ttu-id="a7c3b-306"><see cref="P:System.Windows.Documents.ListItem.Blocks" /> プロパティをシリアル化する必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-306"><see langword="true" /> if the <see cref="P:System.Windows.Documents.ListItem.Blocks" /> property should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NullReferenceException"><span data-ttu-id="a7c3b-307"><paramref name="manager" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-307"><paramref name="manager" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SiblingListItems">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.ListItemCollection SiblingListItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.ListItemCollection SiblingListItems" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.ListItem.SiblingListItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SiblingListItems As ListItemCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::ListItemCollection ^ SiblingListItems { System::Windows::Documents::ListItemCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SiblingListItems : System.Windows.Documents.ListItemCollection" Usage="System.Windows.Documents.ListItem.SiblingListItems" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.ListItemCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a7c3b-308">現在の <see cref="T:System.Windows.Documents.ListItemCollection" /> 要素の兄弟である <see cref="T:System.Windows.Documents.ListItem" /> 要素を格納する <see cref="T:System.Windows.Documents.ListItem" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-308">Gets a <see cref="T:System.Windows.Documents.ListItemCollection" /> that contains the <see cref="T:System.Windows.Documents.ListItem" /> elements that are siblings of the current <see cref="T:System.Windows.Documents.ListItem" /> element.</span></span></summary>
        <value><span data-ttu-id="a7c3b-309">現在の <see cref="T:System.Windows.Documents.ListItemCollection" /> 要素の親が直接ホストする子 <see cref="T:System.Windows.Documents.ListItem" /> 要素を格納する <see cref="T:System.Windows.Documents.ListItem" />。現在の <see cref="T:System.Windows.Documents.ListItem" /> 要素に親がない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-309">A <see cref="T:System.Windows.Documents.ListItemCollection" /> that contains the child <see cref="T:System.Windows.Documents.ListItem" /> elements that are directly hosted by the parent of the current <see cref="T:System.Windows.Documents.ListItem" /> element, or <see langword="null" /> if the current <see cref="T:System.Windows.Documents.ListItem" /> element has no parent.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c3b-310">この<xref:System.Windows.Documents.ListItemCollection>プロパティによって返される<xref:System.Windows.Documents.ListItem>には、コレクションへのアクセスに使用される要素が含まれます。つまり、このプロパティを所有する要素は、兄弟のコレクションを生成するために、独自の兄弟と見なされます。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-310">The <xref:System.Windows.Documents.ListItemCollection> returned by this property includes the <xref:System.Windows.Documents.ListItem> element through which the collection is accessed; that is, the element that owns this property is considered to be its own sibling for the purposes of generating the collection of siblings.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.ListItem.NextListItem" />
        <altmember cref="P:System.Windows.Documents.ListItem.PreviousListItem" />
      </Docs>
    </Member>
    <Member MemberName="TextAlignment">
      <MemberSignature Language="C#" Value="public System.Windows.TextAlignment TextAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.TextAlignment TextAlignment" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.ListItem.TextAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property TextAlignment As TextAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::TextAlignment TextAlignment { System::Windows::TextAlignment get(); void set(System::Windows::TextAlignment value); };" />
      <MemberSignature Language="F#" Value="member this.TextAlignment : System.Windows.TextAlignment with get, set" Usage="System.Windows.Documents.ListItem.TextAlignment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.TextAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a7c3b-311">テキスト コンテンツの水平方向の配置を示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-311">Gets or sets a value that indicates the horizontal alignment of text content.</span></span></summary>
        <value><span data-ttu-id="a7c3b-312">目的の配置を指定する、いずれかの <see cref="T:System.Windows.TextAlignment" /> 値。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-312">One of the <see cref="T:System.Windows.TextAlignment" /> values that specifies the desired alignment.</span></span> <span data-ttu-id="a7c3b-313">既定値は、<see cref="F:System.Windows.TextAlignment.Left" /> です。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-313">The default is <see cref="F:System.Windows.TextAlignment.Left" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_TextAlignment"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="a7c3b-314">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="a7c3b-314">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a7c3b-315">識別子フィールド</span><span class="sxs-lookup"><span data-stu-id="a7c3b-315">Identifier field</span></span>|<xref:System.Windows.Documents.ListItem.TextAlignmentProperty>|  
|<span data-ttu-id="a7c3b-316">メタデータプロパティがに設定される`true`</span><span class="sxs-lookup"><span data-stu-id="a7c3b-316">Metadata properties set to `true`</span></span>|<span data-ttu-id="a7c3b-317"><xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>、<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>、<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A></span><span class="sxs-lookup"><span data-stu-id="a7c3b-317"><xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A></span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="a7c3b-318">要素の属性 <xref:System.Windows.Documents.Block.TextAlignment%2A> を設定する方法を次の例に示します。 <xref:System.Windows.Documents.Block></span><span class="sxs-lookup"><span data-stu-id="a7c3b-318">The following example shows how to set the <xref:System.Windows.Documents.Block.TextAlignment%2A> attribute of a <xref:System.Windows.Documents.Block> element.</span></span>  
  
 [!code-xaml[BlockSnippets#_Block_TextAlignmentXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml#_block_textalignmentxaml)]  
  
 <span data-ttu-id="a7c3b-319">次の図は、前の例がテキスト<xref:System.Windows.TextAlignment.Left>の配置 (既定値) でどのようにレンダリングされるかを示しています。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-319">The following figure shows how the previous example renders with <xref:System.Windows.TextAlignment.Left> text alignment (the default).</span></span>  
  
 <span data-ttu-id="a7c3b-320">![スクリーンショット: Left の TextAlign プロパティ値](~/add/media/flowdoc-textalign-left.png "スクリーンショット: Left の TextAlign プロパティ値")</span><span class="sxs-lookup"><span data-stu-id="a7c3b-320">![Screenshot: TextAlign property value of Left](~/add/media/flowdoc-textalign-left.png "Screenshot: TextAlign property value of Left")</span></span>  
  
 <span data-ttu-id="a7c3b-321">次の図は、同じ例をテキストの<xref:System.Windows.TextAlignment.Right>配置でレンダリングする方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-321">The following figure shows how the same example renders with <xref:System.Windows.TextAlignment.Right> text alignment.</span></span>  
  
 <span data-ttu-id="a7c3b-322">![スクリーンショット: 右詰めの値](~/add/media/flowdoc-textalign-right.png "スクリーンショット: 右詰めの値")</span><span class="sxs-lookup"><span data-stu-id="a7c3b-322">![Screenshot: TextAlign value of Right](~/add/media/flowdoc-textalign-right.png "Screenshot: TextAlign value of Right")</span></span>  
  
 <span data-ttu-id="a7c3b-323">次の図は、同じ例をテキストの<xref:System.Windows.TextAlignment.Center>配置でレンダリングする方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-323">The following figure shows how the same example renders with <xref:System.Windows.TextAlignment.Center> text alignment.</span></span>  
  
 <span data-ttu-id="a7c3b-324">![スクリーンショット: 中央の TextAlign プロパティ値](~/add/media/flowdoc-textalign-center.png "スクリーンショット: 中央の TextAlign プロパティ値")</span><span class="sxs-lookup"><span data-stu-id="a7c3b-324">![Screenshot: TextAlign property value of Center](~/add/media/flowdoc-textalign-center.png "Screenshot: TextAlign property value of Center")</span></span>  
  
 <span data-ttu-id="a7c3b-325">次の例では、プログラムを<xref:System.Windows.Documents.ListItem.TextAlignment%2A>使用してプロパティを設定する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-325">The following example shows how to set the <xref:System.Windows.Documents.ListItem.TextAlignment%2A> property programmatically.</span></span>  
  
 [!code-csharp[BlockSnippets#_Block_TextAlignment](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml.cs#_block_textalignment)]
 [!code-vb[BlockSnippets#_Block_TextAlignment](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BlockSnippets/visualbasic/window1.xaml.vb#_block_textalignment)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextAlignmentProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TextAlignmentProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TextAlignmentProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.ListItem.TextAlignmentProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TextAlignmentProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TextAlignmentProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TextAlignmentProperty : System.Windows.DependencyProperty" Usage="System.Windows.Documents.ListItem.TextAlignmentProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a7c3b-326"><see cref="P:System.Windows.Documents.ListItem.TextAlignment" /> 依存関係プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="a7c3b-326">Identifies the <see cref="P:System.Windows.Documents.ListItem.TextAlignment" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
