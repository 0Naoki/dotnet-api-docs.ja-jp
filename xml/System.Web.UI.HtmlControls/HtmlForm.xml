<Type Name="HtmlForm" FullName="System.Web.UI.HtmlControls.HtmlForm">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="658c5386467d15a5ff84ded2d494eba1a3dbea52" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48588348" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class HtmlForm : System.Web.UI.HtmlControls.HtmlContainerControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HtmlForm extends System.Web.UI.HtmlControls.HtmlContainerControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.HtmlControls.HtmlForm" />
  <TypeSignature Language="VB.NET" Value="Public Class HtmlForm&#xA;Inherits HtmlContainerControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class HtmlForm : System::Web::UI::HtmlControls::HtmlContainerControl" />
  <TypeSignature Language="F#" Value="type HtmlForm = class&#xA;    inherit HtmlContainerControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.HtmlControls.HtmlContainerControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>サーバーの HTML <see langword="&lt;form&gt;" /> 要素へのプログラムによるアクセスを可能にします。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlForm>コントロールは、Web フォーム ページ上のサーバー コントロールのコンテナー。 開始タグと終了タグの間、サーバーにポストバックするすべてのサーバー コントロールを配置する必要があります、<xref:System.Web.UI.HtmlControls.HtmlForm>コントロール。  
  
> [!NOTE]
>  ASP.NET では、1 つだけ<xref:System.Web.UI.HtmlControls.HtmlForm>コントロールを Web フォーム ページ上でアクティブにします。 1 つ以上を使用する必要がある場合 active <xref:System.Web.UI.HtmlControls.HtmlForm> 、共通言語ランタイムを Web フォーム ページ上のコントロールがスローされます、<xref:System.Web.HttpException?displayProperty=nameWithType>例外ページを要求するとします。 ただし、使用することができます、<xref:System.Web.UI.WebControls.MultiView>場所を制御各<xref:System.Web.UI.WebControls.View>オブジェクトには、1 つ含まれる<xref:System.Web.UI.HtmlControls.HtmlForm>制御するため、1 つだけ<xref:System.Web.UI.WebControls.View>任意の時点でアクティブになって。  
  
 動作を制御することができます、<xref:System.Web.UI.HtmlControls.HtmlForm>コントロールのプロパティを設定します。 フォームのデータのエンコードの種類を指定するには、設定、<xref:System.Web.UI.HtmlControls.HtmlForm.Enctype%2A>プロパティ。 メソッド (`GET`または`POST`) を設定して処理が指定されたサーバーにフォーム データを投稿するブラウザーを使用する、<xref:System.Web.UI.HtmlControls.HtmlForm.Method%2A>プロパティ。  
  
> [!CAUTION]
>  既定では、<xref:System.Web.UI.HtmlControls.HtmlForm.Method%2A> プロパティは `POST` に設定されます。 このプロパティの値を変更することができます`GET`が、組み込みの状態を中断、ポストバックの ASP.NET ページ フレームワークによって提供されるサービスこの可能性があります。  
  
 実装するコントロールを構成することができます、<xref:System.Web.UI.WebControls.IButtonControl>別のターゲット ページに投稿するインターフェイス。 これは、ページ間ポスティングと呼ばれます。 詳細については、次を参照してください。 [ASP.NET Web フォームでのページ間ポスティング](http://msdn.microsoft.com/library/fedf234e-b7c4-4644-a9e8-c1c0870b043b)します。  
  
 インスタンスの初期プロパティ値の一覧については<xref:System.Web.UI.HtmlControls.HtmlForm>を参照してください、<xref:System.Web.UI.HtmlControls.HtmlForm.%23ctor%2A>コンス トラクター。  
  
   
  
## Examples  
 次のコード例は、使用する方法を示します、<xref:System.Web.UI.HtmlControls.HtmlForm>単純なフォームを作成するクラス。  
  
 [!code-aspx-csharp[HtmlForm#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm/CS/htmlformcs.aspx#1)]
 [!code-aspx-vb[HtmlForm#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm/VB/htmlformvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlContainerControl" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.Enctype" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.Method" />
    <related type="Article" href="http://msdn.microsoft.com/library/fedf234e-b7c4-4644-a9e8-c1c0870b043b">ページ間の ASP.NET Web ページに投稿</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlForm ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HtmlForm();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンス トラクターを使用して作成しの新しいインスタンスを初期化、<xref:System.Web.UI.HtmlControls.HtmlForm>クラス。  
  
 次の表には、インスタンスのプロパティの初期値が表示されます。<xref:System.Web.UI.HtmlControls.HtmlForm>します。  
  
|プロパティ|初期値|  
|--------------|-------------------|  
|<xref:System.Web.UI.HtmlControls.HtmlControl.TagName%2A>|「フォーム」リテラル文字列。|  
  
   
  
## Examples  
 次のコード例は、の新しいインスタンスを作成する方法を示します、<xref:System.Web.UI.HtmlControls.HtmlForm>制御し、Web ページ上に配置します。  
  
 [!code-aspx-csharp[HtmlFormCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlFormCtor/CS/htmlformctorcs.aspx#1)]
 [!code-aspx-vb[HtmlFormCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlFormCtor/VB/htmlformctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlControl.TagName" />
      </Docs>
    </Member>
    <Member MemberName="Action">
      <MemberSignature Language="C#" Value="public string Action { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Action" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.Action" />
      <MemberSignature Language="VB.NET" Value="Public Property Action As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Action { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Action : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlForm.Action" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>HTML フォームの action 属性を取得または設定します。</summary>
        <value>HTML フォームの action 属性。 既定値は <see cref="F:System.String.Empty" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用する、<xref:System.Web.UI.HtmlControls.HtmlForm.Action%2A>元の要求の URL の書き換えが HTML フォームの action 属性の元の URL を保持するプロパティ。 設定、<xref:System.Web.UI.HtmlControls.HtmlForm.Action%2A>プロパティを保持する URL の値にします。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpContext.RewritePath(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ClientID">
      <MemberSignature Language="C#" Value="public override string ClientID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClientID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.ClientID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ClientID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ClientID { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientID : string" Usage="System.Web.UI.HtmlControls.HtmlForm.ClientID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> コントロールに対して [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] によって生成されるコントロール ID を取得します。</summary>
        <value>によって生成されるコントロール id[!INCLUDE[vstecasp](~/includes/vstecasp-md.md)]の<see cref="T:System.Web.UI.HtmlControls.HtmlForm" />コントロール。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 防ぐために、コントロールの複数のインスタンスが表示されると、名前の競合[!INCLUDE[vstecasp](~/includes/vstecasp-md.md)]一意を自動的に生成<xref:System.Web.UI.HtmlControls.HtmlForm.ClientID%2A>ページ上の各コントロールの値。 詳細については、<xref:System.Web.UI.Control.ClientID%2A?displayProperty=nameWithType> プロパティを参照してください。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/45a8c3ef-5ac7-48f1-862a-0cd5073742e7">ASP.NET コントロールの識別</related>
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.CreateControlCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlCollection () As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::ControlCollection ^ CreateControlCollection();" />
      <MemberSignature Language="F#" Value="override this.CreateControlCollection : unit -&gt; System.Web.UI.ControlCollection" Usage="htmlForm.CreateControlCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.ControlCollection" /> コントロールの新しい <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> コレクションを作成します。</summary>
        <returns>
          <see cref="T:System.Web.UI.ControlCollection" /> コントロールの子サーバー コントロールを格納する <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.ControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="DefaultButton">
      <MemberSignature Language="C#" Value="public string DefaultButton { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultButton" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.DefaultButton" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultButton As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DefaultButton { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultButton : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlForm.DefaultButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Enter キーを押したときにポストバックの原因となる <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> コントロールの子コントロールを取得または設定します。</summary>
        <value>
          <see cref="P:System.Web.UI.Control.ID" /> が読み込まれたときに既定のボタンとして表示されるボタン コントロールの <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />。 既定値は、空の文字列 ("") です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A>プロパティを使用して、ユーザーのユーザーがポストバックがテキスト ボックス) (フォームの入力コントロールで ENTER キーを押すことを指定できます。 派生したコントロールの既定のボタンとして指定できます、<xref:System.Web.UI.WebControls.IButtonControl>インターフェイスを除く、<xref:System.Web.UI.WebControls.LinkButton>コントロール。 場合によって参照されるコントロール、<xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A>プロパティがから派生していない<xref:System.Web.UI.WebControls.IButtonControl>、<xref:System.InvalidOperationException>例外がスローされます。  
  
 マスター ページを使用して設定すると、<xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A>プロパティを使用して、コンテンツ ページから、<xref:System.Web.UI.Control.UniqueID%2A>のプロパティ、<xref:System.Web.UI.WebControls.IButtonControl>ボタンをクリックします。 マスター ページの詳細については、次を参照してください。 [ASP.NET マスター ページ](http://msdn.microsoft.com/library/4e53eedf-8304-4e7a-aed1-691a2623b28b)します。  
  
 <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A>プロパティには、次のシナリオでのポストバックは発生可能性があります。  
  
-   フォームの入力コントロールの外部にフォーカスがある場合、ENTER キーを押します。 既定のポストバック アクションがトリガーされるように保証されません。  
  
-   複数行テキスト ボックス内でフォーカスがある場合、ENTER キーを押します。 複数行テキスト ボックスでは、想定される動作は、ENTER キーを押すことで、テキスト ボックスに新しい行が作成されます。 一部のブラウザーで ENTER キーを押して複数行テキスト ボックスのトリガー内でポストバックします。 その場合は、代わりに新しい行を作成する」と入力する場合は、入力コントロールに JavaScript 関数をアタッチできます。 このスクリプトは、ENTER キーをキャプチャし、ポストバックを停止する必要があります。 たとえば、使用することができます、<xref:System.Web.UI.WebControls.WebControl.Attributes%2A>用のクライアント スクリプトを追加するプロパティのコレクション、`onKeyPress`イベント。  
  
-   指定する、<xref:System.Web.UI.WebControls.LinkButton>として既定のボタン コントロール。 のみ<xref:System.Web.UI.WebControls.Button>と<xref:System.Web.UI.WebControls.ImageButton>コントロールがサポートされています。  
  
-   変更、<xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A>非同期ポストバック中にプログラムでのプロパティ。 非同期ポストバックは、1 つまたは複数追加することで、ページで有効にする<xref:System.Web.UI.UpdatePanel>ページにコントロール。 詳細については、次を参照してください。 [UpdatePanel コントロールの概要](http://msdn.microsoft.com/library/29a2265d-9674-4c19-b70e-e5560ee9689a)と[部分ページ レンダリングの概要](http://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49)します。  
  
   
  
## Examples  
 次の例は、設定する方法を示します、<xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A>ポストバックが発生する既定のコントロールを設定するプロパティ。  
  
 [!code-aspx-csharp[HtmlForm.DefaultButton#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm.DefaultButton/CS/htmlform.defaultbuttoncs.aspx#1)]
 [!code-aspx-vb[HtmlForm.DefaultButton#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm.DefaultButton/VB/htmlform.defaultbuttonvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">既定のボタンとして参照されるコントロールの型は <see cref="T:System.Web.UI.WebControls.IButtonControl" /> ではありません。</exception>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus" />
        <altmember cref="P:System.Web.UI.Control.ID" />
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="T:System.Web.UI.WebControls.IButtonControl" />
        <related type="Article" href="http://msdn.microsoft.com/library/4e53eedf-8304-4e7a-aed1-691a2623b28b">ASP.NET マスター ページの概要</related>
      </Docs>
    </Member>
    <Member MemberName="DefaultFocus">
      <MemberSignature Language="C#" Value="public string DefaultFocus { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultFocus" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultFocus As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DefaultFocus { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultFocus : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlForm.DefaultFocus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> コントロールが読み込まれたときに入力フォーカスのあるコントロールとして表示するフォーム上のコントロールを取得または設定します。</summary>
        <value>
          <see cref="P:System.Web.UI.Control.ClientID" /> が読み込まれたときに入力フォーカスのあるコントロールとして表示するフォーム上のコントロールの <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />。 既定値は、空の文字列 ("") です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus%2A>入力コントロールとして表示するフォームのコントロールにアクセスするプロパティ フォーカス、<xref:System.Web.UI.HtmlControls.HtmlForm>コントロールが読み込まれます。 選択できるコントロールにフォーカスがあることを示す視覚的な合図が表示されます。 たとえば、<xref:System.Web.UI.WebControls.TextBox>その内部に配置されているカーソルのフォーカスを持つコントロールが表示されます。  
  
 使用してフォーカスを持つコントロールを設定することも、<xref:System.Web.UI.Control.Focus%2A>または<xref:System.Web.UI.Page.SetFocus%2A>メソッド。 これらのメソッドでは、優先順位を持ちます経由で、<xref:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus%2A>プロパティ。 コントロールを設定するこれらのメソッドのいずれかが呼び出された場合の集中の値、<xref:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus%2A>プロパティは無視されます。  
  
   
  
## Examples  
 次のコード例は、設定する方法を示します、<xref:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus%2A>フォームの読み込み時に入力フォーカスを持つコントロールとしてフォーム上の指定したコントロールを表示するプロパティ。 ときに`Form1`のレンダリングでカーソルが配置されていることに注意してください。`TextBox1`ことを示すを`TextBox1`がフォーカスを持つコントロール。  
  
 [!code-aspx-csharp[HtmlForm.DefaultButton#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm.DefaultButton/CS/htmlform.defaultbuttoncs.aspx#1)]
 [!code-aspx-vb[HtmlForm.DefaultButton#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm.DefaultButton/VB/htmlform.defaultbuttonvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.DefaultButton" />
        <altmember cref="P:System.Web.UI.Control.ID" />
        <altmember cref="M:System.Web.UI.Control.Focus" />
        <altmember cref="M:System.Web.UI.Page.SetFocus(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="Enctype">
      <MemberSignature Language="C#" Value="public string Enctype { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Enctype" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.Enctype" />
      <MemberSignature Language="VB.NET" Value="Public Property Enctype As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Enctype { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Enctype : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlForm.Enctype" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>フォーム データをサーバーにポストバックするときにブラウザーが使用するエンコードの種類を取得または設定します。</summary>
        <value>エンコードの種類を指定する文字列。 既定値は空の文字列 ("") です。ブラウザーの既定のコンテンツの種類が使用されていることを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.HtmlControls.HtmlForm.Enctype%2A>エンコード、ブラウザーの種類を指定するには、サーバーにデータがポストバックを使用しています。  
  
 次の表では、一般的なエンコードの種類を示します。  
  
|エンコードの種類|説明|  
|-------------------|-----------------|  
|application/x-www-form-urlencoded|フォーム データは、名前/値ペアとしてエンコードされます。 これは、標準のエンコード形式です。|  
|マルチパート/フォーム データ|フォーム データは、ページ上の各コントロールの別の部分のメッセージとしてエンコードされます。|  
|テキスト/プレーン|フォーム データは、コントロールまたは書式指定文字が含まれないテキスト形式でエンコードされます。|  
  
 エンコードの種類の詳細については、次を参照してください。、 [World Wide Web Consortium (W3C の Web サイト](http://go.microsoft.com/fwlink/?linkid=37125)します。  
  
   
  
## Examples  
 次のコード例は、使用する方法を示します、<xref:System.Web.UI.HtmlControls.HtmlForm.Enctype%2A>データをサーバーに送信する、エンコード、ブラウザーの種類を指定するプロパティを使用します。  
  
 [!code-aspx-csharp[HtmlForm#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm/CS/htmlformcs.aspx#1)]
 [!code-aspx-vb[HtmlForm#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm/VB/htmlformvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.Method" />
      </Docs>
    </Member>
    <Member MemberName="Method">
      <MemberSignature Language="C#" Value="public string Method { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Method" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.Method" />
      <MemberSignature Language="VB.NET" Value="Public Property Method As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Method { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Method : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlForm.Method" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ブラウザーが処理サーバーにフォーム データをポストバックする方法を示す値を取得または設定します。</summary>
        <value>ブラウザーがフォーム データをサーバーにポストバックする方法を指定する文字列。 既定値は <see langword="POST" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを使用すると、ブラウザーがフォーム データを処理するため、サーバーに送信する方法を指定できます。 すべてのブラウザーでサポートされている 2 つの一般的なメソッドは`GET`と`POST`します。  
  
> [!CAUTION]
>  このプロパティと使用の既定値を上書きすることができます、`GET`メソッドの代わりに`POST`します。 ただし、ため`GET`要求は制限されます。 データ量に含めることができます、を使用して、`GET`メソッドが場合によっては、原因で失敗する、ASP.NET ページ フレームワークによって提供されるポストバックおよび状態管理機能。  
  
   
  
## Examples  
 次のコード例は、使用する方法を示します、<xref:System.Web.UI.HtmlControls.HtmlForm.Method%2A>フォーム データがサーバーにポストバックされたことを指定するプロパティ。  
  
 [!code-aspx-csharp[HtmlForm#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm/CS/htmlformcs.aspx#1)]
 [!code-aspx-vb[HtmlForm#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm/VB/htmlformvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.Enctype" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlForm.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> コントロールの識別名を取得します。</summary>
        <value>
          <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> の識別名を示す文字列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.HtmlControls.HtmlForm.Name%2A>の一意識別子の名前を決定するプロパティ、<xref:System.Web.UI.HtmlControls.HtmlForm>コントロール。 この実装でこのプロパティの取得の値を返します、<xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A>プロパティ。 ただし、プロパティの設定は割り当てません値プロパティにします。 プロパティを設定は、値プロパティに代入しないこのため、<xref:System.Web.UI.HtmlControls.HtmlForm.Name%2A>プロパティと同じ値には、<xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A>プロパティ。  
  
> [!NOTE]
>  `name`属性は、XHTML 準拠の属性ではないに関係なく、ASP.NET によってはレンダリングされません、`xhtmlConformance`設定します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.UniqueID" />
        <related type="Article" href="http://msdn.microsoft.com/library/1b78d416-66bb-43a5-ac77-c703aab55b97">ASP.NET および XHTML 準拠</related>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="htmlForm.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> コントロールの <see cref="E:System.Web.UI.Control.Init" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 によって通知されると、<xref:System.Web.UI.HtmlControls.HtmlForm.OnInit%2A>メソッド、Web サーバー コントロールがインスタンスを作成および設定するために必要な初期化の手順を実行する必要があります。 サーバー コントロールのライフ サイクルのこの段階で、コントロールのビューステートを設定する必要があります。 さらに、このコントロールに親または子であるかどうかにかかわらず、このメソッドが呼び出されたときにその他のサーバー コントロールにアクセスすることはできません。 他のサーバー コントロールが作成され、アクセスできる状態にする保証はありません。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Web.UI.WebControls.GridView.OnInit%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 <xref:System.Web.UI.HtmlControls.HtmlForm.OnInit%2A>メソッドの機能を拡張するコントロールの開発者によって主に使用されます、<xref:System.Web.UI.HtmlControls.HtmlForm>コントロール。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>オーバーライドする場合、<see cref="M:System.Web.UI.HtmlControls.HtmlForm.OnInit(System.EventArgs)" />を呼び出す基本クラスの派生クラスでメソッドが必ず<see cref="M:System.Web.UI.HtmlControls.HtmlForm.OnInit(System.EventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。 さらに、基本クラスを呼び出す<see cref="M:System.Web.UI.HtmlControls.HtmlForm.OnInit(System.EventArgs)" />メソッドにより、<see cref="T:System.Web.UI.HtmlControls.HtmlForm" />コントロールは、Web ページの形式が正しく設定して、ページのビューステートを保存します。</para>
        </block>
        <altmember cref="M:System.Web.UI.Page.RegisterViewStateHandler" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="htmlForm.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> コントロールの <see cref="E:System.Web.UI.Control.PreRender" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlForm.OnPreRender%2A>だけ表示する前にメソッドが呼び出される、<xref:System.Web.UI.HtmlControls.HtmlForm>コントロール。 場合、<xref:System.Web.UI.Page.SmartNavigation%2A?displayProperty=nameWithType>プロパティに設定されて`true`、<xref:System.Web.UI.HtmlControls.HtmlForm.OnPreRender%2A>メソッドは、表示、取得できるように、スマート ナビゲーション スクリプト ファイルの参照を登録します。  
  
> [!NOTE]
>  <xref:System.Web.UI.Page.SmartNavigation%2A?displayProperty=nameWithType> ASP.NET version 2.0 でプロパティが非推奨とされました。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Page.SmartNavigation" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (output As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ output);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="htmlForm.Render output" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="output">表示されたコンテンツを受け取る <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>指定した <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> オブジェクトに、<see cref="T:System.Web.UI.HtmlTextWriter" /> コントロールをレンダリングします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlForm.Render%2A>メソッドは、HTML をレンダリング`<iframe>`要素場合、<xref:System.Web.UI.Page.SmartNavigation%2A>プロパティに設定されて`true`します。 <xref:System.Web.UI.HtmlControls.HtmlForm.Render%2A>メソッドは、ベース<xref:System.Web.UI.Control.Render%2A>メソッド。  
  
 <xref:System.Web.UI.HtmlControls.HtmlForm.Render%2A>メソッドの機能を拡張するコントロールの開発者によって主に使用されます、<xref:System.Web.UI.HtmlControls.HtmlForm>コントロール。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> コントロールは、<see cref="T:System.Web.UI.Page" /> インスタンスへの参照がないと表示されません。</exception>
        <block subset="none" type="overrides">
          <para>オーバーライドする場合、<see cref="M:System.Web.UI.HtmlControls.HtmlForm.Render(System.Web.UI.HtmlTextWriter)" />を呼び出す基本クラスの派生クラスでメソッドが必ず<see cref="M:System.Web.UI.HtmlControls.HtmlForm.Render(System.Web.UI.HtmlTextWriter)" />メソッドように、<see cref="T:System.Web.UI.HtmlControls.HtmlForm" />コントロールの子コントロールが正しくレンダリングされます。</para>
        </block>
        <altmember cref="T:System.Web.HttpException" />
        <altmember cref="P:System.Web.UI.Page.SmartNavigation" />
        <altmember cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderAttributes">
      <MemberSignature Language="C#" Value="protected override void RenderAttributes (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderAttributes(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderAttributes (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderAttributes(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderAttributes : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="htmlForm.RenderAttributes writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">表示されたコンテンツを受け取る <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>
          <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> コントロールの属性を指定した <see cref="T:System.Web.UI.HtmlTextWriter" /> オブジェクトにレンダリングします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes%2A>メソッドは、<xref:System.Web.UI.HtmlTextWriter.IsValidFormAttribute%2A>を確認する方法、<xref:System.Web.UI.HtmlControls.HtmlForm>の開始タグで、表示できることを確認するコントロールの属性を`<form>`HTML 要素。  
  
 さらに、<xref:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes%2A>メソッド レンダリング、 `method`、 `action`、および`onsubmit`の属性、<xref:System.Web.UI.HtmlControls.HtmlForm>コントロール。 コントロールの ID を設定する場合、<xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A>プロパティを実装しません、 <xref:System.Web.UI.WebControls.IButtonControl> 、インターフェイス、<xref:System.InvalidOperationException>例外がスローされます。  
  
 <xref:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes%2A>メソッドの機能を拡張するコントロールの開発者によって主に使用されます、<xref:System.Web.UI.HtmlControls.HtmlForm>コントロール。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Web.UI.HtmlControls.HtmlForm.DefaultButton" /> プロパティに設定されたコントロール ID の型は <see cref="T:System.Web.UI.WebControls.IButtonControl" /> ではありません。</exception>
        <block subset="none" type="overrides">
          <para>オーバーライドする場合、<see cref="M:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes(System.Web.UI.HtmlTextWriter)" />を呼び出す基本クラスの派生クラスでメソッドが必ず<see cref="M:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes(System.Web.UI.HtmlTextWriter)" />メソッドように、<see cref="T:System.Web.UI.HtmlControls.HtmlForm" />コントロールの属性が正しくレンダリングされます。</para>
        </block>
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlControl.RenderAttributes(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.DefaultButton" />
        <altmember cref="T:System.Web.UI.WebControls.IButtonControl" />
        <altmember cref="T:System.InvalidOperationException" />
      </Docs>
    </Member>
    <Member MemberName="RenderChildren">
      <MemberSignature Language="C#" Value="protected internal override void RenderChildren (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderChildren(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.RenderChildren(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderChildren (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderChildren(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderChildren : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="htmlForm.RenderChildren writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">表示されたコンテンツを受け取る <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>
          <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> コントロールの子コントロールを表示します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlForm.RenderChildren%2A>メソッドで指定したコントロールにブラウザーのフォーカスが設定されていることを確認するクライアント スクリプトの表示、<xref:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus%2A>プロパティ。  
  
> [!NOTE]
>  指定されたコントロール、<xref:System.Web.UI.Page.SetFocus%2A?displayProperty=nameWithType>プロパティで指定されたコントロールよりも優先、<xref:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus%2A>プロパティ。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Web ページにはサーバー側の <see langword="&lt;form&gt;" /> タグが複数あります。</exception>
        <block subset="none" type="overrides">
          <para>オーバーライドする場合、<see cref="M:System.Web.UI.HtmlControls.HtmlForm.RenderChildren(System.Web.UI.HtmlTextWriter)" />を呼び出す基本クラスの派生クラスでメソッドが必ず<see cref="M:System.Web.UI.HtmlControls.HtmlForm.RenderChildren(System.Web.UI.HtmlTextWriter)" />メソッドように、<see cref="T:System.Web.UI.HtmlControls.HtmlForm" />コントロールの子コントロールが正しくレンダリングされます。</para>
        </block>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus" />
        <altmember cref="M:System.Web.UI.Page.SetFocus(System.Web.UI.Control)" />
        <altmember cref="M:System.Web.UI.Control.Focus" />
      </Docs>
    </Member>
    <Member MemberName="RenderControl">
      <MemberSignature Language="C#" Value="public override void RenderControl (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RenderControl(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.RenderControl(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RenderControl (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RenderControl(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderControl : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="htmlForm.RenderControl writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">フォーム コントロールの内容を受け取る <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>指定した <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> オブジェクトに、<see cref="T:System.Web.UI.HtmlTextWriter" /> コントロールをレンダリングします。</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>オーバーライドする場合、<see cref="M:System.Web.UI.HtmlControls.HtmlForm.RenderControl(System.Web.UI.HtmlTextWriter)" />を呼び出す基本クラスの派生クラスでメソッドが必ず<see cref="M:System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)" />メソッドように、<see cref="T:System.Web.UI.HtmlControls.HtmlForm" />コントロールが正しく表示されます。</para>
        </block>
        <altmember cref="P:System.Web.UI.Control.DesignMode" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="SubmitDisabledControls">
      <MemberSignature Language="C#" Value="public virtual bool SubmitDisabledControls { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SubmitDisabledControls" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SubmitDisabledControls As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SubmitDisabledControls { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SubmitDisabledControls : bool with get, set" Usage="System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>クライアント側で無効なコントロールにその値を強制的に送信させるかどうかを示すブール値を取得または設定します。これにより、ページがサーバーにポストバックされた後にコントロールがその値を保持できます。</summary>
        <value>クライアント側で無効になっているコントロールにその値を強制的に送信させる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls%2A>プロパティを強制的にコントロールをページがポストバックするときに、その値を送信するクライアントで無効にするかどうかを指定します。 これにより、ページがサーバーにポストバック後に、その値を保持するために無効になっているコントロール。 ときに、<xref:System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls%2A>プロパティに設定されて`false`フォーム上のクライアント スクリプトを使用して無効になっているコントロールは送信できません、サーバーに、次回、ページがポストバックします。 その結果、無効になっているコントロールで格納されている任意の値は失われます。 ページがサーバーにポストバック後に、その値を保持するために無効になっているコントロールを許可するのには、設定、<xref:System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls%2A>プロパティを`true`します。  
  
   
  
## Examples  
 次のコード例は、設定する方法を示します、<xref:System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls%2A>プロパティをフォームに`true`コントロール、ページがサーバーにポストバック後にその値を維持するためにクライアント スクリプトでは無効にします。 設定した場合、この例では、<xref:System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls%2A>プロパティを`false` をクリックし、**がポスト バック** ボタンを選択して、HTML テキスト ボックス内のテキストが失われ、HTML チェック ボックスが選択されなくします。  
  
 [!code-aspx-csharp[HtmlForm.SubmitDisabledControls#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm.SubmitDisabledControls/CS/htmlform.submitdisabledcontrolscs.aspx#1)]
 [!code-aspx-vb[HtmlForm.SubmitDisabledControls#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm.SubmitDisabledControls/VB/htmlform.submitdisabledcontrolsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public string Target { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Target" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.Target" />
      <MemberSignature Language="VB.NET" Value="Public Property Target As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Target { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Target : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlForm.Target" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>サーバーにポストバックされた情報の結果を表示するフレームまたはウィンドウを取得または設定します。</summary>
        <value>サーバーにポストバックされた情報の結果を表示するブラウザーのウィンドウまたはフレーム。 既定値は空の文字列 ("") です。フォーカスのあるウィンドウまたはフレームが更新されます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.HtmlControls.HtmlForm.Target%2A>プロパティを指定のターゲット ウィンドウまたはフレームをサーバーにポストバックされた情報の結果を表示します。 サーバーにポストバックされた情報の結果のリダイレクトは、高度なタスクです。 ポスト バックするには、単にこのプロパティを使用することは推奨されません。  
  
> [!NOTE]
>  <xref:System.Web.UI.HtmlControls.HtmlForm.Target%2A>としてプロパティが表示されます、`target`属性。 `target`属性`form`要素は、XHTML 1.1 では許可されません。 そのため、出力されるマークアップは、XHTML 標準に準拠する必要がありますまたは、ユーザー補助の標準に準拠している必要があります、設定しないでください、<xref:System.Web.UI.HtmlControls.HtmlForm.Target%2A>プロパティ。 詳細については、次を参照してください。 [XHTML 標準では、Visual Studio および ASP.NET](http://msdn.microsoft.com/library/1b78d416-66bb-43a5-ac77-c703aab55b97)と[Visual Studio および ASP.NET のユーザー補助機能](http://msdn.microsoft.com/library/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13)します。  
  
 <xref:System.Web.UI.HtmlControls.HtmlForm.Target%2A>値は、範囲の A ~ Z (大文字)、次の特殊な値を除き、アンダー スコアで始まるの文字で始まる必要があります。  
  
|対象の値|説明|  
|------------------|-----------------|  
|`_blank`|フレームなしの新しいウィンドウに内容を表示します。|  
|`_parent`|直前のフレームセットの親に内容を表示します。|  
|`_search`|検索ペインに内容を表示します。|  
|`_self`|フォーカスのあるフレームに内容を表示します。|  
|`_top`|最大化されたフレームなしのウィンドウに内容を表示します。|  
  
> [!NOTE]
>  ブラウザーのドキュメントを参照して、`_search` 値がサポートされているかどうか確認してください。  たとえば、Microsoft Internet Explorer 5.0 以降では `_search` ターゲット値がサポートされています。  
  
   
  
## Examples  
 次のコード例は、使用する方法を示します、<xref:System.Web.UI.HtmlControls.HtmlForm.Target%2A>サーバーにポストバックされた情報の結果を表示する新しいフレームなしのウィンドウを指定するプロパティ。  
  
 [!code-aspx-csharp[HtmlFormTarget#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlFormTarget/CS/htmlformtargetcs.aspx#1)]
 [!code-aspx-vb[HtmlFormTarget#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlFormTarget/VB/htmlformtargetvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/1b78d416-66bb-43a5-ac77-c703aab55b97">ASP.NET および XHTML 準拠</related>
        <related type="Article" href="http://msdn.microsoft.com/library/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13">Visual Studio 2010 および ASP.NET 4 のユーザー補助機能</related>
      </Docs>
    </Member>
    <Member MemberName="UniqueID">
      <MemberSignature Language="C#" Value="public override string UniqueID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UniqueID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.UniqueID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property UniqueID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ UniqueID { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UniqueID : string" Usage="System.Web.UI.HtmlControls.HtmlForm.UniqueID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> コントロールに割り当てられた一意のプログラム ID を取得します。</summary>
        <value>
          <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> コントロールに割り当てられた一意のプログラム ID。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A>に割り当てられている一意なプログラム識別子を取得するプロパティ、<xref:System.Web.UI.HtmlControls.HtmlForm>コントロール。 このプロパティのオーバーライドは基本実装にコントロールが含まれているときに、定数値を返す、 <xref:System.Web.UI.INamingContainer>-カスタム サーバー コントロールなどのページ以外のオブジェクトを実装します。 ページで、値のかどうか、名前付けコンテナーには、<xref:System.Web.UI.HtmlControls.HtmlForm>コントロールの<xref:System.Web.UI.Control.ID%2A>プロパティが返されます。  
  
 <xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A>プロパティおよび<xref:System.Web.UI.HtmlControls.HtmlForm.Name%2A>プロパティは常に同じ値を返します。 これは、ときに便利です、<xref:System.Web.UI.HtmlControls.HtmlForm>コントロールが必要とするブラウザーに表示される、<xref:System.Web.UI.HtmlControls.HtmlForm>コントロールの<xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A>と<xref:System.Web.UI.HtmlControls.HtmlForm.Name%2A>同じにするプロパティ。 同期すると、これらのプロパティを保持する、<xref:System.Web.UI.HtmlControls.HtmlForm.Name%2A>プロパティは常の値を返します、<xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A>プロパティ。  
  
> [!NOTE]
>  `name`属性は、XHTML 準拠の属性ではないと、既定では、ASP.NET によって表示されません。  
  
   
  
## Examples  
 次のコード例は、使用する方法を示します、<xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A>の一意の識別子を取得するプロパティ、<xref:System.Web.UI.HtmlControls.HtmlForm>コントロール。  
  
 [!code-aspx-csharp[HtmlForm.UniqueID#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm.UniqueID/CS/htmlform.uniqueidcs.aspx#1)]
 [!code-aspx-vb[HtmlForm.UniqueID#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm.UniqueID/VB/htmlform.uniqueidvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.Name" />
        <related type="Article" href="http://msdn.microsoft.com/library/1b78d416-66bb-43a5-ac77-c703aab55b97">ASP.NET および XHTML 準拠</related>
      </Docs>
    </Member>
  </Members>
</Type>