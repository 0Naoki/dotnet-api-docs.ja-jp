<Type Name="HtmlForm" FullName="System.Web.UI.HtmlControls.HtmlForm">
  <Metadata><Meta Name="ms.openlocfilehash" Value="dd1c7a21e8d552f971b992a4273e6034ed920c40" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69043231" /></Metadata><TypeSignature Language="C#" Value="public class HtmlForm : System.Web.UI.HtmlControls.HtmlContainerControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HtmlForm extends System.Web.UI.HtmlControls.HtmlContainerControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.HtmlControls.HtmlForm" />
  <TypeSignature Language="VB.NET" Value="Public Class HtmlForm&#xA;Inherits HtmlContainerControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class HtmlForm : System::Web::UI::HtmlControls::HtmlContainerControl" />
  <TypeSignature Language="F#" Value="type HtmlForm = class&#xA;    inherit HtmlContainerControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.HtmlControls.HtmlContainerControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>サーバーの HTML <see langword="&lt;form&gt;" /> 要素へのプログラムによるアクセスを可能にします。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlForm>コントロールは、Web フォームページ上のサーバーコントロールのコンテナーです。 サーバーにポストバックするすべてのサーバーコントロールは、 <xref:System.Web.UI.HtmlControls.HtmlForm>コントロールの開始タグと終了タグの間に配置する必要があります。  
  
> [!NOTE]
>  ASP.NET では、Web <xref:System.Web.UI.HtmlControls.HtmlForm>フォームページでアクティブにできるコントロールは1つだけです。 Web フォームページに複数のアクティブ<xref:System.Web.UI.HtmlControls.HtmlForm>なコントロールがある場合、ページを要求すると、共通言語<xref:System.Web.HttpException?displayProperty=nameWithType>ランタイムによって例外がスローされます。 ただし<xref:System.Web.UI.WebControls.MultiView> 、各<xref:System.Web.UI.WebControls.View>オブジェクトに 1 <xref:System.Web.UI.HtmlControls.HtmlForm>つのコントロールが含まれるコントロールを使用することも<xref:System.Web.UI.WebControls.View>できます。これは、特定の時点でアクティブになるのは1つだけであるためです。  
  
 <xref:System.Web.UI.HtmlControls.HtmlForm>コントロールのプロパティを設定することによって、コントロールの動作を制御できます。 フォームのデータのエンコードの種類を指定するには、 <xref:System.Web.UI.HtmlControls.HtmlForm.Enctype%2A>プロパティを設定します。 ブラウザーが処理`GET`の`POST`ためにフォームデータをサーバーにポストするために使用するメソッド (または) <xref:System.Web.UI.HtmlControls.HtmlForm.Method%2A>は、プロパティを設定することによって指定されます。  
  
> [!CAUTION]
>  既定では、<xref:System.Web.UI.HtmlControls.HtmlForm.Method%2A> プロパティは `POST` に設定されます。 このプロパティの値をに変更できます`GET`が、これにより、ASP.NET ページフレームワークによって提供される組み込みの状態およびポストバックサービスが壊れる可能性があります。  
  
 別のターゲットページにポストする<xref:System.Web.UI.WebControls.IButtonControl>ために、インターフェイスを実装するコントロールを構成できます。 これは、ページ間のポストと呼ばれます。 詳細については、「 [ASP.NET Web Forms でのページ間の投稿](https://msdn.microsoft.com/library/fedf234e-b7c4-4644-a9e8-c1c0870b043b)」を参照してください。  
  
 の<xref:System.Web.UI.HtmlControls.HtmlForm>インスタンスの初期プロパティ値の一覧につい<xref:System.Web.UI.HtmlControls.HtmlForm.%23ctor%2A>ては、コンストラクターを参照してください。  
  
   
  
## Examples  
 クラスを使用して<xref:System.Web.UI.HtmlControls.HtmlForm>単純なフォームを作成する方法を次のコード例に示します。  
  
 [!code-aspx-csharp[HtmlForm#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm/CS/htmlformcs.aspx#1)]
 [!code-aspx-vb[HtmlForm#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm/VB/htmlformvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlContainerControl" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.Enctype" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.Method" />
    <related type="Article" href="https://msdn.microsoft.com/library/fedf234e-b7c4-4644-a9e8-c1c0870b043b">ASP.NET Web ページでのページ間ポスティング</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlForm ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HtmlForm();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンストラクターを使用して、 <xref:System.Web.UI.HtmlControls.HtmlForm>クラスの新しいインスタンスを作成し、初期化します。  
  
 次の表は、の<xref:System.Web.UI.HtmlControls.HtmlForm>インスタンスの初期プロパティ値を示しています。  
  
|プロパティ|初期値|  
|--------------|-------------------|  
|<xref:System.Web.UI.HtmlControls.HtmlControl.TagName%2A>|"Form" リテラル文字列。|  
  
   
  
## Examples  
 次のコード例は、 <xref:System.Web.UI.HtmlControls.HtmlForm>コントロールの新しいインスタンスを作成し、Web ページに配置する方法を示しています。  
  
 [!code-aspx-csharp[HtmlFormCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlFormCtor/CS/htmlformctorcs.aspx#1)]
 [!code-aspx-vb[HtmlFormCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlFormCtor/VB/htmlformctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlControl.TagName" />
      </Docs>
    </Member>
    <Member MemberName="Action">
      <MemberSignature Language="C#" Value="public string Action { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Action" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.Action" />
      <MemberSignature Language="VB.NET" Value="Public Property Action As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Action { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Action : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlForm.Action" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>HTML フォームの action 属性を取得または設定します。</summary>
        <value>HTML フォームの action 属性。 既定値は <see cref="F:System.String.Empty" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 元の要求<xref:System.Web.UI.HtmlControls.HtmlForm.Action%2A>の url を書き換えて、HTML フォームの action 属性の元の url を保持する場合は、プロパティを使用します。 <xref:System.Web.UI.HtmlControls.HtmlForm.Action%2A>プロパティに、保持する URL の値を設定します。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpContext.RewritePath(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ClientID">
      <MemberSignature Language="C#" Value="public override string ClientID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClientID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.ClientID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ClientID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ClientID { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientID : string" Usage="System.Web.UI.HtmlControls.HtmlForm.ClientID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> コントロールに対して [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] によって生成されるコントロール ID を取得します。</summary>
        <value>コントロールのによって[!INCLUDE[vstecasp](~/includes/vstecasp-md.md)]生成されるコントロール識別子。 <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コントロールの複数のインスタンスがレンダリングされるときに名前の[!INCLUDE[vstecasp](~/includes/vstecasp-md.md)]競合を防ぐため<xref:System.Web.UI.HtmlControls.HtmlForm.ClientID%2A> 、はページ上の各コントロールに対して一意の値を自動的に生成します。 詳細については、<xref:System.Web.UI.Control.ClientID%2A?displayProperty=nameWithType> プロパティを参照してください。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/45a8c3ef-5ac7-48f1-862a-0cd5073742e7">ASP.NET 制御 Id</related>
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.CreateControlCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlCollection () As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::ControlCollection ^ CreateControlCollection();" />
      <MemberSignature Language="F#" Value="override this.CreateControlCollection : unit -&gt; System.Web.UI.ControlCollection" Usage="htmlForm.CreateControlCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.ControlCollection" /> コントロールの新しい <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> コレクションを作成します。</summary>
        <returns><see cref="T:System.Web.UI.ControlCollection" /> コントロールの子サーバー コントロールを格納する <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.ControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="DefaultButton">
      <MemberSignature Language="C#" Value="public string DefaultButton { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultButton" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.DefaultButton" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultButton As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DefaultButton { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultButton : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlForm.DefaultButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Enter キーを押したときにポストバックの原因となる <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> コントロールの子コントロールを取得または設定します。</summary>
        <value><see cref="P:System.Web.UI.Control.ID" /> が読み込まれたときに既定のボタンとして表示されるボタン コントロールの <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />。 既定値は、空の文字列 ("") です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A>プロパティを使用すると、フォームの入力コントロール (テキストボックスなど) で enter キーを押すことにより、ユーザーがポストバックを発生させるように指定できます。 <xref:System.Web.UI.WebControls.IButtonControl>インターフェイスから派生したコントロール (コントロールを<xref:System.Web.UI.WebControls.LinkButton>除く) は、既定のボタンとして指定できます。 <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A>プロパティによって参照されているコントロールがから<xref:System.Web.UI.WebControls.IButtonControl>派生して<xref:System.InvalidOperationException>いない場合は、例外がスローされます。  
  
 マスターページを使用していて、 <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A>プロパティをコンテンツページから設定する場合は、 <xref:System.Web.UI.WebControls.IButtonControl>ボタンの<xref:System.Web.UI.Control.UniqueID%2A>プロパティを使用します。 マスターページの詳細については、「 [ASP.NET マスターページ](https://msdn.microsoft.com/library/4e53eedf-8304-4e7a-aed1-691a2623b28b)」を参照してください。  
  
 次のシナリオでは、プロパティがポストバックを発生させない可能性があります。<xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A>  
  
-   フォーカスがフォームの入力コントロールの外側にある場合は、ENTER キーを押します。 既定のポストバックアクションは、必ずしもトリガーされるとは限りません。  
  
-   複数行のテキストボックス内にフォーカスがあるときに ENTER キーを押すと、 複数行のテキストボックスで、ENTER キーを押すと、テキストボックスに新しい行が作成されることが予想される動作です。 一部のブラウザーでは、複数行のテキストボックス内で ENTER キーを押すとポストバックがトリガーされます。 その場合は、ENTER キーを押して新しい行を作成する場合は、JavaScript 関数を入力コントロールにアタッチします。 このスクリプトでは、ENTER キーをキャプチャし、ポストバックを停止する必要があります。 たとえば、 <xref:System.Web.UI.WebControls.WebControl.Attributes%2A>プロパティコレクションを使用して、 `onKeyPress`イベントのクライアントスクリプトを追加できます。  
  
-   コントロールを<xref:System.Web.UI.WebControls.LinkButton>既定のボタンとして指定します。 コントロール<xref:System.Web.UI.WebControls.Button> と<xref:System.Web.UI.WebControls.ImageButton>コントロールのみがサポートされています。  
  
-   非同期ポスト<xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A>バック中にプログラムによってプロパティを変更します。 ページに1つ<xref:System.Web.UI.UpdatePanel>以上のコントロールを追加することにより、非同期ポストバックを有効にすることができます。 詳細については、「 [UpdatePanel コントロールの概要](https://msdn.microsoft.com/library/29a2265d-9674-4c19-b70e-e5560ee9689a)」および「[部分ページレンダリングの概要](https://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49)」を参照してください。  
  
   
  
## Examples  
 次の例では、ポストバック<xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A>を発生させる既定のコントロールを設定するようにプロパティを設定する方法を示します。  
  
 [!code-aspx-csharp[HtmlForm.DefaultButton#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm.DefaultButton/CS/htmlform.defaultbuttoncs.aspx#1)]
 [!code-aspx-vb[HtmlForm.DefaultButton#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm.DefaultButton/VB/htmlform.defaultbuttonvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">既定のボタンとして参照されるコントロールの型は <see cref="T:System.Web.UI.WebControls.IButtonControl" /> ではありません。</exception>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus" />
        <altmember cref="P:System.Web.UI.Control.ID" />
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="T:System.Web.UI.WebControls.IButtonControl" />
        <related type="Article" href="https://msdn.microsoft.com/library/4e53eedf-8304-4e7a-aed1-691a2623b28b">ASP.NET マスターページの概要</related>
      </Docs>
    </Member>
    <Member MemberName="DefaultFocus">
      <MemberSignature Language="C#" Value="public string DefaultFocus { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultFocus" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultFocus As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DefaultFocus { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultFocus : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlForm.DefaultFocus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> コントロールが読み込まれたときに入力フォーカスのあるコントロールとして表示するフォーム上のコントロールを取得または設定します。</summary>
        <value><see cref="P:System.Web.UI.Control.ClientID" /> が読み込まれたときに入力フォーカスのあるコントロールとして表示するフォーム上のコントロールの <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />。 既定値は、空の文字列 ("") です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コントロールが読み込ま<xref:System.Web.UI.HtmlControls.HtmlForm>れるときに、入力フォーカスのあるコントロールとして表示するために、プロパティを使用してフォーム上のコントロールにアクセスします。<xref:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus%2A> 選択できるコントロールは、フォーカスがあることを示す視覚的な合図と共に表示されます。 たとえば、 <xref:System.Web.UI.WebControls.TextBox>フォーカスがあるコントロールは、挿入ポイントがその中に配置されて表示されます。  
  
 フォーカスを持つコントロールは、メソッド<xref:System.Web.UI.Control.Focus%2A>または<xref:System.Web.UI.Page.SetFocus%2A>メソッドを使用して設定することもできます。 これらのメソッドは、 <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus%2A>プロパティよりも優先されます。 これらのメソッドのいずれかを呼び出して、コントロールにフォーカスを設定すると、 <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus%2A>プロパティの値は無視されます。  
  
   
  
## Examples  
 フォームが読み込まれるときに、入力<xref:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus%2A>フォーカスのあるコントロールとしてフォーム上の指定したコントロールを表示するようにプロパティを設定する方法を次のコード例に示します。 レンダリング`Form1`時に、挿入ポイントがに`TextBox1`配置されていること`TextBox1`を確認します。これは、がフォーカスを持つコントロールであることを示します。  
  
 [!code-aspx-csharp[HtmlForm.DefaultButton#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm.DefaultButton/CS/htmlform.defaultbuttoncs.aspx#1)]
 [!code-aspx-vb[HtmlForm.DefaultButton#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm.DefaultButton/VB/htmlform.defaultbuttonvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.DefaultButton" />
        <altmember cref="P:System.Web.UI.Control.ID" />
        <altmember cref="M:System.Web.UI.Control.Focus" />
        <altmember cref="M:System.Web.UI.Page.SetFocus(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="Enctype">
      <MemberSignature Language="C#" Value="public string Enctype { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Enctype" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.Enctype" />
      <MemberSignature Language="VB.NET" Value="Public Property Enctype As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Enctype { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Enctype : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlForm.Enctype" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>フォーム データをサーバーにポストバックするときにブラウザーが使用するエンコードの種類を取得または設定します。</summary>
        <value>エンコードの種類を指定する文字列。 既定値は空の文字列 ("") です。ブラウザーの既定のコンテンツの種類が使用されていることを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlForm.Enctype%2A>プロパティを使用して、ブラウザーがデータをサーバーにポストバックするときに使用するエンコードの種類を指定します。  
  
 次の表は、一般的なエンコードの種類を示しています。  
  
|エンコードの種類|説明|  
|-------------------|-----------------|  
|application/x-www-form-urlencoded|フォームデータは、名前と値のペアとしてエンコードされます。 これは標準のエンコード形式です。|  
|マルチパート/フォーム-データ|フォームデータは、ページ上の各コントロールに対して個別の部分を持つメッセージとしてエンコードされます。|  
|テキスト/plain|フォームデータは、コントロールや書式設定文字を使用せずに、プレーンテキストでエンコードされます。|  
  
 エンコードの種類の詳細については、「 [World Wide Web コンソーシアム (W3C Web サイト](https://go.microsoft.com/fwlink/?linkid=37125))」を参照してください。  
  
   
  
## Examples  
 次のコード例は、 <xref:System.Web.UI.HtmlControls.HtmlForm.Enctype%2A>プロパティを使用して、ブラウザーがデータをサーバーに送信するときに使用するエンコードの種類を指定する方法を示しています。  
  
 [!code-aspx-csharp[HtmlForm#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm/CS/htmlformcs.aspx#1)]
 [!code-aspx-vb[HtmlForm#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm/VB/htmlformvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.Method" />
      </Docs>
    </Member>
    <Member MemberName="Method">
      <MemberSignature Language="C#" Value="public string Method { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Method" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.Method" />
      <MemberSignature Language="VB.NET" Value="Public Property Method As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Method { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Method : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlForm.Method" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ブラウザーが処理サーバーにフォーム データをポストバックする方法を示す値を取得または設定します。</summary>
        <value>ブラウザーがフォーム データをサーバーにポストバックする方法を指定する文字列。 既定値は <see langword="POST" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを使用して、ブラウザーが処理のためにフォームデータをサーバーに送信する方法を指定します。 すべてのブラウザーでサポートされている`GET` 2 `POST`つの一般的な方法は、とです。  
  
> [!CAUTION]
>  このプロパティの既定値をオーバーライドし、の`GET` `POST`代わりにメソッドを使用することができます。 ただし、要求`GET`に含めることができるデータ量が限られ`GET`ているため、メソッドを使用すると、ASP.NET ページフレームワークによって提供されるポストバックおよび状態管理機能が失敗する場合があります。  
  
   
  
## Examples  
 次のコード例は、 <xref:System.Web.UI.HtmlControls.HtmlForm.Method%2A>プロパティを使用して、フォームデータがサーバーにポストバックされることを指定する方法を示しています。  
  
 [!code-aspx-csharp[HtmlForm#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm/CS/htmlformcs.aspx#1)]
 [!code-aspx-vb[HtmlForm#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm/VB/htmlformvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.Enctype" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlForm.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> コントロールの識別名を取得します。</summary>
        <value><see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> の識別名を示す文字列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コントロールの一意の識別子名を決定するには、 <xref:System.Web.UI.HtmlControls.HtmlForm.Name%2A>プロパティを使用します。 <xref:System.Web.UI.HtmlControls.HtmlForm> この実装では、このプロパティを取得すると、 <xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A>プロパティの値が返されます。 ただし、プロパティを設定しても、プロパティに値は割り当てられません。 プロパティは<xref:System.Web.UI.HtmlControls.HtmlForm.Name%2A> <xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A>プロパティと同じ値である必要があるため、プロパティを設定しても、このプロパティに値は割り当てられません。  
  
> [!NOTE]
>  属性は、XHTML 準拠`xhtmlConformance`の属性ではなく、設定に関係なく ASP.NET によって表示されません。 `name`  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.UniqueID" />
        <related type="Article" href="https://msdn.microsoft.com/library/1b78d416-66bb-43a5-ac77-c703aab55b97">ASP.NET と XHTML のコンプライアンス</related>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="htmlForm.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Web.UI.Control.Init" /> コントロールの <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlForm.OnInit%2A>メソッドによって通知された場合、Web サーバーコントロールはインスタンスを作成および設定するために必要な初期化手順を実行する必要があります。 サーバーコントロールのライフサイクルのこの段階では、コントロールのビューステートはまだ設定されていません。 また、このメソッドが呼び出されたときに、このコントロールの子または親であるかどうかに関係なく、他のサーバーコントロールにアクセスすることはできません。 他のサーバーコントロールを作成し、アクセスできる状態にすることは保証されていません。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Web.UI.WebControls.GridView.OnInit%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 このメソッドは、主にコントロール<xref:System.Web.UI.HtmlControls.HtmlForm>の機能を拡張するコントロールの開発者によって使用されます。 <xref:System.Web.UI.HtmlControls.HtmlForm.OnInit%2A>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスの<see cref="M:System.Web.UI.HtmlControls.HtmlForm.OnInit(System.EventArgs)" />メソッドをオーバーライドする場合は、登録されているデリゲートが<see cref="M:System.Web.UI.HtmlControls.HtmlForm.OnInit(System.EventArgs)" />イベントを受け取るように、基本クラスのメソッドを呼び出す必要があります。 さらに、基本クラスの<see cref="M:System.Web.UI.HtmlControls.HtmlForm.OnInit(System.EventArgs)" />メソッドを呼び出す<see cref="T:System.Web.UI.HtmlControls.HtmlForm" />ことで、コントロールが Web ページフォームとして正しく設定され、ページのビューステートが永続化されます。</para></block>
        <altmember cref="M:System.Web.UI.Page.RegisterViewStateHandler" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="htmlForm.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Web.UI.Control.PreRender" /> コントロールの <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メソッドは、 <xref:System.Web.UI.HtmlControls.HtmlForm>コントロールを表示する直前に呼び出されます。 <xref:System.Web.UI.HtmlControls.HtmlForm.OnPreRender%2A> プロパティがに`true`設定されている<xref:System.Web.UI.HtmlControls.HtmlForm.OnPreRender%2A>場合、メソッドは、表示されるようにスマートナビゲーションスクリプトファイル参照を登録します。 <xref:System.Web.UI.Page.SmartNavigation%2A?displayProperty=nameWithType>  
  
> [!NOTE]
>  プロパティ<xref:System.Web.UI.Page.SmartNavigation%2A?displayProperty=nameWithType>は、ASP.NET バージョン2.0 では非推奨とされました。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Page.SmartNavigation" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (output As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ output);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="htmlForm.Render output" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="output">表示されたコンテンツを受け取る <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>指定した <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> オブジェクトに、<see cref="T:System.Web.UI.HtmlTextWriter" /> コントロールをレンダリングします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プロパティ<xref:System.Web.UI.HtmlControls.HtmlForm.Render%2A>がに<xref:System.Web.UI.Page.SmartNavigation%2A> `<iframe>` 設定されている場合、メソッドはHTML要素をレンダリングします。`true` メソッド<xref:System.Web.UI.HtmlControls.HtmlForm.Render%2A>は、基本<xref:System.Web.UI.Control.Render%2A>メソッドを呼び出します。  
  
 このメソッドは、主にコントロール<xref:System.Web.UI.HtmlControls.HtmlForm>の機能を拡張するコントロールの開発者によって使用されます。 <xref:System.Web.UI.HtmlControls.HtmlForm.Render%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> コントロールは、<see cref="T:System.Web.UI.Page" /> インスタンスへの参照がないと表示されません。</exception>
        <block subset="none" type="overrides"><para>派生クラスの<see cref="M:System.Web.UI.HtmlControls.HtmlForm.Render(System.Web.UI.HtmlTextWriter)" />メソッドをオーバーライドする場合は、 <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />コントロールの子コントロールが正しくレンダリング<see cref="M:System.Web.UI.HtmlControls.HtmlForm.Render(System.Web.UI.HtmlTextWriter)" />されるように、基本クラスのメソッドを呼び出す必要があります。</para></block>
        <altmember cref="T:System.Web.HttpException" />
        <altmember cref="P:System.Web.UI.Page.SmartNavigation" />
        <altmember cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderAttributes">
      <MemberSignature Language="C#" Value="protected override void RenderAttributes (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderAttributes(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderAttributes (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderAttributes(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderAttributes : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="htmlForm.RenderAttributes writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">表示されたコンテンツを受け取る <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary><see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> コントロールの属性を指定した <see cref="T:System.Web.UI.HtmlTextWriter" /> オブジェクトにレンダリングします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メソッドは、 <xref:System.Web.UI.HtmlTextWriter.IsValidFormAttribute%2A>メソッドを使用して<xref:System.Web.UI.HtmlControls.HtmlForm> 、コントロールの属性をチェックし、 `<form>` HTML 要素の開始タグにレンダリングできることを確認します。 <xref:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes%2A>  
  
 また、メソッド<xref:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes%2A>は、 <xref:System.Web.UI.HtmlControls.HtmlForm>コントロール`method`の`action`、、 `onsubmit`およびの各属性をレンダリングします。 <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A>プロパティで設定されたコントロール ID がインターフェイスを<xref:System.Web.UI.WebControls.IButtonControl>実装してい<xref:System.InvalidOperationException>ない場合は、例外がスローされます。  
  
 このメソッドは、主にコントロール<xref:System.Web.UI.HtmlControls.HtmlForm>の機能を拡張するコントロールの開発者によって使用されます。 <xref:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Web.UI.HtmlControls.HtmlForm.DefaultButton" /> プロパティに設定されたコントロール ID の型は <see cref="T:System.Web.UI.WebControls.IButtonControl" /> ではありません。</exception>
        <block subset="none" type="overrides"><para>派生クラスの<see cref="M:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes(System.Web.UI.HtmlTextWriter)" />メソッドをオーバーライドする場合は、必ず基底クラスの<see cref="M:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes(System.Web.UI.HtmlTextWriter)" />メソッドを呼び出して、 <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />コントロールの属性が正しくレンダリングされるようにしてください。</para></block>
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlControl.RenderAttributes(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.DefaultButton" />
        <altmember cref="T:System.Web.UI.WebControls.IButtonControl" />
        <altmember cref="T:System.InvalidOperationException" />
      </Docs>
    </Member>
    <Member MemberName="RenderChildren">
      <MemberSignature Language="C#" Value="protected internal override void RenderChildren (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderChildren(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.RenderChildren(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderChildren (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderChildren(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderChildren : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="htmlForm.RenderChildren writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">表示されたコンテンツを受け取る <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary><see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> コントロールの子コントロールを表示します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メソッド<xref:System.Web.UI.HtmlControls.HtmlForm.RenderChildren%2A>は、ブラウザーのフォーカスが<xref:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus%2A>プロパティで指定されたコントロールに設定されていることを確認するために、クライアントスクリプトをレンダリングします。  
  
> [!NOTE]
>  <xref:System.Web.UI.Page.SetFocus%2A?displayProperty=nameWithType>プロパティによって指定されたコントロールは、 <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus%2A>プロパティによって指定されたコントロールよりも優先されます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Web ページにはサーバー側の <see langword="&lt;form&gt;" /> タグが複数あります。</exception>
        <block subset="none" type="overrides"><para>派生クラスの<see cref="M:System.Web.UI.HtmlControls.HtmlForm.RenderChildren(System.Web.UI.HtmlTextWriter)" />メソッドをオーバーライドする場合は、 <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />コントロールの子コントロールが正しくレンダリング<see cref="M:System.Web.UI.HtmlControls.HtmlForm.RenderChildren(System.Web.UI.HtmlTextWriter)" />されるように、基本クラスのメソッドを呼び出す必要があります。</para></block>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus" />
        <altmember cref="M:System.Web.UI.Page.SetFocus(System.Web.UI.Control)" />
        <altmember cref="M:System.Web.UI.Control.Focus" />
      </Docs>
    </Member>
    <Member MemberName="RenderControl">
      <MemberSignature Language="C#" Value="public override void RenderControl (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RenderControl(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.RenderControl(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RenderControl (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RenderControl(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderControl : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="htmlForm.RenderControl writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="writer">フォーム コントロールの内容を受け取る <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>指定した <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> オブジェクトに、<see cref="T:System.Web.UI.HtmlTextWriter" /> コントロールをレンダリングします。</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para>派生クラスの<see cref="M:System.Web.UI.HtmlControls.HtmlForm.RenderControl(System.Web.UI.HtmlTextWriter)" />メソッドをオーバーライドする場合は、 <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />コントロールが正しくレンダリングされるよう<see cref="M:System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)" />に、基本クラスのメソッドを呼び出す必要があります。</para></block>
        <altmember cref="P:System.Web.UI.Control.DesignMode" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="SubmitDisabledControls">
      <MemberSignature Language="C#" Value="public virtual bool SubmitDisabledControls { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SubmitDisabledControls" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SubmitDisabledControls As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SubmitDisabledControls { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SubmitDisabledControls : bool with get, set" Usage="System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>クライアント側で無効なコントロールにその値を強制的に送信させるかどうかを示すブール値を取得または設定します。これにより、ページがサーバーにポストバックされた後にコントロールがその値を保持できます。</summary>
        <value>クライアント側で無効になっているコントロールにその値を強制的に送信させる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls%2A>プロパティを使用して、ページがポストバックされたときにクライアントで無効にしたコントロールの値を送信するかどうかを指定します。 これにより、ページがサーバーにポストバックされた後に、無効になっているコントロールに値を保持させることができます。 プロパティがに`false`設定されている場合、クライアントスクリプトを使用して無効にされたフォーム上のコントロールは、次回ページがポストバックされたときにサーバーに送信されません。 <xref:System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls%2A> その結果、無効にしたコントロールによって格納された値はすべて失われます。 ページがサーバーにポストバックされた後に、無効にしたコントロールの値を<xref:System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls%2A>保持できる`true`ようにするには、プロパティをに設定します。  
  
   
  
## Examples  
 次のコード例は、フォームの<xref:System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls%2A>プロパティをに`true`設定して、ページがサーバーにポストバックされた後、クライアントスクリプトによって無効にされたコントロールが値を保持するようにする方法を示しています。 この例では、 <xref:System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls%2A>プロパティをに`false`設定し、**[ポストバック]** をクリックすると、html テキストボックス内のテキストが失われ、html チェックボックスはオフになります。  
  
 [!code-aspx-csharp[HtmlForm.SubmitDisabledControls#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm.SubmitDisabledControls/CS/htmlform.submitdisabledcontrolscs.aspx#1)]
 [!code-aspx-vb[HtmlForm.SubmitDisabledControls#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm.SubmitDisabledControls/VB/htmlform.submitdisabledcontrolsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public string Target { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Target" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.Target" />
      <MemberSignature Language="VB.NET" Value="Public Property Target As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Target { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Target : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlForm.Target" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>サーバーにポストバックされた情報の結果を表示するフレームまたはウィンドウを取得または設定します。</summary>
        <value>サーバーにポストバックされた情報の結果を表示するブラウザーのウィンドウまたはフレーム。 既定値は空の文字列 ("") です。フォーカスのあるウィンドウまたはフレームが更新されます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlForm.Target%2A>プロパティを使用して、サーバーにポストされた情報の結果を表示する対象のウィンドウまたはフレームを指定します。 サーバーにポストされた情報の結果をリダイレクトすることは、高度なタスクです。 このプロパティを単にポストバックするために使用することはお勧めできません。  
  
> [!NOTE]
>  プロパティ<xref:System.Web.UI.HtmlControls.HtmlForm.Target%2A>は、 `target`属性としてレンダリングされます。 要素`target` の`form`属性は、XHTML 1.1 では許可されていません。 したがって、レンダリングされたマークアップが XHTML 標準に準拠している必要がある場合、 <xref:System.Web.UI.HtmlControls.HtmlForm.Target%2A>またはアクセシビリティ標準に準拠している必要がある場合は、プロパティを設定しないでください。 詳細については、「 [Visual studio での XHTML 標準」および「ASP.NET](https://msdn.microsoft.com/library/1b78d416-66bb-43a5-ac77-c703aab55b97) 」および「 [visual studio と ASP.NET のアクセシビリティ](https://msdn.microsoft.com/library/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13)」を参照してください。  
  
 値<xref:System.Web.UI.HtmlControls.HtmlForm.Target%2A>は、アンダースコアで始まる次の特殊な値を除き、a ~ Z の範囲の文字で始まる必要があります (大文字と小文字は区別されません)。  
  
|対象の値|説明|  
|------------------|-----------------|  
|`_blank`|フレームなしの新しいウィンドウに内容を表示します。|  
|`_parent`|直前のフレームセットの親に内容を表示します。|  
|`_search`|検索ペインに内容を表示します。|  
|`_self`|フォーカスのあるフレームに内容を表示します。|  
|`_top`|最大化されたフレームなしのウィンドウに内容を表示します。|  
  
> [!NOTE]
>  ブラウザーのドキュメントを参照して、`_search` 値がサポートされているかどうか確認してください。  たとえば、Microsoft Internet Explorer 5.0 以降では `_search` ターゲット値がサポートされています。  
  
   
  
## Examples  
 次のコード例は、 <xref:System.Web.UI.HtmlControls.HtmlForm.Target%2A>プロパティを使用して、サーバーにポストバックされた情報の結果を表示するための新しいフレームなしのウィンドウを指定する方法を示しています。  
  
 [!code-aspx-csharp[HtmlFormTarget#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlFormTarget/CS/htmlformtargetcs.aspx#1)]
 [!code-aspx-vb[HtmlFormTarget#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlFormTarget/VB/htmlformtargetvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/1b78d416-66bb-43a5-ac77-c703aab55b97">ASP.NET と XHTML のコンプライアンス</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13">Visual Studio 2010 および ASP.NET 4 のユーザー補助機能</related>
      </Docs>
    </Member>
    <Member MemberName="UniqueID">
      <MemberSignature Language="C#" Value="public override string UniqueID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UniqueID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.UniqueID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property UniqueID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ UniqueID { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UniqueID : string" Usage="System.Web.UI.HtmlControls.HtmlForm.UniqueID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> コントロールに割り当てられた一意のプログラム ID を取得します。</summary>
        <value><see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> コントロールに割り当てられた一意のプログラム ID。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コントロールに割り当てられた一意のプログラム id を取得するには、 <xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A>プロパティを使用します。 <xref:System.Web.UI.HtmlControls.HtmlForm> このプロパティは、カスタムサーバーコントロールなど、ページ以外の実装されたオブジェクトに<xref:System.Web.UI.INamingContainer>コントロールが含まれている場合に、基本実装をオーバーライドして定数値を返します。 名前付けコンテナーがページの場合は、 <xref:System.Web.UI.HtmlControls.HtmlForm>コントロールの<xref:System.Web.UI.Control.ID%2A>プロパティの値が返されます。  
  
 <xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A> プロパティ<xref:System.Web.UI.HtmlControls.HtmlForm.Name%2A>とプロパティは、常に同じ値を返します。 これは、コントロールの<xref:System.Web.UI.HtmlControls.HtmlForm> <xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A>プロパティと<xref:System.Web.UI.HtmlControls.HtmlForm.Name%2A>プロパティを同じにする<xref:System.Web.UI.HtmlControls.HtmlForm>必要があるブラウザーでコントロールをレンダリングする場合に便利です。 これらのプロパティ<xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A>の同期を維持<xref:System.Web.UI.HtmlControls.HtmlForm.Name%2A>するために、プロパティは常にプロパティの値を返します。  
  
> [!NOTE]
>  `name`属性は XHTML 準拠の属性ではなく、既定では ASP.NET によってレンダリングされません。  
  
   
  
## Examples  
 次のコード例は、 <xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A>プロパティを使用して、 <xref:System.Web.UI.HtmlControls.HtmlForm>コントロールの一意の識別子を取得する方法を示しています。  
  
 [!code-aspx-csharp[HtmlForm.UniqueID#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm.UniqueID/CS/htmlform.uniqueidcs.aspx#1)]
 [!code-aspx-vb[HtmlForm.UniqueID#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm.UniqueID/VB/htmlform.uniqueidvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.Name" />
        <related type="Article" href="https://msdn.microsoft.com/library/1b78d416-66bb-43a5-ac77-c703aab55b97">ASP.NET と XHTML のコンプライアンス</related>
      </Docs>
    </Member>
  </Members>
</Type>
