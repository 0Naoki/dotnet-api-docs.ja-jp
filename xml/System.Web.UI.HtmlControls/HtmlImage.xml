<Type Name="HtmlImage" FullName="System.Web.UI.HtmlControls.HtmlImage">
  <Metadata><Meta Name="ms.openlocfilehash" Value="348db57bee57b71fd1bea67732fa0994568e4241" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70542693" /></Metadata><TypeSignature Language="C#" Value="public class HtmlImage : System.Web.UI.HtmlControls.HtmlControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HtmlImage extends System.Web.UI.HtmlControls.HtmlControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.HtmlControls.HtmlImage" />
  <TypeSignature Language="VB.NET" Value="Public Class HtmlImage&#xA;Inherits HtmlControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class HtmlImage : System::Web::UI::HtmlControls::HtmlControl" />
  <TypeSignature Language="F#" Value="type HtmlImage = class&#xA;    inherit HtmlControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.HtmlControls.HtmlControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.ControlBuilder(typeof(System.Web.UI.HtmlControls.HtmlEmptyTagControlBuilder))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.Web.UI.ControlBuilder(typeof(System.Web.UI.HtmlControls.HtmlControlBuilder))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>サーバーの HTML <see langword="&lt;img&gt;" /> 要素へのプログラムによるアクセスを可能にします。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコントロールを使用して、Web ページ上にイメージを表示します。 <xref:System.Web.UI.HtmlControls.HtmlImage>コントロールをプログラムで操作して、表示されるイメージ、イメージのサイズ、およびイメージの配置を他のページ要素と比較して変更できます。  
  
 の<xref:System.Web.UI.HtmlControls.HtmlImage>インスタンスの初期プロパティ値の一覧につい<xref:System.Web.UI.HtmlControls.HtmlImage.%23ctor%2A>ては、コンストラクターを参照してください。  
  
   
  
## Examples  
 をクリックし<xref:System.Web.UI.HtmlControls.HtmlImage> <xref:System.Web.UI.HtmlControls.HtmlButton>たときにコントロールのプロパティをプログラムで変更する方法を次のコード例に示します。  
  
 [!code-aspx-csharp[Classic HtmlImage Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HtmlImage Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic HtmlImage Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HtmlImage Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlControl" />
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlButton" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlImage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlImage.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HtmlImage();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.HtmlControls.HtmlImage" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンストラクターを使用して、 <xref:System.Web.UI.HtmlControls.HtmlImage>クラスの新しいインスタンスを作成し、初期化します。  
  
 次の表は、の<xref:System.Web.UI.HtmlControls.HtmlImage>インスタンスの初期プロパティ値を示しています。  
  
|プロパティ|初期値|  
|--------------|-------------------|  
|<xref:System.Web.UI.HtmlControls.HtmlControl.TagName%2A>|"Img" リテラル文字列。|  
  
   
  
## Examples  
 次のコード例は、 <xref:System.Web.UI.HtmlControls.HtmlImage>コントロールの新しいインスタンスを作成して初期化する方法を示しています。  
  
 [!code-aspx-csharp[HtmlImageCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlImageCtor/CS/htmlimagectorcs.aspx#1)]
 [!code-aspx-vb[HtmlImageCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlImageCtor/VB/htmlimagectorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Align">
      <MemberSignature Language="C#" Value="public string Align { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Align" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlImage.Align" />
      <MemberSignature Language="VB.NET" Value="Public Property Align As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Align { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Align : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlImage.Align" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Web ページ上の他の要素を基準としてイメージの配置を取得または設定します。</summary>
        <value>Web ページ上の他の要素を基準としてイメージの配置を指定する文字列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを使用して、Web ページ上の他の要素に対するイメージの配置を指定します。  
  
 次の表は、使用可能な値を示しています。  
  
|[値]|説明|  
|-----------|-----------------|  
|左へ|イメージは Web ページの左側に揃えて並べられます。|  
|点|イメージは Web ページの中央に配置されます。|  
|右|イメージは Web ページの右側にアラインされます。|  
|[top]|Web ページ内の他の要素は、イメージの上端に合わせて調整されます。|  
|途中|Web ページ内の他の要素は、イメージの中央に揃えられます。|  
|下|Web ページ内の他の要素は、イメージの下端に合わせて調整されます。|  
  
> [!NOTE]
>  中央の値は、すべてのブラウザーで動作しない可能性があります。 画像を中央に配置するに<xref:System.Web.UI.HtmlControls.HtmlImage>は、属性が`align` (`<p align= "center">`) に`"center"`設定されている段落タグ内にコントロールをラップします。  
  
   
  
## Examples  
 次のコード例は、 <xref:System.Web.UI.HtmlControls.HtmlImage.Align%2A>プロパティを使用して、Web ページ上のイメージの配置を指定する方法を示しています。  
  
 [!code-aspx-csharp[Classic HtmlImage.Align Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HtmlImage.Align Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic HtmlImage.Align Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HtmlImage.Align Example/VB/sourcevb.aspx#1)]  
  
 次のコード例は、属性が<xref:System.Web.UI.HtmlControls.HtmlImage> `align`に`"center"`設定された段落タグ内にコントロールをラップすることで、Web ページ上のイメージを中央揃えにする方法を示しています。  
  
 [!code-aspx-csharp[Classic HtmlImage.Align Example#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HtmlImage.Align Example/CS/source2cs.aspx#2)]
 [!code-aspx-vb[Classic HtmlImage.Align Example#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HtmlImage.Align Example/VB/source2vb.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Alt">
      <MemberSignature Language="C#" Value="public string Alt { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Alt" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlImage.Alt" />
      <MemberSignature Language="VB.NET" Value="Public Property Alt As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Alt { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Alt : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlImage.Alt" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>イメージが使用できない場合またはダウンロード中である場合に、ブラウザーが表示する代替キャプションを取得または設定します。</summary>
        <value>イメージが使用できない場合にブラウザーが使用する代替キャプションの文字列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを使用して、 <xref:System.Web.UI.HtmlControls.HtmlImage.Src%2A>プロパティで指定されたイメージが使用できないときに表示されるキャプションを指定します。 新しいブラウザーでは、このキャプションもツールヒントとして表示されます。  
  
   
  
## Examples  
 プロパティを使用<xref:System.Web.UI.HtmlControls.HtmlImage.Alt%2A>し<xref:System.Web.UI.HtmlControls.HtmlImage.Src%2A>て、プロパティで指定されたイメージが使用できない場合に表示するキャプションを指定する方法を次のコード例に示します。  
  
 [!code-aspx-csharp[Classic HtmlImage.Border Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HtmlImage.Border Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic HtmlImage.Border Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HtmlImage.Border Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlImage.Src" />
      </Docs>
    </Member>
    <Member MemberName="Border">
      <MemberSignature Language="C#" Value="public int Border { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Border" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlImage.Border" />
      <MemberSignature Language="VB.NET" Value="Public Property Border As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Border { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Border : int with get, set" Usage="System.Web.UI.HtmlControls.HtmlImage.Border" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>イメージのフレームの幅を取得または設定します。</summary>
        <value>イメージのフレームの幅 (ピクセル単位)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを使用して、イメージの幅 (ピクセル単位) を指定してフレームを作成します。  
  
   
  
## Examples  
 次のコード例は、 <xref:System.Web.UI.HtmlControls.HtmlImage.Border%2A>プロパティを使用して、 <xref:System.Web.UI.HtmlControls.HtmlImage>コントロールの幅が5ピクセルのフレームを指定する方法を示しています。  
  
 [!code-aspx-csharp[Classic HtmlImage.Border Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HtmlImage.Border Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic HtmlImage.Border Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HtmlImage.Border Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public int Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Height" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlImage.Height" />
      <MemberSignature Language="VB.NET" Value="Public Property Height As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Height { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Height : int with get, set" Usage="System.Web.UI.HtmlControls.HtmlImage.Height" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(100)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>イメージの高さを取得または設定します。</summary>
        <value>イメージの高さ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プロパティ<xref:System.Web.UI.HtmlControls.HtmlImage.Height%2A> と <xref:System.Web.UI.HtmlControls.HtmlImage.Width%2A> プロパティは、次の2つの方法で使用できます。 プロパティ<xref:System.Web.UI.HtmlControls.HtmlImage.Height%2A> と <xref:System.Web.UI.HtmlControls.HtmlImage.Width%2A> プロパティを使用して、イメージサイズの仕様をブラウザーに送信できます。 これにより、ブラウザーでは、イメージの読み込み時にページ上の要素の位置を再計算する必要がなくなるため、Web ページがより速く表示されます。  
  
 また、プロパティ<xref:System.Web.UI.HtmlControls.HtmlImage.Height%2A>と<xref:System.Web.UI.HtmlControls.HtmlImage.Width%2A>プロパティを使用して、イメージのサイズを変更することもできます。 イメージの物理サイズとは異なる値を使用すると、それに応じてイメージのサイズが変更されます。 ただし、イメージの拡大縮小には、ページの表示に時間がかかるため、この方法は推奨されません。 代わりに、イメージのサイズを必要なサイズに物理的に変更します。  
  
 既定では、 <xref:System.Web.UI.HtmlControls.HtmlImage.Height%2A>プロパティはピクセル単位で表されますが、ウィンドウのサイズに対する割合として表すこともできます。  
  
   
  
## Examples  
 次のコード例は、 <xref:System.Web.UI.HtmlControls.HtmlImage.Height%2A>プロパティを使用して、表示されるイメージの高さをプログラムによって変更する方法を示しています。  
  
 [!code-aspx-csharp[Classic HtmlImage.Height Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HtmlImage.Height Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic HtmlImage.Height Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HtmlImage.Height Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlImage.Width" />
      </Docs>
    </Member>
    <Member MemberName="RenderAttributes">
      <MemberSignature Language="C#" Value="protected override void RenderAttributes (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderAttributes(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlImage.RenderAttributes(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderAttributes (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderAttributes(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderAttributes : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="htmlImage.RenderAttributes writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">クライアントに表示する出力ストリームを格納している <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary><see cref="T:System.Web.UI.HtmlControls.HtmlImage" /> コントロールの属性を指定した <see cref="T:System.Web.UI.HtmlTextWriter" /> オブジェクトにレンダリングします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlImage.Src%2A>プロパティの値が正しくない形式の URL の場合、 <xref:System.Web.UI.HtmlControls.HtmlImage.RenderAttributes%2A>メソッドは例外<xref:System.Web.HttpException>をスローします。  
  
 メソッド<xref:System.Web.UI.HtmlControls.HtmlImage.RenderAttributes%2A>は、 `src`描画<xref:System.Web.UI.HtmlControls.HtmlImage.RenderAttributes%2A> さ <xref:System.Web.UI.HtmlControls.HtmlImage> れたコントロールの属性を書き込むために、基底クラスのメソッドをオーバーライドします。  
  
 このメソッドは、主にコントロール<xref:System.Web.UI.HtmlControls.HtmlImage>の機能を拡張するコントロールの開発者によって使用されます。 <xref:System.Web.UI.HtmlControls.HtmlImage.RenderAttributes%2A>  
  
   
  
## Examples  
 次のコード例は、ツールヒントと<xref:System.Web.UI.HtmlControls.HtmlImage.RenderAttributes%2A>してアクセスできる特定の代替テキストが常に<xref:System.Web.UI.HtmlControls.HtmlImage>コントロールと共に表示されるように、カスタムサーバーコントロールのメソッドをオーバーライドする方法を示しています。  
  
 [!code-aspx-csharp[CustomHtmlImageRenderAttributes#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlImageRenderAttributes/CS/custom_htmlimage_renderattributescs.aspx#1)]
 [!code-aspx-vb[CustomHtmlImageRenderAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlImageRenderAttributes/VB/custom_htmlimage_renderattributesvb.aspx#1)]  
  
 [!code-csharp[CustomHtmlImageRenderAttributes#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlImageRenderAttributes/CS/custom_htmlimage_renderattributes.cs#2)]
 [!code-vb[CustomHtmlImageRenderAttributes#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlImageRenderAttributes/VB/custom_htmlimage_renderattributes.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><see cref="P:System.Web.UI.HtmlControls.HtmlImage.Src" /> プロパティには正しくない形式の URL が格納されています。</exception>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlImage.Src" />
      </Docs>
    </Member>
    <Member MemberName="Src">
      <MemberSignature Language="C#" Value="public string Src { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Src" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlImage.Src" />
      <MemberSignature Language="VB.NET" Value="Public Property Src As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Src { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Src : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlImage.Src" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>表示するイメージ ファイルのソースを取得または設定します。</summary>
        <value>表示するイメージ ファイルのパスを示す文字列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを使用して、表示するイメージファイルのパスを指定します。 イメージファイルが、それを使用する Web ページのソースファイルと同じディレクトリにある場合は、ファイル名を指定するだけで済みます。 それ以外の場合は、ファイルへのパスも含める必要があります。 パスは、絶対パスでも、Web ページソースファイルが格納されているディレクトリからの相対パスでもかまいません。 相対パス " `~/` " を使用して、ページが配置されている現在の仮想ディレクトリを参照できます。 たとえば、"xsptest <xref:System.Web.UI.HtmlControls.HtmlImage.Src%2A> " `<img runat="server" src="~/abc/d.gif">`仮想ディレクトリ内のページののの値は`<img src="/XspText/abc/d.gif">`です。  
  
   
  
## Examples  
 次のコード例は、 <xref:System.Web.UI.HtmlControls.HtmlImage.Src%2A>プロパティを使用して、Web ページソースファイルと同じディレクトリに表示するイメージファイルを指定する方法を示しています。  
  
 [!code-aspx-csharp[Classic HtmlImage.Src Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HtmlImage.Src Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic HtmlImage.Src Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HtmlImage.Src Example/VB/sourcevb.aspx#1)]  
  
 次のコード例は、 <xref:System.Web.UI.HtmlControls.HtmlImage.Src%2A>プロパティを使用して、Web ページソースファイルとは別のディレクトリに表示するイメージファイルを指定する方法を示しています。  
  
 [!code-aspx-csharp[Classic HtmlImage.Src Example#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HtmlImage.Src Example/CS/source2cs.aspx#2)]
 [!code-aspx-vb[Classic HtmlImage.Src Example#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HtmlImage.Src Example/VB/source2vb.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public int Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Width" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlImage.Width" />
      <MemberSignature Language="VB.NET" Value="Public Property Width As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Width { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Width : int with get, set" Usage="System.Web.UI.HtmlControls.HtmlImage.Width" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(100)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>イメージの幅を取得または設定します。</summary>
        <value>イメージの幅。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プロパティ<xref:System.Web.UI.HtmlControls.HtmlImage.Height%2A> と <xref:System.Web.UI.HtmlControls.HtmlImage.Width%2A> プロパティは、次の2つの方法で使用できます。 プロパティ<xref:System.Web.UI.HtmlControls.HtmlImage.Height%2A> と <xref:System.Web.UI.HtmlControls.HtmlImage.Width%2A> プロパティを使用して、イメージサイズの仕様をブラウザーに送信できます。 これにより、ブラウザーでは、イメージの読み込み時にページ上の要素の位置を再計算する必要がなくなるため、Web ページがより速く表示されます。  
  
 また、プロパティ<xref:System.Web.UI.HtmlControls.HtmlImage.Height%2A>と<xref:System.Web.UI.HtmlControls.HtmlImage.Width%2A>プロパティを使用して、イメージのサイズを変更することもできます。 イメージの物理サイズとは異なる値を使用すると、それに応じてイメージのサイズが変更されます。 ただし、イメージの拡大縮小には、ページの表示に時間がかかるため、この方法は推奨されません。 代わりに、イメージのサイズを必要なサイズに物理的に変更します。  
  
 既定では、 <xref:System.Web.UI.HtmlControls.HtmlImage.Width%2A>プロパティはピクセル単位で表されますが、ウィンドウサイズに対する割合として表すこともできます。  
  
   
  
## Examples  
 次のコード例は、プロパティを使用<xref:System.Web.UI.HtmlControls.HtmlImage.Width%2A>して、表示されるイメージの幅をプログラムで変更する方法を示しています。  
  
 [!code-aspx-csharp[Classic HtmlImage.Height Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HtmlImage.Height Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic HtmlImage.Height Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HtmlImage.Height Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlImage.Height" />
      </Docs>
    </Member>
  </Members>
</Type>
