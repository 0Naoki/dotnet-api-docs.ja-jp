<Type Name="JsonReaderOptions" FullName="System.Text.Json.JsonReaderOptions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="310bd7377754e942d407f3a215dfefb98fe69ed3" /><Meta Name="ms.sourcegitcommit" Value="406d23aba879fbb482c6da0f64c8ef9494f6a944" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="07/31/2019" /><Meta Name="ms.locfileid" Value="68686125" /></Metadata><TypeSignature Language="C#" Value="public struct JsonReaderOptions" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit JsonReaderOptions extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Text.Json.JsonReaderOptions" />
  <TypeSignature Language="VB.NET" Value="Public Structure JsonReaderOptions" />
  <TypeSignature Language="C++ CLI" Value="public value class JsonReaderOptions" />
  <TypeSignature Language="F#" Value="type JsonReaderOptions = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Json</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="064d1-101">JSON の読み取り時にカスタム動作を定義する機能をユーザーに提供します。</span><span class="sxs-lookup"><span data-stu-id="064d1-101">Provides the ability for the user to define custom behavior when reading JSON.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AllowTrailingCommas">
      <MemberSignature Language="C#" Value="public bool AllowTrailingCommas { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowTrailingCommas" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.JsonReaderOptions.AllowTrailingCommas" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowTrailingCommas As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowTrailingCommas { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowTrailingCommas : bool with get, set" Usage="System.Text.Json.JsonReaderOptions.AllowTrailingCommas" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Runtime.CompilerServices.IsReadOnly</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="064d1-102">読み取られる JSON ペイロード内でオブジェクトまたは配列の JSON 値の一覧の終わりにある余分なコンマが許可 (および無視) されるかどうかを定義する値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="064d1-102">Gets or sets a value that defines whether an extra comma at the end of a list of JSON values in an object or array is allowed (and ignored) within the JSON payload being read.</span></span></summary>
        <value><span data-ttu-id="064d1-103"><see langword="true" />exra コンマが許可される場合は。それ以外<see langword="false" />の場合は。</span><span class="sxs-lookup"><span data-stu-id="064d1-103"><see langword="true" /> if an exra comma is allowed; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="064d1-104">既定では、このプロパティはに`false` <xref:System.Text.Json.JsonException>設定され、末尾のコンマが見つかった場合はがスローされます。</span><span class="sxs-lookup"><span data-stu-id="064d1-104">By default, this property is set to `false`, and a <xref:System.Text.Json.JsonException> is thrown if a trailing comma is encountered.</span></span>

            ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommentHandling">
      <MemberSignature Language="C#" Value="public System.Text.Json.JsonCommentHandling CommentHandling { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Text.Json.JsonCommentHandling CommentHandling" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.JsonReaderOptions.CommentHandling" />
      <MemberSignature Language="VB.NET" Value="Public Property CommentHandling As JsonCommentHandling" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Json::JsonCommentHandling CommentHandling { System::Text::Json::JsonCommentHandling get(); void set(System::Text::Json::JsonCommentHandling value); };" />
      <MemberSignature Language="F#" Value="member this.CommentHandling : System.Text.Json.JsonCommentHandling with get, set" Usage="System.Text.Json.JsonReaderOptions.CommentHandling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Runtime.CompilerServices.IsReadOnly</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Json.JsonCommentHandling</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="064d1-105">JSON データを読み取るときに <see cref="T:System.Text.Json.Utf8JsonReader" /> がコメントを処理する方法を決定する値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="064d1-105">Gets or sets a value that determines how the <see cref="T:System.Text.Json.Utf8JsonReader" /> handles comments when reading through the JSON data.</span></span></summary>
        <value><span data-ttu-id="064d1-106">コメントの処理方法を示す列挙値の1つ。</span><span class="sxs-lookup"><span data-stu-id="064d1-106">One of the enumeration values that indicates how comments are handled.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="064d1-107">既定では、コメントが検出<xref:System.Text.Json.JsonException>された場合、リーダーはをスローします。</span><span class="sxs-lookup"><span data-stu-id="064d1-107">By default, the reader throws a <xref:System.Text.Json.JsonException> if it encounters a comment.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="064d1-108"><see cref="T:System.Text.Json.JsonCommentHandling" /> 列挙のメンバーではない値にプロパティを設定しようとしています。</span><span class="sxs-lookup"><span data-stu-id="064d1-108">The property is being set to a value that is not a member of the <see cref="T:System.Text.Json.JsonCommentHandling" /> enumeration.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MaxDepth">
      <MemberSignature Language="C#" Value="public int MaxDepth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxDepth" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.JsonReaderOptions.MaxDepth" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxDepth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxDepth { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxDepth : int with get, set" Usage="System.Text.Json.JsonReaderOptions.MaxDepth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Runtime.CompilerServices.IsReadOnly</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="064d1-109">JSON の読み取り時に許可される最大深度を取得または設定します。既定値 (つまり 0) は、最大深度が 64 であることを示します。</span><span class="sxs-lookup"><span data-stu-id="064d1-109">Gets or sets the maximum depth allowed when reading JSON, with the default (that is, 0) indicating a maximum depth of 64.</span></span></summary>
        <value><span data-ttu-id="064d1-110">JSON を読み取るときに許可される最大深度。</span><span class="sxs-lookup"><span data-stu-id="064d1-110">The maximum depth allowed when reading JSON.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="064d1-111">この深さを超えると、< 例外 cref = "T:System.Text.Json.JsonException > がスローされます。</span><span class="sxs-lookup"><span data-stu-id="064d1-111">Reading past this depth will throw a <exception cref="T:System.Text.Json.JsonException>.</span></span>

            ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="064d1-112">最大深度を負の値に設定しようとしています。</span><span class="sxs-lookup"><span data-stu-id="064d1-112">The maximum depth is being set to a negative value.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
