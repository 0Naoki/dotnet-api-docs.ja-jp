<Type Name="JsonElement" FullName="System.Text.Json.JsonElement">
  <Metadata><Meta Name="ms.openlocfilehash" Value="51a8c97865a204f94ca8138d8ace1990918286bb" /><Meta Name="ms.sourcegitcommit" Value="ef1f0c8985003a14413f66c3de381b8f3b6e4436" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/30/2019" /><Meta Name="ms.locfileid" Value="66380768" /></Metadata><TypeSignature Language="C#" Value="public struct JsonElement" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit JsonElement extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Text.Json.JsonElement" />
  <TypeSignature Language="VB.NET" Value="Public Structure JsonElement" />
  <TypeSignature Language="C++ CLI" Value="public value class JsonElement" />
  <TypeSignature Language="F#" Value="type JsonElement = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Json</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.IsReadOnly</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="3ec54-101"><see cref="T:System.Text.Json.JsonDocument" /> 内の特定の JSON 値を表します。</span><span class="sxs-lookup"><span data-stu-id="3ec54-101">Represents a specific JSON value within a <see cref="T:System.Text.Json.JsonDocument" />.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Text.Json.JsonElement Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Text.Json.JsonElement Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As JsonElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::Json::JsonElement Clone();" />
      <MemberSignature Language="F#" Value="member this.Clone : unit -&gt; System.Text.Json.JsonElement" Usage="jsonElement.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.JsonElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3ec54-102">元の <see cref="T:System.Text.Json.JsonDocument" /> の有効期間を超えて安全に格納できる JsonElement を取得します。</span><span class="sxs-lookup"><span data-stu-id="3ec54-102">Gets a JsonElement that can be safely stored beyond the lifetime of the original <see cref="T:System.Text.Json.JsonDocument" />.</span></span></summary>
        <returns><span data-ttu-id="3ec54-103">元の <see cref="T:System.Text.Json.JsonDocument" /> の有効期間を超えて安全に格納できる JsonElement。</span><span class="sxs-lookup"><span data-stu-id="3ec54-103">A JsonElement that can be safely stored beyond the lifetime of the original <see cref="T:System.Text.Json.JsonDocument" />.</span></span></returns>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="3ec54-104">かどうかこの JsonElement 自体が以前の呼び出しの出力`Clone`または前回の呼び出しの出力を別の JsonElement 内に含まれる値に`Clone`、このメソッドによって追加のメモリ割り当てはありません。</span><span class="sxs-lookup"><span data-stu-id="3ec54-104">If this JsonElement is itself the output of a previous call to `Clone` or a value contained within another JsonElement which was the output of a previous call to `Clone`, this method results in no additional memory allocation.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateArray">
      <MemberSignature Language="C#" Value="public System.Text.Json.JsonElement.ArrayEnumerator EnumerateArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Text.Json.JsonElement/ArrayEnumerator EnumerateArray() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.EnumerateArray" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateArray () As JsonElement.ArrayEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::Json::JsonElement::ArrayEnumerator EnumerateArray();" />
      <MemberSignature Language="F#" Value="member this.EnumerateArray : unit -&gt; System.Text.Json.JsonElement.ArrayEnumerator" Usage="jsonElement.EnumerateArray " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.JsonElement+ArrayEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3ec54-105">この JsonElement によって表される JSON 配列内の値を列挙する列挙子を取得します。</span><span class="sxs-lookup"><span data-stu-id="3ec54-105">Gets an enumerator to enumerate the values in the JSON array represented by this JsonElement.</span></span></summary>
        <returns><span data-ttu-id="3ec54-106">この JsonElement によって表される JSON 配列内の値を列挙する列挙子。</span><span class="sxs-lookup"><span data-stu-id="3ec54-106">An enumerator to enumerate the values in the JSON array represented by this JsonElement.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3ec54-107">この値の <see cref="P:System.Text.Json.JsonElement.Type" /> は <see cref="F:System.Text.Json.JsonValueType.Array" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="3ec54-107">This value's <see cref="P:System.Text.Json.JsonElement.Type" /> is not <see cref="F:System.Text.Json.JsonValueType.Array" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="3ec54-108">親 <see cref="T:System.Text.Json.JsonDocument" /> は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="3ec54-108">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateObject">
      <MemberSignature Language="C#" Value="public System.Text.Json.JsonElement.ObjectEnumerator EnumerateObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Text.Json.JsonElement/ObjectEnumerator EnumerateObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.EnumerateObject" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateObject () As JsonElement.ObjectEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::Json::JsonElement::ObjectEnumerator EnumerateObject();" />
      <MemberSignature Language="F#" Value="member this.EnumerateObject : unit -&gt; System.Text.Json.JsonElement.ObjectEnumerator" Usage="jsonElement.EnumerateObject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.JsonElement+ObjectEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3ec54-109">この JsonElement によって表される JSON オブジェクト内のプロパティを列挙する列挙子を取得します。</span><span class="sxs-lookup"><span data-stu-id="3ec54-109">Gets an enumerator to enumerate the properties in the JSON object represented by this JsonElement.</span></span></summary>
        <returns><span data-ttu-id="3ec54-110">この JsonElement によって表される JSON オブジェクト内のプロパティを列挙する列挙子。</span><span class="sxs-lookup"><span data-stu-id="3ec54-110">An enumerator to enumerate the properties in the JSON object represented by this JsonElement.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3ec54-111">この値の <see cref="P:System.Text.Json.JsonElement.Type" /> は <see cref="F:System.Text.Json.JsonValueType.Object" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="3ec54-111">This value's <see cref="P:System.Text.Json.JsonElement.Type" /> is not <see cref="F:System.Text.Json.JsonValueType.Object" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="3ec54-112">親 <see cref="T:System.Text.Json.JsonDocument" /> は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="3ec54-112">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetArrayLength">
      <MemberSignature Language="C#" Value="public int GetArrayLength ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetArrayLength() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.GetArrayLength" />
      <MemberSignature Language="VB.NET" Value="Public Function GetArrayLength () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetArrayLength();" />
      <MemberSignature Language="F#" Value="member this.GetArrayLength : unit -&gt; int" Usage="jsonElement.GetArrayLength " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3ec54-113">現在の配列値に含まれる値の数を取得します。</span><span class="sxs-lookup"><span data-stu-id="3ec54-113">Gets the number of values contained within the current array value.</span></span></summary>
        <returns><span data-ttu-id="3ec54-114">現在の配列値に含まれる値の数。</span><span class="sxs-lookup"><span data-stu-id="3ec54-114">The number of values contained within the current array value.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3ec54-115">この値の <see cref="P:System.Text.Json.JsonElement.Type" /> は <see cref="F:System.Text.Json.JsonValueType.Array" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="3ec54-115">This value's <see cref="P:System.Text.Json.JsonElement.Type" /> is not <see cref="F:System.Text.Json.JsonValueType.Array" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="3ec54-116">親 <see cref="T:System.Text.Json.JsonDocument" /> は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="3ec54-116">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetBoolean">
      <MemberSignature Language="C#" Value="public bool GetBoolean ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetBoolean() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.GetBoolean" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBoolean () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetBoolean();" />
      <MemberSignature Language="F#" Value="member this.GetBoolean : unit -&gt; bool" Usage="jsonElement.GetBoolean " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3ec54-117">要素の値を <see cref="T:System.Boolean" /> として取得します。</span><span class="sxs-lookup"><span data-stu-id="3ec54-117">Gets the value of the element as a <see cref="T:System.Boolean" />.</span></span></summary>
        <returns><span data-ttu-id="3ec54-118"><see cref="T:System.Boolean" /> としての要素の値。</span><span class="sxs-lookup"><span data-stu-id="3ec54-118">The value of the element as a <see cref="T:System.Boolean" />.</span></span></returns>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="3ec54-119">このメソッドは、JSON 文字列値の内容を解析できません。</span><span class="sxs-lookup"><span data-stu-id="3ec54-119">This method does not parse the contents of a JSON string value.</span></span>
          
          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3ec54-120">この値の <see cref="P:System.Text.Json.JsonElement.Type" /> が <see cref="F:System.Text.Json.JsonValueType.True" /> または <see cref="F:System.Text.Json.JsonValueType.False" /> のいずれでもありません。</span><span class="sxs-lookup"><span data-stu-id="3ec54-120">This value's <see cref="P:System.Text.Json.JsonElement.Type" /> is neither <see cref="F:System.Text.Json.JsonValueType.True" /> nor <see cref="F:System.Text.Json.JsonValueType.False" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="3ec54-121">親 <see cref="T:System.Text.Json.JsonDocument" /> は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="3ec54-121">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetDateTime">
      <MemberSignature Language="C#" Value="public DateTime GetDateTime ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTime GetDateTime() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.GetDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDateTime () As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime GetDateTime();" />
      <MemberSignature Language="F#" Value="member this.GetDateTime : unit -&gt; DateTime" Usage="jsonElement.GetDateTime " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3ec54-122">要素の値を <see cref="T:System.DateTime" /> として取得します。</span><span class="sxs-lookup"><span data-stu-id="3ec54-122">Gets the value of the element as a <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="3ec54-123"><see cref="T:System.DateTime" /> としての要素の値。</span><span class="sxs-lookup"><span data-stu-id="3ec54-123">The value of the element as a <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="3ec54-124">このメソッドは、JSON 文字列以外の値の DateTime 形式を作成できません。</span><span class="sxs-lookup"><span data-stu-id="3ec54-124">This method does not create a DateTime representation of values other than JSON strings.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3ec54-125">この値の <see cref="P:System.Text.Json.JsonElement.Type" /> は <see cref="F:System.Text.Json.JsonValueType.String" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="3ec54-125">This value's <see cref="P:System.Text.Json.JsonElement.Type" /> is not <see cref="F:System.Text.Json.JsonValueType.String" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="3ec54-126">値を <see cref="T:System.DateTime" /> として表すことはできません。</span><span class="sxs-lookup"><span data-stu-id="3ec54-126">The value cannot be represented as a <see cref="T:System.DateTime" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="3ec54-127">親 <see cref="T:System.Text.Json.JsonDocument" /> は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="3ec54-127">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetDateTimeOffset">
      <MemberSignature Language="C#" Value="public DateTimeOffset GetDateTimeOffset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTimeOffset GetDateTimeOffset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.GetDateTimeOffset" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDateTimeOffset () As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset GetDateTimeOffset();" />
      <MemberSignature Language="F#" Value="member this.GetDateTimeOffset : unit -&gt; DateTimeOffset" Usage="jsonElement.GetDateTimeOffset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3ec54-128">要素の値を <see cref="T:System.DateTimeOffset" /> として取得します。</span><span class="sxs-lookup"><span data-stu-id="3ec54-128">Gets the value of the element as a <see cref="T:System.DateTimeOffset" />.</span></span></summary>
        <returns><span data-ttu-id="3ec54-129"><see cref="T:System.DateTimeOffset" /> としての要素の値。</span><span class="sxs-lookup"><span data-stu-id="3ec54-129">The value of the element as a <see cref="T:System.DateTimeOffset" />.</span></span></returns>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="3ec54-130">このメソッドは、JSON 文字列以外の値の DateTimeOffset 表現を作成できません。</span><span class="sxs-lookup"><span data-stu-id="3ec54-130">This method does not create a DateTimeOffset representation of values other than JSON strings.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3ec54-131">この値の <see cref="P:System.Text.Json.JsonElement.Type" /> は <see cref="F:System.Text.Json.JsonValueType.String" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="3ec54-131">This value's <see cref="P:System.Text.Json.JsonElement.Type" /> is not <see cref="F:System.Text.Json.JsonValueType.String" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="3ec54-132">値を <see cref="T:System.DateTimeOffset" /> として表すことはできません。</span><span class="sxs-lookup"><span data-stu-id="3ec54-132">The value cannot be represented as a <see cref="T:System.DateTimeOffset" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="3ec54-133">親 <see cref="T:System.Text.Json.JsonDocument" /> は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="3ec54-133">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetDecimal">
      <MemberSignature Language="C#" Value="public decimal GetDecimal ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Decimal GetDecimal() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.GetDecimal" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDecimal () As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Decimal GetDecimal();" />
      <MemberSignature Language="F#" Value="member this.GetDecimal : unit -&gt; decimal" Usage="jsonElement.GetDecimal " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3ec54-134">現在の JSON 数値を <see cref="T:System.Decimal" /> として取得します。</span><span class="sxs-lookup"><span data-stu-id="3ec54-134">Gets the current JSON number as a <see cref="T:System.Decimal" />.</span></span></summary>
        <returns><span data-ttu-id="3ec54-135"><see cref="T:System.Decimal" /> としての現在の JSON 数値。</span><span class="sxs-lookup"><span data-stu-id="3ec54-135">The current JSON number as a <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format><![CDATA[
          
          This method does not parse the contents of a JSON string value.
          
          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3ec54-136">この値の <see cref="P:System.Text.Json.JsonElement.Type" /> は <see cref="F:System.Text.Json.JsonValueType.Number" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="3ec54-136">This value's <see cref="P:System.Text.Json.JsonElement.Type" /> is not <see cref="F:System.Text.Json.JsonValueType.Number" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="3ec54-137">値を <see cref="T:System.Decimal" /> として表すことはできません。</span><span class="sxs-lookup"><span data-stu-id="3ec54-137">The value cannot be represented as a <see cref="T:System.Decimal" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="3ec54-138">親 <see cref="T:System.Text.Json.JsonDocument" /> は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="3ec54-138">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetDouble">
      <MemberSignature Language="C#" Value="public double GetDouble ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 GetDouble() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.GetDouble" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDouble () As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double GetDouble();" />
      <MemberSignature Language="F#" Value="member this.GetDouble : unit -&gt; double" Usage="jsonElement.GetDouble " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3ec54-139">現在の JSON 数値を <see cref="T:System.Double" /> として取得します。</span><span class="sxs-lookup"><span data-stu-id="3ec54-139">Gets the current JSON number as a <see cref="T:System.Double" />.</span></span></summary>
        <returns><span data-ttu-id="3ec54-140"><see cref="T:System.Double" /> としての現在の JSON 数値。</span><span class="sxs-lookup"><span data-stu-id="3ec54-140">The current JSON number as a <see cref="T:System.Double" />.</span></span></returns>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="3ec54-141">このメソッドは、JSON 文字列値の内容を解析できません。</span><span class="sxs-lookup"><span data-stu-id="3ec54-141">This method does not parse the contents of a JSON string value.</span></span>
               
<span data-ttu-id="3ec54-142">.NET Core では、このメソッドが返されます<xref:System.Double.PositiveInfinity?displayProperty=nameWithType>より大きい値の<xref:System.Double.MaxValue?displayProperty=nameWithType>、返します<xref:System.Double.NegativeInfinity?displayProperty=nameWithType>より小さい値を<xref:System.Double.MinValue?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="3ec54-142">On .NET Core, this method returns <xref:System.Double.PositiveInfinity?displayProperty=nameWithType>  for values larger than <xref:System.Double.MaxValue?displayProperty=nameWithType>, and it returns <xref:System.Double.NegativeInfinity?displayProperty=nameWithType> for values smaller than <xref:System.Double.MinValue?displayProperty=nameWithType>.</span></span>
                 
               ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3ec54-143">この値の <see cref="P:System.Text.Json.JsonElement.Type" /> は <see cref="F:System.Text.Json.JsonValueType.Number" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="3ec54-143">This value's <see cref="P:System.Text.Json.JsonElement.Type" /> is not <see cref="F:System.Text.Json.JsonValueType.Number" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="3ec54-144">値を <see cref="T:System.Double" /> として表すことはできません。</span><span class="sxs-lookup"><span data-stu-id="3ec54-144">The value cannot be represented as a <see cref="T:System.Double" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="3ec54-145">親 <see cref="T:System.Text.Json.JsonDocument" /> は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="3ec54-145">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetGuid">
      <MemberSignature Language="C#" Value="public Guid GetGuid ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Guid GetGuid() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.GetGuid" />
      <MemberSignature Language="VB.NET" Value="Public Function GetGuid () As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Guid GetGuid();" />
      <MemberSignature Language="F#" Value="member this.GetGuid : unit -&gt; Guid" Usage="jsonElement.GetGuid " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3ec54-146">要素の値を <see cref="T:System.Guid" /> として取得します。</span><span class="sxs-lookup"><span data-stu-id="3ec54-146">Gets the value of the element as a <see cref="T:System.Guid" />.</span></span></summary>
        <returns><span data-ttu-id="3ec54-147"><see cref="T:System.Guid" /> としての要素の値。</span><span class="sxs-lookup"><span data-stu-id="3ec54-147">The value of the element as a <see cref="T:System.Guid" />.</span></span></returns>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="3ec54-148">このメソッドは、JSON 文字列以外の値の Guid の形式を作成できません。</span><span class="sxs-lookup"><span data-stu-id="3ec54-148">This method does not create a Guid representation of values other than JSON strings.</span></span>
    
          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3ec54-149">この値の <see cref="P:System.Text.Json.JsonElement.Type" /> は <see cref="F:System.Text.Json.JsonValueType.String" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="3ec54-149">This value's <see cref="P:System.Text.Json.JsonElement.Type" /> is not <see cref="F:System.Text.Json.JsonValueType.String" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="3ec54-150">値を <see cref="T:System.Guid" /> として表すことはできません。</span><span class="sxs-lookup"><span data-stu-id="3ec54-150">The value cannot be represented as a <see cref="T:System.Guid" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="3ec54-151">親 <see cref="T:System.Text.Json.JsonDocument" /> は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="3ec54-151">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt32">
      <MemberSignature Language="C#" Value="public int GetInt32 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetInt32() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.GetInt32" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInt32 () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetInt32();" />
      <MemberSignature Language="F#" Value="member this.GetInt32 : unit -&gt; int" Usage="jsonElement.GetInt32 " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3ec54-152">現在の JSON 数値を <see cref="T:System.Int32" /> として取得します。</span><span class="sxs-lookup"><span data-stu-id="3ec54-152">Gets the current JSON number as an <see cref="T:System.Int32" />.</span></span></summary>
        <returns><span data-ttu-id="3ec54-153"><see cref="T:System.Int32" /> としての現在の JSON 数値。</span><span class="sxs-lookup"><span data-stu-id="3ec54-153">The current JSON number as an <see cref="T:System.Int32" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3ec54-154">この値の <see cref="P:System.Text.Json.JsonElement.Type" /> は <see cref="F:System.Text.Json.JsonValueType.Number" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="3ec54-154">This value's <see cref="P:System.Text.Json.JsonElement.Type" /> is not <see cref="F:System.Text.Json.JsonValueType.Number" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="3ec54-155">値を <see cref="T:System.Int32" /> として表すことはできません。</span><span class="sxs-lookup"><span data-stu-id="3ec54-155">The value cannot be represented as an <see cref="T:System.Int32" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="3ec54-156">親 <see cref="T:System.Text.Json.JsonDocument" /> は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="3ec54-156">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt64">
      <MemberSignature Language="C#" Value="public long GetInt64 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 GetInt64() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.GetInt64" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInt64 () As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long GetInt64();" />
      <MemberSignature Language="F#" Value="member this.GetInt64 : unit -&gt; int64" Usage="jsonElement.GetInt64 " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3ec54-157">現在の JSON 数値を <see cref="T:System.Int64" /> として取得します。</span><span class="sxs-lookup"><span data-stu-id="3ec54-157">Gets the current JSON number as an <see cref="T:System.Int64" />.</span></span></summary>
        <returns><span data-ttu-id="3ec54-158"><see cref="T:System.Int64" /> としての現在の JSON 数値。</span><span class="sxs-lookup"><span data-stu-id="3ec54-158">The current JSON number as an <see cref="T:System.Int64" />.</span></span></returns>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="3ec54-159">このメソッドは、JSON 文字列値の内容を解析できません。</span><span class="sxs-lookup"><span data-stu-id="3ec54-159">This method does not parse the contents of a JSON string value.</span></span>
          
          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3ec54-160">この値の <see cref="P:System.Text.Json.JsonElement.Type" /> は <see cref="F:System.Text.Json.JsonValueType.Number" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="3ec54-160">This value's <see cref="P:System.Text.Json.JsonElement.Type" /> is not <see cref="F:System.Text.Json.JsonValueType.Number" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="3ec54-161">値を <see cref="T:System.Int64" /> として表すことはできません。</span><span class="sxs-lookup"><span data-stu-id="3ec54-161">The value cannot be represented as a <see cref="T:System.Int64" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="3ec54-162">親 <see cref="T:System.Text.Json.JsonDocument" /> は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="3ec54-162">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public System.Text.Json.JsonElement GetProperty (ReadOnlySpan&lt;byte&gt; utf8PropertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Text.Json.JsonElement GetProperty(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8PropertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.GetProperty(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperty (utf8PropertyName As ReadOnlySpan(Of Byte)) As JsonElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::Json::JsonElement GetProperty(ReadOnlySpan&lt;System::Byte&gt; utf8PropertyName);" />
      <MemberSignature Language="F#" Value="member this.GetProperty : ReadOnlySpan&lt;byte&gt; -&gt; System.Text.Json.JsonElement" Usage="jsonElement.GetProperty utf8PropertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.JsonElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8PropertyName" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="utf8PropertyName"><span data-ttu-id="3ec54-163">返されるプロパティの名前の UTF-8 表現 (バイト オーダー マーク (BOM) なし)。</span><span class="sxs-lookup"><span data-stu-id="3ec54-163">The UTF-8 representation (with no Byte-Order-Mark (BOM)) of the name of the property to return.</span></span></param>
        <summary><span data-ttu-id="3ec54-164"><paramref name="utf8PropertyName" /> によって識別される必須プロパティの値を表す <see cref="T:System.Text.Json.JsonElement" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="3ec54-164">Gets a <see cref="T:System.Text.Json.JsonElement" /> representing the value of a required property identified by <paramref name="utf8PropertyName" />.</span></span></summary>
        <returns><span data-ttu-id="3ec54-165">要求されたプロパティの値を表す <see cref="T:System.Text.Json.JsonElement" />。</span><span class="sxs-lookup"><span data-stu-id="3ec54-165">A <see cref="T:System.Text.Json.JsonElement" /> representing the value of the requested property.</span></span></returns>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="3ec54-166">一致するプロパティ名は、序数に基づく、大文字小文字の比較として実行されます。</span><span class="sxs-lookup"><span data-stu-id="3ec54-166">Property name matching is performed as an ordinal, case-sensitive comparison.</span></span>
               
<span data-ttu-id="3ec54-167">メソッドが最後に一致するプロパティが同じオブジェクトに対して複数回に定義されている場合このような定義です。</span><span class="sxs-lookup"><span data-stu-id="3ec54-167">If a property is defined multiple times for the same object, the method matches the last such definition.</span></span>
                 
               ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3ec54-168">この値の <see cref="P:System.Text.Json.JsonElement.Type" /> は <see cref="F:System.Text.Json.JsonValueType.Object" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="3ec54-168">This value's <see cref="P:System.Text.Json.JsonElement.Type" /> is not <see cref="F:System.Text.Json.JsonValueType.Object" />.</span></span></exception>
        <exception cref="T:System.Collections.Generic.KeyNotFoundException"><span data-ttu-id="3ec54-169">要求された名前のプロパティは見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="3ec54-169">No property was found with the requested name.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="3ec54-170">親 <see cref="T:System.Text.Json.JsonDocument" /> は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="3ec54-170">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public System.Text.Json.JsonElement GetProperty (ReadOnlySpan&lt;char&gt; propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Text.Json.JsonElement GetProperty(valuetype System.ReadOnlySpan`1&lt;char&gt; propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.GetProperty(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperty (propertyName As ReadOnlySpan(Of Char)) As JsonElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::Json::JsonElement GetProperty(ReadOnlySpan&lt;char&gt; propertyName);" />
      <MemberSignature Language="F#" Value="member this.GetProperty : ReadOnlySpan&lt;char&gt; -&gt; System.Text.Json.JsonElement" Usage="jsonElement.GetProperty propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.JsonElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="3ec54-171">値が返されるプロパティの名前。</span><span class="sxs-lookup"><span data-stu-id="3ec54-171">The name of the property whose value is to be returned.</span></span></param>
        <summary><span data-ttu-id="3ec54-172"><paramref name="propertyName" /> によって識別される必須プロパティの値を表す <see cref="T:System.Text.Json.JsonElement" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="3ec54-172">Gets a <see cref="T:System.Text.Json.JsonElement" /> representing the value of a required property identified by <paramref name="propertyName" />.</span></span></summary>
        <returns><span data-ttu-id="3ec54-173">要求されたプロパティの値を表す <see cref="T:System.Text.Json.JsonElement" />。</span><span class="sxs-lookup"><span data-stu-id="3ec54-173">A <see cref="T:System.Text.Json.JsonElement" /> representing the value of the requested property.</span></span></returns>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="3ec54-174">一致するプロパティ名は、序数に基づく、大文字小文字の比較として実行されます。</span><span class="sxs-lookup"><span data-stu-id="3ec54-174">Property name matching is performed as an ordinal, case-sensitive comparison.</span></span>
               
<span data-ttu-id="3ec54-175">メソッドが最後に一致するプロパティが同じオブジェクトに対して複数回に定義されている場合このような定義です。</span><span class="sxs-lookup"><span data-stu-id="3ec54-175">If a property is defined multiple times for the same object, the method matches the last such definition.</span></span>
                 
               ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3ec54-176">この値の <see cref="P:System.Text.Json.JsonElement.Type" /> は <see cref="F:System.Text.Json.JsonValueType.Object" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="3ec54-176">This value's <see cref="P:System.Text.Json.JsonElement.Type" /> is not <see cref="F:System.Text.Json.JsonValueType.Object" />.</span></span></exception>
        <exception cref="T:System.Collections.Generic.KeyNotFoundException"><span data-ttu-id="3ec54-177">要求された名前のプロパティは見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="3ec54-177">No property was found with the requested name.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="3ec54-178">親 <see cref="T:System.Text.Json.JsonDocument" /> は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="3ec54-178">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public System.Text.Json.JsonElement GetProperty (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Text.Json.JsonElement GetProperty(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.GetProperty(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperty (propertyName As String) As JsonElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::Json::JsonElement GetProperty(System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="member this.GetProperty : string -&gt; System.Text.Json.JsonElement" Usage="jsonElement.GetProperty propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.JsonElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="3ec54-179">値が返されるプロパティの名前。</span><span class="sxs-lookup"><span data-stu-id="3ec54-179">The name of the property whose value is to be returned.</span></span></param>
        <summary><span data-ttu-id="3ec54-180"><paramref name="propertyName" /> によって識別される必須プロパティの値を表す <see cref="T:System.Text.Json.JsonElement" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="3ec54-180">Gets a <see cref="T:System.Text.Json.JsonElement" /> representing the value of a required property identified by <paramref name="propertyName" />.</span></span></summary>
        <returns><span data-ttu-id="3ec54-181">要求されたプロパティの値を表す <see cref="T:System.Text.Json.JsonElement" />。</span><span class="sxs-lookup"><span data-stu-id="3ec54-181">A <see cref="T:System.Text.Json.JsonElement" /> representing the value of the requested property.</span></span></returns>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="3ec54-182">一致するプロパティ名は、序数に基づく、大文字小文字の比較として実行されます。</span><span class="sxs-lookup"><span data-stu-id="3ec54-182">Property name matching is performed as an ordinal, case-sensitive comparison.</span></span>
            
<span data-ttu-id="3ec54-183">メソッドが最後に一致するプロパティが同じオブジェクトに対して複数回に定義されている場合このような定義です。</span><span class="sxs-lookup"><span data-stu-id="3ec54-183">If a property is defined multiple times for the same object, the method matches the last such definition.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3ec54-184">この値の <see cref="P:System.Text.Json.JsonElement.Type" /> は <see cref="F:System.Text.Json.JsonValueType.Object" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="3ec54-184">This value's <see cref="P:System.Text.Json.JsonElement.Type" /> is not <see cref="F:System.Text.Json.JsonValueType.Object" />.</span></span></exception>
        <exception cref="T:System.Collections.Generic.KeyNotFoundException"><span data-ttu-id="3ec54-185">要求された名前のプロパティは見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="3ec54-185">No property was found with the requested name.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3ec54-186"><paramref name="propertyName" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="3ec54-186"><paramref name="propertyName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="3ec54-187">親 <see cref="T:System.Text.Json.JsonDocument" /> は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="3ec54-187">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetRawText">
      <MemberSignature Language="C#" Value="public string GetRawText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetRawText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.GetRawText" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRawText () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetRawText();" />
      <MemberSignature Language="F#" Value="member this.GetRawText : unit -&gt; string" Usage="jsonElement.GetRawText " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3ec54-188">この値を裏付ける元の入力データを表す文字列を取得します。</span><span class="sxs-lookup"><span data-stu-id="3ec54-188">Gets a string that represents the original input data backing this value.</span></span></summary>
        <returns><span data-ttu-id="3ec54-189">この値を裏付ける元の入力データ。</span><span class="sxs-lookup"><span data-stu-id="3ec54-189">The original input data backing this value.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="3ec54-190">親 <see cref="T:System.Text.Json.JsonDocument" /> は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="3ec54-190">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetSingle">
      <MemberSignature Language="C#" Value="public float GetSingle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float32 GetSingle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.GetSingle" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSingle () As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; float GetSingle();" />
      <MemberSignature Language="F#" Value="member this.GetSingle : unit -&gt; single" Usage="jsonElement.GetSingle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3ec54-191">現在の JSON 数値を <see cref="T:System.Single" /> として取得します。</span><span class="sxs-lookup"><span data-stu-id="3ec54-191">Gets the current JSON number as a <see cref="T:System.Single" />.</span></span></summary>
        <returns><span data-ttu-id="3ec54-192"><see cref="T:System.Single" /> としての現在の JSON 数値。</span><span class="sxs-lookup"><span data-stu-id="3ec54-192">The current JSON number as a <see cref="T:System.Single" />.</span></span></returns>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="3ec54-193">このメソッドは、JSON 文字列値の内容を解析できません。</span><span class="sxs-lookup"><span data-stu-id="3ec54-193">This method does not parse the contents of a JSON string value.</span></span>
               
<span data-ttu-id="3ec54-194">.NET Core では、このメソッドが返されます<xref:System.Single.PositiveInfinity?displayProperty=nameWithType>より大きい値の<xref:System.Single.MaxValue?displayProperty=nameWithType>と<xref:System.Single.NegativeInfinity?displayProperty=nameWithType>より小さい値を<xref:System.Single.MinValue?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="3ec54-194">On .NET Core, this method returns <xref:System.Single.PositiveInfinity?displayProperty=nameWithType> for values larger than <xref:System.Single.MaxValue?displayProperty=nameWithType> and <xref:System.Single.NegativeInfinity?displayProperty=nameWithType> for values smaller than <xref:System.Single.MinValue?displayProperty=nameWithType>.</span></span>
                 
               ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3ec54-195">この値の <see cref="P:System.Text.Json.JsonElement.Type" /> は <see cref="F:System.Text.Json.JsonValueType.Number" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="3ec54-195">This value's <see cref="P:System.Text.Json.JsonElement.Type" /> is not <see cref="F:System.Text.Json.JsonValueType.Number" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="3ec54-196">値を <see cref="T:System.Single" /> として表すことはできません。</span><span class="sxs-lookup"><span data-stu-id="3ec54-196">The value cannot be represented as a <see cref="T:System.Single" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="3ec54-197">親 <see cref="T:System.Text.Json.JsonDocument" /> は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="3ec54-197">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public string GetString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.GetString" />
      <MemberSignature Language="VB.NET" Value="Public Function GetString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetString();" />
      <MemberSignature Language="F#" Value="member this.GetString : unit -&gt; string" Usage="jsonElement.GetString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3ec54-198">要素の値を <see cref="T:System.String" /> として取得します。</span><span class="sxs-lookup"><span data-stu-id="3ec54-198">Gets the value of the element as a <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="3ec54-199"><see cref="T:System.String" /> としての要素の値。</span><span class="sxs-lookup"><span data-stu-id="3ec54-199">The value of the element as a <see cref="T:System.String" />.</span></span></returns>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="3ec54-200">このメソッドは、JSON 文字列以外の値の文字列表現を作成できません。</span><span class="sxs-lookup"><span data-stu-id="3ec54-200">This method does not create a string representation of values other than JSON strings.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3ec54-201">この値の <see cref="P:System.Text.Json.JsonElement.Type" /> が <see cref="F:System.Text.Json.JsonValueType.String" /> または <see cref="F:System.Text.Json.JsonValueType.Null" /> のいずれでもありません。</span><span class="sxs-lookup"><span data-stu-id="3ec54-201">This value's <see cref="P:System.Text.Json.JsonElement.Type" /> is neither <see cref="F:System.Text.Json.JsonValueType.String" /> nor <see cref="F:System.Text.Json.JsonValueType.Null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="3ec54-202">親 <see cref="T:System.Text.Json.JsonDocument" /> は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="3ec54-202">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetUInt32">
      <MemberSignature Language="C#" Value="public uint GetUInt32 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int32 GetUInt32() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.GetUInt32" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUInt32 () As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::UInt32 GetUInt32();" />
      <MemberSignature Language="F#" Value="member this.GetUInt32 : unit -&gt; uint32" Usage="jsonElement.GetUInt32 " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3ec54-203">現在の JSON 数値を <see cref="T:System.UInt32" /> として取得します。</span><span class="sxs-lookup"><span data-stu-id="3ec54-203">Gets the current JSON number as a <see cref="T:System.UInt32" />.</span></span></summary>
        <returns><span data-ttu-id="3ec54-204"><see cref="T:System.UInt32" /> としての現在の JSON 数値。</span><span class="sxs-lookup"><span data-stu-id="3ec54-204">The current JSON number as a <see cref="T:System.UInt32" />.</span></span></returns>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="3ec54-205">このメソッドは、JSON 文字列値の内容を解析できません。</span><span class="sxs-lookup"><span data-stu-id="3ec54-205">This method does not parse the contents of a JSON string value.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3ec54-206">この値の <see cref="P:System.Text.Json.JsonElement.Type" /> は <see cref="F:System.Text.Json.JsonValueType.Number" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="3ec54-206">This value's <see cref="P:System.Text.Json.JsonElement.Type" /> is not <see cref="F:System.Text.Json.JsonValueType.Number" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="3ec54-207">値を <see cref="T:System.UInt32" /> として表すことはできません。</span><span class="sxs-lookup"><span data-stu-id="3ec54-207">The value cannot be represented as a <see cref="T:System.UInt32" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="3ec54-208">親 <see cref="T:System.Text.Json.JsonDocument" /> は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="3ec54-208">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetUInt64">
      <MemberSignature Language="C#" Value="public ulong GetUInt64 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int64 GetUInt64() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.GetUInt64" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUInt64 () As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::UInt64 GetUInt64();" />
      <MemberSignature Language="F#" Value="member this.GetUInt64 : unit -&gt; uint64" Usage="jsonElement.GetUInt64 " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3ec54-209">現在の JSON 数値を <see cref="T:System.UInt64" /> として取得します。</span><span class="sxs-lookup"><span data-stu-id="3ec54-209">Gets the current JSON number as a <see cref="T:System.UInt64" />.</span></span></summary>
        <returns><span data-ttu-id="3ec54-210"><see cref="T:System.UInt64" /> としての現在の JSON 数値。</span><span class="sxs-lookup"><span data-stu-id="3ec54-210">The current JSON number as a <see cref="T:System.UInt64" />.</span></span></returns>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="3ec54-211">このメソッドは、JSON 文字列値の内容を解析できません。</span><span class="sxs-lookup"><span data-stu-id="3ec54-211">This method does not parse the contents of a JSON string value.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3ec54-212">この値の <see cref="P:System.Text.Json.JsonElement.Type" /> は <see cref="F:System.Text.Json.JsonValueType.Number" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="3ec54-212">This value's <see cref="P:System.Text.Json.JsonElement.Type" /> is not <see cref="F:System.Text.Json.JsonValueType.Number" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="3ec54-213">値を <see cref="T:System.UInt64" /> として表すことはできません。</span><span class="sxs-lookup"><span data-stu-id="3ec54-213">The value cannot be represented as a <see cref="T:System.UInt64" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="3ec54-214">親 <see cref="T:System.Text.Json.JsonDocument" /> は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="3ec54-214">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Text.Json.JsonElement this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Text.Json.JsonElement Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.JsonElement.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As JsonElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Json::JsonElement default[int] { System::Text::Json::JsonElement get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Text.Json.JsonElement" Usage="System.Text.Json.JsonElement.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.JsonElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary><span data-ttu-id="3ec54-215">現在の値が <see cref="F:System.Text.Json.JsonValueType.Array" /> の場合、指定されたインデックスの値を取得します。</span><span class="sxs-lookup"><span data-stu-id="3ec54-215">Gets the value at a specified index when the current value is an <see cref="F:System.Text.Json.JsonValueType.Array" />.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3ec54-216">この値の <see cref="P:System.Text.Json.JsonElement.Type" /> は <see cref="F:System.Text.Json.JsonValueType.Array" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="3ec54-216">This value's <see cref="P:System.Text.Json.JsonElement.Type" /> is not <see cref="F:System.Text.Json.JsonValueType.Array" />.</span></span></exception>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="3ec54-217"><paramref name="index" /> が [0, <see cref="M:System.Text.Json.JsonElement.GetArrayLength" />()) という範囲内にありません。</span><span class="sxs-lookup"><span data-stu-id="3ec54-217"><paramref name="index" /> is not in the range [0, <see cref="M:System.Text.Json.JsonElement.GetArrayLength" />()).</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="3ec54-218">親 <see cref="T:System.Text.Json.JsonDocument" /> は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="3ec54-218">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="jsonElement.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3ec54-219">値の型に適した現在の値の文字列表現を取得します。</span><span class="sxs-lookup"><span data-stu-id="3ec54-219">Gets a string representation for the current value appropriate to the value type.</span></span></summary>
        <returns><span data-ttu-id="3ec54-220">値の型に適した現在の値の文字列表現。</span><span class="sxs-lookup"><span data-stu-id="3ec54-220">A string representation for the current value appropriate to the value type.</span></span></returns>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="3ec54-221"><xref:System.Text.Json.JsonValueType.Null?displayProperty=nameWithType>、<xref:System.String.Empty?displayProperty=nameWithType>が返されます。</span><span class="sxs-lookup"><span data-stu-id="3ec54-221">For <xref:System.Text.Json.JsonValueType.Null?displayProperty=nameWithType>, <xref:System.String.Empty?displayProperty=nameWithType> is returned.</span></span>
               
<span data-ttu-id="3ec54-222"><xref:System.Text.Json.JsonValueType.True?displayProperty=nameWithType>、<xref:System.Boolean.TrueString?displayProperty=nameWithType>が返されます。</span><span class="sxs-lookup"><span data-stu-id="3ec54-222">For <xref:System.Text.Json.JsonValueType.True?displayProperty=nameWithType>, <xref:System.Boolean.TrueString?displayProperty=nameWithType> is returned.</span></span>
               
<span data-ttu-id="3ec54-223"><xref:System.Text.Json.JsonValueType.False?displayProperty=nameWithType>、<xref:System.Boolean.FalseString?displayProperty=nameWithType>が返されます。</span><span class="sxs-lookup"><span data-stu-id="3ec54-223">For <xref:System.Text.Json.JsonValueType.False?displayProperty=nameWithType>, <xref:System.Boolean.FalseString?displayProperty=nameWithType> is returned.</span></span>
               
<span data-ttu-id="3ec54-224"><xref:System.Text.Json.JsonValueType.String?displayProperty=nameWithType>の値<xref:System.Text.Json.JsonElement.GetString>が返されます。</span><span class="sxs-lookup"><span data-stu-id="3ec54-224">For <xref:System.Text.Json.JsonValueType.String?displayProperty=nameWithType>, the value of <xref:System.Text.Json.JsonElement.GetString> is returned.</span></span>
               
<span data-ttu-id="3ec54-225">値は、他の種類<xref:System.Text.Json.JsonElement.GetRawText>が返されます。</span><span class="sxs-lookup"><span data-stu-id="3ec54-225">For other types, the value of <xref:System.Text.Json.JsonElement.GetRawText> is returned.</span></span>
                 
               ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="3ec54-226">親 <see cref="T:System.Text.Json.JsonDocument" /> は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="3ec54-226">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryGetDateTime">
      <MemberSignature Language="C#" Value="public bool TryGetDateTime (out DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetDateTime([out] valuetype System.DateTime&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.TryGetDateTime(System.DateTime@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetDateTime (ByRef value As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetDateTime([Runtime::InteropServices::Out] DateTime % value);" />
      <MemberSignature Language="F#" Value="member this.TryGetDateTime :  -&gt; bool" Usage="jsonElement.TryGetDateTime value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" RefType="out" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="3ec54-227">このメソッドから戻るときに、現在の JSON 文字列と同等の日時の値が格納されます。</span><span class="sxs-lookup"><span data-stu-id="3ec54-227">When this method returns, contains the date and time value equivalent to the current JSON string.</span></span></param>
        <summary><span data-ttu-id="3ec54-228">現在の JSON 文字列を <see cref="T:System.DateTime" /> として表現しようと試みます。</span><span class="sxs-lookup"><span data-stu-id="3ec54-228">Attempts to represent the current JSON string as a <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="3ec54-229">文字列が <see cref="T:System.DateTime" /> として表現できる場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3ec54-229"><see langword="true" /> if the string can be represented as a <see cref="T:System.DateTime" />, <see langword="false" /> otherwise.</span></span></returns>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="3ec54-230">このメソッドは、JSON 文字列以外の値の DateTime 形式を作成できません。</span><span class="sxs-lookup"><span data-stu-id="3ec54-230">This method does not create a DateTime representation of values other than JSON strings.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3ec54-231">この値の <see cref="P:System.Text.Json.JsonElement.Type" /> は <see cref="F:System.Text.Json.JsonValueType.String" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="3ec54-231">This value's <see cref="P:System.Text.Json.JsonElement.Type" /> is not <see cref="F:System.Text.Json.JsonValueType.String" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="3ec54-232">親 <see cref="T:System.Text.Json.JsonDocument" /> は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="3ec54-232">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryGetDateTimeOffset">
      <MemberSignature Language="C#" Value="public bool TryGetDateTimeOffset (out DateTimeOffset value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetDateTimeOffset([out] valuetype System.DateTimeOffset&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.TryGetDateTimeOffset(System.DateTimeOffset@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetDateTimeOffset (ByRef value As DateTimeOffset) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetDateTimeOffset([Runtime::InteropServices::Out] DateTimeOffset % value);" />
      <MemberSignature Language="F#" Value="member this.TryGetDateTimeOffset :  -&gt; bool" Usage="jsonElement.TryGetDateTimeOffset value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTimeOffset" RefType="out" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="3ec54-233">このメソッドから戻るときに、現在の JSON 文字列と同等の日時が格納されます。</span><span class="sxs-lookup"><span data-stu-id="3ec54-233">When this method returns, contains the date and time equivalent to the current JSON string.</span></span></param>
        <summary><span data-ttu-id="3ec54-234">現在の JSON 文字列を <see cref="T:System.DateTimeOffset" /> として表現しようと試みます。</span><span class="sxs-lookup"><span data-stu-id="3ec54-234">Attempts to represent the current JSON string as a <see cref="T:System.DateTimeOffset" />.</span></span></summary>
        <returns><span data-ttu-id="3ec54-235">文字列が <see cref="T:System.DateTimeOffset" /> として表現できる場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3ec54-235"><see langword="true" /> if the string can be represented as a <see cref="T:System.DateTimeOffset" />, <see langword="false" /> otherwise.</span></span></returns>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="3ec54-236">このメソッドは、JSON 文字列以外の値の DateTimeOffset 表現を作成できません。</span><span class="sxs-lookup"><span data-stu-id="3ec54-236">This method does not create a DateTimeOffset representation of values other than JSON strings.</span></span>
          
          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3ec54-237">この値の <see cref="P:System.Text.Json.JsonElement.Type" /> は <see cref="F:System.Text.Json.JsonValueType.String" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="3ec54-237">This value's <see cref="P:System.Text.Json.JsonElement.Type" /> is not <see cref="F:System.Text.Json.JsonValueType.String" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="3ec54-238">親 <see cref="T:System.Text.Json.JsonDocument" /> は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="3ec54-238">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryGetDecimal">
      <MemberSignature Language="C#" Value="public bool TryGetDecimal (out decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetDecimal([out] valuetype System.Decimal&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.TryGetDecimal(System.Decimal@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetDecimal (ByRef value As Decimal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetDecimal([Runtime::InteropServices::Out] System::Decimal % value);" />
      <MemberSignature Language="F#" Value="member this.TryGetDecimal :  -&gt; bool" Usage="jsonElement.TryGetDecimal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" RefType="out" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="3ec54-239">このメソッドから戻るときに、現在の JSON 数値の 10 進数に相当するものが格納されます。</span><span class="sxs-lookup"><span data-stu-id="3ec54-239">When this method returns, contains the decimal equivalent of the current JSON number.</span></span></param>
        <summary><span data-ttu-id="3ec54-240">現在の JSON 数値を <see cref="T:System.Decimal" /> として表現しようと試みます。</span><span class="sxs-lookup"><span data-stu-id="3ec54-240">Attempts to represent the current JSON number as a <see cref="T:System.Decimal" />.</span></span></summary>
        <returns><span data-ttu-id="3ec54-241">数値が <see cref="T:System.Decimal" /> として表現できる場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3ec54-241"><see langword="true" /> if the number can be represented as a <see cref="T:System.Decimal" />, <see langword="false" /> otherwise.</span></span></returns>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="3ec54-242">このメソッドは、JSON 文字列値の内容を解析できません。</span><span class="sxs-lookup"><span data-stu-id="3ec54-242">This method does not parse the contents of a JSON string value.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3ec54-243">この値の <see cref="P:System.Text.Json.JsonElement.Type" /> は <see cref="F:System.Text.Json.JsonValueType.Number" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="3ec54-243">This value's <see cref="P:System.Text.Json.JsonElement.Type" /> is not <see cref="F:System.Text.Json.JsonValueType.Number" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="3ec54-244">親 <see cref="T:System.Text.Json.JsonDocument" /> は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="3ec54-244">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryGetDouble">
      <MemberSignature Language="C#" Value="public bool TryGetDouble (out double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetDouble([out] float64&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.TryGetDouble(System.Double@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetDouble (ByRef value As Double) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetDouble([Runtime::InteropServices::Out] double % value);" />
      <MemberSignature Language="F#" Value="member this.TryGetDouble :  -&gt; bool" Usage="jsonElement.TryGetDouble value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" RefType="out" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="3ec54-245">このメソッドから戻るときに、現在の JSON 数値と同等の倍精度浮動小数点値が格納されます。</span><span class="sxs-lookup"><span data-stu-id="3ec54-245">When this method returns, contains a double-precision floating point value equivalent to the current JSON number.</span></span></param>
        <summary><span data-ttu-id="3ec54-246">現在の JSON 数値を <see cref="T:System.Double" /> として表現しようと試みます。</span><span class="sxs-lookup"><span data-stu-id="3ec54-246">Attempts to represent the current JSON number as a <see cref="T:System.Double" />.</span></span></summary>
        <returns><span data-ttu-id="3ec54-247">数値が <see cref="T:System.Double" /> として表現できる場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3ec54-247"><see langword="true" /> if the number can be represented as a <see cref="T:System.Double" />, <see langword="false" /> otherwise.</span></span></returns>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="3ec54-248">このメソッドは、JSON 文字列値の内容を解析できません。</span><span class="sxs-lookup"><span data-stu-id="3ec54-248">This method does not parse the contents of a JSON string value.</span></span>
               
<span data-ttu-id="3ec54-249">.NET Core でこのメソッドが返さない`false`より大きい値の<xref:System.Double.MaxValue?displayProperty=nameWithType>またはそれより小さい<xref:System.Double.MinValue?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="3ec54-249">On .NET Core, this method does not return `false` for values larger than <xref:System.Double.MaxValue?displayProperty=nameWithType> or smaller than <xref:System.Double.MinValue?displayProperty=nameWithType>.</span></span> <span data-ttu-id="3ec54-250">代わりに、返します < langword を参照してください。 ="true > し、割り当てます<xref:System.Double.PositiveInfinity?displayProperty=nameWithType>または<xref:System.Double.NegativeInfinity?displayProperty=nameWithType>に`value`します。</span><span class="sxs-lookup"><span data-stu-id="3ec54-250">Instead, it returns <see langword="true> and assigns <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> or <xref:System.Double.NegativeInfinity?displayProperty=nameWithType> to `value`.</span></span>
                 
               ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3ec54-251">この値の <see cref="P:System.Text.Json.JsonElement.Type" /> は <see cref="F:System.Text.Json.JsonValueType.Number" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="3ec54-251">This value's <see cref="P:System.Text.Json.JsonElement.Type" /> is not <see cref="F:System.Text.Json.JsonValueType.Number" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="3ec54-252">親 <see cref="T:System.Text.Json.JsonDocument" /> は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="3ec54-252">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryGetGuid">
      <MemberSignature Language="C#" Value="public bool TryGetGuid (out Guid value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetGuid([out] valuetype System.Guid&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.TryGetGuid(System.Guid@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetGuid (ByRef value As Guid) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetGuid([Runtime::InteropServices::Out] Guid % value);" />
      <MemberSignature Language="F#" Value="member this.TryGetGuid :  -&gt; bool" Usage="jsonElement.TryGetGuid value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Guid" RefType="out" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="3ec54-253">このメソッドから戻るときに、現在の JSON 文字列と同等の GUID が格納されます。</span><span class="sxs-lookup"><span data-stu-id="3ec54-253">When this method returns, contains the GUID equivalent to the current JSON string.</span></span></param>
        <summary><span data-ttu-id="3ec54-254">現在の JSON 文字列を <see cref="T:System.Guid" /> として表現しようと試みます。</span><span class="sxs-lookup"><span data-stu-id="3ec54-254">Attempts to represent the current JSON string as a <see cref="T:System.Guid" />.</span></span></summary>
        <returns><span data-ttu-id="3ec54-255">文字列が <see cref="T:System.Guid" /> として表現できる場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3ec54-255"><see langword="true" /> if the string can be represented as a <see cref="T:System.Guid" />, <see langword="false" /> otherwise.</span></span></returns>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="3ec54-256">このメソッドは、JSON 文字列以外の値の Guid の形式を作成できません。</span><span class="sxs-lookup"><span data-stu-id="3ec54-256">This method does not create a Guid representation of values other than JSON strings.</span></span>
          
          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3ec54-257">この値の <see cref="P:System.Text.Json.JsonElement.Type" /> は <see cref="F:System.Text.Json.JsonValueType.String" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="3ec54-257">This value's <see cref="P:System.Text.Json.JsonElement.Type" /> is not <see cref="F:System.Text.Json.JsonValueType.String" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="3ec54-258">親 <see cref="T:System.Text.Json.JsonDocument" /> は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="3ec54-258">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryGetInt32">
      <MemberSignature Language="C#" Value="public bool TryGetInt32 (out int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetInt32([out] int32&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.TryGetInt32(System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetInt32 (ByRef value As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetInt32([Runtime::InteropServices::Out] int % value);" />
      <MemberSignature Language="F#" Value="member this.TryGetInt32 :  -&gt; bool" Usage="jsonElement.TryGetInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="3ec54-259">このメソッドから戻るときに、現在の JSON 数値と同等の 32 ビット整数値が格納されます。</span><span class="sxs-lookup"><span data-stu-id="3ec54-259">When this method returns, contains the 32-biut integer value equivalent to the current JSON number.</span></span></param>
        <summary><span data-ttu-id="3ec54-260">現在の JSON 数値を <see cref="T:System.Int32" /> として表現しようと試みます。</span><span class="sxs-lookup"><span data-stu-id="3ec54-260">Attempts to represent the current JSON number as an <see cref="T:System.Int32" />.</span></span></summary>
        <returns><span data-ttu-id="3ec54-261">数値を <see cref="T:System.Int32" /> として表現できる場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3ec54-261"><see langword="true" /> if the number can be represented as an <see cref="T:System.Int32" />, <see langword="false" /> otherwise.</span></span></returns>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="3ec54-262">このメソッドは、JSON 文字列値の内容を解析できません。</span><span class="sxs-lookup"><span data-stu-id="3ec54-262">This method does not parse the contents of a JSON string value.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3ec54-263">この値の <see cref="P:System.Text.Json.JsonElement.Type" /> は <see cref="F:System.Text.Json.JsonValueType.Number" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="3ec54-263">This value's <see cref="P:System.Text.Json.JsonElement.Type" /> is not <see cref="F:System.Text.Json.JsonValueType.Number" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="3ec54-264">親 <see cref="T:System.Text.Json.JsonDocument" /> は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="3ec54-264">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryGetInt64">
      <MemberSignature Language="C#" Value="public bool TryGetInt64 (out long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetInt64([out] int64&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.TryGetInt64(System.Int64@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetInt64 (ByRef value As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetInt64([Runtime::InteropServices::Out] long % value);" />
      <MemberSignature Language="F#" Value="member this.TryGetInt64 :  -&gt; bool" Usage="jsonElement.TryGetInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" RefType="out" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="3ec54-265">このメソッドから戻るときに、現在の JSON 数値と同等の 64 ビット整数値が格納されます。</span><span class="sxs-lookup"><span data-stu-id="3ec54-265">When this method returns, contains the 64-bit integer value equivalent to the current JSON number.</span></span></param>
        <summary><span data-ttu-id="3ec54-266">現在の JSON 数値を <see cref="T:System.Int64" /> として表現しようと試みます。</span><span class="sxs-lookup"><span data-stu-id="3ec54-266">Attempts to represent the current JSON number as a <see cref="T:System.Int64" />.</span></span></summary>
        <returns><span data-ttu-id="3ec54-267">数値が <see cref="T:System.Int64" /> として表現できる場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3ec54-267"><see langword="true" /> if the number can be represented as a <see cref="T:System.Int64" />, <see langword="false" /> otherwise.</span></span></returns>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="3ec54-268">このメソッドは、JSON 文字列値の内容を解析できません。</span><span class="sxs-lookup"><span data-stu-id="3ec54-268">This method does not parse the contents of a JSON string value.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3ec54-269">この値の <see cref="P:System.Text.Json.JsonElement.Type" /> は <see cref="F:System.Text.Json.JsonValueType.Number" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="3ec54-269">This value's <see cref="P:System.Text.Json.JsonElement.Type" /> is not <see cref="F:System.Text.Json.JsonValueType.Number" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="3ec54-270">親 <see cref="T:System.Text.Json.JsonDocument" /> は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="3ec54-270">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryGetProperty">
      <MemberSignature Language="C#" Value="public bool TryGetProperty (ReadOnlySpan&lt;byte&gt; utf8PropertyName, out System.Text.Json.JsonElement value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetProperty(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8PropertyName, [out] valuetype System.Text.Json.JsonElement&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.TryGetProperty(System.ReadOnlySpan{System.Byte},System.Text.Json.JsonElement@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetProperty (utf8PropertyName As ReadOnlySpan(Of Byte), ByRef value As JsonElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetProperty(ReadOnlySpan&lt;System::Byte&gt; utf8PropertyName, [Runtime::InteropServices::Out] System::Text::Json::JsonElement % value);" />
      <MemberSignature Language="F#" Value="member this.TryGetProperty : ReadOnlySpan&lt;byte&gt; *  -&gt; bool" Usage="jsonElement.TryGetProperty (utf8PropertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8PropertyName" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Text.Json.JsonElement" RefType="out" />
      </Parameters>
      <Docs>
        <param name="utf8PropertyName"><span data-ttu-id="3ec54-271">返されるプロパティの名前の UTF-8 (バイト オーダー マーク (BOM) なし) 表現。</span><span class="sxs-lookup"><span data-stu-id="3ec54-271">The UTF-8 (with no Byte-Order-Mark (BOM)) representation of the name of the property to return.</span></span></param>
        <param name="value"><span data-ttu-id="3ec54-272">特定されたプロパティの値を受け取ります。</span><span class="sxs-lookup"><span data-stu-id="3ec54-272">Receives the value of the located property.</span></span></param>
        <summary><span data-ttu-id="3ec54-273">現在のオブジェクトで <paramref name="utf8PropertyName" /> という名前のプロパティを探し、そのようなプロパティが存在するかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="3ec54-273">Looks for a property named <paramref name="utf8PropertyName" /> in the current object, returning a value that indicates whether or not such a property exists.</span></span> <span data-ttu-id="3ec54-274">プロパティが存在する場合、メソッドではその値を <paramref name="value" /> 引数に割り当てます。</span><span class="sxs-lookup"><span data-stu-id="3ec54-274">When the property exists, the method assigns its value to the <paramref name="value" /> argument.</span></span></summary>
        <returns><span data-ttu-id="3ec54-275">プロパティが見つかった場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3ec54-275"><see langword="true" /> if the property was found, <see langword="false" /> otherwise.</span></span></returns>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="3ec54-276">一致するプロパティ名は、序数に基づく、大文字小文字の比較として実行されます。</span><span class="sxs-lookup"><span data-stu-id="3ec54-276">Property name matching is performed as an ordinal, case-sensitive comparison.</span></span>
               
<span data-ttu-id="3ec54-277">メソッドが最後に一致するプロパティが同じオブジェクトに対して複数回に定義されている場合このような定義です。</span><span class="sxs-lookup"><span data-stu-id="3ec54-277">If a property is defined multiple times for the same object, the method matches the last such definition.</span></span>
                 
               ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3ec54-278">この値の <see cref="P:System.Text.Json.JsonElement.Type" /> は <see cref="F:System.Text.Json.JsonValueType.Object" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="3ec54-278">This value's <see cref="P:System.Text.Json.JsonElement.Type" /> is not <see cref="F:System.Text.Json.JsonValueType.Object" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="3ec54-279">親 <see cref="T:System.Text.Json.JsonDocument" /> は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="3ec54-279">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryGetProperty">
      <MemberSignature Language="C#" Value="public bool TryGetProperty (ReadOnlySpan&lt;char&gt; propertyName, out System.Text.Json.JsonElement value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetProperty(valuetype System.ReadOnlySpan`1&lt;char&gt; propertyName, [out] valuetype System.Text.Json.JsonElement&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.TryGetProperty(System.ReadOnlySpan{System.Char},System.Text.Json.JsonElement@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetProperty (propertyName As ReadOnlySpan(Of Char), ByRef value As JsonElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetProperty(ReadOnlySpan&lt;char&gt; propertyName, [Runtime::InteropServices::Out] System::Text::Json::JsonElement % value);" />
      <MemberSignature Language="F#" Value="member this.TryGetProperty : ReadOnlySpan&lt;char&gt; *  -&gt; bool" Usage="jsonElement.TryGetProperty (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="value" Type="System.Text.Json.JsonElement" RefType="out" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="3ec54-280">検索するプロパティの名前。</span><span class="sxs-lookup"><span data-stu-id="3ec54-280">The name of the property to find.</span></span></param>
        <param name="value"><span data-ttu-id="3ec54-281">このメソッドから戻るときに、指定したプロパティの値が格納されます。</span><span class="sxs-lookup"><span data-stu-id="3ec54-281">When this method returns, contains the value of the specified property.</span></span></param>
        <summary><span data-ttu-id="3ec54-282">現在のオブジェクトで <paramref name="propertyName" /> という名前のプロパティを探し、そのようなプロパティが存在するかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="3ec54-282">Looks for a property named <paramref name="propertyName" /> in the current object, returning a value that indicates whether or not such a property exists.</span></span> <span data-ttu-id="3ec54-283">プロパティが存在する場合、メソッドではその値を <paramref name="value" /> 引数に割り当てます。</span><span class="sxs-lookup"><span data-stu-id="3ec54-283">When the property exists, the method assigns its value to the <paramref name="value" /> argument.</span></span></summary>
        <returns><span data-ttu-id="3ec54-284">プロパティが見つかった場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3ec54-284"><see langword="true" /> if the property was found, <see langword="false" /> otherwise.</span></span></returns>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="3ec54-285">一致するプロパティ名は、序数に基づく、大文字小文字の比較として実行されます。</span><span class="sxs-lookup"><span data-stu-id="3ec54-285">Property name matching is performed as an ordinal, case-sensitive comparison.</span></span>
               
<span data-ttu-id="3ec54-286">メソッドが最後に一致するプロパティが同じオブジェクトに対して複数回に定義されている場合このような定義です。</span><span class="sxs-lookup"><span data-stu-id="3ec54-286">If a property is defined multiple times for the same object, the method matches the last such definition.</span></span>
                 
               ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3ec54-287">この値の <see cref="P:System.Text.Json.JsonElement.Type" /> は <see cref="F:System.Text.Json.JsonValueType.Object" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="3ec54-287">This value's <see cref="P:System.Text.Json.JsonElement.Type" /> is not <see cref="F:System.Text.Json.JsonValueType.Object" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="3ec54-288">親 <see cref="T:System.Text.Json.JsonDocument" /> は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="3ec54-288">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryGetProperty">
      <MemberSignature Language="C#" Value="public bool TryGetProperty (string propertyName, out System.Text.Json.JsonElement value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetProperty(string propertyName, [out] valuetype System.Text.Json.JsonElement&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.TryGetProperty(System.String,System.Text.Json.JsonElement@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetProperty (propertyName As String, ByRef value As JsonElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetProperty(System::String ^ propertyName, [Runtime::InteropServices::Out] System::Text::Json::JsonElement % value);" />
      <MemberSignature Language="F#" Value="member this.TryGetProperty : string *  -&gt; bool" Usage="jsonElement.TryGetProperty (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="value" Type="System.Text.Json.JsonElement" RefType="out" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="3ec54-289">検索するプロパティの名前。</span><span class="sxs-lookup"><span data-stu-id="3ec54-289">The name of the property to find.</span></span></param>
        <param name="value"><span data-ttu-id="3ec54-290">このメソッドから戻るときに、指定したプロパティの値が格納されます。</span><span class="sxs-lookup"><span data-stu-id="3ec54-290">When this method returns, contains the value of the specified property.</span></span></param>
        <summary><span data-ttu-id="3ec54-291">現在のオブジェクトで <paramref name="propertyName" /> という名前のプロパティを探し、そのようなプロパティが存在するかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="3ec54-291">Looks for a property named <paramref name="propertyName" /> in the current object, returning a value that indicates whether or not such a property exists.</span></span> <span data-ttu-id="3ec54-292">プロパティが存在する場合、その値は <paramref name="value" /> 引数に割り当てられています。</span><span class="sxs-lookup"><span data-stu-id="3ec54-292">When the property exists, its value is assigned to the <paramref name="value" /> argument.</span></span></summary>
        <returns><span data-ttu-id="3ec54-293">プロパティが見つかった場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3ec54-293"><see langword="true" /> if the property was found, <see langword="false" /> otherwise.</span></span></returns>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="3ec54-294">一致するプロパティ名は、序数に基づく、大文字小文字の比較として実行されます。</span><span class="sxs-lookup"><span data-stu-id="3ec54-294">Property name matching is performed as an ordinal, case-sensitive comparison.</span></span>
               
<span data-ttu-id="3ec54-295">メソッドが最後に一致するプロパティが同じオブジェクトに対して複数回に定義されている場合このような定義です。</span><span class="sxs-lookup"><span data-stu-id="3ec54-295">If a property is defined multiple times for the same object, the method matches the last such definition.</span></span>
                 
               ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3ec54-296">この値の <see cref="P:System.Text.Json.JsonElement.Type" /> は <see cref="F:System.Text.Json.JsonValueType.Object" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="3ec54-296">This value's <see cref="P:System.Text.Json.JsonElement.Type" /> is not <see cref="F:System.Text.Json.JsonValueType.Object" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3ec54-297"><paramref name="propertyName" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="3ec54-297"><paramref name="propertyName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="3ec54-298">親 <see cref="T:System.Text.Json.JsonDocument" /> は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="3ec54-298">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryGetSingle">
      <MemberSignature Language="C#" Value="public bool TryGetSingle (out float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetSingle([out] float32&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.TryGetSingle(System.Single@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetSingle (ByRef value As Single) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetSingle([Runtime::InteropServices::Out] float % value);" />
      <MemberSignature Language="F#" Value="member this.TryGetSingle :  -&gt; bool" Usage="jsonElement.TryGetSingle value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" RefType="out" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="3ec54-299">このメソッドから戻るときに、現在の JSON 数値と同等の単精度浮動小数点値が格納されます。</span><span class="sxs-lookup"><span data-stu-id="3ec54-299">When this method returns, contains the single-precision floating point value equivalent to the current JSON number.</span></span></param>
        <summary><span data-ttu-id="3ec54-300">現在の JSON 数値を <see cref="T:System.Single" /> として表現しようと試みます。</span><span class="sxs-lookup"><span data-stu-id="3ec54-300">Attempts to represent the current JSON number as a <see cref="T:System.Single" />.</span></span></summary>
        <returns><span data-ttu-id="3ec54-301">数値が <see cref="T:System.Single" /> として表現できる場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3ec54-301"><see langword="true" /> if the number can be represented as a <see cref="T:System.Single" />, <see langword="false" /> otherwise.</span></span></returns>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="3ec54-302">このメソッドは、JSON 文字列値の内容を解析できません。</span><span class="sxs-lookup"><span data-stu-id="3ec54-302">This method does not parse the contents of a JSON string value.</span></span>
               
<span data-ttu-id="3ec54-303">.NET Core では、このメソッドは返されません`false`より大きい値の<xref:System.Single.MaxValue?displayProperty=nameWithType>またはそれより小さい<xref:System.Single.MinValue?displayProperty=nameWithType>)。</span><span class="sxs-lookup"><span data-stu-id="3ec54-303">On .NET Core, this method does not return `false` for values larger than <xref:System.Single.MaxValue?displayProperty=nameWithType> or smaller than <xref:System.Single.MinValue?displayProperty=nameWithType>).</span></span> <span data-ttu-id="3ec54-304">代わりに、返します`false`割り当てます<xref:System.Single.PositiveInfinity?displayProperty=nameWithType>または<xref:System.Single.NegativeInfinity?displayProperty=nameWithType>を`value`引数。</span><span class="sxs-lookup"><span data-stu-id="3ec54-304">Instead, it returns `false` and assigns <xref:System.Single.PositiveInfinity?displayProperty=nameWithType> or <xref:System.Single.NegativeInfinity?displayProperty=nameWithType> to the `value` argument.</span></span>
                 
               ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3ec54-305">この値の <see cref="P:System.Text.Json.JsonElement.Type" /> は <see cref="F:System.Text.Json.JsonValueType.Number" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="3ec54-305">This value's <see cref="P:System.Text.Json.JsonElement.Type" /> is not <see cref="F:System.Text.Json.JsonValueType.Number" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="3ec54-306">親 <see cref="T:System.Text.Json.JsonDocument" /> は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="3ec54-306">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryGetUInt32">
      <MemberSignature Language="C#" Value="public bool TryGetUInt32 (out uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetUInt32([out] unsigned int32&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.TryGetUInt32(System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetUInt32 (ByRef value As UInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetUInt32([Runtime::InteropServices::Out] System::UInt32 % value);" />
      <MemberSignature Language="F#" Value="member this.TryGetUInt32 :  -&gt; bool" Usage="jsonElement.TryGetUInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="3ec54-307">このメソッドから戻るときに、現在の JSON 数値と同等の 32 ビット符号なし整数値が格納されます。</span><span class="sxs-lookup"><span data-stu-id="3ec54-307">When this method returns, contains unsigned 32-bit integer value equivalent to the current JSON number.</span></span></param>
        <summary><span data-ttu-id="3ec54-308">現在の JSON 数値を <see cref="T:System.UInt32" /> として表現しようと試みます。</span><span class="sxs-lookup"><span data-stu-id="3ec54-308">Attempts to represent the current JSON number as a <see cref="T:System.UInt32" />.</span></span></summary>
        <returns><span data-ttu-id="3ec54-309">数値が <see cref="T:System.UInt32" /> として表現できる場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3ec54-309"><see langword="true" /> if the number can be represented as a <see cref="T:System.UInt32" />, <see langword="false" /> otherwise.</span></span></returns>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="3ec54-310">このメソッドは、JSON 文字列値の内容を解析できません。</span><span class="sxs-lookup"><span data-stu-id="3ec54-310">This method does not parse the contents of a JSON string value.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3ec54-311">この値の <see cref="P:System.Text.Json.JsonElement.Type" /> は <see cref="F:System.Text.Json.JsonValueType.Number" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="3ec54-311">This value's <see cref="P:System.Text.Json.JsonElement.Type" /> is not <see cref="F:System.Text.Json.JsonValueType.Number" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="3ec54-312">親 <see cref="T:System.Text.Json.JsonDocument" /> は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="3ec54-312">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryGetUInt64">
      <MemberSignature Language="C#" Value="public bool TryGetUInt64 (out ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetUInt64([out] unsigned int64&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.TryGetUInt64(System.UInt64@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetUInt64 (ByRef value As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetUInt64([Runtime::InteropServices::Out] System::UInt64 % value);" />
      <MemberSignature Language="F#" Value="member this.TryGetUInt64 :  -&gt; bool" Usage="jsonElement.TryGetUInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" RefType="out" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="3ec54-313">このメソッドから戻るときに、現在の JSON 数値と同等の 64 ビット符号なし整数値が格納されます。</span><span class="sxs-lookup"><span data-stu-id="3ec54-313">When this method returns, contains unsigned 64-bit integer value equivalent to the current JSON number.</span></span></param>
        <summary><span data-ttu-id="3ec54-314">現在の JSON 数値を <see cref="T:System.UInt64" /> として表現しようと試みます。</span><span class="sxs-lookup"><span data-stu-id="3ec54-314">Attempts to represent the current JSON number as a <see cref="T:System.UInt64" />.</span></span></summary>
        <returns><span data-ttu-id="3ec54-315">数値が <see cref="T:System.UInt64" /> として表現できる場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3ec54-315"><see langword="true" /> if the number can be represented as a <see cref="T:System.UInt64" />, <see langword="false" /> otherwise.</span></span></returns>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="3ec54-316">このメソッドは、JSON 文字列値の内容を解析できません。</span><span class="sxs-lookup"><span data-stu-id="3ec54-316">This method does not parse the contents of a JSON string value.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3ec54-317">この値の <see cref="P:System.Text.Json.JsonElement.Type" /> は <see cref="F:System.Text.Json.JsonValueType.Number" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="3ec54-317">This value's <see cref="P:System.Text.Json.JsonElement.Type" /> is not <see cref="F:System.Text.Json.JsonValueType.Number" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="3ec54-318">親 <see cref="T:System.Text.Json.JsonDocument" /> は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="3ec54-318">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public System.Text.Json.JsonValueType Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Text.Json.JsonValueType Type" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.JsonElement.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As JsonValueType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Json::JsonValueType Type { System::Text::Json::JsonValueType get(); };" />
      <MemberSignature Language="F#" Value="member this.Type : System.Text.Json.JsonValueType" Usage="System.Text.Json.JsonElement.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.JsonValueType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3ec54-319">現在の JSON 要素の型を取得します。</span><span class="sxs-lookup"><span data-stu-id="3ec54-319">Gets the type of the current JSON element.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="3ec54-320">親 <see cref="T:System.Text.Json.JsonDocument" /> は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="3ec54-320">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAsProperty">
      <MemberSignature Language="C#" Value="public void WriteAsProperty (ReadOnlySpan&lt;byte&gt; utf8PropertyName, System.Text.Json.Utf8JsonWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteAsProperty(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8PropertyName, class System.Text.Json.Utf8JsonWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.WriteAsProperty(System.ReadOnlySpan{System.Byte},System.Text.Json.Utf8JsonWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteAsProperty (utf8PropertyName As ReadOnlySpan(Of Byte), writer As Utf8JsonWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteAsProperty(ReadOnlySpan&lt;System::Byte&gt; utf8PropertyName, System::Text::Json::Utf8JsonWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.WriteAsProperty : ReadOnlySpan&lt;byte&gt; * System.Text.Json.Utf8JsonWriter -&gt; unit" Usage="jsonElement.WriteAsProperty (utf8PropertyName, writer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8PropertyName" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" />
      </Parameters>
      <Docs>
        <param name="utf8PropertyName"><span data-ttu-id="3ec54-321">JSON オブジェクト内のこの値の名前を表す UTF-8 でエンコードされたテキスト。</span><span class="sxs-lookup"><span data-stu-id="3ec54-321">UTF8-encoded text that represents te name for this value within the JSON object.</span></span></param>
        <param name="writer"><span data-ttu-id="3ec54-322">ライター。</span><span class="sxs-lookup"><span data-stu-id="3ec54-322">The writer.</span></span></param>
        <summary><span data-ttu-id="3ec54-323">指定されたライターに、UTF8 でエンコードされたテキストで名前が定義されているオブジェクトのプロパティとして要素を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="3ec54-323">Writes the element to the provided writer as an object property whose name is defined by UTF8-encoded text.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3ec54-324">この値の <see cref="P:System.Text.Json.JsonElement.Type" /> は <see cref="F:System.Text.Json.JsonValueType.Undefined" /> です。</span><span class="sxs-lookup"><span data-stu-id="3ec54-324">This value's <see cref="P:System.Text.Json.JsonElement.Type" /> is <see cref="F:System.Text.Json.JsonValueType.Undefined" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="3ec54-325">親 <see cref="T:System.Text.Json.JsonDocument" /> は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="3ec54-325">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAsProperty">
      <MemberSignature Language="C#" Value="public void WriteAsProperty (ReadOnlySpan&lt;char&gt; propertyName, System.Text.Json.Utf8JsonWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteAsProperty(valuetype System.ReadOnlySpan`1&lt;char&gt; propertyName, class System.Text.Json.Utf8JsonWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.WriteAsProperty(System.ReadOnlySpan{System.Char},System.Text.Json.Utf8JsonWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteAsProperty (propertyName As ReadOnlySpan(Of Char), writer As Utf8JsonWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteAsProperty(ReadOnlySpan&lt;char&gt; propertyName, System::Text::Json::Utf8JsonWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.WriteAsProperty : ReadOnlySpan&lt;char&gt; * System.Text.Json.Utf8JsonWriter -&gt; unit" Usage="jsonElement.WriteAsProperty (propertyName, writer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="3ec54-326">JSON オブジェクト内でこの値の名前を指定する文字スパン。</span><span class="sxs-lookup"><span data-stu-id="3ec54-326">A character span that specifies the name for this value within the JSON object.</span></span></param>
        <param name="writer"><span data-ttu-id="3ec54-327">ライター。</span><span class="sxs-lookup"><span data-stu-id="3ec54-327">The writer.</span></span></param>
        <summary><span data-ttu-id="3ec54-328">指定されたライターに、指定した文字スパンで名前が定義されているオブジェクトのプロパティとして要素を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="3ec54-328">Writes the element to the provided writer as an object property whose name is defined by the specified character span.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3ec54-329">この値の <see cref="P:System.Text.Json.JsonElement.Type" /> は <see cref="F:System.Text.Json.JsonValueType.Undefined" /> です。</span><span class="sxs-lookup"><span data-stu-id="3ec54-329">This value's <see cref="P:System.Text.Json.JsonElement.Type" /> is <see cref="F:System.Text.Json.JsonValueType.Undefined" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="3ec54-330">親 <see cref="T:System.Text.Json.JsonDocument" /> は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="3ec54-330">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAsValue">
      <MemberSignature Language="C#" Value="public void WriteAsValue (System.Text.Json.Utf8JsonWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteAsValue(class System.Text.Json.Utf8JsonWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.WriteAsValue(System.Text.Json.Utf8JsonWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteAsValue (writer As Utf8JsonWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteAsValue(System::Text::Json::Utf8JsonWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.WriteAsValue : System.Text.Json.Utf8JsonWriter -&gt; unit" Usage="jsonElement.WriteAsValue writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="3ec54-331">ライター。</span><span class="sxs-lookup"><span data-stu-id="3ec54-331">The writer.</span></span></param>
        <summary><span data-ttu-id="3ec54-332">指定されたライターに値として要素を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="3ec54-332">Writes the element to the provided writer as a value.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3ec54-333">この値の <see cref="P:System.Text.Json.JsonElement.Type" /> は <see cref="F:System.Text.Json.JsonValueType.Undefined" /> です。</span><span class="sxs-lookup"><span data-stu-id="3ec54-333">This value's <see cref="P:System.Text.Json.JsonElement.Type" /> is <see cref="F:System.Text.Json.JsonValueType.Undefined" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="3ec54-334">親 <see cref="T:System.Text.Json.JsonDocument" /> は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="3ec54-334">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>